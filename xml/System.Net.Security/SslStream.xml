<Type Name="SslStream" FullName="System.Net.Security.SslStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c195ffe1742f2ccb8125803848840c7914fa9a96" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51324270" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SslStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SslStream extends System.Net.Security.AuthenticatedStream implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.SslStream" />
  <TypeSignature Language="VB.NET" Value="Public Class SslStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class SslStream : System::Net::Security::AuthenticatedStream" />
  <TypeSignature Language="F#" Value="type SslStream = class&#xA;    inherit AuthenticatedStream&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="1760a-101">提供一个用于客户端-服务器通信的流，该流使用安全套接字层 (SSL) 安全协议对服务器和（可选）客户端进行身份验证。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1760a-101">Provides a stream used for client-server communication that uses the Secure Socket Layer (SSL) security protocol to authenticate the server and optionally the client.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-102">SSL 协议帮助提供机密性和完整性检查传输使用的消息<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="1760a-102">SSL protocols help to provide confidentiality and integrity checking for messages transmitted using an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="1760a-103">SSL 连接，例如提供的<xref:System.Net.Security.SslStream>、 应时使用通信客户端和服务器之间的敏感信息。</span><span class="sxs-lookup"><span data-stu-id="1760a-103">An SSL connection, such as that provided by <xref:System.Net.Security.SslStream>, should be used when communicating sensitive information between a client and a server.</span></span> <span data-ttu-id="1760a-104">使用<xref:System.Net.Security.SslStream>有助于防止任何人读取和在网络上传输时被篡改的信息。</span><span class="sxs-lookup"><span data-stu-id="1760a-104">Using an <xref:System.Net.Security.SslStream> helps to prevent anyone from reading and tampering with information while it is in transit on the network.</span></span>  
  
 <span data-ttu-id="1760a-105"><xref:System.Net.Security.SslStream>实例将使用在创建时提供的流的数据传输<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="1760a-105">An <xref:System.Net.Security.SslStream> instance transmits data using a stream that you supply when creating the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="1760a-106">时提供此基础流，可以选择指定是否关闭<xref:System.Net.Security.SslStream>也会关闭基础流。</span><span class="sxs-lookup"><span data-stu-id="1760a-106">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.SslStream> also closes the underlying stream.</span></span> <span data-ttu-id="1760a-107">通常情况下，<xref:System.Net.Security.SslStream>类用于<xref:System.Net.Sockets.TcpClient>和<xref:System.Net.Sockets.TcpListener>类。</span><span class="sxs-lookup"><span data-stu-id="1760a-107">Typically, the <xref:System.Net.Security.SslStream> class is used with the <xref:System.Net.Sockets.TcpClient> and <xref:System.Net.Sockets.TcpListener> classes.</span></span> <span data-ttu-id="1760a-108"><xref:System.Net.Sockets.TcpClient.GetStream%2A>方法提供<xref:System.Net.Sockets.NetworkStream>适用于<xref:System.Net.Security.SslStream>类。</span><span class="sxs-lookup"><span data-stu-id="1760a-108">The <xref:System.Net.Sockets.TcpClient.GetStream%2A> method provides a <xref:System.Net.Sockets.NetworkStream> suitable for use with the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 <span data-ttu-id="1760a-109">在创建后<xref:System.Net.Security.SslStream>，必须进行身份验证服务器和客户端 （可选）。</span><span class="sxs-lookup"><span data-stu-id="1760a-109">After creating an <xref:System.Net.Security.SslStream>, the server and optionally, the client must be authenticated.</span></span> <span data-ttu-id="1760a-110">服务器必须提供 X509 证书建立其标识的证明，并可以请求客户端也执行该操作。</span><span class="sxs-lookup"><span data-stu-id="1760a-110">The server must provide an X509 certificate that establishes proof of its identity and can request that the client also do so.</span></span> <span data-ttu-id="1760a-111">使用信息在传输之前，必须执行身份验证<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="1760a-111">Authentication must be performed before transmitting information using an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="1760a-112">客户端启动身份验证使用同步<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>方法，阻止，直到完成身份验证，或异步<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>方法，不会阻止等待身份验证完成。</span><span class="sxs-lookup"><span data-stu-id="1760a-112">Clients initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods, which do not block waiting for the authentication to complete.</span></span> <span data-ttu-id="1760a-113">服务器启动身份验证使用同步<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>或异步<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-113">Servers initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="1760a-114">客户端和服务器必须启动的身份验证。</span><span class="sxs-lookup"><span data-stu-id="1760a-114">Both client and server must initiate the authentication.</span></span>  
  
 <span data-ttu-id="1760a-115">由安全支持提供程序 (SSPI) 通道提供程序处理身份验证。</span><span class="sxs-lookup"><span data-stu-id="1760a-115">The authentication is handled by the Security Support Provider (SSPI) channel provider.</span></span> <span data-ttu-id="1760a-116">客户端有机会来控制通过指定的服务器的证书验证<xref:System.Net.Security.RemoteCertificateValidationCallback>委托创建时<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="1760a-116">The client is given an opportunity to control validation of the server's certificate by specifying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate when creating an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="1760a-117">服务器还可以通过提供控制验证<xref:System.Net.Security.RemoteCertificateValidationCallback>委托。</span><span class="sxs-lookup"><span data-stu-id="1760a-117">The server can also control validation by supplying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate.</span></span> <span data-ttu-id="1760a-118">引用委托的方法包括远程方的证书和 SSPI 验证证书时遇到任何错误。</span><span class="sxs-lookup"><span data-stu-id="1760a-118">The method referenced by the delegate includes the remote party's certificate and any errors SSPI encountered while validating the certificate.</span></span> <span data-ttu-id="1760a-119">请注意，是否在服务器指定的委托，委托的方法调用而不考虑服务器是否请求客户端身份验证。</span><span class="sxs-lookup"><span data-stu-id="1760a-119">Note that if the server specifies a delegate, the delegate's method is invoked regardless of whether the server requested client authentication.</span></span> <span data-ttu-id="1760a-120">如果服务器没有请求客户端身份验证，服务器的委托方法将收到 null 证书和证书错误的空数组。</span><span class="sxs-lookup"><span data-stu-id="1760a-120">If the server did not request client authentication, the server's delegate method receives a null certificate and an empty array of certificate errors.</span></span>  
  
 <span data-ttu-id="1760a-121">如果服务器要求客户端身份验证，客户端必须指定一个或多个证书进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="1760a-121">If the server requires client authentication, the client must specify one or more certificates for authentication.</span></span> <span data-ttu-id="1760a-122">客户端在客户端有多个证书，可以提供<xref:System.Net.Security.LocalCertificateSelectionCallback>委托来选择正确的证书的服务器。</span><span class="sxs-lookup"><span data-stu-id="1760a-122">If the client has more than one certificate, the client can provide a <xref:System.Net.Security.LocalCertificateSelectionCallback> delegate to select the correct certificate for the server.</span></span> <span data-ttu-id="1760a-123">客户端的证书必须位于当前用户的"我的"证书存储区。</span><span class="sxs-lookup"><span data-stu-id="1760a-123">The client's certificates must be located in the current user's "My" certificate store.</span></span> <span data-ttu-id="1760a-124">不支持通过证书的客户端身份验证<xref:System.Security.Authentication.SslProtocols.Ssl2>(SSL 版本 2) 协议。</span><span class="sxs-lookup"><span data-stu-id="1760a-124">Client authentication via certificates is not supported for the <xref:System.Security.Authentication.SslProtocols.Ssl2> (SSL version 2) protocol.</span></span>  
  
 <span data-ttu-id="1760a-125">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>，和<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-125">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and the <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="1760a-126">应关闭此对象，并删除对它的所有引用，以便它可以收集的垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="1760a-126">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="1760a-127">身份验证过程，也称为 SSL 握手，成功后，建立服务器 （和 （可选） 客户端） 的标识和<xref:System.Net.Security.SslStream>可用于通过客户端和服务器交换消息。</span><span class="sxs-lookup"><span data-stu-id="1760a-127">When the authentication process, also known as the SSL handshake, succeeds, the identity of the server (and optionally, the client) is established and the <xref:System.Net.Security.SslStream> can be used by the client and server to exchange messages.</span></span> <span data-ttu-id="1760a-128">在之前发送或接收信息，客户端和服务器应检查的安全服务和级别提供的<xref:System.Net.Security.SslStream>以确定协议、 算法和所选的优势是否满足其要求的完整性和保密性。</span><span class="sxs-lookup"><span data-stu-id="1760a-128">Before sending or receiving information, the client and server should check the security services and levels provided by the <xref:System.Net.Security.SslStream> to determine whether the protocol, algorithms, and strengths selected meet their requirements for integrity and confidentiality.</span></span> <span data-ttu-id="1760a-129">如果当前设置还不够，应关闭流。</span><span class="sxs-lookup"><span data-stu-id="1760a-129">If the current settings are not sufficient, the stream should be closed.</span></span> <span data-ttu-id="1760a-130">你可以检查提供的安全服务<xref:System.Net.Security.SslStream>使用<xref:System.Net.Security.SslStream.IsEncrypted%2A>和<xref:System.Net.Security.SslStream.IsSigned%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1760a-130">You can check the security services provided by the <xref:System.Net.Security.SslStream> using the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties.</span></span> <span data-ttu-id="1760a-131">下表显示了报表使用的身份验证、 加密和数据签名的加密设置的元素。</span><span class="sxs-lookup"><span data-stu-id="1760a-131">The following table shows the elements that report the cryptographic settings used for authentication, encryption and data signing.</span></span>  
  
|<span data-ttu-id="1760a-132">元素</span><span class="sxs-lookup"><span data-stu-id="1760a-132">Element</span></span>|<span data-ttu-id="1760a-133">成员</span><span class="sxs-lookup"><span data-stu-id="1760a-133">Members</span></span>|  
|-------------|-------------|  
|<span data-ttu-id="1760a-134">用于对服务器和客户端 （可选） 进行身份验证的安全协议。</span><span class="sxs-lookup"><span data-stu-id="1760a-134">The security protocol used to authenticate the server and, optionally, the client.</span></span>|<span data-ttu-id="1760a-135"><xref:System.Net.Security.SslStream.SslProtocol%2A>属性和关联<xref:System.Security.Authentication.SslProtocols>枚举。</span><span class="sxs-lookup"><span data-stu-id="1760a-135">The <xref:System.Net.Security.SslStream.SslProtocol%2A> property and the associated <xref:System.Security.Authentication.SslProtocols> enumeration.</span></span>|  
|<span data-ttu-id="1760a-136">密钥交换算法。</span><span class="sxs-lookup"><span data-stu-id="1760a-136">The key exchange algorithm.</span></span>|<span data-ttu-id="1760a-137"><xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A>属性和关联<xref:System.Security.Authentication.ExchangeAlgorithmType>枚举。</span><span class="sxs-lookup"><span data-stu-id="1760a-137">The <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> property and the associated <xref:System.Security.Authentication.ExchangeAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="1760a-138">消息完整性算法。</span><span class="sxs-lookup"><span data-stu-id="1760a-138">The message integrity algorithm.</span></span>|<span data-ttu-id="1760a-139"><xref:System.Net.Security.SslStream.HashAlgorithm%2A>属性和关联<xref:System.Security.Authentication.HashAlgorithmType>枚举。</span><span class="sxs-lookup"><span data-stu-id="1760a-139">The <xref:System.Net.Security.SslStream.HashAlgorithm%2A> property and the associated <xref:System.Security.Authentication.HashAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="1760a-140">消息的保密性算法。</span><span class="sxs-lookup"><span data-stu-id="1760a-140">The message confidentiality algorithm.</span></span>|<span data-ttu-id="1760a-141"><xref:System.Net.Security.SslStream.CipherAlgorithm%2A>属性和关联<xref:System.Security.Authentication.CipherAlgorithmType>枚举。</span><span class="sxs-lookup"><span data-stu-id="1760a-141">The <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property and the associated <xref:System.Security.Authentication.CipherAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="1760a-142">所选算法的优势。</span><span class="sxs-lookup"><span data-stu-id="1760a-142">The strengths of the selected algorithms.</span></span>|<span data-ttu-id="1760a-143"><xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>， <xref:System.Net.Security.SslStream.HashStrength%2A>，和<xref:System.Net.Security.SslStream.CipherStrength%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1760a-143">The <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>, <xref:System.Net.Security.SslStream.HashStrength%2A>, and <xref:System.Net.Security.SslStream.CipherStrength%2A> properties.</span></span>|  
  
 <span data-ttu-id="1760a-144">身份验证成功后，可以发送数据，使用同步<xref:System.Net.Security.SslStream.Write%2A>或异步<xref:System.Net.Security.SslStream.BeginWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-144">After a successful authentication, you can send data using the synchronous <xref:System.Net.Security.SslStream.Write%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="1760a-145">可以接收数据使用同步<xref:System.Net.Security.SslStream.Read%2A>或异步<xref:System.Net.Security.SslStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-145">You can receive data using the synchronous <xref:System.Net.Security.SslStream.Read%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginRead%2A> methods.</span></span>  
  
 <span data-ttu-id="1760a-146">如果指定到<xref:System.Net.Security.SslStream.%23ctor%2A>基础流应保持打开状态，负责完成后关闭该流使用它。</span><span class="sxs-lookup"><span data-stu-id="1760a-146">If you specified to the <xref:System.Net.Security.SslStream.%23ctor%2A> that the underlying stream should be left open, you are responsible for closing that stream when you are done using it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1760a-147">如果应用程序的创建<xref:System.Net.Security.SslStream>对象的普通用户凭据运行，应用程序将无法再访问证书安装在本地计算机存储区中，除非权限已显式将提供给用户来执行此操作。</span><span class="sxs-lookup"><span data-stu-id="1760a-147">If the application that creates the <xref:System.Net.Security.SslStream> object runs with the credentials of a Normal user, the application will not be able to access certificates installed in the local machine store unless permission has been explicitly given to the user to do so.</span></span>  
  
 <span data-ttu-id="1760a-148"><xref:System.Net.Security.SslStream> 假定以及任何其他超时<xref:System.IO.IOException>一个从内部流的引发时将被视为致命通过其调用方。</span><span class="sxs-lookup"><span data-stu-id="1760a-148"><xref:System.Net.Security.SslStream> assumes that a timeout along with any other <xref:System.IO.IOException> when one is thrown from the inner stream will be treated as fatal by its caller.</span></span> <span data-ttu-id="1760a-149">重复使用<xref:System.Net.Security.SslStream>实例后超时将返回垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="1760a-149">Reusing a <xref:System.Net.Security.SslStream> instance after a timeout will return garbage.</span></span> <span data-ttu-id="1760a-150">应用程序应<xref:System.IO.Stream.Close%2A> <xref:System.Net.Security.SslStream> ，并在这些情况下引发异常。</span><span class="sxs-lookup"><span data-stu-id="1760a-150">An application should <xref:System.IO.Stream.Close%2A> the <xref:System.Net.Security.SslStream> and throw an exception in these cases.</span></span>  
  
 <span data-ttu-id="1760a-151">.NET Framework 4.6 包括一个新的安全功能，将阻止不安全的密码和哈希算法的连接。</span><span class="sxs-lookup"><span data-stu-id="1760a-151">The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.</span></span> <span data-ttu-id="1760a-152">默认情况下，使用 TLS/SSL 通过 HttpClient、 HttpWebRequest、 FTPClient，SmtpClient、 SslStream 等 Api 和面向.NET Framework 4.6 的应用程序获得更安全的行为。</span><span class="sxs-lookup"><span data-stu-id="1760a-152">Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.</span></span>  
  
 <span data-ttu-id="1760a-153">开发人员可能想要选择退出此行为以便保持与带 RC4 服务及其现有 SSL3 服务或 TLS 互操作性。</span><span class="sxs-lookup"><span data-stu-id="1760a-153">Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services.</span></span> <span data-ttu-id="1760a-154">[这篇文章](https://support.microsoft.com/kb/3069494)介绍了如何修改你的代码，以便禁用新行为。</span><span class="sxs-lookup"><span data-stu-id="1760a-154">[This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.</span></span>  
  
 <span data-ttu-id="1760a-155">.NET Framework 4.7 中添加了新重载的方法的身份验证，未指定 TLS 版本，而是使用 TLS 版本定义中的系统默认值为 SslStreams [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx)。</span><span class="sxs-lookup"><span data-stu-id="1760a-155">The .NET Framework 4.7 adds new overloads for the methods that authenticate SslStreams that do not specify a TLS version, but instead use the TLS version defined as the system default in [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx).</span></span> <span data-ttu-id="1760a-156">作为一种方法能够更高版本修改默认值为 TLS 版本最佳做法是更改随着时间推移，应用程序中使用这些方法而无需重新生成并重新部署您的应用程序。</span><span class="sxs-lookup"><span data-stu-id="1760a-156">Use these methods in your app as a way to be able to later modify the defaults as TLS version best practice changes over time, without the need to rebuild and redeploy your app.</span></span>

 <span data-ttu-id="1760a-157">另请参阅[传输层安全性 (TLS) 最佳实践与.NET Framework](~/docs/framework/network-programming/tls.md)。</span><span class="sxs-lookup"><span data-stu-id="1760a-157">Also see [Transport Layer Security (TLS) best practices with the .NET Framework](~/docs/framework/network-programming/tls.md).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="1760a-158">下面的代码示例演示如何创建<xref:System.Net.Sockets.TcpListener>，它使用<xref:System.Net.Security.SslStream>类与客户端通信。</span><span class="sxs-lookup"><span data-stu-id="1760a-158">The following code example demonstrates creating an <xref:System.Net.Sockets.TcpListener> that uses the <xref:System.Net.Security.SslStream> class to communicate with clients.</span></span>  
  
 [!code-cpp[NclSslServerSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#0)]
 [!code-csharp[NclSslServerSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#0)]  
  
 <span data-ttu-id="1760a-159">下面的代码示例演示如何创建<xref:System.Net.Sockets.TcpClient>，它使用<xref:System.Net.Security.SslStream>类，以与服务器通信。</span><span class="sxs-lookup"><span data-stu-id="1760a-159">The following code example demonstrates creating a <xref:System.Net.Sockets.TcpClient> that uses the <xref:System.Net.Security.SslStream> class to communicate with a server.</span></span>  
  
 [!code-cpp[NclSslClientSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#0)]
 [!code-csharp[NclSslClientSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Security.NegotiateStream" />
    <altmember cref="T:System.Net.Security.AuthenticatedStream" />
    <altmember cref="T:System.IO.IOException" />
    <altmember cref="T:System.IO.Stream" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-160">初始化 <see cref="T:System.Net.Security.SslStream" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-160">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-161">若要防止<xref:System.Net.Security.SslStream>关闭你提供的流，使用<xref:System.Net.Security.SslStream.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="1760a-161">To prevent the <xref:System.Net.Security.SslStream> from closing the stream that you supply, use the <xref:System.Net.Security.SslStream.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream innerStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="1760a-162">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.SslStream" /> 使用此对象发送和接收数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-162">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-163">使用指定的 <see cref="T:System.Net.Security.SslStream" /> 初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-163">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-164">如果不 encryptionpolicy，在配置文件中指定一个值，则<xref:System.Net.Security.EncryptionPolicy>默认情况下<xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>为<xref:System.Net.Security.SslStream>构造的实例。</span><span class="sxs-lookup"><span data-stu-id="1760a-164">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="1760a-165">加密策略设置为时需要使用 Null 密码<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1760a-165">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1760a-166">
            <paramref name="innerStream" /> 不可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-166">
              <paramref name="innerStream" /> is not readable.</span>
          </span>
          <span data-ttu-id="1760a-167">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-167">-or-</span>
          </span>
          <span data-ttu-id="1760a-168">
            <paramref name="innerStream" /> 不可写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-168">
              <paramref name="innerStream" /> is not writable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-169">
            <paramref name="innerStream" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-169">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="1760a-170">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-170">-or-</span>
          </span>
          <span data-ttu-id="1760a-171">
            <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-171">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="1760a-172">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.SslStream" /> 使用此对象发送和接收数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-172">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="1760a-173">一个布尔值，它指示 <see cref="T:System.IO.Stream" /> 用来发送和接收数据的 <see cref="T:System.Net.Security.SslStream" /> 对象的封闭行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-173">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
          <span data-ttu-id="1760a-174">此参数指示内部流是否保持打开状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-174">This parameter indicates if the inner stream is left open.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-175">使用指定的 <see cref="T:System.Net.Security.SslStream" /> 和流封闭行为初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-175">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-176">当指定`true`有关`leaveStreamOpen`参数，关闭<xref:System.Net.Security.SslStream>不起任何作用`innerStream`流; 必须显式关闭`innerStream`时不再需要它。</span><span class="sxs-lookup"><span data-stu-id="1760a-176">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="1760a-177">如果不 encryptionpolicy，在配置文件中指定一个值，则<xref:System.Net.Security.EncryptionPolicy>默认情况下<xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>为<xref:System.Net.Security.SslStream>构造的实例。</span><span class="sxs-lookup"><span data-stu-id="1760a-177">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="1760a-178">加密策略设置为时需要使用 Null 密码<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1760a-178">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-179">下面的代码示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="1760a-179">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1760a-180">
            <paramref name="innerStream" /> 不可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-180">
              <paramref name="innerStream" /> is not readable.</span>
          </span>
          <span data-ttu-id="1760a-181">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-181">-or-</span>
          </span>
          <span data-ttu-id="1760a-182">
            <paramref name="innerStream" /> 不可写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-182">
              <paramref name="innerStream" /> is not writable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-183">
            <paramref name="innerStream" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-183">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="1760a-184">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-184">-or-</span>
          </span>
          <span data-ttu-id="1760a-185">
            <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-185">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean, userCertificateValidationCallback As RemoteCertificateValidationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool * System.Net.Security.RemoteCertificateValidationCallback -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen, userCertificateValidationCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="1760a-186">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.SslStream" /> 使用此对象发送和接收数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-186">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="1760a-187">一个布尔值，它指示 <see cref="T:System.IO.Stream" /> 用来发送和接收数据的 <see cref="T:System.Net.Security.SslStream" /> 对象的封闭行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-187">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
          <span data-ttu-id="1760a-188">此参数指示内部流是否保持打开状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-188">This parameter indicates if the inner stream is left open.</span>
          </span>
        </param>
        <param name="userCertificateValidationCallback">
          <span data-ttu-id="1760a-189">
            <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> 委托，负责验证远程方提供的证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-189">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-190">使用指定的 <see cref="T:System.Net.Security.SslStream" />、流关闭行为和证书验证委托初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-190">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />, stream closure behavior and certificate validation delegate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-191">当指定`true`有关`leaveStreamOpen`参数，关闭<xref:System.Net.Security.SslStream>不起任何作用`innerStream`流; 必须显式关闭`innerStream`时不再需要它。</span><span class="sxs-lookup"><span data-stu-id="1760a-191">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="1760a-192">`userCertificateValidationCallback`委托的`certificateErrors`参数包含返回的通道安全支持提供程序接口 (SSPI) 任何 Windows 错误代码。</span><span class="sxs-lookup"><span data-stu-id="1760a-192">The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI).</span></span> <span data-ttu-id="1760a-193">所调用的方法的返回值`userCertificateValidationCallback`委托确定是否成功进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="1760a-193">The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds.</span></span>  
  
 <span data-ttu-id="1760a-194">安全协议和加密算法已时选择`userCertificateValidationCallback`调用委托的方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-194">The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked.</span></span> <span data-ttu-id="1760a-195">该方法可用于确定所选的加密算法和优势是否足以满足您的应用程序。</span><span class="sxs-lookup"><span data-stu-id="1760a-195">You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application.</span></span> <span data-ttu-id="1760a-196">如果不是，该方法应返回`false`以免<xref:System.Net.Security.SslStream>创建。</span><span class="sxs-lookup"><span data-stu-id="1760a-196">If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created.</span></span>  
  
 <span data-ttu-id="1760a-197">如果不 encryptionpolicy，在配置文件中指定一个值，则<xref:System.Net.Security.EncryptionPolicy>默认情况下<xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>为<xref:System.Net.Security.SslStream>构造的实例。</span><span class="sxs-lookup"><span data-stu-id="1760a-197">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="1760a-198">加密策略设置为时需要使用 Null 密码<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1760a-198">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1760a-199">框架缓存 SSL 会话，因为它们创建并尝试再次使用的会话缓存适用于新的请求，在可能的情况。</span><span class="sxs-lookup"><span data-stu-id="1760a-199">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="1760a-200">在尝试以重复使用的 SSL 会话时，框架将使用的第一个元素<xref:System.Net.HttpWebRequest.ClientCertificates%2A>（如果没有一个），或尝试重复使用匿名会话，如果<xref:System.Net.HttpWebRequest.ClientCertificates%2A>为空。</span><span class="sxs-lookup"><span data-stu-id="1760a-200">When attempting to reuse an SSL session, the Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous sessions if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1760a-201">不支持 SSL 版本 2 协议在客户端证书。</span><span class="sxs-lookup"><span data-stu-id="1760a-201">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-202">下面的代码示例创建<xref:System.Net.Security.SslStream>并启动身份验证的客户端部分。</span><span class="sxs-lookup"><span data-stu-id="1760a-202">The following code example creates an <xref:System.Net.Security.SslStream> and initiates the client portion of the authentication.</span></span>  
  
 [!code-cpp[NclSslClientSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#4)]
 [!code-csharp[NclSslClientSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1760a-203">
            <paramref name="innerStream" /> 不可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-203">
              <paramref name="innerStream" /> is not readable.</span>
          </span>
          <span data-ttu-id="1760a-204">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-204">-or-</span>
          </span>
          <span data-ttu-id="1760a-205">
            <paramref name="innerStream" /> 不可写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-205">
              <paramref name="innerStream" /> is not writable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-206">
            <paramref name="innerStream" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-206">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="1760a-207">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-207">-or-</span>
          </span>
          <span data-ttu-id="1760a-208">
            <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-208">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, class System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean, userCertificateValidationCallback As RemoteCertificateValidationCallback, userCertificateSelectionCallback As LocalCertificateSelectionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback, System::Net::Security::LocalCertificateSelectionCallback ^ userCertificateSelectionCallback);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool * System.Net.Security.RemoteCertificateValidationCallback * System.Net.Security.LocalCertificateSelectionCallback -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen, userCertificateValidationCallback, userCertificateSelectionCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" />
        <Parameter Name="userCertificateSelectionCallback" Type="System.Net.Security.LocalCertificateSelectionCallback" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="1760a-209">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.SslStream" /> 使用此对象发送和接收数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-209">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="1760a-210">一个布尔值，它指示 <see cref="T:System.IO.Stream" /> 用来发送和接收数据的 <see cref="T:System.Net.Security.SslStream" /> 对象的封闭行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-210">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
          <span data-ttu-id="1760a-211">此参数指示内部流是否保持打开状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-211">This parameter indicates if the inner stream is left open.</span>
          </span>
        </param>
        <param name="userCertificateValidationCallback">
          <span data-ttu-id="1760a-212">
            <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> 委托，负责验证远程方提供的证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-212">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span>
          </span>
        </param>
        <param name="userCertificateSelectionCallback">
          <span data-ttu-id="1760a-213">
            <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> 委托，负责选择用于身份验证的证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-213">A <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> delegate responsible for selecting the certificate used for authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-214">使用指定的 <see cref="T:System.Net.Security.SslStream" />、流关闭行为、证书验证委托和证书选择委托初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-214">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />, stream closure behavior, certificate validation delegate and certificate selection delegate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-215">当指定`true`有关`leaveStreamOpen`参数，关闭<xref:System.Net.Security.SslStream>不起任何作用`innerStream`流; 必须显式关闭`innerStream`时不再需要它。</span><span class="sxs-lookup"><span data-stu-id="1760a-215">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="1760a-216">`userCertificateValidationCallback`委托的`certificateErrors`参数包含返回的通道安全支持提供程序接口 (SSPI) 任何 Windows 错误代码。</span><span class="sxs-lookup"><span data-stu-id="1760a-216">The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI).</span></span> <span data-ttu-id="1760a-217">所调用的方法的返回值`userCertificateValidationCallback`委托确定是否成功进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="1760a-217">The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds.</span></span>  
  
 <span data-ttu-id="1760a-218">安全协议和加密算法已时选择`userCertificateValidationCallback`调用委托的方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-218">The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked.</span></span> <span data-ttu-id="1760a-219">该方法可用于确定所选的加密算法和优势是否足以满足您的应用程序。</span><span class="sxs-lookup"><span data-stu-id="1760a-219">You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application.</span></span> <span data-ttu-id="1760a-220">如果不是，该方法应返回`false`以免<xref:System.Net.Security.SslStream>创建。</span><span class="sxs-lookup"><span data-stu-id="1760a-220">If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created.</span></span>  
  
 <span data-ttu-id="1760a-221">`userCertificateSelectionCallback`委托时，可以在应用程序具有多个证书，必须动态选择的证书。</span><span class="sxs-lookup"><span data-stu-id="1760a-221">The `userCertificateSelectionCallback` delegate is useful when your application has multiple certificates and must dynamically choose a certificate.</span></span> <span data-ttu-id="1760a-222">在"MY"存储区中的证书传递给所调用的委托方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-222">Certificates in the "MY" store are passed to the method invoked by the delegate.</span></span>  
  
 <span data-ttu-id="1760a-223">如果不 encryptionpolicy，在配置文件中指定一个值，则<xref:System.Net.Security.EncryptionPolicy>默认情况下<xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>为<xref:System.Net.Security.SslStream>构造的实例。</span><span class="sxs-lookup"><span data-stu-id="1760a-223">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="1760a-224">加密策略设置为时需要使用 Null 密码<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1760a-224">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1760a-225">框架缓存 SSL 会话，因为它们创建并尝试再次使用的会话缓存适用于新的请求，在可能的情况。</span><span class="sxs-lookup"><span data-stu-id="1760a-225">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="1760a-226">在尝试以重复使用的 SSL 会话时，框架将使用第一个元素的 P:System.Net.HttpWebRequest.ClientCertificates （如果有），或尝试重复使用匿名会话时为空。</span><span class="sxs-lookup"><span data-stu-id="1760a-226">When attempting to reuse an SSL session, the Framework uses the first element of P:System.Net.HttpWebRequest.ClientCertificates (if there is one), or tries to reuse an anonymous sessions if P:System.Net.HttpWebRequest.ClientCertificates is empty.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-227">下面的代码示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="1760a-227">The following code example demonstrates calling this constructor.</span></span> <span data-ttu-id="1760a-228">此示例摘自一个更大的示例为提供<xref:System.Net.Security.SslStream>类。</span><span class="sxs-lookup"><span data-stu-id="1760a-228">This example is part of a larger example provided for the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 [!code-cpp[NclSslClientAsync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#6)]
 [!code-csharp[NclSslClientAsync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1760a-229">
            <paramref name="innerStream" /> 不可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-229">
              <paramref name="innerStream" /> is not readable.</span>
          </span>
          <span data-ttu-id="1760a-230">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-230">-or-</span>
          </span>
          <span data-ttu-id="1760a-231">
            <paramref name="innerStream" /> 不可写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-231">
              <paramref name="innerStream" /> is not writable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-232">
            <paramref name="innerStream" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-232">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="1760a-233">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-233">-or-</span>
          </span>
          <span data-ttu-id="1760a-234">
            <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-234">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, System.Net.Security.EncryptionPolicy encryptionPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, class System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, valuetype System.Net.Security.EncryptionPolicy encryptionPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback, System::Net::Security::LocalCertificateSelectionCallback ^ userCertificateSelectionCallback, System::Net::Security::EncryptionPolicy encryptionPolicy);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool * System.Net.Security.RemoteCertificateValidationCallback * System.Net.Security.LocalCertificateSelectionCallback * System.Net.Security.EncryptionPolicy -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen, userCertificateValidationCallback, userCertificateSelectionCallback, encryptionPolicy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoLimitation("encryptionPolicy is ignored")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" />
        <Parameter Name="userCertificateSelectionCallback" Type="System.Net.Security.LocalCertificateSelectionCallback" />
        <Parameter Name="encryptionPolicy" Type="System.Net.Security.EncryptionPolicy" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="1760a-235">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.SslStream" /> 使用此对象发送和接收数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-235">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="1760a-236">一个布尔值，它指示 <see cref="T:System.IO.Stream" /> 用来发送和接收数据的 <see cref="T:System.Net.Security.SslStream" /> 对象的封闭行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-236">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
          <span data-ttu-id="1760a-237">此参数指示内部流是否保持打开状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-237">This parameter indicates if the inner stream is left open.</span>
          </span>
        </param>
        <param name="userCertificateValidationCallback">
          <span data-ttu-id="1760a-238">
            <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> 委托，负责验证远程方提供的证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-238">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span>
          </span>
        </param>
        <param name="userCertificateSelectionCallback">
          <span data-ttu-id="1760a-239">
            <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> 委托，负责选择用于身份验证的证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-239">A <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> delegate responsible for selecting the certificate used for authentication.</span>
          </span>
        </param>
        <param name="encryptionPolicy">
          <span data-ttu-id="1760a-240">要使用的 <see cref="T:System.Net.Security.EncryptionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-240">The <see cref="T:System.Net.Security.EncryptionPolicy" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-241">使用指定的 <see cref="T:System.Net.Security.SslStream" /> 初始化 <see cref="T:System.IO.Stream" /> 类的新实例</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-241">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" /></span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-242">使用 Null 密码时，必须`encryptionPolicy`参数设置为<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1760a-242">The use of the Null cipher is required when the `encryptionPolicy` parameter is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1760a-243">
            <paramref name="innerStream" /> 不可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-243">
              <paramref name="innerStream" /> is not readable.</span>
          </span>
          <span data-ttu-id="1760a-244">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-244">-or-</span>
          </span>
          <span data-ttu-id="1760a-245">
            <paramref name="innerStream" /> 不可写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-245">
              <paramref name="innerStream" /> is not writable.</span>
          </span>
          <span data-ttu-id="1760a-246">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-246">-or-</span>
          </span>
          <span data-ttu-id="1760a-247">
            <paramref name="encryptionPolicy" /> 无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-247">
              <paramref name="encryptionPolicy" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-248">
            <paramref name="innerStream" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-248">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="1760a-249">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-249">-or-</span>
          </span>
          <span data-ttu-id="1760a-250">
            <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-250">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-251">对客户端-服务器连接的客户端进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-251">Authenticate the client side of a client-server connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : string -&gt; unit&#xA;override this.AuthenticateAsClient : string -&gt; unit" Usage="sslStream.AuthenticateAsClient targetHost" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClient(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="1760a-252">共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-252">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-253">由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-253">Called by clients to authenticate the server and optionally the client in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] <span data-ttu-id="1760a-254">任何客户端证书身份验证中不使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-254">No client certificates are used in the authentication.</span></span> <span data-ttu-id="1760a-255">在身份验证期间不检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="1760a-255">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="1760a-256">为指定的值`targetHost`必须与服务器的证书上的名称相匹配。</span><span class="sxs-lookup"><span data-stu-id="1760a-256">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="1760a-257">当身份验证成功时，必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>并<xref:System.Net.Security.SslStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="1760a-257">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="1760a-258">检查<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="1760a-258">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="1760a-259">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-259">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="1760a-260">应关闭此对象，并删除对它的所有引用，以便它可以收集的垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="1760a-260">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-261">
            <paramref name="targetHost" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-261">
              <paramref name="targetHost" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="1760a-262">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-262">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-263">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-263">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="1760a-264">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-264">-or-</span>
          </span>
          <span data-ttu-id="1760a-265">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-265">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="1760a-266">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-266">-or-</span>
          </span>
          <span data-ttu-id="1760a-267">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-267">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1760a-268">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-268">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String, clientCertificates As X509CertificateCollection, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; unit&#xA;override this.AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; unit" Usage="sslStream.AuthenticateAsClient (targetHost, clientCertificates, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="1760a-269">将共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-269">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="1760a-270">包含客户端证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-270">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="1760a-271">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-271">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-272">由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-272">Called by clients to authenticate the server and optionally the client in a client-server connection.</span>
          </span>
          <span data-ttu-id="1760a-273">身份验证过程使用指定的证书集合和系统默认的 SSL 协议。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-273">The authentication process uses the specified certificate collection, and the system default SSL protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="1760a-274">当身份验证成功时，必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>并<xref:System.Net.Security.SslStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="1760a-274">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="1760a-275">检查<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="1760a-275">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="1760a-276">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-276">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="1760a-277">应关闭此对象，并删除对它的所有引用，以便它可以收集的垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="1760a-277">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1760a-278">不支持 SSL 版本 2 协议在客户端证书。</span><span class="sxs-lookup"><span data-stu-id="1760a-278">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String, clientCertificates As X509CertificateCollection, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; unit&#xA;override this.AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; unit" Usage="sslStream.AuthenticateAsClient (targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="1760a-279">将共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-279">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="1760a-280">包含客户端证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-280">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="1760a-281">代表用于身份验证的协议的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-281">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="1760a-282">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-282">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-283">由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-283">Called by clients to authenticate the server and optionally the client in a client-server connection.</span>
          </span>
          <span data-ttu-id="1760a-284">身份验证过程使用指定的证书集合和 SSL 协议。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-284">The authentication process uses the specified certificate collection and SSL protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="1760a-285">当身份验证成功时，必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>并<xref:System.Net.Security.SslStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="1760a-285">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="1760a-286">检查<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="1760a-286">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="1760a-287">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-287">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="1760a-288">应关闭此对象，并删除对它的所有引用，以便它可以收集的垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="1760a-288">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1760a-289">不支持 SSL 版本 2 协议在客户端证书。</span><span class="sxs-lookup"><span data-stu-id="1760a-289">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-290">对客户端-服务器连接中的客户端进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-290">Authenticate the client side of a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : string -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync targetHost" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClientAsync(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="1760a-291">共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-291">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-292">由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证，此为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-292">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1760a-293">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-293">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="1760a-294">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-294">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] <span data-ttu-id="1760a-295">任何客户端证书身份验证中不使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-295">No client certificates are used in the authentication.</span></span> <span data-ttu-id="1760a-296">在身份验证期间不检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="1760a-296">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="1760a-297">为指定的值`targetHost`必须与服务器的证书上的名称相匹配。</span><span class="sxs-lookup"><span data-stu-id="1760a-297">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="1760a-298">当身份验证成功时，必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>并<xref:System.Net.Security.SslStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="1760a-298">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="1760a-299">检查<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="1760a-299">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="1760a-300">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-300">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="1760a-301">应关闭此对象，并删除对它的所有引用，以便它可以收集的垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="1760a-301">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-302">
            <paramref name="targetHost" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-302">
              <paramref name="targetHost" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="1760a-303">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-303">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-304">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-304">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="1760a-305">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-305">-or-</span>
          </span>
          <span data-ttu-id="1760a-306">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-306">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="1760a-307">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-307">-or-</span>
          </span>
          <span data-ttu-id="1760a-308">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-308">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1760a-309">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-309">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.Security.SslClientAuthenticationOptions sslClientAuthenticationOptions, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.Security.SslClientAuthenticationOptions sslClientAuthenticationOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.Net.Security.SslClientAuthenticationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::Security::SslClientAuthenticationOptions ^ sslClientAuthenticationOptions, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.AuthenticateAsClientAsync : System.Net.Security.SslClientAuthenticationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync (sslClientAuthenticationOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sslClientAuthenticationOptions" Type="System.Net.Security.SslClientAuthenticationOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sslClientAuthenticationOptions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String, clientCertificates As X509CertificateCollection, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync (targetHost, clientCertificates, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="1760a-310">将共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-310">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="1760a-311">包含客户端证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-311">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="1760a-312">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-312">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-313">由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证，此为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-313">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="1760a-314">身份验证过程使用指定的证书集合和系统默认的 SSL 协议。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-314">The authentication process uses the specified certificate collection and the system default SSL protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1760a-315">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-315">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="1760a-316">当身份验证成功时，必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>并<xref:System.Net.Security.SslStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="1760a-316">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="1760a-317">检查<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="1760a-317">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="1760a-318">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-318">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="1760a-319">应关闭此对象，并删除对它的所有引用，以便它可以收集的垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="1760a-319">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1760a-320">不支持 SSL 版本 2 协议在客户端证书。</span><span class="sxs-lookup"><span data-stu-id="1760a-320">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String, clientCertificates As X509CertificateCollection, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync (targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="1760a-321">将共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-321">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="1760a-322">包含客户端证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-322">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="1760a-323">代表用于身份验证的协议的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-323">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="1760a-324">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-324">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-325">由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证，此为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-325">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="1760a-326">身份验证过程使用指定的证书集合和 SSL 协议。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-326">The authentication process uses the specified certificate collection and SSL protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1760a-327">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-327">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="1760a-328">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-328">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="1760a-329">当身份验证成功时，必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>并<xref:System.Net.Security.SslStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="1760a-329">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="1760a-330">检查<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="1760a-330">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="1760a-331">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-331">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="1760a-332">应关闭此对象，并删除对它的所有引用，以便它可以收集的垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="1760a-332">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1760a-333">不支持 SSL 版本 2 协议在客户端证书。</span><span class="sxs-lookup"><span data-stu-id="1760a-333">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-334">服务器调用此方法，以便对客户端-服务器连接中的服务器及客户端（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-334">Called by servers to authenticate the server and optionally the client in a client-server connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; unit" Usage="sslStream.AuthenticateAsServer serverCertificate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="1760a-335">用于对服务器进行身份验证的证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-335">The certificate used to authenticate the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-336">服务器调用此方法，以便使用指定的证书对客户端-服务器连接中的服务器及客户端（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-336">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] <span data-ttu-id="1760a-337">在身份验证期间不检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="1760a-337">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="1760a-338">客户端不需要进行身份验证提供证书。</span><span class="sxs-lookup"><span data-stu-id="1760a-338">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="1760a-339">此方法进行阻止，直到操作完成。</span><span class="sxs-lookup"><span data-stu-id="1760a-339">This method blocks until the operation completes.</span></span> <span data-ttu-id="1760a-340">若要阻止阻塞在操作完成之前，使用之一<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="1760a-340">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="1760a-341">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-341">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="1760a-342">应关闭此对象，并删除对它的所有引用，以便它可以收集的垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="1760a-342">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-343">
            <paramref name="serverCertificate" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-343">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="1760a-344">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-344">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-345">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-345">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="1760a-346">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-346">-or-</span>
          </span>
          <span data-ttu-id="1760a-347">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-347">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="1760a-348">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-348">-or-</span>
          </span>
          <span data-ttu-id="1760a-349">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-349">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1760a-350">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-350">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="1760a-351">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-351">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; unit" Usage="sslStream.AuthenticateAsServer (serverCertificate, clientCertificateRequired, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="1760a-352">用于对服务器进行身份验证的 X509Certificate 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-352">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="1760a-353">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-353">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="1760a-354">请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-354">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="1760a-355">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-355">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-356">由服务器调用，以使用指定的证书、要求和系统默认安全协议在客户端 - 服务器连接中对服务器和客户端（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-356">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates and requirements, and using the sytem default security protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="1760a-357">此方法进行阻止，直到操作完成。</span><span class="sxs-lookup"><span data-stu-id="1760a-357">This method blocks until the operation completes.</span></span> <span data-ttu-id="1760a-358">若要阻止阻塞在操作完成之前，使用之一<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="1760a-358">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="1760a-359">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-359">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="1760a-360">应关闭此对象，并删除对它的所有引用，以便它可以收集的垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="1760a-360">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-361">
            <paramref name="serverCertificate" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-361">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="1760a-362">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-362">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-363">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-363">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="1760a-364">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-364">-or-</span>
          </span>
          <span data-ttu-id="1760a-365">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-365">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="1760a-366">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-366">-or-</span>
          </span>
          <span data-ttu-id="1760a-367">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-367">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1760a-368">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-368">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="1760a-369">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-369">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; unit" Usage="sslStream.AuthenticateAsServer (serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="1760a-370">用于对服务器进行身份验证的 X509Certificate 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-370">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="1760a-371">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-371">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="1760a-372">请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-372">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="1760a-373">代表用于身份验证的协议的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-373">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="1760a-374">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-374">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-375">由服务器调用，以使用指定的证书、要求和安全协议在客户端 - 服务器连接中对服务器和客户端（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-375">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="1760a-376">此方法进行阻止，直到操作完成。</span><span class="sxs-lookup"><span data-stu-id="1760a-376">This method blocks until the operation completes.</span></span> <span data-ttu-id="1760a-377">若要阻止阻塞在操作完成之前，使用之一<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="1760a-377">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="1760a-378">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-378">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="1760a-379">应关闭此对象，并删除对它的所有引用，以便它可以收集的垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="1760a-379">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-380">
            <paramref name="serverCertificate" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-380">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1760a-381">
            <paramref name="enabledSslProtocols" /> 不是有效的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-381">
              <paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="1760a-382">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-382">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-383">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-383">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="1760a-384">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-384">-or-</span>
          </span>
          <span data-ttu-id="1760a-385">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-385">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="1760a-386">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-386">-or-</span>
          </span>
          <span data-ttu-id="1760a-387">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-387">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1760a-388">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-388">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="1760a-389">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-389">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-390">服务器调用此方法，对客户端-服务器连接中的服务器及客户端（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-390">Called by servers to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync serverCertificate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="1760a-391">用于对服务器进行身份验证的证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-391">The certificate used to authenticate the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-392">服务器调用此方法，使用指定的证书对客户端-服务器连接中的服务器及客户端（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-392">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1760a-393">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-393">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="1760a-394">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-394">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="1760a-395">此方法进行身份验证使用<xref:System.Security.Authentication.SslProtocols.Default>。</span><span class="sxs-lookup"><span data-stu-id="1760a-395">This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>.</span></span> <span data-ttu-id="1760a-396">在身份验证期间不检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="1760a-396">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="1760a-397">客户端不需要进行身份验证提供证书。</span><span class="sxs-lookup"><span data-stu-id="1760a-397">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="1760a-398">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-398">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="1760a-399">应关闭此对象，并删除对它的所有引用，以便它可以收集的垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="1760a-399">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-400">
            <paramref name="serverCertificate" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-400">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="1760a-401">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-401">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-402">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-402">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="1760a-403">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-403">-or-</span>
          </span>
          <span data-ttu-id="1760a-404">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-404">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="1760a-405">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-405">-or-</span>
          </span>
          <span data-ttu-id="1760a-406">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-406">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1760a-407">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-407">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="1760a-408">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-408">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.Security.SslServerAuthenticationOptions sslServerAuthenticationOptions, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.Security.SslServerAuthenticationOptions sslServerAuthenticationOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Net.Security.SslServerAuthenticationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::Security::SslServerAuthenticationOptions ^ sslServerAuthenticationOptions, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.AuthenticateAsServerAsync : System.Net.Security.SslServerAuthenticationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync (sslServerAuthenticationOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sslServerAuthenticationOptions" Type="System.Net.Security.SslServerAuthenticationOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sslServerAuthenticationOptions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync (serverCertificate, clientCertificateRequired, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="1760a-409">用于对服务器进行身份验证的 X509Certificate 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-409">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="1760a-410">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-410">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="1760a-411">请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-411">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="1760a-412">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-412">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-413">由服务器调用，以通过异步操作的形式使用指定的证书、要求和安全协议对客户端 - 服务器连接中的服务器和客户端（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-413">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1760a-414">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-414">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="1760a-415">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-415">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="1760a-416">应关闭此对象，并删除对它的所有引用，以便它可以收集的垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="1760a-416">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync (serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="1760a-417">用于对服务器进行身份验证的 X509Certificate 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-417">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="1760a-418">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-418">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="1760a-419">请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-419">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="1760a-420">代表用于身份验证的协议的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-420">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="1760a-421">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-421">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-422">由服务器调用，以通过异步操作的形式使用指定的证书、要求和安全协议对客户端 - 服务器连接中的服务器和客户端（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-422">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1760a-423">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-423">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="1760a-424">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-424">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="1760a-425">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-425">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="1760a-426">应关闭此对象，并删除对它的所有引用，以便它可以收集的垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="1760a-426">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-427">开始一个操作，以对客户端-服务器连接中的客户端进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-427">Begins an operation to authenticate the client side of a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-428">在进行身份验证时不会阻止此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="1760a-428">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="1760a-429">若要阻止等待进行身份验证完成时，请使用其中一个<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-429">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsClient (targetHost, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="1760a-430">共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-430">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="1760a-431">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-431">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="1760a-432">一个用户定义对象，其中包含操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-432">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="1760a-433">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-433">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-434">客户端调用此方法，以便开始一个异步操作，对服务器及客户端（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-434">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1760a-435">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-435">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] <span data-ttu-id="1760a-436">任何客户端证书身份验证中不使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-436">No client certificates are used in the authentication.</span></span> <span data-ttu-id="1760a-437">在身份验证期间不检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="1760a-437">The certificate revocation list is not checked during authentication.</span></span>  
  
 <span data-ttu-id="1760a-438">为指定的值`targetHost`必须与服务器的证书上的名称相匹配。</span><span class="sxs-lookup"><span data-stu-id="1760a-438">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="1760a-439">必须通过调用完成异步验证操作<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-439">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="1760a-440">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="1760a-440">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="1760a-441">在操作完成时，此方法不会阻止。</span><span class="sxs-lookup"><span data-stu-id="1760a-441">This method does not block while the operation completes.</span></span> <span data-ttu-id="1760a-442">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="1760a-442">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="1760a-443">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="1760a-443">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="1760a-444">如果你收到<xref:System.Security.Authentication.AuthenticationException>，则此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-444">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="1760a-445">应关闭此对象，并删除对它的所有引用，以便它可以收集的垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="1760a-445">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-446">
            <paramref name="targetHost" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-446">
              <paramref name="targetHost" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="1760a-447">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-447">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-448">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-448">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="1760a-449">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-449">-or-</span>
          </span>
          <span data-ttu-id="1760a-450">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-450">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="1760a-451">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-451">-or-</span>
          </span>
          <span data-ttu-id="1760a-452">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-452">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1760a-453">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-453">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsClient (targetHost, clientCertificates, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="1760a-454">共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-454">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="1760a-455">
            <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> 包含客户端证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-455">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> containing client certificates.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="1760a-456">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-456">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="1760a-457">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-457">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="1760a-458">一个用户定义对象，其中包含操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-458">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="1760a-459">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-459">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-460">由客户端调用，以使用指定的证书和系统默认安全协议开始对服务器和客户端（可选）异步进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-460">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and the system default security protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1760a-461">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-461">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="1760a-462">为指定的值`targetHost`必须与服务器的证书上的名称相匹配。</span><span class="sxs-lookup"><span data-stu-id="1760a-462">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="1760a-463">必须通过调用完成异步验证操作<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-463">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="1760a-464">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="1760a-464">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="1760a-465">在操作完成时，此方法不会阻止。</span><span class="sxs-lookup"><span data-stu-id="1760a-465">This method does not block while the operation completes.</span></span> <span data-ttu-id="1760a-466">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="1760a-466">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="1760a-467">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="1760a-467">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="1760a-468">如果你收到<xref:System.Security.Authentication.AuthenticationException>，则此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-468">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="1760a-469">应关闭此对象，并删除对它的所有引用，以便它可以收集的垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="1760a-469">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1760a-470">不支持 SSL 版本 2 协议在客户端证书。</span><span class="sxs-lookup"><span data-stu-id="1760a-470">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-471">
            <paramref name="targetHost" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-471">
              <paramref name="targetHost" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="1760a-472">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-472">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-473">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-473">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="1760a-474">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-474">-or-</span>
          </span>
          <span data-ttu-id="1760a-475">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-475">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="1760a-476">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-476">-or-</span>
          </span>
          <span data-ttu-id="1760a-477">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-477">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1760a-478">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-478">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsClient (targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="1760a-479">共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-479">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="1760a-480">
            <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> 包含客户端证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-480">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> containing client certificates.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="1760a-481">代表用于身份验证的协议的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-481">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="1760a-482">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-482">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="1760a-483">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-483">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="1760a-484">一个用户定义对象，其中包含操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-484">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="1760a-485">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-485">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-486">客户端调用此方法，以便开始一个异步操作，使用指定的证书和安全协议对服务器及客户端（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-486">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and security protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1760a-487">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-487">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="1760a-488">为指定的值`targetHost`必须与服务器的证书上的名称相匹配。</span><span class="sxs-lookup"><span data-stu-id="1760a-488">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="1760a-489">必须通过调用完成异步验证操作<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-489">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="1760a-490">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="1760a-490">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="1760a-491">在操作完成时，此方法不会阻止。</span><span class="sxs-lookup"><span data-stu-id="1760a-491">This method does not block while the operation completes.</span></span> <span data-ttu-id="1760a-492">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="1760a-492">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="1760a-493">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="1760a-493">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="1760a-494">如果你收到<xref:System.Security.Authentication.AuthenticationException>，则此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-494">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="1760a-495">应关闭此对象，并删除对它的所有引用，以便它可以收集的垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="1760a-495">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1760a-496">不支持 SSL 版本 2 协议在客户端证书。</span><span class="sxs-lookup"><span data-stu-id="1760a-496">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-497">
            <paramref name="targetHost" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-497">
              <paramref name="targetHost" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1760a-498">
            <paramref name="enabledSslProtocols" /> 不是有效的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-498">
              <paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="1760a-499">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-499">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-500">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-500">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="1760a-501">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-501">-or-</span>
          </span>
          <span data-ttu-id="1760a-502">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-502">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="1760a-503">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-503">-or-</span>
          </span>
          <span data-ttu-id="1760a-504">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-504">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1760a-505">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-505">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-506">开始一个异步操作，以处理进行身份验证的客户端-服务器连接中的服务器端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-506">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-507">在进行身份验证时不会阻止此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="1760a-507">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="1760a-508">若要阻止等待进行身份验证完成时，请使用其中一个<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-508">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsServer (serverCertificate, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="1760a-509">用于对服务器进行身份验证的 X509Certificate 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-509">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="1760a-510">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-510">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="1760a-511">一个用户定义对象，其中包含操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-511">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="1760a-512">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-512">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-513">服务器调用此方法，以便开始一个异步操作，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-513">Called by servers to begin an asynchronous operation to authenticate the client and optionally the server in a client-server connection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1760a-514">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-514">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] <span data-ttu-id="1760a-515">在身份验证期间不检查证书吊销列表。</span><span class="sxs-lookup"><span data-stu-id="1760a-515">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="1760a-516">客户端不需要进行身份验证提供证书。</span><span class="sxs-lookup"><span data-stu-id="1760a-516">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="1760a-517">必须通过调用完成异步验证操作<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-517">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="1760a-518">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="1760a-518">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="1760a-519">在操作完成时，此方法不会阻止。</span><span class="sxs-lookup"><span data-stu-id="1760a-519">This method does not block while the operation completes.</span></span> <span data-ttu-id="1760a-520">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="1760a-520">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="1760a-521">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="1760a-521">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="1760a-522">如果你收到<xref:System.Security.Authentication.AuthenticationException>，则此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-522">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="1760a-523">应关闭此对象，并删除对它的所有引用，以便它可以收集的垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="1760a-523">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-524">
            <paramref name="serverCertificate" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-524">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="1760a-525">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-525">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-526">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-526">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="1760a-527">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-527">-or-</span>
          </span>
          <span data-ttu-id="1760a-528">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-528">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="1760a-529">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-529">-or-</span>
          </span>
          <span data-ttu-id="1760a-530">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-530">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1760a-531">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-531">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="1760a-532">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-532">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsServer (serverCertificate, clientCertificateRequired, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="1760a-533">用于对服务器进行身份验证的 X509Certificate 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-533">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="1760a-534">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-534">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="1760a-535">请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-535">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="1760a-536">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-536">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="1760a-537">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-537">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="1760a-538">一个用户定义对象，其中包含操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-538">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="1760a-539">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-539">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-540">由服务器调用，以使用指定的证书、要求和系统默认安全协议开始对服务器和客户端（可选）异步进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-540">Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and requirements, and the system default security protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1760a-541">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-541">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="1760a-542">必须通过调用完成异步验证操作<xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-542">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="1760a-543">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="1760a-543">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="1760a-544">在操作完成时，此方法不会阻止。</span><span class="sxs-lookup"><span data-stu-id="1760a-544">This method does not block while the operation completes.</span></span> <span data-ttu-id="1760a-545">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="1760a-545">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="1760a-546">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="1760a-546">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="1760a-547">如果你收到<xref:System.Security.Authentication.AuthenticationException>，则此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-547">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="1760a-548">应关闭此对象，并删除对它的所有引用，以便它可以收集的垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="1760a-548">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-549">
            <paramref name="serverCertificate" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-549">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="1760a-550">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-550">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-551">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-551">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="1760a-552">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-552">-or-</span>
          </span>
          <span data-ttu-id="1760a-553">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-553">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="1760a-554">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-554">-or-</span>
          </span>
          <span data-ttu-id="1760a-555">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-555">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1760a-556">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-556">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="1760a-557">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-557">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsServer (serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="1760a-558">用于对服务器进行身份验证的 X509Certificate 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-558">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="1760a-559">一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-559">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="1760a-560">请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-560">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="1760a-561">代表用于身份验证的协议的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-561">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="1760a-562">一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-562">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="1760a-563">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-563">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="1760a-564">一个用户定义对象，其中包含操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-564">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="1760a-565">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-565">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-566">由服务器调用，以使用指定的证书、要求和安全协议开始对服务器和客户端（可选）异步进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-566">Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates, requirements and security protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1760a-567">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-567">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="1760a-568">必须通过调用完成异步验证操作<xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-568">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="1760a-569">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="1760a-569">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="1760a-570">在操作完成时，此方法不会阻止。</span><span class="sxs-lookup"><span data-stu-id="1760a-570">This method does not block while the operation completes.</span></span> <span data-ttu-id="1760a-571">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="1760a-571">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="1760a-572">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="1760a-572">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="1760a-573">如果你收到<xref:System.Security.Authentication.AuthenticationException>，则此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-573">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="1760a-574">应关闭此对象，并删除对它的所有引用，以便它可以收集的垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="1760a-574">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-575">
            <paramref name="serverCertificate" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-575">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1760a-576">
            <paramref name="enabledSslProtocols" /> 不是有效的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-576">
              <paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="1760a-577">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-577">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-578">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-578">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="1760a-579">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-579">-or-</span>
          </span>
          <span data-ttu-id="1760a-580">之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-580">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="1760a-581">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-581">-or-</span>
          </span>
          <span data-ttu-id="1760a-582">身份验证已在进行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-582">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1760a-583">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-583">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="1760a-584">Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-584">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginRead (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="1760a-585">一个 <see cref="T:System.Byte" /> 数组，该数组接收从流中读取的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-585">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="1760a-586">
            <c>缓冲区</c>中从零开始的位置，从此处开始存储从此流中读取的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-586">The zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1760a-587">要从流中读取的最大字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-587">The maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="1760a-588">
            <see cref="T:System.AsyncCallback" /> 委托，该委托引用读操作完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-588">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="1760a-589">一个用户定义的对象，其中包含读操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-589">A user-defined object that contains information about the read operation.</span>
          </span>
          <span data-ttu-id="1760a-590">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-590">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-591">开始一个异步读操作，此操作读取流中的数据并将其存储在指定的数组中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-591">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1760a-592">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-592">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-593">如果启用了加密和签名，读取的操作从基础流中读取数据、 检查数据的完整性和/或对其进行解密。</span><span class="sxs-lookup"><span data-stu-id="1760a-593">If encryption and or signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and/or decrypts it.</span></span> <span data-ttu-id="1760a-594">异步读取的操作必须通过调用已完成<xref:System.Net.Security.SslStream.EndRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-594">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.SslStream.EndRead%2A> method.</span></span> <span data-ttu-id="1760a-595">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="1760a-595">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="1760a-596">在操作完成时，此方法不会阻止。</span><span class="sxs-lookup"><span data-stu-id="1760a-596">This method does not block while the operation completes.</span></span> <span data-ttu-id="1760a-597">若要阻止在操作完成之前，请使用<xref:System.Net.Security.SslStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-597">To block until the operation completes, use the <xref:System.Net.Security.SslStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="1760a-598">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="1760a-598">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="1760a-599"><xref:System.Net.Security.SslStream>类不支持多个读操作。</span><span class="sxs-lookup"><span data-stu-id="1760a-599">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous read operations.</span></span>  
  
 <span data-ttu-id="1760a-600">不能调用此方法，直到您已成功通过身份验证。</span><span class="sxs-lookup"><span data-stu-id="1760a-600">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="1760a-601">若要进行身份验证的调用一个<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>，或<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>，<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-601">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-602">下面的代码示例演示如何启动一个异步读的操作。</span><span class="sxs-lookup"><span data-stu-id="1760a-602">The following code example demonstrates starting an asynchronous read operation.</span></span>  
  
 [!code-cpp[NclSslClientAsync#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#8)]
 [!code-csharp[NclSslClientAsync#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#8)]  
  
 [!code-cpp[NclSslClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#4)]
 [!code-csharp[NclSslClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#4)]  
  
 <span data-ttu-id="1760a-603">在读取完成时，被调用以下方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-603">The following method is called when the read completes.</span></span>  
  
 [!code-cpp[NclSslClientAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#5)]
 [!code-csharp[NclSslClientAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-604">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-604">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1760a-605">
            <paramref name="offset" />
            <paramref name="&lt;" />
            <paramref name="0" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-605">
              <paramref name="offset" />
              <paramref name="&lt;" />
              <paramref name="0" />.</span>
          </span>
          <span data-ttu-id="1760a-606">
            <paramref name="-or-" />
            <paramref name="offset" /> &gt; <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-606">
              <paramref name="-or-" />
              <paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="1760a-607">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-607">-or-</span>
          </span>
          <span data-ttu-id="1760a-608">
            <paramref name="offset" /> + count &gt; <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-608">
              <paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1760a-609">读操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-609">The read operation failed.</span>
          </span>
          <span data-ttu-id="1760a-610">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-610">-or-</span>
          </span>
          <span data-ttu-id="1760a-611">使用了加密服务，但未能解密该数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-611">Encryption is in use, but the data could not be decrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1760a-612">已存在一个正在执行的读取操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-612">There is already a read operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1760a-613">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-613">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-614">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-614">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginWrite (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="1760a-615">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-615">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="1760a-616">
            <c>缓冲区</c>中从零开始的位置，从此处开始读取要写入流中的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-616">The zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1760a-617">
            <see cref="T:System.Int32" /> 值，该值指定要从<c>缓冲区</c>中读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-617">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="1760a-618">
            <see cref="T:System.AsyncCallback" /> 委托，它引用写操作完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-618">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="1760a-619">一个用户定义的对象，其中包含写操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-619">A user-defined object that contains information about the write operation.</span>
          </span>
          <span data-ttu-id="1760a-620">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-620">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-621">开始一个异步写操作，此操作将指定缓冲区中的 <see cref="T:System.Byte" /> 写入到流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-621">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1760a-622">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-622">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1760a-623">下面的代码示例演示如何调用此方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-623">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NclSslServerAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerAsync/CPP/NclSslServerAsync.cpp#5)]
 [!code-csharp[NclSslServerAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerAsync/CS/serverasync.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-624">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-624">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1760a-625">
            <paramref name="offset" />
            <paramref name="&lt;" />
            <paramref name="0" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-625">
              <paramref name="offset" />
              <paramref name="&lt;" />
              <paramref name="0" />.</span>
          </span>
          <span data-ttu-id="1760a-626">
            <paramref name="-or-" />
            <paramref name="offset" /> &gt; <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-626">
              <paramref name="-or-" />
              <paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="1760a-627">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-627">-or-</span>
          </span>
          <span data-ttu-id="1760a-628">
            <paramref name="offset" /> + count &gt; <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-628">
              <paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1760a-629">写操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-629">The write operation failed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1760a-630">已存在一个正在执行的写操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-630">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1760a-631">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-631">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-632">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-632">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Security.SslStream.CanRead" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanRead</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-633">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-633">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-634">如果已进行身份验证且基础流可读，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-634">
              <see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-635">如果身份验证成功，此属性返回通过调用返回的值<xref:System.IO.Stream.CanRead%2A>对基础流。</span><span class="sxs-lookup"><span data-stu-id="1760a-635">If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanRead%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="1760a-636">当你创建的实例时指定基础流<xref:System.Net.Security.SslStream>类。</span><span class="sxs-lookup"><span data-stu-id="1760a-636">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-637">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="1760a-637">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Security.SslStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-638">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可查找。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-638">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-639">此属性始终返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-639">This property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-640">不要尝试设置的位置<xref:System.Net.Security.SslStream>对象或其基础流。</span><span class="sxs-lookup"><span data-stu-id="1760a-640">Do not attempt to set the position of the <xref:System.Net.Security.SslStream> object or its underlying stream.</span></span>  
  
 <span data-ttu-id="1760a-641">当你创建的实例时指定基础流<xref:System.Net.Security.SslStream>类。</span><span class="sxs-lookup"><span data-stu-id="1760a-641">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Stream.CanSeek" />
        <altmember cref="P:System.Net.Security.SslStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Security.SslStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-642">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否支持超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-642">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-643">如果基础流支持超时，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-643">
              <see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-644">此属性返回通过调用返回的值<xref:System.IO.Stream.CanTimeout%2A>对基础流。</span><span class="sxs-lookup"><span data-stu-id="1760a-644">This property returns the value returned by invoking <xref:System.IO.Stream.CanTimeout%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="1760a-645">当你创建的实例时指定基础流<xref:System.Net.Security.SslStream>类。</span><span class="sxs-lookup"><span data-stu-id="1760a-645">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-646">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="1760a-646">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Security.SslStream.CanWrite" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanWrite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-647">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-647">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-648">如果已进行身份验证且基础流可写，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-648">
              <see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-649">如果身份验证成功，此属性返回通过调用返回的值<xref:System.IO.Stream.CanWrite%2A>对基础流。</span><span class="sxs-lookup"><span data-stu-id="1760a-649">If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanWrite%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="1760a-650">当你创建的实例时指定基础流<xref:System.Net.Security.SslStream>类。</span><span class="sxs-lookup"><span data-stu-id="1760a-650">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-651">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="1760a-651">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCertRevocationStatus">
      <MemberSignature Language="C#" Value="public virtual bool CheckCertRevocationStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCertRevocationStatus" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CheckCertRevocationStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CheckCertRevocationStatus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CheckCertRevocationStatus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckCertRevocationStatus : bool" Usage="System.Net.Security.SslStream.CheckCertRevocationStatus" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CheckCertRevocationStatus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-652">获取一个 <see cref="T:System.Boolean" /> 值，该值指示在证书验证过程中是否检查证书吊销列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-652">Gets a <see cref="T:System.Boolean" /> value that indicates whether the certificate revocation list is checked during the certificate validation process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-653">如果检查证书吊销列表，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-653">
              <see langword="true" /> if the certificate revocation list is checked; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-654">证书吊销列表包含已被颁发者吊销的证书。</span><span class="sxs-lookup"><span data-stu-id="1760a-654">The certificate revocation list contains certificates that have been revoked by the issuer.</span></span> <span data-ttu-id="1760a-655">在列表中检查产生负面影响性能，但会提高应用程序安全性。</span><span class="sxs-lookup"><span data-stu-id="1760a-655">Checking the list negatively impacts performance but improves application security.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-656">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="1760a-656">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CipherAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.CipherAlgorithmType CipherAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.CipherAlgorithmType CipherAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CipherAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CipherAlgorithm As CipherAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::CipherAlgorithmType CipherAlgorithm { System::Security::Authentication::CipherAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.CipherAlgorithm : System.Security.Authentication.CipherAlgorithmType" Usage="System.Net.Security.SslStream.CipherAlgorithm" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CipherAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.CipherAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-657">获取一个值，该值确定此 <see cref="T:System.Net.Security.SslStream" /> 使用的批量加密算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-657">Gets a value that identifies the bulk encryption algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-658">一个 <see cref="T:System.Security.Authentication.CipherAlgorithmType" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-658">A <see cref="T:System.Security.Authentication.CipherAlgorithmType" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-659">值为<xref:System.Security.Authentication.CipherAlgorithmType.Null>才可进行<xref:System.Net.Security.SslStream.CipherAlgorithm%2A>属性时<xref:System.Net.Security.EncryptionPolicy.NoEncryption>枚举值用于构造<xref:System.Net.Security.SslStream>实例。</span><span class="sxs-lookup"><span data-stu-id="1760a-659">A value of <xref:System.Security.Authentication.CipherAlgorithmType.Null> is required for the <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property when the <xref:System.Net.Security.EncryptionPolicy.NoEncryption> enumeration value is used to construct a <xref:System.Net.Security.SslStream> instance.</span></span>  
  
 [!INCLUDE[winxpsvr](~/includes/winxpsvr-md.md)] <span data-ttu-id="1760a-660">并[!INCLUDE[winxp](~/includes/winxp-md.md)]不支持<xref:System.Security.Authentication.CipherAlgorithmType.Null>值。</span><span class="sxs-lookup"><span data-stu-id="1760a-660">and [!INCLUDE[winxp](~/includes/winxp-md.md)] do not support the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value.</span></span> <span data-ttu-id="1760a-661">因此，即使<xref:System.Security.Authentication.CipherAlgorithmType.Null>值用于构造<xref:System.Net.Security.SslStream>实例，<xref:System.Net.Security.EncryptionPolicy>属性将为<xref:System.Security.Authentication.CipherAlgorithmType.None>。</span><span class="sxs-lookup"><span data-stu-id="1760a-661">So even if the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is used to construct the <xref:System.Net.Security.SslStream> instance, the <xref:System.Net.Security.EncryptionPolicy> property will be <xref:System.Security.Authentication.CipherAlgorithmType.None>.</span></span> <span data-ttu-id="1760a-662"><xref:System.Security.Authentication.CipherAlgorithmType.Null>时，Windows Vista 及更高版本才返回值。</span><span class="sxs-lookup"><span data-stu-id="1760a-662">The <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is only returned on Windows Vista and later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-663">下面的代码示例显示为指定的流的加密设置。</span><span class="sxs-lookup"><span data-stu-id="1760a-663">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-664">
            <see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> 属性是在身份验证过程未完成时访问的或者身份验证过程失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-664">The <see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> property was accessed before the completion of the authentication process or the authentication process failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CipherStrength">
      <MemberSignature Language="C#" Value="public virtual int CipherStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CipherStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CipherStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CipherStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CipherStrength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CipherStrength : int" Usage="System.Net.Security.SslStream.CipherStrength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CipherStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-665">获取一个值，该值确定此 <see cref="T:System.Net.Security.SslStream" /> 使用的密码算法的强度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-665">Gets a value that identifies the strength of the cipher algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-666">
            <see cref="T:System.Int32" /> 值，该值指定算法的强度（以位为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-666">An <see cref="T:System.Int32" /> value that specifies the strength of the algorithm, in bits.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-667">身份验证之前，此属性的值为零。</span><span class="sxs-lookup"><span data-stu-id="1760a-667">The value of this property is zero until the authentication occurs.</span></span>  
  
 <span data-ttu-id="1760a-668">此属性将返回以下值之一：</span><span class="sxs-lookup"><span data-stu-id="1760a-668">This property returns one of the following values:</span></span>  
  
-   <span data-ttu-id="1760a-669">0</span><span class="sxs-lookup"><span data-stu-id="1760a-669">0</span></span>  
  
-   <span data-ttu-id="1760a-670">40</span><span class="sxs-lookup"><span data-stu-id="1760a-670">40</span></span>  
  
-   <span data-ttu-id="1760a-671">56</span><span class="sxs-lookup"><span data-stu-id="1760a-671">56</span></span>  
  
-   <span data-ttu-id="1760a-672">80</span><span class="sxs-lookup"><span data-stu-id="1760a-672">80</span></span>  
  
-   <span data-ttu-id="1760a-673">128</span><span class="sxs-lookup"><span data-stu-id="1760a-673">128</span></span>  
  
-   <span data-ttu-id="1760a-674">168</span><span class="sxs-lookup"><span data-stu-id="1760a-674">168</span></span>  
  
-   <span data-ttu-id="1760a-675">192</span><span class="sxs-lookup"><span data-stu-id="1760a-675">192</span></span>  
  
-   <span data-ttu-id="1760a-676">256</span><span class="sxs-lookup"><span data-stu-id="1760a-676">256</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-677">下面的代码示例显示为指定的流的加密设置。</span><span class="sxs-lookup"><span data-stu-id="1760a-677">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sslStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="1760a-678">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-678">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-679">释放由 <see cref="T:System.Net.Security.SslStream" /> 占用的非托管资源，还可以另外再释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-679">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.SslStream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-680">调用此方法由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-680">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="1760a-681">`Dispose()` 调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="1760a-681">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="1760a-682"><xref:System.Object.Finalize%2A> 调用`Dispose`与`disposing`设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="1760a-682"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="1760a-683">当`disposing`参数为 true 时，此方法释放任何托管对象所持有的所有资源，此<xref:System.Net.Security.SslStream>的引用。</span><span class="sxs-lookup"><span data-stu-id="1760a-683">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.SslStream> references.</span></span> <span data-ttu-id="1760a-684">此方法调用每个引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-684">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1760a-685">
              <see langword="Dispose" /> 可以由其他对象多次调用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1760a-685">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="1760a-686">重写时<see langword="Dispose(Boolean)" />小心不要引用已经释放的早期调用中的对象<see langword="Dispose" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1760a-686">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="1760a-687">有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1760a-687">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="1760a-688">有关详细信息<see langword="Dispose" />并<see cref="M:System.Object.Finalize" />，请参阅[清理了非托管资源](~/docs/standard/garbage-collection/unmanaged.md)并[重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1760a-688">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsClient : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsClient : IAsyncResult -&gt; unit" Usage="sslStream.EndAuthenticateAsClient asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndAuthenticateAsClient(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="1760a-689">调用 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-689">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-690">结束通过以前调用 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> 而启动的、处于挂起状态的异步服务器身份验证操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-690">Ends a pending asynchronous server authentication operation started with a previous call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-691">如果该操作未完成，此方法阻止，直至它。</span><span class="sxs-lookup"><span data-stu-id="1760a-691">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="1760a-692">当身份验证成功时，必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>并<xref:System.Net.Security.SslStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="1760a-692">When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="1760a-693">检查<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="1760a-693">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="1760a-694">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-694">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="1760a-695">应关闭此对象，并删除对它的所有引用，以便它可以收集的垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="1760a-695">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="1760a-696">若要以同步方式执行此操作，使用之一<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-696">To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-697">
            <paramref name="asyncResult" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-697">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1760a-698">
            <paramref name="asyncResult" /> 并不是通过对 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> 的调用创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-698">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="1760a-699">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-699">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-700">没有处于挂起状态的服务器身份验证要完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-700">There is no pending server authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsServer : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsServer : IAsyncResult -&gt; unit" Usage="sslStream.EndAuthenticateAsServer asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndAuthenticateAsServer(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="1760a-701">调用 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-701">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-702">结束通过以前调用 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> 而启动的、处于挂起状态的异步客户端身份验证操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-702">Ends a pending asynchronous client authentication operation started with a previous call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-703">如果该操作未完成，此方法阻止，直至它。</span><span class="sxs-lookup"><span data-stu-id="1760a-703">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="1760a-704">当身份验证成功时，必须检查<xref:System.Net.Security.SslStream.IsEncrypted%2A>并<xref:System.Net.Security.SslStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="1760a-704">When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="1760a-705">检查<xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="1760a-705">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="1760a-706">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>，并且此<xref:System.Net.Security.SslStream>已不再使用。</span><span class="sxs-lookup"><span data-stu-id="1760a-706">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="1760a-707">应关闭此对象，并删除对它的所有引用，以便它可以收集的垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="1760a-707">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="1760a-708">若要以同步方式执行此操作，使用之一<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-708">To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-709">
            <paramref name="asyncResult" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-709">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1760a-710">
            <paramref name="asyncResult" /> 并不是通过对 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> 的调用创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-710">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="1760a-711">身份验证失败，并使此对象处于不可用的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-711">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-712">没有需要完成的处于挂起状态的客户端身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-712">There is no pending client authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="sslStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndRead(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="1760a-713">调用 <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-713">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-714">结束通过以前调用 <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而启动的异步读操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-714">Ends an asynchronous read operation started with a previous call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1760a-715">
            <see cref="T:System.Int32" /> 值，该值指定从基础流中读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-715">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-716">如果该操作未完成，此方法阻止，直至它。</span><span class="sxs-lookup"><span data-stu-id="1760a-716">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="1760a-717">若要以同步方式执行此操作，请使用<xref:System.Net.Security.SslStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-717">To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="1760a-718">不能调用此方法，直到您已成功通过身份验证。</span><span class="sxs-lookup"><span data-stu-id="1760a-718">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="1760a-719">若要进行身份验证的调用一个<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>，或<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>，<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-719">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-720">下面的代码示例演示结束异步读取操作。</span><span class="sxs-lookup"><span data-stu-id="1760a-720">The following code example demonstrates ending an asynchronous read operation.</span></span>  
  
 [!code-cpp[NclSslClientAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#5)]
 [!code-csharp[NclSslClientAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-721">
            <paramref name="asyncResult" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-721">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1760a-722">
            <paramref name="asyncResult" /> 并不是通过对 <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 的调用创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-722">
              <paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-723">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-723">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1760a-724">读操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-724">The read operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="sslStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndWrite(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="1760a-725">调用 <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-725">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-726">结束通过以前调用 <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而启动的异步写操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-726">Ends an asynchronous write operation started with a previous call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-727">如果该操作未完成，此方法阻止，直至它。</span><span class="sxs-lookup"><span data-stu-id="1760a-727">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="1760a-728">应用程序不能调用此方法，直到您已成功通过身份验证。</span><span class="sxs-lookup"><span data-stu-id="1760a-728">An application cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="1760a-729">若要进行身份验证，调用之一<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>，或<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>，<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-729">To authenticate, call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="1760a-730">若要以同步方式执行此操作，请使用<xref:System.Net.Security.SslStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-730">To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-731">下面的代码示例演示如何结束异步写入操作。</span><span class="sxs-lookup"><span data-stu-id="1760a-731">The following code example demonstrates ending an asynchronous write operation.</span></span>  
  
 [!code-cpp[NclSslServerAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerAsync/CPP/NclSslServerAsync.cpp#4)]
 [!code-csharp[NclSslServerAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerAsync/CS/serverasync.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-732">
            <paramref name="asyncResult" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-732">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1760a-733">
            <paramref name="asyncResult" /> 并不是通过对 <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 的调用创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-733">
              <paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-734">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-734">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1760a-735">写操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-735">The write operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="sslStream.Flush " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Flush</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1760a-736">导致所有缓冲数据都要写入基础设备。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-736">Causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-737">此方法将调用<xref:System.IO.Stream.Flush%2A>对基础流。</span><span class="sxs-lookup"><span data-stu-id="1760a-737">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-738">下面的代码示例演示如何调用此方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-738">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NclSslClientSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#5)]
 [!code-csharp[NclSslClientSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sslStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.HashAlgorithmType HashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.HashAlgorithmType HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HashAlgorithm As HashAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::HashAlgorithmType HashAlgorithm { System::Security::Authentication::HashAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Security.Authentication.HashAlgorithmType" Usage="System.Net.Security.SslStream.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.HashAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.HashAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-739">获取用于生成消息身份验证代码 (MAC) 的算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-739">Gets the algorithm used for generating message authentication codes (MACs).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-740">一个 <see cref="T:System.Security.Authentication.HashAlgorithmType" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-740">A <see cref="T:System.Security.Authentication.HashAlgorithmType" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-741">消息验证算法可生成消息哈希和签名用于检测篡改和伪造。</span><span class="sxs-lookup"><span data-stu-id="1760a-741">Message authentication algorithms generate message hashes and signatures used to detect tampering and forgery.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-742">下面的代码示例显示为指定的流的加密设置。</span><span class="sxs-lookup"><span data-stu-id="1760a-742">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-743">
            <see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> 属性是在身份验证过程未完成时访问的或者身份验证过程失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-743">The <see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> property was accessed before the completion of the authentication process or the authentication process failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HashStrength">
      <MemberSignature Language="C#" Value="public virtual int HashStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HashStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.HashStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HashStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int HashStrength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.HashStrength : int" Usage="System.Net.Security.SslStream.HashStrength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.HashStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-744">获取一个值，该值标识此实例使用的哈希算法的强度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-744">Gets a value that identifies the strength of the hash algorithm used by this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-745">一个 <see cref="T:System.Int32" /> 值，指定 <see cref="T:System.Security.Authentication.HashAlgorithmType" /> 算法的强度（以位为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-745">An <see cref="T:System.Int32" /> value that specifies the strength of the <see cref="T:System.Security.Authentication.HashAlgorithmType" /> algorithm, in bits.</span>
          </span>
          <span data-ttu-id="1760a-746">有效值为 128 或 160。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-746">Valid values are 128 or 160.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-747">身份验证之前，此属性的值为零。</span><span class="sxs-lookup"><span data-stu-id="1760a-747">The value of this property is zero until the authentication occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-748">下面的代码示例显示为指定的流的加密设置。</span><span class="sxs-lookup"><span data-stu-id="1760a-748">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.Security.SslStream.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-749">获取一个 <see cref="T:System.Boolean" /> 值，该值指示身份验证是否成功。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-749">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-750">如果身份验证成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-750">
              <see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-751">客户端进行身份验证通过调用<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>或<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-751">Clients authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="1760a-752">通过调用的服务器进行身份验证<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>或<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-752">Servers authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-753">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="1760a-753">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEncrypted : bool" Usage="System.Net.Security.SslStream.IsEncrypted" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsEncrypted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-754">获取一个 <see cref="T:System.Boolean" /> 值，该值指示此 <see cref="T:System.Net.Security.SslStream" /> 是否使用数据加密。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-754">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.SslStream" /> uses data encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-755">如果在通过网络传输数据前将其加密，并在数据到达远程终结点后将其解密，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-755">
              <see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-756">加密来帮助保护数据的隐私，即它有助于确保，在传输数据时，它不能解密由第三方。</span><span class="sxs-lookup"><span data-stu-id="1760a-756">Encryption helps to protect the privacy of the data, namely it helps to ensure that while data is in transit, it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-757">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="1760a-757">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMutuallyAuthenticated : bool" Usage="System.Net.Security.SslStream.IsMutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsMutuallyAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-758">获取一个 <see cref="T:System.Boolean" /> 值，该值指示服务器和客户端是否均已进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-758">Gets a <see cref="T:System.Boolean" /> value that indicates whether both server and client have been authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-759">如果服务器已经过身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-759">
              <see langword="true" /> if the server has been authenticated; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-760">当服务器想客户端进行身份验证提供的证书时，服务器指定相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="1760a-760">Mutual authentication is specified by the server when the server wants the client to provide a certificate for authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-761">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="1760a-761">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" />
        <altmember cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServer : bool" Usage="System.Net.Security.SslStream.IsServer" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsServer</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-762">获取一个 <see cref="T:System.Boolean" /> 值，该值指示此 <see cref="T:System.Net.Security.SslStream" /> 使用的连接的本地端是否作为服务器进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-762">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.SslStream" /> was authenticated as the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-763">如果本地终结点作为经过身份验证的连接的服务器端成功地进行了身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-763">
              <see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-764">如果身份验证失败或未出现，此属性返回`false`。</span><span class="sxs-lookup"><span data-stu-id="1760a-764">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="1760a-765">若要与服务器进行身份验证，调用<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>或<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-765">To authenticate as the server, call the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-766">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="1760a-766">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.Net.Security.SslStream.IsSigned" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsSigned</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-767">获取一个 <see cref="T:System.Boolean" /> 值，该值指示使用此流发送的数据是否进行签名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-767">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-768">如果在传输数据前对其签名，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-768">
              <see langword="true" /> if the data is signed before being transmitted; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-769">数据签名可帮助保护数据的完整性，即它可以帮助确定是否将数据已被篡改在传输过程中的收件人。</span><span class="sxs-lookup"><span data-stu-id="1760a-769">Data signing helps to protect the integrity of the data, namely it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-770">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="1760a-770">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.KeyExchangeAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyExchangeAlgorithm As ExchangeAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::ExchangeAlgorithmType KeyExchangeAlgorithm { System::Security::Authentication::ExchangeAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyExchangeAlgorithm : System.Security.Authentication.ExchangeAlgorithmType" Usage="System.Net.Security.SslStream.KeyExchangeAlgorithm" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.KeyExchangeAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExchangeAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-771">获取此 <see cref="T:System.Net.Security.SslStream" /> 使用的密钥交换算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-771">Gets the key exchange algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-772">一个 <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-772">An <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-773">此属性的值是<xref:System.Security.Authentication.ExchangeAlgorithmType.None>之前进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="1760a-773">The value of this property is <xref:System.Security.Authentication.ExchangeAlgorithmType.None> until the authentication occurs.</span></span>  
  
 <span data-ttu-id="1760a-774">密钥交换算法可保护用来生成共享的密钥的信息。</span><span class="sxs-lookup"><span data-stu-id="1760a-774">The key exchange algorithm protects information used to generate shared keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-775">下面的代码示例显示为指定的流的加密设置。</span><span class="sxs-lookup"><span data-stu-id="1760a-775">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeStrength">
      <MemberSignature Language="C#" Value="public virtual int KeyExchangeStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyExchangeStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.KeyExchangeStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyExchangeStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeyExchangeStrength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyExchangeStrength : int" Usage="System.Net.Security.SslStream.KeyExchangeStrength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.KeyExchangeStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-776">获取一个值，该值指示此实例使用的密钥交换算法的强度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-776">Gets a value that identifies the strength of the key exchange algorithm used by this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-777">一个 <see cref="T:System.Int32" /> 值，指定 <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 算法的强度（以位为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-777">An <see cref="T:System.Int32" /> value that specifies the strength of the <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> algorithm, in bits.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-778">身份验证之前，此属性的值为零。</span><span class="sxs-lookup"><span data-stu-id="1760a-778">The value of this property is zero until the authentication occurs.</span></span>  
  
 <span data-ttu-id="1760a-779">通常情况下，此属性的值是以下值之一：</span><span class="sxs-lookup"><span data-stu-id="1760a-779">In common scenarios, the value of this property is one of the following:</span></span>  
  
-   <span data-ttu-id="1760a-780">512</span><span class="sxs-lookup"><span data-stu-id="1760a-780">512</span></span>  
  
-   <span data-ttu-id="1760a-781">768</span><span class="sxs-lookup"><span data-stu-id="1760a-781">768</span></span>  
  
-   <span data-ttu-id="1760a-782">1024</span><span class="sxs-lookup"><span data-stu-id="1760a-782">1024</span></span>  
  
-   <span data-ttu-id="1760a-783">2048</span><span class="sxs-lookup"><span data-stu-id="1760a-783">2048</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-784">下面的代码示例显示为指定的流的加密设置。</span><span class="sxs-lookup"><span data-stu-id="1760a-784">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Security.SslStream.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-785">获取基础流的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-785">Gets the length of the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-786">
            <see cref="T:System.Int64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-786">A <see cref="T:System.Int64" />.</span>
          </span>
          <span data-ttu-id="1760a-787">基础流的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-787">The length of the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-788">此属性返回通过调用返回的值<xref:System.IO.Stream.Length%2A>对基础流。</span><span class="sxs-lookup"><span data-stu-id="1760a-788">This property returns the value returned by invoking <xref:System.IO.Stream.Length%2A> on the underlying stream.</span></span> <span data-ttu-id="1760a-789">如果基础流不可查找，此方法通常会引发异常。</span><span class="sxs-lookup"><span data-stu-id="1760a-789">If the underlying stream is not seekable, this method typically throws an exception.</span></span> <span data-ttu-id="1760a-790">基础流的运行时类型确定引发的异常的运行时的类型。</span><span class="sxs-lookup"><span data-stu-id="1760a-790">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1760a-791">当基础流为 <see cref="T:System.Net.Sockets.NetworkStream" /> 时，不支持获取此属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-791">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LocalCertificate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.LocalCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LocalCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::X509Certificates::X509Certificate ^ LocalCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalCertificate : System.Security.Cryptography.X509Certificates.X509Certificate" Usage="System.Net.Security.SslStream.LocalCertificate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.LocalCertificate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-792">获取用于对本地终结点进行身份验证的证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-792">Gets the certificate used to authenticate the local endpoint.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-793">一个 X509Certificate 对象，它表示为身份验证提供的证书；或者，如果没有提供证书，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-793">An X509Certificate object that represents the certificate supplied for authentication or <see langword="null" /> if no certificate was supplied.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1760a-794">下面的代码示例演示如何显示此属性返回的证书。</span><span class="sxs-lookup"><span data-stu-id="1760a-794">The following code example demonstrates displaying the certificate returned by this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#6)]
 [!code-csharp[NclSslServerSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-795">身份验证失败或没有进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-795">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NegotiatedApplicationProtocol">
      <MemberSignature Language="C#" Value="public System.Net.Security.SslApplicationProtocol NegotiatedApplicationProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.SslApplicationProtocol NegotiatedApplicationProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.NegotiatedApplicationProtocol" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NegotiatedApplicationProtocol As SslApplicationProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::SslApplicationProtocol NegotiatedApplicationProtocol { System::Net::Security::SslApplicationProtocol get(); };" />
      <MemberSignature Language="F#" Value="member this.NegotiatedApplicationProtocol : System.Net.Security.SslApplicationProtocol" Usage="System.Net.Security.SslStream.NegotiatedApplicationProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.SslApplicationProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Security.SslStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-796">获取或设置基础流中的当前位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-796">Gets or sets the current position in the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-797">
            <see cref="T:System.Int64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-797">A <see cref="T:System.Int64" />.</span>
          </span>
          <span data-ttu-id="1760a-798">基础流中的当前位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-798">The current position in the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-799">此属性返回通过调用返回的值<xref:System.IO.Stream.Position%2A>对基础流。</span><span class="sxs-lookup"><span data-stu-id="1760a-799">This property returns the value returned by invoking <xref:System.IO.Stream.Position%2A> on the underlying stream.</span></span> <span data-ttu-id="1760a-800">如果基础流不可查找，此方法通常会引发异常。</span><span class="sxs-lookup"><span data-stu-id="1760a-800">If the underlying stream is not seekable, this method typically throws an exception.</span></span> <span data-ttu-id="1760a-801">基础流的运行时类型确定引发的异常的运行时的类型。</span><span class="sxs-lookup"><span data-stu-id="1760a-801">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1760a-802">不支持设置此属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-802">Setting this property is not supported.</span>
          </span>
          <span data-ttu-id="1760a-803">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-803">-or-</span>
          </span>
          <span data-ttu-id="1760a-804">当基础流为 <see cref="T:System.Net.Sockets.NetworkStream" /> 时，不支持获取此属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-804">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="sslStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Read(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="1760a-805">一个 <see cref="T:System.Byte" /> 数组，该数组接收从此流读取的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-805">A <see cref="T:System.Byte" /> array that receives the bytes read from this stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="1760a-806">
            <see cref="T:System.Int32" />，它包含 <c>buffer</c> 中从零开始的位置，从该位置开始存储从此流读取的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-806">A <see cref="T:System.Int32" /> that contains the zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1760a-807">
            <see cref="T:System.Int32" />，包含要从此流读取的最大字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-807">A <see cref="T:System.Int32" /> that contains the maximum number of bytes to read from this stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-808">读取此流中的数据并将其存储在指定的数组中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-808">Reads data from this stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1760a-809">
            <see cref="T:System.Int32" /> 值，该值指定读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-809">A <see cref="T:System.Int32" /> value that specifies the number of bytes read.</span>
          </span>
          <span data-ttu-id="1760a-810">如果再也没有要读取的数据，将返回 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-810">When there is no more data to be read, returns 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-811">该方法读取的最多`count`字节从流将其存储在`buffer`开始`offset`。</span><span class="sxs-lookup"><span data-stu-id="1760a-811">The method reads a maximum of `count` bytes from the stream and stores them in `buffer` beginning at `offset`.</span></span> <span data-ttu-id="1760a-812">无法执行多个同时进行的读取的操作。</span><span class="sxs-lookup"><span data-stu-id="1760a-812">You cannot perform multiple simultaneous read operations.</span></span>  
  
 <span data-ttu-id="1760a-813">不能调用此方法，直到您已成功通过身份验证。</span><span class="sxs-lookup"><span data-stu-id="1760a-813">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="1760a-814">若要进行身份验证的调用一个<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>，或<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>，<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-814">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="1760a-815">若要以异步方式执行此操作，请使用<xref:System.Net.Security.SslStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-815">To perform this operation asynchronously, use the <xref:System.Net.Security.SslStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-816">下面的代码示例演示如何读取从<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="1760a-816">The following code example demonstrates reading from an <xref:System.Net.Security.SslStream>.</span></span>  
  
 [!code-cpp[NclSslClientSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#6)]
 [!code-csharp[NclSslClientSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-817">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-817">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1760a-818">
            <paramref name="offset" />
            <paramref name="&lt;" />
            <paramref name="0" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-818">
              <paramref name="offset" />
              <paramref name="&lt;" />
              <paramref name="0" />.</span>
          </span>
          <span data-ttu-id="1760a-819">
            <paramref name="-or-" />
            <paramref name="offset" /> &gt; <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-819">
              <paramref name="-or-" />
              <paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="1760a-820">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-820">-or-</span>
          </span>
          <span data-ttu-id="1760a-821">
            <paramref name="offset" /> + count &gt; <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-821">
              <paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1760a-822">读操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-822">The read operation failed.</span>
          </span>
          <span data-ttu-id="1760a-823">检查内部异常（如果存在）以确定失败的原因。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-823">Check the inner exception, if present to determine the cause of the failure.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1760a-824">已存在一个正在执行的读取操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-824">There is already a read operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1760a-825">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-825">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-826">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-826">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Security.SslStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.ReadTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-827">获取或设置读操作阻止等待数据的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-827">Gets or sets the amount of time a read operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-828">
            <see cref="T:System.Int32" />，指定同步读操作失败前经过的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-828">A <see cref="T:System.Int32" /> that specifies the amount of time that elapses before a synchronous read operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-829">此属性返回通过调用返回的值<xref:System.IO.Stream.ReadTimeout%2A>对基础流。</span><span class="sxs-lookup"><span data-stu-id="1760a-829">This property returns the value returned by invoking <xref:System.IO.Stream.ReadTimeout%2A> on the underlying stream.</span></span> <span data-ttu-id="1760a-830">当设置此属性，<xref:System.IO.Stream.ReadTimeout%2A>对基础流的值设置为指定的值。</span><span class="sxs-lookup"><span data-stu-id="1760a-830">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="1760a-831">基础流是否<xref:System.Net.Sockets.NetworkStream>，<xref:System.Net.Security.SslStream.ReadTimeout%2A>以毫秒为单位并将设置为<xref:System.Threading.Timeout.Infinite>默认情况下，因此，它读取操作就不会超时。</span><span class="sxs-lookup"><span data-stu-id="1760a-831">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not timeout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-832">下面的代码示例演示如何设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="1760a-832">The following code example demonstrates setting the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteCertificate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.RemoteCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::X509Certificates::X509Certificate ^ RemoteCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteCertificate : System.Security.Cryptography.X509Certificates.X509Certificate" Usage="System.Net.Security.SslStream.RemoteCertificate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.RemoteCertificate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-833">获取用于对远程终结点进行身份验证的证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-833">Gets the certificate used to authenticate the remote endpoint.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-834">一个 X509Certificate 对象，它表示为身份验证提供的证书；或者，如果没有提供证书，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-834">An X509Certificate object that represents the certificate supplied for authentication or <see langword="null" /> if no certificate was supplied.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1760a-835">下面的代码示例演示如何显示此属性返回的证书。</span><span class="sxs-lookup"><span data-stu-id="1760a-835">The following code example demonstrates displaying the certificate returned by this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#6)]
 [!code-csharp[NclSslServerSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-836">身份验证失败或没有进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-836">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="sslStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="1760a-837">忽略此值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-837">This value is ignored.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="1760a-838">忽略此值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-838">This value is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-839">引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-839">Throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1760a-840">总是引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-840">Always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-841">请勿调用此方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-841">Do not call this method.</span></span> <span data-ttu-id="1760a-842">它被继承，但不是受<xref:System.Net.Security.SslStream>类。</span><span class="sxs-lookup"><span data-stu-id="1760a-842">It is inherited, but is not supported by the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1760a-843">
            <see cref="T:System.Net.Security.SslStream" /> 对象不支持查找。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-843">Seeking is not supported by <see cref="T:System.Net.Security.SslStream" /> objects.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="sslStream.SetLength value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.SetLength(System.Int64)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1760a-844">
            <see cref="T:System.Int64" /> 值，该值指定流的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-844">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-845">设置基础流的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-845">Sets the length of the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-846">此方法将调用<xref:System.IO.Stream.SetLength%2A?displayProperty=nameWithType>时，指定对基础流这<xref:System.Net.Security.SslStream>已创建。</span><span class="sxs-lookup"><span data-stu-id="1760a-846">This method invokes <xref:System.IO.Stream.SetLength%2A?displayProperty=nameWithType> on the underlying stream specified when this <xref:System.Net.Security.SslStream> was created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ShutdownAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ShutdownAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.ShutdownAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShutdownAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ShutdownAsync();" />
      <MemberSignature Language="F#" Value="abstract member ShutdownAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.ShutdownAsync : unit -&gt; System.Threading.Tasks.Task" Usage="sslStream.ShutdownAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1760a-847">关闭此 SslStream。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-847">Shuts down this SslStream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1760a-848">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-848">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SslProtocol">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.SslProtocols SslProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.SslProtocols SslProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.SslProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SslProtocol As SslProtocols" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::SslProtocols SslProtocol { System::Security::Authentication::SslProtocols get(); };" />
      <MemberSignature Language="F#" Value="member this.SslProtocol : System.Security.Authentication.SslProtocols" Usage="System.Net.Security.SslStream.SslProtocol" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.SslProtocol</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.SslProtocols</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-849">获取一个值，该值指示用于对此连接进行身份验证的安全协议。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-849">Gets a value that indicates the security protocol used to authenticate this connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-850">代表用于身份验证的协议的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-850">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-851">指定支持的安全协议时<xref:System.Net.Security.SslStream>创建。</span><span class="sxs-lookup"><span data-stu-id="1760a-851">The supported security protocols are specified when the <xref:System.Net.Security.SslStream> is created.</span></span> <span data-ttu-id="1760a-852">如果没有安全协议传递给构造函数，使用创建该实例<xref:System.Security.Authentication.SslProtocols.Default>。</span><span class="sxs-lookup"><span data-stu-id="1760a-852">If no security protocol was passed to the constructor, the instance is created using <xref:System.Security.Authentication.SslProtocols.Default>.</span></span> <span data-ttu-id="1760a-853">根据客户端和服务器支持的协议选择实际用于身份验证的协议。</span><span class="sxs-lookup"><span data-stu-id="1760a-853">The actual protocol used for authentication is selected based on the protocols supported by the client and server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-854">以下示例显示指定的流的安全属性。</span><span class="sxs-lookup"><span data-stu-id="1760a-854">The following example displays the security properties of the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransportContext">
      <MemberSignature Language="C#" Value="public System.Net.TransportContext TransportContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.TransportContext TransportContext" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.TransportContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransportContext As TransportContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::TransportContext ^ TransportContext { System::Net::TransportContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransportContext : System.Net.TransportContext" Usage="System.Net.Security.SslStream.TransportContext" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.TransportContext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.TransportContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-855">获取用于采用扩展保护的身份验证的 <see cref="T:System.Net.TransportContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-855">Gets the <see cref="T:System.Net.TransportContext" /> used for authentication using extended protection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-856">一个 <see cref="T:System.Net.TransportContext" /> 对象，它包含用于扩展保护的通道绑定令牌 (CBT)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-856">The <see cref="T:System.Net.TransportContext" /> object that contains the channel binding token (CBT) used for extended protection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="1760a-857">带有扩展保护的集成 Windows 身份验证</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-857">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-858">将数据写入此流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-858">Writes data to this stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Write(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] -&gt; unit" Usage="sslStream.Write buffer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Write(System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="1760a-859">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-859">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-860">将指定的数据写入此流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-860">Writes the specified data to this stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-861">此方法会阻止该操作完成时。</span><span class="sxs-lookup"><span data-stu-id="1760a-861">This method blocks while the operation completes.</span></span> <span data-ttu-id="1760a-862">若要阻止阻塞该操作完成时，使用<xref:System.Net.Security.SslStream.BeginWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-862">To prevent blocking while the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.</span></span>  
  
 <span data-ttu-id="1760a-863">不能调用此方法，直到您已成功通过身份验证。</span><span class="sxs-lookup"><span data-stu-id="1760a-863">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="1760a-864">若要进行身份验证的调用一个<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>，或<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>，<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-864">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="1760a-865"><xref:System.Net.Security.SslStream>类不支持多个同时进行写入操作。</span><span class="sxs-lookup"><span data-stu-id="1760a-865">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-866">下面的代码示例演示如何写入经过身份验证的<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="1760a-866">The following code example demonstrates writing to an authenticated <xref:System.Net.Security.SslStream>.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-867">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-867">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1760a-868">写操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-868">The write operation failed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1760a-869">已存在一个正在执行的写操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-869">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1760a-870">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-870">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-871">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-871">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="sslStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Write(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="1760a-872">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-872">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="1760a-873">
            <see cref="T:System.Int32" />，它包含 <c>buffer</c> 中从零开始的位置，从该位置开始读取要写入流中的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-873">A <see cref="T:System.Int32" /> that contains the zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1760a-874">
            <see cref="T:System.Int32" />，包含要从 <c>buffer</c> 中读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-874">A <see cref="T:System.Int32" /> that contains the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1760a-875">使用指定的缓冲区和偏移将指定数目的 <see cref="T:System.Byte" /> 写入基础流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-875">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-876">此方法会阻止该操作完成时。</span><span class="sxs-lookup"><span data-stu-id="1760a-876">This method blocks while the operation completes.</span></span> <span data-ttu-id="1760a-877">若要防止在操作完成该操作完成后，使用<xref:System.Net.Security.SslStream.BeginWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-877">To prevent blocking while the operation completes the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.</span></span>  
  
 <span data-ttu-id="1760a-878">不能调用此方法，直到您已成功通过身份验证。</span><span class="sxs-lookup"><span data-stu-id="1760a-878">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="1760a-879">若要进行身份验证的调用一个<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>，或<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>，<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1760a-879">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="1760a-880"><xref:System.Net.Security.SslStream>类不支持多个同时进行写入操作。</span><span class="sxs-lookup"><span data-stu-id="1760a-880">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1760a-881">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-881">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1760a-882">
            <paramref name="offset" />
            <paramref name="&lt;" />
            <paramref name="0" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-882">
              <paramref name="offset" />
              <paramref name="&lt;" />
              <paramref name="0" />.</span>
          </span>
          <span data-ttu-id="1760a-883">
            <paramref name="-or-" />
            <paramref name="offset" /> &gt; <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-883">
              <paramref name="-or-" />
              <paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="1760a-884">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-884">-or-</span>
          </span>
          <span data-ttu-id="1760a-885">
            <paramref name="offset" /> + count &gt; <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-885">
              <paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1760a-886">写操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-886">The write operation failed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1760a-887">已存在一个正在执行的写操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-887">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1760a-888">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-888">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1760a-889">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-889">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Security.SslStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.WriteTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1760a-890">获取或设置写操作阻止等待数据的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-890">Gets or sets the amount of time a write operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1760a-891">
            <see cref="T:System.Int32" />，指定同步写操作失败前经过的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1760a-891">A <see cref="T:System.Int32" /> that specifies the amount of time that elapses before a synchronous write operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1760a-892">此属性返回通过调用返回的值<xref:System.IO.Stream.WriteTimeout%2A>对基础流。</span><span class="sxs-lookup"><span data-stu-id="1760a-892">This property returns the value returned by invoking <xref:System.IO.Stream.WriteTimeout%2A> on the underlying stream.</span></span> <span data-ttu-id="1760a-893">对于集合运算指定的值设置<xref:System.IO.Stream.WriteTimeout%2A>基础流上的值。</span><span class="sxs-lookup"><span data-stu-id="1760a-893">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="1760a-894">基础流是否<xref:System.Net.Sockets.NetworkStream>，<xref:System.Net.Security.SslStream.WriteTimeout%2A>以毫秒为单位并将设置为<xref:System.Threading.Timeout.Infinite>默认情况下，这样写操作就不会超时。</span><span class="sxs-lookup"><span data-stu-id="1760a-894">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not timeout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1760a-895">下面的代码示例演示如何设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="1760a-895">The following code example demonstrates setting the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>