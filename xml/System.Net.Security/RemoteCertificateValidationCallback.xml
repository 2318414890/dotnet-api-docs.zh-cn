<Type Name="RemoteCertificateValidationCallback" FullName="System.Net.Security.RemoteCertificateValidationCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="040a5b717301c6dd05ac315e4655752ccd2f5843" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30425951" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate bool RemoteCertificateValidationCallback(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RemoteCertificateValidationCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.RemoteCertificateValidationCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function RemoteCertificateValidationCallback(sender As Object, certificate As X509Certificate, chain As X509Chain, sslPolicyErrors As SslPolicyErrors) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public delegate bool RemoteCertificateValidationCallback(System::Object ^ sender, X509Certificate ^ certificate, X509Chain ^ chain, SslPolicyErrors sslPolicyErrors);" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
    <Parameter Name="chain" Type="System.Security.Cryptography.X509Certificates.X509Chain" />
    <Parameter Name="sslPolicyErrors" Type="System.Net.Security.SslPolicyErrors" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">一个对象，它包含此验证的状态信息。</param>
    <param name="certificate">用于对远程方进行身份验证的证书。</param>
    <param name="chain">与远程证书关联的证书颁发机构链。</param>
    <param name="sslPolicyErrors">与远程证书关联的一个或多个错误。</param>
    <summary>验证用于身份验证的远程安全套接字层 (SSL) 证书。</summary>
    <returns>
      <see cref="T:System.Boolean" /> 值，它确定是否接受指定证书进行身份验证。</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 该委托的`sslPolicyErrors`自变量包含客户端或服务器进行身份验证时返回的 SSPI 任何证书错误。 <xref:System.Boolean>由此委托所调用的方法返回的值确定是否允许身份验证成功。  
  
 此委托用于<xref:System.Net.Security.SslStream>类。  
  
   
  
## Examples  
 下面的代码示例实现一个由的实例调用方法<xref:System.Net.Security.RemoteCertificateValidationCallback>类。 如果有验证错误，此方法将它们显示，并返回`false`，这将阻止与未经身份验证服务器的通信。  
  
 [!code-cpp[NCLSslClientSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#1)]
 [!code-csharp[NCLSslClientSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#1)]  
  
 下面的代码示例创建使用前面的代码示例中定义的方法的委托。  
  
 [!code-cpp[NCLSslClientSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#4)]
 [!code-csharp[NCLSslClientSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Security.LocalCertificateSelectionCallback" />
  </Docs>
</Type>