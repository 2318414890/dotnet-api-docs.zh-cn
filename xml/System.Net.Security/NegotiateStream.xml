<Type Name="NegotiateStream" FullName="System.Net.Security.NegotiateStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c14dd401696189bb315395ed828de5f1c0c89ba3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30461131" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NegotiateStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NegotiateStream extends System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.NegotiateStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NegotiateStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NegotiateStream : System::Net::Security::AuthenticatedStream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="95248-101">提供一个使用协商安全协议的流，以便对客户端-服务器通信中的客户端及服务器（可选）进行身份验证。</span>
      <span class="sxs-lookup">
        <span data-stu-id="95248-101">Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-102">使用<xref:System.Net.Security.NegotiateStream>客户端和服务器之间传输的身份验证和协助保护的信息的类。</span><span class="sxs-lookup"><span data-stu-id="95248-102">Use the <xref:System.Net.Security.NegotiateStream> class for authentication and to help secure information transmitted between a client and a server.</span></span> <span data-ttu-id="95248-103">使用<xref:System.Net.Security.NegotiateStream>，你可以执行以下操作。</span><span class="sxs-lookup"><span data-stu-id="95248-103">Using <xref:System.Net.Security.NegotiateStream>, you can do the following.</span></span>  
  
-   <span data-ttu-id="95248-104">为模拟或委托向服务器发送客户端的凭据。</span><span class="sxs-lookup"><span data-stu-id="95248-104">Send the client's credentials to the server for Impersonation or Delegation.</span></span>  
  
-   <span data-ttu-id="95248-105">请求服务器身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-105">Request server authentication.</span></span>  
  
-   <span data-ttu-id="95248-106">加密和/或签名前将其传输的数据。</span><span class="sxs-lookup"><span data-stu-id="95248-106">Encrypt and/or sign data before transmitting it.</span></span>  
  
 <span data-ttu-id="95248-107">在将信息传输之前，必须执行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-107">Authentication must be performed before transmitting information.</span></span> <span data-ttu-id="95248-108">客户端请求进行身份验证使用同步<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法，身份验证完成之前阻止，或异步<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>方法，不会阻止等待身份验证完成时。</span><span class="sxs-lookup"><span data-stu-id="95248-108">Clients request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods, which do not block while waiting for the authentication to complete.</span></span> <span data-ttu-id="95248-109">服务器请求进行身份验证使用同步<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>或异步<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-109">Servers request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="95248-110">客户端和服务器上，（可选） 进行身份验证使用 Negotiate 安全协议。</span><span class="sxs-lookup"><span data-stu-id="95248-110">The client, and optionally the server, is authenticated using the Negotiate security protocol.</span></span> <span data-ttu-id="95248-111">在 Windows 95/98 系统中，Windows NT LAN Manager (NTLM) 是用于身份验证的协议。</span><span class="sxs-lookup"><span data-stu-id="95248-111">On Windows 95/98 systems, Windows NT LAN Manager (NTLM) is the protocol used for authentication.</span></span> <span data-ttu-id="95248-112">在 Kerberos 其他平台上使用协议进行身份验证客户端和服务器支持它; 如果否则使用 NTLM。</span><span class="sxs-lookup"><span data-stu-id="95248-112">On other platforms the Kerberos protocol is used for authentication if both client and server support it; otherwise NTLM is used.</span></span> <span data-ttu-id="95248-113">这些协议的详细说明，请参阅平台 SDK 文档 MSDN 上，在 msdn.microsoft.com/library/。</span><span class="sxs-lookup"><span data-stu-id="95248-113">For detailed descriptions of these protocols, see the Platform SDK documentation on MSDN, at msdn.microsoft.com/library/.</span></span> <span data-ttu-id="95248-114"><xref:System.Net.Security.NegotiateStream>类执行使用安全支持提供程序接口 (SSPI) 身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-114">The <xref:System.Net.Security.NegotiateStream> class performs the authentication using the Security Support Provider Interface (SSPI).</span></span>  
  
 <span data-ttu-id="95248-115">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定哪些安全服务将使用<xref:System.Net.Security.NegotiateStream>来帮助保护你的数据在传输过程。</span><span class="sxs-lookup"><span data-stu-id="95248-115">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services will be used by the <xref:System.Net.Security.NegotiateStream> to help secure your data during transmission.</span></span> <span data-ttu-id="95248-116">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-116">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span> <span data-ttu-id="95248-117">你可以获取有关远程客户端或服务器使用信息<xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="95248-117">You can get information about the remote client or server using the <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> property.</span></span>  
  
 <span data-ttu-id="95248-118">如果身份验证失败，你将收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-118">If the authentication fails, you will receive an <xref:System.Security.Authentication.AuthenticationException> or a <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-119">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-119">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="95248-120">你将使用同步的数据发送<xref:System.Net.Security.NegotiateStream.Write%2A>或异步<xref:System.Net.Security.NegotiateStream.BeginWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-120">You send data using the synchronous <xref:System.Net.Security.NegotiateStream.Write%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="95248-121">接收数据的数据使用同步<xref:System.Net.Security.NegotiateStream.Read%2A>或异步<xref:System.Net.Security.NegotiateStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-121">You receive data using the synchronous <xref:System.Net.Security.NegotiateStream.Read%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginRead%2A> methods.</span></span> <span data-ttu-id="95248-122">如果安全服务 （如启用加密或签名），这些自动应用于您的数据<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-122">If security services such as encryption or signing are enabled, these are automatically applied to your data by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="95248-123"><xref:System.Net.Security.NegotiateStream>将使用在创建时提供的流的数据传输<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-123">The <xref:System.Net.Security.NegotiateStream> transmits data using a stream that you supply when creating the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="95248-124">当提供此基础流时，你可以选择以指定是否关闭<xref:System.Net.Security.NegotiateStream>也会关闭基础流。</span><span class="sxs-lookup"><span data-stu-id="95248-124">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.NegotiateStream> also closes the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-125">下面的代码示例演示一个使用的客户端-服务器连接的客户端<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-125">The following code example demonstrates the client side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="95248-126">客户端进行身份验证，并以异步方式将消息发送到服务器。</span><span class="sxs-lookup"><span data-stu-id="95248-126">The client authenticates and sends a message to the server asynchronously.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#0)]
 [!code-csharp[NclNegoAsyncClient#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#0)]  
  
 <span data-ttu-id="95248-127">下面的代码示例演示一个使用的客户端-服务器连接的服务器端<xref:System.Net.Security.NegotiateStream>进行身份验证客户端并读取客户端发送的消息。</span><span class="sxs-lookup"><span data-stu-id="95248-127">The following code example demonstrates the server side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream> to authenticate the client and read a message sent by the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#0)]
 [!code-csharp[NclNegoAsyncServer#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95248-128">初始化 <see cref="T:System.Net.Security.NegotiateStream" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-128">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-129">若要防止<xref:System.Net.Security.NegotiateStream>关闭你提供的流，使用<xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="95248-129">To prevent the <xref:System.Net.Security.NegotiateStream> from closing the stream that you supply, use the <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="95248-130">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.NegotiateStream" /> 使用此对象发送和接收数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-130">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-131">使用指定的 <see cref="T:System.Net.Security.NegotiateStream" /> 初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-131">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95248-132">下面的代码示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="95248-132">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#3)]
 [!code-csharp[NclNegoSyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="95248-133">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.NegotiateStream" /> 使用此对象发送和接收数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-133">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="95248-134">如果为 <see langword="true" />，表示关闭此 <see cref="T:System.Net.Security.NegotiateStream" /> 不影响 <c>innerstream</c>；若为 <see langword="false" />，则表示关闭此 <see cref="T:System.Net.Security.NegotiateStream" /> 也会同时关闭 <c>innerStream</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-134">
              <see langword="true" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> has no effect on <c>innerstream</c>; <see langword="false" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> also closes <c>innerStream</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-135">使用指定的 <see cref="T:System.Net.Security.NegotiateStream" /> 和流封闭行为初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-135">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-136">当指定`true`为`leaveStreamOpen`参数，关闭<xref:System.Net.Security.NegotiateStream>不起任何作用`innerStream`流式传输; 您必须显式关闭`innerStream`当不再需要它。</span><span class="sxs-lookup"><span data-stu-id="95248-136">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.NegotiateStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-137">下面的代码示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="95248-137">The following code example demonstrates calling this constructor.</span></span> <span data-ttu-id="95248-138">此代码示例摘自更大的示例为提供<xref:System.Net.Security.NegotiateStream>类。</span><span class="sxs-lookup"><span data-stu-id="95248-138">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#1)]
 [!code-csharp[NclNegoAsyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-139">
            <paramref name="innerStream" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-139">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="95248-140">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-140">\- or -</span>
          </span>
          <span data-ttu-id="95248-141">
            <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-141">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95248-142">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-142">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95248-143">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-143">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-144">身份验证使用客户端的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="95248-144">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="95248-145">为服务器不指定任何服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="95248-145">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="95248-146">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，并进行相互身份验证的请求。</span><span class="sxs-lookup"><span data-stu-id="95248-146">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="95248-147"><xref:System.Net.Security.NegotiateStream>类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="95248-147">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="95248-148">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-148">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="95248-149">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-149">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="95248-150">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-150">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-151">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-151">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-152">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-152">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-153">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-153">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-154">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-154">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-155">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-155">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-156">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-156">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-157">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-157">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="95248-158">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-158">\- or -</span>
          </span>
          <span data-ttu-id="95248-159">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-159">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="95248-160">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-160">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="95248-161">若要使用显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-161">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="95248-162">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-162">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="95248-163">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-163">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="95248-164">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-164">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-165">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-165">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="95248-166">身份验证过程使用指定的客户端凭据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-166">The authentication process uses the specified client credential.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-167">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，并进行相互身份验证的请求。</span><span class="sxs-lookup"><span data-stu-id="95248-167">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="95248-168"><xref:System.Net.Security.NegotiateStream>类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="95248-168">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="95248-169">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-169">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="95248-170">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-170">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-171">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-171">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-172">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-172">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-173">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-173">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-174">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-174">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-175">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-175">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-176">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-176">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="95248-177">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-177">\- or -</span>
          </span>
          <span data-ttu-id="95248-178">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-178">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="95248-179">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-179">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-180">
            <paramref name="targetName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-180">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="95248-181">若要使用显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-181">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="95248-182">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-182">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="95248-183">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-183">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="95248-184">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-184">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="95248-185">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-185">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-186">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-186">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="95248-187">身份验证过程使用指定的客户端凭据和通道绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-187">The authentication process uses the specified client credential and the channel binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-188">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，并进行相互身份验证的请求。</span><span class="sxs-lookup"><span data-stu-id="95248-188">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="95248-189"><xref:System.Net.Security.NegotiateStream>类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="95248-189">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="95248-190"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>用于传递给此方法的扩展保护`binding`参数将检索应用程序从<xref:System.Net.Security.SslStream.TransportContext%2A>属性关联的<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-190">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="95248-191">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-191">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="95248-192">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-192">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-193">
            <paramref name="targetName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-193">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="95248-194">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-194">\- or -</span>
          </span>
          <span data-ttu-id="95248-195">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-195">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-196">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-196">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-197">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-197">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-198">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-198">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-199">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-199">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-200">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-200">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="95248-201">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-201">\- or -</span>
          </span>
          <span data-ttu-id="95248-202">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-202">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="95248-203">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-203">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-204">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-204">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="95248-205">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-205">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="95248-206">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-206">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="95248-207">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-207">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="95248-208">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-208">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-209">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-209">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="95248-210">身份验证过程使用指定的凭据和身份验证选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-210">The authentication process uses the specified credentials and authentication options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-211">使用`requiredProtectionLevel`对的请求安全服务的使用经过身份验证的流传输的数据的参数。</span><span class="sxs-lookup"><span data-stu-id="95248-211">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="95248-212">例如，若要让数据进行加密和签名，指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="95248-212">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="95248-213">成功通过身份验证并不保证，请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="95248-213">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="95248-214">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-214">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="95248-215">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-215">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-216">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-216">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95248-217">
            <paramref name="allowedImpersonationLevel" /> 不是有效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-217">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-218">
            <paramref name="targetName" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-218">
              <paramref name="targetName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-219">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-219">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-220">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-220">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-221">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-221">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-222">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-222">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-223">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-223">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-224">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-224">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="95248-225">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-225">\- or -</span>
          </span>
          <span data-ttu-id="95248-226">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-226">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="95248-227">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-227">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="95248-228">若要使用显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-228">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="95248-229">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-229">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="95248-230">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-230">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="95248-231">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-231">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="95248-232">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-232">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="95248-233">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-233">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="95248-234">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-234">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-235">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-235">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="95248-236">身份验证过程使用指定的凭据、身份验证选项和通道绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-236">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-237">使用`requiredProtectionLevel`对的请求安全服务的使用经过身份验证的流传输的数据的参数。</span><span class="sxs-lookup"><span data-stu-id="95248-237">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="95248-238">例如，若要让数据进行加密和签名，指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="95248-238">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="95248-239">成功通过身份验证并不保证，请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="95248-239">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="95248-240">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-240">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="95248-241"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>用于传递给此方法的扩展保护`binding`参数将检索应用程序从<xref:System.Net.Security.SslStream.TransportContext%2A>属性关联的<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-241">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="95248-242">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-242">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-243">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-243">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-244">
            <paramref name="targetName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-244">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="95248-245">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-245">\- or -</span>
          </span>
          <span data-ttu-id="95248-246">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-246">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95248-247">
            <paramref name="allowedImpersonationLevel" /> 不是有效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-247">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-248">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-248">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-249">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-249">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-250">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-250">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-251">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-251">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-252">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-252">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="95248-253">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-253">\- or -</span>
          </span>
          <span data-ttu-id="95248-254">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-254">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="95248-255">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-255">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-256">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-256">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95248-257">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-257">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95248-258">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-258">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-259">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-259">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="95248-260">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-260">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-261">身份验证使用客户端的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="95248-261">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="95248-262">为服务器不指定任何服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="95248-262">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="95248-263">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，并进行相互身份验证的请求。</span><span class="sxs-lookup"><span data-stu-id="95248-263">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="95248-264"><xref:System.Net.Security.NegotiateStream>类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="95248-264">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="95248-265">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-265">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="95248-266">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-266">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="95248-267">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-267">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-268">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-268">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-269">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-269">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-270">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-270">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-271">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-271">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-272">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-272">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-273">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-273">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-274">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-274">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="95248-275">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-275">\- or -</span>
          </span>
          <span data-ttu-id="95248-276">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-276">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="95248-277">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-277">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="95248-278">若要使用显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-278">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="95248-279">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-279">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="95248-280">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-280">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="95248-281">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-281">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-282">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-282">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="95248-283">身份验证过程使用指定的客户端凭据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-283">The authentication process uses the specified client credential.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-284">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-284">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="95248-285">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-285">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-286">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，并进行相互身份验证的请求。</span><span class="sxs-lookup"><span data-stu-id="95248-286">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="95248-287"><xref:System.Net.Security.NegotiateStream>类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="95248-287">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="95248-288">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-288">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="95248-289">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-289">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-290">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-290">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-291">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-291">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-292">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-292">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-293">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-293">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-294">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-294">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-295">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-295">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="95248-296">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-296">\- or -</span>
          </span>
          <span data-ttu-id="95248-297">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-297">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="95248-298">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-298">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-299">
            <paramref name="targetName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-299">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="95248-300">若要使用显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-300">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="95248-301">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-301">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="95248-302">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-302">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="95248-303">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-303">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="95248-304">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-304">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-305">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-305">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="95248-306">身份验证过程使用指定的客户端凭据和通道绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-306">The authentication process uses the specified client credential and the channel binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-307">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-307">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="95248-308">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-308">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-309">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，并进行相互身份验证的请求。</span><span class="sxs-lookup"><span data-stu-id="95248-309">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="95248-310"><xref:System.Net.Security.NegotiateStream>类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="95248-310">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="95248-311"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>用于传递给此方法的扩展保护`binding`参数将检索应用程序从<xref:System.Net.Security.SslStream.TransportContext%2A>属性关联的<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-311">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="95248-312">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-312">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="95248-313">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-313">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-314">
            <paramref name="targetName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-314">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="95248-315">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-315">\- or -</span>
          </span>
          <span data-ttu-id="95248-316">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-316">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-317">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-317">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-318">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-318">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-319">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-319">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-320">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-320">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-321">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-321">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="95248-322">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-322">\- or -</span>
          </span>
          <span data-ttu-id="95248-323">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-323">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="95248-324">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-324">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-325">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-325">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="95248-326">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-326">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="95248-327">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-327">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="95248-328">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-328">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="95248-329">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-329">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-330">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-330">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="95248-331">身份验证过程使用指定的凭据和身份验证选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-331">The authentication process uses the specified credentials and authentication options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-332">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-332">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="95248-333">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-333">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-334">使用`requiredProtectionLevel`对的请求安全服务的使用经过身份验证的流传输的数据的参数。</span><span class="sxs-lookup"><span data-stu-id="95248-334">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="95248-335">例如，若要让数据进行加密和签名，指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="95248-335">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="95248-336">成功通过身份验证并不保证，请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="95248-336">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="95248-337">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-337">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="95248-338">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-338">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-339">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-339">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95248-340">
            <paramref name="allowedImpersonationLevel" /> 不是有效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-340">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-341">
            <paramref name="targetName" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-341">
              <paramref name="targetName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-342">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-342">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-343">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-343">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-344">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-344">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-345">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-345">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-346">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-346">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-347">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-347">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="95248-348">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-348">\- or -</span>
          </span>
          <span data-ttu-id="95248-349">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-349">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="95248-350">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-350">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="95248-351">若要使用显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-351">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="95248-352">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-352">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="95248-353">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-353">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="95248-354">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-354">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="95248-355">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-355">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="95248-356">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-356">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="95248-357">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-357">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-358">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-358">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="95248-359">身份验证过程使用指定的凭据、身份验证选项和通道绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-359">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-360">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-360">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="95248-361">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-361">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-362">使用`requiredProtectionLevel`对的请求安全服务的使用经过身份验证的流传输的数据的参数。</span><span class="sxs-lookup"><span data-stu-id="95248-362">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="95248-363">例如，若要让数据进行加密和签名，指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="95248-363">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="95248-364">成功通过身份验证并不保证，请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="95248-364">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="95248-365">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-365">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="95248-366"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>用于传递给此方法的扩展保护`binding`参数将检索应用程序从<xref:System.Net.Security.SslStream.TransportContext%2A>属性关联的<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-366">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="95248-367">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-367">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-368">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-368">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-369">
            <paramref name="targetName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-369">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="95248-370">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-370">\- or -</span>
          </span>
          <span data-ttu-id="95248-371">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-371">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95248-372">
            <paramref name="allowedImpersonationLevel" /> 不是有效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-372">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-373">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-373">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-374">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-374">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-375">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-375">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-376">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-376">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-377">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-377">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="95248-378">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-378">\- or -</span>
          </span>
          <span data-ttu-id="95248-379">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-379">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="95248-380">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-380">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-381">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-381">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95248-382">处理客户端-服务器连接的身份验证的服务器端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-382">Handles the server side of an authentication for a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-383">正在进行身份验证时，将阻止这些方法。</span><span class="sxs-lookup"><span data-stu-id="95248-383">These methods block while the authentication is in progress.</span></span> <span data-ttu-id="95248-384">若要阻止应用程序阻止等待身份验证完成时，使用<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-384">To prevent the application from blocking while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95248-385">服务器调用此方法，以便对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-385">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-386">身份验证使用服务器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="95248-386">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="95248-387">为服务器不指定任何服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="95248-387">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="95248-388">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和的安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="95248-388">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="95248-389">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-389">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="95248-390">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-390">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="95248-391">此方法阻止，直至该操作完成。</span><span class="sxs-lookup"><span data-stu-id="95248-391">This method blocks until the operation completes.</span></span> <span data-ttu-id="95248-392">若要防止在操作完成之前一直阻止，使用之一<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="95248-392">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="95248-393">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-393">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-394">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-394">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-395">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-395">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-396">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-396">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-397">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-397">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-398">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-398">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-399">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-399">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="95248-400">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-400">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="95248-401">若要使用显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-401">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="95248-402">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-402">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (policy As ExtendedProtectionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="95248-403">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-403">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-404">服务器调用此方法，以便对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-404">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="95248-405">身份验证过程使用指定的扩展保护策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-405">The authentication process uses the specified extended protection policy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-406">身份验证使用服务器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="95248-406">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="95248-407">为服务器不指定任何服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="95248-407">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="95248-408">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和的安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="95248-408">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="95248-409">如果`policy`参数是`null`，则扩展的保护策略使用具有<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>设置为<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="95248-409">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="95248-410">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-410">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="95248-411">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-411">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="95248-412">此方法阻止，直至该操作完成。</span><span class="sxs-lookup"><span data-stu-id="95248-412">This method blocks until the operation completes.</span></span> <span data-ttu-id="95248-413">若要防止在操作完成之前一直阻止，使用之一<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="95248-413">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="95248-414">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-414">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-415">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-415">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95248-416">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-416">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-417">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-417">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-418">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-418">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-419">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-419">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-420">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-420">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="95248-421">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-421">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-422">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-422">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="95248-423">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-423">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="95248-424">用于确立服务器身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-424">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="95248-425">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-425">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="95248-426">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-426">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-427">服务器调用此方法，以便对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-427">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="95248-428">身份验证过程使用指定的服务器凭据和身份验证选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-428">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-429">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-429">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="95248-430">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-430">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="95248-431">此方法阻止，直至该操作完成。</span><span class="sxs-lookup"><span data-stu-id="95248-431">This method blocks until the operation completes.</span></span> <span data-ttu-id="95248-432">若要防止在操作完成之前一直阻止，使用之一<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="95248-432">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="95248-433">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-433">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-434">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-434">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-435">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-435">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95248-436">
            <paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-436">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-437">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-437">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-438">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-438">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-439">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-439">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-440">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-440">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-441">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-441">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-442">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-442">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="95248-443">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-443">\- or -</span>
          </span>
          <span data-ttu-id="95248-444">此流先前被用作客户端尝试进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-444">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="95248-445">不能尝试将该流作为服务器重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-445">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="95248-446">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-446">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="95248-447">若要使用显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-447">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="95248-448">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-448">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="95248-449">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-449">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="95248-450">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-450">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="95248-451">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-451">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="95248-452">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-452">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-453">服务器调用此方法，以便对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-453">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="95248-454">身份验证过程使用指定的服务器凭据、身份验证选项和扩展保护策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-454">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-455">如果`policy`参数是`null`，则扩展的保护策略使用具有<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>设置为<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="95248-455">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="95248-456">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-456">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="95248-457">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-457">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="95248-458">此方法阻止，直至该操作完成。</span><span class="sxs-lookup"><span data-stu-id="95248-458">This method blocks until the operation completes.</span></span> <span data-ttu-id="95248-459">若要防止在操作完成之前一直阻止，使用之一<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="95248-459">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="95248-460">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-460">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-461">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-461">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95248-462">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-462">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-463">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-463">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95248-464">
            <paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-464">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-465">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-465">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-466">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-466">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-467">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-467">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-468">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-468">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-469">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-469">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="95248-470">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-470">\- or -</span>
          </span>
          <span data-ttu-id="95248-471">此流先前被用作客户端尝试进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-471">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="95248-472">不能尝试将该流作为服务器重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-472">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="95248-473">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-473">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-474">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-474">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="95248-475">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-475">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95248-476">以异步操作方式处理某个客户端-服务器连接的身份验证的服务器端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-476">Handles the server side of an authentication for a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95248-477">服务器调用此方法，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-477">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-478">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-478">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="95248-479">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-479">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-480">身份验证使用服务器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="95248-480">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="95248-481">为服务器不指定任何服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="95248-481">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="95248-482">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和的安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="95248-482">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="95248-483">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-483">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="95248-484">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-484">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="95248-485">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-485">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-486">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-486">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-487">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-487">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-488">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-488">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-489">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-489">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-490">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-490">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-491">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-491">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="95248-492">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-492">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="95248-493">若要使用显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-493">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="95248-494">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-494">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (policy As ExtendedProtectionPolicy) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="95248-495">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-495">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-496">服务器调用此方法，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-496">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="95248-497">身份验证过程使用指定的扩展保护策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-497">The authentication process uses the specified extended protection policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-498">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-498">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="95248-499">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-499">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-500">身份验证使用服务器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="95248-500">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="95248-501">为服务器不指定任何服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="95248-501">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="95248-502">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和的安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="95248-502">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="95248-503">如果`policy`参数是`null`，则扩展的保护策略使用具有<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>设置为<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="95248-503">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="95248-504">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-504">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="95248-505">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-505">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="95248-506">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-506">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-507">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-507">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95248-508">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-508">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-509">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-509">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-510">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-510">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-511">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-511">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-512">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-512">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="95248-513">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-513">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-514">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-514">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="95248-515">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-515">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="95248-516">用于确立服务器身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-516">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="95248-517">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-517">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="95248-518">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-518">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-519">服务器调用此方法，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-519">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="95248-520">身份验证过程使用指定的服务器凭据和身份验证选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-520">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-521">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-521">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="95248-522">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-522">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-523">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-523">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="95248-524">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-524">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="95248-525">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-525">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-526">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-526">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-527">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-527">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95248-528">
            <paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-528">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-529">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-529">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-530">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-530">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-531">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-531">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-532">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-532">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-533">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-533">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-534">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-534">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="95248-535">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-535">\- or -</span>
          </span>
          <span data-ttu-id="95248-536">此流先前被用作客户端尝试进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-536">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="95248-537">不能尝试将该流作为服务器重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-537">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="95248-538">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-538">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="95248-539">若要使用显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-539">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="95248-540">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-540">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="95248-541">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-541">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="95248-542">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-542">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="95248-543">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-543">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="95248-544">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-544">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-545">服务器调用此方法，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-545">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="95248-546">身份验证过程使用指定的服务器凭据、身份验证选项和扩展保护策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-546">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-547">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-547">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="95248-548">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-548">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-549">如果`policy`参数是`null`，则扩展的保护策略使用具有<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>设置为<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="95248-549">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="95248-550">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-550">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="95248-551">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-551">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="95248-552">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-552">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-553">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-553">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95248-554">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-554">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-555">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-555">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95248-556">
            <paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-556">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-557">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-557">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-558">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-558">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-559">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-559">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-560">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-560">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-561">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-561">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="95248-562">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-562">\- or -</span>
          </span>
          <span data-ttu-id="95248-563">此流先前被用作客户端尝试进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-563">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="95248-564">不能尝试将该流作为服务器重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-564">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="95248-565">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-565">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-566">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-566">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="95248-567">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-567">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95248-568">开始一个异步操作，以对客户端-服务器连接中的客户端进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-568">Begins an asynchronous operation to authenticate the client side of a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-569">正在进行身份验证时，此方法的重载不会阻止。</span><span class="sxs-lookup"><span data-stu-id="95248-569">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="95248-570">若要阻止等待身份验证完成时，请使用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-570">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="asyncCallback">
          <span data-ttu-id="95248-571">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-571">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="95248-572">一个用户定义对象，其中包含该操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-572">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="95248-573">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-573">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-574">客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-574">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="95248-575">此方法不会进入阻止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-575">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-576">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-576">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-577">身份验证使用客户端的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="95248-577">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="95248-578">为服务器不指定任何服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="95248-578">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="95248-579">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和的安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="95248-579">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span> <span data-ttu-id="95248-580"><xref:System.Net.Security.NegotiateStream>类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="95248-580">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="95248-581">此方法是异步的不会阻止在操作完成时。</span><span class="sxs-lookup"><span data-stu-id="95248-581">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="95248-582">若要阻止该操作完成之前，请使用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="95248-582">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="95248-583">必须通过调用完成异步身份验证操作<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-583">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="95248-584">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="95248-584">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="95248-585">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="95248-585">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="95248-586">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-586">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-587">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-587">In this case, you can retry the authentication with a different credential.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-588">下面的代码示例演示如何调用此方法可为客户端开始异步身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-588">The following code example demonstrates calling this method to begin an asynchronous authentication for the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#2)]
 [!code-csharp[NclNegoAsyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-589">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-589">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-590">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-590">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-591">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-591">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-592">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-592">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-593">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-593">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-594">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-594">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="95248-595">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-595">\- or -</span>
          </span>
          <span data-ttu-id="95248-596">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-596">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="95248-597">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-597">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="95248-598">若要使用显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-598">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="95248-599">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-599">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="95248-600">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-600">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="95248-601">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-601">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="95248-602">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-602">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="95248-603">一个用户定义对象，其中包含写操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-603">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="95248-604">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-604">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-605">客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-605">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="95248-606">身份验证过程使用指定的凭据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-606">The authentication process uses the specified credentials.</span>
          </span>
          <span data-ttu-id="95248-607">此方法不会进入阻止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-607">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-608">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-608">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-609">此方法是异步的不会阻止在操作完成时。</span><span class="sxs-lookup"><span data-stu-id="95248-609">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="95248-610">若要阻止该操作完成之前，请使用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="95248-610">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="95248-611">必须通过调用完成异步身份验证操作<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-611">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="95248-612">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="95248-612">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="95248-613">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="95248-613">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="95248-614">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-614">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-615">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-615">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-616">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-616">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="95248-617">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-617">\- or -</span>
          </span>
          <span data-ttu-id="95248-618">
            <paramref name="targetName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-618">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-619">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-619">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-620">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-620">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-621">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-621">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-622">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-622">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-623">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-623">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-624">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-624">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="95248-625">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-625">\- or -</span>
          </span>
          <span data-ttu-id="95248-626">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-626">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="95248-627">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-627">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="95248-628">若要使用显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-628">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="95248-629">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-629">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="95248-630">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-630">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="95248-631">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-631">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="95248-632">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-632">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="95248-633">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-633">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="95248-634">一个用户定义对象，其中包含写操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-634">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="95248-635">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-635">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-636">客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-636">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="95248-637">身份验证过程使用指定的凭据和通道绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-637">The authentication process uses the specified credentials and channel binding.</span>
          </span>
          <span data-ttu-id="95248-638">此方法不会进入阻止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-638">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-639">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-639">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-640">此方法是异步的不会阻止在操作完成时。</span><span class="sxs-lookup"><span data-stu-id="95248-640">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="95248-641">若要阻止该操作完成之前，请使用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="95248-641">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="95248-642">必须通过调用完成异步身份验证操作<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-642">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="95248-643">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="95248-643">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="95248-644">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="95248-644">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="95248-645">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-645">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-646">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-646">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-647">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-647">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="95248-648">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-648">\- or -</span>
          </span>
          <span data-ttu-id="95248-649">
            <paramref name="targetName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-649">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-650">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-650">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-651">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-651">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-652">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-652">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-653">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-653">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-654">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-654">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="95248-655">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-655">\- or -</span>
          </span>
          <span data-ttu-id="95248-656">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-656">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="95248-657">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-657">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-658">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-658">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="95248-659">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-659">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="95248-660">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-660">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="95248-661">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-661">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="95248-662">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-662">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="95248-663">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-663">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="95248-664">一个用户定义对象，其中包含写操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-664">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="95248-665">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-665">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-666">客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-666">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="95248-667">身份验证过程使用指定的凭据和身份验证选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-667">The authentication process uses the specified credentials and authentication options.</span>
          </span>
          <span data-ttu-id="95248-668">此方法不会进入阻止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-668">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-669">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-669">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-670">使用`requiredProtectionLevel`对的请求安全服务的使用经过身份验证的流传输的数据的参数。</span><span class="sxs-lookup"><span data-stu-id="95248-670">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="95248-671">例如，若要让数据进行加密和签名，指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="95248-671">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="95248-672">成功通过身份验证并不保证，请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="95248-672">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="95248-673">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-673">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="95248-674">此方法是异步的不会阻止在操作完成时。</span><span class="sxs-lookup"><span data-stu-id="95248-674">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="95248-675">若要阻止该操作完成之前，请使用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="95248-675">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="95248-676">必须通过调用完成异步身份验证操作<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-676">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="95248-677">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="95248-677">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="95248-678">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="95248-678">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="95248-679">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-679">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-680">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-680">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-681">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-681">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="95248-682">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-682">\- or -</span>
          </span>
          <span data-ttu-id="95248-683">
            <paramref name="targetName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-683">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-684">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-684">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-685">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-685">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-686">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-686">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-687">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-687">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-688">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-688">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-689">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-689">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="95248-690">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-690">\- or -</span>
          </span>
          <span data-ttu-id="95248-691">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-691">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="95248-692">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-692">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="95248-693">若要使用显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-693">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="95248-694">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-694">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="95248-695">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-695">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="95248-696">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-696">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="95248-697">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-697">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="95248-698">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-698">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="95248-699">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-699">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="95248-700">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-700">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="95248-701">一个用户定义对象，其中包含写操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-701">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="95248-702">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-702">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-703">客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-703">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="95248-704">身份验证过程使用指定的凭据、身份验证选项和通道绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-704">The authentication process uses the specified credentials, authentication options, and channel binding.</span>
          </span>
          <span data-ttu-id="95248-705">此方法不会进入阻止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-705">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-706">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-706">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-707">使用`requiredProtectionLevel`对的请求安全服务的使用经过身份验证的流传输的数据的参数。</span><span class="sxs-lookup"><span data-stu-id="95248-707">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="95248-708">例如，若要让数据进行加密和签名，指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="95248-708">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="95248-709">成功通过身份验证并不保证，请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="95248-709">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="95248-710">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-710">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="95248-711">此方法是异步的不会阻止在操作完成时。</span><span class="sxs-lookup"><span data-stu-id="95248-711">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="95248-712">若要阻止该操作完成之前，请使用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="95248-712">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="95248-713">必须通过调用完成异步身份验证操作<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-713">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="95248-714">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="95248-714">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="95248-715">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="95248-715">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="95248-716">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-716">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-717">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-717">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-718">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-718">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="95248-719">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-719">\- or -</span>
          </span>
          <span data-ttu-id="95248-720">
            <paramref name="targetName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-720">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-721">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-721">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-722">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-722">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-723">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-723">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-724">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-724">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-725">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-725">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="95248-726">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-726">\- or -</span>
          </span>
          <span data-ttu-id="95248-727">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-727">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="95248-728">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-728">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-729">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-729">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95248-730">开始一个异步操作，以处理进行身份验证的客户端-服务器连接中的服务器端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-730">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-731">正在进行身份验证时，此方法的重载不会阻止。</span><span class="sxs-lookup"><span data-stu-id="95248-731">The overloads of this method do not block while the authentication is in progress.</span></span> <span data-ttu-id="95248-732">若要阻止等待身份验证完成时，请使用<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-732">To block while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="asyncCallback">
          <span data-ttu-id="95248-733">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-733">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="95248-734">一个用户定义对象，其中包含该操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-734">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="95248-735">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-735">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-736">服务器调用此方法开始一个异步操作，以对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-736">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="95248-737">此方法不会进入阻止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-737">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-738">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-738">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-739">身份验证使用服务器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="95248-739">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="95248-740">为服务器不指定任何服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="95248-740">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="95248-741">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="95248-741">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="95248-742">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-742">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="95248-743">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-743">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="95248-744">若要阻止该操作完成之前，请使用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="95248-744">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="95248-745">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-745">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-746">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-746">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-747">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-747">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-748">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-748">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-749">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-749">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-750">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-750">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-751">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-751">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="95248-752">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-752">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="95248-753">若要使用显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-753">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="95248-754">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-754">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="95248-755">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-755">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="95248-756">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-756">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="95248-757">一个用户定义对象，其中包含写操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-757">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="95248-758">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-758">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-759">服务器调用此方法开始一个异步操作，以对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-759">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="95248-760">身份验证过程使用指定的扩展保护策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-760">The authentication process uses the specified extended protection policy.</span>
          </span>
          <span data-ttu-id="95248-761">此方法不会进入阻止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-761">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-762">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-762">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-763">身份验证使用服务器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="95248-763">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="95248-764">为服务器不指定任何服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="95248-764">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="95248-765">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="95248-765">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="95248-766">如果`policy`参数是`null`，则扩展的保护策略使用具有<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>设置为<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="95248-766">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="95248-767">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-767">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="95248-768">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-768">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="95248-769">若要阻止该操作完成之前，请使用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="95248-769">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="95248-770">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-770">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-771">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-771">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95248-772">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-772">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-773">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-773">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-774">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-774">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-775">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-775">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-776">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-776">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="95248-777">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-777">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-778">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-778">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="95248-779">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-779">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="95248-780">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-780">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="95248-781">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-781">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="95248-782">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-782">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="95248-783">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-783">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="95248-784">一个用户定义对象，其中包含该操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-784">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="95248-785">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-785">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-786">服务器调用此方法开始一个异步操作，以对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-786">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="95248-787">身份验证过程使用指定的服务器凭据和身份验证选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-787">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
          <span data-ttu-id="95248-788">此方法不会进入阻止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-788">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-789">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-789">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-790">使用`requiredProtectionLevel`对的请求安全服务的使用经过身份验证的流传输的数据的参数。</span><span class="sxs-lookup"><span data-stu-id="95248-790">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="95248-791">例如，若要让数据进行加密和签名，指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="95248-791">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="95248-792">成功通过身份验证并不保证，请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="95248-792">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="95248-793">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-793">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="95248-794">此方法是异步的不会阻止在操作完成时。</span><span class="sxs-lookup"><span data-stu-id="95248-794">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="95248-795">若要阻止该操作完成之前，请使用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="95248-795">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="95248-796">必须通过调用完成异步身份验证操作<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-796">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="95248-797">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="95248-797">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="95248-798">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="95248-798">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="95248-799">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-799">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-800">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-800">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-801">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-801">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95248-802">
            <paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-802">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-803">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-803">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-804">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-804">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-805">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-805">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-806">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-806">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-807">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-807">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-808">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-808">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="95248-809">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-809">\- or -</span>
          </span>
          <span data-ttu-id="95248-810">此流先前被用作客户端尝试进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-810">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="95248-811">不能尝试将该流作为服务器重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-811">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="95248-812">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-812">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="95248-813">若要使用显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-813">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="95248-814">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-814">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="95248-815">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-815">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="95248-816">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-816">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="95248-817">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-817">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="95248-818">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-818">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="95248-819">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-819">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="95248-820">一个用户定义对象，其中包含写操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-820">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="95248-821">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-821">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-822">服务器调用此方法开始一个异步操作，以对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-822">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="95248-823">身份验证过程使用指定的服务器凭据、身份验证选项和扩展保护策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-823">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
          <span data-ttu-id="95248-824">此方法不会进入阻止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-824">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-825">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-825">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-826">使用`requiredProtectionLevel`对的请求安全服务的使用经过身份验证的流传输的数据的参数。</span><span class="sxs-lookup"><span data-stu-id="95248-826">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="95248-827">例如，若要让数据进行加密和签名，指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="95248-827">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="95248-828">成功通过身份验证并不保证，请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="95248-828">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="95248-829">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-829">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="95248-830">如果`policy`参数是`null`，则扩展的保护策略使用具有<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>设置为<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="95248-830">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="95248-831">此方法是异步的不会阻止在操作完成时。</span><span class="sxs-lookup"><span data-stu-id="95248-831">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="95248-832">若要阻止该操作完成之前，请使用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="95248-832">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="95248-833">必须通过调用完成异步身份验证操作<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-833">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="95248-834">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="95248-834">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="95248-835">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="95248-835">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="95248-836">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-836">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-837">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-837">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95248-838">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-838">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-839">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-839">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95248-840">
            <paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-840">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-841">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-841">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-842">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-842">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-843">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-843">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-844">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-844">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-845">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-845">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="95248-846">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-846">\- or -</span>
          </span>
          <span data-ttu-id="95248-847">此流先前被用作客户端尝试进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-847">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="95248-848">不能尝试将该流作为服务器重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-848">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="95248-849">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-849">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-850">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-850">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="95248-851">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-851">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="95248-852">一个 <see cref="T:System.Byte" /> 数组，该数组接收从流中读取的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-852">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="95248-853">
            <c>缓冲区</c>中从零开始的位置，从此处开始存储从此流中读取的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-853">The zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="95248-854">要从流中读取的最大字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-854">The maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="95248-855">
            <see cref="T:System.AsyncCallback" /> 委托，该委托引用读操作完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-855">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="95248-856">用户定义的对象，其中包含读操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-856">A user-defined object containing information about the read operation.</span>
          </span>
          <span data-ttu-id="95248-857">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-857">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-858">开始一个异步读操作，此操作读取流中的数据并将其存储在指定的数组中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-858">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-859">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-859">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-860">如果启用了加密、 签名或加密和签名，读取的操作将从基础流中读取数据、 检查的数据的完整性和对其进行解密。</span><span class="sxs-lookup"><span data-stu-id="95248-860">If encryption, signing, or encryption and signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and decrypts it.</span></span> <span data-ttu-id="95248-861">如果任何安全不服务 （如数据加密或签名） 中使用，此方法会启动对基础流的异步读取的操作。</span><span class="sxs-lookup"><span data-stu-id="95248-861">If no security services such as data encryption or signing are in use, this method starts an asynchronous read operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="95248-862">此方法是异步的不会阻止在操作完成时。</span><span class="sxs-lookup"><span data-stu-id="95248-862">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="95248-863">若要阻止该操作完成之前，请使用<xref:System.Net.Security.NegotiateStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-863">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="95248-864">异步读的操作必须由调用完成<xref:System.Net.Security.NegotiateStream.EndRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-864">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndRead%2A> method.</span></span> <span data-ttu-id="95248-865">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="95248-865">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="95248-866">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="95248-866">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="95248-867"><xref:System.Net.Security.NegotiateStream>类不支持多个同时进行的读取操作。</span><span class="sxs-lookup"><span data-stu-id="95248-867">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous read operations.</span></span> <span data-ttu-id="95248-868">如果你尝试开始读取的操作，而另一个读取操作已经在执行对同一个流，<xref:System.NotSupportedException>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="95248-868">If you attempt to start a read operation while another read operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="95248-869">你已成功通过身份验证之前，不能调用此方法。</span><span class="sxs-lookup"><span data-stu-id="95248-869">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="95248-870">若要进行身份验证，调用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-870">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-871">下面的代码示例演示如何启动异步读的操作。</span><span class="sxs-lookup"><span data-stu-id="95248-871">The following code example demonstrates starting an asynchronous read operation.</span></span> <span data-ttu-id="95248-872">此代码示例摘自更大的示例为提供<xref:System.Net.Security.NegotiateStream>类。</span><span class="sxs-lookup"><span data-stu-id="95248-872">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#1)]
 [!code-csharp[NclNegoAsyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-873">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-873">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95248-874">
            <paramref name="offset" /> 小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-874">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="95248-875">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-875">\- or -</span>
          </span>
          <span data-ttu-id="95248-876">
            <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-876">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="95248-877">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-877">\- or -</span>
          </span>
          <span data-ttu-id="95248-878">
            <paramref name="offset" /> 加上 <paramref name="count" /> 大于 <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-878">
              <paramref name="offset" /> plus <paramref name="count" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95248-879">读操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-879">The read operation failed.</span>
          </span>
          <span data-ttu-id="95248-880">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-880">\- or -</span>
          </span>
          <span data-ttu-id="95248-881">使用了加密服务，但未能解密该数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-881">Encryption is in use, but the data could not be decrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="95248-882">已存在一个正在执行的读取操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-882">There is already a read operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-883">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-883">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-884">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-884">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="95248-885">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-885">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="95248-886">
            <c>缓冲区</c>中从零开始的位置，从此处开始读取要写入流中的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-886">The zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="95248-887">
            <see cref="T:System.Int32" /> 值，该值指定要从<c>缓冲区</c>中读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-887">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="95248-888">
            <see cref="T:System.AsyncCallback" /> 委托，它引用写操作完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-888">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="95248-889">一个用户定义对象，其中包含写操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-889">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="95248-890">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-890">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-891">开始一个异步写操作，此操作将指定缓冲区中的 <see cref="T:System.Byte" /> 写入到流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-891">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-892">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-892">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-893">如果启用了加密、 签名或加密和签名，此方法从缓冲区中读取数据、 加密，符号，或对进行加密和签名，以及传输使用基础流。</span><span class="sxs-lookup"><span data-stu-id="95248-893">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="95248-894">如果任何安全不服务 （如数据加密或签名） 中使用，此方法会启动对基础流的异步写入操作。</span><span class="sxs-lookup"><span data-stu-id="95248-894">If no security services such as data encryption or signing are in use, this method starts an asynchronous write operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="95248-895">此方法是异步的不会阻止在操作完成时。</span><span class="sxs-lookup"><span data-stu-id="95248-895">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="95248-896">若要阻止该操作完成之前，请使用<xref:System.Net.Security.NegotiateStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-896">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="95248-897">异步读的操作必须由调用完成<xref:System.Net.Security.NegotiateStream.EndWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-897">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndWrite%2A> method.</span></span> <span data-ttu-id="95248-898">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="95248-898">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="95248-899">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="95248-899">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="95248-900"><xref:System.Net.Security.NegotiateStream>类不支持多个同时进行的写入操作。</span><span class="sxs-lookup"><span data-stu-id="95248-900">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="95248-901">如果你尝试开始写入操作，而另一个写入操作已经在执行对同一个流，<xref:System.NotSupportedException>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="95248-901">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="95248-902">你已成功通过身份验证之前，不能调用此方法。</span><span class="sxs-lookup"><span data-stu-id="95248-902">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="95248-903">若要进行身份验证，调用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-903">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-904">下面的代码示例演示如何开始异步写操作。</span><span class="sxs-lookup"><span data-stu-id="95248-904">The following code example demonstrates beginning an asynchronous write operation.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#3)]
 [!code-csharp[NclNegoAsyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#3)]  
  
 <span data-ttu-id="95248-905">在操作完成时调用以下方法。</span><span class="sxs-lookup"><span data-stu-id="95248-905">The following method is called when the operation completes.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-906">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-906">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95248-907">
            <paramref name="offset is less than 0" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-907">
              <paramref name="offset is less than 0" />.</span>
          </span>
          <span data-ttu-id="95248-908">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-908">\- or -</span>
          </span>
          <span data-ttu-id="95248-909">
            <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-909">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="95248-910">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-910">\- or -</span>
          </span>
          <span data-ttu-id="95248-911">
            <paramref name="offset" /> 加上计数大于 <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-911">
              <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95248-912">写操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-912">The write operation failed.</span>
          </span>
          <span data-ttu-id="95248-913">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-913">\- or -</span>
          </span>
          <span data-ttu-id="95248-914">正在使用加密，但未能加密该数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-914">Encryption is in use, but the data could not be encrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="95248-915">已存在一个正在执行的写操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-915">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-916">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-916">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-917">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-917">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95248-918">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-918">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95248-919">如果已进行身份验证且基础流为可读，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-919">
              <see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-920">如果发生了成功的身份验证，此属性返回通过调用返回的值<xref:System.IO.Stream.CanRead%2A>对基础流的属性。</span><span class="sxs-lookup"><span data-stu-id="95248-920">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanRead%2A> property on the underlying stream.</span></span> <span data-ttu-id="95248-921">基础流时创建的实例指定<xref:System.Net.Security.NegotiateStream>类。</span><span class="sxs-lookup"><span data-stu-id="95248-921">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-922">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="95248-922">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95248-923">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可查找。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-923">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95248-924">此属性始终返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-924">This property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-925">不应尝试设置的位置<xref:System.Net.Security.NegotiateStream>对象或其基础流。</span><span class="sxs-lookup"><span data-stu-id="95248-925">You should not attempt to set the position of the <xref:System.Net.Security.NegotiateStream> object or its underlying stream.</span></span> <span data-ttu-id="95248-926">基础流时创建的实例指定<xref:System.Net.Security.NegotiateStream>类。</span><span class="sxs-lookup"><span data-stu-id="95248-926">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-927">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="95248-927">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Security.NegotiateStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95248-928">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否支持超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-928">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95248-929">如果基础流支持超时，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-929">
              <see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-930">此属性返回通过调用返回的值<xref:System.IO.Stream.CanTimeout%2A>对基础流的属性。</span><span class="sxs-lookup"><span data-stu-id="95248-930">This property returns the value returned by invoking the <xref:System.IO.Stream.CanTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="95248-931">基础流时创建的实例指定<xref:System.Net.Security.NegotiateStream>类。</span><span class="sxs-lookup"><span data-stu-id="95248-931">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-932">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="95248-932">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95248-933">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-933">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95248-934">如果已进行身份验证且基础流可写，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-934">
              <see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-935">如果发生了成功的身份验证，此属性返回通过调用返回的值<xref:System.IO.Stream.CanWrite%2A>对基础流的属性。</span><span class="sxs-lookup"><span data-stu-id="95248-935">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanWrite%2A> property on the underlying stream.</span></span> <span data-ttu-id="95248-936">基础流时创建的实例指定<xref:System.Net.Security.NegotiateStream>类。</span><span class="sxs-lookup"><span data-stu-id="95248-936">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-937">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="95248-937">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="95248-938">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-938">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-939">释放由 <see cref="T:System.Net.Security.NegotiateStream" /> 占用的非托管资源，还可以另外再释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-939">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.NegotiateStream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-940">此方法称为由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-940">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="95248-941">`Dispose()` 调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="95248-941">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="95248-942"><xref:System.Object.Finalize%2A> 调用`Dispose`与`disposing`设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="95248-942"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="95248-943">当`disposing`参数为 true 时，此方法释放由任何托管对象持有的全部资源此<xref:System.Net.Security.NegotiateStream>引用。</span><span class="sxs-lookup"><span data-stu-id="95248-943">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.NegotiateStream> references.</span></span> <span data-ttu-id="95248-944">此方法调用每个引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="95248-944">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="95248-945">
              <see langword="Dispose" /> 可以由其他对象多次调用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="95248-945">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="95248-946">在重写<see langword="Dispose(Boolean)" />请注意不要引用已释放的以前调用中的对象<see langword="Dispose" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="95248-946">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="95248-947">有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="95248-947">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="95248-948">有关详细信息<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[重写 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="95248-948">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="95248-949">调用 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-949">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-950">结束通过调用 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> 而启动的、正处于挂起状态的异步客户端身份验证操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-950">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-951">如果该操作未完成，此方法阻止，直至它执行。</span><span class="sxs-lookup"><span data-stu-id="95248-951">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="95248-952">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-952">When the authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="95248-953">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-953">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="95248-954">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-954">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-955">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-955">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="95248-956">若要以同步方式执行此操作，请使用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-956">To perform this operation synchronously, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-957">
            <paramref name="asyncResult" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-957">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95248-958">
            <paramref name="asyncResult" /> 并不是通过对 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> 的调用创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-958">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-959">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-959">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-960">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-960">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-961">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-961">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-962">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-962">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-963">没有需要完成的处于挂起状态的客户端身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-963">There is no pending client authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="95248-964">调用 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-964">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-965">结束通过调用 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> 而启动的、正处于挂起状态的异步客户端身份验证操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-965">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-966">如果该操作未完成，此方法阻止，直至它执行。</span><span class="sxs-lookup"><span data-stu-id="95248-966">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="95248-967">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>和<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性来确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-967">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="95248-968">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-968">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="95248-969">如果身份验证失败，你收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="95248-969">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="95248-970">在这种情况下，你可以重试使用不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-970">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="95248-971">若要以同步方式执行此操作，使用<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-971">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-972">
            <paramref name="asyncResult" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-972">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95248-973">
            <paramref name="asyncResult" /> 并不是通过对 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> 的调用创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-973">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="95248-974">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-974">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-975">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-975">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="95248-976">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-976">The authentication failed.</span>
          </span>
          <span data-ttu-id="95248-977">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-977">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-978">没有要完成的处于挂起状态的身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-978">There is no pending authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="95248-979">调用 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-979">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-980">结束通过调用 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而启动的异步读操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-980">Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-981">
            <see cref="T:System.Int32" /> 值，该值指定从基础流中读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-981">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-982">如果该操作未完成，此方法阻止，直至它执行。</span><span class="sxs-lookup"><span data-stu-id="95248-982">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="95248-983">若要以同步方式执行此操作，使用<xref:System.Net.Security.NegotiateStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-983">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="95248-984">你已成功通过身份验证之前，不能调用此方法。</span><span class="sxs-lookup"><span data-stu-id="95248-984">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="95248-985">若要进行身份验证，调用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-985">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-986">下面的代码示例演示结束异步读取操作。</span><span class="sxs-lookup"><span data-stu-id="95248-986">The following code example demonstrates ending an asynchronous read operation.</span></span> <span data-ttu-id="95248-987">有关演示如何启动该操作的示例，请参阅<xref:System.Net.Security.NegotiateStream.BeginRead%2A>。</span><span class="sxs-lookup"><span data-stu-id="95248-987">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#3)]
 [!code-csharp[NclNegoAsyncServer#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-988">
            <paramref name="asyncResult" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-988">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95248-989">asyncResult 并不是通过调用 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-989">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-990">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-990">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95248-991">读操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-991">The read operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="95248-992">调用 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-992">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-993">结束通过调用 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而启动的异步写操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-993">Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-994">如果该操作未完成，此方法阻止，直至它执行。</span><span class="sxs-lookup"><span data-stu-id="95248-994">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="95248-995">你已成功通过身份验证之前，不能调用此方法。</span><span class="sxs-lookup"><span data-stu-id="95248-995">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="95248-996">若要进行身份验证，调用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-996">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="95248-997">若要以同步方式执行此操作，使用<xref:System.Net.Security.NegotiateStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-997">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-998">下面的代码示例演示调用以完成异步写入操作的方法。</span><span class="sxs-lookup"><span data-stu-id="95248-998">The following code example demonstrates a method that is called to complete the asynchronous write operation.</span></span> <span data-ttu-id="95248-999">有关演示如何启动该操作的示例，请参阅<xref:System.Net.Security.NegotiateStream.BeginWrite%2A>。</span><span class="sxs-lookup"><span data-stu-id="95248-999">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-1000">
            <paramref name="asyncResult" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1000">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95248-1001">asyncResult 并不是通过调用 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1001">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-1002">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1002">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95248-1003">写操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1003">The write operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95248-1004">导致所有缓冲数据都要写入基础设备。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1004">Causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-1005">此方法调用<xref:System.IO.Stream.Flush%2A>对基础流。</span><span class="sxs-lookup"><span data-stu-id="95248-1005">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-1006">下面的代码示例演示如何刷新流。</span><span class="sxs-lookup"><span data-stu-id="95248-1006">The following code example demonstrates flushing the stream.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95248-1007">获取一个值，该值指示服务器使用客户端凭据的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1007">Gets a value that indicates how the server can use the client's credentials.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95248-1008">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1008">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-1009">你必须调用此方法之前已成功验证。</span><span class="sxs-lookup"><span data-stu-id="95248-1009">You must successfully authenticate before calling this method.</span></span> <span data-ttu-id="95248-1010">通过调用其中一个请求身份验证时，客户端指定的模拟级别<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-1010">Clients specify the impersonation level when they request authentication by calling one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="95248-1011">如果进行身份验证而无需指定<xref:System.Security.Principal.TokenImpersonationLevel>，<xref:System.Security.Principal.TokenImpersonationLevel.Identification>使用。</span><span class="sxs-lookup"><span data-stu-id="95248-1011">If you authenticate without specifying a <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-1012">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="95248-1012">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-1013">身份验证失败或没有进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1013">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95248-1014">获取一个 <see cref="T:System.Boolean" /> 值，该值指示身份验证是否成功。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1014">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95248-1015">如果身份验证成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1015">
              <see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-1016">客户端进行身份验证通过调用<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-1016">Clients authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="95248-1017">服务器进行身份验证通过调用<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-1017">Servers authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-1018">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="95248-1018">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95248-1019">获取一个 <see cref="T:System.Boolean" /> 值，该值指示此 <see cref="T:System.Net.Security.NegotiateStream" /> 是否使用数据加密。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1019">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95248-1020">如果在通过网络传输数据前将其加密，并在数据到达远程终结点后将其解密，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1020">
              <see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-1021">加密有助于保护的数据; 的隐私也就是说，它可帮助确保，在传输过程中的数据时它不能破译由第三方。</span><span class="sxs-lookup"><span data-stu-id="95248-1021">Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-1022">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="95248-1022">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Security.ProtectionLevel" />
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95248-1023">获取一个 <see cref="T:System.Boolean" /> 值，该值指示服务器和客户端是否均已进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1023">Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95248-1024">如果服务器已进行身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1024">
              <see langword="true" /> if the server has been authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-1025">当客户端想要提供身份验证的凭据的服务器，客户端指定相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-1025">Mutual authentication is specified by the client when the client wants the server to provide credentials for authentication.</span></span> <span data-ttu-id="95248-1026">默认情况下，客户端请求相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-1026">By default, clients request mutual authentication.</span></span>  
  
 <span data-ttu-id="95248-1027">协商协议选择 NTLM 或 Kerberos，具体取决于支持的客户端和服务器的安全协议。</span><span class="sxs-lookup"><span data-stu-id="95248-1027">The Negotiate protocol selects either NTLM or Kerberos depending on the security protocols supported by the client and server.</span></span> <span data-ttu-id="95248-1028">NTLM 不支持相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="95248-1028">NTLM does not support mutual authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-1029">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="95248-1029">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95248-1030">获取一个 <see cref="T:System.Boolean" /> 值，该值指示此 <see cref="T:System.Net.Security.NegotiateStream" /> 使用的连接的本地端是否作为服务器进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1030">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95248-1031">如果本地终结点作为经过身份验证的连接的服务器端成功地经过了身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1031">
              <see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-1032">如果身份验证失败，或者没有出现，则此属性返回`false`。</span><span class="sxs-lookup"><span data-stu-id="95248-1032">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="95248-1033">若要与服务器进行身份验证，调用<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-1033">To authenticate as the server, call the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-1034">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="95248-1034">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95248-1035">获取一个 <see cref="T:System.Boolean" /> 值，该值指示使用此流发送的数据是否进行签名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1035">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95248-1036">如果在传输数据前对其进行签名，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1036">
              <see langword="true" /> if the data is signed before being transmitted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-1037">数据签名有助于保护的数据中; 完整性也就是说，它可帮助收件人确定是否数据已被篡改在传输过程中。</span><span class="sxs-lookup"><span data-stu-id="95248-1037">Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-1038">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="95248-1038">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95248-1039">获取基础流的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1039">Gets the length of the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95248-1040">
            <see cref="T:System.Int64" />，指定基础流的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1040">A <see cref="T:System.Int64" /> that specifies the length of the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-1041">此属性返回通过调用返回的值<xref:System.IO.Stream.Length%2A>对基础流的属性。</span><span class="sxs-lookup"><span data-stu-id="95248-1041">This property returns the value returned by invoking the <xref:System.IO.Stream.Length%2A> property on the underlying stream.</span></span> <span data-ttu-id="95248-1042">如果基础流是不可查找的此属性通常将引发异常。</span><span class="sxs-lookup"><span data-stu-id="95248-1042">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="95248-1043">基础流的运行时类型确定引发的异常的运行时类型。</span><span class="sxs-lookup"><span data-stu-id="95248-1043">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-1044">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="95248-1044">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="95248-1045">当基础流为 <see cref="T:System.Net.Sockets.NetworkStream" /> 时，不支持获取此属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1045">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95248-1046">获取或设置基础流中的当前位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1046">Gets or sets the current position in the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95248-1047">
            <see cref="T:System.Int64" />，指定基础流中的当前位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1047">A <see cref="T:System.Int64" /> that specifies the current position in the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-1048">此属性返回通过调用返回的值<xref:System.IO.Stream.Position%2A>对基础流的属性。</span><span class="sxs-lookup"><span data-stu-id="95248-1048">This property returns the value returned by invoking the <xref:System.IO.Stream.Position%2A> property on the underlying stream.</span></span> <span data-ttu-id="95248-1049">如果基础流是不可查找的此属性通常将引发异常。</span><span class="sxs-lookup"><span data-stu-id="95248-1049">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="95248-1050">基础流的运行时类型确定引发的异常的运行时类型。</span><span class="sxs-lookup"><span data-stu-id="95248-1050">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="95248-1051">不支持设置此属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1051">Setting this property is not supported.</span>
          </span>
          <span data-ttu-id="95248-1052">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1052">\- or -</span>
          </span>
          <span data-ttu-id="95248-1053">当基础流为 <see cref="T:System.Net.Sockets.NetworkStream" /> 时，不支持获取此属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1053">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="95248-1054">一个 <see cref="T:System.Byte" /> 数组，该数组接收从流中读取的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1054">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="95248-1055">
            <see cref="T:System.Int32" />，其中包含<c>缓冲区</c>中从零开始的位置，从此处开始存储从流中读取的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1055">A <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="95248-1056">
            <see cref="T:System.Int32" />，包含要从流中读取的最大字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1056">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-1057">读取此流中的数据并将其存储在指定的数组中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1057">Reads data from this stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-1058">
            <see cref="T:System.Int32" /> 值，该值指定从基础流中读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1058">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
          <span data-ttu-id="95248-1059">如果再也没有要读取的数据，将返回 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1059">When there is no more data to be read, returns 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-1060">该方法读取的最多`count`字节从当前流，并且将它们存储在`buffer`开始`offset`。</span><span class="sxs-lookup"><span data-stu-id="95248-1060">The method reads a maximum of `count` bytes from the current stream and stores them in `buffer` beginning at `offset`.</span></span>  
  
 <span data-ttu-id="95248-1061">你已成功通过身份验证之前，不能调用此方法。</span><span class="sxs-lookup"><span data-stu-id="95248-1061">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="95248-1062">若要进行身份验证，调用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-1062">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="95248-1063">若要以异步方式执行此操作，使用<xref:System.Net.Security.NegotiateStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-1063">To perform this operation asynchronously, use the <xref:System.Net.Security.NegotiateStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-1064">下面的代码示例演示从读取<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-1064">The following code example demonstrates reading from a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncServer/CPP/NclNegoSyncServer.cpp#1)]
 [!code-csharp[NclNegoSyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95248-1065">读操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1065">The read operation failed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-1066">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1066">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="95248-1067">已在进行 <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> 操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1067">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95248-1068">获取或设置读操作阻止等待数据的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1068">Gets or sets the amount of time a read operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95248-1069">
            <see cref="T:System.Int32" />，指定读操作失败前经过的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1069">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a read operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-1070">此属性返回通过调用返回的值<xref:System.IO.Stream.ReadTimeout%2A>对基础流的属性。</span><span class="sxs-lookup"><span data-stu-id="95248-1070">This property returns the value returned by invoking the <xref:System.IO.Stream.ReadTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="95248-1071">当设置此属性，<xref:System.IO.Stream.ReadTimeout%2A>对基础流的值设置为指定的值。</span><span class="sxs-lookup"><span data-stu-id="95248-1071">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="95248-1072">如果基础流已<xref:System.Net.Sockets.NetworkStream>，<xref:System.Net.Security.NegotiateStream.ReadTimeout%2A>以毫秒为单位并将设置为<xref:System.Threading.Timeout.Infinite>默认情况下，这样一来，读取操作不会超时。</span><span class="sxs-lookup"><span data-stu-id="95248-1072">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-1073">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="95248-1073">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteIdentity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity RemoteIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity RemoteIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteIdentity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ RemoteIdentity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95248-1074">获取有关共享此已验证身份的流的远程方的身份信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1074">Gets information about the identity of the remote party sharing this authenticated stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95248-1075">
            <see cref="T:System.Security.Principal.IIdentity" /> 对象，介绍远程端点的标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1075">An <see cref="T:System.Security.Principal.IIdentity" /> object that describes the identity of the remote endpoint.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-1076">如果客户端访问，该属性返回<xref:System.Security.Principal.GenericIdentity>包含服务的服务器和使用的身份验证协议主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="95248-1076">When accessed by the client, this property returns a <xref:System.Security.Principal.GenericIdentity> containing the Service Principal Name (SPN) of the server and the authentication protocol used.</span></span> <span data-ttu-id="95248-1077">如果服务器可以访问，该属性返回<xref:System.Security.Principal.WindowsIdentity>描述客户端。</span><span class="sxs-lookup"><span data-stu-id="95248-1077">When accessed by the server, this property returns a <xref:System.Security.Principal.WindowsIdentity> that describes the client.</span></span> <span data-ttu-id="95248-1078">如果<xref:System.Security.Principal.WindowsIdentity>是不可用，客户端信息返回到的服务器<xref:System.Security.Principal.GenericIdentity>。</span><span class="sxs-lookup"><span data-stu-id="95248-1078">If the <xref:System.Security.Principal.WindowsIdentity> is not available, client information is returned to the server in a <xref:System.Security.Principal.GenericIdentity>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-1079">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="95248-1079">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#2)]
 [!code-csharp[NclNegoAsyncServer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-1080">身份验证失败或没有进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1080">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="95248-1081">忽略此值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1081">This value is ignored.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="95248-1082">忽略此值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1082">This value is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-1083">引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1083">Throws <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95248-1084">总是引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1084">Always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-1085">请勿调用此方法。</span><span class="sxs-lookup"><span data-stu-id="95248-1085">Do not call this method.</span></span> <span data-ttu-id="95248-1086">它继承的但不是支持<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-1086">It is inherited, but is not supported by <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="95248-1087">
            <see cref="T:System.Net.Security.NegotiateStream" /> 上不支持查找。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1087">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="95248-1088">
            <see cref="T:System.Int64" /> 值，该值指定流的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1088">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-1089">设置基础流的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1089">Sets the length of the underlying stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="95248-1090">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1090">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="95248-1091">
            <see cref="T:System.Int32" />，包含<c>缓冲区</c>中的从零开始的位置，将从该位置开始读取要写入到流中的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1091">An <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="95248-1092">
            <see cref="T:System.Int32" />，其中包含要从<c>缓冲区</c>中读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1092">A <see cref="T:System.Int32" /> containing the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95248-1093">使用指定的缓冲区和偏移将指定数目的 <see cref="T:System.Byte" /> 写入基础流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1093">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-1094">如果启用了加密、 签名或加密和签名，此方法从缓冲区中读取数据、 加密，符号，或对进行加密和签名，以及传输使用基础流。</span><span class="sxs-lookup"><span data-stu-id="95248-1094">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="95248-1095">如果任何安全不服务 （如数据加密或签名） 中使用，此方法将调用<xref:System.IO.Stream.Write%2A>对基础流。</span><span class="sxs-lookup"><span data-stu-id="95248-1095">If no security services such as data encryption or signing are in use, this method invokes <xref:System.IO.Stream.Write%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="95248-1096">当在写入操作完成时，将阻止此方法。</span><span class="sxs-lookup"><span data-stu-id="95248-1096">This method blocks while the write operation completes.</span></span> <span data-ttu-id="95248-1097">若要防止阻塞操作完成时，使用<xref:System.Net.Security.NegotiateStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-1097">To prevent blocking while the operation completes, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
 <span data-ttu-id="95248-1098">你已成功通过身份验证之前，不能调用此方法。</span><span class="sxs-lookup"><span data-stu-id="95248-1098">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="95248-1099">若要进行身份验证，调用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95248-1099">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="95248-1100"><xref:System.Net.Security.NegotiateStream>类不支持多个同时进行的写入操作。</span><span class="sxs-lookup"><span data-stu-id="95248-1100">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="95248-1101">如果你尝试开始写入操作，而另一个写入操作已经在执行对同一个流，<xref:System.NotSupportedException>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="95248-1101">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-1102">下面的代码示例演示如何写入<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="95248-1102">The following code example demonstrates writing to a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95248-1103">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1103">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95248-1104">
            <paramref name="offset is less than 0" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1104">
              <paramref name="offset is less than 0" />.</span>
          </span>
          <span data-ttu-id="95248-1105">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1105">\- or -</span>
          </span>
          <span data-ttu-id="95248-1106">
            <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1106">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="95248-1107">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1107">\- or -</span>
          </span>
          <span data-ttu-id="95248-1108">
            <paramref name="offset" /> 加上计数大于 <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1108">
              <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="95248-1109">写操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1109">The write operation failed.</span>
          </span>
          <span data-ttu-id="95248-1110">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1110">\- or -</span>
          </span>
          <span data-ttu-id="95248-1111">正在使用加密，但未能加密该数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1111">Encryption is in use, but the data could not be encrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="95248-1112">已存在一个正在执行的写操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1112">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="95248-1113">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1113">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95248-1114">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1114">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95248-1115">获取或设置写操作阻止等待数据的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1115">Gets or sets the amount of time a write operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95248-1116">
            <see cref="T:System.Int32" />，指定写操作失败前经过的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95248-1116">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a write operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95248-1117">此属性返回通过调用返回的值<xref:System.IO.Stream.WriteTimeout%2A>对基础流的属性。</span><span class="sxs-lookup"><span data-stu-id="95248-1117">This property returns the value returned by invoking the <xref:System.IO.Stream.WriteTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="95248-1118">对于集合运算指定的值设置<xref:System.IO.Stream.WriteTimeout%2A>对基础流的值。</span><span class="sxs-lookup"><span data-stu-id="95248-1118">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="95248-1119">如果基础流已<xref:System.Net.Sockets.NetworkStream>，<xref:System.Net.Security.NegotiateStream.WriteTimeout%2A>以毫秒为单位并将设置为<xref:System.Threading.Timeout.Infinite>默认情况下，因此写操作就不会超时。</span><span class="sxs-lookup"><span data-stu-id="95248-1119">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95248-1120">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="95248-1120">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>