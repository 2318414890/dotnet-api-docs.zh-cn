<Type Name="NegotiateStream" FullName="System.Net.Security.NegotiateStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="30a78badbbfbf6eb36bfea46d42f801409c8f429" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51874871" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NegotiateStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NegotiateStream extends System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.NegotiateStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NegotiateStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NegotiateStream : System::Net::Security::AuthenticatedStream" />
  <TypeSignature Language="F#" Value="type NegotiateStream = class&#xA;    inherit AuthenticatedStream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="aacd5-101">提供一个使用协商安全协议的流，以便对客户端-服务器通信中的客户端及服务器（可选）进行身份验证。</span>
      <span class="sxs-lookup">
        <span data-stu-id="aacd5-101">Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-102">使用<xref:System.Net.Security.NegotiateStream>客户端和服务器之间传输进行身份验证和协助保护信息的类。</span><span class="sxs-lookup"><span data-stu-id="aacd5-102">Use the <xref:System.Net.Security.NegotiateStream> class for authentication and to help secure information transmitted between a client and a server.</span></span> <span data-ttu-id="aacd5-103">使用<xref:System.Net.Security.NegotiateStream>，您可以执行以下操作。</span><span class="sxs-lookup"><span data-stu-id="aacd5-103">Using <xref:System.Net.Security.NegotiateStream>, you can do the following.</span></span>  
  
-   <span data-ttu-id="aacd5-104">客户端的凭据向服务器发送的模拟或委托。</span><span class="sxs-lookup"><span data-stu-id="aacd5-104">Send the client's credentials to the server for Impersonation or Delegation.</span></span>  
  
-   <span data-ttu-id="aacd5-105">请求服务器身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-105">Request server authentication.</span></span>  
  
-   <span data-ttu-id="aacd5-106">加密和/或将其传输之前对数据签名。</span><span class="sxs-lookup"><span data-stu-id="aacd5-106">Encrypt and/or sign data before transmitting it.</span></span>  
  
 <span data-ttu-id="aacd5-107">传输的信息之前，必须执行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-107">Authentication must be performed before transmitting information.</span></span> <span data-ttu-id="aacd5-108">客户端请求进行身份验证使用同步<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法，阻止，直到完成身份验证，或异步<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>方法，不会阻止等待进行身份验证完成时。</span><span class="sxs-lookup"><span data-stu-id="aacd5-108">Clients request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods, which do not block while waiting for the authentication to complete.</span></span> <span data-ttu-id="aacd5-109">服务器请求进行身份验证使用同步<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>或异步<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-109">Servers request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="aacd5-110">客户端和服务器，（可选） 进行身份验证使用 Negotiate 安全协议。</span><span class="sxs-lookup"><span data-stu-id="aacd5-110">The client, and optionally the server, is authenticated using the Negotiate security protocol.</span></span> <span data-ttu-id="aacd5-111">在 Windows 95/98 系统中，Windows NT LAN Manager (NTLM) 是用于身份验证的协议。</span><span class="sxs-lookup"><span data-stu-id="aacd5-111">On Windows 95/98 systems, Windows NT LAN Manager (NTLM) is the protocol used for authentication.</span></span> <span data-ttu-id="aacd5-112">在其他平台 Kerberos 协议来进行身份验证客户端和服务器支持它;否则使用 NTLM。</span><span class="sxs-lookup"><span data-stu-id="aacd5-112">On other platforms the Kerberos protocol is used for authentication if both client and server support it; otherwise NTLM is used.</span></span> <span data-ttu-id="aacd5-113">这些协议的详细说明，请参阅平台 SDK 文档 MSDN 上，在 msdn.microsoft.com/library/。</span><span class="sxs-lookup"><span data-stu-id="aacd5-113">For detailed descriptions of these protocols, see the Platform SDK documentation on MSDN, at msdn.microsoft.com/library/.</span></span> <span data-ttu-id="aacd5-114"><xref:System.Net.Security.NegotiateStream>类执行使用安全支持提供程序接口 (SSPI) 身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-114">The <xref:System.Net.Security.NegotiateStream> class performs the authentication using the Security Support Provider Interface (SSPI).</span></span>  
  
 <span data-ttu-id="aacd5-115">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定哪些安全服务将由<xref:System.Net.Security.NegotiateStream>来帮助保护你的数据在传输过程。</span><span class="sxs-lookup"><span data-stu-id="aacd5-115">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services will be used by the <xref:System.Net.Security.NegotiateStream> to help secure your data during transmission.</span></span> <span data-ttu-id="aacd5-116">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-116">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span> <span data-ttu-id="aacd5-117">可以获取有关远程客户端或服务器使用信息<xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="aacd5-117">You can get information about the remote client or server using the <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> property.</span></span>  
  
 <span data-ttu-id="aacd5-118">如果身份验证失败，则会收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-118">If the authentication fails, you will receive an <xref:System.Security.Authentication.AuthenticationException> or a <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-119">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-119">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="aacd5-120">发送使用同步数据<xref:System.Net.Security.NegotiateStream.Write%2A>或异步<xref:System.Net.Security.NegotiateStream.BeginWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-120">You send data using the synchronous <xref:System.Net.Security.NegotiateStream.Write%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="aacd5-121">接收数据使用同步<xref:System.Net.Security.NegotiateStream.Read%2A>或异步<xref:System.Net.Security.NegotiateStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-121">You receive data using the synchronous <xref:System.Net.Security.NegotiateStream.Read%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginRead%2A> methods.</span></span> <span data-ttu-id="aacd5-122">如果安全服务，如启用了加密或签名，这些会自动应用于您的数据<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-122">If security services such as encryption or signing are enabled, these are automatically applied to your data by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="aacd5-123"><xref:System.Net.Security.NegotiateStream>将使用在创建时提供的流的数据传输<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-123">The <xref:System.Net.Security.NegotiateStream> transmits data using a stream that you supply when creating the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="aacd5-124">时提供此基础流，可以选择指定是否关闭<xref:System.Net.Security.NegotiateStream>也会关闭基础流。</span><span class="sxs-lookup"><span data-stu-id="aacd5-124">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.NegotiateStream> also closes the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-125">下面的代码示例演示如何使用的客户端-服务器连接的客户端<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-125">The following code example demonstrates the client side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="aacd5-126">客户端进行身份验证，并以异步方式向服务器发送一条消息。</span><span class="sxs-lookup"><span data-stu-id="aacd5-126">The client authenticates and sends a message to the server asynchronously.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#0)]
 [!code-csharp[NclNegoAsyncClient#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#0)]  
  
 <span data-ttu-id="aacd5-127">下面的代码示例演示如何使用的客户端-服务器连接的服务器端<xref:System.Net.Security.NegotiateStream>进行身份验证客户端和读取客户端发送一条消息。</span><span class="sxs-lookup"><span data-stu-id="aacd5-127">The following code example demonstrates the server side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream> to authenticate the client and read a message sent by the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#0)]
 [!code-csharp[NclNegoAsyncServer#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#0)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8bf0b428-5a21-4299-8d6e-bf8251fd978a">
      <span data-ttu-id="aacd5-128">版本 3.5 SP1 中对 HTTPWebRequest 的 NTLM 身份验证的更改</span>
      <span class="sxs-lookup">
        <span data-stu-id="aacd5-128">Changes to NTLM authentication for HTTPWebRequest in Version 3.5 SP1</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-129">初始化 <see cref="T:System.Net.Security.NegotiateStream" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-129">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-130">若要防止<xref:System.Net.Security.NegotiateStream>关闭你提供的流，使用<xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="aacd5-130">To prevent the <xref:System.Net.Security.NegotiateStream> from closing the stream that you supply, use the <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream innerStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="aacd5-131">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.NegotiateStream" /> 使用此对象发送和接收数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-131">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-132">使用指定的 <see cref="T:System.Net.Security.NegotiateStream" /> 初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-132">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aacd5-133">下面的代码示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="aacd5-133">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#3)]
 [!code-csharp[NclNegoSyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream * bool -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream (innerStream, leaveInnerStreamOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="aacd5-134">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.NegotiateStream" /> 使用此对象发送和接收数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-134">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="aacd5-135">如果为 <see langword="true" />，表示关闭此 <see cref="T:System.Net.Security.NegotiateStream" /> 不影响 <c>innerstream</c>；若为 <see langword="false" />，则表示关闭此 <see cref="T:System.Net.Security.NegotiateStream" /> 也会同时关闭 <c>innerStream</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-135">
              <see langword="true" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> has no effect on <c>innerstream</c>; <see langword="false" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> also closes <c>innerStream</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-136">使用指定的 <see cref="T:System.Net.Security.NegotiateStream" /> 和流封闭行为初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-136">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-137">当指定`true`有关`leaveStreamOpen`参数，关闭<xref:System.Net.Security.NegotiateStream>不起任何作用`innerStream`流; 必须显式关闭`innerStream`时不再需要它。</span><span class="sxs-lookup"><span data-stu-id="aacd5-137">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.NegotiateStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-138">下面的代码示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="aacd5-138">The following code example demonstrates calling this constructor.</span></span> <span data-ttu-id="aacd5-139">此代码示例是为提供一个更大示例的一部分<xref:System.Net.Security.NegotiateStream>类。</span><span class="sxs-lookup"><span data-stu-id="aacd5-139">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#1)]
 [!code-csharp[NclNegoAsyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-140">
            <paramref name="innerStream" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-140">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="aacd5-141">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-141">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-142">
            <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-142">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-143">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-143">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : unit -&gt; unit&#xA;override this.AuthenticateAsClient : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-144">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-144">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-145">身份验证使用客户端的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-145">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="aacd5-146">为服务器指定没有服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="aacd5-146">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="aacd5-147">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，和相互身份验证请求。</span><span class="sxs-lookup"><span data-stu-id="aacd5-147">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="aacd5-148"><xref:System.Net.Security.NegotiateStream>类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="aacd5-148">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="aacd5-149">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-149">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="aacd5-150">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-150">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="aacd5-151">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-151">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-152">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-152">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-153">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-153">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-154">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-154">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-155">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-155">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-156">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-156">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-157">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-157">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-158">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-158">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="aacd5-159">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-159">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-160">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-160">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="aacd5-161">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-161">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="aacd5-162">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-162">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="aacd5-163">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-163">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="aacd5-164">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-164">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="aacd5-165">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-165">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-166">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-166">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="aacd5-167">身份验证过程使用指定的客户端凭据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-167">The authentication process uses the specified client credential.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-168">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，和相互身份验证请求。</span><span class="sxs-lookup"><span data-stu-id="aacd5-168">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="aacd5-169"><xref:System.Net.Security.NegotiateStream>类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="aacd5-169">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="aacd5-170">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-170">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="aacd5-171">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-171">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-172">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-172">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-173">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-173">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-174">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-174">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-175">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-175">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-176">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-176">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-177">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-177">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="aacd5-178">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-178">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-179">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-179">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="aacd5-180">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-180">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-181">
            <paramref name="targetName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-181">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="aacd5-182">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-182">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="aacd5-183">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-183">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="aacd5-184">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-184">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="aacd5-185">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-185">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="aacd5-186">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-186">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-187">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-187">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="aacd5-188">身份验证过程使用指定的客户端凭据和通道绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-188">The authentication process uses the specified client credential and the channel binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-189">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，和相互身份验证请求。</span><span class="sxs-lookup"><span data-stu-id="aacd5-189">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="aacd5-190"><xref:System.Net.Security.NegotiateStream>类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="aacd5-190">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="aacd5-191"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>用于传递给此方法的扩展保护`binding`参数将由从应用程序检索<xref:System.Net.Security.SslStream.TransportContext%2A>关联的属性<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-191">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="aacd5-192">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-192">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="aacd5-193">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-193">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-194">
            <paramref name="targetName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-194">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="aacd5-195">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-195">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-196">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-196">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-197">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-197">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-198">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-198">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-199">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-199">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-200">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-200">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-201">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-201">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="aacd5-202">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-202">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-203">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-203">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="aacd5-204">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-204">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-205">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-205">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="aacd5-206">带有扩展保护的集成 Windows 身份验证</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-206">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="aacd5-207">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-207">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="aacd5-208">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-208">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="aacd5-209">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-209">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="aacd5-210">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-210">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-211">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-211">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="aacd5-212">身份验证过程使用指定的凭据和身份验证选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-212">The authentication process uses the specified credentials and authentication options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-213">使用`requiredProtectionLevel`参数的请求安全服务的使用经过身份验证的流传输的数据。</span><span class="sxs-lookup"><span data-stu-id="aacd5-213">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="aacd5-214">例如，如果希望数据加密和签名，请指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-214">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="aacd5-215">成功进行身份验证并不保证请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="aacd5-215">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="aacd5-216">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-216">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="aacd5-217">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-217">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-218">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-218">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="aacd5-219">
            <paramref name="allowedImpersonationLevel" /> 不是有效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-219">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-220">
            <paramref name="targetName" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-220">
              <paramref name="targetName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-221">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-221">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-222">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-222">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-223">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-223">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-224">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-224">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-225">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-225">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-226">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-226">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="aacd5-227">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-227">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-228">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-228">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="aacd5-229">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-229">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="aacd5-230">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-230">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="aacd5-231">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-231">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="aacd5-232">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-232">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="aacd5-233">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-233">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="aacd5-234">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-234">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="aacd5-235">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-235">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="aacd5-236">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-236">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-237">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-237">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="aacd5-238">身份验证过程使用指定的凭据、身份验证选项和通道绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-238">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-239">使用`requiredProtectionLevel`参数的请求安全服务的使用经过身份验证的流传输的数据。</span><span class="sxs-lookup"><span data-stu-id="aacd5-239">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="aacd5-240">例如，如果希望数据加密和签名，请指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-240">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="aacd5-241">成功进行身份验证并不保证请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="aacd5-241">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="aacd5-242">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-242">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="aacd5-243"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>用于传递给此方法的扩展保护`binding`参数将由从应用程序检索<xref:System.Net.Security.SslStream.TransportContext%2A>关联的属性<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-243">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="aacd5-244">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-244">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-245">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-245">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-246">
            <paramref name="targetName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-246">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="aacd5-247">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-247">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-248">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-248">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="aacd5-249">
            <paramref name="allowedImpersonationLevel" /> 不是有效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-249">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-250">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-250">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-251">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-251">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-252">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-252">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-253">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-253">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-254">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-254">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="aacd5-255">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-255">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-256">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-256">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="aacd5-257">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-257">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-258">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-258">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="aacd5-259">带有扩展保护的集成 Windows 身份验证</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-259">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-260">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-260">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-261">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-261">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-262">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-262">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="aacd5-263">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-263">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-264">身份验证使用客户端的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-264">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="aacd5-265">为服务器指定没有服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="aacd5-265">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="aacd5-266">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，和相互身份验证请求。</span><span class="sxs-lookup"><span data-stu-id="aacd5-266">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="aacd5-267"><xref:System.Net.Security.NegotiateStream>类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="aacd5-267">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="aacd5-268">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-268">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="aacd5-269">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-269">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="aacd5-270">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-270">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-271">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-271">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-272">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-272">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-273">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-273">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-274">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-274">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-275">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-275">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-276">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-276">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-277">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-277">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="aacd5-278">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-278">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-279">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-279">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="aacd5-280">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-280">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="aacd5-281">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-281">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="aacd5-282">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-282">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="aacd5-283">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-283">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="aacd5-284">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-284">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-285">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-285">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="aacd5-286">身份验证过程使用指定的客户端凭据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-286">The authentication process uses the specified client credential.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-287">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-287">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="aacd5-288">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-288">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-289">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，和相互身份验证请求。</span><span class="sxs-lookup"><span data-stu-id="aacd5-289">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="aacd5-290"><xref:System.Net.Security.NegotiateStream>类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="aacd5-290">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="aacd5-291">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-291">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="aacd5-292">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-292">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-293">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-293">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-294">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-294">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-295">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-295">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-296">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-296">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-297">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-297">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-298">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-298">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="aacd5-299">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-299">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-300">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-300">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="aacd5-301">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-301">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-302">
            <paramref name="targetName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-302">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="aacd5-303">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-303">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="aacd5-304">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-304">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="aacd5-305">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-305">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="aacd5-306">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-306">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="aacd5-307">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-307">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-308">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-308">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="aacd5-309">身份验证过程使用指定的客户端凭据和通道绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-309">The authentication process uses the specified client credential and the channel binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-310">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-310">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="aacd5-311">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-311">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-312">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，和相互身份验证请求。</span><span class="sxs-lookup"><span data-stu-id="aacd5-312">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="aacd5-313"><xref:System.Net.Security.NegotiateStream>类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="aacd5-313">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="aacd5-314"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>用于传递给此方法的扩展保护`binding`参数将由从应用程序检索<xref:System.Net.Security.SslStream.TransportContext%2A>关联的属性<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-314">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="aacd5-315">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-315">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="aacd5-316">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-316">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-317">
            <paramref name="targetName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-317">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="aacd5-318">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-318">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-319">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-319">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-320">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-320">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-321">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-321">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-322">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-322">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-323">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-323">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-324">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-324">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="aacd5-325">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-325">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-326">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-326">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="aacd5-327">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-327">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-328">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-328">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="aacd5-329">带有扩展保护的集成 Windows 身份验证</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-329">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="aacd5-330">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-330">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="aacd5-331">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-331">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="aacd5-332">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-332">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="aacd5-333">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-333">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-334">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-334">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="aacd5-335">身份验证过程使用指定的凭据和身份验证选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-335">The authentication process uses the specified credentials and authentication options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-336">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-336">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="aacd5-337">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-337">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-338">使用`requiredProtectionLevel`参数的请求安全服务的使用经过身份验证的流传输的数据。</span><span class="sxs-lookup"><span data-stu-id="aacd5-338">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="aacd5-339">例如，如果希望数据加密和签名，请指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-339">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="aacd5-340">成功进行身份验证并不保证请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="aacd5-340">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="aacd5-341">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-341">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="aacd5-342">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-342">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-343">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-343">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="aacd5-344">
            <paramref name="allowedImpersonationLevel" /> 不是有效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-344">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-345">
            <paramref name="targetName" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-345">
              <paramref name="targetName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-346">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-346">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-347">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-347">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-348">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-348">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-349">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-349">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-350">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-350">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-351">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-351">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="aacd5-352">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-352">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-353">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-353">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="aacd5-354">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-354">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="aacd5-355">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-355">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="aacd5-356">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-356">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="aacd5-357">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-357">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="aacd5-358">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-358">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="aacd5-359">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-359">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="aacd5-360">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-360">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="aacd5-361">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-361">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-362">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-362">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="aacd5-363">身份验证过程使用指定的凭据、身份验证选项和通道绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-363">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-364">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-364">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="aacd5-365">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-365">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-366">使用`requiredProtectionLevel`参数的请求安全服务的使用经过身份验证的流传输的数据。</span><span class="sxs-lookup"><span data-stu-id="aacd5-366">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="aacd5-367">例如，如果希望数据加密和签名，请指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-367">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="aacd5-368">成功进行身份验证并不保证请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="aacd5-368">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="aacd5-369">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-369">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="aacd5-370"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>用于传递给此方法的扩展保护`binding`参数将由从应用程序检索<xref:System.Net.Security.SslStream.TransportContext%2A>关联的属性<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-370">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="aacd5-371">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-371">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-372">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-372">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-373">
            <paramref name="targetName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-373">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="aacd5-374">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-374">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-375">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-375">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="aacd5-376">
            <paramref name="allowedImpersonationLevel" /> 不是有效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-376">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-377">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-377">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-378">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-378">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-379">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-379">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-380">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-380">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-381">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-381">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="aacd5-382">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-382">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-383">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-383">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="aacd5-384">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-384">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-385">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-385">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="aacd5-386">带有扩展保护的集成 Windows 身份验证</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-386">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-387">处理客户端-服务器连接的身份验证的服务器端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-387">Handles the server side of an authentication for a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-388">在进行身份验证时，将阻止这些方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-388">These methods block while the authentication is in progress.</span></span> <span data-ttu-id="aacd5-389">若要阻止应用程序阻止等待进行身份验证完成时，使用<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-389">To prevent the application from blocking while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : unit -&gt; unit&#xA;override this.AuthenticateAsServer : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsServer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-390">服务器调用此方法，以便对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-390">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-391">身份验证使用服务器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-391">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="aacd5-392">为服务器指定没有服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="aacd5-392">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="aacd5-393">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和的安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-393">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="aacd5-394">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-394">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="aacd5-395">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-395">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="aacd5-396">此方法进行阻止，直到操作完成。</span><span class="sxs-lookup"><span data-stu-id="aacd5-396">This method blocks until the operation completes.</span></span> <span data-ttu-id="aacd5-397">若要阻止阻塞在操作完成之前，使用之一<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="aacd5-397">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="aacd5-398">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-398">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-399">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-399">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-400">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-400">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-401">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-401">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-402">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-402">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-403">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-403">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-404">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-404">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="aacd5-405">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-405">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="aacd5-406">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-406">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="aacd5-407">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-407">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (policy As ExtendedProtectionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit" Usage="negotiateStream.AuthenticateAsServer policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="aacd5-408">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-408">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-409">服务器调用此方法，以便对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-409">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="aacd5-410">身份验证过程使用指定的扩展保护策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-410">The authentication process uses the specified extended protection policy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-411">身份验证使用服务器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-411">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="aacd5-412">为服务器指定没有服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="aacd5-412">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="aacd5-413">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和的安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-413">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="aacd5-414">如果`policy`参数是`null`，则扩展的保护策略使用具有<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>设置为<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-414">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="aacd5-415">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-415">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="aacd5-416">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-416">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="aacd5-417">此方法进行阻止，直到操作完成。</span><span class="sxs-lookup"><span data-stu-id="aacd5-417">This method blocks until the operation completes.</span></span> <span data-ttu-id="aacd5-418">若要阻止阻塞在操作完成之前，使用之一<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="aacd5-418">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="aacd5-419">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-419">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-420">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-420">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="aacd5-421">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-421">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-422">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-422">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-423">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-423">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-424">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-424">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-425">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-425">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="aacd5-426">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-426">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-427">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-427">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="aacd5-428">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-428">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="aacd5-429">带有扩展保护的集成 Windows 身份验证</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-429">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="aacd5-430">用于确立服务器身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-430">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="aacd5-431">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-431">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="aacd5-432">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-432">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-433">服务器调用此方法，以便对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-433">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="aacd5-434">身份验证过程使用指定的服务器凭据和身份验证选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-434">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-435">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-435">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="aacd5-436">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-436">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="aacd5-437">此方法进行阻止，直到操作完成。</span><span class="sxs-lookup"><span data-stu-id="aacd5-437">This method blocks until the operation completes.</span></span> <span data-ttu-id="aacd5-438">若要阻止阻塞在操作完成之前，使用之一<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="aacd5-438">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="aacd5-439">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-439">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-440">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-440">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-441">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-441">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="aacd5-442">
            <paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-442">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-443">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-443">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-444">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-444">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-445">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-445">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-446">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-446">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-447">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-447">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-448">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-448">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="aacd5-449">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-449">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-450">此流先前被用作客户端尝试进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-450">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="aacd5-451">不能尝试将该流作为服务器重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-451">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="aacd5-452">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-452">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="aacd5-453">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-453">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="aacd5-454">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-454">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="aacd5-455">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-455">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="aacd5-456">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-456">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="aacd5-457">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-457">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="aacd5-458">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-458">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-459">服务器调用此方法，以便对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-459">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="aacd5-460">身份验证过程使用指定的服务器凭据、身份验证选项和扩展保护策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-460">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-461">如果`policy`参数是`null`，则扩展的保护策略使用具有<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>设置为<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-461">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="aacd5-462">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-462">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="aacd5-463">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-463">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="aacd5-464">此方法进行阻止，直到操作完成。</span><span class="sxs-lookup"><span data-stu-id="aacd5-464">This method blocks until the operation completes.</span></span> <span data-ttu-id="aacd5-465">若要阻止阻塞在操作完成之前，使用之一<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="aacd5-465">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="aacd5-466">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-466">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-467">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-467">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="aacd5-468">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-468">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-469">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-469">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="aacd5-470">
            <paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-470">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-471">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-471">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-472">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-472">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-473">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-473">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-474">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-474">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-475">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-475">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="aacd5-476">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-476">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-477">此流先前被用作客户端尝试进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-477">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="aacd5-478">不能尝试将该流作为服务器重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-478">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="aacd5-479">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-479">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-480">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-480">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="aacd5-481">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-481">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="aacd5-482">带有扩展保护的集成 Windows 身份验证</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-482">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-483">以异步操作方式处理某个客户端-服务器连接的身份验证的服务器端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-483">Handles the server side of an authentication for a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-484">服务器调用此方法，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-484">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-485">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-485">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="aacd5-486">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-486">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-487">身份验证使用服务器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-487">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="aacd5-488">为服务器指定没有服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="aacd5-488">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="aacd5-489">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和的安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-489">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="aacd5-490">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-490">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="aacd5-491">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-491">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="aacd5-492">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-492">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-493">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-493">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-494">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-494">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-495">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-495">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-496">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-496">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-497">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-497">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-498">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-498">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="aacd5-499">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-499">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="aacd5-500">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-500">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="aacd5-501">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-501">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (policy As ExtendedProtectionPolicy) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="aacd5-502">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-502">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-503">服务器调用此方法，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-503">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="aacd5-504">身份验证过程使用指定的扩展保护策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-504">The authentication process uses the specified extended protection policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-505">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-505">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="aacd5-506">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-506">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-507">身份验证使用服务器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-507">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="aacd5-508">为服务器指定没有服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="aacd5-508">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="aacd5-509">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和的安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-509">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="aacd5-510">如果`policy`参数是`null`，则扩展的保护策略使用具有<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>设置为<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-510">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="aacd5-511">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-511">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="aacd5-512">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-512">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="aacd5-513">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-513">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-514">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-514">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="aacd5-515">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-515">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-516">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-516">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-517">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-517">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-518">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-518">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-519">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-519">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="aacd5-520">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-520">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-521">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-521">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="aacd5-522">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-522">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="aacd5-523">带有扩展保护的集成 Windows 身份验证</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-523">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="aacd5-524">用于确立服务器身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-524">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="aacd5-525">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-525">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="aacd5-526">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-526">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-527">服务器调用此方法，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-527">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="aacd5-528">身份验证过程使用指定的服务器凭据和身份验证选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-528">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-529">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-529">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="aacd5-530">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-530">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-531">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-531">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="aacd5-532">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-532">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="aacd5-533">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-533">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-534">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-534">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-535">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-535">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="aacd5-536">
            <paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-536">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-537">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-537">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-538">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-538">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-539">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-539">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-540">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-540">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-541">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-541">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-542">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-542">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="aacd5-543">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-543">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-544">此流先前被用作客户端尝试进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-544">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="aacd5-545">不能尝试将该流作为服务器重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-545">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="aacd5-546">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-546">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="aacd5-547">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-547">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="aacd5-548">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-548">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="aacd5-549">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-549">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="aacd5-550">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-550">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="aacd5-551">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-551">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="aacd5-552">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-552">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-553">服务器调用此方法，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-553">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="aacd5-554">身份验证过程使用指定的服务器凭据、身份验证选项和扩展保护策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-554">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-555">返回 <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-555">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="aacd5-556">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-556">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-557">如果`policy`参数是`null`，则扩展的保护策略使用具有<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>设置为<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-557">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="aacd5-558">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-558">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="aacd5-559">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-559">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="aacd5-560">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-560">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-561">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-561">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="aacd5-562">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-562">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-563">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-563">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="aacd5-564">
            <paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-564">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-565">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-565">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-566">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-566">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-567">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-567">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-568">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-568">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-569">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-569">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="aacd5-570">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-570">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-571">此流先前被用作客户端尝试进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-571">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="aacd5-572">不能尝试将该流作为服务器重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-572">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="aacd5-573">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-573">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-574">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-574">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="aacd5-575">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-575">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="aacd5-576">带有扩展保护的集成 Windows 身份验证</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-576">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-577">开始一个异步操作，以对客户端-服务器连接中的客户端进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-577">Begins an asynchronous operation to authenticate the client side of a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-578">在进行身份验证时不会阻止此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="aacd5-578">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="aacd5-579">若要阻止等待进行身份验证完成时，请使用其中一个<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-579">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="asyncCallback">
          <span data-ttu-id="aacd5-580">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-580">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="aacd5-581">一个用户定义对象，其中包含该操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-581">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="aacd5-582">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-582">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-583">客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-583">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="aacd5-584">此方法不会进入阻止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-584">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-585">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-585">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-586">身份验证使用客户端的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-586">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="aacd5-587">为服务器指定没有服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="aacd5-587">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="aacd5-588">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和的安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-588">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span> <span data-ttu-id="aacd5-589"><xref:System.Net.Security.NegotiateStream>类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="aacd5-589">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="aacd5-590">此方法是异步的不会阻止该操作完成时。</span><span class="sxs-lookup"><span data-stu-id="aacd5-590">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="aacd5-591">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="aacd5-591">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="aacd5-592">必须通过调用完成异步验证操作<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-592">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="aacd5-593">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="aacd5-593">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="aacd5-594">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="aacd5-594">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="aacd5-595">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-595">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-596">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-596">In this case, you can retry the authentication with a different credential.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-597">下面的代码示例演示如何调用此方法开始异步身份验证时为客户端。</span><span class="sxs-lookup"><span data-stu-id="aacd5-597">The following code example demonstrates calling this method to begin an asynchronous authentication for the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#2)]
 [!code-csharp[NclNegoAsyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-598">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-598">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-599">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-599">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-600">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-600">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-601">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-601">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-602">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-602">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-603">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-603">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="aacd5-604">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-604">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-605">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-605">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="aacd5-606">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-606">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="aacd5-607">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-607">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="aacd5-608">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-608">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="aacd5-609">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-609">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="aacd5-610">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-610">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="aacd5-611">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-611">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="aacd5-612">一个用户定义对象，其中包含写操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-612">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="aacd5-613">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-613">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-614">客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-614">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="aacd5-615">身份验证过程使用指定的凭据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-615">The authentication process uses the specified credentials.</span>
          </span>
          <span data-ttu-id="aacd5-616">此方法不会进入阻止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-616">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-617">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-617">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-618">此方法是异步的不会阻止该操作完成时。</span><span class="sxs-lookup"><span data-stu-id="aacd5-618">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="aacd5-619">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="aacd5-619">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="aacd5-620">必须通过调用完成异步验证操作<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-620">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="aacd5-621">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="aacd5-621">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="aacd5-622">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="aacd5-622">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="aacd5-623">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-623">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-624">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-624">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-625">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-625">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="aacd5-626">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-626">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-627">
            <paramref name="targetName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-627">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-628">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-628">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-629">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-629">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-630">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-630">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-631">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-631">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-632">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-632">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-633">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-633">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="aacd5-634">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-634">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-635">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-635">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="aacd5-636">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-636">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="aacd5-637">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-637">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="aacd5-638">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-638">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="aacd5-639">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-639">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="aacd5-640">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-640">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="aacd5-641">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-641">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="aacd5-642">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-642">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="aacd5-643">一个用户定义对象，其中包含写操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-643">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="aacd5-644">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-644">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-645">客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-645">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="aacd5-646">身份验证过程使用指定的凭据和通道绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-646">The authentication process uses the specified credentials and channel binding.</span>
          </span>
          <span data-ttu-id="aacd5-647">此方法不会进入阻止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-647">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-648">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-648">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-649">此方法是异步的不会阻止该操作完成时。</span><span class="sxs-lookup"><span data-stu-id="aacd5-649">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="aacd5-650">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="aacd5-650">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="aacd5-651">必须通过调用完成异步验证操作<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-651">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="aacd5-652">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="aacd5-652">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="aacd5-653">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="aacd5-653">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="aacd5-654">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-654">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-655">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-655">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-656">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-656">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="aacd5-657">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-657">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-658">
            <paramref name="targetName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-658">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-659">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-659">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-660">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-660">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-661">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-661">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-662">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-662">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-663">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-663">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="aacd5-664">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-664">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-665">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-665">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="aacd5-666">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-666">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-667">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-667">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="aacd5-668">带有扩展保护的集成 Windows 身份验证</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-668">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="aacd5-669">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-669">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="aacd5-670">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-670">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="aacd5-671">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-671">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="aacd5-672">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-672">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="aacd5-673">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-673">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="aacd5-674">一个用户定义对象，其中包含写操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-674">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="aacd5-675">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-675">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-676">客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-676">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="aacd5-677">身份验证过程使用指定的凭据和身份验证选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-677">The authentication process uses the specified credentials and authentication options.</span>
          </span>
          <span data-ttu-id="aacd5-678">此方法不会进入阻止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-678">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-679">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-679">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-680">使用`requiredProtectionLevel`参数的请求安全服务的使用经过身份验证的流传输的数据。</span><span class="sxs-lookup"><span data-stu-id="aacd5-680">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="aacd5-681">例如，如果希望数据加密和签名，请指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-681">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="aacd5-682">成功进行身份验证并不保证请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="aacd5-682">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="aacd5-683">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-683">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="aacd5-684">此方法是异步的不会阻止该操作完成时。</span><span class="sxs-lookup"><span data-stu-id="aacd5-684">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="aacd5-685">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="aacd5-685">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="aacd5-686">必须通过调用完成异步验证操作<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-686">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="aacd5-687">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="aacd5-687">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="aacd5-688">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="aacd5-688">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="aacd5-689">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-689">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-690">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-690">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-691">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-691">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="aacd5-692">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-692">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-693">
            <paramref name="targetName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-693">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-694">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-694">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-695">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-695">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-696">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-696">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-697">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-697">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-698">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-698">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-699">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-699">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="aacd5-700">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-700">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-701">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-701">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="aacd5-702">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-702">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="aacd5-703">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-703">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="aacd5-704">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-704">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="aacd5-705">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-705">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="aacd5-706">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-706">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="aacd5-707">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-707">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="aacd5-708">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-708">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="aacd5-709">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-709">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="aacd5-710">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-710">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="aacd5-711">一个用户定义对象，其中包含写操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-711">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="aacd5-712">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-712">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-713">客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-713">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="aacd5-714">身份验证过程使用指定的凭据、身份验证选项和通道绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-714">The authentication process uses the specified credentials, authentication options, and channel binding.</span>
          </span>
          <span data-ttu-id="aacd5-715">此方法不会进入阻止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-715">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-716">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-716">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-717">使用`requiredProtectionLevel`参数的请求安全服务的使用经过身份验证的流传输的数据。</span><span class="sxs-lookup"><span data-stu-id="aacd5-717">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="aacd5-718">例如，如果希望数据加密和签名，请指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-718">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="aacd5-719">成功进行身份验证并不保证请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="aacd5-719">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="aacd5-720">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-720">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="aacd5-721">此方法是异步的不会阻止该操作完成时。</span><span class="sxs-lookup"><span data-stu-id="aacd5-721">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="aacd5-722">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="aacd5-722">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="aacd5-723">必须通过调用完成异步验证操作<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-723">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="aacd5-724">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="aacd5-724">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="aacd5-725">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="aacd5-725">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="aacd5-726">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-726">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-727">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-727">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-728">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-728">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="aacd5-729">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-729">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-730">
            <paramref name="targetName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-730">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-731">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-731">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-732">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-732">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-733">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-733">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-734">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-734">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-735">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-735">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="aacd5-736">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-736">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-737">此流先前被尝试作为服务器进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-737">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="aacd5-738">不能尝试将该流作为客户端重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-738">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-739">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-739">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="aacd5-740">带有扩展保护的集成 Windows 身份验证</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-740">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-741">开始一个异步操作，以处理进行身份验证的客户端-服务器连接中的服务器端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-741">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-742">在进行身份验证时不会阻止此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="aacd5-742">The overloads of this method do not block while the authentication is in progress.</span></span> <span data-ttu-id="aacd5-743">若要阻止等待进行身份验证完成时，请使用<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-743">To block while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="asyncCallback">
          <span data-ttu-id="aacd5-744">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-744">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="aacd5-745">一个用户定义对象，其中包含该操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-745">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="aacd5-746">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-746">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-747">服务器调用此方法开始一个异步操作，以对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-747">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="aacd5-748">此方法不会进入阻止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-748">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-749">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-749">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-750">身份验证使用服务器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-750">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="aacd5-751">为服务器指定没有服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="aacd5-751">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="aacd5-752">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-752">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="aacd5-753">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-753">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="aacd5-754">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-754">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="aacd5-755">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="aacd5-755">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="aacd5-756">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-756">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-757">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-757">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-758">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-758">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-759">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-759">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-760">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-760">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-761">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-761">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-762">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-762">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="aacd5-763">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-763">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="aacd5-764">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-764">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="aacd5-765">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-765">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (policy, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="aacd5-766">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-766">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="aacd5-767">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-767">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="aacd5-768">一个用户定义对象，其中包含写操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-768">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="aacd5-769">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-769">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-770">服务器调用此方法开始一个异步操作，以对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-770">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="aacd5-771">身份验证过程使用指定的扩展保护策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-771">The authentication process uses the specified extended protection policy.</span>
          </span>
          <span data-ttu-id="aacd5-772">此方法不会进入阻止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-772">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-773">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-773">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-774">身份验证使用服务器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-774">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="aacd5-775">为服务器指定没有服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="aacd5-775">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="aacd5-776">模拟级别是<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-776">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="aacd5-777">如果`policy`参数是`null`，则扩展的保护策略使用具有<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>设置为<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-777">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="aacd5-778">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-778">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="aacd5-779">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-779">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="aacd5-780">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="aacd5-780">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="aacd5-781">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-781">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-782">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-782">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="aacd5-783">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-783">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-784">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-784">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-785">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-785">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-786">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-786">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-787">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-787">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="aacd5-788">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-788">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-789">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-789">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="aacd5-790">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-790">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="aacd5-791">带有扩展保护的集成 Windows 身份验证</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-791">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="aacd5-792">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-792">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="aacd5-793">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-793">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="aacd5-794">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-794">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="aacd5-795">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-795">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="aacd5-796">一个用户定义对象，其中包含该操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-796">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="aacd5-797">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-797">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-798">服务器调用此方法开始一个异步操作，以对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-798">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="aacd5-799">身份验证过程使用指定的服务器凭据和身份验证选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-799">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
          <span data-ttu-id="aacd5-800">此方法不会进入阻止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-800">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-801">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-801">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-802">使用`requiredProtectionLevel`参数的请求安全服务的使用经过身份验证的流传输的数据。</span><span class="sxs-lookup"><span data-stu-id="aacd5-802">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="aacd5-803">例如，如果希望数据加密和签名，请指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-803">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="aacd5-804">成功进行身份验证并不保证的请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="aacd5-804">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="aacd5-805">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-805">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="aacd5-806">此方法是异步的不会阻止该操作完成时。</span><span class="sxs-lookup"><span data-stu-id="aacd5-806">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="aacd5-807">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="aacd5-807">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="aacd5-808">必须通过调用完成异步验证操作<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-808">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="aacd5-809">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="aacd5-809">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="aacd5-810">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="aacd5-810">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="aacd5-811">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-811">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-812">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-812">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-813">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-813">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="aacd5-814">
            <paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-814">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-815">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-815">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-816">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-816">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-817">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-817">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-818">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-818">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-819">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-819">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-820">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-820">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="aacd5-821">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-821">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-822">此流先前被用作客户端尝试进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-822">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="aacd5-823">不能尝试将该流作为服务器重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-823">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="aacd5-824">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-824">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="aacd5-825">若要使用的显式<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-825">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="aacd5-826">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-826">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="aacd5-827">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-827">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="aacd5-828">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-828">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="aacd5-829">
            <see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-829">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="aacd5-830">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-830">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="aacd5-831">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-831">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="aacd5-832">一个用户定义对象，其中包含写操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-832">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="aacd5-833">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-833">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-834">服务器调用此方法开始一个异步操作，以对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-834">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="aacd5-835">身份验证过程使用指定的服务器凭据、身份验证选项和扩展保护策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-835">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
          <span data-ttu-id="aacd5-836">此方法不会进入阻止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-836">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-837">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-837">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-838">使用`requiredProtectionLevel`参数的请求安全服务的使用经过身份验证的流传输的数据。</span><span class="sxs-lookup"><span data-stu-id="aacd5-838">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="aacd5-839">例如，如果希望数据加密和签名，请指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-839">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="aacd5-840">成功进行身份验证并不保证的请求<xref:System.Net.Security.ProtectionLevel>已被授予。</span><span class="sxs-lookup"><span data-stu-id="aacd5-840">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="aacd5-841">必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-841">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="aacd5-842">如果`policy`参数是`null`，则扩展的保护策略使用具有<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>设置为<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-842">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="aacd5-843">此方法是异步的不会阻止该操作完成时。</span><span class="sxs-lookup"><span data-stu-id="aacd5-843">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="aacd5-844">若要阻止在操作完成之前，请使用其中一个<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="aacd5-844">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="aacd5-845">必须通过调用完成异步验证操作<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-845">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="aacd5-846">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="aacd5-846">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="aacd5-847">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="aacd5-847">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="aacd5-848">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-848">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-849">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-849">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="aacd5-850">在 <paramref name="policy" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-850">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-851">
            <paramref name="credential" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-851">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="aacd5-852">
            <paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-852">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-853">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-853">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-854">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-854">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-855">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-855">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-856">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-856">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-857">已进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-857">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="aacd5-858">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-858">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-859">此流先前被用作客户端尝试进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-859">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="aacd5-860">不能尝试将该流作为服务器重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-860">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="aacd5-861">不支持 windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-861">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-862">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-862">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="aacd5-863">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-863">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="aacd5-864">带有扩展保护的集成 Windows 身份验证</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-864">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginRead (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="aacd5-865">一个 <see cref="T:System.Byte" /> 数组，该数组接收从流中读取的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-865">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="aacd5-866">
            <c>缓冲区</c>中从零开始的位置，从此处开始存储从此流中读取的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-866">The zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="aacd5-867">要从流中读取的最大字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-867">The maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="aacd5-868">
            <see cref="T:System.AsyncCallback" /> 委托，该委托引用读操作完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-868">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="aacd5-869">用户定义的对象，其中包含读操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-869">A user-defined object containing information about the read operation.</span>
          </span>
          <span data-ttu-id="aacd5-870">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-870">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-871">开始一个异步读操作，此操作读取流中的数据并将其存储在指定的数组中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-871">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-872">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-872">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-873">如果启用了加密、 签名或加密和签名，读取的操作从基础流中读取数据、 检查数据的完整性和对其进行解密。</span><span class="sxs-lookup"><span data-stu-id="aacd5-873">If encryption, signing, or encryption and signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and decrypts it.</span></span> <span data-ttu-id="aacd5-874">如果没有安全服务，如数据加密或签名正在使用，此方法将启动对基础流的异步读取的操作。</span><span class="sxs-lookup"><span data-stu-id="aacd5-874">If no security services such as data encryption or signing are in use, this method starts an asynchronous read operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="aacd5-875">此方法是异步的不会阻止该操作完成时。</span><span class="sxs-lookup"><span data-stu-id="aacd5-875">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="aacd5-876">若要阻止在操作完成之前，请使用<xref:System.Net.Security.NegotiateStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-876">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="aacd5-877">异步读取的操作必须通过调用已完成<xref:System.Net.Security.NegotiateStream.EndRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-877">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndRead%2A> method.</span></span> <span data-ttu-id="aacd5-878">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="aacd5-878">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="aacd5-879">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="aacd5-879">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="aacd5-880"><xref:System.Net.Security.NegotiateStream>类不支持多个读操作。</span><span class="sxs-lookup"><span data-stu-id="aacd5-880">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous read operations.</span></span> <span data-ttu-id="aacd5-881">如果你尝试开始读取的操作，而另一个读取操作已在执行对同一个流，<xref:System.NotSupportedException>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="aacd5-881">If you attempt to start a read operation while another read operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="aacd5-882">不能调用此方法，直到您已成功通过身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-882">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="aacd5-883">若要进行身份验证，调用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-883">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-884">下面的代码示例演示如何启动一个异步读的操作。</span><span class="sxs-lookup"><span data-stu-id="aacd5-884">The following code example demonstrates starting an asynchronous read operation.</span></span> <span data-ttu-id="aacd5-885">此代码示例是为提供一个更大示例的一部分<xref:System.Net.Security.NegotiateStream>类。</span><span class="sxs-lookup"><span data-stu-id="aacd5-885">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#1)]
 [!code-csharp[NclNegoAsyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-886">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-886">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="aacd5-887">
            <paramref name="offset" /> 小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-887">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="aacd5-888">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-888">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-889">
            <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-889">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="aacd5-890">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-890">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-891">
            <paramref name="offset" /> 加上 <paramref name="count" /> 大于 <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-891">
              <paramref name="offset" /> plus <paramref name="count" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="aacd5-892">读操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-892">The read operation failed.</span>
          </span>
          <span data-ttu-id="aacd5-893">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-893">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-894">使用了加密服务，但未能解密该数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-894">Encryption is in use, but the data could not be decrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="aacd5-895">已存在一个正在执行的读取操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-895">There is already a read operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-896">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-896">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-897">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-897">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginWrite (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="aacd5-898">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-898">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="aacd5-899">
            <c>缓冲区</c>中从零开始的位置，从此处开始读取要写入流中的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-899">The zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="aacd5-900">
            <see cref="T:System.Int32" /> 值，该值指定要从<c>缓冲区</c>中读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-900">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="aacd5-901">
            <see cref="T:System.AsyncCallback" /> 委托，它引用写操作完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-901">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="aacd5-902">一个用户定义对象，其中包含写操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-902">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="aacd5-903">当操作完成后，此对象会被传递给 asyncCallback<c></c> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-903">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-904">开始一个异步写操作，此操作将指定缓冲区中的 <see cref="T:System.Byte" /> 写入到流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-904">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-905">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-905">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-906">如果启用了加密、 签名或加密和签名，此方法从缓冲区中读取数据加密，符号，或加密和签名，并将其使用的基础流传输。</span><span class="sxs-lookup"><span data-stu-id="aacd5-906">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="aacd5-907">如果没有安全服务，如数据加密或签名正在使用，此方法将启动对基础流的异步写操作。</span><span class="sxs-lookup"><span data-stu-id="aacd5-907">If no security services such as data encryption or signing are in use, this method starts an asynchronous write operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="aacd5-908">此方法是异步的不会阻止该操作完成时。</span><span class="sxs-lookup"><span data-stu-id="aacd5-908">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="aacd5-909">若要阻止在操作完成之前，请使用<xref:System.Net.Security.NegotiateStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-909">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="aacd5-910">异步读取的操作必须通过调用已完成<xref:System.Net.Security.NegotiateStream.EndWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-910">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndWrite%2A> method.</span></span> <span data-ttu-id="aacd5-911">通常情况下，通过调用该方法`asyncCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="aacd5-911">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="aacd5-912">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="aacd5-912">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="aacd5-913"><xref:System.Net.Security.NegotiateStream>类不支持多个同时进行写入操作。</span><span class="sxs-lookup"><span data-stu-id="aacd5-913">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="aacd5-914">如果你尝试开始写入操作，而另一个写入操作已在执行对同一个流，<xref:System.NotSupportedException>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="aacd5-914">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="aacd5-915">不能调用此方法，直到您已成功通过身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-915">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="aacd5-916">若要进行身份验证，调用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-916">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-917">下面的代码示例演示如何开始异步写操作。</span><span class="sxs-lookup"><span data-stu-id="aacd5-917">The following code example demonstrates beginning an asynchronous write operation.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#3)]
 [!code-csharp[NclNegoAsyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#3)]  
  
 <span data-ttu-id="aacd5-918">在操作完成时，被调用以下方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-918">The following method is called when the operation completes.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-919">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-919">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="aacd5-920">
            <paramref name="offset is less than 0" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-920">
              <paramref name="offset is less than 0" />.</span>
          </span>
          <span data-ttu-id="aacd5-921">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-921">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-922">
            <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-922">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="aacd5-923">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-923">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-924">
            <paramref name="offset" /> 加上计数大于 <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-924">
              <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="aacd5-925">写操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-925">The write operation failed.</span>
          </span>
          <span data-ttu-id="aacd5-926">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-926">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-927">正在使用加密，但未能加密该数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-927">Encryption is in use, but the data could not be encrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="aacd5-928">已存在一个正在执行的写操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-928">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-929">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-929">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-930">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-930">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Security.NegotiateStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-931">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-931">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aacd5-932">如果已进行身份验证且基础流为可读，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-932">
              <see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-933">如果身份验证成功，此属性返回通过调用返回的值<xref:System.IO.Stream.CanRead%2A>对基础流的属性。</span><span class="sxs-lookup"><span data-stu-id="aacd5-933">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanRead%2A> property on the underlying stream.</span></span> <span data-ttu-id="aacd5-934">当你创建的实例时指定基础流<xref:System.Net.Security.NegotiateStream>类。</span><span class="sxs-lookup"><span data-stu-id="aacd5-934">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-935">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-935">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Security.NegotiateStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-936">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可查找。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-936">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aacd5-937">此属性始终返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-937">This property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-938">不应尝试设置的位置<xref:System.Net.Security.NegotiateStream>对象或其基础流。</span><span class="sxs-lookup"><span data-stu-id="aacd5-938">You should not attempt to set the position of the <xref:System.Net.Security.NegotiateStream> object or its underlying stream.</span></span> <span data-ttu-id="aacd5-939">当你创建的实例时指定基础流<xref:System.Net.Security.NegotiateStream>类。</span><span class="sxs-lookup"><span data-stu-id="aacd5-939">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-940">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-940">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Security.NegotiateStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-941">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否支持超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-941">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aacd5-942">如果基础流支持超时，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-942">
              <see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-943">此属性返回通过调用返回的值<xref:System.IO.Stream.CanTimeout%2A>对基础流的属性。</span><span class="sxs-lookup"><span data-stu-id="aacd5-943">This property returns the value returned by invoking the <xref:System.IO.Stream.CanTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="aacd5-944">当你创建的实例时指定基础流<xref:System.Net.Security.NegotiateStream>类。</span><span class="sxs-lookup"><span data-stu-id="aacd5-944">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-945">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-945">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Security.NegotiateStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-946">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-946">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aacd5-947">如果已进行身份验证且基础流可写，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-947">
              <see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-948">如果身份验证成功，此属性返回通过调用返回的值<xref:System.IO.Stream.CanWrite%2A>对基础流的属性。</span><span class="sxs-lookup"><span data-stu-id="aacd5-948">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanWrite%2A> property on the underlying stream.</span></span> <span data-ttu-id="aacd5-949">当你创建的实例时指定基础流<xref:System.Net.Security.NegotiateStream>类。</span><span class="sxs-lookup"><span data-stu-id="aacd5-949">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-950">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-950">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="negotiateStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="aacd5-951">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-951">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-952">释放由 <see cref="T:System.Net.Security.NegotiateStream" /> 占用的非托管资源，还可以另外再释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-952">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.NegotiateStream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-953">调用此方法由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-953">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="aacd5-954">`Dispose()` 调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="aacd5-954">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="aacd5-955"><xref:System.Object.Finalize%2A> 调用`Dispose`与`disposing`设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="aacd5-955"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="aacd5-956">当`disposing`参数为 true 时，此方法释放任何托管对象所持有的所有资源，此<xref:System.Net.Security.NegotiateStream>的引用。</span><span class="sxs-lookup"><span data-stu-id="aacd5-956">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.NegotiateStream> references.</span></span> <span data-ttu-id="aacd5-957">此方法调用每个引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-957">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="aacd5-958">
              <see langword="Dispose" /> 可以由其他对象多次调用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="aacd5-958">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="aacd5-959">重写时<see langword="Dispose(Boolean)" />小心不要引用已经释放的早期调用中的对象<see langword="Dispose" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="aacd5-959">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="aacd5-960">有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="aacd5-960">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="aacd5-961">有关详细信息<see langword="Dispose" />并<see cref="M:System.Object.Finalize" />，请参阅[清理了非托管资源](~/docs/standard/garbage-collection/unmanaged.md)并[重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span>
            <span class="sxs-lookup">
              <span data-stu-id="aacd5-961">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsClient : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsClient : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsClient asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="aacd5-962">调用 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-962">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-963">结束通过调用 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> 而启动的、正处于挂起状态的异步客户端身份验证操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-963">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-964">如果该操作未完成，此方法阻止，直至它。</span><span class="sxs-lookup"><span data-stu-id="aacd5-964">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="aacd5-965">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-965">When the authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="aacd5-966">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-966">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="aacd5-967">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-967">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-968">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-968">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="aacd5-969">若要以同步方式执行此操作，使用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-969">To perform this operation synchronously, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-970">
            <paramref name="asyncResult" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-970">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="aacd5-971">
            <paramref name="asyncResult" /> 并不是通过对 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> 的调用创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-971">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-972">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-972">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-973">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-973">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-974">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-974">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-975">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-975">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-976">没有需要完成的处于挂起状态的客户端身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-976">There is no pending client authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsServer : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsServer : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsServer asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="aacd5-977">调用 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-977">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-978">结束通过调用 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> 而启动的、正处于挂起状态的异步客户端身份验证操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-978">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-979">如果该操作未完成，此方法阻止，直至它。</span><span class="sxs-lookup"><span data-stu-id="aacd5-979">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="aacd5-980">当身份验证成功时，必须检查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>并<xref:System.Net.Security.NegotiateStream.IsSigned%2A>属性以确定由哪些安全服务<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-980">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="aacd5-981">检查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-981">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="aacd5-982">如果身份验证失败，则收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-982">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="aacd5-983">在这种情况下，您可以重试不同的凭据进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-983">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="aacd5-984">若要以同步方式执行此操作，请使用<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-984">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-985">
            <paramref name="asyncResult" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-985">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="aacd5-986">
            <paramref name="asyncResult" /> 并不是通过对 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> 的调用创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-986">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="aacd5-987">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-987">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-988">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-988">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="aacd5-989">身份验证失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-989">The authentication failed.</span>
          </span>
          <span data-ttu-id="aacd5-990">可以使用此对象尝试重新进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-990">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-991">没有要完成的处于挂起状态的身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-991">There is no pending authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="negotiateStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="aacd5-992">调用 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-992">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-993">结束通过调用 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而启动的异步读操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-993">Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-994">
            <see cref="T:System.Int32" /> 值，该值指定从基础流中读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-994">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-995">如果该操作未完成，此方法阻止，直至它。</span><span class="sxs-lookup"><span data-stu-id="aacd5-995">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="aacd5-996">若要以同步方式执行此操作，请使用<xref:System.Net.Security.NegotiateStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-996">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="aacd5-997">不能调用此方法，直到您已成功通过身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-997">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="aacd5-998">若要进行身份验证，调用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-998">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-999">下面的代码示例演示结束异步读取操作。</span><span class="sxs-lookup"><span data-stu-id="aacd5-999">The following code example demonstrates ending an asynchronous read operation.</span></span> <span data-ttu-id="aacd5-1000">有关演示如何启动该操作的示例，请参阅<xref:System.Net.Security.NegotiateStream.BeginRead%2A>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1000">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#3)]
 [!code-csharp[NclNegoAsyncServer#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-1001">
            <paramref name="asyncResult" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1001">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="aacd5-1002">asyncResult 并不是通过调用 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1002">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-1003">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1003">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="aacd5-1004">读操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1004">The read operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="negotiateStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="aacd5-1005">调用 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 后返回的 <see cref="T:System.IAsyncResult" /> 实例</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1005">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-1006">结束通过调用 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而启动的异步写操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1006">Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-1007">如果该操作未完成，此方法阻止，直至它。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1007">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="aacd5-1008">不能调用此方法，直到您已成功通过身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1008">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="aacd5-1009">若要进行身份验证，调用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1009">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="aacd5-1010">若要以同步方式执行此操作，请使用<xref:System.Net.Security.NegotiateStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1010">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-1011">下面的代码示例演示如何调用以完成异步写操作的方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1011">The following code example demonstrates a method that is called to complete the asynchronous write operation.</span></span> <span data-ttu-id="aacd5-1012">有关演示如何启动该操作的示例，请参阅<xref:System.Net.Security.NegotiateStream.BeginWrite%2A>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1012">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-1013">
            <paramref name="asyncResult" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1013">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="aacd5-1014">asyncResult 并不是通过调用 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1014">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-1015">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1015">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="aacd5-1016">写操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1016">The write operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="negotiateStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-1017">导致所有缓冲数据都要写入基础设备。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1017">Causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-1018">此方法将调用<xref:System.IO.Stream.Flush%2A>对基础流。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1018">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-1019">下面的代码示例演示如何刷新流。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1019">The following code example demonstrates flushing the stream.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel" Usage="System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-1020">获取一个值，该值指示服务器使用客户端凭据的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1020">Gets a value that indicates how the server can use the client's credentials.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aacd5-1021">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1021">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-1022">您必须已成功进行身份验证之前调用此方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1022">You must successfully authenticate before calling this method.</span></span> <span data-ttu-id="aacd5-1023">通过调用一种请求身份验证时，客户端指定的模拟级别<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1023">Clients specify the impersonation level when they request authentication by calling one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="aacd5-1024">如果未指定进行身份验证<xref:System.Security.Principal.TokenImpersonationLevel>，<xref:System.Security.Principal.TokenImpersonationLevel.Identification>使用。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1024">If you authenticate without specifying a <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-1025">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1025">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-1026">身份验证失败或没有进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1026">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-1027">获取一个 <see cref="T:System.Boolean" /> 值，该值指示身份验证是否成功。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1027">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aacd5-1028">如果身份验证成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1028">
              <see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-1029">客户端进行身份验证通过调用<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1029">Clients authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="aacd5-1030">通过调用的服务器进行身份验证<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1030">Servers authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-1031">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1031">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEncrypted : bool" Usage="System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-1032">获取一个 <see cref="T:System.Boolean" /> 值，该值指示此 <see cref="T:System.Net.Security.NegotiateStream" /> 是否使用数据加密。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1032">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aacd5-1033">如果在通过网络传输数据前将其加密，并在数据到达远程终结点后将其解密，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1033">
              <see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-1034">加密来帮助保护隐私的数据;也就是说，它有助于确保，相互传输数据时它不能解密由第三方。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1034">Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-1035">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1035">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Security.ProtectionLevel" />
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMutuallyAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-1036">获取一个 <see cref="T:System.Boolean" /> 值，该值指示服务器和客户端是否均已进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1036">Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aacd5-1037">如果服务器已进行身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1037">
              <see langword="true" /> if the server has been authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-1038">当客户端想要提供身份验证凭据的服务器时，客户端指定相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1038">Mutual authentication is specified by the client when the client wants the server to provide credentials for authentication.</span></span> <span data-ttu-id="aacd5-1039">默认情况下，客户端请求相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1039">By default, clients request mutual authentication.</span></span>  
  
 <span data-ttu-id="aacd5-1040">协商协议选择 NTLM 或 Kerberos，具体取决于客户端和服务器支持的安全协议。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1040">The Negotiate protocol selects either NTLM or Kerberos depending on the security protocols supported by the client and server.</span></span> <span data-ttu-id="aacd5-1041">NTLM 不支持相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1041">NTLM does not support mutual authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-1042">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1042">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServer : bool" Usage="System.Net.Security.NegotiateStream.IsServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-1043">获取一个 <see cref="T:System.Boolean" /> 值，该值指示此 <see cref="T:System.Net.Security.NegotiateStream" /> 使用的连接的本地端是否作为服务器进行了身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1043">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aacd5-1044">如果本地终结点作为经过身份验证的连接的服务器端成功地经过了身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1044">
              <see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-1045">如果身份验证失败或未出现，此属性返回`false`。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1045">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="aacd5-1046">若要与服务器进行身份验证，调用<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1046">To authenticate as the server, call the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-1047">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1047">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.Net.Security.NegotiateStream.IsSigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-1048">获取一个 <see cref="T:System.Boolean" /> 值，该值指示使用此流发送的数据是否进行签名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1048">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aacd5-1049">如果在传输数据前对其进行签名，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1049">
              <see langword="true" /> if the data is signed before being transmitted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-1050">数据签名可帮助保护的数据; 完整性也就是说，它可帮助确定是否将数据已被篡改在传输过程中的收件人。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1050">Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-1051">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1051">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Security.NegotiateStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-1052">获取基础流的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1052">Gets the length of the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aacd5-1053">
            <see cref="T:System.Int64" />，指定基础流的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1053">A <see cref="T:System.Int64" /> that specifies the length of the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-1054">此属性返回通过调用返回的值<xref:System.IO.Stream.Length%2A>对基础流的属性。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1054">This property returns the value returned by invoking the <xref:System.IO.Stream.Length%2A> property on the underlying stream.</span></span> <span data-ttu-id="aacd5-1055">如果基础流不可查找，此属性通常会引发异常。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1055">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="aacd5-1056">基础流的运行时类型确定引发的异常的运行时的类型。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1056">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-1057">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1057">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="aacd5-1058">当基础流为 <see cref="T:System.Net.Sockets.NetworkStream" /> 时，不支持获取此属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1058">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Security.NegotiateStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-1059">获取或设置基础流中的当前位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1059">Gets or sets the current position in the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aacd5-1060">
            <see cref="T:System.Int64" />，指定基础流中的当前位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1060">A <see cref="T:System.Int64" /> that specifies the current position in the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-1061">此属性返回通过调用返回的值<xref:System.IO.Stream.Position%2A>对基础流的属性。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1061">This property returns the value returned by invoking the <xref:System.IO.Stream.Position%2A> property on the underlying stream.</span></span> <span data-ttu-id="aacd5-1062">如果基础流不可查找，此属性通常会引发异常。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1062">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="aacd5-1063">基础流的运行时类型确定引发的异常的运行时的类型。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1063">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="aacd5-1064">不支持设置此属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1064">Setting this property is not supported.</span>
          </span>
          <span data-ttu-id="aacd5-1065">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1065">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-1066">当基础流为 <see cref="T:System.Net.Sockets.NetworkStream" /> 时，不支持获取此属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1066">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="negotiateStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="aacd5-1067">一个 <see cref="T:System.Byte" /> 数组，该数组接收从流中读取的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1067">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="aacd5-1068">
            <see cref="T:System.Int32" />，其中包含<c>缓冲区</c>中从零开始的位置，从此处开始存储从流中读取的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1068">A <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="aacd5-1069">
            <see cref="T:System.Int32" />，包含要从流中读取的最大字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1069">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-1070">读取此流中的数据并将其存储在指定的数组中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1070">Reads data from this stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-1071">
            <see cref="T:System.Int32" /> 值，该值指定从基础流中读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1071">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
          <span data-ttu-id="aacd5-1072">如果再也没有要读取的数据，将返回 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1072">When there is no more data to be read, returns 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-1073">该方法读取的最多`count`个字节从当前流，并将它们存储在`buffer`开始`offset`。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1073">The method reads a maximum of `count` bytes from the current stream and stores them in `buffer` beginning at `offset`.</span></span>  
  
 <span data-ttu-id="aacd5-1074">不能调用此方法，直到您已成功通过身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1074">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="aacd5-1075">若要进行身份验证，调用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1075">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="aacd5-1076">若要以异步方式执行此操作，请使用<xref:System.Net.Security.NegotiateStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1076">To perform this operation asynchronously, use the <xref:System.Net.Security.NegotiateStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-1077">下面的代码示例演示如何读取从<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1077">The following code example demonstrates reading from a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncServer/CPP/NclNegoSyncServer.cpp#1)]
 [!code-csharp[NclNegoSyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="aacd5-1078">读操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1078">The read operation failed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-1079">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1079">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="aacd5-1080">已在进行 <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> 操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1080">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-1081">获取或设置读操作阻止等待数据的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1081">Gets or sets the amount of time a read operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aacd5-1082">
            <see cref="T:System.Int32" />，指定读操作失败前经过的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1082">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a read operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-1083">此属性返回通过调用返回的值<xref:System.IO.Stream.ReadTimeout%2A>对基础流的属性。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1083">This property returns the value returned by invoking the <xref:System.IO.Stream.ReadTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="aacd5-1084">当设置此属性，<xref:System.IO.Stream.ReadTimeout%2A>对基础流的值设置为指定的值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1084">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="aacd5-1085">基础流是否<xref:System.Net.Sockets.NetworkStream>，<xref:System.Net.Security.NegotiateStream.ReadTimeout%2A>以毫秒为单位并将设置为<xref:System.Threading.Timeout.Infinite>默认情况下，因此，它读取操作就不会超时。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1085">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-1086">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1086">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteIdentity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity RemoteIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity RemoteIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteIdentity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ RemoteIdentity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteIdentity : System.Security.Principal.IIdentity" Usage="System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-1087">获取有关共享此已验证身份的流的远程方的身份信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1087">Gets information about the identity of the remote party sharing this authenticated stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aacd5-1088">
            <see cref="T:System.Security.Principal.IIdentity" /> 对象，介绍远程端点的标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1088">An <see cref="T:System.Security.Principal.IIdentity" /> object that describes the identity of the remote endpoint.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-1089">当客户端访问，此属性返回<xref:System.Security.Principal.GenericIdentity>包含服务的服务器和使用的身份验证协议的主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1089">When accessed by the client, this property returns a <xref:System.Security.Principal.GenericIdentity> containing the Service Principal Name (SPN) of the server and the authentication protocol used.</span></span> <span data-ttu-id="aacd5-1090">如果访问服务器，该属性返回<xref:System.Security.Principal.WindowsIdentity>描述客户端。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1090">When accessed by the server, this property returns a <xref:System.Security.Principal.WindowsIdentity> that describes the client.</span></span> <span data-ttu-id="aacd5-1091">如果<xref:System.Security.Principal.WindowsIdentity>是不可用，客户端信息返回到服务器中<xref:System.Security.Principal.GenericIdentity>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1091">If the <xref:System.Security.Principal.WindowsIdentity> is not available, client information is returned to the server in a <xref:System.Security.Principal.GenericIdentity>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-1092">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1092">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#2)]
 [!code-csharp[NclNegoAsyncServer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-1093">身份验证失败或没有进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1093">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="negotiateStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="aacd5-1094">忽略此值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1094">This value is ignored.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="aacd5-1095">忽略此值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1095">This value is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-1096">引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1096">Throws <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aacd5-1097">总是引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1097">Always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-1098">请勿调用此方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1098">Do not call this method.</span></span> <span data-ttu-id="aacd5-1099">它被继承，但不是受<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1099">It is inherited, but is not supported by <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="aacd5-1100">
            <see cref="T:System.Net.Security.NegotiateStream" /> 上不支持查找。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1100">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="negotiateStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="aacd5-1101">
            <see cref="T:System.Int64" /> 值，该值指定流的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1101">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-1102">设置基础流的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1102">Sets the length of the underlying stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="negotiateStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="aacd5-1103">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1103">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="aacd5-1104">
            <see cref="T:System.Int32" />，包含<c>缓冲区</c>中的从零开始的位置，将从该位置开始读取要写入到流中的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1104">An <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="aacd5-1105">
            <see cref="T:System.Int32" />，其中包含要从<c>缓冲区</c>中读取的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1105">A <see cref="T:System.Int32" /> containing the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aacd5-1106">使用指定的缓冲区和偏移将指定数目的 <see cref="T:System.Byte" /> 写入基础流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1106">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-1107">如果启用了加密、 签名或加密和签名，此方法从缓冲区中读取数据加密，符号，或加密和签名，并将其使用的基础流传输。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1107">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="aacd5-1108">如果没有安全服务，如数据加密或签名正在使用，此方法将调用<xref:System.IO.Stream.Write%2A>对基础流。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1108">If no security services such as data encryption or signing are in use, this method invokes <xref:System.IO.Stream.Write%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="aacd5-1109">此方法会阻止写入操作完成时。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1109">This method blocks while the write operation completes.</span></span> <span data-ttu-id="aacd5-1110">若要阻止阻塞该操作完成时，使用<xref:System.Net.Security.NegotiateStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1110">To prevent blocking while the operation completes, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
 <span data-ttu-id="aacd5-1111">不能调用此方法，直到您已成功通过身份验证。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1111">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="aacd5-1112">若要进行身份验证，调用之一<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1112">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="aacd5-1113"><xref:System.Net.Security.NegotiateStream>类不支持多个同时进行写入操作。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1113">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="aacd5-1114">如果你尝试开始写入操作，而另一个写入操作已在执行对同一个流，<xref:System.NotSupportedException>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1114">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-1115">下面的代码示例演示如何写入<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1115">The following code example demonstrates writing to a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aacd5-1116">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1116">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="aacd5-1117">
            <paramref name="offset is less than 0" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1117">
              <paramref name="offset is less than 0" />.</span>
          </span>
          <span data-ttu-id="aacd5-1118">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1118">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-1119">
            <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1119">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="aacd5-1120">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1120">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-1121">
            <paramref name="offset" /> 加上计数大于 <paramref name="buffer" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1121">
              <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="aacd5-1122">写操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1122">The write operation failed.</span>
          </span>
          <span data-ttu-id="aacd5-1123">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1123">\- or -</span>
          </span>
          <span data-ttu-id="aacd5-1124">正在使用加密，但未能加密该数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1124">Encryption is in use, but the data could not be encrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="aacd5-1125">已存在一个正在执行的写操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1125">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aacd5-1126">此对象已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1126">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aacd5-1127">未进行身份验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1127">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aacd5-1128">获取或设置写操作阻止等待数据的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1128">Gets or sets the amount of time a write operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aacd5-1129">
            <see cref="T:System.Int32" />，指定写操作失败前经过的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aacd5-1129">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a write operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aacd5-1130">此属性返回通过调用返回的值<xref:System.IO.Stream.WriteTimeout%2A>对基础流的属性。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1130">This property returns the value returned by invoking the <xref:System.IO.Stream.WriteTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="aacd5-1131">对于集合运算指定的值设置<xref:System.IO.Stream.WriteTimeout%2A>基础流上的值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1131">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="aacd5-1132">基础流是否<xref:System.Net.Sockets.NetworkStream>，<xref:System.Net.Security.NegotiateStream.WriteTimeout%2A>以毫秒为单位并将设置为<xref:System.Threading.Timeout.Infinite>默认情况下，这样写操作就不会超时。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1132">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aacd5-1133">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="aacd5-1133">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>