<Type Name="AuthenticatedStream" FullName="System.Net.Security.AuthenticatedStream">
  <TypeSignature Language="C#" Value="public abstract class AuthenticatedStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AuthenticatedStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AuthenticatedStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticatedStream abstract : System::IO::Stream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fc8e1-101">提供通过流传递凭据的方法，以及为客户端/服务器应用程序请求或执行身份验证的方法。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-101">Provides methods for passing credentials across a stream and requesting or performing authentication for client-server applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc8e1-102">此抽象类提供方法和属性所共有的经过身份验证流。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-102">This abstract class provides methods and properties that are common to authenticated streams.</span></span>  
  
 <span data-ttu-id="fc8e1-103">经过身份验证的流可以提供签名的数据的身份验证和加密服务，可帮助维护的完整性和保密性传输使用的数据<xref:System.Net.Security.AuthenticatedStream.InnerStream%2A>。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-103">Authenticated streams can provide authentication, data signing, and encryption services that can help maintain the integrity and confidentiality of data transmitted using the <xref:System.Net.Security.AuthenticatedStream.InnerStream%2A>.</span></span>  
  
 <span data-ttu-id="fc8e1-104">由派生自的类实现的安全协议<xref:System.Net.Security.AuthenticatedStream>安全性以及客户端和服务器上受支持的协议将确定应用程序可以使用的安全功能。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-104">The security protocol implemented by a class that derives from <xref:System.Net.Security.AuthenticatedStream> together with the security protocols supported on the client and server will determine the security features that are available to an application.</span></span> <span data-ttu-id="fc8e1-105"><xref:System.Net.Security.NegotiateStream>和<xref:System.Net.Security.SslStream>类都继承自<xref:System.Net.Security.AuthenticatedStream>和分别实现 Negotiate 和安全套接字层安全协议。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-105">The <xref:System.Net.Security.NegotiateStream> and <xref:System.Net.Security.SslStream> classes inherit from <xref:System.Net.Security.AuthenticatedStream> and implement the Negotiate and Secure Sockets Layer security protocols, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc8e1-106">下面的代码示例演示如何显示已经过身份验证流的属性。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-106">The following code example demonstrates displaying the properties of an authenticated stream.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#6)]
 [!code-csharp[NclNegoAsyncClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#6)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="fc8e1-107">必须在派生类中重写以下成员： <see cref="P:System.Net.Security.AuthenticatedStream.IsAuthenticated" />， <see cref="P:System.Net.Security.AuthenticatedStream.IsEncrypted" />， <see cref="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated" />， <see cref="P:System.Net.Security.AuthenticatedStream.IsServer" />，和<see cref="P:System.Net.Security.AuthenticatedStream.IsSigned" />。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-107">The following members must be overridden in a derived class: <see cref="P:System.Net.Security.AuthenticatedStream.IsAuthenticated" />, <see cref="P:System.Net.Security.AuthenticatedStream.IsEncrypted" />, <see cref="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated" />, <see cref="P:System.Net.Security.AuthenticatedStream.IsServer" />, and <see cref="P:System.Net.Security.AuthenticatedStream.IsSigned" />.</span></span></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AuthenticatedStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AuthenticatedStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="fc8e1-108">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.AuthenticatedStream" /> 使用此对象发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-108">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.AuthenticatedStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="fc8e1-109"><see cref="T:System.Boolean" />，指示关闭此 <see cref="T:System.Net.Security.AuthenticatedStream" /> 对象时是否同时关闭 <c>innerStream</c>。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-109">A <see cref="T:System.Boolean" /> that indicates whether closing this <see cref="T:System.Net.Security.AuthenticatedStream" /> object also closes <c>innerStream</c>.</span></span></param>
        <summary><span data-ttu-id="fc8e1-110">初始化 <see cref="T:System.Net.Security.AuthenticatedStream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-110">Initializes a new instance of the <see cref="T:System.Net.Security.AuthenticatedStream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc8e1-111">当指定`true`为`leaveStreamOpen`参数，关闭<xref:System.Net.Security.AuthenticatedStream>不起任何作用`innerStream`流。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-111">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.AuthenticatedStream> has no effect on the `innerStream` stream.</span></span>  
  
 <span data-ttu-id="fc8e1-112">此构造函数供经过身份验证流的实施者，并可以只能由派生自的类调用<xref:System.Net.Security.AuthenticatedStream>。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-112">This constructor is provided for implementers of authenticated streams, and can be called only by classes that are derived from <xref:System.Net.Security.AuthenticatedStream>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc8e1-113"><paramref name="innerStream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-113"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="fc8e1-114">或</span><span class="sxs-lookup"><span data-stu-id="fc8e1-114">-or-</span></span>  
  
 <span data-ttu-id="fc8e1-115"><paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-115"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="fc8e1-116">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-116"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="fc8e1-117">释放由 <see cref="T:System.Net.Security.AuthenticatedStream" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-117">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.AuthenticatedStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc8e1-118">此方法称为由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-118">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="fc8e1-119">`Dispose()` 调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-119">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="fc8e1-120"><xref:System.Object.Finalize%2A> 调用`Dispose`与`disposing`设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-120"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="fc8e1-121">当`disposing`参数为 true 时，此方法释放由任何托管对象持有的全部资源此<xref:System.Net.Security.AuthenticatedStream>引用。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-121">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.AuthenticatedStream> references.</span></span> <span data-ttu-id="fc8e1-122">此方法调用每个引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-122">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="fc8e1-123"><see langword="Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-123"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="fc8e1-124">在重写<see langword="Dispose(Boolean)" />请注意不要引用已释放的以前调用中的对象<see langword="Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-124">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="fc8e1-125">有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-125">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="fc8e1-126">有关详细信息<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[重写 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-126">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="InnerStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream InnerStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InnerStream" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.AuthenticatedStream.InnerStream" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InnerStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::IO::Stream ^ InnerStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc8e1-127">获取此 <see cref="T:System.Net.Security.AuthenticatedStream" /> 用来发送和接收数据的流。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-127">Gets the stream used by this <see cref="T:System.Net.Security.AuthenticatedStream" /> for sending and receiving data.</span></span></summary>
        <value><span data-ttu-id="fc8e1-128"><see cref="T:System.IO.Stream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-128">A <see cref="T:System.IO.Stream" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc8e1-129">继承自的类<xref:System.Net.Security.AuthenticatedStream>可以使用此属性来访问传递到的流<xref:System.Net.Security.AuthenticatedStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29>。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-129">Classes that inherit from <xref:System.Net.Security.AuthenticatedStream> can use this property to access the stream passed to the <xref:System.Net.Security.AuthenticatedStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public abstract bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.AuthenticatedStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc8e1-130">获取一个 <see cref="T:System.Boolean" /> 值，该值指示身份验证是否成功。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-130">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span></span></summary>
        <value>
          <span data-ttu-id="fc8e1-131">如果身份验证成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-131"><see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc8e1-132">调用来执行身份验证的方法继承的类中定义<xref:System.Net.Security.AuthenticatedStream>。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-132">The methods called to perform authentication are defined in the classes that inherit from <xref:System.Net.Security.AuthenticatedStream>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc8e1-133">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-133">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#6)]
 [!code-csharp[NclNegoAsyncClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public abstract bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.AuthenticatedStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsEncrypted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc8e1-134">获取一个 <see cref="T:System.Boolean" /> 值，该值指示使用此 <see cref="T:System.Net.Security.AuthenticatedStream" /> 发送的数据是否加密。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-134">Gets a <see cref="T:System.Boolean" /> value that indicates whether data sent using this <see cref="T:System.Net.Security.AuthenticatedStream" /> is encrypted.</span></span></summary>
        <value>
          <span data-ttu-id="fc8e1-135">如果在通过网络传输数据前将其加密，并在数据到达远程终结点后将其解密，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-135"><see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc8e1-136">加密有助于保护的数据; 的隐私也就是说，它可帮助确保，在传输过程中的数据时，它不能破译由第三方。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-136">Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit, it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc8e1-137">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-137">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#6)]
 [!code-csharp[NclNegoAsyncClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public abstract bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc8e1-138">获取一个 <see cref="T:System.Boolean" /> 值，该值指示服务器和客户端是否均已进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-138">Gets a <see cref="T:System.Boolean" /> value that indicates whether both server and client have been authenticated.</span></span></summary>
        <value>
          <span data-ttu-id="fc8e1-139">如果客户端和服务器都已经过身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-139"><see langword="true" /> if the client and server have been authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc8e1-140">并非所有的安全协议支持相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-140">Not all security protocols support mutual authentication.</span></span> <span data-ttu-id="fc8e1-141">若要确定是否继承自的类中实现的安全协议支持相互身份验证<xref:System.Net.Security.AuthenticatedStream>，检查类文档。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-141">To determine whether mutual authentication is supported by the security protocol implemented in a class that inherits from <xref:System.Net.Security.AuthenticatedStream>, check the class documentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc8e1-142">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-142">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#6)]
 [!code-csharp[NclNegoAsyncClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public abstract bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.AuthenticatedStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsServer { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc8e1-143">获取一个 <see cref="T:System.Boolean" /> 值，该值指示连接的本地端是否已作为服务器经过了身份验证。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-143">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection was authenticated as the server.</span></span></summary>
        <value>
          <span data-ttu-id="fc8e1-144">如果本地终结点作为经过身份验证的客户端/服务器连接的服务器端进行了身份验证，则为 <see langword="true" />；如果本地终结点作为客户端进行了身份验证，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-144"><see langword="true" /> if the local endpoint was authenticated as the server side of a client-server authenticated connection; <see langword="false" /> if the local endpoint was authenticated as the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc8e1-145">大多数用于客户端服务器身份验证的安全协议定义特定的行为和需求提供基于您在客户端或服务器的身份验证的凭据。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-145">Most security protocols used for client-server authentication define specific behavior and requirements for supplying credentials for authentication based on whether you are the client or the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc8e1-146">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-146">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#6)]
 [!code-csharp[NclNegoAsyncClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public abstract bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.AuthenticatedStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsSigned { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc8e1-147">获取一个 <see cref="T:System.Boolean" /> 值，该值指示使用此流发送的数据是否进行签名。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-147">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span></span></summary>
        <value>
          <span data-ttu-id="fc8e1-148">如果在传输数据前对其进行签名，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-148"><see langword="true" /> if the data is signed before being transmitted; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc8e1-149">数据签名有助于保护的数据中; 完整性也就是说，它可帮助收件人确定是否数据已被篡改在传输过程中。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-149">Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc8e1-150">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-150">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#6)]
 [!code-csharp[NclNegoAsyncClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaveInnerStreamOpen">
      <MemberSignature Language="C#" Value="public bool LeaveInnerStreamOpen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LeaveInnerStreamOpen" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeaveInnerStreamOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LeaveInnerStreamOpen { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc8e1-151">获取此 <see cref="T:System.Net.Security.AuthenticatedStream" /> 用来发送和接收数据的流是否保持打开。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-151">Gets whether the stream used by this <see cref="T:System.Net.Security.AuthenticatedStream" /> for sending and receiving data has been left open.</span></span></summary>
        <value>
          <span data-ttu-id="fc8e1-152">如果内部流一直保持打开，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-152"><see langword="true" /> if the inner stream has been left open; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc8e1-153">当设置为`true`，关闭此类的实例后，传递到此类的构造函数的流将不会关闭。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-153">When set to `true`, the stream passed to the constructor of this class will not be closed after the instance of this class is closed.</span></span> <span data-ttu-id="fc8e1-154">当设置为`false`，关闭此类的实例也将关闭基础的传输流。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-154">When set to `false`, closing the instance of this class will also close the underlined transport stream.</span></span> <span data-ttu-id="fc8e1-155">此属性的默认值为 `false`。</span><span class="sxs-lookup"><span data-stu-id="fc8e1-155">The default value of this property is `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>