<Type Name="ContextAttribute" FullName="System.Runtime.Remoting.Contexts.ContextAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6ac6821d52b1c70b48899f5f69d762ddf4415dce" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30488701" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContextAttribute : Attribute, System.Runtime.Remoting.Contexts.IContextAttribute, System.Runtime.Remoting.Contexts.IContextProperty" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ContextAttribute extends System.Attribute implements class System.Runtime.Remoting.Contexts.IContextAttribute, class System.Runtime.Remoting.Contexts.IContextProperty" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Contexts.ContextAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ContextAttribute&#xA;Inherits Attribute&#xA;Implements IContextAttribute, IContextProperty" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextAttribute : Attribute, System::Runtime::Remoting::Contexts::IContextAttribute, System::Runtime::Remoting::Contexts::IContextProperty" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Contexts.IContextAttribute</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Contexts.IContextProperty</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供 <see cref="T:System.Runtime.Remoting.Contexts.IContextAttribute" /> 和 <see cref="T:System.Runtime.Remoting.Contexts.IContextProperty" /> 接口的默认实现。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Remoting.Contexts.ContextAttribute>类是所有的上下文特性的根。 简单<xref:System.Runtime.Remoting.Contexts.Context>类属性可以派生自<xref:System.Runtime.Remoting.Contexts.ContextAttribute>使用的上下文特性和上下文属性该类中。 专用化程度或更复杂的需求，上下文属性可以派生自<xref:System.Runtime.Remoting.Contexts.ContextAttribute>和上下文属性可以拆分为一个独立的类。 有关使用属性的详细信息，请参阅[属性](~/docs/standard/attributes/index.md)。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <see cref="P:System.Runtime.Remoting.Contexts.ContextAttribute.Name" />未必须在任何用户派生类中重写属性。 当前<see cref="M:System.Runtime.Remoting.Contexts.ContextAttribute.Equals(System.Object)" />和<see cref="M:System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode" />方法依赖于默认功能。 若要为类扩展提供高级的行为<see cref="T:System.Runtime.Remoting.Contexts.ContextAttribute" />类并重写<see cref="P:System.Runtime.Remoting.Contexts.ContextAttribute.Name" />属性，您还必须重写的默认实现<see cref="M:System.Runtime.Remoting.Contexts.ContextAttribute.Equals(System.Object)" />和<see cref="M:System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode" />方法。</para>
    </block>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.ContextAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextAttribute(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">上下文特性的名称。</param>
        <summary>使用指定的名称创建 <see cref="T:System.Runtime.Remoting.Contexts.ContextAttribute" /> 类的实例。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AttributeName">
      <MemberSignature Language="C#" Value="protected string AttributeName;" />
      <MemberSignature Language="ILAsm" Value=".field family string AttributeName" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Remoting.Contexts.ContextAttribute.AttributeName" />
      <MemberSignature Language="VB.NET" Value="Protected AttributeName As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ AttributeName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示上下文特性的名称。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.ContextAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">与该实例进行比较的对象。</param>
        <summary>返回一个布尔值，该值指示此实例是否与指定的对象相等。</summary>
        <returns>
          如果 <paramref name="o" /> 不为 <see langword="true" /> 且对象名称等效，则为 <see langword="null" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Freeze">
      <MemberSignature Language="C#" Value="public virtual void Freeze (System.Runtime.Remoting.Contexts.Context newContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Freeze(class System.Runtime.Remoting.Contexts.Context newContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.ContextAttribute.Freeze(System.Runtime.Remoting.Contexts.Context)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Freeze (newContext As Context)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Freeze(System::Runtime::Remoting::Contexts::Context ^ newContext);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Contexts.IContextProperty.Freeze(System.Runtime.Remoting.Contexts.Context)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newContext" Type="System.Runtime.Remoting.Contexts.Context" />
      </Parameters>
      <Docs>
        <param name="newContext">要冻结的上下文。</param>
        <summary>当上下文冻结时调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 上下文已被冻结后，无法添加上下文属性。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回此 <see cref="T:System.Runtime.Remoting.Contexts.ContextAttribute" /> 实例的哈希代码。</summary>
        <returns>此 <see cref="T:System.Runtime.Remoting.Contexts.ContextAttribute" /> 实例的哈希代码。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesForNewContext">
      <MemberSignature Language="C#" Value="public virtual void GetPropertiesForNewContext (System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetPropertiesForNewContext(class System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetPropertiesForNewContext (ctorMsg As IConstructionCallMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetPropertiesForNewContext(System::Runtime::Remoting::Activation::IConstructionCallMessage ^ ctorMsg);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Contexts.IContextAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctorMsg" Type="System.Runtime.Remoting.Activation.IConstructionCallMessage" />
      </Parameters>
      <Docs>
        <param name="ctorMsg">将上下文属性添加到的 <see cref="T:System.Runtime.Remoting.Activation.IConstructionCallMessage" />。</param>
        <summary>将当前上下文属性添加到给定的消息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Remoting.Contexts.ContextAttribute>类是一个实现的<xref:System.Runtime.Remoting.Contexts.IContextProperty>属性。 <xref:System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext%2A>方法将属性添加到给定<xref:System.Runtime.Remoting.Activation.IConstructionCallMessage>类，以便收到消息时，可以在所需的上下文环境中创建新的对象。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ctorMsg" /> 参数为 <see langword="null" />。</exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsContextOK">
      <MemberSignature Language="C#" Value="public virtual bool IsContextOK (System.Runtime.Remoting.Contexts.Context ctx, System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsContextOK(class System.Runtime.Remoting.Contexts.Context ctx, class System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.ContextAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsContextOK (ctx As Context, ctorMsg As IConstructionCallMessage) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsContextOK(System::Runtime::Remoting::Contexts::Context ^ ctx, System::Runtime::Remoting::Activation::IConstructionCallMessage ^ ctorMsg);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Contexts.IContextAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.Runtime.Remoting.Contexts.Context" />
        <Parameter Name="ctorMsg" Type="System.Runtime.Remoting.Activation.IConstructionCallMessage" />
      </Parameters>
      <Docs>
        <param name="ctx">要在其中检查的上下文。</param>
        <param name="ctorMsg">将上下文属性添加到的 <see cref="T:System.Runtime.Remoting.Activation.IConstructionCallMessage" />。</param>
        <summary>返回一个指示该上下文参数是否满足上下文特性要求的布尔值。</summary>
        <returns>
          如果传入的上下文一切正常，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ctx" /> 或 <paramref name="ctorMsg" /> 为 <see langword="null" />。</exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsNewContextOK">
      <MemberSignature Language="C#" Value="public virtual bool IsNewContextOK (System.Runtime.Remoting.Contexts.Context newCtx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsNewContextOK(class System.Runtime.Remoting.Contexts.Context newCtx) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsNewContextOK (newCtx As Context) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsNewContextOK(System::Runtime::Remoting::Contexts::Context ^ newCtx);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Contexts.IContextProperty.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newCtx" Type="System.Runtime.Remoting.Contexts.Context" />
      </Parameters>
      <Docs>
        <param name="newCtx">已在其中创建属性的新上下文。</param>
        <summary>返回一个指示上下文属性是否与新上下文兼容的布尔值。</summary>
        <returns>
          如果上下文属性与新上下文兼容，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一旦所有上下文属性已都添加到新的上下文，它们都是所有查询并指明它们是否可以在新的上下文。 上下文属性无法查看中的其他上下文属性<xref:System.Runtime.Remoting.Contexts.Context.ContextProperties%2A>的新的上下文的属性并确定它是否与这些其他上下文属性兼容。  
  
> [!NOTE]
>  默认情况下，<xref:System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK%2A>方法返回`true`。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Contexts.ContextAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Contexts.IContextProperty.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取上下文特性的名称。</summary>
        <value>上下文特性的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的默认实现提供<xref:System.Runtime.Remoting.Contexts.ContextAttribute.AttributeName>与属性名。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>未必须在任何用户派生类中重写当前的属性。 当前<see cref="M:System.Runtime.Remoting.Contexts.ContextAttribute.Equals(System.Object)" />和<see cref="M:System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode" />方法实现依赖于默认功能。 如果你想要用于类扩展提供高级的行为<see cref="T:System.Runtime.Remoting.Contexts.ContextAttribute" />，并重写<see cref="P:System.Runtime.Remoting.Contexts.ContextAttribute.Name" />属性，你还必须重写的默认实现<see cref="M:System.Runtime.Remoting.Contexts.ContextAttribute.Equals(System.Object)" />和<see cref="M:System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode" />方法。</para>
        </block>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>