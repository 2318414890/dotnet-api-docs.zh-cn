<Type Name="SoapFormatter" FullName="System.Runtime.Serialization.Formatters.Soap.SoapFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cbb414823df5cf2426498725f42c83d10e81d6de" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30490031" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SoapFormatter : System.Runtime.Remoting.Messaging.IRemotingFormatter, System.Runtime.Serialization.IFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SoapFormatter extends System.Object implements class System.Runtime.Remoting.Messaging.IRemotingFormatter, class System.Runtime.Serialization.IFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SoapFormatter&#xA;Implements IFormatter, IRemotingFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapFormatter sealed : System::Runtime::Remoting::Messaging::IRemotingFormatter, System::Runtime::Serialization::IFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Messaging.IRemotingFormatter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>以 SOAP 格式将对象或整个连接对象的图形序列化和反序列化。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  从.NET Framework 2.0 开始，此类已过时。 请改用 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>。  
  
 <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>和<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>类实现<xref:System.Runtime.Remoting.Messaging.IRemotingFormatter>接口以支持远程过程调用 (Rpc) 和<xref:System.Runtime.Serialization.IFormatter>接口 (由继承<xref:System.Runtime.Remoting.Messaging.IRemotingFormatter>) 以支持序列化对象图。 <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>类还支持使用 Rpc<xref:System.Runtime.Serialization.Formatters.ISoapMessage>对象，而无需使用<xref:System.Runtime.Remoting.Messaging.IRemotingFormatter>功能。  
  
 在 Rpc 期间，<xref:System.Runtime.Remoting.Messaging.IRemotingFormatter>接口允许两个单独的对象关系图的规范： 的对象要序列化的图和一个附加的图，包含传达有关 （适用于远程函数调用的信息的标头对象的数组例如，事务 ID 或方法签名）。 对于正确的序列化，第一个关系图的根对象必须实现的对象<xref:System.Runtime.Remoting.Messaging.IMethodCallMessage>接口或<xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage>接口。  
  
 反序列化的 RPC 期间<xref:System.Runtime.Remoting.Messaging.HeaderHandler>委托指定到<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A>格式化程序的方法。 远程处理基础结构使用<xref:System.Runtime.Remoting.Messaging.HeaderHandler>委托来生成支持的对象<xref:System.Runtime.Serialization.ISerializable>接口。 此对象包含标头中存储的信息，并成为返回反序列化程序的关系图的根。  
  
 <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>还可以处理具有实现的对象生成的 Rpc<xref:System.Runtime.Serialization.Formatters.ISoapMessage>接口。 若要创建而不使用的 RPC<xref:System.Runtime.Remoting.Messaging.IRemotingFormatter>功能，支持的对象的位置<xref:System.Runtime.Serialization.Formatters.ISoapMessage>根目录下的图形正在序列化的接口。 若要反序列化以这种方式创建的 RPC<xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TopObject%2A>属性必须设置为支持的另一个对象<xref:System.Runtime.Serialization.Formatters.ISoapMessage>接口，并包含相关的远程调用信息。  
  
## <a name="timespan-serialization"></a>时间跨度序列化  
 根据 ISO 8601: 1998年部分 5.5.3.2.1"备用"标准情况下，TimeSpan 对象进行序列化。  
  
## <a name="version-information"></a>版本信息  
 <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>不支持序列化的.NET Framework 版本之间的兼容性。 在通常的 Framework 版本 1.1 和 2.0 类型之间的序列化失败。 若要解决此问题，可以执行以下操作：  
  
-   转换，以使用<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>，该属性提供 1.1 和 2.0 之间的兼容性。  
  
-   将现有持久化的数据转换为新格式。  
  
-   将所有生产者和使用者的序列化数据都转换为版本 2.0。  
  
-   避免使用 1.1 从更改为 2.0 的类型。  
  
   
  
## Examples  
 [!code-cpp[SoapFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapFormatter Example/CPP/soapformatter.cpp#1)]
 [!code-csharp[SoapFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapFormatter Example/CS/soapformatter.cs#1)]
 [!code-vb[SoapFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapFormatter Example/VB/soapformatter.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用默认属性值初始化 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表显示 <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter> 的实例的初始属性值。  
  
|Property|“值”|  
|--------------|-----------|  
|<xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.SurrogateSelector%2A>|`null`|  
|<xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Context%2A>|一个新<xref:System.Runtime.Serialization.StreamingContext>初始化以指定可以传输到或从任何其他上下文接收的序列化的数据|  
  
   
  
## Examples  
 [!code-cpp[SoapFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapFormatter Example/CPP/soapformatter.cpp#1)]
 [!code-csharp[SoapFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapFormatter Example/CS/soapformatter.cs#1)]
 [!code-vb[SoapFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapFormatter Example/VB/soapformatter.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapFormatter (System.Runtime.Serialization.ISurrogateSelector selector, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.ISurrogateSelector selector, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selector As ISurrogateSelector, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapFormatter(System::Runtime::Serialization::ISurrogateSelector ^ selector, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selector" Type="System.Runtime.Serialization.ISurrogateSelector" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="selector">要用于 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> 的新实例的 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />。 可以为 <see langword="null" />。</param>
        <param name="context">该 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 包含序列化源和目标。 如果 <c>context</c> 参数为 <see langword="null" />，则 <see cref="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Context" /> 默认为 <see cref="F:System.Runtime.Serialization.StreamingContextStates.CrossMachine" />。</param>
        <summary>使用指定的 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> 和 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> 初始化 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对象，序列化或反序列化从，指定<xref:System.IO.Stream>。  
  
 使用指定的序列化或反序列化进程<xref:System.Runtime.Serialization.ISurrogateSelector>搜索要反序列化的对象类型注册的代理项。 代理项是可序列化和反序列化的特定类的对象的帮助器。 默认值<xref:System.Runtime.Serialization.ISurrogateSelector>无法处理从派生的对象序列化<xref:System.MarshalByRefObject>为远程处理目的。 在远程处理的情况下，指定<xref:System.Runtime.Serialization.ISurrogateSelector>替换派生自对象<xref:System.MarshalByRefObject>与<xref:System.Runtime.Remoting.ObjRef>序列化指定的代理项选择器的对象。 因此，如果你想要使用远程对象，设置`selector`参数的实例<xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector>。 如果不需要使用代理项，将设置`selector`参数为`null`。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="AssemblyFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle AssemblyFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle AssemblyFormat" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.AssemblyFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property AssemblyFormat As FormatterAssemblyStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterAssemblyStyle AssemblyFormat { System::Runtime::Serialization::Formatters::FormatterAssemblyStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterAssemblyStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterAssemblyStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与查找加集有关的反序列化器行为。</summary>
        <value>
          <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 值之一，它指定反序列化器行为。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
      </Docs>
    </Member>
    <Member MemberName="Binder">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.SerializationBinder Binder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.SerializationBinder Binder" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Binder" />
      <MemberSignature Language="VB.NET" Value="Public Property Binder As SerializationBinder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::SerializationBinder ^ Binder { System::Runtime::Serialization::SerializationBinder ^ get(); void set(System::Runtime::Serialization::SerializationBinder ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.SerializationBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Runtime.Serialization.SerializationBinder" />，它控制将序列化对象绑定到类型的过程。</summary>
        <value>与此 <see cref="T:System.Runtime.Serialization.SerializationBinder" /> 一起使用的 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.SerializationBinder" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.StreamingContext Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.StreamingContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As StreamingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::StreamingContext Context { System::Runtime::Serialization::StreamingContext get(); void set(System::Runtime::Serialization::StreamingContext value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.StreamingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 一起使用的 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />。</summary>
        <value>与此 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 一起使用的 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.StreamingContext>提供描述的源和给定的序列化流的目标以及要保留该上下文和调用方定义的其他上下文的序列化一种方法的枚举。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Deserialize">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将流反序列化为对象图形。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  调用此方法不受信任的数据会带来安全风险。 调用此方法仅受信任的数据。 有关详细信息，请参阅[数据验证](https://www.owasp.org/index.php/Data_Validation)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream serializationStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.IO.Stream serializationStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Deserialize(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (serializationStream As Stream) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::IO::Stream ^ serializationStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="serializationStream">包含要反序列化的数据的流。</param>
        <summary>反序列化所提供流中的数据并重新组成对象图形。</summary>
        <returns>反序列化的图形的顶级对象（根）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 反序列化成功，流中的当前位置必须是开头的对象图。  
  
> [!IMPORTANT]
>  调用此方法不受信任的数据会带来安全风险。 调用此方法仅受信任的数据。 有关详细信息，请参阅[数据验证](https://www.owasp.org/index.php/Data_Validation)。  
  
   
  
## Examples  
 [!code-cpp[SoapFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapFormatter Example/CPP/soapformatter.cpp#1)]
 [!code-csharp[SoapFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapFormatter Example/CS/soapformatter.cs#1)]
 [!code-vb[SoapFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapFormatter Example/VB/soapformatter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serializationStream" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream serializationStream, System.Runtime.Remoting.Messaging.HeaderHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.IO.Stream serializationStream, class System.Runtime.Remoting.Messaging.HeaderHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Deserialize(System.IO.Stream,System.Runtime.Remoting.Messaging.HeaderHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (serializationStream As Stream, handler As HeaderHandler) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::IO::Stream ^ serializationStream, System::Runtime::Remoting::Messaging::HeaderHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="handler" Type="System.Runtime.Remoting.Messaging.HeaderHandler" />
      </Parameters>
      <Docs>
        <param name="serializationStream">包含要反序列化的数据的流。</param>
        <param name="handler">对在流中发现的任何标题进行处理的委托。 可以为 <see langword="null" />。</param>
        <summary>将流反序列化为对象图形，该流中的任何标题都由给定的 <see cref="T:System.Runtime.Remoting.Messaging.HeaderHandler" /> 进行处理。</summary>
        <returns>反序列化的图形的顶级对象（根）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 标头仅用于特定远程处理应用程序。 <xref:System.Runtime.Remoting.Messaging.HeaderHandler>参数是通过两种方法从流中 SOAP 远程过程调用 (RPC) 格式返回标头之一。 另一种方法是使用<xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TopObject%2A>属性。  
  
 反序列化成功，流中的当前位置必须是开头的对象图。  
  
## <a name="timespan-serialization"></a>时间跨度序列化  
 根据 ISO 8601: 1998年部分 5.5.3.2.1"备用"标准情况下，TimeSpan 对象进行序列化。  
  
> [!IMPORTANT]
>  调用此方法不受信任的数据会带来安全风险。 调用此方法仅受信任的数据。 有关详细信息，请参阅[数据验证](https://www.owasp.org/index.php/Data_Validation)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serializationStream" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <paramref name="serializationStream" /> 支持查找，其长度为 0。</exception>
      </Docs>
    </Member>
    <Member MemberName="FilterLevel">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.TypeFilterLevel FilterLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.TypeFilterLevel FilterLevel" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.FilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterLevel As TypeFilterLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::TypeFilterLevel FilterLevel { System::Runtime::Serialization::Formatters::TypeFilterLevel get(); void set(System::Runtime::Serialization::Formatters::TypeFilterLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.TypeFilterLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于 .NET Framework 远程处理的自动反序列化的 <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />。</summary>
        <value>表示当前自动反序列化级别的 <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 支持的值为<xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low>和<xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full>（默认值）。 反序列化级别详细信息，请参阅[.NET 远程处理中的自动反序列化](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将对象或连接对象图形序列化。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream serializationStream, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.IO.Stream serializationStream, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Serialize(System.IO.Stream,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (serializationStream As Stream, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Serialize(System::IO::Stream ^ serializationStream, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationStream">流，格式化程序将要序列化的数据置于其中。</param>
        <param name="graph">要序列化的对象或对象图形的根。 将自动序列化此根对象的所有子对象。</param>
        <summary>将对象或具有指定根的对象图形序列化为给定的 <see cref="T:System.IO.Stream" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根据 ISO 8601: 1998年部分 5.5.3.2.1"备用"标准情况下，TimeSpan 对象进行序列化。  
  
   
  
## Examples  
 [!code-cpp[SoapFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapFormatter Example/CPP/soapformatter.cpp#1)]
 [!code-csharp[SoapFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapFormatter Example/CS/soapformatter.cs#1)]
 [!code-vb[SoapFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapFormatter Example/VB/soapformatter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serializationStream" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream serializationStream, object graph, System.Runtime.Remoting.Messaging.Header[] headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.IO.Stream serializationStream, object graph, class System.Runtime.Remoting.Messaging.Header[] headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Serialize(System.IO.Stream,System.Object,System.Runtime.Remoting.Messaging.Header[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (serializationStream As Stream, graph As Object, headers As Header())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Serialize(System::IO::Stream ^ serializationStream, System::Object ^ graph, cli::array &lt;System::Runtime::Remoting::Messaging::Header ^&gt; ^ headers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="graph" Type="System.Object" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Messaging.Header[]" />
      </Parameters>
      <Docs>
        <param name="serializationStream">流，格式化程序将要序列化的数据置于其中。</param>
        <param name="graph">要序列化的对象或对象图形的根。 将自动序列化此根对象的所有子对象。</param>
        <param name="headers">将包括在序列化中的远程处理标题。 可以为 <see langword="null" />。</param>
        <summary>以 SOAP 远程过程调用 (RPC) 格式，将对象或具有指定根的对象图形序列化为给定的 <see cref="T:System.IO.Stream" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 标头仅用于特定远程处理应用程序。  
  
 根据 ISO 8601: 1998年部分 5.5.3.2.1"备用"标准情况下，TimeSpan 对象进行序列化。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serializationStream" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="SurrogateSelector">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.ISurrogateSelector SurrogateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ISurrogateSelector SurrogateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.SurrogateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property SurrogateSelector As ISurrogateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::ISurrogateSelector ^ SurrogateSelector { System::Runtime::Serialization::ISurrogateSelector ^ get(); void set(System::Runtime::Serialization::ISurrogateSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ISurrogateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Runtime.Serialization.SurrogateSelector" />，它控制序列化和反序列化过程中的类型替换。</summary>
        <value>与此 <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> 一起使用的 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Runtime.Remoting>生成<xref:System.Runtime.Remoting.ObjRef>的实例<xref:System.MarshalByRefObject>对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopObject">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.ISoapMessage TopObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.Formatters.ISoapMessage TopObject" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TopObject" />
      <MemberSignature Language="VB.NET" Value="Public Property TopObject As ISoapMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::ISoapMessage ^ TopObject { System::Runtime::Serialization::Formatters::ISoapMessage ^ get(); void set(System::Runtime::Serialization::Formatters::ISoapMessage ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.ISoapMessage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置将 SOAP 顶级对象反序列化为的 <see cref="T:System.Runtime.Serialization.Formatters.ISoapMessage" />。</summary>
        <value>将 SOAP 顶级对象反序列化为的 <see cref="T:System.Runtime.Serialization.Formatters.ISoapMessage" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性用于 SOAP 远程过程调用 (RPC) 格式，并指定 SOAP 顶部的记录是远程调用不是公共语言运行时对象类型的方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TypeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeFormat As FormatterTypeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterTypeStyle TypeFormat { System::Runtime::Serialization::Formatters::FormatterTypeStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterTypeStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterTypeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置类型说明在序列化流中的布局格式。</summary>
        <value>类型说明在序列化流中的布局格式。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle" />
      </Docs>
    </Member>
  </Members>
</Type>