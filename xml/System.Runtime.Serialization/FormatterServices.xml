<Type Name="FormatterServices" FullName="System.Runtime.Serialization.FormatterServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="88dacb96220c0e1ad5cf9b9bc8e78fba008e3cc6" />
    <Meta Name="ms.sourcegitcommit" Value="81d387351cc43c342755705908f4a5eb8af153d3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/04/2018" />
    <Meta Name="ms.locfileid" Value="34568163" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class FormatterServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed FormatterServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.FormatterServices" />
  <TypeSignature Language="VB.NET" Value="Public Class FormatterServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormatterServices abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="da708-101">提供静态方法，以协助实现用于序列化的 <see cref="T:System.Runtime.Serialization.Formatter" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="da708-101">Provides static methods to aid with the implementation of a <see cref="T:System.Runtime.Serialization.Formatter" /> for serialization.</span>
      </span>
      <span data-ttu-id="da708-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="da708-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Runtime.Serialization.Formatter" />
  </Docs>
  <Members>
    <Member MemberName="CheckTypeSecurity">
      <MemberSignature Language="C#" Value="public static void CheckTypeSecurity (Type t, System.Runtime.Serialization.Formatters.TypeFilterLevel securityLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckTypeSecurity(class System.Type t, valuetype System.Runtime.Serialization.Formatters.TypeFilterLevel securityLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CheckTypeSecurity (t As Type, securityLevel As TypeFilterLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CheckTypeSecurity(Type ^ t, System::Runtime::Serialization::Formatters::TypeFilterLevel securityLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="securityLevel" Type="System.Runtime.Serialization.Formatters.TypeFilterLevel" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="da708-103">要检查反序列化能力的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-103">The <see cref="T:System.Type" /> to check for the ability to deserialize.</span>
          </span>
        </param>
        <param name="securityLevel">
          <span data-ttu-id="da708-104">
            <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> 属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-104">The <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> property value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da708-105">确定是否能够在 <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> 属性设置为 <see langword="Low" /> 时反序列化指定的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-105">Determines whether the specified <see cref="T:System.Type" /> can be deserialized with the <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> property set to <see langword="Low" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da708-106">使用此方法来确定是否可以将指定的类型反序列化时<xref:System.Runtime.Serialization.Formatters.TypeFilterLevel>属性设置为`Low`。</span><span class="sxs-lookup"><span data-stu-id="da708-106">Use this method to determine whether a specified type can be deserialized when the <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel> property is set to `Low`.</span></span>  
  
 <span data-ttu-id="da708-107">.NET framework 远程处理提供了两个级别的自动反序列化，<xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low>和<xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full>。</span><span class="sxs-lookup"><span data-stu-id="da708-107">.NET Framework remoting provides two levels of automatic deserialization, <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low> and <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full>.</span></span> <span data-ttu-id="da708-108"><xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low> 有助于保护计算机免受反序列化攻击进行反序列化仅与的最基本的远程处理功能关联的类型。</span><span class="sxs-lookup"><span data-stu-id="da708-108"><xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low> helps protect against deserialization attacks by deserializing only the types associated with the most basic remoting functionality.</span></span> <span data-ttu-id="da708-109"><xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full> 反序列化级别支持对远程处理在各种情况下支持的所有类型进行自动反序列化。</span><span class="sxs-lookup"><span data-stu-id="da708-109">The <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full> deserialization level supports automatic deserialization of all types that remoting supports in all situations.</span></span> <span data-ttu-id="da708-110">有关.net Framework 远程处理类型<xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low>和<xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full>支持，请参阅[ &#91; \<topic://cpconAutomaticDeserializationInNETRemoting >&#93;](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)。</span><span class="sxs-lookup"><span data-stu-id="da708-110">For more information about the.NET Framework remoting types that <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low> and <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full> support, see [&#91;\<topic://cpconAutomaticDeserializationInNETRemoting>&#93;](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da708-111">此示例演示如何使用<xref:System.Runtime.Serialization.FormatterServices>类来序列化或反序列化的对象的基类中不实现<xref:System.Runtime.Serialization.ISerializable>而不是派生的类。</span><span class="sxs-lookup"><span data-stu-id="da708-111">This example shows how to use the <xref:System.Runtime.Serialization.FormatterServices> class to serialize or deserialize an object where the base class does not implement <xref:System.Runtime.Serialization.ISerializable> but the derived class does.</span></span>  
  
 [!code-cpp[FormatterServices#1](~/samples/snippets/cpp/VS_Snippets_Remoting/FormatterServices/cpp/FormatterServices.cpp#1)]
 [!code-csharp[FormatterServices#1](~/samples/snippets/csharp/VS_Snippets_Remoting/FormatterServices/CS/FormatterServices.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="da708-112">
            <paramref name="t" /> 参数是高级类型，不能在 <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> 属性设置为 <see langword="Low" /> 时被反序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-112">The <paramref name="t" /> parameter is an advanced type and cannot be deserialized when the <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> property is set to <see langword="Low" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public static object[] GetObjectData (object obj, System.Reflection.MemberInfo[] members);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetObjectData(object obj, class System.Reflection.MemberInfo[] members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectData (obj As Object, members As MemberInfo()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetObjectData(System::Object ^ obj, cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ members);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="members" Type="System.Reflection.MemberInfo[]" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="da708-113">要写入格式化程序的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-113">The object to write to the formatter.</span>
          </span>
        </param>
        <param name="members">
          <span data-ttu-id="da708-114">要从对象中提取的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-114">The members to extract from the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da708-115">从指定对象提取数据并将其以对象数组的形式返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-115">Extracts the data from the specified object and returns it as an array of objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da708-116">
            <see cref="T:System.Object" /> 的数组，它包含存储在 <paramref name="members" /> 中并与 <paramref name="obj" /> 关联的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-116">An array of <see cref="T:System.Object" /> that contains data stored in <paramref name="members" /> and associated with <paramref name="obj" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da708-117">每个提供成员`members`数组<xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A>方法提取与关联的值`obj`对象，并将其返回。</span><span class="sxs-lookup"><span data-stu-id="da708-117">For each supplied member of the `members` array the <xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A> method extracts the value associated with the `obj` object, and returns it.</span></span> <span data-ttu-id="da708-118">返回数组的长度是相同的长度`members`数组。</span><span class="sxs-lookup"><span data-stu-id="da708-118">The length of the returned array is the same as the length of the `members` array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da708-119">下面的示例创建 Book 类的实例，并在实例上设置字段值。</span><span class="sxs-lookup"><span data-stu-id="da708-119">The following example creates an instance of a Book class and sets field values on the instance.</span></span> <span data-ttu-id="da708-120">然后，代码获取类型信息使用<xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da708-120">The code then gets the type information using the <xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A> method.</span></span> <span data-ttu-id="da708-121">代码将实例数据复制到对象数组使用<xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da708-121">The code copies the instance data into an object array using the <xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A> method.</span></span> <span data-ttu-id="da708-122">使用创建类的新未经初始化即的实例<xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da708-122">A new uninitialized instance of the class is created using the <xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> method.</span></span> <span data-ttu-id="da708-123">最后，从第一个实例的数据复制到第二个实例使用<xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da708-123">Finally, the data from the first instance is copied into the second instance using the <xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A> method.</span></span>  
  
 [!code-csharp[FormatterServices_PopulateObjects#1](~/samples/snippets/csharp/VS_Snippets_Remoting/FormatterServices_PopulateObjects/cs/Populate.cs#1)]
 [!code-vb[FormatterServices_PopulateObjects#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/FormatterServices_PopulateObjects/vb/Populate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da708-124">
            <paramref name="obj" /> 或 <paramref name="members" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-124">The <paramref name="obj" /> or <paramref name="members" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="da708-125">
            <paramref name="members" /> 的元素为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-125">An element of <paramref name="members" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="da708-126">
            <paramref name="members" /> 的一个元素不表示字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-126">An element of <paramref name="members" /> does not represent a field.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="da708-127">用于提供序列化服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-127">For providing serialization services.</span>
          </span>
          <span data-ttu-id="da708-128">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />， <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-128">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />, <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetSafeUninitializedObject">
      <MemberSignature Language="C#" Value="public static object GetSafeUninitializedObject (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSafeUninitializedObject(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSafeUninitializedObject(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="da708-129">要创建的对象的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-129">The type of object to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da708-130">创建指定对象类型的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-130">Creates a new instance of the specified object type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da708-131">指定类型的归零对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-131">A zeroed object of the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da708-132">因为对象的新实例初始化为零，并在运行任何构造函数，该对象可能不是由该对象被认为是有效的状态。</span><span class="sxs-lookup"><span data-stu-id="da708-132">Because the new instance of the object is initialized to zero and no constructors are run, the object might not represent a state that is regarded as valid by that object.</span></span> <span data-ttu-id="da708-133"><xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> 应仅用于反序列化时用户想要立即填充所有字段。</span><span class="sxs-lookup"><span data-stu-id="da708-133"><xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> should only be used for deserialization when the user intends to immediately populate all fields.</span></span> <span data-ttu-id="da708-134">它不创建未初始化的字符串，因为创建不可变类型的空实例没有任何用途。</span><span class="sxs-lookup"><span data-stu-id="da708-134">It does not create an uninitialized string, since creating an empty instance of an immutable type serves no purpose.</span></span>  
  
 <span data-ttu-id="da708-135"><xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> 将转换所有类级别[链接需求](~/docs/framework/misc/link-demands.md)到[需求](http://msdn.microsoft.com/library/e5283e28-2366-4519-b27d-ef5c1ddc1f48)以确保所有直接和间接调用方具有要求指定的权限。</span><span class="sxs-lookup"><span data-stu-id="da708-135"><xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> converts all class level [Link Demands](~/docs/framework/misc/link-demands.md) to [Demands](http://msdn.microsoft.com/library/e5283e28-2366-4519-b27d-ef5c1ddc1f48) to ensure that all direct and indirect callers have the permissions that the demand specifies.</span></span> <span data-ttu-id="da708-136">使用<xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A>从部分受信任的源反序列化时增加的安全级别。</span><span class="sxs-lookup"><span data-stu-id="da708-136">Use <xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> to increase the level of security when deserializing from a partially trusted source.</span></span> <span data-ttu-id="da708-137">对于在完全信任方案中更好的性能，使用<xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A>。</span><span class="sxs-lookup"><span data-stu-id="da708-137">For better performance in full trust scenarios, use <xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da708-138">
            <paramref name="type" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-138">The <paramref name="type" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="da708-139">
            <paramref name="type" /> 参数不是有效的公共语言运行时类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-139">The <paramref name="type" /> parameter is not a valid common language runtime type.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="da708-140">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-140">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="da708-141">用于提供序列化服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-141">For providing serialization services.</span>
          </span>
          <span data-ttu-id="da708-142">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />， <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-142">Associated enumerations: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />, <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSerializableMembers">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="da708-143">返回特定类的所有可序列化成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-143">Returns all the serializable members for a particular class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSerializableMembers">
      <MemberSignature Language="C#" Value="public static System.Reflection.MemberInfo[] GetSerializableMembers (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MemberInfo[] GetSerializableMembers(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetSerializableMembers(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="da708-144">正在序列化的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-144">The type being serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da708-145">获取指定 <see cref="T:System.Type" /> 的类的所有可序列化成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-145">Gets all the serializable members for a class of the specified <see cref="T:System.Type" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da708-146">非瞬态、非静态成员的 <see cref="T:System.Reflection.MemberInfo" /> 类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-146">An array of type <see cref="T:System.Reflection.MemberInfo" /> of the non-transient, non-static members.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da708-147">通常情况下，类的可序列化的成员都是如字段和属性的非瞬态、 非静态成员。</span><span class="sxs-lookup"><span data-stu-id="da708-147">Generally, the serializable members of a class are non-transient, non-static members such as fields and properties.</span></span> <span data-ttu-id="da708-148">要包含，属性必须具有 getter 和 setter。</span><span class="sxs-lookup"><span data-stu-id="da708-148">To be included, properties must have both a getter and a setter.</span></span> <span data-ttu-id="da708-149">一个类以实现<xref:System.Runtime.Serialization.ISerializable>接口或具有序列化代理项没有序列化所有这些成员，或者可以将其他成员序列化。</span><span class="sxs-lookup"><span data-stu-id="da708-149">A class that implements the <xref:System.Runtime.Serialization.ISerializable> interface or has a serialization surrogate does not have to serialize all these members, or can serialize additional members.</span></span>  

<span data-ttu-id="da708-150">因为`GetSerializableMembers`方法调用<xref:System.Type.GetFields%2A?displayProperty=nameWithType>方法，它不返回字段按特定的顺序，如按字母顺序排列或声明顺序排列。</span><span class="sxs-lookup"><span data-stu-id="da708-150">Because the `GetSerializableMembers` method calls the <xref:System.Type.GetFields%2A?displayProperty=nameWithType> method, it does not return fields in a particular order, such as alphabetical or declaration order.</span></span> <span data-ttu-id="da708-151">你的代码必须不依赖于字段的返回顺序。</span><span class="sxs-lookup"><span data-stu-id="da708-151">Your code must not depend on the order in which fields are returned.</span></span>  
   
## Examples  
 <span data-ttu-id="da708-152">下面的示例调用<xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A>方法的实现从<xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="da708-152">The following example calls the <xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A> method from an implementation of <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A?displayProperty=nameWithType> method.</span></span>   
  
 [!code-cpp[FormatterServices#2](~/samples/snippets/cpp/VS_Snippets_Remoting/FormatterServices/cpp/FormatterServices.cpp#2)]
 [!code-csharp[FormatterServices#2](~/samples/snippets/csharp/VS_Snippets_Remoting/FormatterServices/CS/FormatterServices.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da708-153">
            <paramref name="type" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-153">The <paramref name="type" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="da708-154">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-154">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="da708-155">用于提供序列化服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-155">For providing serialization services.</span>
          </span>
          <span data-ttu-id="da708-156">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />， <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-156">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />, <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Reflection.MemberInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetSerializableMembers">
      <MemberSignature Language="C#" Value="public static System.Reflection.MemberInfo[] GetSerializableMembers (Type type, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MemberInfo[] GetSerializableMembers(class System.Type type, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetSerializableMembers(Type ^ type, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="da708-157">正在序列化或克隆的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-157">The type being serialized or cloned.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="da708-158">发生序列化的上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-158">The context where the serialization occurs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da708-159">获取属于指定 <see cref="T:System.Type" /> 的类且位于提供的 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 中的所有可序列化成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-159">Gets all the serializable members for a class of the specified <see cref="T:System.Type" /> and in the provided <see cref="T:System.Runtime.Serialization.StreamingContext" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da708-160">非瞬态、非静态成员的 <see cref="T:System.Reflection.MemberInfo" /> 类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-160">An array of type <see cref="T:System.Reflection.MemberInfo" /> of the non-transient, non-static members.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da708-161">通常情况下，类的可序列化的成员都是如字段和属性的非瞬态、 非静态成员。</span><span class="sxs-lookup"><span data-stu-id="da708-161">Generally, the serializable members of a class are non-transient, non-static members such as fields and properties.</span></span> <span data-ttu-id="da708-162">要包含，属性必须具有 getter 和 setter。</span><span class="sxs-lookup"><span data-stu-id="da708-162">To be included, properties must have both a getter and a setter.</span></span> <span data-ttu-id="da708-163">一个类以实现<xref:System.Runtime.Serialization.ISerializable>或具有序列化代理项没有序列化所有这些成员，或者可以将其他成员序列化。</span><span class="sxs-lookup"><span data-stu-id="da708-163">A class that implements <xref:System.Runtime.Serialization.ISerializable> or has a serialization surrogate does not have to serialize all these members, or can serialize additional members.</span></span>  
  
<span data-ttu-id="da708-164">如果`context`包括<xref:System.Runtime.Serialization.StreamingContextStates.Clone?displayProperty=nameWithType>枚举值，也包括在暂时性字段<xref:System.Reflection.MemberInfo>此方法返回的数组。</span><span class="sxs-lookup"><span data-stu-id="da708-164">If `context` includes the <xref:System.Runtime.Serialization.StreamingContextStates.Clone?displayProperty=nameWithType> enumeration value, transient fields are also included in the <xref:System.Reflection.MemberInfo> array returned by this method.</span></span>  

<span data-ttu-id="da708-165">因为`GetSerializableMembers`方法调用<xref:System.Type.GetFields%2A?displayProperty=nameWithType>方法，它不返回字段按特定的顺序，如按字母顺序排列或声明顺序排列。</span><span class="sxs-lookup"><span data-stu-id="da708-165">Because the `GetSerializableMembers` method calls the <xref:System.Type.GetFields%2A?displayProperty=nameWithType> method, it does not return fields in a particular order, such as alphabetical or declaration order.</span></span> <span data-ttu-id="da708-166">你的代码必须不依赖于字段的返回顺序。</span><span class="sxs-lookup"><span data-stu-id="da708-166">Your code must not depend on the order in which fields are returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da708-167">
            <paramref name="type" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-167">The <paramref name="type" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="da708-168">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-168">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="da708-169">用于提供序列化服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-169">For providing serialization services.</span>
          </span>
          <span data-ttu-id="da708-170">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />， <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-170">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />, <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="T:System.Reflection.MemberInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetSurrogateForCyclicalReference">
      <MemberSignature Language="C#" Value="public static System.Runtime.Serialization.ISerializationSurrogate GetSurrogateForCyclicalReference (System.Runtime.Serialization.ISerializationSurrogate innerSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Serialization.ISerializationSurrogate GetSurrogateForCyclicalReference(class System.Runtime.Serialization.ISerializationSurrogate innerSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSurrogateForCyclicalReference (innerSurrogate As ISerializationSurrogate) As ISerializationSurrogate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Serialization::ISerializationSurrogate ^ GetSurrogateForCyclicalReference(System::Runtime::Serialization::ISerializationSurrogate ^ innerSurrogate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ISerializationSurrogate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="innerSurrogate" Type="System.Runtime.Serialization.ISerializationSurrogate" />
      </Parameters>
      <Docs>
        <param name="innerSurrogate">
          <span data-ttu-id="da708-171">指定的代理项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-171">The specified surrogate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da708-172">对指定的 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /> 返回序列化代理项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-172">Returns a serialization surrogate for the specified <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da708-173">用于指定 <paramref name="innerSurrogate" /> 的 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-173">An <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /> for the specified <paramref name="innerSurrogate" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromAssembly">
      <MemberSignature Language="C#" Value="public static Type GetTypeFromAssembly (System.Reflection.Assembly assem, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetTypeFromAssembly(class System.Reflection.Assembly assem, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeFromAssembly (assem As Assembly, name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetTypeFromAssembly(System::Reflection::Assembly ^ assem, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assem" Type="System.Reflection.Assembly" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assem">
          <span data-ttu-id="da708-174">要在其中查找对象的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-174">The assembly where you want to look up the object.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="da708-175">对象的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-175">The name of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da708-176">在提供的 <see cref="T:System.Reflection.Assembly" /> 中查找指定对象的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-176">Looks up the <see cref="T:System.Type" /> of the specified object in the provided <see cref="T:System.Reflection.Assembly" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da708-177">命名对象的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-177">The <see cref="T:System.Type" /> of the named object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da708-178">
            <paramref name="assem" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-178">The <paramref name="assem" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="da708-179">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-179">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="da708-180">用于提供序列化服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-180">For providing serialization services.</span>
          </span>
          <span data-ttu-id="da708-181">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />， <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-181">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />, <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="da708-182">提取的反射类型的不可见的成员信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-182">For extraction of reflection information on members of a type that are not visible.</span>
          </span>
          <span data-ttu-id="da708-183">关联枚举：<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-183">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.GetType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetUninitializedObject">
      <MemberSignature Language="C#" Value="public static object GetUninitializedObject (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetUninitializedObject(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetUninitializedObject(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="da708-184">要创建的对象的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-184">The type of object to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da708-185">创建指定对象类型的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-185">Creates a new instance of the specified object type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da708-186">指定类型的归零对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-186">A zeroed object of the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da708-187">因为对象的新实例初始化为零，并在运行任何构造函数，该对象可能不是由该对象被认为是有效的状态。</span><span class="sxs-lookup"><span data-stu-id="da708-187">Because the new instance of the object is initialized to zero and no constructors are run, the object might not represent a state that is regarded as valid by that object.</span></span> <span data-ttu-id="da708-188">当前方法应仅用于反序列化时用户想要立即填充所有字段。</span><span class="sxs-lookup"><span data-stu-id="da708-188">The current method should only be used for deserialization when the user intends to immediately populate all fields.</span></span> <span data-ttu-id="da708-189">它不创建未初始化的字符串，因为创建不可变类型的空实例没有任何用途。</span><span class="sxs-lookup"><span data-stu-id="da708-189">It does not create an uninitialized string, since creating an empty instance of an immutable type serves no purpose.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da708-190">不能使用<xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A>方法来创建派生自的类型的实例<xref:System.ContextBoundObject>类。</span><span class="sxs-lookup"><span data-stu-id="da708-190">You cannot use the <xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A> method to create instances of types that derive from the <xref:System.ContextBoundObject> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da708-191">
            <paramref name="type" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-191">The <paramref name="type" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="da708-192">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-192">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="da708-193">用于提供序列化服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-193">For providing serialization services.</span>
          </span>
          <span data-ttu-id="da708-194">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />， <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-194">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />, <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PopulateObjectMembers">
      <MemberSignature Language="C#" Value="public static object PopulateObjectMembers (object obj, System.Reflection.MemberInfo[] members, object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object PopulateObjectMembers(object obj, class System.Reflection.MemberInfo[] members, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PopulateObjectMembers (obj As Object, members As MemberInfo(), data As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PopulateObjectMembers(System::Object ^ obj, cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ members, cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="members" Type="System.Reflection.MemberInfo[]" />
        <Parameter Name="data" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="da708-195">要填充的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-195">The object to populate.</span>
          </span>
        </param>
        <param name="members">
          <span data-ttu-id="da708-196">
            <see cref="T:System.Reflection.MemberInfo" /> 的数组，它描述要填充的字段和属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-196">An array of <see cref="T:System.Reflection.MemberInfo" /> that describes which fields and properties to populate.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="da708-197">
            <see cref="T:System.Object" /> 的数组，它指定要填充的每个字段和属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-197">An array of <see cref="T:System.Object" /> that specifies the values for each field and property to populate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da708-198">使用从对象的数据数组中提取的每个字段的值填充指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-198">Populates the specified object with values for each field drawn from the data array of objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da708-199">新填充的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-199">The newly populated object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da708-200">如果中的某个元素`data`是`null`，<xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A>不会写入任何内容该字段。</span><span class="sxs-lookup"><span data-stu-id="da708-200">If an element in `data` is `null`, <xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A> does not write anything to that field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da708-201">下面的示例创建 Book 类的实例，并在实例上设置字段值。</span><span class="sxs-lookup"><span data-stu-id="da708-201">The following example creates an instance of a Book class and sets field values on the instance.</span></span> <span data-ttu-id="da708-202">然后，代码获取类型信息使用<xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da708-202">The code then gets the type information using the <xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A> method.</span></span> <span data-ttu-id="da708-203">代码将实例数据复制到对象数组使用<xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da708-203">The code copies the instance data into an object array using the <xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A> method.</span></span> <span data-ttu-id="da708-204">使用创建类的新未经初始化即的实例<xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da708-204">A new uninitialized instance of the class is created using the <xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> method.</span></span> <span data-ttu-id="da708-205">最后，从第一个实例的数据复制到第二个实例使用<xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da708-205">Finally, the data from the first instance is copied into the second instance using the <xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A> method.</span></span>  
  
 [!code-csharp[FormatterServices_PopulateObjects#1](~/samples/snippets/csharp/VS_Snippets_Remoting/FormatterServices_PopulateObjects/cs/Populate.cs#1)]
 [!code-vb[FormatterServices_PopulateObjects#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/FormatterServices_PopulateObjects/vb/Populate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da708-206">
            <paramref name="obj" />、<paramref name="members" /> 或 <paramref name="data" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-206">The <paramref name="obj" />, <paramref name="members" />, or <paramref name="data" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="da708-207">
            <paramref name="members" /> 的元素为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-207">An element of <paramref name="members" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da708-208">
            <paramref name="members" /> 的长度不匹配 <paramref name="data" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-208">The length of <paramref name="members" /> does not match the length of <paramref name="data" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="da708-209">
            <paramref name="members" /> 的一个元素不是 <see cref="T:System.Reflection.FieldInfo" /> 的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-209">An element of <paramref name="members" /> is not an instance of <see cref="T:System.Reflection.FieldInfo" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="da708-210">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-210">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="da708-211">用于提供序列化服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-211">For providing serialization services.</span>
          </span>
          <span data-ttu-id="da708-212">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />， <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da708-212">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />, <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>