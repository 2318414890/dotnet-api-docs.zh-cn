<Type Name="ObjectManager" FullName="System.Runtime.Serialization.ObjectManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f77a6b554ad9912e28716321576075c42cd3f786" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36628898" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ObjectManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ObjectManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectManager" />
  <TypeSignature Language="F#" Value="type ObjectManager = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>在对象进行反序列化时对其进行跟踪。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在反序列化期间<xref:System.Runtime.Serialization.Formatter>查询<xref:System.Runtime.Serialization.ObjectManager>以确定是否对的序列化流中的某个对象的引用是指已被反序列化的对象 （后向引用），或尚未对象反序列化 （前向引用）。 如果序列化流中的引用是前向引用，则<xref:System.Runtime.Serialization.Formatter>可以注册与修正<xref:System.Runtime.Serialization.ObjectManager>。 如果序列化流中的引用为向后引用，<xref:System.Runtime.Serialization.Formatter>立即完成该引用。 修正是指完成在对象反序列化过程尚未完成的对象引用的过程。 所需的对象已反序列化后，<xref:System.Runtime.Serialization.ObjectManager>将完整的参考。  
  
 <xref:System.Runtime.Serialization.ObjectManager>遵循一组规则，规定修正的顺序。 实现的所有对象<xref:System.Runtime.Serialization.ISerializable>或具有<xref:System.Runtime.Serialization.ISerializationSurrogate>可以预计有通过它们传输的所有对象<xref:System.Runtime.Serialization.SerializationInfo>对象树反序列化时可用。 但是，父对象不能假设，所有子对象将被完全都完成完全反序列化时。 所有子对象将都会显示，但并非所有孙级对象一定都会存在。 如果对象需要执行某些操作，取决于在子对象上执行代码，它可以延迟这些操作，实现<xref:System.Runtime.Serialization.IDeserializationCallback>接口，并且仅在此接口上调用返回时执行代码。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Runtime.Serialization.ObjectManager>类来遍历对象图，一次遍历到每个对象。  
  
 [!code-csharp[ObjectManager#1](~/samples/snippets/csharp/VS_Snippets_Misc/ObjectManager/CS/ObjectManager.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectManager (System.Runtime.Serialization.ISurrogateSelector selector, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.ISurrogateSelector selector, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selector As ISurrogateSelector, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectManager(System::Runtime::Serialization::ISurrogateSelector ^ selector, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.ObjectManager : System.Runtime.Serialization.ISurrogateSelector * System.Runtime.Serialization.StreamingContext -&gt; System.Runtime.Serialization.ObjectManager" Usage="new System.Runtime.Serialization.ObjectManager (selector, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="selector" Type="System.Runtime.Serialization.ISurrogateSelector" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="selector">要使用的代理项选择器。 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> 确定在反序列化给定类型的对象时所使用的正确代理项。 在反序列化时，代理项选择器将利用通过流传输的信息创建对象的新实例。</param>
        <param name="context">流上下文。 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 未被 <see langword="ObjectManager" /> 使用，但却作为参数传递到任何实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 或具有 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /> 的对象。 这些对象可以根据要反序列化的信息的源来执行特定的操作。</param>
        <summary>初始化 <see cref="T:System.Runtime.Serialization.ObjectManager" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">调用方没有所要求的权限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用于提供序列化服务。 关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />。</permission>
      </Docs>
    </Member>
    <Member MemberName="DoFixups">
      <MemberSignature Language="C#" Value="public virtual void DoFixups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoFixups() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.DoFixups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DoFixups ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DoFixups();" />
      <MemberSignature Language="F#" Value="abstract member DoFixups : unit -&gt; unit&#xA;override this.DoFixups : unit -&gt; unit" Usage="objectManager.DoFixups " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>执行所有记录的修正。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 修正会执行任何适当的代理项，对象本身 (如果它实现<xref:System.Runtime.Serialization.ISerializable>)，或默认实现。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">修正未成功完成。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (long objectID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(int64 objectID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (objectID As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(long objectID);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : int64 -&gt; obj&#xA;override this.GetObject : int64 -&gt; obj" Usage="objectManager.GetObject objectID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectID" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="objectID">所请求对象的 ID。</param>
        <summary>返回具有指定对象 ID 的对象。</summary>
        <returns>如果先前已存储，则返回具有指定对象 ID 的对象；或者，如果尚未注册这种对象，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以注册一个对象，并将其通过调用发出的对象 ID<xref:System.Runtime.Serialization.ObjectManager.RegisterObject%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="objectID" /> 参数小于或等于零。</exception>
      </Docs>
    </Member>
    <Member MemberName="RaiseDeserializationEvent">
      <MemberSignature Language="C#" Value="public virtual void RaiseDeserializationEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseDeserializationEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RaiseDeserializationEvent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseDeserializationEvent();" />
      <MemberSignature Language="F#" Value="abstract member RaiseDeserializationEvent : unit -&gt; unit&#xA;override this.RaiseDeserializationEvent : unit -&gt; unit" Usage="objectManager.RaiseDeserializationEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>对任何实现 <see cref="T:System.Runtime.Serialization.IDeserializationCallback" /> 的注册对象引发反序列化事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseOnDeserializingEvent">
      <MemberSignature Language="C#" Value="public void RaiseOnDeserializingEvent (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseOnDeserializingEvent(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseOnDeserializingEvent (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseOnDeserializingEvent(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.RaiseOnDeserializingEvent : obj -&gt; unit" Usage="objectManager.RaiseOnDeserializingEvent obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">包含要调用的方法的类型实例。</param>
        <summary>调用使用 <see cref="T:System.Runtime.Serialization.OnDeserializingAttribute" /> 标记的方法。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RecordArrayElementFixup">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>记录数组中某个元素的链接地址信息，以便在稍后执行。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RecordArrayElementFixup">
      <MemberSignature Language="C#" Value="public virtual void RecordArrayElementFixup (long arrayToBeFixed, int index, long objectRequired);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordArrayElementFixup(int64 arrayToBeFixed, int32 index, int64 objectRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RecordArrayElementFixup (arrayToBeFixed As Long, index As Integer, objectRequired As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RecordArrayElementFixup(long arrayToBeFixed, int index, long objectRequired);" />
      <MemberSignature Language="F#" Value="abstract member RecordArrayElementFixup : int64 * int * int64 -&gt; unit&#xA;override this.RecordArrayElementFixup : int64 * int * int64 -&gt; unit" Usage="objectManager.RecordArrayElementFixup (arrayToBeFixed, index, objectRequired)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayToBeFixed" Type="System.Int64" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="objectRequired" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="arrayToBeFixed">用于记录修正的数组的 ID。</param>
        <param name="index">为其请求修正的 <c>arrayFixup</c> 中的索引。</param>
        <param name="objectRequired">当前数组元素在修正完成后将指向的对象的 ID。</param>
        <summary>记录数组中一个元素的修正。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 修正是指定数组的指定的元素。 中提供修正过程中使用的值`objectRequired`参数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="arrayToBeFixed" /> 或 <paramref name="objectRequired" /> 参数小于或等于零。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="index" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="RecordArrayElementFixup">
      <MemberSignature Language="C#" Value="public virtual void RecordArrayElementFixup (long arrayToBeFixed, int[] indices, long objectRequired);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordArrayElementFixup(int64 arrayToBeFixed, int32[] indices, int64 objectRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RecordArrayElementFixup (arrayToBeFixed As Long, indices As Integer(), objectRequired As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RecordArrayElementFixup(long arrayToBeFixed, cli::array &lt;int&gt; ^ indices, long objectRequired);" />
      <MemberSignature Language="F#" Value="abstract member RecordArrayElementFixup : int64 * int[] * int64 -&gt; unit&#xA;override this.RecordArrayElementFixup : int64 * int[] * int64 -&gt; unit" Usage="objectManager.RecordArrayElementFixup (arrayToBeFixed, indices, objectRequired)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayToBeFixed" Type="System.Int64" />
        <Parameter Name="indices" Type="System.Int32[]" />
        <Parameter Name="objectRequired" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="arrayToBeFixed">用于记录修正的数组的 ID。</param>
        <param name="indices">为其请求修正的多维数组中的索引。</param>
        <param name="objectRequired">数组元素在修正完成后将指向的对象的 ID。</param>
        <summary>记录数组中指定元素的修正，以便在稍后执行。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 修正是用于指定数组的指定元素。 中提供修正过程中使用的值`objectRequired`参数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="arrayToBeFixed" /> 或 <paramref name="objectRequired" /> 参数小于或等于零。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indices" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="RecordDelayedFixup">
      <MemberSignature Language="C#" Value="public virtual void RecordDelayedFixup (long objectToBeFixed, string memberName, long objectRequired);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordDelayedFixup(int64 objectToBeFixed, string memberName, int64 objectRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RecordDelayedFixup (objectToBeFixed As Long, memberName As String, objectRequired As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RecordDelayedFixup(long objectToBeFixed, System::String ^ memberName, long objectRequired);" />
      <MemberSignature Language="F#" Value="abstract member RecordDelayedFixup : int64 * string * int64 -&gt; unit&#xA;override this.RecordDelayedFixup : int64 * string * int64 -&gt; unit" Usage="objectManager.RecordDelayedFixup (objectToBeFixed, memberName, objectRequired)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectToBeFixed" Type="System.Int64" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="objectRequired" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="objectToBeFixed">需要对 <c>objectRequired</c> 的引用的对象的 ID。</param>
        <param name="memberName">将在其中执行修正的 <c>objectToBeFixed</c> 的成员名称。</param>
        <param name="objectRequired">
          <c>objectToBeFixed</c> 所需对象的 ID。</param>
        <summary>记录对象成员的修正，以便在稍后执行。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 修正适用于指定对象的指定成员。 要在修正过程中使用的值用作`objectRequired`自变量。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="objectToBeFixed" /> 或 <paramref name="objectRequired" /> 参数小于或等于零。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="memberName" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="RecordFixup">
      <MemberSignature Language="C#" Value="public virtual void RecordFixup (long objectToBeFixed, System.Reflection.MemberInfo member, long objectRequired);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordFixup(int64 objectToBeFixed, class System.Reflection.MemberInfo member, int64 objectRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RecordFixup (objectToBeFixed As Long, member As MemberInfo, objectRequired As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RecordFixup(long objectToBeFixed, System::Reflection::MemberInfo ^ member, long objectRequired);" />
      <MemberSignature Language="F#" Value="abstract member RecordFixup : int64 * System.Reflection.MemberInfo * int64 -&gt; unit&#xA;override this.RecordFixup : int64 * System.Reflection.MemberInfo * int64 -&gt; unit" Usage="objectManager.RecordFixup (objectToBeFixed, member, objectRequired)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectToBeFixed" Type="System.Int64" />
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="objectRequired" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="objectToBeFixed">需要对 <c>objectRequired</c> 对象的引用的对象的 ID。</param>
        <param name="member">将在其中执行修正的 <c>objectToBeFixed</c> 的成员。</param>
        <param name="objectRequired">
          <c>objectToBeFixed</c> 所需对象的 ID。</param>
        <summary>记录对象成员的修正，以便在稍后执行。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 修正适用于指定对象的指定成员。 要在修正过程中使用的值用作`objectRequired`参数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="objectToBeFixed" /> 或 <paramref name="objectRequired" /> 参数小于或等于零。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="member" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在反序列化对象时注册该对象。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public virtual void RegisterObject (object obj, long objectID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterObject(object obj, int64 objectID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterObject (obj As Object, objectID As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterObject(System::Object ^ obj, long objectID);" />
      <MemberSignature Language="F#" Value="abstract member RegisterObject : obj * int64 -&gt; unit&#xA;override this.RegisterObject : obj * int64 -&gt; unit" Usage="objectManager.RegisterObject (obj, objectID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="objectID" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="obj">要注册的对象。</param>
        <param name="objectID">要注册的对象的 ID。</param>
        <summary>在反序列化对象时注册该对象，并将其与 <paramref name="objectID" /> 相关联。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.ObjectManager> 将保留信息有关对象和其 id。 以后在反序列化期间<xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>可以用于确定是否已将特定的对象 ID 进行反序列化，或是否它是对尚未反的对象的前向引用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="obj" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="objectID" /> 参数小于或等于零。</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <paramref name="objectID" /> 已为 <paramref name="obj" /> 以外的对象进行了注册。</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterObject(object obj, int64 objectID, class System.Runtime.Serialization.SerializationInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterObject (obj As Object, objectID As Long, info As SerializationInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterObject(System::Object ^ obj, long objectID, System::Runtime::Serialization::SerializationInfo ^ info);" />
      <MemberSignature Language="F#" Value="member this.RegisterObject : obj * int64 * System.Runtime.Serialization.SerializationInfo -&gt; unit" Usage="objectManager.RegisterObject (obj, objectID, info)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="objectID" Type="System.Int64" />
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
      </Parameters>
      <Docs>
        <param name="obj">要注册的对象。</param>
        <param name="objectID">要注册的对象的 ID。</param>
        <param name="info">当 <c>obj</c> 实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 或具有 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /> 时使用 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。 <c>info</c> 将用任何所需的修复信息来完成，然后在所需的对象完成时传递给该对象。</param>
        <summary>在反序列化对象时注册该对象，同时将其与 <paramref name="objectID" /> 相关联并记录与其一起使用的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.ObjectManager> 将保留该信息有关对象和其 id。 以后在反序列化过程中，你可以使用<xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>发现是否特定的对象 ID 已反序列化，或者即使它是对尚未反的对象的前向引用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="obj" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="objectID" /> 参数小于或等于零。</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <paramref name="objectID" /> 已为 <paramref name="obj" /> 以外的对象进行了注册。</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info, long idOfContainingObj, System.Reflection.MemberInfo member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterObject(object obj, int64 objectID, class System.Runtime.Serialization.SerializationInfo info, int64 idOfContainingObj, class System.Reflection.MemberInfo member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterObject (obj As Object, objectID As Long, info As SerializationInfo, idOfContainingObj As Long, member As MemberInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterObject(System::Object ^ obj, long objectID, System::Runtime::Serialization::SerializationInfo ^ info, long idOfContainingObj, System::Reflection::MemberInfo ^ member);" />
      <MemberSignature Language="F#" Value="member this.RegisterObject : obj * int64 * System.Runtime.Serialization.SerializationInfo * int64 * System.Reflection.MemberInfo -&gt; unit" Usage="objectManager.RegisterObject (obj, objectID, info, idOfContainingObj, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="objectID" Type="System.Int64" />
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="idOfContainingObj" Type="System.Int64" />
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="obj">要注册的对象。</param>
        <param name="objectID">要注册的对象的 ID。</param>
        <param name="info">当 <c>obj</c> 实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 或具有 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /> 时使用 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。 <c>info</c> 将用任何所需的修复信息来完成，然后在所需的对象完成时传递给该对象。</param>
        <param name="idOfContainingObj">包含 <c>obj</c> 的对象的 ID。仅当 <c>obj</c> 是值类型时才需要此参数。</param>
        <param name="member">
          <c>obj</c> 所在的包含对象中的字段。 仅当 <c>obj</c> 是值类型时此参数才有意义。</param>
        <summary>在对象成员反序列化时注册该对象成员，同时将其与 <paramref name="objectID" /> 相关联并记录 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你需要提供`member`和`idOfContainingObj`参数如果`obj`是<xref:System.ValueType>由于的方法执行修正<xref:System.ValueType>对象。 要存储的信息的空间<xref:System.ValueType>分配内联使用其包含的对象。 但是，当<xref:System.ValueType>装箱要注册与<xref:System.Runtime.Serialization.ObjectManager>，它将失去与其包含的对象的连接。 若要确保修正的实例中出现<xref:System.ValueType>存储中包含的对象，不能在已装箱的实例，<xref:System.Runtime.Serialization.ObjectManager>保留一些额外信息。  
  
 <xref:System.Runtime.Serialization.ObjectManager> 将保留信息有关对象和其 id。 以后在反序列化期间<xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>可以用于发现是否已将特定的对象 ID 进行反序列化，或它是否对对象的前向引用不尚未反序列化。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="obj" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="objectID" /> 参数小于或等于零。</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <paramref name="objectID" /> 已经为 <paramref name="obj" /> 之外的对象注册，或者 <paramref name="member" /> 不为 <see cref="T:System.Reflection.FieldInfo" /> 且 <paramref name="member" /> 不为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info, long idOfContainingObj, System.Reflection.MemberInfo member, int[] arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterObject(object obj, int64 objectID, class System.Runtime.Serialization.SerializationInfo info, int64 idOfContainingObj, class System.Reflection.MemberInfo member, int32[] arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterObject (obj As Object, objectID As Long, info As SerializationInfo, idOfContainingObj As Long, member As MemberInfo, arrayIndex As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterObject(System::Object ^ obj, long objectID, System::Runtime::Serialization::SerializationInfo ^ info, long idOfContainingObj, System::Reflection::MemberInfo ^ member, cli::array &lt;int&gt; ^ arrayIndex);" />
      <MemberSignature Language="F#" Value="member this.RegisterObject : obj * int64 * System.Runtime.Serialization.SerializationInfo * int64 * System.Reflection.MemberInfo * int[] -&gt; unit" Usage="objectManager.RegisterObject (obj, objectID, info, idOfContainingObj, member, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="objectID" Type="System.Int64" />
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="idOfContainingObj" Type="System.Int64" />
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="arrayIndex" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="obj">要注册的对象。</param>
        <param name="objectID">要注册的对象的 ID。</param>
        <param name="info">当 <c>obj</c> 实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 或具有 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /> 时使用 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。 <c>info</c> 将用任何所需的修复信息来完成，然后在所需的对象完成时传递给该对象。</param>
        <param name="idOfContainingObj">包含 <c>obj</c> 的对象的 ID。仅当 <c>obj</c> 是值类型时才需要此参数。</param>
        <param name="member">
          <c>obj</c> 所在的包含对象中的字段。 仅当 <c>obj</c> 是值类型时此参数才有意义。</param>
        <param name="arrayIndex">如果 <c>obj</c> 为 <see cref="T:System.ValueType" /> 并且是数组成员，则 <c>arrayIndex</c> 包含 <c>obj</c> 所在数组中的索引。 如果 <c>obj</c> 不是 <see cref="T:System.ValueType" /> 或不是数组成员，则将忽略 <c>arrayIndex</c>。</param>
        <summary>在对象中包含的数组的成员进行反序列化时注册该成员，同时将其与 <paramref name="objectID" /> 相关联并记录 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你需要提供`member`和`idOfContainingObj`参数如果`obj`是<xref:System.ValueType>由于的方法执行修正<xref:System.ValueType>对象。 要存储的信息的空间<xref:System.ValueType>分配内联使用其包含的对象。 但是，当<xref:System.ValueType>装箱要注册与<xref:System.Runtime.Serialization.ObjectManager>，它将失去与其包含的对象的连接。 若要确保修正的实例中出现<xref:System.ValueType>存储中包含的对象，不能在已装箱的实例，<xref:System.Runtime.Serialization.ObjectManager>保留一些额外信息。  
  
 <xref:System.Runtime.Serialization.ObjectManager> 将保留信息有关对象和其 id。 以后在反序列化期间<xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>可以用于发现是否已将特定的对象 ID 进行反序列化，或它是否对对象的前向引用不尚未反序列化。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="obj" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="objectID" /> 参数小于或等于零。</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <paramref name="objectID" /> 已经为 <paramref name="obj" /> 之外的对象注册，或者 <paramref name="member" /> 不是 <see cref="T:System.Reflection.FieldInfo" /> 且 <paramref name="member" /> 不是 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>