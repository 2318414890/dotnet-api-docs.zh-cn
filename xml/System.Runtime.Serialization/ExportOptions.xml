<Type Name="ExportOptions" FullName="System.Runtime.Serialization.ExportOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4473d14d3686721b37e2bcf6396c06e1051f0867" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37627355" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ExportOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExportOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ExportOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ExportOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExportOptions" />
  <TypeSignature Language="F#" Value="type ExportOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示可为 <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> 设置的选项。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.XsdDataContractExporter> 用于从类型或程序集中生成 XSD 架构。 还可以使用 <xref:System.Runtime.Serialization.XsdDataContractImporter> 从架构文档中生成 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 代码。  
  
 有关导入和导出架构的详细信息，请参阅[架构导入和导出](~/docs/framework/wcf/feature-details/schema-import-and-export.md)并[从类导出架构](~/docs/framework/wcf/feature-details/exporting-schemas-from-classes.md)。  
  
 <xref:System.Runtime.Serialization.ExportOptions.KnownTypes%2A> 使用 <xref:System.Runtime.Serialization.DataContractSerializer> 属性来包含可能在对象图中读取的类型。 有关数据协定和已知的类型的详细信息，请参阅[Data Contract Known Types](~/docs/framework/wcf/feature-details/data-contract-known-types.md)。  
  
 有关数据协定的详细信息，请参阅[Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md)。  
  
   
  
## Examples  
 下面的示例创建 <xref:System.Runtime.Serialization.ExportOptions> 类的实例，并将某种类型 (`Possessions`) 添加到 <xref:System.Runtime.Serialization.ExportOptions.KnownTypes%2A> 属性返回的集合中。  
  
 <xref:System.Runtime.Serialization.XsdDataContractExporter> 随后会导出这些类型的架构，包括添加到集合中的 `Possessions` 类型。  
  
 [!code-csharp[XsdDataContractExporter#0](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractexporter/cs/overview.cs#0)]
 [!code-vb[XsdDataContractExporter#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractexporter/vb/overview.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractImporter" />
    <altmember cref="T:System.Runtime.Serialization.ExportOptions" />
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ExportOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Runtime.Serialization.ExportOptions" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContractSurrogate">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ExportOptions.DataContractSurrogate" />
      <MemberSignature Language="VB.NET" Value="Public Property DataContractSurrogate As IDataContractSurrogate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::IDataContractSurrogate ^ DataContractSurrogate { System::Runtime::Serialization::IDataContractSurrogate ^ get(); void set(System::Runtime::Serialization::IDataContractSurrogate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataContractSurrogate : System.Runtime.Serialization.IDataContractSurrogate with get, set" Usage="System.Runtime.Serialization.ExportOptions.DataContractSurrogate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.IDataContractSurrogate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置序列化代理项。</summary>
        <value>一个 <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 接口实现，可用于自定义如何为特定类型导出 XML 架构表示形式。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KnownTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Type&gt; KnownTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Type&gt; KnownTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ExportOptions.KnownTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KnownTypes As Collection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;Type ^&gt; ^ KnownTypes { System::Collections::ObjectModel::Collection&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KnownTypes : System.Collections.ObjectModel.Collection&lt;Type&gt;" Usage="System.Runtime.Serialization.ExportOptions.KnownTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在序列化或反序列化过程中可能会遇到的类型的集合。</summary>
        <value>一个 <see langword="KnownTypes" /> 集合，它包含在序列化或反序列化过程中可能会遇到的类型。 将为此集合中由 <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> 指定的所有类型导出 XML 架构表示形式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.ExportOptions.KnownTypes%2A> 使用 <xref:System.Runtime.Serialization.DataContractSerializer> 属性来包含可能在对象图中读取的类型（是使用 <xref:System.Runtime.Serialization.DataContractSerializer.KnownTypes%2A?displayProperty=nameWithType> 属性设置的）。  
  
 有关数据协定和已知的类型的详细信息，请参阅[Data Contract Known Types](~/docs/framework/wcf/feature-details/data-contract-known-types.md)。  
  
   
  
## Examples  
 下面的示例创建 <xref:System.Runtime.Serialization.ExportOptions> 类的实例，并将某种类型添加到 <xref:System.Runtime.Serialization.ExportOptions.KnownTypes%2A> 属性返回的集合中。  
  
 [!code-csharp[XsdDataContractExporter#1](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractexporter/cs/overview.cs#1)]
 [!code-vb[XsdDataContractExporter#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractexporter/vb/overview.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes" />
      </Docs>
    </Member>
  </Members>
</Type>