<Type Name="DataContractSerializer" FullName="System.Runtime.Serialization.DataContractSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bc913a5d866273af53de23a114f05e488d39931f" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataContractSerializer : System.Runtime.Serialization.XmlObjectSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataContractSerializer extends System.Runtime.Serialization.XmlObjectSerializer" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.DataContractSerializer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataContractSerializer&#xA;Inherits XmlObjectSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContractSerializer sealed : System::Runtime::Serialization::XmlObjectSerializer" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Serialization.XmlObjectSerializer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a6f47-101">使用提供的数据协定，将类型实例序列化和反序列化为 XML 流或文档。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a6f47-101">Serializes and deserializes an instance of a type into an XML stream or document using a supplied data contract.</span>
      </span>
      <span data-ttu-id="a6f47-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a6f47-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f47-103">使用 <xref:System.Runtime.Serialization.DataContractSerializer> 类可以将类型实例序列化和反序列化为 XML 流或文档。</span><span class="sxs-lookup"><span data-stu-id="a6f47-103">Use the <xref:System.Runtime.Serialization.DataContractSerializer> class to serialize and deserialize instances of a type into an XML stream or document.</span></span> <span data-ttu-id="a6f47-104">例如，可以使用包含重要数据（如名称和地址）的属性创建一个名为 `Person` 的类型。</span><span class="sxs-lookup"><span data-stu-id="a6f47-104">For example, you can create a type named `Person` with properties that contain essential data, such as a name and address.</span></span> <span data-ttu-id="a6f47-105">然后，可以创建和操作一个 `Person` 类实例，并在 XML 文档中写入所有其属性值以便于以后检索，或者在 XML 流中写入这些值以立即进行传输。</span><span class="sxs-lookup"><span data-stu-id="a6f47-105">You can then create and manipulate an instance of the `Person` class and write all of its property values in an XML document for later retrieval, or in an XML stream for immediate transport.</span></span> <span data-ttu-id="a6f47-106">最重要的是，<xref:System.Runtime.Serialization.DataContractSerializer>用于序列化和反序列化 Windows Communication Foundation (WCF) 消息中发送的数据。</span><span class="sxs-lookup"><span data-stu-id="a6f47-106">Most important, the <xref:System.Runtime.Serialization.DataContractSerializer> is used to serialize and deserialize data sent in Windows Communication Foundation (WCF) messages.</span></span> <span data-ttu-id="a6f47-107">通过将 <xref:System.Runtime.Serialization.DataContractAttribute> 属性 (Attribute) 应用于类，而将 <xref:System.Runtime.Serialization.DataMemberAttribute> 属性 (Attribute) 应用于类成员，可以指定要序列化的属性 (Property) 和字段。</span><span class="sxs-lookup"><span data-stu-id="a6f47-107">Apply the <xref:System.Runtime.Serialization.DataContractAttribute> attribute to classes, and the <xref:System.Runtime.Serialization.DataMemberAttribute> attribute to class members to specify properties and fields that are serialized.</span></span>  
  
 <span data-ttu-id="a6f47-108">可以序列化的类型列表，请参阅[类型受数据协定序列化程序](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)。</span><span class="sxs-lookup"><span data-stu-id="a6f47-108">For a list of types that can be serialized, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).</span></span>  
  
 <span data-ttu-id="a6f47-109">要使用 <xref:System.Runtime.Serialization.DataContractSerializer>，请先创建一个类实例和适于写入或读取格式的对象；例如 <xref:System.Xml.XmlDictionaryWriter> 实例。</span><span class="sxs-lookup"><span data-stu-id="a6f47-109">To use the <xref:System.Runtime.Serialization.DataContractSerializer>, first create an instance of a class and an object appropriate to writing or reading the format; for example, an instance of the <xref:System.Xml.XmlDictionaryWriter>.</span></span> <span data-ttu-id="a6f47-110">然后调用 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> 方法以保留数据。</span><span class="sxs-lookup"><span data-stu-id="a6f47-110">Then call the <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> method to persist the data.</span></span> <span data-ttu-id="a6f47-111">要检索数据，请创建一个适于读取数据格式的对象（如 XML 文档的 <xref:System.Xml.XmlDictionaryReader>），然后调用 <xref:System.Runtime.Serialization.DataContractSerializer.ReadObject%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a6f47-111">To retrieve data, create an object appropriate to reading the data format (such as an <xref:System.Xml.XmlDictionaryReader> for an XML document) and call the <xref:System.Runtime.Serialization.DataContractSerializer.ReadObject%2A> method.</span></span>  
  
 <span data-ttu-id="a6f47-112">有关使用<xref:System.Runtime.Serialization.DataContractSerializer>，请参阅[序列化和反序列化](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md)。</span><span class="sxs-lookup"><span data-stu-id="a6f47-112">For more information about using the <xref:System.Runtime.Serialization.DataContractSerializer>, see [Serialization and Deserialization](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md).</span></span>  
  
 <span data-ttu-id="a6f47-113">你可以设置使用数据协定序列化程序的类型[ &lt;dataContractSerializer&gt; ](~/docs/framework/configure-apps/file-schema/wcf/datacontractserializer-element.md)客户端应用程序配置文件中的元素。</span><span class="sxs-lookup"><span data-stu-id="a6f47-113">You can set the type of a data contract serializer using the [&lt;dataContractSerializer&gt;](~/docs/framework/configure-apps/file-schema/wcf/datacontractserializer-element.md) element in a client application configuration file.</span></span>  
  
## <a name="preparing-classes-for-serialization-or-deserialization"></a><span data-ttu-id="a6f47-114">准备序列化或反序列化类</span><span class="sxs-lookup"><span data-stu-id="a6f47-114">Preparing Classes for Serialization or Deserialization</span></span>  
 <span data-ttu-id="a6f47-115"><xref:System.Runtime.Serialization.DataContractSerializer> 与 <xref:System.Runtime.Serialization.DataContractAttribute> 和 <xref:System.Runtime.Serialization.DataMemberAttribute> 类结合使用。</span><span class="sxs-lookup"><span data-stu-id="a6f47-115">The <xref:System.Runtime.Serialization.DataContractSerializer> is used in combination with the <xref:System.Runtime.Serialization.DataContractAttribute> and <xref:System.Runtime.Serialization.DataMemberAttribute> classes.</span></span> <span data-ttu-id="a6f47-116">要准备序列化某个类，请将 <xref:System.Runtime.Serialization.DataContractAttribute> 应用于该类。</span><span class="sxs-lookup"><span data-stu-id="a6f47-116">To prepare a class for serialization, apply the <xref:System.Runtime.Serialization.DataContractAttribute> to the class.</span></span>  <span data-ttu-id="a6f47-117">对于返回要序列化的数据的类的每个成员，请应用 <xref:System.Runtime.Serialization.DataMemberAttribute>。</span><span class="sxs-lookup"><span data-stu-id="a6f47-117">For each member of the class that returns data that you want to serialize, apply the <xref:System.Runtime.Serialization.DataMemberAttribute>.</span></span> <span data-ttu-id="a6f47-118">您可以序列化字段和属性，而无论其可访问性级别是什么：private、protected、internal、protected internal 或 public。</span><span class="sxs-lookup"><span data-stu-id="a6f47-118">You can serialize fields and properties, regardless of accessibility: private, protected, internal, protected internal, or public.</span></span>  
  
 <span data-ttu-id="a6f47-119">例如，您的架构指定具有 `Customer` 属性的 `ID`，但现有应用程序已使用一个名为 `Person` 且具有 `Name` 属性的类型。</span><span class="sxs-lookup"><span data-stu-id="a6f47-119">For example, your schema specifies a `Customer` with an `ID` property, but you already have an existing application that uses a type named `Person` with a `Name` property.</span></span> <span data-ttu-id="a6f47-120">要创建一个符合协定的类型，请先将 <xref:System.Runtime.Serialization.DataContractAttribute> 应用于该类。</span><span class="sxs-lookup"><span data-stu-id="a6f47-120">To create a type that conforms to the contract, first apply the <xref:System.Runtime.Serialization.DataContractAttribute> to the class.</span></span>  <span data-ttu-id="a6f47-121">然后，将 <xref:System.Runtime.Serialization.DataMemberAttribute> 应用于每个要序列化的字段或属性。</span><span class="sxs-lookup"><span data-stu-id="a6f47-121">Then apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to every field or property that you want to serialize.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6f47-122">可以将 <xref:System.Runtime.Serialization.DataMemberAttribute> 同时应用于私有和公共成员。</span><span class="sxs-lookup"><span data-stu-id="a6f47-122">You can apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to both private and public members.</span></span>  
  
 <span data-ttu-id="a6f47-123">XML 的最终格式不需要为文本。</span><span class="sxs-lookup"><span data-stu-id="a6f47-123">The final format of the XML need not be text.</span></span> <span data-ttu-id="a6f47-124">相反，<xref:System.Runtime.Serialization.DataContractSerializer> 以 XML infoset 形式写入数据，这样，即可以 <xref:System.Xml.XmlReader> 和 <xref:System.Xml.XmlWriter> 可识别的任意格式写入数据。</span><span class="sxs-lookup"><span data-stu-id="a6f47-124">Instead, the <xref:System.Runtime.Serialization.DataContractSerializer> writes the data as an XML infoset, which allows you to write the data to any format recognized by the <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlWriter>.</span></span> <span data-ttu-id="a6f47-125">建议您使用 <xref:System.Xml.XmlDictionaryReader> 和 <xref:System.Xml.XmlDictionaryWriter> 类读取和写入数据，因为这两个类都经过优化可与 <xref:System.Runtime.Serialization.DataContractSerializer> 一起使用。</span><span class="sxs-lookup"><span data-stu-id="a6f47-125">It is recommended that you use the <xref:System.Xml.XmlDictionaryReader> and <xref:System.Xml.XmlDictionaryWriter> classes to read and write, because both are optimized to work with the <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span>  
  
 <span data-ttu-id="a6f47-126">如果反序列化进行或正在使用具有字段或属性必须在序列化之前填充的类，请使用回调属性中所述[版本容错序列化回调](~/docs/framework/wcf/feature-details/version-tolerant-serialization-callbacks.md)。</span><span class="sxs-lookup"><span data-stu-id="a6f47-126">If you are creating a class that has fields or properties that must be populated before the serialization or deserialization occurs, use callback attributes, as described in [Version-Tolerant Serialization Callbacks](~/docs/framework/wcf/feature-details/version-tolerant-serialization-callbacks.md).</span></span>  
  
## <a name="adding-to-the-collection-of-known-types"></a><span data-ttu-id="a6f47-127">添加到已知类型的集合中</span><span class="sxs-lookup"><span data-stu-id="a6f47-127">Adding to the Collection of Known Types</span></span>  
 <span data-ttu-id="a6f47-128">在序列化或反序列化对象时，<xref:System.Runtime.Serialization.DataContractSerializer> 必须“已知”该类型。</span><span class="sxs-lookup"><span data-stu-id="a6f47-128">When serializing or deserializing an object, it is required that the type is "known" to the <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span> <span data-ttu-id="a6f47-129">首先，创建一个实现 <xref:System.Collections.Generic.IEnumerable%601>（如 <xref:System.Collections.Generic.List%601>）的类实例，并将已知类型添加到集合中。</span><span class="sxs-lookup"><span data-stu-id="a6f47-129">Begin by creating an instance of a class that implements <xref:System.Collections.Generic.IEnumerable%601> (such as <xref:System.Collections.Generic.List%601>) and adding the known types to the collection.</span></span> <span data-ttu-id="a6f47-130">然后，使用接受 <xref:System.Runtime.Serialization.DataContractSerializer>（例如，<xref:System.Collections.Generic.IEnumerable%601>）的重载之一创建 <xref:System.Runtime.Serialization.DataContractSerializer.%23ctor%28System.Type%2CSystem.Collections.Generic.IEnumerable%7BSystem.Type%7D%29> 的实例。</span><span class="sxs-lookup"><span data-stu-id="a6f47-130">Then create an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> using one of the overloads that takes the <xref:System.Collections.Generic.IEnumerable%601> (for example, <xref:System.Runtime.Serialization.DataContractSerializer.%23ctor%28System.Type%2CSystem.Collections.Generic.IEnumerable%7BSystem.Type%7D%29>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6f47-131">与其他基元类型不同<xref:System.DateTimeOffset>结构不是默认情况下，已知的类型，因此它必须手动添加到已知类型列表 (请参阅[数据协定已知类型](~/docs/framework/wcf/feature-details/data-contract-known-types.md))。</span><span class="sxs-lookup"><span data-stu-id="a6f47-131">Unlike other primitive types, the <xref:System.DateTimeOffset> structure is not a known type by default, so it must be manually added to the list of known types (see [Data Contract Known Types](~/docs/framework/wcf/feature-details/data-contract-known-types.md)).</span></span>  
  
## <a name="forward-compatibility"></a><span data-ttu-id="a6f47-132">向前兼容性</span><span class="sxs-lookup"><span data-stu-id="a6f47-132">Forward Compatibility</span></span>  
 <span data-ttu-id="a6f47-133"><xref:System.Runtime.Serialization.DataContractSerializer> 理解旨在与将来版本保持兼容的数据协定。</span><span class="sxs-lookup"><span data-stu-id="a6f47-133">The <xref:System.Runtime.Serialization.DataContractSerializer> understands data contracts that have been designed to be compatible with future versions of the contract.</span></span> <span data-ttu-id="a6f47-134">这些类型实现了 <xref:System.Runtime.Serialization.IExtensibleDataObject> 接口。</span><span class="sxs-lookup"><span data-stu-id="a6f47-134">Such types implement the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface.</span></span> <span data-ttu-id="a6f47-135">此接口具有 <xref:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData%2A> 属性，该属性返回 <xref:System.Runtime.Serialization.ExtensionDataObject> 对象。</span><span class="sxs-lookup"><span data-stu-id="a6f47-135">The interface features the <xref:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData%2A> property that returns an <xref:System.Runtime.Serialization.ExtensionDataObject> object.</span></span> <span data-ttu-id="a6f47-136">有关详细信息，请参阅[向前兼容的数据协定](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md)。</span><span class="sxs-lookup"><span data-stu-id="a6f47-136">For more information, see [Forward-Compatible Data Contracts](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md).</span></span>  
  
## <a name="running-under-partial-trust"></a><span data-ttu-id="a6f47-137">在部分信任模式下运行</span><span class="sxs-lookup"><span data-stu-id="a6f47-137">Running under Partial Trust</span></span>  
 <span data-ttu-id="a6f47-138">在反序列化期间实例化目标对象时，<xref:System.Runtime.Serialization.DataContractSerializer> 不调用目标对象的构造函数。</span><span class="sxs-lookup"><span data-stu-id="a6f47-138">When instantiating the target object during deserialization, the <xref:System.Runtime.Serialization.DataContractSerializer> does not call the constructor of the target object.</span></span> <span data-ttu-id="a6f47-139">如果创作 *[DataContract]* 类型可从部分信任访问 (也就是说，为公共的; 而在程序集具有`AllowPartiallyTrustedCallers`应用属性) 且执行某些安全相关的操作，您必须知道，不调用构造函数。</span><span class="sxs-lookup"><span data-stu-id="a6f47-139">If you author a *[DataContract]* type that is accessible from partial trust (that is, it is public and in an assembly that has the `AllowPartiallyTrustedCallers` attribute applied) and that performs some security-related actions, you must be aware that the constructor is not called.</span></span> <span data-ttu-id="a6f47-140">特别是，下面的方法无效：</span><span class="sxs-lookup"><span data-stu-id="a6f47-140">In particular, the following techniques do not work:</span></span>  
  
-   <span data-ttu-id="a6f47-141">如果尝试通过将构造函数指定为内部或私有或者将 `LinkDemand` 添加到构造函数中来限制部分信任访问；在部分信任模式下进行反序列化期间，这两种方法都没有任何效果。</span><span class="sxs-lookup"><span data-stu-id="a6f47-141">If you try to restrict partial trust access by making the constructor internal or private, or by adding a `LinkDemand` to the constructor -- neither of these have any effect during deserialization under partial trust.</span></span>  
  
-   <span data-ttu-id="a6f47-142">如果编码的类假定构造函数已运行，该类可能会进入一种可被利用的无效内部状态。</span><span class="sxs-lookup"><span data-stu-id="a6f47-142">If you code the class that assumes the constructor has run, the class may get into an invalid internal state that is exploitable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f47-143">下面的示例代码演示一种名为 `Person` 且由 <xref:System.Runtime.Serialization.DataContractSerializer> 序列化的类型。</span><span class="sxs-lookup"><span data-stu-id="a6f47-143">The following example code shows a type named `Person` that is serialized by the <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span> <span data-ttu-id="a6f47-144">它将 <xref:System.Runtime.Serialization.DataContractAttribute> 特性应用于类并将 <xref:System.Runtime.Serialization.DataMemberAttribute> 应用于成员，以便向 <xref:System.Runtime.Serialization.DataContractSerializer> 指示要序列化的内容。</span><span class="sxs-lookup"><span data-stu-id="a6f47-144">The <xref:System.Runtime.Serialization.DataContractAttribute> attribute is applied to the class, and the <xref:System.Runtime.Serialization.DataMemberAttribute> is applied to members to instruct the <xref:System.Runtime.Serialization.DataContractSerializer> what to serialize.</span></span>  
  
 [!code-csharp[DataContractSerializer#0](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#0)]
 [!code-vb[DataContractSerializer#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#0)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="a6f47-145">此类的实例都是线程安全的实现与使用的实例时除外<see cref="T:System.Runtime.Serialization.IDataContractSurrogate" />或<see cref="T:System.Runtime.Serialization.DataContractResolver" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a6f47-145">Instances of this class are thread safe except when the instance is used with an implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> or <see cref="T:System.Runtime.Serialization.DataContractResolver" />.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
    <altmember cref="T:System.Runtime.Serialization.DataContractAttribute" />
    <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
    <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="a6f47-146">正在序列化的类型不符合数据协定规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-146">The type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="a6f47-147">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 特性未应用于该类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-147">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="a6f47-148">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-148">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="a6f47-149">序列化或反序列化的实例的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-149">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-150">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 类的新实例，以便序列化或反序列化指定类型的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-150">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6f47-151">下面的示例创建一个 <xref:System.Runtime.Serialization.DataContractSerializer> 实例，以便指定要序列化或反序列化的类型。</span><span class="sxs-lookup"><span data-stu-id="a6f47-151">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize.</span></span>  
  
 [!code-csharp[DataContractSerializer#8](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#8)]
 [!code-vb[DataContractSerializer#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="a6f47-152">序列化或反序列化的实例的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-152">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="a6f47-153">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的一个 <see cref="T:System.Type" />，其中包含可在对象图中呈现的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-153">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the types that may be present in the object graph.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-154">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 类的新实例，以便序列化或反序列化指定类型的对象以及可在对象图中呈现的已知类型的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-154">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type, and a collection of known types that may be present in the object graph.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6f47-155">下面的示例创建一个 <xref:System.Runtime.Serialization.DataContractSerializer> 实例，它指定了要序列化或反序列化的类型以及可在对象图中使用的已知类型的集合。</span><span class="sxs-lookup"><span data-stu-id="a6f47-155">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize and a collection of known types that can be used in the object graph.</span></span>  
  
 [!code-csharp[DataContractSerializer#9](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#9)]
 [!code-vb[DataContractSerializer#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes" />
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Runtime.Serialization.DataContractSerializerSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Runtime.Serialization.DataContractSerializerSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Runtime::Serialization::DataContractSerializerSettings ^ settings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="settings" Type="System.Runtime.Serialization.DataContractSerializerSettings" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="a6f47-156">被序列化或反序列化的实例类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-156">The type of the instance to serialize or deserialize.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="a6f47-157">序列化程序设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-157">The serializer settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-158">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 类的新实例，以便序列化或反序列化指定类型和设置的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-158">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type and settings.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, string rootName, string rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string rootName, string rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::String ^ rootName, System::String ^ rootNamespace);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="a6f47-159">序列化或反序列化的实例的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-159">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="a6f47-160">XML 元素的名称，该元素包含要序列化或反序列化的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-160">The name of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="a6f47-161">XML 元素的命名空间，该元素包含要序列化或反序列化的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-161">The namespace of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-162">使用提供的 XML 根元素和命名空间初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 类的新实例，以便序列化或反序列化指定类型的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-162">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type using the supplied XML root element and namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6f47-163">下面的示例创建一个 <xref:System.Runtime.Serialization.DataContractSerializer> 实例，它指定了要序列化或反序列化的类型以及在 XML 文档中读取或写入的 XML 名称和命名空间。</span><span class="sxs-lookup"><span data-stu-id="a6f47-163">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize as well as the XML name and namespace to read from or write to the XML document.</span></span>  
  
 [!code-csharp[DataContractSerializer#10](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#10)]
 [!code-vb[DataContractSerializer#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Xml::XmlDictionaryString ^ rootName, System::Xml::XmlDictionaryString ^ rootNamespace);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="a6f47-164">序列化或反序列化的实例的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-164">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="a6f47-165">一个包含内容的根元素名称的 <see cref="T:System.Xml.XmlDictionaryString" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-165">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the root element name of the content.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="a6f47-166">一个包含根元素的命名空间的 <see cref="T:System.Xml.XmlDictionaryString" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-166">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace of the root element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-167">使用通过类型为 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 的参数指定的 XML 根元素和命名空间初始化 <see cref="T:System.Xml.XmlDictionaryString" /> 类的新实例，以便序列化或反序列化指定类型的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-167">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type using the XML root element and namespace specified through the parameters of type <see cref="T:System.Xml.XmlDictionaryString" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6f47-168">下面的示例创建一个 <xref:System.Runtime.Serialization.DataContractSerializer> 实例，它指定了要序列化或反序列化的类型以及在 XML 文档中读取或写入的 XML 名称和命名空间（作为 <xref:System.Xml.XmlDictionaryString> 参数）。</span><span class="sxs-lookup"><span data-stu-id="a6f47-168">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize as well as the XML name and namespace (as <xref:System.Xml.XmlDictionaryString> objects) to read from or write to the XML document.</span></span>  
  
 [!code-csharp[DataContractSerializer#11](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#11)]
 [!code-vb[DataContractSerializer#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, string rootName, string rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string rootName, string rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::String ^ rootName, System::String ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="a6f47-169">序列化或反序列化的实例的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-169">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="a6f47-170">内容的根元素名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-170">The root element name of the content.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="a6f47-171">根元素的命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-171">The namespace of the root element.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="a6f47-172">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的一个 <see cref="T:System.Type" />，其中包含可在对象图中呈现的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-172">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the types that may be present in the object graph.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-173">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 类的新实例，以便序列化或反序列化指定类型的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-173">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="a6f47-174">此方法还在两个字符串参数中指定根 XML 元素和命名空间，并指定了可在对象图中呈现的已知类型的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-174">This method also specifies the root XML element and namespace in two string parameters as well as a list of known types that may be present in the object graph.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6f47-175">下面的示例创建一个 <xref:System.Runtime.Serialization.DataContractSerializer> 实例，它指定了要序列化或反序列化的类型以及在 XML 文档中读取或写入的 XML 名称和命名空间。</span><span class="sxs-lookup"><span data-stu-id="a6f47-175">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize as well as the XML name and namespace to read from or write to the XML document.</span></span> <span data-ttu-id="a6f47-176">该代码还创建一个 <xref:System.Collections.Generic.IEnumerable%601> 实例，以包含在序列化或反序列化期间使用的已知类型。</span><span class="sxs-lookup"><span data-stu-id="a6f47-176">The code also creates an instance of a <xref:System.Collections.Generic.IEnumerable%601> to contain the known types used during serialization or deserialization.</span></span>  
  
 [!code-csharp[DataContractSerializer#12](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#12)]
 [!code-vb[DataContractSerializer#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes" />
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Xml::XmlDictionaryString ^ rootName, System::Xml::XmlDictionaryString ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="a6f47-177">序列化或反序列化的实例的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-177">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="a6f47-178">一个包含内容的根元素名称的 <see cref="T:System.Xml.XmlDictionaryString" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-178">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the root element name of the content.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="a6f47-179">一个包含根元素的命名空间的 <see cref="T:System.Xml.XmlDictionaryString" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-179">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace of the root element.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="a6f47-180">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的一个 <see cref="T:System.Type" />，其中包含可在对象图中呈现的已知类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-180">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-181">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 类的新实例，以便序列化或反序列化指定类型的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-181">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="a6f47-182">此方法还在两个 <see cref="T:System.Xml.XmlDictionaryString" /> 参数中指定根 XML 元素和命名空间，并指定了可在对象图中呈现的已知类型的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-182">This method also specifies the root XML element and namespace in two <see cref="T:System.Xml.XmlDictionaryString" /> parameters as well as a list of known types that may be present in the object graph.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6f47-183">下面的示例创建一个 <xref:System.Runtime.Serialization.DataContractSerializer> 实例，它指定了要序列化或反序列化的类型以及在 XML 文档中读取或写入的 XML 名称和命名空间（作为 <xref:System.Xml.XmlDictionaryString> 参数）。</span><span class="sxs-lookup"><span data-stu-id="a6f47-183">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize as well as the XML name and namespace (as <xref:System.Xml.XmlDictionaryString> objects) to read from or write to the XML document.</span></span> <span data-ttu-id="a6f47-184">该代码还创建一个 <xref:System.Collections.Generic.IEnumerable%601> 实例，以包含在序列化或反序列化期间使用的已知类型。</span><span class="sxs-lookup"><span data-stu-id="a6f47-184">The code also creates an instance of a <xref:System.Collections.Generic.IEnumerable%601> to contain the known types used during serialization or deserialization.</span></span>  
  
 [!code-csharp[DataContractSerializer#13](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#13)]
 [!code-vb[DataContractSerializer#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes" />
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="a6f47-185">序列化或反序列化的实例的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-185">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="a6f47-186">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的一个 <see cref="T:System.Type" />，其中包含可在对象图中呈现的已知类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-186">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="a6f47-187">图中要序列化或反序列化的最大项数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-187">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
          <span data-ttu-id="a6f47-188">默认值为 <see cref="F:System.Int32.MaxValue" /> 属性返回的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-188">The default is the value returned by the <see cref="F:System.Int32.MaxValue" /> property.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="a6f47-189">要在序列化和反序列化时忽略类型扩展提供的数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-189">
              <see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="preserveObjectReferences">
          <span data-ttu-id="a6f47-190">要使用非标准的 XML 结构来保留对象引用数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-190">
              <see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataContractSurrogate">
          <span data-ttu-id="a6f47-191">一个用于自定义序列化过程的 <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-191">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-192">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 类的新实例，以便序列化或反序列化指定类型的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-192">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="a6f47-193">此方法还指定了可在对象图中呈现的已知类型的列表、图中要序列化的最大项数、指定忽略意外数据的参数、是否使用非标准的 XML 结构来保留对象引用数据以及自定义序列化的代理项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-193">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, and a surrogate for custom serialization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6f47-194">下面的示例创建一个 <xref:System.Runtime.Serialization.DataContractSerializer> 实例以指定要序列化或反序列化的类型，并且还创建了一个 <xref:System.Collections.Generic.IEnumerable%601> 实例以包含在序列化或反序列化期间使用的已知类型。</span><span class="sxs-lookup"><span data-stu-id="a6f47-194">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize and an instance of a <xref:System.Collections.Generic.IEnumerable%601> to contain the known types used during serialization or deserialization.</span></span> <span data-ttu-id="a6f47-195">此代码还设置`ignoreExtensionDataObject`和`preserveObjectReferences`参数`true`，并指定的实现<xref:System.Runtime.Serialization.IDataContractSurrogate>接口来处理旧类型 (类型不具有<xref:System.Runtime.Serialization.DataContractAttribute>应用属性)。</span><span class="sxs-lookup"><span data-stu-id="a6f47-195">The code also sets the `ignoreExtensionDataObject` and `preserveObjectReferences` parameters to `true`, and specifies an implementation of the <xref:System.Runtime.Serialization.IDataContractSurrogate> interface to handle legacy types (types that do not have the <xref:System.Runtime.Serialization.DataContractAttribute> attribute applied).</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="a6f47-196"><xref:System.Runtime.Serialization.IDataContractSurrogate> 文档。</span><span class="sxs-lookup"><span data-stu-id="a6f47-196"> the <xref:System.Runtime.Serialization.IDataContractSurrogate> documentation.</span></span>  
  
 [!code-csharp[DataContractSerializer#14](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#14)]
 [!code-vb[DataContractSerializer#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a6f47-197">项数超出了最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-197">The number of items exceeds the maximum value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
        <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
        <altmember cref="T:System.Runtime.Serialization.IDataContractSurrogate" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, System.Runtime.Serialization.DataContractResolver dataContractResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, class System.Runtime.Serialization.DataContractResolver dataContractResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate, System::Runtime::Serialization::DataContractResolver ^ dataContractResolver);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
        <Parameter Name="dataContractResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="a6f47-198">序列化或反序列化的实例的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-198">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="a6f47-199">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的一个 <see cref="T:System.Type" />，其中包含可在对象图中呈现的已知类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-199">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="a6f47-200">图中要序列化或反序列化的最大项数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-200">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
          <span data-ttu-id="a6f47-201">默认值为 <see cref="F:System.Int32.MaxValue" /> 属性返回的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-201">The default is the value returned by the <see cref="F:System.Int32.MaxValue" /> property.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="a6f47-202">要在序列化和反序列化时忽略类型扩展提供的数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-202">
              <see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="preserveObjectReferences">
          <span data-ttu-id="a6f47-203">要使用非标准的 XML 结构来保留对象引用数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-203">
              <see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataContractSurrogate">
          <span data-ttu-id="a6f47-204">一个用于自定义序列化过程的 <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-204">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span>
          </span>
        </param>
        <param name="dataContractResolver">
          <span data-ttu-id="a6f47-205">用于将 <see langword="xsi:type" /> 声明映射到数据协定类型的 <see cref="T:System.Runtime.Serialization.DataContractResolver" /> 的实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-205">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> to map <see langword="xsi:type" /> declarations to data contract types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-206">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 类的新实例，以便序列化或反序列化指定类型的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-206">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="a6f47-207">此方法还指定了可在对象图中呈现的已知类型的列表、图中要序列化的最大项数、要忽略意外数据的参数、是否使用非标准的 XML 构造来保留图中的对象引用数据、自定义序列化的代理项以及在运行时映射 <see langword="xsi:type" /> 声明的备选方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-207">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, and an alternative for mapping <see langword="xsi:type" /> declarations at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="a6f47-208">此方法不是在 Windows 应用商店应用中可用的。</span><span class="sxs-lookup"><span data-stu-id="a6f47-208">This method is not available in Windows Store apps.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, string rootName, string rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string rootName, string rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::String ^ rootName, System::String ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="a6f47-209">序列化或反序列化的实例的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-209">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="a6f47-210">包含要序列化或反序列化的内容的 XML 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-210">The XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="a6f47-211">XML 元素的命名空间，该元素包含要序列化或反序列化的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-211">The namespace of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="a6f47-212">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的一个 <see cref="T:System.Type" />，其中包含可在对象图中呈现的已知类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-212">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="a6f47-213">图中要序列化或反序列化的最大项数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-213">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="a6f47-214">要在序列化和反序列化时忽略类型扩展提供的数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-214">
              <see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="preserveObjectReferences">
          <span data-ttu-id="a6f47-215">要使用非标准的 XML 结构来保留对象引用数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-215">
              <see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataContractSurrogate">
          <span data-ttu-id="a6f47-216">一个用于自定义序列化过程的 <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-216">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-217">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 类的新实例，以便序列化或反序列化指定类型的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-217">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="a6f47-218">此方法还指定了可在对象图中呈现的已知类型的列表、图中要序列化的最大项数、指定忽略意外数据的参数、是否使用非标准的 XML 结构来保留对象引用数据、自定义序列化的代理项以及包含内容的 XML 元素和命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-218">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, and the XML element and namespace that contain the content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6f47-219">下面的示例创建一个 <xref:System.Runtime.Serialization.DataContractSerializer> 实例以指定要序列化或反序列化的类型以及根 XML 元素和命名空间，并且还创建了一个 <xref:System.Collections.Generic.IEnumerable%601> 实例以包含在反序列化期间使用的类型。</span><span class="sxs-lookup"><span data-stu-id="a6f47-219">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize, the root XML element and namespace, and an instance of a <xref:System.Collections.Generic.IEnumerable%601> that contains the types used during deserialization.</span></span> <span data-ttu-id="a6f47-220">此代码还设置`ignoreExtensionDataObject`和`preserveObjectReferences`参数`true`，并指定的实现<xref:System.Runtime.Serialization.IDataContractSurrogate>接口来处理旧类型 (类型不具有<xref:System.Runtime.Serialization.DataContractAttribute>应用属性)。</span><span class="sxs-lookup"><span data-stu-id="a6f47-220">The code also sets the `ignoreExtensionDataObject` and `preserveObjectReferences` parameters to `true`, and specifies an implementation of the <xref:System.Runtime.Serialization.IDataContractSurrogate> interface to handle legacy types (types that do not have the <xref:System.Runtime.Serialization.DataContractAttribute> attribute applied).</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="a6f47-221"><xref:System.Runtime.Serialization.IDataContractSurrogate> 文档。</span><span class="sxs-lookup"><span data-stu-id="a6f47-221"> the <xref:System.Runtime.Serialization.IDataContractSurrogate> documentation.</span></span>  
  
 [!code-csharp[DataContractSerializer#15](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#15)]
 [!code-vb[DataContractSerializer#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a6f47-222">项数超出了最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-222">The number of items exceeds the maximum value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
        <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
        <altmember cref="T:System.Runtime.Serialization.IDataContractSurrogate" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Xml::XmlDictionaryString ^ rootName, System::Xml::XmlDictionaryString ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="a6f47-223">序列化或反序列化的实例的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-223">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="a6f47-224">指定包含要序列化或反序列化的内容的 XML 元素的 <see cref="T:System.Xml.XmlDictionaryString" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-224">The <see cref="T:System.Xml.XmlDictionaryString" /> that specifies the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="a6f47-225">指定根 XML 命名空间的 <see cref="T:System.Xml.XmlDictionaryString" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-225">The <see cref="T:System.Xml.XmlDictionaryString" /> that specifies the XML namespace of the root.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="a6f47-226">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的一个 <see cref="T:System.Type" />，其中包含可在对象图中呈现的已知类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-226">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="a6f47-227">图中要序列化或反序列化的最大项数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-227">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="a6f47-228">要在序列化和反序列化时忽略类型扩展提供的数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-228">
              <see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="preserveObjectReferences">
          <span data-ttu-id="a6f47-229">要使用非标准的 XML 结构来保留对象引用数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-229">
              <see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataContractSurrogate">
          <span data-ttu-id="a6f47-230">一个用于自定义序列化过程的 <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-230">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-231">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 类的新实例，以便序列化或反序列化指定类型的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-231">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="a6f47-232">此方法还指定了可在对象图中呈现的已知类型的列表、要序列化的最大图项数、指定忽略意外数据的参数、是否使用非标准的 XML 结构来保留对象引用数据、自定义序列化的代理项以及指定包含内容的 XML 元素和命名空间的 <see cref="T:System.Xml.XmlDictionaryString" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-232">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, and parameters of <see cref="T:System.Xml.XmlDictionaryString" /> that specify the XML element and namespace that contain the content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6f47-233">下面的示例创建一个 <xref:System.Runtime.Serialization.DataContractSerializer> 实例以指定要序列化或反序列化的类型以及根 XML 元素和命名空间（作为 <xref:System.Xml.XmlDictionaryString> 参数），并且还创建了一个 <xref:System.Collections.Generic.IEnumerable%601> 实例以包含在反序列化期间使用的类型。</span><span class="sxs-lookup"><span data-stu-id="a6f47-233">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize, the root XML element and namespace (as <xref:System.Xml.XmlDictionaryString> parameters), and an instance of a <xref:System.Collections.Generic.IEnumerable%601> that contains the types used during deserialization.</span></span> <span data-ttu-id="a6f47-234">此代码还设置`ignoreExtensionDataObject`和`preserveObjectReferences`参数`true`，并指定的实现<xref:System.Runtime.Serialization.IDataContractSurrogate>接口来处理旧类型 (类型不具有<xref:System.Runtime.Serialization.DataContractAttribute>应用属性)。</span><span class="sxs-lookup"><span data-stu-id="a6f47-234">The code also sets the `ignoreExtensionDataObject` and `preserveObjectReferences` parameters to `true`, and specifies an implementation of the <xref:System.Runtime.Serialization.IDataContractSurrogate> interface to handle legacy types (types that do not have the <xref:System.Runtime.Serialization.DataContractAttribute> attribute applied).</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="a6f47-235"><xref:System.Runtime.Serialization.IDataContractSurrogate> 文档。</span><span class="sxs-lookup"><span data-stu-id="a6f47-235"> the <xref:System.Runtime.Serialization.IDataContractSurrogate> documentation.</span></span>  
  
 [!code-csharp[DataContractSerializer#16](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#16)]
 [!code-vb[DataContractSerializer#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a6f47-236">项数超出了最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-236">The number of items exceeds the maximum value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
        <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.IDataContractSurrogate" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, string rootName, string rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, System.Runtime.Serialization.DataContractResolver dataContractResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string rootName, string rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, class System.Runtime.Serialization.DataContractResolver dataContractResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::String ^ rootName, System::String ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate, System::Runtime::Serialization::DataContractResolver ^ dataContractResolver);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
        <Parameter Name="dataContractResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="a6f47-237">序列化或反序列化的实例的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-237">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="a6f47-238">包含要序列化或反序列化的内容的 XML 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-238">The XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="a6f47-239">XML 元素的命名空间，该元素包含要序列化或反序列化的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-239">The namespace of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="a6f47-240">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的一个 <see cref="T:System.Type" />，其中包含可在对象图中呈现的已知类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-240">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="a6f47-241">图中要序列化或反序列化的最大项数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-241">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="a6f47-242">要在序列化和反序列化时忽略类型扩展提供的数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-242">
              <see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="preserveObjectReferences">
          <span data-ttu-id="a6f47-243">要使用非标准的 XML 结构来保留对象引用数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-243">
              <see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataContractSurrogate">
          <span data-ttu-id="a6f47-244">一个用于自定义序列化过程的 <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-244">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span>
          </span>
        </param>
        <param name="dataContractResolver">
          <span data-ttu-id="a6f47-245">用于将 <see langword="xsi:type" /> 声明映射到数据协定类型的 <see cref="T:System.Runtime.Serialization.DataContractResolver" /> 的实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-245">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> to map <see langword="xsi:type" /> declarations to data contract types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-246">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 类的新实例，以便序列化或反序列化指定类型的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-246">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="a6f47-247">此方法还指定了可在对象图中呈现的已知类型的列表、图中要序列化的最大项数、要忽略意外数据的参数、是否使用非标准的 XML 构造来保留在图中的对象引用数据、自定义序列化的代理项、包含内容的 XML 元素和命名空间以及在运行时映射 <see langword="xsi:type" /> 声明的备选方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-247">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, the XML element and namespace that contains the content, and an alternative for mapping <see langword="xsi:type" /> declarations at run time.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, System.Runtime.Serialization.DataContractResolver dataContractResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, class System.Runtime.Serialization.DataContractResolver dataContractResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Xml::XmlDictionaryString ^ rootName, System::Xml::XmlDictionaryString ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate, System::Runtime::Serialization::DataContractResolver ^ dataContractResolver);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
        <Parameter Name="dataContractResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="a6f47-248">序列化或反序列化的实例的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-248">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="a6f47-249">包含要序列化或反序列化的内容的 XML 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-249">The XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="a6f47-250">XML 元素的命名空间，该元素包含要序列化或反序列化的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-250">The namespace of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="a6f47-251">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的一个 <see cref="T:System.Type" />，其中包含可在对象图中呈现的已知类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-251">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="a6f47-252">图中要序列化或反序列化的最大项数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-252">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="a6f47-253">要在序列化和反序列化时忽略类型扩展提供的数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-253">
              <see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="preserveObjectReferences">
          <span data-ttu-id="a6f47-254">要使用非标准的 XML 结构来保留对象引用数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-254">
              <see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataContractSurrogate">
          <span data-ttu-id="a6f47-255">一个用于自定义序列化过程的 <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-255">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span>
          </span>
        </param>
        <param name="dataContractResolver">
          <span data-ttu-id="a6f47-256">用于将 <see langword="xsi:type" /> 声明映射到数据协定类型的 <see cref="T:System.Runtime.Serialization.DataContractResolver" /> 的实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-256">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> to map <see langword="xsi:type" /> declarations to data contract types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-257">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 类的新实例，以便序列化或反序列化指定类型的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-257">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="a6f47-258">此方法还指定了可在对象图中呈现的已知类型的列表、图中要序列化的最大项数、要忽略意外数据的参数、是否使用非标准的 XML 构造来保留图中的对象引用数据、自定义序列化的代理项、指定包含内容的 XML 元素和命名空间的 <see cref="T:System.Xml.XmlDictionaryString" /> 参数以及在运行时映射 <see langword="xsi:type" /> 声明的备选方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-258">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, parameters of <see cref="T:System.Xml.XmlDictionaryString" /> that specify the XML element and namespace that contains the content, and an alternative for mapping <see langword="xsi:type" /> declarations at run time.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContractResolver">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.DataContractResolver DataContractResolver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.DataContractResolver DataContractResolver" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.DataContractResolver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataContractResolver As DataContractResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::DataContractResolver ^ DataContractResolver { System::Runtime::Serialization::DataContractResolver ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.DataContractResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f47-259">获取用于动态将 <see langword="xsi:type" /> 声明映射到已知协定类型的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-259">Gets the component used to dynamically map <see langword="xsi:type" /> declarations to known contract types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6f47-260">
            <see cref="T:System.Runtime.Serialization.DataContractResolver" /> 类的一个实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-260">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f47-261"><xref:System.Runtime.Serialization.DataContractResolver> 是使用 <xref:System.Runtime.Serialization.DataContractSerializer> 构造函数设置的。</span><span class="sxs-lookup"><span data-stu-id="a6f47-261">The <xref:System.Runtime.Serialization.DataContractResolver> is set using a <xref:System.Runtime.Serialization.DataContractSerializer> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContractSurrogate">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.DataContractSurrogate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataContractSurrogate As IDataContractSurrogate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::IDataContractSurrogate ^ DataContractSurrogate { System::Runtime::Serialization::IDataContractSurrogate ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.IDataContractSurrogate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f47-262">获取一个可扩展序列化或反序列化过程的代理项类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-262">Gets a surrogate type that can extend the serialization or deserialization process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6f47-263">
            <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 类的一个实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-263">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f47-264"><xref:System.Runtime.Serialization.IDataContractSurrogate> 可用于自定义序列化和反序列化类型实例的方式。</span><span class="sxs-lookup"><span data-stu-id="a6f47-264">The <xref:System.Runtime.Serialization.IDataContractSurrogate> can be used to customize how instances of a type are serialized and deserialized.</span></span> <span data-ttu-id="a6f47-265">例如，可以使用它为无法序列化的旧类型（即尚未应用 <xref:System.Runtime.Serialization.DataContractAttribute> 属性的类型）启用序列化。</span><span class="sxs-lookup"><span data-stu-id="a6f47-265">For example, it can be used to enable the serialization of legacy types that are not serializable, that is, types to which the <xref:System.Runtime.Serialization.DataContractAttribute> attribute has not been applied.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.IDataContractSurrogate" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreExtensionDataObject">
      <MemberSignature Language="C#" Value="public bool IgnoreExtensionDataObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreExtensionDataObject" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoreExtensionDataObject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreExtensionDataObject { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f47-266">获取一个值，指定在对类进行序列化或反序列化时是否忽略类扩展提供的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-266">Gets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6f47-267">若要省略扩展数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-267">
              <see langword="true" /> to omit the extension data; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f47-268">如果应用了 <xref:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject%2A> 的类还实现了 <xref:System.Runtime.Serialization.DataContractAttribute> 接口，可使用 <xref:System.Runtime.Serialization.IExtensibleDataObject> 属性。</span><span class="sxs-lookup"><span data-stu-id="a6f47-268">The <xref:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject%2A> property is used when the class to which a <xref:System.Runtime.Serialization.DataContractAttribute> has been applied also implements the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface.</span></span> <span data-ttu-id="a6f47-269">在这种情况下，在读取和写入时将忽略在协定的将来版本中添加的数据。</span><span class="sxs-lookup"><span data-stu-id="a6f47-269">In this case, the data added in a future version of the contract is ignored on read and write.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="a6f47-270"> [向前兼容的数据协定](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md)。</span><span class="sxs-lookup"><span data-stu-id="a6f47-270"> [Forward-Compatible Data Contracts](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.DataContractAttribute" />
        <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
        <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6f47-271">确定是否将读取器定位在可反序列化的对象上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-271">Determines whether the reader is positioned on an object that can be deserialized.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartObject">
      <MemberSignature Language="C#" Value="public override bool IsStartObject (System.Xml.XmlDictionaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsStartObject(class System.Xml.XmlDictionaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsStartObject (reader As XmlDictionaryReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsStartObject(System::Xml::XmlDictionaryReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a6f47-272">一个用于读取 XML 流的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-272">An <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-273">确定是否将 <see cref="T:System.Xml.XmlDictionaryReader" /> 定位在可反序列化的对象上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-273">Determines whether the <see cref="T:System.Xml.XmlDictionaryReader" /> is positioned on an object that can be deserialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6f47-274">如果读取器位于要读取的流的开始元素处，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-274">
              <see langword="true" /> if the reader is at the start element of the stream to read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f47-275"><xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A> 通过检查其是否定位在 XML 元素上，确定其能否读取某个对象。</span><span class="sxs-lookup"><span data-stu-id="a6f47-275">The <xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A> determines whether it can read an object by checking that it is positioned on an XML element.</span></span> <span data-ttu-id="a6f47-276">它还检查读取器所在的 XML 元素的名称和命名空间，并将这些值与预期的名称和命名空间进行比较。</span><span class="sxs-lookup"><span data-stu-id="a6f47-276">It also examines the name and namespace of the XML element that the reader is positioned at and compares the values to the expected name and namespace.</span></span> <span data-ttu-id="a6f47-277">可利用以下各项设置预期的名称和命名空间：传入构造函数的类型的数据协定名称和命名空间，或者是传入构造函数的 `rootName` 和 `rootNamespace` 值（如果有）。</span><span class="sxs-lookup"><span data-stu-id="a6f47-277">The expected name and namespace can be set with the following: the data contract name and namespace of the type passed into the constructor, or the `rootName` and `rootNamespace` values passed into the constructor (if present).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f47-278">下面的示例使用 <xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A> 属性来确定是否已找到数据的开始位置。</span><span class="sxs-lookup"><span data-stu-id="a6f47-278">The following example uses the <xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A> property to determine whether the start of the data has been found.</span></span>  
  
 [!code-csharp[DataContractSerializer#6](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#6)]
 [!code-vb[DataContractSerializer#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStartObject">
      <MemberSignature Language="C#" Value="public override bool IsStartObject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsStartObject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsStartObject (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsStartObject(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a6f47-279">用于读取 XML 流的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-279">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-280">确定是否将 <see cref="T:System.Xml.XmlReader" /> 定位在可反序列化的对象上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-280">Determines whether the <see cref="T:System.Xml.XmlReader" /> is positioned on an object that can be deserialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6f47-281">如果读取器位于要读取的流的开始元素处，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-281">
              <see langword="true" /> if the reader is at the start element of the stream to read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KnownTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Type&gt; KnownTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Type&gt; KnownTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KnownTypes As ReadOnlyCollection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;Type ^&gt; ^ KnownTypes { System::Collections::ObjectModel::ReadOnlyCollection&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f47-282">获取一个类型集合，这些类型可能出现在使用此 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 实例序列化的对象图中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-282">Gets a collection of types that may be present in the object graph serialized using this instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6f47-283">一个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />，它包含作为已知类型传入 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 构造函数的预期类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-283">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains the expected types passed in as known types to the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> constructor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f47-284"><xref:System.Runtime.Serialization.DataContractSerializer.KnownTypes%2A> 属性提供了用于序列化和反序列化的已知类型集合。</span><span class="sxs-lookup"><span data-stu-id="a6f47-284">The <xref:System.Runtime.Serialization.DataContractSerializer.KnownTypes%2A> property provides the set of known types that are used for serialization and deserialization.</span></span> <span data-ttu-id="a6f47-285">例如，如果 <xref:System.Collections.Hashtable> 类实例包含 `Person` 类实例，请将 `Person` 类型添加到 <xref:System.Collections.Generic.List%601> 类实例中，并使用该实例构造 <xref:System.Runtime.Serialization.DataContractSerializer> 实例。</span><span class="sxs-lookup"><span data-stu-id="a6f47-285">For example, if an instance of the <xref:System.Collections.Hashtable> class contains instances of a `Person` class, add the `Person` type to an instance of the <xref:System.Collections.Generic.List%601> class and use the instance to construct an instance of the <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span> <span data-ttu-id="a6f47-286">如果已知要添加到 <xref:System.Collections.Hashtable> 中的其他类型，则将这些类型添加到集合中。</span><span class="sxs-lookup"><span data-stu-id="a6f47-286">If you know of other types to add to the <xref:System.Collections.Hashtable>, then add those types to the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName="MaxItemsInObjectGraph">
      <MemberSignature Language="C#" Value="public int MaxItemsInObjectGraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxItemsInObjectGraph" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxItemsInObjectGraph As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxItemsInObjectGraph { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f47-287">获取对象图中要序列化或反序列化的最大项数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-287">Gets the maximum number of items in an object graph to serialize or deserialize.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6f47-288">要序列化或反序列化的最大项数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-288">The maximum number of items to serialize or deserialize.</span>
          </span>
          <span data-ttu-id="a6f47-289">默认值为 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-289">The default is <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f47-290">可以在配置中设置此属性，也可以在代码中强制设置此属性。</span><span class="sxs-lookup"><span data-stu-id="a6f47-290">This property can be set in configuration or imperatively in code.</span></span> <span data-ttu-id="a6f47-291">要在配置中设置此属性，请将一个自定义行为添加到行为部分，然后添加以下设置。</span><span class="sxs-lookup"><span data-stu-id="a6f47-291">To set it in configuration, add a custom behavior to the behaviors section and add the following setting.</span></span>  
  
```  
<behaviors>    <behavior name="MyServiceBehavior">        <dataContractSerializer maxItemsInObjectGraph="3" />    </behavior></behaviors>  
```  
  
 <span data-ttu-id="a6f47-292">要以代码形式强制设置此属性，请查找此服务的操作说明，然后获取操作行为，最后按照以下代码所示设置此属性。</span><span class="sxs-lookup"><span data-stu-id="a6f47-292">To set this property imperatively in code find the operation description of the service, then get the operation behavior, finally set the property as shown in the following code.</span></span>  
  
```  
OperationDescription operation = host.Description.Endpoints[0].Contract.Operations.Find("MyOperationName");operation.Behaviors.Find<DataContractSerializerOperationBehavior>().MaxItemsInObjectGraph = 3;  
```  
  
 <span data-ttu-id="a6f47-293"><xref:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph%2A> 属性指定序列化程序在一次 <xref:System.Runtime.Serialization.DataContractSerializer.ReadObject%2A> 方法调用中序列化或反序列化的对象的最大数目。</span><span class="sxs-lookup"><span data-stu-id="a6f47-293">The <xref:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph%2A> property specifies the maximum number of objects that the serializer serializes or deserializes in a single <xref:System.Runtime.Serialization.DataContractSerializer.ReadObject%2A> method call.</span></span> <span data-ttu-id="a6f47-294">（该方法总是读取一个根对象，但此对象的数据成员中可以具有其他对象。</span><span class="sxs-lookup"><span data-stu-id="a6f47-294">(The method always reads one root object, but this object may have other objects in its data members.</span></span> <span data-ttu-id="a6f47-295">这些对象又可以具有其他对象，依此类推。）默认值为 <xref:System.Int32.MaxValue>。</span><span class="sxs-lookup"><span data-stu-id="a6f47-295">Those objects may have other objects, and so on.) The default is <xref:System.Int32.MaxValue>.</span></span> <span data-ttu-id="a6f47-296">请注意，当序列化或反序列化数组时，每个数组项都计为一个单独的对象。</span><span class="sxs-lookup"><span data-stu-id="a6f47-296">Note that when serializing or deserializing arrays, every array entry counts as a separate object.</span></span> <span data-ttu-id="a6f47-297">还应注意，一些对象可能具有较大内存表示形式，因此，仅靠此配额可能不足以防范拒绝服务攻击。</span><span class="sxs-lookup"><span data-stu-id="a6f47-297">Also, note that some objects may have a large memory representation and so this quota alone may not be sufficient to prevent Denial of Service attacks.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="a6f47-298"> [有关数据的安全注意事项](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)。</span><span class="sxs-lookup"><span data-stu-id="a6f47-298"> [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span> <span data-ttu-id="a6f47-299">如果需要增加此配额以至超出默认值，则一定要在发送（序列化）和接收（反序列化）方同时增加此配额。</span><span class="sxs-lookup"><span data-stu-id="a6f47-299">If you need to increase this quota beyond its default value, it is important to do so both on the sending (serializing) and receiving (deserializing) sides.</span></span> <span data-ttu-id="a6f47-300">这同时适用于数据读取和写入。</span><span class="sxs-lookup"><span data-stu-id="a6f47-300">It applies both when reading and writing data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a6f47-301">项数超出了最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-301">The number of items exceeds the maximum value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PreserveObjectReferences">
      <MemberSignature Language="C#" Value="public bool PreserveObjectReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveObjectReferences" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreserveObjectReferences As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveObjectReferences { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f47-302">获取一个值，指定是否使用非标准的 XML 结构来保留对象引用数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-302">Gets a value that specifies whether to use non-standard XML constructs to preserve object reference data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6f47-303">如果要保留引用，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-303">
              <see langword="true" /> to keep the references; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6f47-304">读取 XML 流，并返回反序列化的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-304">Reads the XML stream and returns the deserialized object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadObject (reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ReadObject(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a6f47-305">用于读取 XML 流的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-305">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-306">使用 <see cref="T:System.Xml.XmlReader" /> 读取 XML 流，并返回反序列化的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-306">Reads the XML stream with an <see cref="T:System.Xml.XmlReader" /> and returns the deserialized object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6f47-307">反序列化的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-307">The deserialized object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlDictionaryReader reader, bool verifyObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlDictionaryReader reader, bool verifyObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadObject (reader As XmlDictionaryReader, verifyObjectName As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ReadObject(System::Xml::XmlDictionaryReader ^ reader, bool verifyObjectName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a6f47-308">用于读取 XML 流的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-308">The <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML stream.</span>
          </span>
        </param>
        <param name="verifyObjectName">
          <span data-ttu-id="a6f47-309">要检查对象名称是否与构造函数中提供的根名称值相对应，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-309">
              <see langword="true" /> to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-310">使用 <see cref="T:System.Xml.XmlDictionaryReader" /> 读取 XML 流并返回反序列化的对象，并且还指定在读取其值之前是否进行检查以验证对象名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-310">Reads the XML stream with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6f47-311">反序列化的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-311">The deserialized object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6f47-312">下面的示例读取 XML 文档并反序列化一个对象实例。</span><span class="sxs-lookup"><span data-stu-id="a6f47-312">The following example reads an XML document and deserializes an instance of an object.</span></span>  
  
 [!code-csharp[DataContractSerializer#2](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#2)]
 [!code-vb[DataContractSerializer#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a6f47-313">如果将 <paramref name="verifyObjectName" /> 参数设置为 <see langword="true" />，则元素名称和命名空间与构造函数中设置的值不对应。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-313">The <paramref name="verifyObjectName" /> parameter is set to <see langword="true" />, and the element name and namespace do not correspond to the values set in the constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlReader reader, bool verifyObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlReader reader, bool verifyObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadObject (reader As XmlReader, verifyObjectName As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ReadObject(System::Xml::XmlReader ^ reader, bool verifyObjectName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a6f47-314">用于读取 XML 流的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-314">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream.</span>
          </span>
        </param>
        <param name="verifyObjectName">
          <span data-ttu-id="a6f47-315">要检查对象名称是否与构造函数中提供的根名称值相对应，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-315">
              <see langword="true" /> to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-316">使用 <see cref="T:System.Xml.XmlReader" /> 读取 XML 流并返回反序列化的对象，并且还指定在读取其值之前是否进行检查以验证对象名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-316">Reads the XML stream with an <see cref="T:System.Xml.XmlReader" /> and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6f47-317">反序列化的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-317">The deserialized object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a6f47-318">如果将 <paramref name="verifyObjectName" /> 参数设置为 <see langword="true" />，则元素名称和命名空间与构造函数中设置的值不对应。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-318">The <paramref name="verifyObjectName" /> parameter is set to <see langword="true" />, and the element name and namespace do not correspond to the values set in the constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public object ReadObject (System.Xml.XmlDictionaryReader reader, bool verifyObjectName, System.Runtime.Serialization.DataContractResolver dataContractResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ReadObject(class System.Xml.XmlDictionaryReader reader, bool verifyObjectName, class System.Runtime.Serialization.DataContractResolver dataContractResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ReadObject(System::Xml::XmlDictionaryReader ^ reader, bool verifyObjectName, System::Runtime::Serialization::DataContractResolver ^ dataContractResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
        <Parameter Name="dataContractResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a6f47-319">用于读取内容的 XML 阅读器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-319">The XML reader used to read the content.</span>
          </span>
        </param>
        <param name="verifyObjectName">
          <span data-ttu-id="a6f47-320">若要验证对象名称，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-320">
              <see langword="true" /> to verify the object name; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataContractResolver">
          <span data-ttu-id="a6f47-321">用于将 <see langword="xsi:type" /> 声明映射到数据协定类型的 <see cref="T:System.Runtime.Serialization.DataContractResolver" /> 的实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-321">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> to map <see langword="xsi:type" /> declarations to data contract types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-322">读取一个 XML 文档或文档流，并返回反序列化的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-322">Reads an XML document or document stream and returns the deserialized object.</span>
          </span>
          <span data-ttu-id="a6f47-323">此方法包括用于指定是否验证对象名称的参数和用于在运行时映射 <see langword="xsi:type" /> 声明的解析器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-323">The method includes a parameter to specify whether the object name is verified is validated, and a resolver for mapping <see langword="xsi:type" /> declarations at runtime.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6f47-324">反序列化的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-324">The deserialized object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeReadOnlyTypes">
      <MemberSignature Language="C#" Value="public bool SerializeReadOnlyTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SerializeReadOnlyTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializeReadOnlyTypes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SerializeReadOnlyTypes { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6f47-325">获取指定只读类型是否序列化的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-325">Gets a value that specifies whether read-only types are serialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6f47-326">如果序列化只读类型，则为 <see langword="true" />；如果序列化所有类型，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-326">
              <see langword="true" /> if read-only types are serialized; <see langword="false" /> if all types are serialized.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEndObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6f47-327">使用指定的写入器写入结束 XML 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-327">Writes the closing XML element using the specified writer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject (writer As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject(System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a6f47-328">用于写入流的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-328">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-329">使用 <see cref="T:System.Xml.XmlDictionaryWriter" /> 写入结束 XML 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-329">Writes the closing XML element using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6f47-330">下面的示例创建要序列化的对象、<xref:System.Runtime.Serialization.DataContractSerializer> 的实例以及 <xref:System.Xml.XmlDictionaryWriter> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="a6f47-330">The following example creates an object to serialize, an instance of the <xref:System.Runtime.Serialization.DataContractSerializer>, and an instance of the <xref:System.Xml.XmlDictionaryWriter> class.</span></span>  <span data-ttu-id="a6f47-331">该示例使用 <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> 方法将对象数据写入 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="a6f47-331">The example uses the <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> methods to write the object data into the XML document.</span></span> <span data-ttu-id="a6f47-332">进行这些调用等效于调用一次 <xref:System.Runtime.Serialization.DataContractSerializer.WriteObject%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a6f47-332">Making these calls is equivalent to making a single call of the <xref:System.Runtime.Serialization.DataContractSerializer.WriteObject%2A> method.</span></span> <span data-ttu-id="a6f47-333">例如，在调用 <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A> 方法后，用户可以分别进行这些调用以将其他 XML 属性插入 XML 中。</span><span class="sxs-lookup"><span data-stu-id="a6f47-333">For example, a user might make the calls separately to insert additional XML attributes into the XML after calling the <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A> method.</span></span>  
  
 [!code-csharp[DataContractSerializer#7](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#7)]
 [!code-vb[DataContractSerializer#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="a6f47-334">正在序列化的类型不符合数据协定规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-334">The type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="a6f47-335">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 特性未应用于该类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-335">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a6f47-336">正在写入的实例出现问题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-336">There is a problem with the instance being written.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a6f47-337">用于写入流的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-337">The <see cref="T:System.Xml.XmlWriter" /> used to write the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-338">使用 <see cref="T:System.Xml.XmlWriter" /> 写入结束 XML 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-338">Writes the closing XML element using an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="a6f47-339">正在序列化的类型不符合数据协定规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-339">The type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="a6f47-340">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 特性未应用于该类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-340">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a6f47-341">正在写入的实例出现问题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-341">There is a problem with the instance being written.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6f47-342">将所有对象数据（开始 XML 元素、内容和结束元素）写入 XML 文档或流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-342">Writes all the object data (starting XML element, content, and closing element) to an XML document or stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteObject">
      <MemberSignature Language="C#" Value="public override void WriteObject (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObject(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteObject (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteObject(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a6f47-343">用于写入 XML 文档或流的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-343">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="a6f47-344">包含要写入流的数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-344">The object that contains the data to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-345">使用 <see cref="T:System.Xml.XmlWriter" /> 将所有对象数据（开始 XML 元素、内容和结束元素）写入 XML 文档或流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-345">Writes all the object data (starting XML element, content, and closing element) to an XML document or stream with an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="a6f47-346">正在序列化的类型不符合数据协定规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-346">The type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="a6f47-347">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 特性未应用于该类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-347">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a6f47-348">正在写入的实例出现问题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-348">There is a problem with the instance being written.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObject">
      <MemberSignature Language="C#" Value="public void WriteObject (System.Xml.XmlDictionaryWriter writer, object graph, System.Runtime.Serialization.DataContractResolver dataContractResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteObject(class System.Xml.XmlDictionaryWriter writer, object graph, class System.Runtime.Serialization.DataContractResolver dataContractResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object,System.Runtime.Serialization.DataContractResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteObject(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph, System::Runtime::Serialization::DataContractResolver ^ dataContractResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
        <Parameter Name="dataContractResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a6f47-349">用于将内容写入 XML 文档或流的 XmlDictionaryWriter。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-349">An XmlDictionaryWriter used to write the content to the XML document or stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="a6f47-350">包含要写入的内容的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-350">The object that contains the content to write.</span>
          </span>
        </param>
        <param name="dataContractResolver">
          <span data-ttu-id="a6f47-351">用于将 <see langword="xsi:type" /> 声明映射到已知数据协定的 <see cref="T:System.Runtime.Serialization.DataContractResolver" /> 的实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-351">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> used to map <see langword="xsi:type" /> declarations to known data contracts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-352">使用指定的 XmlDictionaryWriter 将所有对象数据（开始 XML 元素、内容和结束元素）写入 XML 文档或流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-352">Writes all the object data (starting XML element, content, and enclosing element) to an XML document or stream  using the specified XmlDictionaryWriter.</span>
          </span>
          <span data-ttu-id="a6f47-353">此方法包含用于在运行时映射 <see langword="xsi:type" /> 声明的解析器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-353">The method includes a resolver for mapping <see langword="xsi:type" /> declarations at runtime.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteObjectContent">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6f47-354">使用指定的写入器写入 XML 内容，而不写入包装元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-354">Writes the XML content without the wrapping element using the specified writer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteObjectContent">
      <MemberSignature Language="C#" Value="public override void WriteObjectContent (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObjectContent(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteObjectContent (writer As XmlDictionaryWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteObjectContent(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a6f47-355">用于写入流的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-355">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="a6f47-356">要写入到流的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-356">The object to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-357">使用 <see cref="T:System.Xml.XmlDictionaryWriter" /> 写入 XML 内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-357">Writes the XML content using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6f47-358">下面的示例创建要序列化的对象、<xref:System.Runtime.Serialization.DataContractSerializer> 的实例以及 <xref:System.Xml.XmlDictionaryWriter> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="a6f47-358">The following example creates an object to serialize, an instance of the <xref:System.Runtime.Serialization.DataContractSerializer>, and an instance of the <xref:System.Xml.XmlDictionaryWriter> class.</span></span>  <span data-ttu-id="a6f47-359">该示例使用 <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> 方法将对象数据写入 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="a6f47-359">The example uses the <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> methods to write the object data into the XML document.</span></span>  
  
 [!code-csharp[DataContractSerializer#7](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#7)]
 [!code-vb[DataContractSerializer#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="a6f47-360">正在序列化的类型不符合数据协定规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-360">The type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="a6f47-361">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 特性未应用于该类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-361">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a6f47-362">正在写入的实例出现问题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-362">There is a problem with the instance being written.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObjectContent">
      <MemberSignature Language="C#" Value="public override void WriteObjectContent (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObjectContent(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteObjectContent (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteObjectContent(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a6f47-363">用于写入流的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-363">The <see cref="T:System.Xml.XmlWriter" /> used to write the stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="a6f47-364">要写入到流的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-364">The object to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-365">使用 <see cref="T:System.Xml.XmlWriter" /> 写入 XML 内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-365">Writes the XML content using an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="a6f47-366">正在序列化的类型不符合数据协定规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-366">The type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="a6f47-367">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 特性未应用于该类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-367">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a6f47-368">正在写入的实例出现问题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-368">There is a problem with the instance being written.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6f47-369">使用指定的写入器写入开始 XML 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-369">Writes the opening XML element using the specified writer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartObject (writer As XmlDictionaryWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a6f47-370">用于写入 XML 开始元素的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-370">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML start element.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="a6f47-371">要写入的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-371">The object to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-372">使用 <see cref="T:System.Xml.XmlDictionaryWriter" /> 写入开始 XML 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-372">Writes the opening XML element using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a6f47-373">下面的示例创建要序列化的对象、<xref:System.Runtime.Serialization.DataContractSerializer> 的实例以及 <xref:System.Xml.XmlDictionaryWriter> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="a6f47-373">The following example creates an object to serialize, an instance of the <xref:System.Runtime.Serialization.DataContractSerializer>, and an instance of the <xref:System.Xml.XmlDictionaryWriter> class.</span></span>  <span data-ttu-id="a6f47-374">该示例使用 <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> 方法将对象数据写入 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="a6f47-374">The example uses the <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> methods to write the object data into the XML document.</span></span>  
  
 [!code-csharp[DataContractSerializer#7](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#7)]
 [!code-vb[DataContractSerializer#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartObject (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a6f47-375">用于写入 XML 开始元素的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-375">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML start element.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="a6f47-376">要写入的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-376">The object to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f47-377">使用 <see cref="T:System.Xml.XmlWriter" /> 写入开始 XML 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f47-377">Writes the opening XML element using an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>