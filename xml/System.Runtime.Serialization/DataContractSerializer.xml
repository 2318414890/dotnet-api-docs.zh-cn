<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataContractSerializer.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d63614a-fd48-4a83-9dc4-ea1e401b6c15bc913a5d866273af53de23a114f05e488d39931f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc913a5d866273af53de23a114f05e488d39931f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4804968da1dfdf71c501075a5b66957b54f2e8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/27/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Serializes and deserializes an instance of a type into an XML stream or document using a supplied data contract.</source>
          <target state="translated">使用提供的数据协定，将类型实例序列化和反序列化为 XML 流或文档。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> class to serialize and deserialize instances of a type into an XML stream or document.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 类可以将类型实例序列化和反序列化为 XML 流或文档。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>For example, you can create a type named <ph id="ph1">`Person`</ph> with properties that contain essential data, such as a name and address.</source>
          <target state="translated">例如，可以使用包含重要数据（如名称和地址）的属性创建一个名为 <ph id="ph1">`Person`</ph> 的类型。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>You can then create and manipulate an instance of the <ph id="ph1">`Person`</ph> class and write all of its property values in an XML document for later retrieval, or in an XML stream for immediate transport.</source>
          <target state="translated">然后，可以创建和操作一个 <ph id="ph1">`Person`</ph> 类实例，并在 XML 文档中写入所有其属性值以便于以后检索，或者在 XML 流中写入这些值以立即进行传输。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Most important, the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> is used to serialize and deserialize data sent in Windows Communication Foundation (WCF) messages.</source>
          <target state="translated">最重要的是，<ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>用于序列化和反序列化 Windows Communication Foundation (WCF) 消息中发送的数据。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> attribute to classes, and the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> attribute to class members to specify properties and fields that are serialized.</source>
          <target state="translated">通过将 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> 属性 (Attribute) 应用于类，而将 <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> 属性 (Attribute) 应用于类成员，可以指定要序列化的属性 (Property) 和字段。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>For a list of types that can be serialized, see <bpt id="p1">[</bpt>Types Supported by the Data Contract Serializer<ept id="p1">](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)</ept>.</source>
          <target state="translated">可以序列化的类型列表，请参阅<bpt id="p1">[</bpt>类型受数据协定序列化程序<ept id="p1">](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)</ept>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>To use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>, first create an instance of a class and an object appropriate to writing or reading the format; for example, an instance of the <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryWriter&gt;</ph>.</source>
          <target state="translated">要使用 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>，请先创建一个类实例和适于写入或读取格式的对象；例如 <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryWriter&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Then call the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A&gt;</ph> method to persist the data.</source>
          <target state="translated">然后调用 <ph id="ph1">&lt;xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A&gt;</ph> 方法以保留数据。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>To retrieve data, create an object appropriate to reading the data format (such as an <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> for an XML document) and call the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer.ReadObject%2A&gt;</ph> method.</source>
          <target state="translated">要检索数据，请创建一个适于读取数据格式的对象（如 XML 文档的 <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph>），然后调用 <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer.ReadObject%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>For more information about using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>, see <bpt id="p1">[</bpt>Serialization and Deserialization<ept id="p1">](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md)</ept>.</source>
          <target state="translated">有关使用<ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>，请参阅<bpt id="p1">[</bpt>序列化和反序列化<ept id="p1">](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md)</ept>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>You can set the type of a data contract serializer using the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>dataContractSerializer<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/datacontractserializer-element.md)</ept> element in a client application configuration file.</source>
          <target state="translated">你可以设置使用数据协定序列化程序的类型<bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>dataContractSerializer<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/datacontractserializer-element.md)</ept>客户端应用程序配置文件中的元素。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Preparing Classes for Serialization or Deserialization</source>
          <target state="translated">准备序列化或反序列化类</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> is used in combination with the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> and <ph id="ph3">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> classes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 与 <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> 和 <ph id="ph3">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> 类结合使用。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>To prepare a class for serialization, apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> to the class.</source>
          <target state="translated">要准备序列化某个类，请将 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> 应用于该类。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>For each member of the class that returns data that you want to serialize, apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph>.</source>
          <target state="translated">对于返回要序列化的数据的类的每个成员，请应用 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>You can serialize fields and properties, regardless of accessibility: private, protected, internal, protected internal, or public.</source>
          <target state="translated">您可以序列化字段和属性，而无论其可访问性级别是什么：private、protected、internal、protected internal 或 public。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>For example, your schema specifies a <ph id="ph1">`Customer`</ph> with an <ph id="ph2">`ID`</ph> property, but you already have an existing application that uses a type named <ph id="ph3">`Person`</ph> with a <ph id="ph4">`Name`</ph> property.</source>
          <target state="translated">例如，您的架构指定具有 <ph id="ph1">`Customer`</ph> 属性的 <ph id="ph2">`ID`</ph>，但现有应用程序已使用一个名为 <ph id="ph3">`Person`</ph> 且具有 <ph id="ph4">`Name`</ph> 属性的类型。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>To create a type that conforms to the contract, first apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> to the class.</source>
          <target state="translated">要创建一个符合协定的类型，请先将 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> 应用于该类。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Then apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> to every field or property that you want to serialize.</source>
          <target state="translated">然后，将 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> 应用于每个要序列化的字段或属性。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>You can apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> to both private and public members.</source>
          <target state="translated">可以将 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> 同时应用于私有和公共成员。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>The final format of the XML need not be text.</source>
          <target state="translated">XML 的最终格式不需要为文本。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> writes the data as an XML infoset, which allows you to write the data to any format recognized by the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">相反，<ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 以 XML infoset 形式写入数据，这样，即可以 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 和 <ph id="ph3">&lt;xref:System.Xml.XmlWriter&gt;</ph> 可识别的任意格式写入数据。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>It is recommended that you use the <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryWriter&gt;</ph> classes to read and write, because both are optimized to work with the <ph id="ph3">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>.</source>
          <target state="translated">建议您使用 <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> 和 <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryWriter&gt;</ph> 类读取和写入数据，因为这两个类都经过优化可与 <ph id="ph3">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 一起使用。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>If you are creating a class that has fields or properties that must be populated before the serialization or deserialization occurs, use callback attributes, as described in <bpt id="p1">[</bpt>Version-Tolerant Serialization Callbacks<ept id="p1">](~/docs/framework/wcf/feature-details/version-tolerant-serialization-callbacks.md)</ept>.</source>
          <target state="translated">如果反序列化进行或正在使用具有字段或属性必须在序列化之前填充的类，请使用回调属性中所述<bpt id="p1">[</bpt>版本容错序列化回调<ept id="p1">](~/docs/framework/wcf/feature-details/version-tolerant-serialization-callbacks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Adding to the Collection of Known Types</source>
          <target state="translated">添加到已知类型的集合中</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>When serializing or deserializing an object, it is required that the type is "known" to the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>.</source>
          <target state="translated">在序列化或反序列化对象时，<ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 必须“已知”该类型。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Begin by creating an instance of a class that implements <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> (such as <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>) and adding the known types to the collection.</source>
          <target state="translated">首先，创建一个实现 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>（如 <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>）的类实例，并将已知类型添加到集合中。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Then create an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> using one of the overloads that takes the <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> (for example, <ph id="ph3">&lt;xref:System.Runtime.Serialization.DataContractSerializer.%23ctor%28System.Type%2CSystem.Collections.Generic.IEnumerable%7BSystem.Type%7D%29&gt;</ph>.</source>
          <target state="translated">然后，使用接受 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>（例如，<ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>）的重载之一创建 <ph id="ph3">&lt;xref:System.Runtime.Serialization.DataContractSerializer.%23ctor%28System.Type%2CSystem.Collections.Generic.IEnumerable%7BSystem.Type%7D%29&gt;</ph> 的实例。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Unlike other primitive types, the <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> structure is not a known type by default, so it must be manually added to the list of known types (see <bpt id="p1">[</bpt>Data Contract Known Types<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-known-types.md)</ept>).</source>
          <target state="translated">与其他基元类型不同<ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph>结构不是默认情况下，已知的类型，因此它必须手动添加到已知类型列表 (请参阅<bpt id="p1">[</bpt>数据协定已知类型<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-known-types.md)</ept>)。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Forward Compatibility</source>
          <target state="translated">向前兼容性</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> understands data contracts that have been designed to be compatible with future versions of the contract.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 理解旨在与将来版本保持兼容的数据协定。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Such types implement the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> interface.</source>
          <target state="translated">这些类型实现了 <ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> 接口。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>The interface features the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData%2A&gt;</ph> property that returns an <ph id="ph2">&lt;xref:System.Runtime.Serialization.ExtensionDataObject&gt;</ph> object.</source>
          <target state="translated">此接口具有 <ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData%2A&gt;</ph> 属性，该属性返回 <ph id="ph2">&lt;xref:System.Runtime.Serialization.ExtensionDataObject&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>For more information, see <bpt id="p1">[</bpt>Forward-Compatible Data Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>向前兼容的数据协定<ept id="p1">](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md)</ept>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Running under Partial Trust</source>
          <target state="translated">在部分信任模式下运行</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>When instantiating the target object during deserialization, the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> does not call the constructor of the target object.</source>
          <target state="translated">在反序列化期间实例化目标对象时，<ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 不调用目标对象的构造函数。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>If you author a <bpt id="p1">*</bpt>[DataContract]<ept id="p1">*</ept> type that is accessible from partial trust (that is, it is public and in an assembly that has the <ph id="ph1">`AllowPartiallyTrustedCallers`</ph> attribute applied) and that performs some security-related actions, you must be aware that the constructor is not called.</source>
          <target state="translated">如果创作<bpt id="p1">*</bpt>[DataContract]<ept id="p1">*</ept>类型可从部分信任访问 (也就是说，为公共的; 而在程序集具有<ph id="ph1">`AllowPartiallyTrustedCallers`</ph>应用属性) 且执行某些安全相关的操作，您必须知道，不调用构造函数。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>In particular, the following techniques do not work:</source>
          <target state="translated">特别是，下面的方法无效：</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>If you try to restrict partial trust access by making the constructor internal or private, or by adding a <ph id="ph1">`LinkDemand`</ph> to the constructor -- neither of these have any effect during deserialization under partial trust.</source>
          <target state="translated">如果尝试通过将构造函数指定为内部或私有或者将 <ph id="ph1">`LinkDemand`</ph> 添加到构造函数中来限制部分信任访问；在部分信任模式下进行反序列化期间，这两种方法都没有任何效果。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>If you code the class that assumes the constructor has run, the class may get into an invalid internal state that is exploitable.</source>
          <target state="translated">如果编码的类假定构造函数已运行，该类可能会进入一种可被利用的无效内部状态。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>The following example code shows a type named <ph id="ph1">`Person`</ph> that is serialized by the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>.</source>
          <target state="translated">下面的示例代码演示一种名为 <ph id="ph1">`Person`</ph> 且由 <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 序列化的类型。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> attribute is applied to the class, and the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> is applied to members to instruct the <ph id="ph3">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> what to serialize.</source>
          <target state="translated">它将 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> 特性应用于类并将 <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> 应用于成员，以便向 <ph id="ph3">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 指示要序列化的内容。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Instances of this class are thread safe except when the instance is used with an implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.DataContractResolver" /&gt;</ph>.</source>
          <target state="translated">此类的实例都是线程安全的实现与使用的实例时除外<ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph>或<ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.DataContractResolver" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>The type being serialized does not conform to data contract rules.</source>
          <target state="translated">正在序列化的类型不符合数据协定规则。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated">例如，<ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> 特性未应用于该类型。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)">
          <source>The type of the instances that are serialized or deserialized.</source>
          <target state="translated">序列化或反序列化的实例的类型。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> 类的新实例，以便序列化或反序列化指定类型的对象。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)">
          <source>The following example creates an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> that specifies the type to serialize or deserialize.</source>
          <target state="translated">下面的示例创建一个 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 实例，以便指定要序列化或反序列化的类型。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
          <source>The type of the instances that are serialized or deserialized.</source>
          <target state="translated">序列化或反序列化的实例的类型。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that contains the types that may be present in the object graph.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的一个 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>，其中包含可在对象图中呈现的类型。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type, and a collection of known types that may be present in the object graph.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> 类的新实例，以便序列化或反序列化指定类型的对象以及可在对象图中呈现的已知类型的集合。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
          <source>The following example creates an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> that specifies the type to serialize or deserialize and a collection of known types that can be used in the object graph.</source>
          <target state="translated">下面的示例创建一个 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 实例，它指定了要序列化或反序列化的类型以及可在对象图中使用的已知类型的集合。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)">
          <source>The type of the instance to serialize or deserialize.</source>
          <target state="translated">被序列化或反序列化的实例类型。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)">
          <source>The serializer settings.</source>
          <target state="translated">序列化程序设置。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type and settings.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> 类的新实例，以便序列化或反序列化指定类型和设置的对象。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)">
          <source>The type of the instances that are serialized or deserialized.</source>
          <target state="translated">序列化或反序列化的实例的类型。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)">
          <source>The name of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">XML 元素的名称，该元素包含要序列化或反序列化的内容。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)">
          <source>The namespace of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">XML 元素的命名空间，该元素包含要序列化或反序列化的内容。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type using the supplied XML root element and namespace.</source>
          <target state="translated">使用提供的 XML 根元素和命名空间初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> 类的新实例，以便序列化或反序列化指定类型的对象。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)">
          <source>The following example creates an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> that specifies the type to serialize or deserialize as well as the XML name and namespace to read from or write to the XML document.</source>
          <target state="translated">下面的示例创建一个 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 实例，它指定了要序列化或反序列化的类型以及在 XML 文档中读取或写入的 XML 名称和命名空间。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
          <source>The type of the instances that are serialized or deserialized.</source>
          <target state="translated">序列化或反序列化的实例的类型。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> that contains the root element name of the content.</source>
          <target state="translated">一个包含内容的根元素名称的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> that contains the namespace of the root element.</source>
          <target state="translated">一个包含根元素的命名空间的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type using the XML root element and namespace specified through the parameters of type <ph id="ph2">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph>.</source>
          <target state="translated">使用通过类型为 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> 的参数指定的 XML 根元素和命名空间初始化 <ph id="ph2">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> 类的新实例，以便序列化或反序列化指定类型的对象。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
          <source>The following example creates an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> that specifies the type to serialize or deserialize as well as the XML name and namespace (as <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryString&gt;</ph> objects) to read from or write to the XML document.</source>
          <target state="translated">下面的示例创建一个 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 实例，它指定了要序列化或反序列化的类型以及在 XML 文档中读取或写入的 XML 名称和命名空间（作为 <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryString&gt;</ph> 参数）。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
          <source>The type of the instances that are serialized or deserialized.</source>
          <target state="translated">序列化或反序列化的实例的类型。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
          <source>The root element name of the content.</source>
          <target state="translated">内容的根元素名称。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
          <source>The namespace of the root element.</source>
          <target state="translated">根元素的命名空间。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that contains the types that may be present in the object graph.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的一个 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>，其中包含可在对象图中呈现的类型。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> 类的新实例，以便序列化或反序列化指定类型的对象。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
          <source>This method also specifies the root XML element and namespace in two string parameters as well as a list of known types that may be present in the object graph.</source>
          <target state="translated">此方法还在两个字符串参数中指定根 XML 元素和命名空间，并指定了可在对象图中呈现的已知类型的列表。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
          <source>The following example creates an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> that specifies the type to serialize or deserialize as well as the XML name and namespace to read from or write to the XML document.</source>
          <target state="translated">下面的示例创建一个 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 实例，它指定了要序列化或反序列化的类型以及在 XML 文档中读取或写入的 XML 名称和命名空间。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
          <source>The code also creates an instance of a <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> to contain the known types used during serialization or deserialization.</source>
          <target state="translated">该代码还创建一个 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> 实例，以包含在序列化或反序列化期间使用的已知类型。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
          <source>The type of the instances that are serialized or deserialized.</source>
          <target state="translated">序列化或反序列化的实例的类型。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> that contains the root element name of the content.</source>
          <target state="translated">一个包含内容的根元素名称的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> that contains the namespace of the root element.</source>
          <target state="translated">一个包含根元素的命名空间的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that contains the known types that may be present in the object graph.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的一个 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>，其中包含可在对象图中呈现的已知类型。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> 类的新实例，以便序列化或反序列化指定类型的对象。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
          <source>This method also specifies the root XML element and namespace in two <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> parameters as well as a list of known types that may be present in the object graph.</source>
          <target state="translated">此方法还在两个 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> 参数中指定根 XML 元素和命名空间，并指定了可在对象图中呈现的已知类型的列表。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
          <source>The following example creates an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> that specifies the type to serialize or deserialize as well as the XML name and namespace (as <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryString&gt;</ph> objects) to read from or write to the XML document.</source>
          <target state="translated">下面的示例创建一个 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 实例，它指定了要序列化或反序列化的类型以及在 XML 文档中读取或写入的 XML 名称和命名空间（作为 <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryString&gt;</ph> 参数）。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
          <source>The code also creates an instance of a <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> to contain the known types used during serialization or deserialization.</source>
          <target state="translated">该代码还创建一个 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> 实例，以包含在序列化或反序列化期间使用的已知类型。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>The type of the instances that are serialized or deserialized.</source>
          <target state="translated">序列化或反序列化的实例的类型。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that contains the known types that may be present in the object graph.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的一个 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>，其中包含可在对象图中呈现的已知类型。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>The maximum number of items in the graph to serialize or deserialize.</source>
          <target state="translated">图中要序列化或反序列化的最大项数。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>The default is the value returned by the <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> property.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> 属性返回的值。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要在序列化和反序列化时忽略类型扩展提供的数据，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use non-standard XML constructs to preserve object reference data; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要使用非标准的 XML 结构来保留对象引用数据，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> to customize the serialization process.</source>
          <target state="translated">一个用于自定义序列化过程的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> 类的新实例，以便序列化或反序列化指定类型的对象。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, and a surrogate for custom serialization.</source>
          <target state="translated">此方法还指定了可在对象图中呈现的已知类型的列表、图中要序列化的最大项数、指定忽略意外数据的参数、是否使用非标准的 XML 结构来保留对象引用数据以及自定义序列化的代理项。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>The following example creates an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> that specifies the type to serialize or deserialize and an instance of a <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> to contain the known types used during serialization or deserialization.</source>
          <target state="translated">下面的示例创建一个 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 实例以指定要序列化或反序列化的类型，并且还创建了一个 <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> 实例以包含在序列化或反序列化期间使用的已知类型。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>The code also sets the <ph id="ph1">`ignoreExtensionDataObject`</ph> and <ph id="ph2">`preserveObjectReferences`</ph> parameters to <ph id="ph3">`true`</ph>, and specifies an implementation of the <ph id="ph4">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> interface to handle legacy types (types that do not have the <ph id="ph5">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> attribute applied).</source>
          <target state="translated">此代码还设置<ph id="ph1">`ignoreExtensionDataObject`</ph>和<ph id="ph2">`preserveObjectReferences`</ph>参数<ph id="ph3">`true`</ph>，并指定的实现<ph id="ph4">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph>接口来处理旧类型 (类型不具有<ph id="ph5">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>应用属性)。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> the <ph id="ph2">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> documentation.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph><ph id="ph2">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> 文档。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>The number of items exceeds the maximum value.</source>
          <target state="translated">项数超出了最大值。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>The type of the instances that are serialized or deserialized.</source>
          <target state="translated">序列化或反序列化的实例的类型。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that contains the known types that may be present in the object graph.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的一个 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>，其中包含可在对象图中呈现的已知类型。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>The maximum number of items in the graph to serialize or deserialize.</source>
          <target state="translated">图中要序列化或反序列化的最大项数。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>The default is the value returned by the <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> property.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> 属性返回的值。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要在序列化和反序列化时忽略类型扩展提供的数据，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use non-standard XML constructs to preserve object reference data; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要使用非标准的 XML 结构来保留对象引用数据，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> to customize the serialization process.</source>
          <target state="translated">一个用于自定义序列化过程的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractResolver" /&gt;</ph> to map <ph id="ph2">&lt;see langword="xsi:type" /&gt;</ph> declarations to data contract types.</source>
          <target state="translated">用于将 <ph id="ph2">&lt;see langword="xsi:type" /&gt;</ph> 声明映射到数据协定类型的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractResolver" /&gt;</ph> 的实现。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> 类的新实例，以便序列化或反序列化指定类型的对象。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, and an alternative for mapping <ph id="ph1">&lt;see langword="xsi:type" /&gt;</ph> declarations at run time.</source>
          <target state="translated">此方法还指定了可在对象图中呈现的已知类型的列表、图中要序列化的最大项数、要忽略意外数据的参数、是否使用非标准的 XML 构造来保留图中的对象引用数据、自定义序列化的代理项以及在运行时映射 <ph id="ph1">&lt;see langword="xsi:type" /&gt;</ph> 声明的备选方法。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>This method is not available in Windows Store apps.</source>
          <target state="translated">此方法不是在 Windows 应用商店应用中可用的。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>The type of the instances that are serialized or deserialized.</source>
          <target state="translated">序列化或反序列化的实例的类型。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>The XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">包含要序列化或反序列化的内容的 XML 元素。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>The namespace of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">XML 元素的命名空间，该元素包含要序列化或反序列化的内容。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that contains the known types that may be present in the object graph.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的一个 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>，其中包含可在对象图中呈现的已知类型。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>The maximum number of items in the graph to serialize or deserialize.</source>
          <target state="translated">图中要序列化或反序列化的最大项数。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要在序列化和反序列化时忽略类型扩展提供的数据，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use non-standard XML constructs to preserve object reference data; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要使用非标准的 XML 结构来保留对象引用数据，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> to customize the serialization process.</source>
          <target state="translated">一个用于自定义序列化过程的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> 类的新实例，以便序列化或反序列化指定类型的对象。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, and the XML element and namespace that contain the content.</source>
          <target state="translated">此方法还指定了可在对象图中呈现的已知类型的列表、图中要序列化的最大项数、指定忽略意外数据的参数、是否使用非标准的 XML 结构来保留对象引用数据、自定义序列化的代理项以及包含内容的 XML 元素和命名空间。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>The following example creates an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> that specifies the type to serialize or deserialize, the root XML element and namespace, and an instance of a <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> that contains the types used during deserialization.</source>
          <target state="translated">下面的示例创建一个 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 实例以指定要序列化或反序列化的类型以及根 XML 元素和命名空间，并且还创建了一个 <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> 实例以包含在反序列化期间使用的类型。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>The code also sets the <ph id="ph1">`ignoreExtensionDataObject`</ph> and <ph id="ph2">`preserveObjectReferences`</ph> parameters to <ph id="ph3">`true`</ph>, and specifies an implementation of the <ph id="ph4">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> interface to handle legacy types (types that do not have the <ph id="ph5">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> attribute applied).</source>
          <target state="translated">此代码还设置<ph id="ph1">`ignoreExtensionDataObject`</ph>和<ph id="ph2">`preserveObjectReferences`</ph>参数<ph id="ph3">`true`</ph>，并指定的实现<ph id="ph4">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph>接口来处理旧类型 (类型不具有<ph id="ph5">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>应用属性)。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> the <ph id="ph2">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> documentation.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph><ph id="ph2">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> 文档。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>The number of items exceeds the maximum value.</source>
          <target state="translated">项数超出了最大值。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>The type of the instances that are serialized or deserialized.</source>
          <target state="translated">序列化或反序列化的实例的类型。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> that specifies the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">指定包含要序列化或反序列化的内容的 XML 元素的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> that specifies the XML namespace of the root.</source>
          <target state="translated">指定根 XML 命名空间的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that contains the known types that may be present in the object graph.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的一个 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>，其中包含可在对象图中呈现的已知类型。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>The maximum number of items in the graph to serialize or deserialize.</source>
          <target state="translated">图中要序列化或反序列化的最大项数。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要在序列化和反序列化时忽略类型扩展提供的数据，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use non-standard XML constructs to preserve object reference data; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要使用非标准的 XML 结构来保留对象引用数据，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> to customize the serialization process.</source>
          <target state="translated">一个用于自定义序列化过程的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> 类的新实例，以便序列化或反序列化指定类型的对象。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, and parameters of <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> that specify the XML element and namespace that contain the content.</source>
          <target state="translated">此方法还指定了可在对象图中呈现的已知类型的列表、要序列化的最大图项数、指定忽略意外数据的参数、是否使用非标准的 XML 结构来保留对象引用数据、自定义序列化的代理项以及指定包含内容的 XML 元素和命名空间的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> 参数。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>The following example creates an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> that specifies the type to serialize or deserialize, the root XML element and namespace (as <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryString&gt;</ph> parameters), and an instance of a <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> that contains the types used during deserialization.</source>
          <target state="translated">下面的示例创建一个 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 实例以指定要序列化或反序列化的类型以及根 XML 元素和命名空间（作为 <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryString&gt;</ph> 参数），并且还创建了一个 <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> 实例以包含在反序列化期间使用的类型。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>The code also sets the <ph id="ph1">`ignoreExtensionDataObject`</ph> and <ph id="ph2">`preserveObjectReferences`</ph> parameters to <ph id="ph3">`true`</ph>, and specifies an implementation of the <ph id="ph4">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> interface to handle legacy types (types that do not have the <ph id="ph5">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> attribute applied).</source>
          <target state="translated">此代码还设置<ph id="ph1">`ignoreExtensionDataObject`</ph>和<ph id="ph2">`preserveObjectReferences`</ph>参数<ph id="ph3">`true`</ph>，并指定的实现<ph id="ph4">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph>接口来处理旧类型 (类型不具有<ph id="ph5">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>应用属性)。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> the <ph id="ph2">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> documentation.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph><ph id="ph2">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> 文档。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)">
          <source>The number of items exceeds the maximum value.</source>
          <target state="translated">项数超出了最大值。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>The type of the instances that are serialized or deserialized.</source>
          <target state="translated">序列化或反序列化的实例的类型。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>The XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">包含要序列化或反序列化的内容的 XML 元素。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>The namespace of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">XML 元素的命名空间，该元素包含要序列化或反序列化的内容。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that contains the known types that may be present in the object graph.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的一个 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>，其中包含可在对象图中呈现的已知类型。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>The maximum number of items in the graph to serialize or deserialize.</source>
          <target state="translated">图中要序列化或反序列化的最大项数。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要在序列化和反序列化时忽略类型扩展提供的数据，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use non-standard XML constructs to preserve object reference data; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要使用非标准的 XML 结构来保留对象引用数据，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> to customize the serialization process.</source>
          <target state="translated">一个用于自定义序列化过程的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractResolver" /&gt;</ph> to map <ph id="ph2">&lt;see langword="xsi:type" /&gt;</ph> declarations to data contract types.</source>
          <target state="translated">用于将 <ph id="ph2">&lt;see langword="xsi:type" /&gt;</ph> 声明映射到数据协定类型的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractResolver" /&gt;</ph> 的实现。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> 类的新实例，以便序列化或反序列化指定类型的对象。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, the XML element and namespace that contains the content, and an alternative for mapping <ph id="ph1">&lt;see langword="xsi:type" /&gt;</ph> declarations at run time.</source>
          <target state="translated">此方法还指定了可在对象图中呈现的已知类型的列表、图中要序列化的最大项数、要忽略意外数据的参数、是否使用非标准的 XML 构造来保留在图中的对象引用数据、自定义序列化的代理项、包含内容的 XML 元素和命名空间以及在运行时映射 <ph id="ph1">&lt;see langword="xsi:type" /&gt;</ph> 声明的备选方法。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>The type of the instances that are serialized or deserialized.</source>
          <target state="translated">序列化或反序列化的实例的类型。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>The XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">包含要序列化或反序列化的内容的 XML 元素。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>The namespace of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">XML 元素的命名空间，该元素包含要序列化或反序列化的内容。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that contains the known types that may be present in the object graph.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的一个 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>，其中包含可在对象图中呈现的已知类型。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>The maximum number of items in the graph to serialize or deserialize.</source>
          <target state="translated">图中要序列化或反序列化的最大项数。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要在序列化和反序列化时忽略类型扩展提供的数据，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use non-standard XML constructs to preserve object reference data; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要使用非标准的 XML 结构来保留对象引用数据，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> to customize the serialization process.</source>
          <target state="translated">一个用于自定义序列化过程的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractResolver" /&gt;</ph> to map <ph id="ph2">&lt;see langword="xsi:type" /&gt;</ph> declarations to data contract types.</source>
          <target state="translated">用于将 <ph id="ph2">&lt;see langword="xsi:type" /&gt;</ph> 声明映射到数据协定类型的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractResolver" /&gt;</ph> 的实现。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> 类的新实例，以便序列化或反序列化指定类型的对象。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)">
          <source>This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, parameters of <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> that specify the XML element and namespace that contains the content, and an alternative for mapping <ph id="ph2">&lt;see langword="xsi:type" /&gt;</ph> declarations at run time.</source>
          <target state="translated">此方法还指定了可在对象图中呈现的已知类型的列表、图中要序列化的最大项数、要忽略意外数据的参数、是否使用非标准的 XML 构造来保留图中的对象引用数据、自定义序列化的代理项、指定包含内容的 XML 元素和命名空间的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> 参数以及在运行时映射 <ph id="ph2">&lt;see langword="xsi:type" /&gt;</ph> 声明的备选方法。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractSerializer.DataContractResolver">
          <source>Gets the component used to dynamically map <ph id="ph1">&lt;see langword="xsi:type" /&gt;</ph> declarations to known contract types.</source>
          <target state="translated">获取用于动态将 <ph id="ph1">&lt;see langword="xsi:type" /&gt;</ph> 声明映射到已知协定类型的组件。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.DataContractResolver">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractResolver" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractResolver" /&gt;</ph> 类的一个实现。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.DataContractResolver">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractResolver&gt;</ph> is set using a <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractResolver&gt;</ph> 是使用 <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 构造函数设置的。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractSerializer.DataContractSurrogate">
          <source>Gets a surrogate type that can extend the serialization or deserialization process.</source>
          <target state="translated">获取一个可扩展序列化或反序列化过程的代理项类型。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.DataContractSurrogate">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> 类的一个实现。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.DataContractSurrogate">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> can be used to customize how instances of a type are serialized and deserialized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> 可用于自定义序列化和反序列化类型实例的方式。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.DataContractSurrogate">
          <source>For example, it can be used to enable the serialization of legacy types that are not serializable, that is, types to which the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> attribute has not been applied.</source>
          <target state="translated">例如，可以使用它为无法序列化的旧类型（即尚未应用 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> 属性的类型）启用序列化。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject">
          <source>Gets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.</source>
          <target state="translated">获取一个值，指定在对类进行序列化或反序列化时是否忽略类扩展提供的数据。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to omit the extension data; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要省略扩展数据，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject%2A&gt;</ph> property is used when the class to which a <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> has been applied also implements the <ph id="ph3">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> interface.</source>
          <target state="translated">如果应用了 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject%2A&gt;</ph> 的类还实现了 <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> 接口，可使用 <ph id="ph3">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject">
          <source>In this case, the data added in a future version of the contract is ignored on read and write.</source>
          <target state="translated">在这种情况下，在读取和写入时将忽略在协定的将来版本中添加的数据。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Forward-Compatible Data Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>向前兼容的数据协定<ept id="p1">](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md)</ept>。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Determines whether the reader is positioned on an object that can be deserialized.</source>
          <target state="translated">确定是否将读取器定位在可反序列化的对象上。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> used to read the XML stream.</source>
          <target state="translated">一个用于读取 XML 流的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> is positioned on an object that can be deserialized.</source>
          <target state="translated">确定是否将 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> 定位在可反序列化的对象上。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader is at the start element of the stream to read; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果读取器位于要读取的流的开始元素处，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A&gt;</ph> determines whether it can read an object by checking that it is positioned on an XML element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A&gt;</ph> 通过检查其是否定位在 XML 元素上，确定其能否读取某个对象。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>It also examines the name and namespace of the XML element that the reader is positioned at and compares the values to the expected name and namespace.</source>
          <target state="translated">它还检查读取器所在的 XML 元素的名称和命名空间，并将这些值与预期的名称和命名空间进行比较。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>The expected name and namespace can be set with the following: the data contract name and namespace of the type passed into the constructor, or the <ph id="ph1">`rootName`</ph> and <ph id="ph2">`rootNamespace`</ph> values passed into the constructor (if present).</source>
          <target state="translated">可利用以下各项设置预期的名称和命名空间：传入构造函数的类型的数据协定名称和命名空间，或者是传入构造函数的 <ph id="ph1">`rootName`</ph> 和 <ph id="ph2">`rootNamespace`</ph> 值（如果有）。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A&gt;</ph> property to determine whether the start of the data has been found.</source>
          <target state="translated">下面的示例使用 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A&gt;</ph> 属性来确定是否已找到数据的开始位置。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> used to read the XML stream.</source>
          <target state="translated">用于读取 XML 流的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> is positioned on an object that can be deserialized.</source>
          <target state="translated">确定是否将 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 定位在可反序列化的对象上。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader is at the start element of the stream to read; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果读取器位于要读取的流的开始元素处，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes">
          <source>Gets a collection of types that may be present in the object graph serialized using this instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>.</source>
          <target state="translated">获取一个类型集合，这些类型可能出现在使用此 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> 实例序列化的对象图中。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> that contains the expected types passed in as known types to the <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> constructor.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>，它包含作为已知类型传入 <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> 构造函数的预期类型。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer.KnownTypes%2A&gt;</ph> property provides the set of known types that are used for serialization and deserialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer.KnownTypes%2A&gt;</ph> 属性提供了用于序列化和反序列化的已知类型集合。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes">
          <source>For example, if an instance of the <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> class contains instances of a <ph id="ph2">`Person`</ph> class, add the <ph id="ph3">`Person`</ph> type to an instance of the <ph id="ph4">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class and use the instance to construct an instance of the <ph id="ph5">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>.</source>
          <target state="translated">例如，如果 <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> 类实例包含 <ph id="ph2">`Person`</ph> 类实例，请将 <ph id="ph3">`Person`</ph> 类型添加到 <ph id="ph4">&lt;xref:System.Collections.Generic.List%601&gt;</ph> 类实例中，并使用该实例构造 <ph id="ph5">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes">
          <source>If you know of other types to add to the <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph>, then add those types to the collection.</source>
          <target state="translated">如果已知要添加到 <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> 中的其他类型，则将这些类型添加到集合中。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
          <source>Gets the maximum number of items in an object graph to serialize or deserialize.</source>
          <target state="translated">获取对象图中要序列化或反序列化的最大项数。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
          <source>The maximum number of items to serialize or deserialize.</source>
          <target state="translated">要序列化或反序列化的最大项数。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
          <source>This property can be set in configuration or imperatively in code.</source>
          <target state="translated">可以在配置中设置此属性，也可以在代码中强制设置此属性。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
          <source>To set it in configuration, add a custom behavior to the behaviors section and add the following setting.</source>
          <target state="translated">要在配置中设置此属性，请将一个自定义行为添加到行为部分，然后添加以下设置。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
          <source>To set this property imperatively in code find the operation description of the service, then get the operation behavior, finally set the property as shown in the following code.</source>
          <target state="translated">要以代码形式强制设置此属性，请查找此服务的操作说明，然后获取操作行为，最后按照以下代码所示设置此属性。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph%2A&gt;</ph> property specifies the maximum number of objects that the serializer serializes or deserializes in a single <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer.ReadObject%2A&gt;</ph> method call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph%2A&gt;</ph> 属性指定序列化程序在一次 <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer.ReadObject%2A&gt;</ph> 方法调用中序列化或反序列化的对象的最大数目。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
          <source>(The method always reads one root object, but this object may have other objects in its data members.</source>
          <target state="translated">（该方法总是读取一个根对象，但此对象的数据成员中可以具有其他对象。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
          <source>Those objects may have other objects, and so on.) The default is <ph id="ph1">&lt;xref:System.Int32.MaxValue&gt;</ph>.</source>
          <target state="translated">这些对象又可以具有其他对象，依此类推。）默认值为 <ph id="ph1">&lt;xref:System.Int32.MaxValue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
          <source>Note that when serializing or deserializing arrays, every array entry counts as a separate object.</source>
          <target state="translated">请注意，当序列化或反序列化数组时，每个数组项都计为一个单独的对象。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
          <source>Also, note that some objects may have a large memory representation and so this quota alone may not be sufficient to prevent Denial of Service attacks.</source>
          <target state="translated">还应注意，一些对象可能具有较大内存表示形式，因此，仅靠此配额可能不足以防范拒绝服务攻击。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Security Considerations for Data<ept id="p1">](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>有关数据的安全注意事项<ept id="p1">](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)</ept>。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
          <source>If you need to increase this quota beyond its default value, it is important to do so both on the sending (serializing) and receiving (deserializing) sides.</source>
          <target state="translated">如果需要增加此配额以至超出默认值，则一定要在发送（序列化）和接收（反序列化）方同时增加此配额。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
          <source>It applies both when reading and writing data.</source>
          <target state="translated">这同时适用于数据读取和写入。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
          <source>The number of items exceeds the maximum value.</source>
          <target state="translated">项数超出了最大值。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences">
          <source>Gets a value that specifies whether to use non-standard XML constructs to preserve object reference data.</source>
          <target state="translated">获取一个值，指定是否使用非标准的 XML 结构来保留对象引用数据。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to keep the references; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果要保留引用，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Reads the XML stream and returns the deserialized object.</source>
          <target state="translated">读取 XML 流，并返回反序列化的对象。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> used to read the XML stream.</source>
          <target state="translated">用于读取 XML 流的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)">
          <source>Reads the XML stream with an <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> and returns the deserialized object.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 读取 XML 流，并返回反序列化的对象。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)">
          <source>The deserialized object.</source>
          <target state="translated">反序列化的对象。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> used to read the XML stream.</source>
          <target state="translated">用于读取 XML 流的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要检查对象名称是否与构造函数中提供的根名称值相对应，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>Reads the XML stream with an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> 读取 XML 流并返回反序列化的对象，并且还指定在读取其值之前是否进行检查以验证对象名称。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>The deserialized object.</source>
          <target state="translated">反序列化的对象。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>The following example reads an XML document and deserializes an instance of an object.</source>
          <target state="translated">下面的示例读取 XML 文档并反序列化一个对象实例。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="verifyObjectName" /&gt;</ph> parameter is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>, and the element name and namespace do not correspond to the values set in the constructor.</source>
          <target state="translated">如果将 <ph id="ph1">&lt;paramref name="verifyObjectName" /&gt;</ph> 参数设置为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，则元素名称和命名空间与构造函数中设置的值不对应。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> used to read the XML stream.</source>
          <target state="translated">用于读取 XML 流的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要检查对象名称是否与构造函数中提供的根名称值相对应，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source>Reads the XML stream with an <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 读取 XML 流并返回反序列化的对象，并且还指定在读取其值之前是否进行检查以验证对象名称。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source>The deserialized object.</source>
          <target state="translated">反序列化的对象。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="verifyObjectName" /&gt;</ph> parameter is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>, and the element name and namespace do not correspond to the values set in the constructor.</source>
          <target state="translated">如果将 <ph id="ph1">&lt;paramref name="verifyObjectName" /&gt;</ph> 参数设置为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，则元素名称和命名空间与构造函数中设置的值不对应。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)">
          <source>The XML reader used to read the content.</source>
          <target state="translated">用于读取内容的 XML 阅读器。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to verify the object name; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要验证对象名称，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractResolver" /&gt;</ph> to map <ph id="ph2">&lt;see langword="xsi:type" /&gt;</ph> declarations to data contract types.</source>
          <target state="translated">用于将 <ph id="ph2">&lt;see langword="xsi:type" /&gt;</ph> 声明映射到数据协定类型的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractResolver" /&gt;</ph> 的实现。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)">
          <source>Reads an XML document or document stream and returns the deserialized object.</source>
          <target state="translated">读取一个 XML 文档或文档流，并返回反序列化的对象。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)">
          <source>The method includes a parameter to specify whether the object name is verified is validated, and a resolver for mapping <ph id="ph1">&lt;see langword="xsi:type" /&gt;</ph> declarations at runtime.</source>
          <target state="translated">此方法包括用于指定是否验证对象名称的参数和用于在运行时映射 <ph id="ph1">&lt;see langword="xsi:type" /&gt;</ph> 声明的解析器。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)">
          <source>The deserialized object.</source>
          <target state="translated">反序列化的对象。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes">
          <source>Gets a value that specifies whether read-only types are serialized.</source>
          <target state="translated">获取指定只读类型是否序列化的值。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if read-only types are serialized; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if all types are serialized.</source>
          <target state="translated">如果序列化只读类型，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果序列化所有类型，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Writes the closing XML element using the specified writer.</source>
          <target state="translated">使用指定的写入器写入结束 XML 元素。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> used to write the stream.</source>
          <target state="translated">用于写入流的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
          <source>Writes the closing XML element using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> 写入结束 XML 元素。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
          <source>The following example creates an object to serialize, an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>, and an instance of the <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryWriter&gt;</ph> class.</source>
          <target state="translated">下面的示例创建要序列化的对象、<ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 的实例以及 <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryWriter&gt;</ph> 类的实例。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A&gt;</ph> methods to write the object data into the XML document.</source>
          <target state="translated">该示例使用 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A&gt;</ph>、<ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A&gt;</ph> 和 <ph id="ph3">&lt;xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A&gt;</ph> 方法将对象数据写入 XML 文档。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
          <source>Making these calls is equivalent to making a single call of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer.WriteObject%2A&gt;</ph> method.</source>
          <target state="translated">进行这些调用等效于调用一次 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer.WriteObject%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
          <source>For example, a user might make the calls separately to insert additional XML attributes into the XML after calling the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A&gt;</ph> method.</source>
          <target state="translated">例如，在调用 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A&gt;</ph> 方法后，用户可以分别进行这些调用以将其他 XML 属性插入 XML 中。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
          <source>The type being serialized does not conform to data contract rules.</source>
          <target state="translated">正在序列化的类型不符合数据协定规则。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated">例如，<ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> 特性未应用于该类型。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
          <source>There is a problem with the instance being written.</source>
          <target state="translated">正在写入的实例出现问题。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the stream.</source>
          <target state="translated">用于写入流的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
          <source>Writes the closing XML element using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 写入结束 XML 元素。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
          <source>The type being serialized does not conform to data contract rules.</source>
          <target state="translated">正在序列化的类型不符合数据协定规则。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated">例如，<ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> 特性未应用于该类型。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
          <source>There is a problem with the instance being written.</source>
          <target state="translated">正在写入的实例出现问题。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Writes all the object data (starting XML element, content, and closing element) to an XML document or stream.</source>
          <target state="translated">将所有对象数据（开始 XML 元素、内容和结束元素）写入 XML 文档或流。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the XML document or stream.</source>
          <target state="translated">用于写入 XML 文档或流的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>The object that contains the data to write to the stream.</source>
          <target state="translated">包含要写入流的数据的对象。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>Writes all the object data (starting XML element, content, and closing element) to an XML document or stream with an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 将所有对象数据（开始 XML 元素、内容和结束元素）写入 XML 文档或流。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>The type being serialized does not conform to data contract rules.</source>
          <target state="translated">正在序列化的类型不符合数据协定规则。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated">例如，<ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> 特性未应用于该类型。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>There is a problem with the instance being written.</source>
          <target state="translated">正在写入的实例出现问题。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object,System.Runtime.Serialization.DataContractResolver)">
          <source>An XmlDictionaryWriter used to write the content to the XML document or stream.</source>
          <target state="translated">用于将内容写入 XML 文档或流的 XmlDictionaryWriter。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object,System.Runtime.Serialization.DataContractResolver)">
          <source>The object that contains the content to write.</source>
          <target state="translated">包含要写入的内容的对象。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object,System.Runtime.Serialization.DataContractResolver)">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractResolver" /&gt;</ph> used to map <ph id="ph2">&lt;see langword="xsi:type" /&gt;</ph> declarations to known data contracts.</source>
          <target state="translated">用于将 <ph id="ph2">&lt;see langword="xsi:type" /&gt;</ph> 声明映射到已知数据协定的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractResolver" /&gt;</ph> 的实现。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object,System.Runtime.Serialization.DataContractResolver)">
          <source>Writes all the object data (starting XML element, content, and enclosing element) to an XML document or stream  using the specified XmlDictionaryWriter.</source>
          <target state="translated">使用指定的 XmlDictionaryWriter 将所有对象数据（开始 XML 元素、内容和结束元素）写入 XML 文档或流。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object,System.Runtime.Serialization.DataContractResolver)">
          <source>The method includes a resolver for mapping <ph id="ph1">&lt;see langword="xsi:type" /&gt;</ph> declarations at runtime.</source>
          <target state="translated">此方法包含用于在运行时映射 <ph id="ph1">&lt;see langword="xsi:type" /&gt;</ph> 声明的解析器。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Writes the XML content without the wrapping element using the specified writer.</source>
          <target state="translated">使用指定的写入器写入 XML 内容，而不写入包装元素。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> used to write the stream.</source>
          <target state="translated">用于写入流的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The object to write to the stream.</source>
          <target state="translated">要写入到流的对象。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>Writes the XML content using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> 写入 XML 内容。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The following example creates an object to serialize, an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>, and an instance of the <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryWriter&gt;</ph> class.</source>
          <target state="translated">下面的示例创建要序列化的对象、<ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 的实例以及 <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryWriter&gt;</ph> 类的实例。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A&gt;</ph> methods to write the object data into the XML document.</source>
          <target state="translated">该示例使用 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A&gt;</ph>、<ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A&gt;</ph> 和 <ph id="ph3">&lt;xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A&gt;</ph> 方法将对象数据写入 XML 文档。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The type being serialized does not conform to data contract rules.</source>
          <target state="translated">正在序列化的类型不符合数据协定规则。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated">例如，<ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> 特性未应用于该类型。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>There is a problem with the instance being written.</source>
          <target state="translated">正在写入的实例出现问题。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the stream.</source>
          <target state="translated">用于写入流的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>The object to write to the stream.</source>
          <target state="translated">要写入到流的对象。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>Writes the XML content using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 写入 XML 内容。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>The type being serialized does not conform to data contract rules.</source>
          <target state="translated">正在序列化的类型不符合数据协定规则。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated">例如，<ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> 特性未应用于该类型。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>There is a problem with the instance being written.</source>
          <target state="translated">正在写入的实例出现问题。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.DataContractSerializer">
          <source>Writes the opening XML element using the specified writer.</source>
          <target state="translated">使用指定的写入器写入开始 XML 元素。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> used to write the XML start element.</source>
          <target state="translated">用于写入 XML 开始元素的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The object to write.</source>
          <target state="translated">要写入的对象。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>Writes the opening XML element using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> 写入开始 XML 元素。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The following example creates an object to serialize, an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>, and an instance of the <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryWriter&gt;</ph> class.</source>
          <target state="translated">下面的示例创建要序列化的对象、<ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 的实例以及 <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryWriter&gt;</ph> 类的实例。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A&gt;</ph> methods to write the object data into the XML document.</source>
          <target state="translated">该示例使用 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A&gt;</ph>、<ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A&gt;</ph> 和 <ph id="ph3">&lt;xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A&gt;</ph> 方法将对象数据写入 XML 文档。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the XML start element.</source>
          <target state="translated">用于写入 XML 开始元素的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
          <source>The object to write.</source>
          <target state="translated">要写入的对象。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
          <source>Writes the opening XML element using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 写入开始 XML 元素。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>