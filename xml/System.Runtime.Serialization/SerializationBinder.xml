<Type Name="SerializationBinder" FullName="System.Runtime.Serialization.SerializationBinder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e75415f14529a35f5aecd70ea45ae71ba4fe0669" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SerializationBinder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit SerializationBinder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.SerializationBinder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SerializationBinder" />
  <TypeSignature Language="C++ CLI" Value="public ref class SerializationBinder abstract" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0f0fd-101">允许用户控制类加载并指定要加载的类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0f0fd-101">Allows users to control class loading and mandate what class to load.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f0fd-102">在序列化过程中，格式化程序传输创建正确类型和版本的对象实例时所需的信息。</span><span class="sxs-lookup"><span data-stu-id="0f0fd-102">During serialization, a formatter transmits the information required to create an instance of an object of the correct type and version.</span></span> <span data-ttu-id="0f0fd-103">此信息通常包括对象的完整类型名称和程序集名称。</span><span class="sxs-lookup"><span data-stu-id="0f0fd-103">This information generally includes the full type name and assembly name of the object.</span></span> <span data-ttu-id="0f0fd-104">程序集名称包括名称、 版本和强名称 (请参阅[强名称程序集](~/docs/framework/app-domains/strong-named-assemblies.md)) 的程序集的哈希。</span><span class="sxs-lookup"><span data-stu-id="0f0fd-104">The assembly name includes the name, version, and strong name (see [Strong-Named Assemblies](~/docs/framework/app-domains/strong-named-assemblies.md)) hash of the assembly.</span></span> <span data-ttu-id="0f0fd-105">默认情况下，反序列化使用此信息来创建相同对象的实例（安全策略所限制的任何程序集加载属于例外情况）。</span><span class="sxs-lookup"><span data-stu-id="0f0fd-105">By default, deserialization uses this information to create an instance of an identical object (with the exception of any assembly loading restricted by the security policy).</span></span> <span data-ttu-id="0f0fd-106">由于已经在程序集之间移动了类，或者服务器和客户端要求使用不同的类版本，因此，有些用户需要控制要加载哪些类。</span><span class="sxs-lookup"><span data-stu-id="0f0fd-106">Some users need to control which class to load, either because the class has moved between assemblies or a different version of the class is required on the server and client.</span></span>  
  
 <span data-ttu-id="0f0fd-107"><xref:System.Runtime.Serialization.SerializationBinder> 此外可以使用的安全。</span><span class="sxs-lookup"><span data-stu-id="0f0fd-107"><xref:System.Runtime.Serialization.SerializationBinder> can also be used for security.</span></span> <span data-ttu-id="0f0fd-108">当你尝试反序列化来自受信任的源的数据时，则可能存在某些安全攻击。</span><span class="sxs-lookup"><span data-stu-id="0f0fd-108">There might be some security exploits when you are trying to deserialize some data from an untrusted source.</span></span> <span data-ttu-id="0f0fd-109">联编程序为你检查应用程序域中正在加载哪些类型的机会。</span><span class="sxs-lookup"><span data-stu-id="0f0fd-109">The binder gives you an opportunity to inspect what types are being loaded in your application domain.</span></span> <span data-ttu-id="0f0fd-110">您然后可以维护的被拒绝的类型的列表或列表的允许的类型并限制正在加载哪些类型和实例化。</span><span class="sxs-lookup"><span data-stu-id="0f0fd-110">You can then either maintain list of denied types or a list of allowed types and restrict which types are being loaded and instantiated.</span></span> <span data-ttu-id="0f0fd-111">此外你应注意哪些信息被放在网络上，你可能想要保护 （使用传输或消息安全） 在网络上发送类型名称或其他数据时。</span><span class="sxs-lookup"><span data-stu-id="0f0fd-111">In addition you should be mindful of what information is being put out on the wire, you may want to secure (use transport or message security) when sending type names or other data on the wire.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="0f0fd-112">仅使用<xref:System.Runtime.Serialization.SerializationBinder>如果确实完全的哪些信息正在序列化。</span><span class="sxs-lookup"><span data-stu-id="0f0fd-112">Only use <xref:System.Runtime.Serialization.SerializationBinder> if you are completely sure of what information is being serialized.</span></span> <span data-ttu-id="0f0fd-113">恶意类型可能导致意外的行为。</span><span class="sxs-lookup"><span data-stu-id="0f0fd-113">Malicious types can cause unexpected behavior.</span></span>  
  
 <span data-ttu-id="0f0fd-114">这是一个抽象基类。</span><span class="sxs-lookup"><span data-stu-id="0f0fd-114">This is an abstract base class.</span></span> <span data-ttu-id="0f0fd-115">所有活页夹外还扩展此类。</span><span class="sxs-lookup"><span data-stu-id="0f0fd-115">All binders extend this class.</span></span>  
  
   
  
## Examples  
 [!code-cpp[SerializationBinder Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SerializationBinder Example/CPP/serializationbinder.cpp#1)]
 [!code-csharp[SerializationBinder Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SerializationBinder Example/CS/serializationbinder.cs#1)]
 [!code-vb[SerializationBinder Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SerializationBinder Example/VB/serializationbinder.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="0f0fd-116">从 <see cref="T:System.Runtime.Serialization.SerializationBinder" /> 继承时，必须重写以下成员：<see cref="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)" />。</span>
        <span class="sxs-lookup">
          <span data-stu-id="0f0fd-116">When you inherit from <see cref="T:System.Runtime.Serialization.SerializationBinder" />, you must override the following member: <see cref="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)" />.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Security.Policy.StrongName" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SerializationBinder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationBinder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SerializationBinder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0f0fd-117">初始化 <see cref="T:System.Runtime.Serialization.SerializationBinder" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0fd-117">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.SerializationBinder" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToName">
      <MemberSignature Language="C#" Value="public virtual void BindToName (Type serializedType, out string assemblyName, out string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BindToName(class System.Type serializedType, [out] string&amp; assemblyName, [out] string&amp; typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BindToName (serializedType As Type, ByRef assemblyName As String, ByRef typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BindToName(Type ^ serializedType, [Runtime::InteropServices::Out] System::String ^ % assemblyName, [Runtime::InteropServices::Out] System::String ^ % typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializedType" Type="System.Type" />
        <Parameter Name="assemblyName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="typeName" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="serializedType">
          <span data-ttu-id="0f0fd-118">格式化程序创建其新实例的对象的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0fd-118">The type of the object the formatter creates a new instance of.</span>
          </span>
        </param>
        <param name="assemblyName">
          <span data-ttu-id="0f0fd-119">指定序列化对象的 <see cref="T:System.Reflection.Assembly" /> 名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0fd-119">Specifies the <see cref="T:System.Reflection.Assembly" /> name of the serialized object.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="0f0fd-120">指定序列化对象的 <see cref="T:System.Type" /> 名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0fd-120">Specifies the <see cref="T:System.Type" /> name of the serialized object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f0fd-121">当在派生类中重写时，控制是否将序列化对象绑定到类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0fd-121">When overridden in a derived class, controls the binding of a serialized object to a type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToType">
      <MemberSignature Language="C#" Value="public abstract Type BindToType (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type BindToType(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BindToType (assemblyName As String, typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ BindToType(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="0f0fd-122">指定序列化对象的 <see cref="T:System.Reflection.Assembly" /> 名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0fd-122">Specifies the <see cref="T:System.Reflection.Assembly" /> name of the serialized object.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="0f0fd-123">指定序列化对象的 <see cref="T:System.Type" /> 名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0fd-123">Specifies the <see cref="T:System.Type" /> name of the serialized object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f0fd-124">当在派生类中重写时，控制是否将序列化对象绑定到类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0fd-124">When overridden in a derived class, controls the binding of a serialized object to a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f0fd-125">格式化程序创建其新实例的对象的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f0fd-125">The type of the object the formatter creates a new instance of.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0f0fd-126">SerializationBinder 示例 #1</span><span class="sxs-lookup"><span data-stu-id="0f0fd-126">SerializationBinder Example#1</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0f0fd-127">你必须在派生类中实现的当前方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0f0fd-127">You must implement the current method in a derived class.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>