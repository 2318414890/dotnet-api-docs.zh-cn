<Type Name="ISafeSerializationData" FullName="System.Runtime.Serialization.ISafeSerializationData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6761fae50b3df452721be61db01a992b77ebf610" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36533549" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISafeSerializationData" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISafeSerializationData" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ISafeSerializationData" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISafeSerializationData" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISafeSerializationData" />
  <TypeSignature Language="F#" Value="type ISafeSerializationData = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>启用安全透明的代码中的自定义异常数据的序列化。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在版本早于.net Framework 4.0，安全透明代码中的自定义用户数据的序列化已完成使用<xref:System.Exception.GetObjectData%2A>方法。 从.NET Framework 4.0 开始，该方法将标有<xref:System.Security.SecurityCriticalAttribute>这样可防止在安全透明代码中的执行的属性。 若要解决这种情况，请实现<xref:System.Runtime.Serialization.ISafeSerializationData>接口，并添加自定义数据，如下面的示例中所示。  
  
 <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A>方法在序列化之后, 调用，并且使用<xref:System.Runtime.Serialization.SafeSerializationEventArgs>还原自定义数据。  
  
   
  
## Examples  
 下面的示例包含的实现<xref:System.Runtime.Serialization.ISafeSerializationData>接口，用于存储自定义序列化的数据。  
  
 [!code-csharp[ISafeSerializationData#1](~/samples/snippets/csharp/VS_Snippets_CFX/isafeserializationdata/cs/source.cs#1)]
 [!code-vb[ISafeSerializationData#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/isafeserializationdata/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
  </Docs>
  <Members>
    <Member MemberName="CompleteDeserialization">
      <MemberSignature Language="C#" Value="public void CompleteDeserialization (object deserialized);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CompleteDeserialization(object deserialized) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompleteDeserialization (deserialized As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompleteDeserialization(System::Object ^ deserialized);" />
      <MemberSignature Language="F#" Value="abstract member CompleteDeserialization : obj -&gt; unit" Usage="iSafeSerializationData.CompleteDeserialization deserialized" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deserialized" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="deserialized">包含实例状态的对象。</param>
        <summary>方法在取消序列化实例之前被调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 状态对象存储在私有变量的实现中定义<xref:System.Runtime.Serialization.ISafeSerializationData>类。  
  
   
  
## Examples  
 以下示例将还原后要反序列化异常的状态。  
  
 [!code-csharp[ISafeSerializationData#2](~/samples/snippets/csharp/VS_Snippets_CFX/isafeserializationdata/cs/source.cs#2)]
 [!code-vb[ISafeSerializationData#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/isafeserializationdata/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>