<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpWebRequest.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9575d09f-9d72-4690-889e-b83c405ca456b80bb9aa2cba46c62f64e8943589098a78812b0f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b80bb9aa2cba46c62f64e8943589098a78812b0f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">254e16ae65e82f4aa59360cd8572b36b6b5b2f80</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/05/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.HttpWebRequest">
          <source>Provides an HTTP-specific implementation of the <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> class.</source>
          <target state="translated">提供 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 类的 HTTP 特定的实现。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class provides support for the properties and methods defined in <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> and for additional properties and methods that enable the user to interact directly with servers using HTTP.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>类提供支持的属性和方法定义中<ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph>和其他属性和方法，使用户能够直接与使用 HTTP 的服务器进行交互。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Do not use the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">不要使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.%23ctor%2A&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph> method to initialize new <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> objects.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph>方法初始化新<ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>If the scheme for the Uniform Resource Identifier (URI) is <ph id="ph1">`http://`</ph> or <ph id="ph2">`https://`</ph>, <ph id="ph3">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> returns an <ph id="ph4">&lt;xref:System.Net.HttpWebRequest&gt;</ph> object.</source>
          <target state="translated">如果方案的统一资源标识符 (URI) 是<ph id="ph1">`http://`</ph>或<ph id="ph2">`https://`</ph>，<ph id="ph3">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph>返回<ph id="ph4">&lt;xref:System.Net.HttpWebRequest&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> method makes a synchronous request to the resource specified in the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.RequestUri%2A&gt;</ph> property and returns an <ph id="ph3">&lt;xref:System.Net.HttpWebResponse&gt;</ph> that contains the response object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>方法中指定的资源向发出同步请求<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.RequestUri%2A&gt;</ph>属性并返回<ph id="ph3">&lt;xref:System.Net.HttpWebResponse&gt;</ph>包含响应对象。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The response data can be received by using the stream returned by <ph id="ph1">&lt;xref:System.Net.HttpWebResponse.GetResponseStream%2A&gt;</ph>.</source>
          <target state="translated">可以使用返回的流收到的响应数据<ph id="ph1">&lt;xref:System.Net.HttpWebResponse.GetResponseStream%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>If the response object or the response stream is closed, remaining data will be forfeited.</source>
          <target state="translated">如果响应对象或响应流已关闭，则将作废剩余数据。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The remaining data will be drained and the socket will be re-used for subsequent requests when closing the response object or stream if the following conditions hold: it's a keep-alive or pipelined request, only a small amount of data needs to be received, or the remaining data is received in a small time interval.</source>
          <target state="translated">将耗尽剩余的数据和关闭响应对象或流，如果具备以下条件时，将重新用于后续请求套接字： 它是保持活动状态或管线传输请求，只有少量的数据需要接收，或在小时间间隔内收到剩余数据。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>If none of the mentioned conditions hold or the drain time is exceeded, the socket will be closed.</source>
          <target state="translated">如果所述条件的任何保存或超出消耗时间，将关闭套接字。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>For keep-alive or pipelined connections, we strongly recommend that the application reads the streams until EOF.</source>
          <target state="translated">对于保持活动状态或管道连接，我们强烈建议应用程序之前 EOF 读取流。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>This ensures that the socket will be re-used for subsequent requests resulting in better performance and less resources used.</source>
          <target state="translated">这可确保将重新用于后续请求导致更好的性能和更少的资源使用套接字。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>When you want to send data to the resource, the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> object to use to send data.</source>
          <target state="translated">当你想要将数据发送到资源，<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>方法返回<ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>要用来发送数据对象。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph> methods provide asynchronous access to the send data stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph>方法提供对发送数据流异步访问。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>For client authentication with <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>, the client certificate must be installed in the My certificate store of the current user.</source>
          <target state="translated">客户端身份验证与<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>，客户端证书必须安装在我的当前用户的证书存储。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class throws a <ph id="ph2">&lt;xref:System.Net.WebException&gt;</ph> when errors occur while accessing a resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>类将引发<ph id="ph2">&lt;xref:System.Net.WebException&gt;</ph>中发生错误时访问资源时。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebException.Status%2A?displayProperty=nameWithType&gt;</ph> property contains a <ph id="ph2">&lt;xref:System.Net.WebExceptionStatus&gt;</ph> value that indicates the source of the error.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebException.Status%2A?displayProperty=nameWithType&gt;</ph>属性包含<ph id="ph2">&lt;xref:System.Net.WebExceptionStatus&gt;</ph>值，该值指示错误的来源。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>When <ph id="ph1">&lt;xref:System.Net.WebException.Status%2A?displayProperty=nameWithType&gt;</ph> is <ph id="ph2">&lt;xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType&gt;</ph>, the <ph id="ph3">&lt;xref:System.Net.WebException.Response%2A&gt;</ph> property contains the <ph id="ph4">&lt;xref:System.Net.HttpWebResponse&gt;</ph> received from the resource.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Net.WebException.Status%2A?displayProperty=nameWithType&gt;</ph>是<ph id="ph2">&lt;xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType&gt;</ph>、<ph id="ph3">&lt;xref:System.Net.WebException.Response%2A&gt;</ph>属性包含<ph id="ph4">&lt;xref:System.Net.HttpWebResponse&gt;</ph>收到来自资源。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source><ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> exposes common HTTP header values sent to the Internet resource as properties, set by methods, or set by the system; the following table contains a complete list.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 公开常见 HTTP 标头值作为属性发送到 Internet 资源，由方法，或设置由系统;下表包含的完整列表。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>You can set other headers in the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> property as name/value pairs.</source>
          <target state="translated">你可以在设置其他标头<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph>属性作为名称/值对。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Note that servers and caches may change or add headers during the request.</source>
          <target state="translated">请注意服务器和缓存可能更改或在请求过程中添加标头。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The following table lists the HTTP headers that are set either by properties or methods or the system.</source>
          <target state="translated">下表列出了通过属性或方法或系统设置的 HTTP 标头。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Header</source>
          <target state="translated">Header</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by</source>
          <target state="translated">通过设置</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Accept</source>
          <target state="translated">接受</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Accept%2A&gt;</ph> property.</source>
          <target state="translated">通过设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Accept%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Connection</source>
          <target state="translated">连接</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph> property, <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> property.</source>
          <target state="translated">通过设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph>属性，<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Content-Length</source>
          <target state="translated">Content-Length</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property.</source>
          <target state="translated">通过设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Content-Type</source>
          <target state="translated">Content-Type</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph> property.</source>
          <target state="translated">通过设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Expect</source>
          <target state="translated">预期</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Expect%2A&gt;</ph> property.</source>
          <target state="translated">通过设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Expect%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Date</source>
          <target state="translated">日期</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the system to current date.</source>
          <target state="translated">系统设置的当前日期。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Host</source>
          <target state="translated">Host</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the system to current host information.</source>
          <target state="translated">系统设置的当前主机信息。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>If-Modified-Since</source>
          <target state="translated">If-Modified-Since</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> property.</source>
          <target state="translated">通过设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Range</source>
          <target state="translated">范围</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A&gt;</ph> method.</source>
          <target state="translated">通过设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Referer</source>
          <target state="translated">引用站点</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Referer%2A&gt;</ph> property.</source>
          <target state="translated">通过设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Referer%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Transfer-Encoding</source>
          <target state="translated">Transfer-Encoding</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.TransferEncoding%2A&gt;</ph> property (the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> property must be <ph id="ph3">`true`</ph>).</source>
          <target state="translated">通过设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.TransferEncoding%2A&gt;</ph>属性 (<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph>属性必须为<ph id="ph3">`true`</ph>)。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>User-Agent</source>
          <target state="translated">User-Agent</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.UserAgent%2A&gt;</ph> property.</source>
          <target state="translated">通过设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.UserAgent%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source><ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> is registered automatically.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 自动注册。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>You do not need to call the <ph id="ph1">&lt;xref:System.Net.WebRequest.RegisterPrefix%2A&gt;</ph> method to register <ph id="ph2">&lt;xref:System.Net.HttpWebRequest?displayProperty=nameWithType&gt;</ph> before using URIs beginning with <ph id="ph3">`http://`</ph> or <ph id="ph4">`https://`</ph>.</source>
          <target state="translated">不需要调用<ph id="ph1">&lt;xref:System.Net.WebRequest.RegisterPrefix%2A&gt;</ph>方法注册<ph id="ph2">&lt;xref:System.Net.HttpWebRequest?displayProperty=nameWithType&gt;</ph>之前使用 Uri 开头<ph id="ph3">`http://`</ph>或<ph id="ph4">`https://`</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The local computer or application config file may specify that a default proxy be used.</source>
          <target state="translated">使用默认代理，可以指定本地计算机或应用程序配置文件。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> property is specified, then the proxy settings from the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> property override the local computer or application config file and the <ph id="ph3">&lt;xref:System.Net.HttpWebRequest&gt;</ph> instance will use the proxy settings specified.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph>指定属性，然后从的代理设置<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph>属性重写的本地计算机或应用程序配置文件和<ph id="ph3">&lt;xref:System.Net.HttpWebRequest&gt;</ph>实例将使用指定的代理设置。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>If no proxy is specified in a config file and the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> property is unspecified, the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class uses the proxy settings inherited from Internet Explorer on the local computer.</source>
          <target state="translated">如果在配置文件中不指定任何代理和<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph>属性未指定，<ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>类使用从 Internet 资源管理器继承在本地计算机上的代理设置。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>If there are no proxy settings in Internet Explorer, the request is sent directly to the server.</source>
          <target state="translated">如果没有在 Internet Explorer 代理设置，请直接向服务器发送请求。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer differently than the bypass list is parsed directly by Internet Explorer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>类使用继承从 Internet 资源管理器以不同的方式不是直接通过 Internet Explorer 分析跳过列表的通配符字符分析的代理跳过列表。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>For example, the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class will parse a bypass list of "nt*" from Internet Explorer as a regular expression of "nt.$".</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>类将正则表达式的分析的"nt *"Internet Explorer 中的跳过列表"nt。 $"。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>This differs from the native behavior of Internet Explorer.</source>
          <target state="translated">这不同于 Internet Explorer 的本机行为。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>So a URL of "<ph id="ph1">`http://intxxxxx`</ph>" would bypass the proxy using the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class, but would not bypass the proxy using Internet Explorer.</source>
          <target state="translated">因此的 URL"<ph id="ph1">`http://intxxxxx`</ph>"将跳过代理使用<ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>类，但将不使用代理使用 Internet Explorer。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</source>
          <target state="translated">框架缓存 SSL 会话，因为它们创建，并尝试尽可能重用为新请求，缓存的会话。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>When attempting to reuse an SSL session, the Framework uses the first element of <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph> (if there is one), or tries to reuse an anonymous sessions if <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph> is empty.</source>
          <target state="translated">当尝试重复使用的 SSL 会话，框架将使用的第一个元素<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph>（如果没有一个），或尝试重用匿名会话，如果<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph>为空。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>For security reasons, cookies are disabled by default.</source>
          <target state="translated">出于安全原因，默认情况下 cookie 处于禁用状态。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>If you want to use cookies, use the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.CookieContainer%2A&gt;</ph> property to enable cookies.</source>
          <target state="translated">如果你想要使用 cookie，使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.CookieContainer%2A&gt;</ph>属性来启用 cookie。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.</source>
          <target state="translated">.NET Framework 4.6 包括一个新的安全功能，将阻止不安全的密码和哈希算法的连接。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.</source>
          <target state="translated">默认情况下，使用 TLS/SSL 通过例如 HttpClient、 HttpWebRequest、 FTPClient、 SmtpClient、 SslStream 等的 Api 和面向.NET Framework 4.6 的应用程序获得更安全行为。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services.</source>
          <target state="translated">开发人员可能想要选择退出此行为以便保持其现有 SSL3 服务或 TLS 带 RC4 服务与互操作性。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source><bpt id="p1">[</bpt>This article<ept id="p1">](https://support.microsoft.com/kb/3069494)</ept> explains how to modify your code so that the new behavior is disabled.</source>
          <target state="translated"><bpt id="p1">[</bpt>这篇文章<ept id="p1">](https://support.microsoft.com/kb/3069494)</ept>说明如何修改你的代码，以便禁用新的行为。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The following code example creates an <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> for the URI <ph id="ph2">http://www.contoso.com/</ph>.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>uri <ph id="ph2">http://www.contoso.com/</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>to access the requested URI or any URI that the request is redirected to.</source>
          <target state="translated">若要访问请求的 URI 或请求重定向到任何 URI。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Net.NetworkAccess.Connect" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Net.NetworkAccess.Connect" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="T:System.Net.HttpWebRequest">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that contains the information required to serialize the new <ph id="ph2">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> object.</source>
          <target state="translated">包含序列化新 <ph id="ph2">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> 对象所需信息的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object that contains the source and destination of the serialized stream associated with the new <ph id="ph2">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> object.</source>
          <target state="translated">包含与新 <ph id="ph2">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> 对象关联的序列化流的源和目标的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> class from the specified instances of the <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> classes.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 类的指定实例初始化 <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>An application must run in full trust mode when using serialization.</source>
          <target state="translated">使用序列化时，必须在完全信任模式下运行应用程序。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for unrestricted access to network resources.</source>
          <target state="translated">无限制地访问网络资源。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.Abort">
          <source>Cancels a request to an Internet resource.</source>
          <target state="translated">取消对 Internet 资源的请求。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.Abort">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Abort%2A&gt;</ph> method cancels a request to a resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Abort%2A&gt;</ph>方法取消对资源的请求。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.Abort">
          <source>After a request is canceled, calling the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>, or <ph id="ph6">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph> method causes a <ph id="ph7">&lt;xref:System.Net.WebException&gt;</ph> with the <ph id="ph8">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to <ph id="ph9">&lt;xref:System.Net.WebExceptionStatus.RequestCanceled&gt;</ph>.</source>
          <target state="translated">取消请求后，调用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>，或<ph id="ph6">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph>方法使<ph id="ph7">&lt;xref:System.Net.WebException&gt;</ph>与<ph id="ph8">&lt;xref:System.Net.WebException.Status%2A&gt;</ph>属性设置为<ph id="ph9">&lt;xref:System.Net.WebExceptionStatus.RequestCanceled&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.Abort">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Abort%2A&gt;</ph> method will synchronously execute the callback specified to the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> methods if the <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.Abort%2A&gt;</ph> method is called while either of these operations are outstanding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Abort%2A&gt;</ph>方法将同步执行到指定的回调<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph>方法如果<ph id="ph4">&lt;xref:System.Net.HttpWebRequest.Abort%2A&gt;</ph>这些操作中的未完成时调用方法。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.Abort">
          <source>This can lead to potential deadlock issues.</source>
          <target state="translated">这会导致潜在死锁问题。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.Abort">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.Abort">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing<ept id="p1">](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>网络跟踪<ept id="p1">](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804)</ept>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.Abort">
          <source>In the case of asynchronous requests, it is the responsibility of the client application to implement its own time-out mechanism.</source>
          <target state="translated">在异步请求的情况下它是客户端应用程序，来实现其自己的超时机制的责任。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.Abort">
          <source>The following code example shows how to do this.</source>
          <target state="translated">下面的代码示例演示如何执行此操作。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Accept">
          <source>Gets or sets the value of the <ph id="ph1">&lt;see langword="Accept" /&gt;</ph> HTTP header.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see langword="Accept" /&gt;</ph> HTTP 标头的值。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Accept">
          <source>The value of the <ph id="ph1">&lt;see langword="Accept" /&gt;</ph> HTTP header.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Accept" /&gt;</ph> HTTP 标头的值。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Accept">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Accept">
          <source>To clear the <ph id="ph1">`Accept`</ph> HTTP header, set the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Accept%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">若要清除<ph id="ph1">`Accept`</ph>设置 HTTP 标头，<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Accept%2A&gt;</ph>属性<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Accept">
          <source>The value for this property is stored in <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>.</source>
          <target state="translated">此属性的值存储在 <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Accept">
          <source>If WebHeaderCollection is set, the property value is lost.</source>
          <target state="translated">如果设置了 WebHeaderCollection，则该属性值将丢失。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Accept">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Accept%2A&gt;</ph> property.</source>
          <target state="translated">下面的代码示例设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Accept%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="T:System.Net.HttpWebRequest">
          <source>Adds a range header to the request.</source>
          <target state="translated">向请求添加范围标头。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</source>
          <target state="translated">因为所有 HTTP 实体在 HTTP 消息中都表示为字节的序列，字节范围的概念是对任何 HTTP 实体有意义。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>However, not all clients and servers need to support byte-range operations.</source>
          <target state="translated">但是，并非所有客户端和服务器需要支持字节范围操作。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</source>
          <target state="translated">在请求的范围标头允许客户端请求它仅想要在 HTTP 实体接收指定的字节范围的某些部分。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpWebRequest">
          <source>Servers are not required to support Range header requests.</source>
          <target state="translated">支持范围标头请求时，不需要执行服务器。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>The starting or ending point of the range.</source>
          <target state="translated">范围的开始点或结束点。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>Adds a byte range header to a request for a specific range from the beginning or end of the requested data.</source>
          <target state="translated">向请求添加从请求数据的开始处或结束处的特定范围的字节范围标头。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> method adds a byte range header to the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph>方法向请求添加字节范围标头。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>If <ph id="ph1">`range`</ph> is positive, the <ph id="ph2">`range`</ph> parameter specifies the starting point of the range.</source>
          <target state="translated">如果<ph id="ph1">`range`</ph>为正、<ph id="ph2">`range`</ph>参数指定范围的起始点。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>The server should start sending data from the <ph id="ph1">`range`</ph> parameter specified to the end of the data in the HTTP entity.</source>
          <target state="translated">服务器应开始发送数据从<ph id="ph1">`range`</ph>到末尾的 HTTP 实体中的数据指定的参数。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>If <ph id="ph1">`range`</ph> is negative, the <ph id="ph2">`range`</ph> parameter specifies the ending point of the range.</source>
          <target state="translated">如果<ph id="ph1">`range`</ph>为负，<ph id="ph2">`range`</ph>参数指定范围的结束点。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>The server should start sending data from the start of the data in the HTTP entity to the <ph id="ph1">`range`</ph> parameter specified.</source>
          <target state="translated">服务器应该开始将数据发送到的 HTTP 实体数据的开始从<ph id="ph1">`range`</ph>指定参数。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</source>
          <target state="translated">因为所有 HTTP 实体在 HTTP 消息中都表示为字节的序列，字节范围的概念是对任何 HTTP 实体有意义。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>However, not all clients and servers need to support byte-range operations.</source>
          <target state="translated">但是，并非所有客户端和服务器需要支持字节范围操作。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</source>
          <target state="translated">在请求的范围标头允许客户端请求它仅想要在 HTTP 实体接收指定的字节范围的某些部分。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>Servers are not required to support Range header requests.</source>
          <target state="translated">支持范围标头请求时，不需要执行服务器。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>An example of a Range header in an HTTP protocol request that requests the server send the first 100 bytes (from the start to byte position 99) would be the following:</source>
          <target state="translated">在请求服务器发送前 100 个字节 （从开头到字节位置 99） 将如下所示的 HTTP 协议请求的范围标头示例：</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>For this example, the <ph id="ph1">`range`</ph> parameter would be -99.</source>
          <target state="translated">对于此示例，<ph id="ph1">`range`</ph>参数应为-99。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>A HTTP server indicates support for Range headers with the Accept-Ranges header.</source>
          <target state="translated">HTTP 服务器指示范围标头包含 Accept-ranges 标头的支持。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</source>
          <target state="translated">支持字节范围的服务器的 Accept-ranges 标头的示例将如下所示：</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</source>
          <target state="translated">如果 Accept-ranges 标头未收到来自服务器的响应的标头中，服务器不支持范围标头。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</source>
          <target state="translated">不支持范围，但识别 Accept-ranges 标头的服务器的 Accept-ranges 标头的示例将如下所示：</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> class.</source>
          <target state="translated">仅与整个请求相关联的 HTTP 标头时从范围请求中收到响应，可以分析和通过上的属性使可用<ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>Headers associated with each range are returned in the response.</source>
          <target state="translated">在响应中返回与每个范围关联的标头。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>The following code example adds a range header to the request.</source>
          <target state="translated">下面的代码示例向请求添加范围标头。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> 无效。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
          <source>The range header could not be added.</source>
          <target state="translated">无法添加范围标头。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>The starting or ending point of the range.</source>
          <target state="translated">范围的开始点或结束点。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>Adds a byte range header to a request for a specific range from the beginning or end of the requested data.</source>
          <target state="translated">向请求添加从请求数据的开始处或结束处的特定范围的字节范围标头。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> method adds a byte range header to the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph>方法向请求添加字节范围标头。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>If <ph id="ph1">`range`</ph> is positive, the <ph id="ph2">`range`</ph> parameter specifies the starting point of the range.</source>
          <target state="translated">如果<ph id="ph1">`range`</ph>为正、<ph id="ph2">`range`</ph>参数指定范围的起始点。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>The server should start sending data from the <ph id="ph1">`range`</ph> parameter specified to the end of the data in the HTTP entity.</source>
          <target state="translated">服务器应开始发送数据从<ph id="ph1">`range`</ph>到末尾的 HTTP 实体中的数据指定的参数。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>If <ph id="ph1">`range`</ph> is negative, the <ph id="ph2">`range`</ph> parameter specifies the ending point of the range.</source>
          <target state="translated">如果<ph id="ph1">`range`</ph>为负，<ph id="ph2">`range`</ph>参数指定范围的结束点。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>The server should start sending data from the start of the data in the HTTP entity to the <ph id="ph1">`range`</ph> parameter specified.</source>
          <target state="translated">服务器应该开始将数据发送到的 HTTP 实体数据的开始从<ph id="ph1">`range`</ph>指定参数。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</source>
          <target state="translated">因为所有 HTTP 实体在 HTTP 消息中都表示为字节的序列，字节范围的概念是对任何 HTTP 实体有意义。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>However, not all clients and servers need to support byte-range operations.</source>
          <target state="translated">但是，并非所有客户端和服务器需要支持字节范围操作。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</source>
          <target state="translated">在请求的范围标头允许客户端请求它仅想要在 HTTP 实体接收指定的字节范围的某些部分。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>Servers are not required to support Range header requests.</source>
          <target state="translated">支持范围标头请求时，不需要执行服务器。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>An example of a Range header in an HTTP protocol request that requests the server send the first 100 bytes (from the start to byte position 99) would be the following:</source>
          <target state="translated">在请求服务器发送前 100 个字节 （从开头到字节位置 99） 将如下所示的 HTTP 协议请求的范围标头示例：</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>For this example, the <ph id="ph1">`range`</ph> parameter would be -99.</source>
          <target state="translated">对于此示例，<ph id="ph1">`range`</ph>参数应为-99。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>A HTTP server indicates support for Range headers with the Accept-Ranges header.</source>
          <target state="translated">HTTP 服务器指示范围标头包含 Accept-ranges 标头的支持。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</source>
          <target state="translated">支持字节范围的服务器的 Accept-ranges 标头的示例将如下所示：</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</source>
          <target state="translated">如果 Accept-ranges 标头未收到来自服务器的响应的标头中，服务器不支持范围标头。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</source>
          <target state="translated">不支持范围，但识别 Accept-ranges 标头的服务器的 Accept-ranges 标头的示例将如下所示：</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> class.</source>
          <target state="translated">仅与整个请求相关联的 HTTP 标头时从范围请求中收到响应，可以分析和通过上的属性使可用<ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>Headers associated with each range are returned in the response.</source>
          <target state="translated">在响应中返回与每个范围关联的标头。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> 无效。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
          <source>The range header could not be added.</source>
          <target state="translated">无法添加范围标头。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>The position at which to start sending data.</source>
          <target state="translated">开始发送数据的位置。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>The position at which to stop sending data.</source>
          <target state="translated">停止发送数据的位置。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>Adds a byte range header to the request for a specified range.</source>
          <target state="translated">向请求添加指定范围的字节范围标头。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> method adds a byte range header to the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph>方法向请求添加字节范围标头。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</source>
          <target state="translated">因为所有 HTTP 实体在 HTTP 消息中都表示为字节的序列，字节范围的概念是对任何 HTTP 实体有意义。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>However, not all clients and servers need to support byte-range operations.</source>
          <target state="translated">但是，并非所有客户端和服务器需要支持字节范围操作。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</source>
          <target state="translated">在请求的范围标头允许客户端请求它仅想要在 HTTP 实体接收指定的字节范围的某些部分。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>Servers are not required to support Range header requests.</source>
          <target state="translated">支持范围标头请求时，不需要执行服务器。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</source>
          <target state="translated">下面是在 HTTP 协议请求将请求前 100 个字节的范围标头的示例会：</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>For this example, the <ph id="ph1">`from`</ph> parameter would be specified as 0 and the <ph id="ph2">`to`</ph> parameter would be specified as 99.</source>
          <target state="translated">对于此示例，<ph id="ph1">`from`</ph>参数将被指定为 0 和<ph id="ph2">`to`</ph>参数将被指定为 99。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>The range specifier is automatically set as "bytes" by this method.</source>
          <target state="translated">范围说明符被自动设置为"bytes"中，此方法。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>A HTTP server indicates support for Range headers with the Accept-Ranges header.</source>
          <target state="translated">HTTP 服务器指示范围标头包含 Accept-ranges 标头的支持。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</source>
          <target state="translated">支持字节范围的服务器的 Accept-ranges 标头的示例将如下所示：</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</source>
          <target state="translated">如果 Accept-ranges 标头未收到来自服务器的响应的标头中，服务器不支持范围标头。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</source>
          <target state="translated">不支持范围，但识别 Accept-ranges 标头的服务器的 Accept-ranges 标头的示例将如下所示：</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> class.</source>
          <target state="translated">仅与整个请求相关联的 HTTP 标头时从范围请求中收到响应，可以分析和通过上的属性使可用<ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>Headers associated with each range are returned in the response.</source>
          <target state="translated">在响应中返回与每个范围关联的标头。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>The following code example adds a range header to the request.</source>
          <target state="translated">下面的代码示例向请求添加范围标头。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> 无效。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="from" /&gt;</ph> is greater than <ph id="ph2">&lt;paramref name="to" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="from" /&gt;</ph> 大于 <ph id="ph2">&lt;paramref name="to" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="from" /&gt;</ph> or <ph id="ph2">&lt;paramref name="to" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="from" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="to" /&gt;</ph> 小于 0。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
          <source>The range header could not be added.</source>
          <target state="translated">无法添加范围标头。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>The position at which to start sending data.</source>
          <target state="translated">开始发送数据的位置。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>The position at which to stop sending data.</source>
          <target state="translated">停止发送数据的位置。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>Adds a byte range header to the request for a specified range.</source>
          <target state="translated">向请求添加指定范围的字节范围标头。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> method adds a byte range header to the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph>方法向请求添加字节范围标头。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</source>
          <target state="translated">因为所有 HTTP 实体在 HTTP 消息中都表示为字节的序列，字节范围的概念是对任何 HTTP 实体有意义。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>However, not all clients and servers need to support byte-range operations.</source>
          <target state="translated">但是，并非所有客户端和服务器需要支持字节范围操作。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</source>
          <target state="translated">在请求的范围标头允许客户端请求它仅想要在 HTTP 实体接收指定的字节范围的某些部分。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>Servers are not required to support Range header requests.</source>
          <target state="translated">支持范围标头请求时，不需要执行服务器。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</source>
          <target state="translated">下面是在 HTTP 协议请求将请求前 100 个字节的范围标头的示例会：</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>For this example, the <ph id="ph1">`from`</ph> parameter would be specified as 0 and the <ph id="ph2">`to`</ph> parameter would be specified as 99.</source>
          <target state="translated">对于此示例，<ph id="ph1">`from`</ph>参数将被指定为 0 和<ph id="ph2">`to`</ph>参数将被指定为 99。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>The range specifier is automatically set as "bytes" by this method.</source>
          <target state="translated">范围说明符被自动设置为"bytes"中，此方法。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>A HTTP server indicates support for Range headers with the Accept-Ranges header.</source>
          <target state="translated">HTTP 服务器指示范围标头包含 Accept-ranges 标头的支持。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</source>
          <target state="translated">支持字节范围的服务器的 Accept-ranges 标头的示例将如下所示：</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</source>
          <target state="translated">如果 Accept-ranges 标头未收到来自服务器的响应的标头中，服务器不支持范围标头。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</source>
          <target state="translated">不支持范围，但识别 Accept-ranges 标头的服务器的 Accept-ranges 标头的示例将如下所示：</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> class.</source>
          <target state="translated">仅与整个请求相关联的 HTTP 标头时从范围请求中收到响应，可以分析和通过上的属性使可用<ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>Headers associated with each range are returned in the response.</source>
          <target state="translated">在响应中返回与每个范围关联的标头。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> 无效。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="from" /&gt;</ph> is greater than <ph id="ph2">&lt;paramref name="to" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="from" /&gt;</ph> 大于 <ph id="ph2">&lt;paramref name="to" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="from" /&gt;</ph> or <ph id="ph2">&lt;paramref name="to" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="from" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="to" /&gt;</ph> 小于 0。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
          <source>The range header could not be added.</source>
          <target state="translated">无法添加范围标头。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>The description of the range.</source>
          <target state="translated">范围说明。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>The starting or ending point of the range.</source>
          <target state="translated">范围的开始点或结束点。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>Adds a Range header to a request for a specific range from the beginning or end of the requested data.</source>
          <target state="translated">向请求添加从请求数据的开始处或结束处计算的特定范围的 Range 标头。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> method adds a Range header to the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph>方法向请求添加范围标头。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>If <ph id="ph1">`range`</ph> is positive, the <ph id="ph2">`range`</ph> parameter specifies the starting point of the range.</source>
          <target state="translated">如果<ph id="ph1">`range`</ph>为正、<ph id="ph2">`range`</ph>参数指定范围的起始点。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>The server should start sending data from the <ph id="ph1">`range`</ph> parameter specified to the end of the data in the HTTP entity.</source>
          <target state="translated">服务器应开始发送数据从<ph id="ph1">`range`</ph>到末尾的 HTTP 实体中的数据指定的参数。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>If <ph id="ph1">`range`</ph> is negative, the <ph id="ph2">`range`</ph> parameter specifies the ending point of the range.</source>
          <target state="translated">如果<ph id="ph1">`range`</ph>为负，<ph id="ph2">`range`</ph>参数指定范围的结束点。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>The server should start sending data from the start of the data in the HTTP entity to the <ph id="ph1">`range`</ph> parameter specified.</source>
          <target state="translated">服务器应该开始将数据发送到的 HTTP 实体数据的开始从<ph id="ph1">`range`</ph>指定参数。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</source>
          <target state="translated">因为所有 HTTP 实体在 HTTP 消息中都表示为字节的序列，字节范围的概念是对任何 HTTP 实体有意义。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>However, not all clients and servers need to support byte-range operations.</source>
          <target state="translated">但是，并非所有客户端和服务器需要支持字节范围操作。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</source>
          <target state="translated">在请求的范围标头允许客户端请求它仅想要在 HTTP 实体接收指定的字节范围的某些部分。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>Servers are not required to support Range header requests.</source>
          <target state="translated">支持范围标头请求时，不需要执行服务器。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>The <ph id="ph1">`rangeSpecifier`</ph> parameter would normally be specified as a "bytes", since this is the only range specifier recognized by most HTTP servers.</source>
          <target state="translated"><ph id="ph1">`rangeSpecifier`</ph>参数将通常被指定为"bytes"，因为这是识别的大多数 HTTP 服务器的唯一范围说明符。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>Setting the <ph id="ph1">`rangeSpecifier`</ph> parameter to some other string allows support for custom range specifiers other than bytes (the byte-range specifier defined in RFC 2616 by the IETF).</source>
          <target state="translated">设置<ph id="ph1">`rangeSpecifier`</ph>到另一个字符串参数的字节数 （由 IETF RFC 2616 中定义的字节范围说明符） 以外的自定义范围说明符允许支持。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</source>
          <target state="translated">下面是在 HTTP 协议请求将请求前 100 个字节的范围标头的示例会：</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>For this example, the <ph id="ph1">`rangeSpecifier`</ph> parameter would be specified as "bytes" and the <ph id="ph2">`range`</ph> parameter would be -99.</source>
          <target state="translated">对于此示例，<ph id="ph1">`rangeSpecifier`</ph>参数将被指定为"bytes"和<ph id="ph2">`range`</ph>参数应为-99。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>A HTTP server indicates support for Range headers with the Accept-Ranges header in the response.</source>
          <target state="translated">HTTP 服务器指示范围标头包含在响应中的 Accept-ranges 标头的支持。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</source>
          <target state="translated">支持字节范围的服务器的 Accept-ranges 标头的示例将如下所示：</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</source>
          <target state="translated">如果 Accept-ranges 标头未收到来自服务器的响应的标头中，服务器不支持范围标头。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</source>
          <target state="translated">不支持范围，但识别 Accept-ranges 标头的服务器的 Accept-ranges 标头的示例将如下所示：</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> class.</source>
          <target state="translated">仅与整个请求相关联的 HTTP 标头时从范围请求中收到响应，可以分析和通过上的属性使可用<ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>Headers associated with each range are returned in the response.</source>
          <target state="translated">在响应中返回与每个范围关联的标头。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> 无效。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
          <source>The range header could not be added.</source>
          <target state="translated">无法添加范围标头。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>The description of the range.</source>
          <target state="translated">范围说明。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>The starting or ending point of the range.</source>
          <target state="translated">范围的开始点或结束点。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>Adds a Range header to a request for a specific range from the beginning or end of the requested data.</source>
          <target state="translated">向请求添加从请求数据的开始处或结束处计算的特定范围的 Range 标头。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> method adds a Range header to the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph>方法向请求添加范围标头。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>If <ph id="ph1">`range`</ph> is positive, the <ph id="ph2">`range`</ph> parameter specifies the starting point of the range.</source>
          <target state="translated">如果<ph id="ph1">`range`</ph>为正、<ph id="ph2">`range`</ph>参数指定范围的起始点。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>The server should start sending data from the <ph id="ph1">`range`</ph> parameter specified to the end of the data in the HTTP entity.</source>
          <target state="translated">服务器应开始发送数据从<ph id="ph1">`range`</ph>到末尾的 HTTP 实体中的数据指定的参数。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>If <ph id="ph1">`range`</ph> is negative, the <ph id="ph2">`range`</ph> parameter specifies the ending point of the range.</source>
          <target state="translated">如果<ph id="ph1">`range`</ph>为负，<ph id="ph2">`range`</ph>参数指定范围的结束点。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>The server should start sending data from the start of the data in the HTTP entity to the <ph id="ph1">`range`</ph> parameter specified.</source>
          <target state="translated">服务器应该开始将数据发送到的 HTTP 实体数据的开始从<ph id="ph1">`range`</ph>指定参数。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</source>
          <target state="translated">因为所有 HTTP 实体在 HTTP 消息中都表示为字节的序列，字节范围的概念是对任何 HTTP 实体有意义。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>However, not all clients and servers need to support byte-range operations.</source>
          <target state="translated">但是，并非所有客户端和服务器需要支持字节范围操作。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</source>
          <target state="translated">在请求的范围标头允许客户端请求它仅想要在 HTTP 实体接收指定的字节范围的某些部分。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>Servers are not required to support Range header requests.</source>
          <target state="translated">支持范围标头请求时，不需要执行服务器。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>The <ph id="ph1">`rangeSpecifier`</ph> parameter would normally be specified as a "bytes", since this is the only range specifier recognized by most HTTP servers.</source>
          <target state="translated"><ph id="ph1">`rangeSpecifier`</ph>参数将通常被指定为"bytes"，因为这是识别的大多数 HTTP 服务器的唯一范围说明符。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>Setting the <ph id="ph1">`rangeSpecifier`</ph> parameter to some other string allows support for custom range specifiers other than bytes (the byte-range specifier defined in RFC 2616 by the IETF).</source>
          <target state="translated">设置<ph id="ph1">`rangeSpecifier`</ph>到另一个字符串参数的字节数 （由 IETF RFC 2616 中定义的字节范围说明符） 以外的自定义范围说明符允许支持。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</source>
          <target state="translated">下面是在 HTTP 协议请求将请求前 100 个字节的范围标头的示例会：</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>For this example, the <ph id="ph1">`rangeSpecifier`</ph> parameter would be specified as "bytes" and the <ph id="ph2">`range`</ph> parameter would be -99.</source>
          <target state="translated">对于此示例，<ph id="ph1">`rangeSpecifier`</ph>参数将被指定为"bytes"和<ph id="ph2">`range`</ph>参数应为-99。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>A HTTP server indicates support for Range headers with the Accept-Ranges header in the response.</source>
          <target state="translated">HTTP 服务器指示范围标头包含在响应中的 Accept-ranges 标头的支持。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</source>
          <target state="translated">支持字节范围的服务器的 Accept-ranges 标头的示例将如下所示：</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</source>
          <target state="translated">如果 Accept-ranges 标头未收到来自服务器的响应的标头中，服务器不支持范围标头。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</source>
          <target state="translated">不支持范围，但识别 Accept-ranges 标头的服务器的 Accept-ranges 标头的示例将如下所示：</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> class.</source>
          <target state="translated">仅与整个请求相关联的 HTTP 标头时从范围请求中收到响应，可以分析和通过上的属性使可用<ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>Headers associated with each range are returned in the response.</source>
          <target state="translated">在响应中返回与每个范围关联的标头。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> 无效。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
          <source>The range header could not be added.</source>
          <target state="translated">无法添加范围标头。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>The description of the range.</source>
          <target state="translated">范围说明。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>The position at which to start sending data.</source>
          <target state="translated">开始发送数据的位置。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>The position at which to stop sending data.</source>
          <target state="translated">停止发送数据的位置。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>Adds a range header to a request for a specified range.</source>
          <target state="translated">向请求添加指定范围的范围标头。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> method adds a Range header to the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph>方法向请求添加范围标头。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</source>
          <target state="translated">因为所有 HTTP 实体在 HTTP 消息中都表示为字节的序列，字节范围的概念是对任何 HTTP 实体有意义。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>However, not all clients and servers need to support byte-range operations.</source>
          <target state="translated">但是，并非所有客户端和服务器需要支持字节范围操作。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</source>
          <target state="translated">在请求的范围标头允许客户端请求它仅想要在 HTTP 实体接收指定的字节范围的某些部分。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>Servers are not required to support Range header requests.</source>
          <target state="translated">支持范围标头请求时，不需要执行服务器。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>The <ph id="ph1">`rangeSpecifier`</ph> parameter would normally be specified as a "bytes", since this is the only range specifier recognized by most HTTP servers.</source>
          <target state="translated"><ph id="ph1">`rangeSpecifier`</ph>参数将通常被指定为"bytes"，因为这是识别的大多数 HTTP 服务器的唯一范围说明符。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>Setting the <ph id="ph1">`rangeSpecifier`</ph> parameter to some other string allows support for custom range specifiers other than bytes (the byte-range specifier defined in RFC 2616 by the IETF).</source>
          <target state="translated">设置<ph id="ph1">`rangeSpecifier`</ph>到另一个字符串参数的字节数 （由 IETF RFC 2616 中定义的字节范围说明符） 以外的自定义范围说明符允许支持。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</source>
          <target state="translated">下面是在 HTTP 协议请求将请求前 100 个字节的范围标头的示例会：</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>For this example, the <ph id="ph1">`rangeSpecifier`</ph> parameter would be specified as a "bytes", the <ph id="ph2">`from`</ph> parameter would be 0, and the <ph id="ph3">`to`</ph> parameter would be 99.</source>
          <target state="translated">对于此示例，<ph id="ph1">`rangeSpecifier`</ph>参数将被指定为"bytes"<ph id="ph2">`from`</ph>参数应为 0，和<ph id="ph3">`to`</ph>参数应为 99。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>A HTTP server indicates support for Range headers with the Accept-Ranges header in the response.</source>
          <target state="translated">HTTP 服务器指示范围标头包含在响应中的 Accept-ranges 标头的支持。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</source>
          <target state="translated">支持字节范围的服务器的 Accept-ranges 标头的示例将如下所示：</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>The string specified in the Accept-Ranges header is the range-specifier that would be by specified in the <ph id="ph1">`rangeSpecifier`</ph> parameter for this method.</source>
          <target state="translated">Accept-ranges 标头中指定的字符串是将中通过指定范围说明符<ph id="ph1">`rangeSpecifier`</ph>为此方法的参数。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</source>
          <target state="translated">如果 Accept-ranges 标头未收到来自服务器的响应的标头中，服务器不支持范围标头。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</source>
          <target state="translated">不支持范围，但识别 Accept-ranges 标头的服务器的 Accept-ranges 标头的示例将如下所示：</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> class.</source>
          <target state="translated">仅与整个请求相关联的 HTTP 标头时从范围请求中收到响应，可以分析和通过上的属性使可用<ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>Headers associated with each range are returned in the response.</source>
          <target state="translated">在响应中返回与每个范围关联的标头。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="from" /&gt;</ph> is greater than <ph id="ph2">&lt;paramref name="to" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="from" /&gt;</ph> 大于 <ph id="ph2">&lt;paramref name="to" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="from" /&gt;</ph> or <ph id="ph2">&lt;paramref name="to" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="from" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="to" /&gt;</ph> 小于 0。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> 无效。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
          <source>The range header could not be added.</source>
          <target state="translated">无法添加范围标头。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>The description of the range.</source>
          <target state="translated">范围说明。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>The position at which to start sending data.</source>
          <target state="translated">开始发送数据的位置。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>The position at which to stop sending data.</source>
          <target state="translated">停止发送数据的位置。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>Adds a range header to a request for a specified range.</source>
          <target state="translated">向请求添加指定范围的范围标头。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph> method adds a Range header to the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType&gt;</ph>方法向请求添加范围标头。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</source>
          <target state="translated">因为所有 HTTP 实体在 HTTP 消息中都表示为字节的序列，字节范围的概念是对任何 HTTP 实体有意义。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>However, not all clients and servers need to support byte-range operations.</source>
          <target state="translated">但是，并非所有客户端和服务器需要支持字节范围操作。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</source>
          <target state="translated">在请求的范围标头允许客户端请求它仅想要在 HTTP 实体接收指定的字节范围的某些部分。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>Servers are not required to support Range header requests.</source>
          <target state="translated">支持范围标头请求时，不需要执行服务器。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>The <ph id="ph1">`rangeSpecifier`</ph> parameter would normally be specified as a "bytes", since this is the only range specifier recognized by most HTTP servers.</source>
          <target state="translated"><ph id="ph1">`rangeSpecifier`</ph>参数将通常被指定为"bytes"，因为这是识别的大多数 HTTP 服务器的唯一范围说明符。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>Setting the <ph id="ph1">`rangeSpecifier`</ph> parameter to some other string allows support for custom range specifiers other than bytes (the byte-range specifier defined in RFC 2616 by the IETF).</source>
          <target state="translated">设置<ph id="ph1">`rangeSpecifier`</ph>到另一个字符串参数的字节数 （由 IETF RFC 2616 中定义的字节范围说明符） 以外的自定义范围说明符允许支持。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</source>
          <target state="translated">下面是在 HTTP 协议请求将请求前 100 个字节的范围标头的示例会：</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>For this example, the <ph id="ph1">`rangeSpecifier`</ph> parameter would be specified as a "bytes", the <ph id="ph2">`from`</ph> parameter would be 0, and the <ph id="ph3">`to`</ph> parameter would be 99.</source>
          <target state="translated">对于此示例，<ph id="ph1">`rangeSpecifier`</ph>参数将被指定为"bytes"<ph id="ph2">`from`</ph>参数应为 0，和<ph id="ph3">`to`</ph>参数应为 99。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>A HTTP server indicates support for Range headers with the Accept-Ranges header in the response.</source>
          <target state="translated">HTTP 服务器指示范围标头包含在响应中的 Accept-ranges 标头的支持。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</source>
          <target state="translated">支持字节范围的服务器的 Accept-ranges 标头的示例将如下所示：</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>The string specified in the Accept-Ranges header is the range-specifier that would be by specified in the <ph id="ph1">`rangeSpecifier`</ph> parameter for this method.</source>
          <target state="translated">Accept-ranges 标头中指定的字符串是将中通过指定范围说明符<ph id="ph1">`rangeSpecifier`</ph>为此方法的参数。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</source>
          <target state="translated">如果 Accept-ranges 标头未收到来自服务器的响应的标头中，服务器不支持范围标头。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</source>
          <target state="translated">不支持范围，但识别 Accept-ranges 标头的服务器的 Accept-ranges 标头的示例将如下所示：</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph> class.</source>
          <target state="translated">仅与整个请求相关联的 HTTP 标头时从范围请求中收到响应，可以分析和通过上的属性使可用<ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>Headers associated with each range are returned in the response.</source>
          <target state="translated">在响应中返回与每个范围关联的标头。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="from" /&gt;</ph> is greater than <ph id="ph2">&lt;paramref name="to" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="from" /&gt;</ph> 大于 <ph id="ph2">&lt;paramref name="to" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="from" /&gt;</ph> or <ph id="ph2">&lt;paramref name="to" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="from" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="to" /&gt;</ph> 小于 0。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSpecifier" /&gt;</ph> 无效。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
          <source>The range header could not be added.</source>
          <target state="translated">无法添加范围标头。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Address">
          <source>Gets the Uniform Resource Identifier (URI) of the Internet resource that actually responds to the request.</source>
          <target state="translated">获取实际响应请求的 Internet 资源的统一资源标识符 (URI)。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Address">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that identifies the Internet resource that actually responds to the request.</source>
          <target state="translated">标识实际对请求作出响应的 Internet 资源的 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Address">
          <source>The default is the URI used by the <ph id="ph1">&lt;see cref="M:System.Net.WebRequest.Create(System.String)" /&gt;</ph> method to initialize the request.</source>
          <target state="translated">默认值是供 <ph id="ph1">&lt;see cref="M:System.Net.WebRequest.Create(System.String)" /&gt;</ph> 方法用来初始化请求的 URI。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Address">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Address%2A&gt;</ph> property is set to the URI after any redirections that happen during the request are complete.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Address%2A&gt;</ph>在请求期间发生的任何重定向完成后，将属性设置为该 URI。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Address">
          <source>The URI of the original request is kept in the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.RequestUri%2A&gt;</ph> property.</source>
          <target state="translated">原始请求的 URI 就会保留在<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.RequestUri%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Address">
          <source>The following code example checks to see if the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> object <ph id="ph2">`req`</ph> was redirected to another location to fulfill the request, and sets the value of the <ph id="ph3">`hasChanged`</ph> variable to <ph id="ph4">`true`</ph> if the request was redirected; otherwise <ph id="ph5">`hasChanged`</ph> is set to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">下面的代码示例检查以查看是否<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>对象<ph id="ph2">`req`</ph>已重定向到其他位置来完成请求，并将的值设置<ph id="ph3">`hasChanged`</ph>变量<ph id="ph4">`true`</ph>如果请求已重定向; 否则为<ph id="ph5">`hasChanged`</ph>设置为<ph id="ph6">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source>Gets or sets a value that indicates whether the request should follow redirection responses.</source>
          <target state="translated">获取或设置一个值，该值指示请求是否应跟随重定向响应。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the request should automatically follow redirection responses from the Internet resource; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果请求应自动遵循来自 Internet 资源的重定向响应，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source>Set <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph> to <ph id="ph2">`true`</ph> if you want the request to automatically follow HTTP redirection headers to the new location of the resource.</source>
          <target state="translated">设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph>到<ph id="ph2">`true`</ph>如果你想要自动遵循到新位置的资源的 HTTP 重定向标头的请求。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source>The maximum number of redirections to follow is set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MaximumAutomaticRedirections%2A&gt;</ph> property.</source>
          <target state="translated">通过设置最大数量的重定向按照<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MaximumAutomaticRedirections%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source>If <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>, all responses with an HTTP status code from 300 to 399 is returned to the application.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph>设置为<ph id="ph2">`false`</ph>，所有响应包含 HTTP 状态代码 300 从 399 都返回到应用程序。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source>The Authorization header is cleared on auto-redirects and <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> automatically tries to re-authenticate to the redirected location.</source>
          <target state="translated">在自动重定向时被清除的 Authorization 标头和<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>会自动尝试对重定向的位置重新进行身份验证。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source>In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection.</source>
          <target state="translated">在实践中，这意味着应用程序无法将自定义身份验证信息打包在 Authorization 标头，如果它是可能会遇到重定向。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source>Instead, the application must implement and register a custom authentication module.</source>
          <target state="translated">相反，应用程序必须实现并注册一个自定义身份验证模块。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source>The <ph id="ph1">&lt;xref:System.Net.AuthenticationManager?displayProperty=nameWithType&gt;</ph> and related class are used to implement a custom authentication module.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.AuthenticationManager?displayProperty=nameWithType&gt;</ph>和相关的类用于实现自定义身份验证模块。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source>The <ph id="ph1">&lt;xref:System.Net.AuthenticationManager.Register%2A?displayProperty=nameWithType&gt;</ph> method registers a custom authentication module.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.AuthenticationManager.Register%2A?displayProperty=nameWithType&gt;</ph>方法注册自定义身份验证模块。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowAutoRedirect">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph> property to allow the request to follow redirection responses.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph>属性，以允许跟随重定向响应的请求。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.AllowReadStreamBuffering">
          <source>Gets or sets a value that indicates whether to buffer the received from the Internet resource.</source>
          <target state="translated">获取或设置一个值，该值指示是否对从 Internet 资源接收的数据进行缓冲处理。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowReadStreamBuffering">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to enable buffering of the data received from the Internet resource; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to disable buffering.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则启用对从 Internet 资源接收的数据进行缓冲处理；如果为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>，则禁用缓冲处理。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowReadStreamBuffering">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering">
          <source>Gets or sets a value that indicates whether to buffer the data sent to the Internet resource.</source>
          <target state="translated">获取或设置一个值，该值指示是否对发送到 Internet 资源的数据进行缓冲处理。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to enable buffering of the data sent to the Internet resource; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to disable buffering.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则允许对发送到 Internet 资源的数据进行缓冲处理；如果为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>，则禁用缓冲处理。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering">
          <source>When <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowWriteStreamBuffering%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the data is buffered in memory so it is ready to be resent in the event of redirections or authentication requests.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowWriteStreamBuffering%2A&gt;</ph>是<ph id="ph2">`true`</ph>，以便随时可重新发送发生重定向或身份验证请求，在内存中缓冲的数据。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowWriteStreamBuffering%2A&gt;</ph> property to disable data buffering.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowWriteStreamBuffering%2A&gt;</ph>属性来禁用数据缓冲。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering">
          <source>Setting <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph> to <ph id="ph2">&lt;see langword="true" /&gt;</ph> might cause performance problems when uploading large datasets because the data buffer could use all available memory.</source>
          <target state="translated">设置<ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph>到<ph id="ph2">&lt;see langword="true" /&gt;</ph>上载大型数据集，因为数据缓冲区可能会使用所有可用内存时可能会导致性能问题。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.AutomaticDecompression">
          <source>Gets or sets the type of decompression that is used.</source>
          <target state="translated">获取或设置所使用的解压缩类型。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.AutomaticDecompression">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.DecompressionMethods" /&gt;</ph> object that indicates the type of decompression that is used.</source>
          <target state="translated">A<ph id="ph1">&lt;see cref="T:System.Net.DecompressionMethods" /&gt;</ph>对象，该值指示使用的解压缩类型。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.AutomaticDecompression">
          <source>The object's current state does not allow this property to be set.</source>
          <target state="translated">对象的当前状态不允许设置此属性。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委托。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The state object for this request.</source>
          <target state="translated">此请求的状态对象。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous request for a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object to use to write data.</source>
          <target state="translated">开始对用于写入数据的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 对象执行异步请求。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous request.</source>
          <target state="translated">引用该异步请求的 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> method starts an asynchronous request for a stream used to send data for the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>方法会启动对用于将数据发送以流的异步请求<ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The asynchronous callback method uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph> method to return the actual stream.</source>
          <target state="translated">异步回调方法使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph>方法以返回实际的流。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> method requires some synchronous setup tasks to complete (DNS resolution, proxy detection, and TCP socket connection, for example) before this method becomes asynchronous.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>方法需要完成 （DNS 解析、 代理检测和 TCP 套接字连接，例如），此方法才会异步某些同步安装程序任务。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>As a result, this method should never be called on a user interface (UI) thread because it might take considerable time (up to several minutes depending on network settings) to complete the initial synchronous setup tasks before an exception for an error is thrown or the method succeeds.</source>
          <target state="translated">因此，此方法应永远不会调用用户界面 (UI) 线程上因为它可能需要相当长的时间 （最多几分钟时间，具体取决于网络设置） 以完成初始同步安装程序任务，然后异常引发错误或该方法成功。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>To learn more about the thread pool, see <bpt id="p1">[</bpt>The Managed Thread Pool<ept id="p1">](~/docs/standard/threading/the-managed-thread-pool.md)</ept>.</source>
          <target state="translated">若要了解有关线程池的详细信息，请参阅<bpt id="p1">[</bpt>托管线程池<ept id="p1">](~/docs/standard/threading/the-managed-thread-pool.md)</ept>。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>Your application cannot mix synchronous and asynchronous methods for a particular request.</source>
          <target state="translated">你的应用程序不能混合使用的特定请求的同步和异步方法。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> method, you must use the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> method to retrieve the response.</source>
          <target state="translated">如果调用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>方法，则必须使用<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph>方法来检索响应。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>在.NET Framework 中进行网络跟踪<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> method to make an asynchronous request for a stream instance.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>方法来执行对流实例的异步请求。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> property is GET or HEAD.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> 属性为 GET 或 HEAD。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.KeepAlive" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>, <ph id="ph5">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> is -1, <ph id="ph6">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph7">&lt;see langword="false" /&gt;</ph>, and <ph id="ph8">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> is POST or PUT.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.KeepAlive" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，<ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph> 为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>，<ph id="ph5">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> 为 -1，<ph id="ph6">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> 为 <ph id="ph7">&lt;see langword="false" /&gt;</ph>，<ph id="ph8">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> 为 POST 或 PUT。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The stream is being used by a previous call to <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph></source>
          <target state="translated">对 <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph> 的前一次调用正在使用流</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph> is set to a value and <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph> 设置为一个值，且 <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The thread pool is running out of threads.</source>
          <target state="translated">线程池中线程即将耗尽。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>The request cache validator indicated that the response for this request can be served from the cache; however, requests that write data must not use the cache.</source>
          <target state="translated">请求缓存验证程序指示对此请求的响应可从缓存中提供；但是，写入数据的请求不得使用缓存。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>This exception can occur if you are using a custom cache validator that is incorrectly implemented.</source>
          <target state="translated">如果你正在使用错误实现的自定义缓存验证程序，则会发生此异常。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph> was previously called.</source>
          <target state="translated">之前已调用 <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>In a .NET Compact Framework application, a request stream with zero content length was not obtained and closed correctly.</source>
          <target state="translated">在 .NET Compact Framework 应用程序中，未正确获得和关闭一个内容长度为零的请求流。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
          <source>For more information about handling zero content length requests, see <bpt id="p1">[</bpt>Network Programming in the .NET Compact Framework<ept id="p1">](https://msdn.microsoft.com/subscriptions/downloads/1afx2b0f\(v=vs.80\).aspx)</ept>.</source>
          <target state="translated">有关处理内容长度为零的请求的详细信息，请参阅 <bpt id="p1">[</bpt>.NET Compact Framework 中的网络编程<ept id="p1">](https://msdn.microsoft.com/subscriptions/downloads/1afx2b0f\(v=vs.80\).aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委托</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The state object for this request.</source>
          <target state="translated">此请求的状态对象。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous request to an Internet resource.</source>
          <target state="translated">开始对 Internet 资源的异步请求。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous request for a response.</source>
          <target state="translated">引用对响应的异步请求的 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> method starts an asynchronous request for a response from the Internet resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph>方法从 Internet 资源会启动对响应的异步请求。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The asynchronous callback method uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph> method to return the actual <ph id="ph2">&lt;xref:System.Net.WebResponse&gt;</ph>.</source>
          <target state="translated">异步回调方法使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph>方法返回的实际<ph id="ph2">&lt;xref:System.Net.WebResponse&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Net.ProtocolViolationException&gt;</ph> is thrown in several cases when the properties set on the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class are conflicting.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Net.ProtocolViolationException&gt;</ph>时设置的属性，在某些情况下引发<ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>类是冲突。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>This exception occurs if an application sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> property to <ph id="ph3">`true`</ph>, and then sends an HTTP GET request.</source>
          <target state="translated">如果应用程序设置，则会发生此异常<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph>属性和<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph>属性<ph id="ph3">`true`</ph>，然后将发送 HTTP GET 请求。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>This exception occurs if an application tries to send chunked to a server that only supports HTTP 1.0 protocol, where this is not supported.</source>
          <target state="translated">如果应用程序尝试向发送分块请求到的服务器，仅支持 HTTP 1.0 协议，这不支持，则会发生此异常。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>This exception occurs if an application tries to send data without setting the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property or the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> is <ph id="ph3">`false`</ph> when buffering is disabled and on a keepalive connection (the <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> property is <ph id="ph5">`true`</ph>)<ph id="ph6">`.`</ph></source>
          <target state="translated">如果应用程序尝试发送数据而无需设置，则会发生此异常<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph>属性或<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph>是<ph id="ph3">`false`</ph>禁用缓冲和 keepalive 连接上 (<ph id="ph4">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph>属性是<ph id="ph5">`true`</ph>)<ph id="ph6">`.`</ph></target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>If a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown, use the <ph id="ph2">&lt;xref:System.Net.WebException.Response%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> properties of the exception to determine the response from the server.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph>是引发，使用<ph id="ph2">&lt;xref:System.Net.WebException.Response%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Net.WebException.Status%2A&gt;</ph>异常来确定来自服务器的响应的属性。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> method requires some synchronous setup tasks to complete (DNS resolution, proxy detection, and TCP socket connection, for example) before this method becomes asynchronous.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph>方法需要完成 （DNS 解析、 代理检测和 TCP 套接字连接，例如），此方法才会异步某些同步安装程序任务。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>As a result, this method should never be called on a user interface (UI) thread because it might take considerable time (up to several minutes depending on network settings) to complete the initial synchronous setup tasks before an exception for an error is thrown or the method succeeds.</source>
          <target state="translated">因此，此方法应永远不会调用用户界面 (UI) 线程上因为它可能需要相当长的时间 （最多几分钟时间，具体取决于网络设置） 以完成初始同步安装程序任务，然后异常引发错误或该方法成功。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>To learn more about the thread pool, see <bpt id="p1">[</bpt>&amp;#91;<ph id="ph1">\&lt;</ph>topic://cpconthreadpooling&gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/2be05b06-a42e-4c9d-a739-96c21d673927)</ept>.</source>
          <target state="translated">若要了解有关线程池的详细信息，请参阅<bpt id="p1">[</bpt> &amp;#91; <ph id="ph1">\&lt;</ph>topic://cpconthreadpooling &gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/2be05b06-a42e-4c9d-a739-96c21d673927)</ept>。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>Your application cannot mix synchronous and asynchronous methods for a particular request.</source>
          <target state="translated">你的应用程序不能混合使用的特定请求的同步和异步方法。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> method, you must use the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> method to retrieve the response.</source>
          <target state="translated">如果调用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>方法，则必须使用<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph>方法来检索响应。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>&amp;#91;<ph id="ph1">\&lt;</ph>topic://conUsingNetworkTracing&gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt> &amp;#91; <ph id="ph1">\&lt;</ph>topic://conUsingNetworkTracing &gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804)</ept>。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> method to make an asynchronous request for an Internet resource.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph>方法来执行对 Internet 资源的异步请求。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>In the case of asynchronous requests, it is the responsibility of the client application to implement its own time-out mechanism.</source>
          <target state="translated">在异步请求的情况下它是客户端应用程序，来实现其自己的超时机制的责任。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The following code example shows how to do it.</source>
          <target state="translated">下面的代码示例演示如何执行此操作。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The stream is already in use by a previous call to <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph></source>
          <target state="translated">流正由上一个 <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph> 调用使用</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph> is set to a value and <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph> 设置为一个值，且 <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The thread pool is running out of threads.</source>
          <target state="translated">线程池中线程即将耗尽。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> is GET or HEAD, and either <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> is greater than zero or <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph4">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> 为 GET 或 HEAD，且 <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> 大于零或 <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> 为 <ph id="ph4">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.KeepAlive" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>, and either <ph id="ph5">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> is -1, <ph id="ph6">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph7">&lt;see langword="false" /&gt;</ph> and <ph id="ph8">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> is POST or PUT.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.KeepAlive" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，<ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph> 为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>，同时 <ph id="ph5">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> 为 -1，<ph id="ph6">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> 为 <ph id="ph7">&lt;see langword="false" /&gt;</ph>，或者 <ph id="ph8">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> 为 POST 或 PUT。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> has an entity body but the <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph> method is called without calling the <ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">该 <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> 具有实体，但不用调用 <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph> 方法调用 <ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> is greater than zero, but the application does not write all of the promised data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> 大于零，但应用程序不会写入所有承诺的数据。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph> was previously called.</source>
          <target state="translated">之前已调用 <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ClientCertificates">
          <source>Gets or sets the collection of security certificates that are associated with this request.</source>
          <target state="translated">获取或设置与此请求关联的安全证书集合。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ClientCertificates">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /&gt;</ph> that contains the security certificates associated with this request.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /&gt;</ph>，包含与此请求关联的安全证书。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ClientCertificates">
          <source>An application can add a certificate to a collection, but might not have access rights to it.</source>
          <target state="translated">应用程序可以将证书添加到集合，但可能没有访问权限。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ClientCertificates">
          <source>To use a certificate contained in the collection, the application must have the same access rights as the entity that issued the certificate.</source>
          <target state="translated">若要使用集合中包含的证书，该应用程序必须具有相同的访问权限，在颁发证书的实体。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ClientCertificates">
          <source>The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</source>
          <target state="translated">框架缓存 SSL 会话，因为它们创建，并尝试尽可能重用为新请求，缓存的会话。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ClientCertificates">
          <source>When attempting to reuse an SSL session, the Framework uses the first element of <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph> (if there is one), or tries to reuse an anonymous sessions if <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph> is empty.</source>
          <target state="translated">当尝试重复使用的 SSL 会话，框架将使用的第一个元素<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph>（如果没有一个），或尝试重用匿名会话，如果<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph>为空。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ClientCertificates">
          <source>For performance reasons, you shouldn't add a client certificate to a <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> unless you know the server will ask for it.</source>
          <target state="translated">出于性能原因，不应添加到客户端证书<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>除非你知道该服务器将要求提供。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ClientCertificates">
          <source>For a code example illustrating how to enumerate the certificates in the client certificate store, see the <ph id="ph1">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection&gt;</ph> class.</source>
          <target state="translated">有关代码示例演示如何枚举客户端证书存储中的证书，请参阅<ph id="ph1">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ClientCertificates">
          <source>The value specified for a set operation is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">为集运算指定的值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Connection">
          <source>Gets or sets the value of the <ph id="ph1">&lt;see langword="Connection" /&gt;</ph> HTTP header.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see langword="Connection" /&gt;</ph> HTTP 标头的值。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Connection">
          <source>The value of the <ph id="ph1">&lt;see langword="Connection" /&gt;</ph> HTTP header.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Connection" /&gt;</ph> HTTP 标头的值。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Connection">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Connection">
          <source>The request sends the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph> property to the Internet resource as the <ph id="ph2">`Connection`</ph> HTTP header.</source>
          <target state="translated">请求将发送<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph>到 Internet 资源作为属性<ph id="ph2">`Connection`</ph>HTTP 标头。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Connection">
          <source>If the value of the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the value "Keep-alive" is appended to the end of the <ph id="ph3">`Connection`</ph> header.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph>属性是<ph id="ph2">`true`</ph>，"保持活动状态"的值追加到末尾<ph id="ph3">`Connection`</ph>标头。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Connection">
          <source>To clear the <ph id="ph1">`Connection`</ph> HTTP header, set the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">若要清除<ph id="ph1">`Connection`</ph>设置 HTTP 标头，<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph>属性<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Connection">
          <source>Changing the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph> property after the request has been started by calling the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> method throws an <ph id="ph6">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">更改<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph>属性后已通过调用启动请求<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>，或<ph id="ph5">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph>方法抛出异常<ph id="ph6">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Connection">
          <source>The value for this property is stored in <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>.</source>
          <target state="translated">此属性的值存储在 <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Connection">
          <source>If WebHeaderCollection is set, the property value is lost.</source>
          <target state="translated">如果设置了 WebHeaderCollection，则该属性值将丢失。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Connection">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph> property to set the value of the Connection HTTP Header.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph>属性来设置连接 HTTP 标头的值。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Connection">
          <source>The value of <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Connection" /&gt;</ph> is set to Keep-alive or Close.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Connection" /&gt;</ph> 的值设置为保持连接或关闭。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ConnectionGroupName">
          <source>Gets or sets the name of the connection group for the request.</source>
          <target state="translated">获取或设置请求的连接组的名称。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ConnectionGroupName">
          <source>The name of the connection group for this request.</source>
          <target state="translated">该请求的连接组的名称。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ConnectionGroupName">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ConnectionGroupName">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ConnectionGroupName%2A&gt;</ph> property enables you to associate a request with a connection group.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ConnectionGroupName%2A&gt;</ph>属性使您能够将请求与连接组相关联。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ConnectionGroupName">
          <source>This is useful when your application makes requests to one server for different users, such as a Web site that retrieves customer information from a database server.</source>
          <target state="translated">当你的应用程序为不同的用户，例如从数据库服务器中检索客户信息的网站向一个服务器发出请求时，这非常有用。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ConnectionGroupName">
          <source>The following code example show how to use user information to form a connection group, assuming that the variables <ph id="ph1">`username`</ph>, <ph id="ph2">`password`</ph>, and <ph id="ph3">`domain`</ph> are set by the application before this code is called.</source>
          <target state="translated">下面的代码示例演示如何使用用户信息以便形成一个连接组，前提假定变量<ph id="ph1">`username`</ph>， <ph id="ph2">`password`</ph>，和<ph id="ph3">`domain`</ph>调用此代码之前已设置应用程序。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ConnectionGroupName">
          <source>Each connection group creates additional connections for a server.</source>
          <target state="translated">每个连接组创建其他连接的服务器。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ConnectionGroupName">
          <source>This may result in exceeding the number of connections set by the <ph id="ph1">&lt;see cref="P:System.Net.ServicePoint.ConnectionLimit" /&gt;</ph> property for that server.</source>
          <target state="translated">这可能会导致超出设置的连接数<ph id="ph1">&lt;see cref="P:System.Net.ServicePoint.ConnectionLimit" /&gt;</ph>属性为该服务器。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ContentLength">
          <source>Gets or sets the <ph id="ph1">&lt;see langword="Content-length" /&gt;</ph> HTTP header.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see langword="Content-length" /&gt;</ph> HTTP 标头。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentLength">
          <source>The number of bytes of data to send to the Internet resource.</source>
          <target state="translated">要发送到 Internet 资源的数据的字节数。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentLength">
          <source>The default is -1, which indicates the property has not been set and that there is no request data to send.</source>
          <target state="translated">默认值为 -1，该值指示尚未设置该属性，并且没有要发送的请求数据。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentLength">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property contains the value to send as the <ph id="ph2">`Content-length`</ph> HTTP header with the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph>属性包含的值将作为发送<ph id="ph2">`Content-length`</ph>与请求的 HTTP 标头。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentLength">
          <source>Any value other than -1 in the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property indicates that the request uploads data and that only methods that upload data are allowed to be set in the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Method%2A&gt;</ph> property.</source>
          <target state="translated">非-1 中的任何值<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph>属性指示，请求将数据上载和上载数据的方法允许要在设置<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Method%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentLength">
          <source>After the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property is set to a value, that number of bytes must be written to the request stream that is returned by calling the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method or both the <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> and the <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph> methods.</source>
          <target state="translated">后<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph>属性设置为一个值，字节数必须将写入到通过调用返回的请求流<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>方法或二者<ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>和<ph id="ph4">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentLength">
          <source>The value for this property is stored in <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>.</source>
          <target state="translated">此属性的值存储在 <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentLength">
          <source>If WebHeaderCollection is set, the property value is lost.</source>
          <target state="translated">如果设置了 WebHeaderCollection，则该属性值将丢失。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentLength">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property to the length of the string being posted.</source>
          <target state="translated">下面的代码示例设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph>属性设置为发布的字符串的长度。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ContentLength">
          <source>The request has been started by calling the <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph>, or <ph id="ph4">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">已通过调用 <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph>、<ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>、<ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph> 或 <ph id="ph4">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph> 方法启动请求。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ContentLength">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> value is less than 0.</source>
          <target state="translated">新的 <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> 值小于 0。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ContentType">
          <source>Gets or sets the value of the <ph id="ph1">&lt;see langword="Content-type" /&gt;</ph> HTTP header.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see langword="Content-type" /&gt;</ph> HTTP 标头的值。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentType">
          <source>The value of the <ph id="ph1">&lt;see langword="Content-type" /&gt;</ph> HTTP header.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Content-type" /&gt;</ph> HTTP 标头的值。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentType">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentType">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph> property contains the media type of the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph>属性包含请求的媒体类型。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentType">
          <source>Values assigned to the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph> property replace any existing contents when the request sends the <ph id="ph2">`Content-type`</ph> HTTP header.</source>
          <target state="translated">分配给值<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph>属性替换任何现有内容，当请求发送<ph id="ph2">`Content-type`</ph>HTTP 标头。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentType">
          <source>To clear the <ph id="ph1">`Content-type`</ph> HTTP header, set the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">若要清除<ph id="ph1">`Content-type`</ph>设置 HTTP 标头，<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph>属性<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentType">
          <source>The value for this property is stored in <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> .</source>
          <target state="translated">此属性的值存储在<ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentType">
          <source>If <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> is set, the property value is lost.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>设置，该属性值将丢失。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContentType">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph> property.</source>
          <target state="translated">下面的代码示例设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ContinueDelegate">
          <source>Gets or sets the delegate method called when an HTTP 100-continue response is received from the Internet resource.</source>
          <target state="translated">获取或设置当从 Internet 资源接收到 HTTP 100-continue 响应时调用的委托方法。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContinueDelegate">
          <source>A delegate that implements the callback method that executes when an HTTP Continue response is returned from the Internet resource.</source>
          <target state="translated">实现回调方法的委托，该方法在从 Internet 资源返回 HTTP Continue 响应时执行。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContinueDelegate">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContinueDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContinueDelegate%2A&gt;</ph> property specifies the callback method to call when the client receives a 100-Continue response.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContinueDelegate%2A&gt;</ph>属性指定当客户端接收到一个 100 时要调用的回调方法-继续响应。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContinueDelegate">
          <source>When the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContinueDelegate%2A&gt;</ph> property is set, the client calls the delegate whenever protocol responses of type <ph id="ph2">&lt;xref:System.Net.HttpStatusCode.Continue?displayProperty=nameWithType&gt;</ph> (100) are received.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContinueDelegate%2A&gt;</ph>属性设置，则客户端调用委托每当协议的类型的响应<ph id="ph2">&lt;xref:System.Net.HttpStatusCode.Continue?displayProperty=nameWithType&gt;</ph>(100) 接收。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContinueDelegate">
          <source>This is useful if you want the client to display the status of the data being received from the Internet resource.</source>
          <target state="translated">这是你希望客户端以显示从 Internet 资源接收的数据的状态的情况下很有用。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ContinueTimeout">
          <source>Gets or sets a timeout, in milliseconds, to wait until the 100-Continue is received from the server.</source>
          <target state="translated">获取或设置在接收到来自服务器的 100-Continue 之前要等待的超时（以毫秒为单位）。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContinueTimeout">
          <source>The timeout, in milliseconds, to wait until the 100-Continue is received.</source>
          <target state="translated">在接收到 100-Continue 之前要等待的超时（以毫秒为单位）。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ContinueTimeout">
          <source>If the 100-Continue response is received before the timeout expires, the entity body can be sent.</source>
          <target state="translated">如果 100-继续在超时到期时，可以发送的实体正文之前收到响应。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.CookieContainer">
          <source>Gets or sets the cookies associated with the request.</source>
          <target state="translated">获取或设置与此请求关联的 Cookie。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.CookieContainer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.CookieContainer" /&gt;</ph> that contains the cookies associated with this request.</source>
          <target state="translated">包含与此请求关联的 Cookie 的 <ph id="ph1">&lt;see cref="T:System.Net.CookieContainer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.CookieContainer">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.CookieContainer%2A&gt;</ph> property provides an instance of the <ph id="ph2">&lt;xref:System.Net.CookieContainer&gt;</ph> class that contains the cookies associated with this request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.CookieContainer%2A&gt;</ph>属性提供的实例<ph id="ph2">&lt;xref:System.Net.CookieContainer&gt;</ph>类，其中包含与此请求关联的 cookie。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.CookieContainer">
          <source><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.CookieContainer%2A&gt;</ph> is <ph id="ph2">`null`</ph> by default.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.CookieContainer%2A&gt;</ph> 是<ph id="ph2">`null`</ph>默认情况下。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.CookieContainer">
          <source>You must assign a <ph id="ph1">&lt;xref:System.Net.CookieContainer&gt;</ph> object to the property to have cookies returned in the <ph id="ph2">&lt;xref:System.Net.HttpWebResponse.Cookies%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Net.HttpWebResponse&gt;</ph> returned by the <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> method.</source>
          <target state="translated">你必须分配<ph id="ph1">&lt;xref:System.Net.CookieContainer&gt;</ph>有中返回的 cookie 的属性的对象<ph id="ph2">&lt;xref:System.Net.HttpWebResponse.Cookies%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Net.HttpWebResponse&gt;</ph>返回<ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.CookieContainer">
          <source>For security reasons, cookies are disabled by default.</source>
          <target state="translated">出于安全原因，默认情况下 cookie 处于禁用状态。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.CookieContainer">
          <source>If you want to use cookies, use the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.CookieContainer%2A&gt;</ph> property to enable cookies.</source>
          <target state="translated">如果你想要使用 cookie，使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.CookieContainer%2A&gt;</ph>属性来启用 cookie。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.CookieContainer">
          <source>The following code example sends a request to a URL and displays the cookies returned in the response.</source>
          <target state="translated">下面的代码示例将请求发送到 URL，并显示在响应中返回的 cookie。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>Gets or sets authentication information for the request.</source>
          <target state="translated">获取或设置请求的身份验证信息。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.ICredentials" /&gt;</ph> that contains the authentication credentials associated with the request.</source>
          <target state="translated">包含与该请求关联的身份验证凭据的 <ph id="ph1">&lt;see cref="T:System.Net.ICredentials" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Credentials%2A&gt;</ph> property contains authentication information to identify the maker of the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Credentials%2A&gt;</ph>属性包含身份验证信息以标识请求的创建者。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Credentials%2A&gt;</ph> property can be either a <ph id="ph2">&lt;xref:System.Net.NetworkCredential&gt;</ph>, in which case the user, password, and domain information contained in the <ph id="ph3">&lt;xref:System.Net.NetworkCredential&gt;</ph> object is used to authenticate the request, or it can be a <ph id="ph4">&lt;xref:System.Net.CredentialCache&gt;</ph>, in which case the Uniform Resource Identifier (URI) of the request is used to determine the user, password, and domain information to use to authenticate the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Credentials%2A&gt;</ph>属性可以是<ph id="ph2">&lt;xref:System.Net.NetworkCredential&gt;</ph>，而在哪些情况下，用户、 密码和域信息中包含<ph id="ph3">&lt;xref:System.Net.NetworkCredential&gt;</ph>对象用于进行身份验证请求，也可以是<ph id="ph4">&lt;xref:System.Net.CredentialCache&gt;</ph>，在这种情况下统一资源请求标识符 (URI) 用于确定要用于对请求进行身份验证用户、 密码和域信息。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>In most client scenarios, you should use the <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph> property, which contains the credentials of the currently logged on user.</source>
          <target state="translated">在大多数客户端方案，应使用<ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>属性，其中包含当前登录用户的凭据。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>To do this, set the <ph id="ph1">&lt;xref:System.Net.WebClient.UseDefaultCredentials%2A&gt;</ph> property to <ph id="ph2">`true`</ph> instead of setting this property.</source>
          <target state="translated">若要执行此操作，将设置<ph id="ph1">&lt;xref:System.Net.WebClient.UseDefaultCredentials%2A&gt;</ph>属性<ph id="ph2">`true`</ph>而不是设置此属性。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class is being used in a middle-tier application, such as an ASP.NET application, the credentials in the <ph id="ph2">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph> property belong to the account running the ASP page (the server-side credentials).</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>类正在使用在中间层应用程序，如 ASP.NET 应用程序中的凭据<ph id="ph2">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>属性属于运行 ASP 页面 （服务器端凭据） 的帐户。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>Typically, you would set this property to the credentials of the client on whose behalf the request is made.</source>
          <target state="translated">通常情况下，将此属性设置为客户端的名义发出的请求的凭据。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>The NTLM authentication scheme cannot be used to impersonate another user.</source>
          <target state="translated">无法使用 NTLM 身份验证方案，模拟其他用户。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>Kerberos must be specially configured to support impersonation.</source>
          <target state="translated">必须专门配置 Kerberos 以支持模拟。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>To restrict HttpWebRequest to one or more authentication methods, use the <ph id="ph1">&lt;xref:System.Net.CredentialCache&gt;</ph> class and bind your credentials to one or more authentication schemes</source>
          <target state="translated">若要限制 HttpWebRequest 对一个或多个身份验证方法，请使用<ph id="ph1">&lt;xref:System.Net.CredentialCache&gt;</ph>类并将你的凭据绑定到一个或多个身份验证方案</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>Supported authentication schemes include Digest, Negotiate, Kerberos, NTLM, and Basic.</source>
          <target state="translated">支持的身份验证方案包括摘要式、 协商、 Kerberos、 NTLM 和 Basic。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>For security reasons, when automatically following redirects, store the credentials that you want to be included in the redirect in a <ph id="ph1">&lt;xref:System.Net.CredentialCache&gt;</ph> and assign it to this property.</source>
          <target state="translated">出于安全原因，自动遵循重定向时，你想要包含在中的重定向将凭据存储<ph id="ph1">&lt;xref:System.Net.CredentialCache&gt;</ph>并将其分配给此属性。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>This property will automatically be set to <ph id="ph1">`null`</ph> upon redirection if it contains anything except a <ph id="ph2">&lt;xref:System.Net.CredentialCache&gt;</ph>.</source>
          <target state="translated">此属性将自动设置为<ph id="ph1">`null`</ph>在重定向，如果它包含除<ph id="ph2">&lt;xref:System.Net.CredentialCache&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>Having this property value be automatically set to <ph id="ph1">`null`</ph> under those conditions prevents credentials from being sent to any unintended destination.</source>
          <target state="translated">具有此属性的值自动设置为<ph id="ph1">`null`</ph>在这些情况下防止凭据被发送到任何非预期目标。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Credentials">
          <source>The following code example sets the credentials for a request.</source>
          <target state="translated">下面的代码示例设置请求的凭据。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Date">
          <source>Get or set the <ph id="ph1">&lt;see langword="Date" /&gt;</ph> HTTP header value to use in an HTTP request.</source>
          <target state="translated">获取或设置要在 HTTP 请求中使用的 <ph id="ph1">&lt;see langword="Date" /&gt;</ph> HTTP 标头值。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Date">
          <source>The Date header value in the HTTP request.</source>
          <target state="translated">HTTP 请求中的 Date 标头值。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Date">
          <source>If the Date header is <ph id="ph1">`null`</ph>, then the return value will be set to <ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果日期标头<ph id="ph1">`null`</ph>，则返回值将设置为<ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Date">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> property is a standard <ph id="ph2">&lt;xref:System.DateTime?displayProperty=nameWithType&gt;</ph> object and can contain a <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=nameWithType&gt;</ph> field of <ph id="ph4">&lt;xref:System.DateTimeKind.Local?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.DateTimeKind.Utc?displayProperty=nameWithType&gt;</ph>, or <ph id="ph6">&lt;xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph>属性是一种标准<ph id="ph2">&lt;xref:System.DateTime?displayProperty=nameWithType&gt;</ph>对象，并可以包含<ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=nameWithType&gt;</ph>字段<ph id="ph4">&lt;xref:System.DateTimeKind.Local?displayProperty=nameWithType&gt;</ph>， <ph id="ph5">&lt;xref:System.DateTimeKind.Utc?displayProperty=nameWithType&gt;</ph>，或<ph id="ph6">&lt;xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Date">
          <source>Any kind of time can be set when using the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> property.</source>
          <target state="translated">使用时，可以设置任何类型的时间<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Date">
          <source>If <ph id="ph1">&lt;xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType&gt;</ph> is set or retrieved, the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> property is assumed to be <ph id="ph3">&lt;xref:System.DateTimeKind.Local?displayProperty=nameWithType&gt;</ph> (local time).</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType&gt;</ph>进行设置或检索，<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph>属性被假定为<ph id="ph3">&lt;xref:System.DateTimeKind.Local?displayProperty=nameWithType&gt;</ph>（当地时间）。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Date">
          <source>The classes in the <ph id="ph1">&lt;xref:System.Net&gt;</ph> namespace always write it out the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> property on the wire during transmission in standard form using GMT (Utc) format.</source>
          <target state="translated">中的类<ph id="ph1">&lt;xref:System.Net&gt;</ph>命名空间始终将其写出<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph>是在使用格林威治标准时间 (Utc) 格式的标准窗体中的传输期间在网络上的属性。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Date">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph>, then the <ph id="ph3">`Date`</ph> HTTP header is removed from the <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> property and the <ph id="ph5">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph>属性设置为<ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph>，则<ph id="ph3">`Date`</ph>HTTP 标头删除从<ph id="ph4">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph>属性和<ph id="ph5">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Date">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> property is <ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph>, this indicates that the <ph id="ph3">`Date`</ph> HTTP header is not included in the <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> property and the <ph id="ph5">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph>属性是<ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph>，这指示<ph id="ph3">`Date`</ph>HTTP 标头未包含在<ph id="ph4">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph>属性和<ph id="ph5">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Date">
          <source>The value for this property is stored in <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>.</source>
          <target state="translated">此属性的值存储在 <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Date">
          <source>If WebHeaderCollection is set, the property value is lost.</source>
          <target state="translated">如果设置了 WebHeaderCollection，则该属性值将丢失。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Date">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> is set and an attempt is made to send a <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> with no body, then a <ph id="ph3">&lt;xref:System.Net.ProtocolViolationException?displayProperty=nameWithType&gt;</ph> will be thrown by the <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph> methods.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph>设置和尝试发送<ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>没有正文，则<ph id="ph3">&lt;xref:System.Net.ProtocolViolationException?displayProperty=nameWithType&gt;</ph>将引发<ph id="ph4">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>，和<ph id="ph6">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source>Gets or sets the default cache policy for this request.</source>
          <target state="translated">获取或设置此请求的默认缓存策略。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.Cache.HttpRequestCachePolicy" /&gt;</ph> that specifies the cache policy in effect for this request when no other policy is applicable.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Net.Cache.HttpRequestCachePolicy" /&gt;</ph>，它指定当没有其他策略适用时对此请求有效的缓存策略。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source>Setting this property registers the specified policy for the HTTP and HTTPS schemes.</source>
          <target state="translated">设置此属性注册为 HTTP 和 HTTPS 方案指定的策略。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source>This policy is used for this request if:</source>
          <target state="translated">如果此请求使用此策略：</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source>There is no <ph id="ph1">&lt;xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType&gt;</ph> property specified for this request.</source>
          <target state="translated">没有任何<ph id="ph1">&lt;xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType&gt;</ph>为此请求指定的属性。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source>The machine and application configuration files do not specify a cache policy that is applicable to the Uniform Resource Identifier (URI) used to create this request.</source>
          <target state="translated">不适用到统一资源标识符 (URI) 的缓存策略用于创建此请求指定文件的计算机和应用程序配置。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source>The cache policy determines whether the requested resource can be taken from a cache instead of sending the request to the resource host computer.</source>
          <target state="translated">缓存策略将确定是否可以从缓存而不是将请求发送到的资源主机计算机获取请求的资源。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source>A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</source>
          <target state="translated">如果资源的响应流是检索，并且读取到流末尾，资源的副本是仅添加到缓存。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source>So another request for the same resource could use a cached copy, depending on the cache policy level for this request.</source>
          <target state="translated">因此相同的资源的另一个请求可以使用缓存的副本，具体取决于此请求的缓存策略级别。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source>for unrestricted access to network resources.</source>
          <target state="translated">无限制地访问网络资源。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultCachePolicy">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.DefaultMaximumErrorResponseLength">
          <source>Gets or sets the default maximum length of an HTTP error response.</source>
          <target state="translated">获取或设置 HTTP 错误响应的默认最大长度。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultMaximumErrorResponseLength">
          <source>The default maximum length of an HTTP error response.</source>
          <target state="translated">HTTP 错误响应的默认最大长度。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.DefaultMaximumErrorResponseLength">
          <source>The value is less than 0 and is not equal to -1.</source>
          <target state="translated">值小于 0 并且不等于 -1。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength">
          <source>Gets or sets the default for the <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" /&gt;</ph> property.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" /&gt;</ph> 属性的默认值。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength">
          <source>The length, in kilobytes (1024 bytes), of the default maximum for response headers received.</source>
          <target state="translated">接收的响应标头的默认最大长度，以 KB（1024 字节）为单位。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength">
          <source>The default configuration file sets this value to 64 kilobytes.</source>
          <target state="translated">默认配置文件将此值设置为 64 KB。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength">
          <source>The length of the response header received the response status line and any extra control characters that are received as part of HTTP protocol.</source>
          <target state="translated">响应状态行以及作为 HTTP 协议的一部分接收任何额外的控制字符，接收到响应标头的长度。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength">
          <source>A value of -1 means no limit is imposed on the response headers received; a value of 0 means that all requests fail.</source>
          <target state="translated">值为-1 表示没有限制收到; 对响应标头值为 0 表示将所有请求将都失败。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength">
          <source>This value can also be changed in the configuration file.</source>
          <target state="translated">也可以在配置文件中更改此值。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength">
          <source>The impact of this property can be overridden by setting the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A&gt;</ph> property on an instance of the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class.</source>
          <target state="translated">此属性的影响可以通过设置重写<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A&gt;</ph>实例上的属性<ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength">
          <source>The value is not equal to -1 and is less than zero.</source>
          <target state="translated">该值不等于 -1 且小于 0。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="T:System.Net.HttpWebRequest">
          <source>Ends an asynchronous request for a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object to use to write data.</source>
          <target state="translated">结束对用来写入数据的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 对象的异步请求。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>The pending request for a stream.</source>
          <target state="translated">对流的挂起请求。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>Ends an asynchronous request for a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object to use to write data.</source>
          <target state="translated">结束对用来写入数据的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 对象的异步请求。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> to use to write request data.</source>
          <target state="translated">用于写入请求数据的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph> method completes an asynchronous request for a stream that was started by the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph>方法完成对已由启动的流的异步请求<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>After the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object has been returned, you can send data with the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> by using the <ph id="ph3">&lt;xref:System.IO.Stream.Write%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">后<ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>返回对象，因此可以将数据与<ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>使用<ph id="ph3">&lt;xref:System.IO.Stream.Write%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>You must set the value of the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property before writing data to the stream.</source>
          <target state="translated">必须设置的值<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph>数据写入流之前的属性。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>You must call the <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph> method to close the stream and release the connection for reuse.</source>
          <target state="translated">必须调用<ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph>方法来关闭的流并释放重用的连接。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>Failure to close the stream causes your application to run out of connections.</source>
          <target state="translated">未关闭的流将导致你的应用程序耗尽连接。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>在.NET Framework 中进行网络跟踪<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph> method to end an asynchronous request for a stream instance.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph>方法来结束对流实例的异步请求。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>The request did not complete, and no stream is available.</source>
          <target state="translated">请求未完成，没有可用的流。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not returned by the current instance from a call to <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated">当前实例没有从对 <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph> 的调用返回 <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>This method was called previously using <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>.</source>
          <target state="translated">以前使用 <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 调用过此方法。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph> was previously called.</source>
          <target state="translated">之前已调用 <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
          <source>An error occurred while processing the request.</source>
          <target state="translated">处理请求时出错。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>The pending request for a stream.</source>
          <target state="translated">对流的挂起请求。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>Ends an asynchronous request for a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object to use to write data and outputs the <ph id="ph2">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph> associated with the stream.</source>
          <target state="translated">结束对用于写入数据的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 对象的异步请求，并输出与该流关联的 <ph id="ph2">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> to use to write request data.</source>
          <target state="translated">用于写入请求数据的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph> method completes an asynchronous request for a stream that was started by the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> method and outputs the <ph id="ph3">&lt;xref:System.Net.TransportContext&gt;</ph> associated with the stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph>方法完成对已由启动的流的异步请求<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>方法和输出<ph id="ph3">&lt;xref:System.Net.TransportContext&gt;</ph>与流关联。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>After the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object has been returned, you can send data with the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> by using the <ph id="ph3">&lt;xref:System.IO.Stream.Write%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">后<ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>返回对象，因此可以将数据与<ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>使用<ph id="ph3">&lt;xref:System.IO.Stream.Write%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>Some applications that use integrated Windows authentication with extended protection may need to be able to query the transport layer used by <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> in order to retrieve the channel binding token (CBT) from the underlying TLS channel.</source>
          <target state="translated">某些具有扩展保护使用集成的 Windows 身份验证应用程序可能需要能够查询使用的传输层<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>以检索从基础 TLS 通道的通道绑定令牌 (CBT)。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method provides access to this information for HTTP methods which have a request body (<ph id="ph2">`POST`</ph> and <ph id="ph3">`PUT`</ph> requests).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>方法提供此信息对其具有请求正文的 HTTP 方法的访问 (<ph id="ph2">`POST`</ph>和<ph id="ph3">`PUT`</ph>请求)。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>This is only needed if the application is implementing its own authentication and needs access to the CBT.</source>
          <target state="translated">这仅需要如果应用程序实现其自己的身份验证，并需要访问 CBT。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>If an application needs to set the value of the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property, then this must be done before retrieving the stream and writing data to it.</source>
          <target state="translated">如果应用程序需要设置的值<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph>属性，则这必须在检索流，并向其中写入数据之前的情况下完成。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>You must call the <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph> method to close the stream and release the connection for reuse.</source>
          <target state="translated">必须调用<ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph>方法来关闭的流并释放重用的连接。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>Failure to close the stream causes your application to run out of connections.</source>
          <target state="translated">未关闭的流将导致你的应用程序耗尽连接。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>在.NET Framework 中进行网络跟踪<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not returned by the current instance from a call to <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated">当前实例没有从对 <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph> 的调用返回 <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>This method was called previously using <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>.</source>
          <target state="translated">以前使用 <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 调用过此方法。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>The request did not complete, and no stream is available.</source>
          <target state="translated">请求未完成，没有可用的流。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph> was previously called.</source>
          <target state="translated">之前已调用 <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
          <source>An error occurred while processing the request.</source>
          <target state="translated">处理请求时出错。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>The pending request for a response.</source>
          <target state="translated">对响应的挂起请求。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>Ends an asynchronous request to an Internet resource.</source>
          <target state="translated">结束对 Internet 资源的异步请求。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.WebResponse" /&gt;</ph> that contains the response from the Internet resource.</source>
          <target state="translated">包含来自 Internet 资源的响应的 <ph id="ph1">&lt;see cref="T:System.Net.WebResponse" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph> method completes an asynchronous request for an Internet resource that was started by calling the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph>方法完成已由调用启动对 Internet 资源的异步请求<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>You must call the <ph id="ph1">&lt;xref:System.Net.HttpWebResponse.Close%2A&gt;</ph> method to close the stream and release the connection.</source>
          <target state="translated">必须调用<ph id="ph1">&lt;xref:System.Net.HttpWebResponse.Close%2A&gt;</ph>方法来关闭的流并释放连接。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>Failure to do so may cause your application to run out of connections.</source>
          <target state="translated">如果不这样做可能会导致你的应用程序耗尽连接。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>在.NET Framework 中进行网络跟踪<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph> method to end an asynchronous request for an Internet resource.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph>方法来结束对 Internet 资源的异步请求。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>This method was called previously using <ph id="ph1">&lt;paramref name="asyncResult." /&gt;</ph></source>
          <target state="translated">之前已使用 <ph id="ph1">&lt;paramref name="asyncResult." /&gt;</ph> 调用了此方法</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> property is greater than 0 but the data has not been written to the request stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> 属性大于 0，但数据尚未写入到请求流。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph> was previously called.</source>
          <target state="translated">之前已调用 <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source>An error occurred while processing the request.</source>
          <target state="translated">处理请求时出错。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not returned by the current instance from a call to <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated">当前实例没有从对 <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph> 的调用返回 <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Expect">
          <source>Gets or sets the value of the <ph id="ph1">&lt;see langword="Expect" /&gt;</ph> HTTP header.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see langword="Expect" /&gt;</ph> HTTP 标头的值。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Expect">
          <source>The contents of the <ph id="ph1">&lt;see langword="Expect" /&gt;</ph> HTTP header.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Expect" /&gt;</ph>HTTP 标头的内容。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Expect">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Expect">
          <source>The value for this property is stored in <ph id="ph1">&lt;see cref="T:System.Net.WebHeaderCollection" /&gt;</ph>.</source>
          <target state="translated">此属性的值存储在 <ph id="ph1">&lt;see cref="T:System.Net.WebHeaderCollection" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Expect">
          <source>If WebHeaderCollection is set, the property value is lost.</source>
          <target state="translated">如果设置了 WebHeaderCollection，则该属性值将丢失。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Expect">
          <source><ph id="ph1">&lt;see langword="Expect" /&gt;</ph> is set to a string that contains "100-continue" as a substring.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Expect" /&gt;</ph> 被设置为一个包含“100-continue”（作为子字符串）的字符串。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> to populate with data.</source>
          <target state="translated">要填充数据的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that specifies the destination for this serialization.</source>
          <target state="translated">用于指定该序列化的目标的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> with the data required to serialize the target object.</source>
          <target state="translated">使用序列化目标对象时所需的数据填充 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Any objects included in the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> are automatically tracked and serialized by the formatter.</source>
          <target state="translated">中包含的任何对象<ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>会自动跟踪和序列化格式化程序。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="T:System.Net.HttpWebRequest">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object to use to write request data.</source>
          <target state="translated">获取用于写入请求数据的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object to use to write request data.</source>
          <target state="translated">获取用于写入请求数据的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> to use to write request data.</source>
          <target state="translated">用于写入请求数据的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method returns a stream to use to send data for the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>方法返回的流用于将数据发送以<ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>After the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object has been returned, you can send data with the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> by using the <ph id="ph3">&lt;xref:System.IO.Stream.Write%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">后<ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>返回对象，因此可以将数据与<ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>使用<ph id="ph3">&lt;xref:System.IO.Stream.Write%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>If an application needs to set the value of the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property, then this must be done before retrieving the stream.</source>
          <target state="translated">如果应用程序需要设置的值<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph>属性，则这必须检索流之前的情况下完成。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>You must call the <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph> method to close the stream and release the connection for reuse.</source>
          <target state="translated">必须调用<ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph>方法来关闭的流并释放重用的连接。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>Failure to close the stream causes your application to run out of connections.</source>
          <target state="translated">未关闭的流将导致你的应用程序耗尽连接。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>Your application cannot mix synchronous and asynchronous methods for a particular request.</source>
          <target state="translated">你的应用程序不能混合使用的特定请求的同步和异步方法。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>If you call the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method, you must use the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> method to retrieve the response.</source>
          <target state="translated">如果调用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>方法，则必须使用<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>方法来检索响应。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>在.NET Framework 中进行网络跟踪<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method to return a stream instance.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>方法返回的流实例。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> property is GET or HEAD.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> 属性为 GET 或 HEAD。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.KeepAlive" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>, <ph id="ph5">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> is -1, <ph id="ph6">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph7">&lt;see langword="false" /&gt;</ph>, and <ph id="ph8">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> is POST or PUT.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.KeepAlive" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，<ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph> 为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>，<ph id="ph5">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> 为 -1，<ph id="ph6">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> 为 <ph id="ph7">&lt;see langword="false" /&gt;</ph>，<ph id="ph8">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> 为 POST 或 PUT。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph> method is called more than once.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph> 方法被调用多次。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph> is set to a value and <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph> 设置为一个值，且 <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>The request cache validator indicated that the response for this request can be served from the cache; however, requests that write data must not use the cache.</source>
          <target state="translated">请求缓存验证程序指示对此请求的响应可从缓存中提供；但是，写入数据的请求不得使用缓存。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>This exception can occur if you are using a custom cache validator that is incorrectly implemented.</source>
          <target state="translated">如果你正在使用错误实现的自定义缓存验证程序，则会发生此异常。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph> was previously called.</source>
          <target state="translated">之前已调用 <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>The time-out period for the request expired.</source>
          <target state="translated">请求的超时期限到期。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>An error occurred while processing the request.</source>
          <target state="translated">处理请求时出错。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>In a .NET Compact Framework application, a request stream with zero content length was not obtained and closed correctly.</source>
          <target state="translated">在 .NET Compact Framework 应用程序中，未正确获得和关闭一个内容长度为零的请求流。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream">
          <source>For more information about handling zero content length requests, see <bpt id="p1">[</bpt>Network Programming in the .NET Compact Framework<ept id="p1">](https://msdn.microsoft.com/subscriptions/downloads/1afx2b0f\(v=vs.80\).aspx)</ept>.</source>
          <target state="translated">有关处理内容长度为零的请求的详细信息，请参阅 <bpt id="p1">[</bpt>.NET Compact Framework 中的网络编程<ept id="p1">](https://msdn.microsoft.com/subscriptions/downloads/1afx2b0f\(v=vs.80\).aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object to use to write request data and outputs the <ph id="ph2">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph> associated with the stream.</source>
          <target state="translated">获取用于写入请求数据的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 对象，并输出与该流关联的 <ph id="ph2">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> to use to write request data.</source>
          <target state="translated">用于写入请求数据的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method returns a stream to use to send data for the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and outputs the <ph id="ph3">&lt;xref:System.Net.TransportContext&gt;</ph> associated with the stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>方法返回的流用于将数据发送以<ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>并输出<ph id="ph3">&lt;xref:System.Net.TransportContext&gt;</ph>与流关联。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>After the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object has been returned, you can send data with the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> by using the <ph id="ph3">&lt;xref:System.IO.Stream.Write%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">后<ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>返回对象，因此可以将数据与<ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>使用<ph id="ph3">&lt;xref:System.IO.Stream.Write%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>Some applications that use integrated Windows authentication with extended protection may need to be able to query the transport layer used by <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> in order to retrieve the channel binding token (CBT) from the underlying TLS channel.</source>
          <target state="translated">某些具有扩展保护使用集成的 Windows 身份验证应用程序可能需要能够查询使用的传输层<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>以检索从基础 TLS 通道的通道绑定令牌 (CBT)。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method provides access to this information for HTTP methods which have a request body (<ph id="ph2">`POST`</ph> and <ph id="ph3">`PUT`</ph> requests).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>方法提供此信息对其具有请求正文的 HTTP 方法的访问 (<ph id="ph2">`POST`</ph>和<ph id="ph3">`PUT`</ph>请求)。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>This is only needed if the application is implementing its own authentication and needs access to the CBT.</source>
          <target state="translated">这仅需要如果应用程序实现其自己的身份验证，并需要访问 CBT。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>If an application needs to set the value of the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property, then this must be done before retrieving the stream.</source>
          <target state="translated">如果应用程序需要设置的值<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph>属性，则这必须检索流之前的情况下完成。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>You must call the <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph> method to close the stream and release the connection for reuse.</source>
          <target state="translated">必须调用<ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph>方法来关闭的流并释放重用的连接。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>Failure to close the stream causes your application to run out of connections.</source>
          <target state="translated">未关闭的流将导致你的应用程序耗尽连接。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>Your application cannot mix synchronous and asynchronous methods for a particular request.</source>
          <target state="translated">你的应用程序不能混合使用的特定请求的同步和异步方法。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method, you must use the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> method to retrieve the response.</source>
          <target state="translated">如果调用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>方法，则必须使用<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>方法来检索响应。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>在.NET Framework 中进行网络跟踪<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph> method was unable to obtain the <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph> 方法无法获取 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph> method is called more than once.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph> 方法被调用多次。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph> is set to a value and <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph> 设置为一个值，且 <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>The request cache validator indicated that the response for this request can be served from the cache; however, requests that write data must not use the cache.</source>
          <target state="translated">请求缓存验证程序指示对此请求的响应可从缓存中提供；但是，写入数据的请求不得使用缓存。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>This exception can occur if you are using a custom cache validator that is incorrectly implemented.</source>
          <target state="translated">如果你正在使用错误实现的自定义缓存验证程序，则会发生此异常。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> property is GET or HEAD.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> 属性为 GET 或 HEAD。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.KeepAlive" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>, <ph id="ph5">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> is -1, <ph id="ph6">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph7">&lt;see langword="false" /&gt;</ph>, and <ph id="ph8">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> is POST or PUT.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.KeepAlive" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，<ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph> 为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>，<ph id="ph5">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> 为 -1，<ph id="ph6">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> 为 <ph id="ph7">&lt;see langword="false" /&gt;</ph>，<ph id="ph8">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> 为 POST 或 PUT。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph> was previously called.</source>
          <target state="translated">之前已调用 <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>The time-out period for the request expired.</source>
          <target state="translated">请求的超时期限到期。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
          <source>An error occurred while processing the request.</source>
          <target state="translated">处理请求时出错。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>Returns a response from an Internet resource.</source>
          <target state="translated">返回来自 Internet 资源的响应。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.WebResponse" /&gt;</ph> that contains the response from the Internet resource.</source>
          <target state="translated">包含来自 Internet 资源的响应的 <ph id="ph1">&lt;see cref="T:System.Net.WebResponse" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Net.WebResponse&gt;</ph> object that contains the response from the Internet resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>方法返回<ph id="ph2">&lt;xref:System.Net.WebResponse&gt;</ph>对象，其中包含来自 Internet 资源的响应。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>The actual instance returned is an <ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph>, and can be typecast to that class to access HTTP-specific properties.</source>
          <target state="translated">实际的实例，则返回<ph id="ph1">&lt;xref:System.Net.HttpWebResponse&gt;</ph>，和可以强制转换为该类以访问 HTTP 特定属性。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>A <ph id="ph1">&lt;xref:System.Net.ProtocolViolationException&gt;</ph> is thrown in several cases when the properties set on the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class are conflicting.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Net.ProtocolViolationException&gt;</ph>时设置的属性，在某些情况下引发<ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>类是冲突。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>This exception occurs if an application sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> property to <ph id="ph3">`true`</ph>, and then sends an HTTP GET request.</source>
          <target state="translated">如果应用程序设置，则会发生此异常<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph>属性和<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph>属性<ph id="ph3">`true`</ph>，然后将发送 HTTP GET 请求。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>This exception occurs if an application tries to send chunked to a server that only supports HTTP 1.0 protocol, where this is not supported.</source>
          <target state="translated">如果应用程序尝试向发送分块请求到的服务器，仅支持 HTTP 1.0 协议，这不支持，则会发生此异常。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>This exception occurs if an application tries to send data without setting the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property or the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> is <ph id="ph3">`false`</ph> when buffering is disabled and on a keepalive connection (the <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> property is <ph id="ph5">`true`</ph>)<ph id="ph6">`.`</ph></source>
          <target state="translated">如果应用程序尝试发送数据而无需设置，则会发生此异常<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph>属性或<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph>是<ph id="ph3">`false`</ph>禁用缓冲和 keepalive 连接上 (<ph id="ph4">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph>属性是<ph id="ph5">`true`</ph>)<ph id="ph6">`.`</ph></target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>You must call the <ph id="ph1">&lt;xref:System.Net.HttpWebResponse.Close%2A&gt;</ph> method to close the stream and release the connection.</source>
          <target state="translated">必须调用<ph id="ph1">&lt;xref:System.Net.HttpWebResponse.Close%2A&gt;</ph>方法来关闭的流并释放连接。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>Failure to do so may cause your application to run out of connections.</source>
          <target state="translated">如果不这样做可能会导致你的应用程序耗尽连接。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>When using the POST method, you must get the request stream, write the data to be posted, and close the stream.</source>
          <target state="translated">使用 POST 方法时，必须获取请求流、 将数据发布，写入和关闭的流。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>This method blocks waiting for content to post; if there is no time-out set and you do not provide content, the calling thread blocks indefinitely.</source>
          <target state="translated">此方法将一直阻塞等待内容发布;如果没有超时设置，并且不提供内容，调用的线程块无限期。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>Multiple calls to <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> return the same response object; the request is not reissued.</source>
          <target state="translated">多次调用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>返回相同的响应对象; 请求不重新颁发。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>Your application cannot mix synchronous and asynchronous methods for a particular request.</source>
          <target state="translated">你的应用程序不能混合使用的特定请求的同步和异步方法。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>If you call the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method, you must use the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> method to retrieve the response.</source>
          <target state="translated">如果调用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>方法，则必须使用<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>方法来检索响应。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>If a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown, use the <ph id="ph2">&lt;xref:System.Net.WebException.Response%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> properties of the exception to determine the response from the server.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph>是引发，使用<ph id="ph2">&lt;xref:System.Net.WebException.Response%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Net.WebException.Status%2A&gt;</ph>异常来确定来自服务器的响应的属性。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>在.NET Framework 中进行网络跟踪<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>For security reasons, cookies are disabled by default.</source>
          <target state="translated">出于安全原因，默认情况下 cookie 处于禁用状态。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>If you wish to use cookies, use the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.CookieContainer%2A&gt;</ph> property to enable cookies.</source>
          <target state="translated">如果你想要使用 cookie，使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.CookieContainer%2A&gt;</ph>属性来启用 cookie。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>The following code example gets the response for a request.</source>
          <target state="translated">下面的代码示例获取请求的响应。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>The stream is already in use by a previous call to <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated">流正由上一个 <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph> 调用使用。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph> is set to a value and <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph> 设置为一个值，且 <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> is GET or HEAD, and either <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> is greater or equal to zero or <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph4">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> 为 GET 或 HEAD，并且或者 <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> 大于或等于零，或者 <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> 为 <ph id="ph4">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.KeepAlive" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>, <ph id="ph5">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> is -1, <ph id="ph6">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph7">&lt;see langword="false" /&gt;</ph>, and <ph id="ph8">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> is POST or PUT.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.KeepAlive" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，<ph id="ph3">&lt;see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /&gt;</ph> 为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>，<ph id="ph5">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> 为 -1，<ph id="ph6">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> 为 <ph id="ph7">&lt;see langword="false" /&gt;</ph>，<ph id="ph8">&lt;see cref="P:System.Net.HttpWebRequest.Method" /&gt;</ph> 为 POST 或 PUT。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> has an entity body but the <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph> method is called without calling the <ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph> method.</source>
          <target state="translated">该 <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> 具有实体，但不用调用 <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph> 方法调用 <ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> is greater than zero, but the application does not write all of the promised data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.ContentLength" /&gt;</ph> 大于零，但应用程序不会写入所有承诺的数据。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>The request cache validator indicated that the response for this request can be served from the cache; however, this request includes data to be sent to the server.</source>
          <target state="translated">请求缓存验证程序表示对此请求的响应可从缓存中提供；但是该请求包含要发送到服务器的数据。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>Requests that send data must not use the cache.</source>
          <target state="translated">发送数据的请求不可使用缓存。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>This exception can occur if you are using a custom cache validator that is incorrectly implemented.</source>
          <target state="translated">如果你正在使用错误实现的自定义缓存验证程序，则会发生此异常。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source><ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph> was previously called.</source>
          <target state="translated">之前已调用 <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.Abort" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>The time-out period for the request expired.</source>
          <target state="translated">请求的超时期限到期。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.GetResponse">
          <source>An error occurred while processing the request.</source>
          <target state="translated">处理请求时出错。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.HaveResponse">
          <source>Gets a value that indicates whether a response has been received from an Internet resource.</source>
          <target state="translated">获取一个值，该值指示是否收到了来自 Internet 资源的响应。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.HaveResponse">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a response has been received; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果接收到了响应，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.HaveResponse">
          <source>The following code example checks the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.HaveResponse%2A&gt;</ph> property to determine if a response has been received from an Internet resource.</source>
          <target state="translated">下面的代码示例检查<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.HaveResponse%2A&gt;</ph>属性来确定是否已从 Internet 资源接收响应。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Specifies a collection of the name/value pairs that make up the HTTP headers.</source>
          <target state="translated">指定构成 HTTP 标头的名称/值对的集合。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.WebHeaderCollection" /&gt;</ph> that contains the name/value pairs that make up the headers for the HTTP request.</source>
          <target state="translated">包含构成 HTTP 请求标头的名称/值对的 <ph id="ph1">&lt;see cref="T:System.Net.WebHeaderCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> collection contains the protocol headers associated with the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph>集合包含与请求关联的协议标头。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>The following table lists the HTTP headers that are not stored in the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> collection but are either set by the system or set by properties or methods.</source>
          <target state="translated">下表列出了 HTTP 标头未存储在<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph>集合但系统设置的或者设置的属性或方法。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Header</source>
          <target state="translated">Header</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by</source>
          <target state="translated">通过设置</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Accept</source>
          <target state="translated">接受</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Accept%2A&gt;</ph> property.</source>
          <target state="translated">通过设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Accept%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Connection</source>
          <target state="translated">连接</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> property.</source>
          <target state="translated">通过设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Connection%2A&gt;</ph>属性和<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Content-Length</source>
          <target state="translated">Content-Length</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property.</source>
          <target state="translated">通过设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Content-Type</source>
          <target state="translated">Content-Type</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph> property.</source>
          <target state="translated">通过设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentType%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Expect</source>
          <target state="translated">预期</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Expect%2A&gt;</ph> property.</source>
          <target state="translated">通过设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Expect%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Date</source>
          <target state="translated">日期</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph> property.</source>
          <target state="translated">通过设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Date%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Host</source>
          <target state="translated">Host</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph> property.</source>
          <target state="translated">通过设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>If-Modified-Since</source>
          <target state="translated">If-Modified-Since</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> property.</source>
          <target state="translated">通过设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Range</source>
          <target state="translated">范围</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A&gt;</ph> method.</source>
          <target state="translated">通过设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AddRange%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Referer</source>
          <target state="translated">引用站点</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Referer%2A&gt;</ph> property.</source>
          <target state="translated">通过设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Referer%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Transfer-Encoding</source>
          <target state="translated">Transfer-Encoding</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.TransferEncoding%2A&gt;</ph> property (the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> property must be true).</source>
          <target state="translated">通过设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.TransferEncoding%2A&gt;</ph>属性 (<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph>属性必须为 true)。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>User-Agent</source>
          <target state="translated">User-Agent</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Set by the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.UserAgent%2A&gt;</ph> property.</source>
          <target state="translated">通过设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.UserAgent%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection.Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> if you try to set one of these protected headers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebHeaderCollection.Add%2A&gt;</ph>方法抛出异常<ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph>如果你尝试设置这些受保护的标头之一。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>Changing the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> property after the request has been started by calling <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> method throws an <ph id="ph6">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">更改<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph>属性后已通过调用启动请求<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>，或<ph id="ph5">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph>方法抛出异常<ph id="ph6">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>You should not assume that the header values will remain unchanged, because Web servers and caches may change or add headers to a Web request.</source>
          <target state="translated">不应假定，标头值将保持不变，因为 Web 服务器和缓存可能更改或添加到 Web 请求的标头。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Headers">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> property to print the HTTP header name/value pairs to the console.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph>属性可打印到控制台的 HTTP 标头名称/值对。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Headers">
          <source>The request has been started by calling the <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph>, or <ph id="ph4">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">已通过调用 <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph>、<ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>、<ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph> 或 <ph id="ph4">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph> 方法启动请求。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Host">
          <source>Get or set the Host header value to use in an HTTP request independent from the request URI.</source>
          <target state="translated">获取或设置要在 HTTP 请求中独立于请求 URI 使用的 Host 标头值。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>The Host header value in the HTTP request.</source>
          <target state="translated">HTTP 请求中的 Host 标头值。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph> property can be used to set the Host header value to use in an HTTP request independent from the request URI.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph>属性可以用于设置要在 HTTP 请求中独立于请求 URI 中使用的标头值的主机。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph> property can consist of a hostname and an optional port number.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph>属性可以包含主机名和一个可选端口号。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>A Host header without port information implies the default port for the service requested (port 80 for an HTTP URL, for example).</source>
          <target state="translated">主机标头不包含端口信息意味着的默认端口为请求的服务 （端口 80 HTTP URL，例如）。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>The format for specifying a host and port must follow the rules in section 14.23 of RFC2616 published by the IETF.</source>
          <target state="translated">指定主机和端口的格式必须遵循 14.23 小节中的发布的 IETF RFC2616 规则。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>An example complying with these requirements that specifies a port of 8080 would be the following value for the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph> property:</source>
          <target state="translated">满足这些要求的示例，指定的端口 8080 是以下值以查找<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph>属性：</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>Using the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph> property to explicitly specify a custom Host header value also affects areas caching, cookies, and authentication.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph>属性来显式指定的自定义主机标头值还会影响缓存的区域、 cookie 和身份验证。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>When an application provides credentials for a specific URI prefix, the applications needs to make sure to use the URI containing the value of the Host header, not the target server in the URI.</source>
          <target state="translated">在应用程序特定的 URI 前缀提供凭据，该应用程序将需要确保使用包含的值的 Host 标头，而不是在 URI 中的目标服务器的 URI。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>The key used when caching resources, uses the Host header value rather than the request URI.</source>
          <target state="translated">缓存资源时所使用的密钥使用的主机头值，而不是请求 URI。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>Cookies are stored in a <ph id="ph1">&lt;xref:System.Net.CookieContainer&gt;</ph> and logically grouped by the server domain name.</source>
          <target state="translated">Cookie 存储在<ph id="ph1">&lt;xref:System.Net.CookieContainer&gt;</ph>和服务器的域名进行逻辑分组。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>If the application specifies a Host header, then this value will be used as domain.</source>
          <target state="translated">如果应用程序将指定主机标头，此值将用作域。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Host">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph> property is not set, then the Host header value to use in an HTTP request is based on the request URI.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Host%2A&gt;</ph>未设置属性，则要在 HTTP 请求中使用的主机标头值基于请求 URI。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Host">
          <source>The Host header cannot be set to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">无法将 Host 标头设置为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Host">
          <source>The Host header cannot be set to an invalid value.</source>
          <target state="translated">无法将 Host 标头设置为无效值。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Host">
          <source>The Host header cannot be set after the <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> has already started to be sent.</source>
          <target state="translated">无法在已开始发送 <ph id="ph1">&lt;see cref="T:System.Net.HttpWebRequest" /&gt;</ph> 之后设置 Host 标头。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>Gets or sets the value of the <ph id="ph1">&lt;see langword="If-Modified-Since" /&gt;</ph> HTTP header.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see langword="If-Modified-Since" /&gt;</ph> HTTP 标头的值。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> that contains the contents of the <ph id="ph2">&lt;see langword="If-Modified-Since" /&gt;</ph> HTTP header.</source>
          <target state="translated">包含 <ph id="ph2">&lt;see langword="If-Modified-Since" /&gt;</ph>HTTP 标头内容的 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>The default value is the current date and time.</source>
          <target state="translated">默认值是当前日期和时间。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> property is a standard <ph id="ph2">&lt;xref:System.DateTime?displayProperty=nameWithType&gt;</ph> object and can contain a <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=nameWithType&gt;</ph> field of <ph id="ph4">&lt;xref:System.DateTimeKind.Local?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.DateTimeKind.Utc?displayProperty=nameWithType&gt;</ph>, or <ph id="ph6">&lt;xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph>属性是一种标准<ph id="ph2">&lt;xref:System.DateTime?displayProperty=nameWithType&gt;</ph>对象，并可以包含<ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=nameWithType&gt;</ph>字段<ph id="ph4">&lt;xref:System.DateTimeKind.Local?displayProperty=nameWithType&gt;</ph>， <ph id="ph5">&lt;xref:System.DateTimeKind.Utc?displayProperty=nameWithType&gt;</ph>，或<ph id="ph6">&lt;xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>Any kind of time can be set when using the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> property.</source>
          <target state="translated">使用时，可以设置任何类型的时间<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>If <ph id="ph1">&lt;xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType&gt;</ph> is set or retrieved, the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> property is assumed to be <ph id="ph3">&lt;xref:System.DateTimeKind.Local?displayProperty=nameWithType&gt;</ph> (local time).</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType&gt;</ph>进行设置或检索，<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph>属性被假定为<ph id="ph3">&lt;xref:System.DateTimeKind.Local?displayProperty=nameWithType&gt;</ph>（当地时间）。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>The classes in the <ph id="ph1">&lt;xref:System.Net&gt;</ph> namespace always write it out the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> property on the wire during transmission in standard form using GMT (Utc) format.</source>
          <target state="translated">中的类<ph id="ph1">&lt;xref:System.Net&gt;</ph>命名空间始终将其写出<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph>是在使用格林威治标准时间 (Utc) 格式的标准窗体中的传输期间在网络上的属性。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph>, then the <ph id="ph3">`If-Modified-Since`</ph> HTTP header is removed from the <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> property and the <ph id="ph5">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph>属性设置为<ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph>，则<ph id="ph3">`If-Modified-Since`</ph>HTTP 标头删除从<ph id="ph4">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph>属性和<ph id="ph5">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> property is <ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph>, this indicates that the <ph id="ph3">`If-Modified-Since`</ph> HTTP header is not included in the <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph> property and the <ph id="ph5">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph>属性是<ph id="ph2">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph>，这指示<ph id="ph3">`If-Modified-Since`</ph>HTTP 标头未包含在<ph id="ph4">&lt;xref:System.Net.HttpWebRequest.Headers%2A&gt;</ph>属性和<ph id="ph5">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>The value for this property is stored in <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>.</source>
          <target state="translated">此属性的值存储在 <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>If WebHeaderCollection is set, the property value is lost.</source>
          <target state="translated">如果设置了 WebHeaderCollection，则该属性值将丢失。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.IfModifiedSince">
          <source>The following code example checks the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph> property.</source>
          <target state="translated">下面的代码示例检查<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.IfModifiedSince%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.KeepAlive">
          <source>Gets or sets a value that indicates whether to make a persistent connection to the Internet resource.</source>
          <target state="translated">获取或设置一个值，该值指示是否与 Internet 资源建立持续型连接。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.KeepAlive">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the request to the Internet resource should contain a <ph id="ph2">&lt;see langword="Connection" /&gt;</ph> HTTP header with the value Keep-alive; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果对 Internet 资源的请求所包含的 <ph id="ph1">&lt;see langword="true" /&gt;</ph> HTTP 标头带有 Keep-alive 这一值，则为 <ph id="ph2">&lt;see langword="Connection" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.KeepAlive">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.KeepAlive">
          <source>Set this property to <ph id="ph1">`true`</ph> to send a <ph id="ph2">`Connection`</ph> HTTP header with the value Keep-alive.</source>
          <target state="translated">将此属性设置为<ph id="ph1">`true`</ph>发送<ph id="ph2">`Connection`</ph>保持活动状态的值的 HTTP 标头。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.KeepAlive">
          <source>An application uses <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> to indicate a preference for persistent connections.</source>
          <target state="translated">应用程序使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph>指示永久连接的首选项。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.KeepAlive">
          <source>When the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the application makes persistent connections to the servers that support them.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph>属性是<ph id="ph2">`true`</ph>，应用程序建立持久连接到支持这些服务器。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.KeepAlive">
          <source>When using HTTP/1.1, Keep-Alive is on by default.</source>
          <target state="translated">使用 HTTP/1.1，保持活动状态时，在默认情况下。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.KeepAlive">
          <source>Setting <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> to <ph id="ph2">`false`</ph> may result in sending a <ph id="ph3">`Connection: Close`</ph> header to the server.</source>
          <target state="translated">设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph>到<ph id="ph2">`false`</ph>可能会导致发送<ph id="ph3">`Connection: Close`</ph>到服务器的标头。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.KeepAlive">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> property to <ph id="ph2">`false`</ph> to avoid establishing a persistent connection with the Internet resource.</source>
          <target state="translated">下面的代码示例设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph>属性<ph id="ph2">`false`</ph>以免建立与 Internet 资源的持久连接。</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections">
          <source>Gets or sets the maximum number of redirects that the request follows.</source>
          <target state="translated">获取或设置请求将跟随的重定向的最大数目。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections">
          <source>The maximum number of redirection responses that the request follows.</source>
          <target state="translated">请求将跟随的重定向响应的最大数目。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections">
          <source>The default value is 50.</source>
          <target state="translated">默认值为 50。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MaximumAutomaticRedirections%2A&gt;</ph> property sets the maximum number of redirections for the request to follow if the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph> property is <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MaximumAutomaticRedirections%2A&gt;</ph>属性设置的最大的请求时应遵循的重定向<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph>属性是<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections">
          <source>The following code example sets the value of this property.</source>
          <target state="translated">下面的代码示例设置此属性的值。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections">
          <source>The value is set to 0 or less.</source>
          <target state="translated">值设置为 0 或更小。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
          <source>Gets or sets the maximum allowed length of the response headers.</source>
          <target state="translated">获取或设置响应标头允许的最大长度。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
          <source>The length, in kilobytes (1024 bytes), of the response headers.</source>
          <target state="translated">响应标头的长度，以 KB（1024 字节）为单位。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
          <source>The length of the response header includes the response status line and any extra control characters that are received as part of HTTP protocol.</source>
          <target state="translated">响应标头的长度包括响应状态行和作为 HTTP 协议的一部分接收任何额外的控制字符。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
          <source>A value of -1 means no limit is imposed on the response headers; a value of 0 means that all requests fail.</source>
          <target state="translated">值为-1 表示响应标头; 没有限制值为 0 表示将所有请求将都失败。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A&gt;</ph> property is not explicitly set, it defaults to the value of the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength%2A&gt;</ph> property.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A&gt;</ph>属性未显式设置，则它默认为的值<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
          <source>If the length of the response header received exceeds the value of the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> methods will throw a <ph id="ph4">&lt;xref:System.Net.WebException&gt;</ph> with the <ph id="ph5">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to <ph id="ph6">&lt;xref:System.Net.WebExceptionStatus.MessageLengthLimitExceeded&gt;</ph>.</source>
          <target state="translated">如果收到响应标头的长度超出的值<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A&gt;</ph>属性，<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.EndGetResponse%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>方法都会引发<ph id="ph4">&lt;xref:System.Net.WebException&gt;</ph>与<ph id="ph5">&lt;xref:System.Net.WebException.Status%2A&gt;</ph>属性设置为<ph id="ph6">&lt;xref:System.Net.WebExceptionStatus.MessageLengthLimitExceeded&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
          <source>The following code example sets the value of this property.</source>
          <target state="translated">下面的代码示例设置此属性的值。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
          <source>The property is set after the request has already been submitted.</source>
          <target state="translated">已提交请求后设置属性。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
          <source>The value is less than 0 and is not equal to -1.</source>
          <target state="translated">值小于 0 并且不等于 -1。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.MediaType">
          <source>Gets or sets the media type of the request.</source>
          <target state="translated">获取或设置请求的媒体类型。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MediaType">
          <source>The media type of the request.</source>
          <target state="translated">请求的媒体类型。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MediaType">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MediaType">
          <source>The value of the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MediaType%2A&gt;</ph> property affects the <ph id="ph2">&lt;xref:System.Net.HttpWebResponse.CharacterSet%2A&gt;</ph> property.</source>
          <target state="translated">值<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MediaType%2A&gt;</ph>属性将影响<ph id="ph2">&lt;xref:System.Net.HttpWebResponse.CharacterSet%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.MediaType">
          <source>When you set the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MediaType%2A&gt;</ph> in the request, the corresponding media type is chosen from the list of character sets returned in the response <ph id="ph2">`Content-type`</ph> HTTP header.</source>
          <target state="translated">当你将设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.MediaType%2A&gt;</ph>从响应中返回的字符集的列表中在请求中，选择相应的媒体类型<ph id="ph2">`Content-type`</ph>HTTP 标头。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Method">
          <source>Gets or sets the method for the request.</source>
          <target state="translated">获取或设置请求的方法。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Method">
          <source>The request method to use to contact the Internet resource.</source>
          <target state="translated">用于联系 Internet 资源的请求方法。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Method">
          <source>The default value is GET.</source>
          <target state="translated">默认值为 GET。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Method">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Method%2A&gt;</ph> property can be set to any of the HTTP 1.1 protocol verbs: GET, HEAD, POST, PUT, DELETE, TRACE, or OPTIONS.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Method%2A&gt;</ph>属性可以设置为任何 HTTP 1.1 协议谓词： GET、 HEAD、 POST、 PUT、 删除，跟踪或选项。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Method">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property is set to any value other than -1, the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Method%2A&gt;</ph> property must be set to a protocol property that uploads data.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph>属性设置为任何值，而-1<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Method%2A&gt;</ph>属性必须设置为将数据上载的协议属性。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Method">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Method%2A&gt;</ph> property to POST.</source>
          <target state="translated">下面的代码示例设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Method%2A&gt;</ph>属性设置为 POST。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Method">
          <source>No method is supplied.</source>
          <target state="translated">未提供任何方法。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Method">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Method">
          <source>The method string contains invalid characters.</source>
          <target state="translated">方法字符串包含无效字符。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Pipelined">
          <source>Gets or sets a value that indicates whether to pipeline the request to the Internet resource.</source>
          <target state="translated">获取或设置一个值，该值指示是否通过管线将请求传输到 Internet 资源。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Pipelined">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the request should be pipelined; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果通过管线传输请求，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Pipelined">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Pipelined">
          <source>An application uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Pipelined%2A&gt;</ph> property to indicate a preference for pipelined connections.</source>
          <target state="translated">应用程序使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Pipelined%2A&gt;</ph>属性，指示管道连接的首选项。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Pipelined">
          <source>When <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Pipelined%2A&gt;</ph> is <ph id="ph2">`true`</ph>, an application makes pipelined connections to the servers that support them.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Pipelined%2A&gt;</ph>是<ph id="ph2">`true`</ph>，应用程序进行管道的连接到支持这些服务器。</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Pipelined">
          <source>Pipelined connections are made only when the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph> property is also <ph id="ph2">`true`</ph>.</source>
          <target state="translated">管道的连接进行时，才<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.KeepAlive%2A&gt;</ph>属性也为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Pipelined">
          <source>The following code example prints the value of the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Pipelined%2A&gt;</ph> property to the console.</source>
          <target state="translated">下面的代码示例将的值打印<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Pipelined%2A&gt;</ph>到控制台的属性。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Gets or sets a value that indicates whether to send an Authorization header with the request.</source>
          <target state="translated">获取或设置一个值，该值指示是否随请求发送一个 Authorization 标头。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to send an  HTTP Authorization header with requests after authentication has taken place; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示在发生身份验证之后随请求一起发送 HTTP 授权标头；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>After a client request to a specific <ph id="ph1">&lt;xref:System.Uri&gt;</ph> is successfully authenticated, if <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.PreAuthenticate%2A&gt;</ph> is <ph id="ph3">`true`</ph> and credentials are supplied, the Authorization header is sent with each request to any <ph id="ph4">&lt;xref:System.Uri&gt;</ph> that matches the specific <ph id="ph5">&lt;xref:System.Uri&gt;</ph> up to the last forward slash.</source>
          <target state="translated">对特定的客户端请求后<ph id="ph1">&lt;xref:System.Uri&gt;</ph>成功通过身份验证，如果<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.PreAuthenticate%2A&gt;</ph>是<ph id="ph3">`true`</ph>和提供凭据的、 Authorization 标头与每个请求发送到任何<ph id="ph4">&lt;xref:System.Uri&gt;</ph>匹配特定<ph id="ph5">&lt;xref:System.Uri&gt;</ph>直到最后一个正斜杠。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>So if the client request successfully authenticated to a specific <ph id="ph1">&lt;xref:System.Uri&gt;</ph> that contains the following:</source>
          <target state="translated">因此，如果客户端请求成功地验证到特定<ph id="ph1">&lt;xref:System.Uri&gt;</ph>包含以下：</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Then the Authorization header for preauthentication is sent with each request to any of the following <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instances:</source>
          <target state="translated">然后预身份验证的授权标头与每个请求发送到以下任一<ph id="ph1">&lt;xref:System.Uri&gt;</ph>实例：</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>However, the Authorization header is not sent with requests to any of the following <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instances:</source>
          <target state="translated">但是，授权标头不会发送与请求到以下任一<ph id="ph1">&lt;xref:System.Uri&gt;</ph>实例：</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>If the client request to a specific <ph id="ph1">&lt;xref:System.Uri&gt;</ph> is not successfully authenticated, the request uses standard authentication procedures.</source>
          <target state="translated">如果客户端请求到特定<ph id="ph1">&lt;xref:System.Uri&gt;</ph>是不成功通过身份验证，请求使用标准身份验证过程。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>With the exception of the first request, the <ph id="ph1">&lt;xref:System.Net.WebRequest.PreAuthenticate%2A&gt;</ph> property indicates whether to send authentication information with subsequent requests to a <ph id="ph2">&lt;xref:System.Uri&gt;</ph> that matches the specific <ph id="ph3">&lt;xref:System.Uri&gt;</ph> up to the last forward slash without waiting to be challenged by the server.</source>
          <target state="translated">第一个请求，除了<ph id="ph1">&lt;xref:System.Net.WebRequest.PreAuthenticate%2A&gt;</ph>属性指示是否将发送到的后续请求的身份验证信息<ph id="ph2">&lt;xref:System.Uri&gt;</ph>匹配特定<ph id="ph3">&lt;xref:System.Uri&gt;</ph>而无需等待将在最后一个正斜杠由服务器面临的挑战。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>The following dialog between client and server illustrates the effect of this property.</source>
          <target state="translated">客户端和服务器之间以下对话框说明了此属性的效果。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>The dialog assumes that basic authentication is in use.</source>
          <target state="translated">该对话框假设基本身份验证正在使用中。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.PreAuthenticate%2A&gt;</ph> is <ph id="ph2">`false`</ph>:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.PreAuthenticate%2A&gt;</ph> 是<ph id="ph2">`false`</ph>:</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Client: GET someUrl</source>
          <target state="translated">客户端： GET someUrl</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Server: 401 WWW-Authenticate Basic</source>
          <target state="translated">服务器： 401 Www-authenticate Basic</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Client: GET with Authorization headers</source>
          <target state="translated">获取与授权标头的客户端：</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Server: 200 OK</source>
          <target state="translated">服务器： 200 确定</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Client: GET someUrl</source>
          <target state="translated">客户端： GET someUrl</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Server: 401 WWW-Authenticate Basic</source>
          <target state="translated">服务器： 401 Www-authenticate Basic</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Client: GET with Authorization headers</source>
          <target state="translated">获取与授权标头的客户端：</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Server: 200 OK</source>
          <target state="translated">服务器： 200 确定</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.PreAuthenticate%2A&gt;</ph> is <ph id="ph2">`true`</ph>:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.PreAuthenticate%2A&gt;</ph> 是<ph id="ph2">`true`</ph>:</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Client: GET someUrl</source>
          <target state="translated">客户端： GET someUrl</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Server: 401 WWW-Authenticate Basic</source>
          <target state="translated">服务器： 401 Www-authenticate Basic</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Client: GET with Authorization headers</source>
          <target state="translated">获取与授权标头的客户端：</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Server: 200 OK</source>
          <target state="translated">服务器： 200 确定</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>Client: GET someUrl with Authorization headers</source>
          <target state="translated">客户端： 获取 someUrl 与授权标头</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.PreAuthenticate">
          <source>If the authentication scheme does not support preauthentication, the value of this property is ignored.</source>
          <target state="translated">如果身份验证方案不支持预身份验证，则忽略此属性的值。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ProtocolVersion">
          <source>Gets or sets the version of HTTP to use for the request.</source>
          <target state="translated">获取或设置用于请求的 HTTP 版本。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ProtocolVersion">
          <source>The HTTP version to use for the request.</source>
          <target state="translated">用于请求的 HTTP 版本。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ProtocolVersion">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Net.HttpVersion.Version11" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="F:System.Net.HttpVersion.Version11" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ProtocolVersion">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class supports only versions 1.0 and 1.1 of HTTP.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>类支持版本 1.0 和 1.1 版 HTTP。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ProtocolVersion">
          <source>Setting <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ProtocolVersion%2A&gt;</ph> to a different version throws an exception.</source>
          <target state="translated">设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ProtocolVersion%2A&gt;</ph>与另一个版本将引发异常。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ProtocolVersion">
          <source>To set the HTTP version of the current request, use the <ph id="ph1">&lt;xref:System.Net.HttpVersion.Version10&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.HttpVersion.Version11&gt;</ph> fields of the <ph id="ph3">&lt;xref:System.Net.HttpVersion&gt;</ph> class.</source>
          <target state="translated">若要设置当前请求的 HTTP 版本，使用<ph id="ph1">&lt;xref:System.Net.HttpVersion.Version10&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.HttpVersion.Version11&gt;</ph>字段<ph id="ph3">&lt;xref:System.Net.HttpVersion&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ProtocolVersion">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ProtocolVersion%2A&gt;</ph> Property.</source>
          <target state="translated">下面的代码示例设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ProtocolVersion%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ProtocolVersion">
          <source>The HTTP version is set to a value other than 1.0 or 1.1.</source>
          <target state="translated">HTTP 版本设置为 1.0 或 1.1 以外的值。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>Gets or sets proxy information for the request.</source>
          <target state="translated">获取或设置请求的代理信息。</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IWebProxy" /&gt;</ph> object to use to proxy the request.</source>
          <target state="translated">用于代理请求的 <ph id="ph1">&lt;see cref="T:System.Net.IWebProxy" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The default value is set by calling the <ph id="ph1">&lt;see cref="P:System.Net.GlobalProxySelection.Select" /&gt;</ph> property.</source>
          <target state="translated">默认值通过调用 <ph id="ph1">&lt;see cref="P:System.Net.GlobalProxySelection.Select" /&gt;</ph> 属性设置。</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> property identifies the <ph id="ph2">&lt;xref:System.Net.WebProxy&gt;</ph> object to use to process requests to Internet resources.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph>属性标识<ph id="ph2">&lt;xref:System.Net.WebProxy&gt;</ph>要用来处理对 Internet 资源的请求对象。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>To specify that no proxy should be used, set the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> property to the proxy instance returned by the <ph id="ph2">&lt;xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">若要指定应使用无代理，设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph>属性返回的代理实例<ph id="ph2">&lt;xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The local computer or application config file may specify that a default proxy be used.</source>
          <target state="translated">使用默认代理，可以指定本地计算机或应用程序配置文件。</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> property is specified, then the proxy settings from the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> property override the local computer or application config file and the <ph id="ph3">&lt;xref:System.Net.HttpWebRequest&gt;</ph> instance will use the proxy settings specified.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph>指定属性，然后从的代理设置<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph>属性重写的本地计算机或应用程序配置文件和<ph id="ph3">&lt;xref:System.Net.HttpWebRequest&gt;</ph>实例将使用指定的代理设置。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>If no proxy is specified in a config file and the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> property is unspecified, the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class uses the proxy settings inherited from Internet Explorer on the local computer.</source>
          <target state="translated">如果在配置文件中不指定任何代理和<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph>属性未指定，<ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>类使用从 Internet 资源管理器继承在本地计算机上的代理设置。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>If there are no proxy settings in Internet Explorer, the request is sent directly to the server.</source>
          <target state="translated">如果没有在 Internet Explorer 代理设置，请直接向服务器发送请求。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer the same as the bypass list is parsed directly by Internet Explorer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>类解析包含通配符字符的代理跳过列表继承从 Internet 资源管理器相同跳过列表分析直接通过 Internet Explorer。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>For example, the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class will parse a bypass list of "nt*" from Internet Explorer as a regular expression of "nt.<ph id="ph2">\*</ph>".</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>类将正则表达式的分析的"nt *"Internet Explorer 中的跳过列表"nt。<ph id="ph2">\*</ph>"。</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>So a URL of "<ph id="ph1">`http://nt.com`</ph>" would bypass the proxy using the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class and using Internet Explorer.</source>
          <target state="translated">因此的 URL"<ph id="ph1">`http://nt.com`</ph>"将跳过代理使用<ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>类并使用 Internet Explorer。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class supports local proxy bypass.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>类支持本地代理绕过。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The class considers a destination to be local if any of the following conditions are met:</source>
          <target state="translated">类会将目标是本地如果满足以下任何条件视为：</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The destination contains a flat name (no dots in the URL).</source>
          <target state="translated">目标包含一个简单的名称 （在 URL 中没有句点）。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The destination contains a loopback address (<ph id="ph1">&lt;xref:System.Net.IPAddress.Loopback&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.IPAddress.IPv6Loopback&gt;</ph>) or the destination contains an <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph> assigned to the local computer.</source>
          <target state="translated">目标包含环回地址 (<ph id="ph1">&lt;xref:System.Net.IPAddress.Loopback&gt;</ph>或<ph id="ph2">&lt;xref:System.Net.IPAddress.IPv6Loopback&gt;</ph>) 或目标包含<ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>分配给本地计算机。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The domain suffix of the destination matches the local computer's domain suffix (<ph id="ph1">&lt;xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A&gt;</ph>).</source>
          <target state="translated">目标的域后缀匹配本地计算机的域后缀 (<ph id="ph1">&lt;xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>Changing the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> property after the request has been started by calling the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> method throws an <ph id="ph6">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">更改<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph>属性后已通过调用启动请求<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>，或<ph id="ph5">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph>方法抛出异常<ph id="ph6">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>For information on the proxy element see <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;defaultProxy<ph id="ph2">\&amp;</ph>gt; Element (Network Settings)<ept id="p1">](~/docs/framework/configure-apps/file-schema/network/defaultproxy-element-network-settings.md)</ept>.</source>
          <target state="translated">有关代理元素信息请参阅<bpt id="p1">[</bpt> <ph id="ph1">\&amp;</ph>lt; defaultProxy<ph id="ph2">\&amp;</ph>gt;元素 （网络设置）<ept id="p1">](~/docs/framework/configure-apps/file-schema/network/defaultproxy-element-network-settings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph> method to get the proxy information for the request.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Proxy%2A&gt;</ph>方法以获取关于请求的代理信息。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Proxy">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Proxy" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Proxy" /&gt;</ph> 设置为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The request has been started by calling <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph>, or <ph id="ph4">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated">已通过调用 <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph>、<ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>、<ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph> 或 <ph id="ph4">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph> 启动了该请求。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>The caller does not have permission for the requested operation.</source>
          <target state="translated">调用方无权执行所请求的操作。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>To get or set the <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Proxy" /&gt;</ph> property.</source>
          <target state="translated">要获取或设置<ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.Proxy" /&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Proxy">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ReadWriteTimeout">
          <source>Gets or sets a time-out in milliseconds when writing to or reading from a stream.</source>
          <target state="translated">获取或设置写入或读取流时的超时（以毫秒为单位）。</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ReadWriteTimeout">
          <source>The number of milliseconds before the writing or reading times out. The default value is 300,000 milliseconds (5 minutes).</source>
          <target state="translated">在写入超时或读取超时之前的毫秒数。默认值为 300,000 毫秒（5 分钟）。</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ReadWriteTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A&gt;</ph> property is used when writing to the stream returned by the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method or reading from the stream returned by the <ph id="ph3">&lt;xref:System.Net.HttpWebResponse.GetResponseStream%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A&gt;</ph>写入到返回的流时使用属性<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>方法或从返回的流读取<ph id="ph3">&lt;xref:System.Net.HttpWebResponse.GetResponseStream%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ReadWriteTimeout">
          <source>Specifically, the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A&gt;</ph> property controls the time-out for the <ph id="ph2">&lt;xref:System.IO.Stream.Read%2A&gt;</ph> method, which is used to read the stream returned by the <ph id="ph3">&lt;xref:System.Net.HttpWebResponse.GetResponseStream%2A&gt;</ph> method, and for the <ph id="ph4">&lt;xref:System.IO.Stream.Write%2A&gt;</ph> method, which is used to write to the stream returned by the <ph id="ph5">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method.</source>
          <target state="translated">具体而言，<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A&gt;</ph>属性控制的超时时间<ph id="ph2">&lt;xref:System.IO.Stream.Read%2A&gt;</ph>方法，用于读取返回的流<ph id="ph3">&lt;xref:System.Net.HttpWebResponse.GetResponseStream%2A&gt;</ph>方法，以及<ph id="ph4">&lt;xref:System.IO.Stream.Write%2A&gt;</ph>方法，用于向返回的流写入<ph id="ph5">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ReadWriteTimeout">
          <source>To specify the amount of time to wait for the request to complete, use the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph> property.</source>
          <target state="translated">若要指定要等待的时间完成请求的时间量，请使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ReadWriteTimeout">
          <source>The following code example shows how to set the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A&gt;</ph> property.</source>
          <target state="translated">下面的代码示例演示如何设置 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ReadWriteTimeout">
          <source>The request has already been sent.</source>
          <target state="translated">已发送请求。</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ReadWriteTimeout">
          <source>The value specified for a set operation is less than or equal to zero and is not equal to <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph></source>
          <target state="translated">为 Set 操作指定的值小于等于零，并且不等于 <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Referer">
          <source>Gets or sets the value of the <ph id="ph1">&lt;see langword="Referer" /&gt;</ph> HTTP header.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see langword="Referer" /&gt;</ph> HTTP 标头的值。</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Referer">
          <source>The value of the <ph id="ph1">&lt;see langword="Referer" /&gt;</ph> HTTP header.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Referer" /&gt;</ph> HTTP 标头的值。</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Referer">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Referer">
          <source>If the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.Referer%2A&gt;</ph> property is set automatically when the request is redirected to another site.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph>属性是<ph id="ph2">`true`</ph>、<ph id="ph3">&lt;xref:System.Net.HttpWebRequest.Referer%2A&gt;</ph>请求重定向到另一个站点时自动设置属性。</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Referer">
          <source>To clear the <ph id="ph1">`Referer`</ph> HTTP header, set the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Referer%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">若要清除<ph id="ph1">`Referer`</ph>设置 HTTP 标头，<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Referer%2A&gt;</ph>属性<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Referer">
          <source>The value for this property is stored in <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>.</source>
          <target state="translated">此属性的值存储在 <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Referer">
          <source>If WebHeaderCollection is set, the property value is lost.</source>
          <target state="translated">如果设置了 WebHeaderCollection，则该属性值将丢失。</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Referer">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Referer%2A&gt;</ph> property.</source>
          <target state="translated">下面的代码示例设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Referer%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.RequestUri">
          <source>Gets the original Uniform Resource Identifier (URI) of the request.</source>
          <target state="translated">获取请求的原始统一资源标识符 (URI)。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.RequestUri">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the URI of the Internet resource passed to the <ph id="ph2">&lt;see cref="M:System.Net.WebRequest.Create(System.String)" /&gt;</ph> method.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>，其中包含传递给 <ph id="ph2">&lt;see cref="M:System.Net.WebRequest.Create(System.String)" /&gt;</ph> 方法的 Internet 资源的 URI。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.RequestUri">
          <source>The <ph id="ph1">&lt;xref:System.Uri&gt;</ph> object passed to <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> by the call to <ph id="ph3">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri&gt;</ph>对象传递给<ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>通过调用<ph id="ph3">&lt;xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.RequestUri">
          <source>Following a redirection header does not change the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.RequestUri%2A&gt;</ph> property.</source>
          <target state="translated">跟随重定向标头不会更改<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.RequestUri%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.RequestUri">
          <source>To get the actual URI that responded to the request, examine the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Address%2A&gt;</ph> property.</source>
          <target state="translated">若要获取实际响应此请求的 URI，请检查<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Address%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.RequestUri">
          <source>The following code example checks to see if the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> object <ph id="ph2">`req`</ph> was redirected to another location to fulfill the request, and sets the value of the <ph id="ph3">`hasChanged`</ph> variable to <ph id="ph4">`true`</ph> if the request was redirected; otherwise, <ph id="ph5">`hasChanged`</ph> is set to <ph id="ph6">`false`</ph>.</source>
          <target state="translated">下面的代码示例检查以查看是否<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>对象<ph id="ph2">`req`</ph>已重定向到其他位置来完成请求，并将的值设置<ph id="ph3">`hasChanged`</ph>变量<ph id="ph4">`true`</ph>如果请求重定向; 否则为<ph id="ph5">`hasChanged`</ph>设置为<ph id="ph6">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.SendChunked">
          <source>Gets or sets a value that indicates whether to send data in segments to the Internet resource.</source>
          <target state="translated">获取或设置一个值，该值指示是否将数据分段发送到 Internet 资源。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.SendChunked">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to send data to the Internet resource in segments; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则将数据分段发送到 Internet 资源；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.SendChunked">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.SendChunked">
          <source>When <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the request sends data to the Internet resource in segments.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph>是<ph id="ph2">`true`</ph>，请求将数据发送到段中的 Internet 资源。</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.SendChunked">
          <source>The Internet resource must support receiving chunked data.</source>
          <target state="translated">Internet 资源必须支持接收分块的数据。</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.SendChunked">
          <source>Changing the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> property after the request has been started by calling the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> method throws an <ph id="ph6">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">更改<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph>属性后已通过调用启动请求<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>，或<ph id="ph5">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph>方法抛出异常<ph id="ph6">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.SendChunked">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> property to <ph id="ph2">`true`</ph> so that data can be sent in segments to the Internet resource.</source>
          <target state="translated">下面的代码示例设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph>属性<ph id="ph2">`true`</ph>，以便可以将数据发送到 Internet 资源的段中。</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.SendChunked">
          <source>The request has been started by calling the <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph>, or <ph id="ph4">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">已通过调用 <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph>、<ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /&gt;</ph>、<ph id="ph3">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph> 或 <ph id="ph4">&lt;see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /&gt;</ph> 方法启动请求。</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ServerCertificateValidationCallback">
          <source>Gets or sets a callback function to validate the server certificate.</source>
          <target state="translated">获取或设置用于验证服务器证书的回调函数。</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ServerCertificateValidationCallback">
          <source>A callback function to validate the server certificate.</source>
          <target state="translated">用于验证服务器证书的回调函数。</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ServerCertificateValidationCallback">
          <source>The default is that no callback function is set and the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ServerCertificateValidationCallback%2A&gt;</ph> property is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">默认值是不设置任何回调函数和<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ServerCertificateValidationCallback%2A&gt;</ph>属性是<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.ServicePoint">
          <source>Gets the service point to use for the request.</source>
          <target state="translated">获取用于请求的服务点。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ServicePoint">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.ServicePoint" /&gt;</ph> that represents the network connection to the Internet resource.</source>
          <target state="translated">表示与 Internet 资源的网络连接的 <ph id="ph1">&lt;see cref="T:System.Net.ServicePoint" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.ServicePoint">
          <source>The <ph id="ph1">&lt;xref:System.Net.ServicePoint.Address%2A?displayProperty=nameWithType&gt;</ph> property may be different from <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Address%2A?displayProperty=nameWithType&gt;</ph> if the request is redirected.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.ServicePoint.Address%2A?displayProperty=nameWithType&gt;</ph>属性可以是不同于<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.Address%2A?displayProperty=nameWithType&gt;</ph>如果请求重定向。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.SupportsCookieContainer">
          <source>Gets a value that indicates whether the request provides support for a <ph id="ph1">&lt;see cref="T:System.Net.CookieContainer" /&gt;</ph>.</source>
          <target state="translated">获取一个值，该值指示请求是否为 <ph id="ph1">&lt;see cref="T:System.Net.CookieContainer" /&gt;</ph> 提供支持。</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.SupportsCookieContainer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the request provides support for a <ph id="ph2">&lt;see cref="T:System.Net.CookieContainer" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 如果请求提供了对支持<ph id="ph2">&lt;see cref="T:System.Net.CookieContainer" /&gt;</ph>; 否则为<ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> to populate with data.</source>
          <target state="translated">要填充数据的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that specifies the destination for this serialization.</source>
          <target state="translated">用于指定该序列化的目标的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" uid="M:System.Net.HttpWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> with the data needed to serialize the target object.</source>
          <target state="translated">使用将目标对象序列化所需的数据填充 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Any objects included in the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> are automatically tracked and serialized by the formatter.</source>
          <target state="translated">中包含的任何对象<ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>会自动跟踪和序列化格式化程序。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>Gets or sets the time-out value in milliseconds for the <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph> methods.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="M:System.Net.HttpWebRequest.GetResponse" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.GetRequestStream" /&gt;</ph> 方法的超时值（以毫秒为单位）。</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>The number of milliseconds to wait before the request times out. The default value is 100,000 milliseconds (100 seconds).</source>
          <target state="translated">请求超时前等待的毫秒数。默认值是 100,000 毫秒（100 秒）。</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph> is the number of milliseconds that a subsequent synchronous request made with the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> method waits for a response, and the <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> method waits for a stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph> 是的使用进行后续的同步请求的毫秒数<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>方法等待响应，与<ph id="ph3">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>方法等待流。</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph> applies to the entire request and response, not individually to the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> method calls.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph>不单独对适用于整个请求和响应，<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>方法调用。</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>If the resource is not returned within the time-out period, the request throws a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to <ph id="ph3">&lt;xref:System.Net.WebExceptionStatus.Timeout?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果在超时期间内未返回该资源，请求将引发<ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph>与<ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph>属性设置为<ph id="ph3">&lt;xref:System.Net.WebExceptionStatus.Timeout?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph> property must be set before the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph>属性必须之前设置<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>调用方法。</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>Changing the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph> property after calling the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph> method has no effect</source>
          <target state="translated">更改<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph>属性在调用<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Net.HttpWebRequest.GetResponse%2A&gt;</ph>方法不起作用</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph> property has no effect on asynchronous requests made with the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph>属性不起使用发出异步请求<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>In the case of asynchronous requests, the client application implements its own time-out mechanism.</source>
          <target state="translated">在异步请求的情况下客户端应用程序实现其自己的超时机制。</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>Refer to the example in the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph> method.</source>
          <target state="translated">请参阅中的示例<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.BeginGetResponse%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>To specify the amount of time to wait before a read or write operation times out, use the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A&gt;</ph> property.</source>
          <target state="translated">若要指定的时间等待读取或写入操作超时，请使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>A Domain Name System (DNS) query may take up to 15 seconds to return or time out. If your request contains a host name that requires resolution and you set <ph id="ph1">&lt;xref:System.Net.FileWebRequest.Timeout%2A&gt;</ph> to a value less than 15 seconds, it may take 15 seconds or more before a <ph id="ph2">&lt;xref:System.Net.WebException&gt;</ph> is thrown to indicate a timeout on your request.</source>
          <target state="translated">域名系统 (DNS) 查询可能需要最多为 15 秒为单位返回或超时。如果你的请求包含需要解析的主机名，并设置<ph id="ph1">&lt;xref:System.Net.FileWebRequest.Timeout%2A&gt;</ph>为值小于 15 秒，可能需要 15 秒或更之前<ph id="ph2">&lt;xref:System.Net.WebException&gt;</ph>引发来指示你的请求超时。</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> object.</source>
          <target state="translated">下面的代码示例设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Timeout%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.Timeout">
          <source>The value specified is less than zero and is not <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph>.</source>
          <target state="translated">指定的值小于零，并且不为 <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.TransferEncoding">
          <source>Gets or sets the value of the <ph id="ph1">&lt;see langword="Transfer-encoding" /&gt;</ph> HTTP header.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see langword="Transfer-encoding" /&gt;</ph> HTTP 标头的值。</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.TransferEncoding">
          <source>The value of the <ph id="ph1">&lt;see langword="Transfer-encoding" /&gt;</ph> HTTP header.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Transfer-encoding" /&gt;</ph> HTTP 标头的值。</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.TransferEncoding">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.TransferEncoding">
          <source>Before you can set the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.TransferEncoding%2A&gt;</ph> property, you must first set the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">在设置前<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.TransferEncoding%2A&gt;</ph>属性，必须首先设置<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph>属性<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.TransferEncoding">
          <source>Clearing <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.TransferEncoding%2A&gt;</ph> by setting it to <ph id="ph2">`null`</ph> has no effect on the value of <ph id="ph3">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph>.</source>
          <target state="translated">清除<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.TransferEncoding%2A&gt;</ph>通过将它设置为<ph id="ph2">`null`</ph>的值不起<ph id="ph3">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.TransferEncoding">
          <source>Values assigned to the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.TransferEncoding%2A&gt;</ph> property replace any existing contents.</source>
          <target state="translated">分配给值<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.TransferEncoding%2A&gt;</ph>属性替换任何现有内容。</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.TransferEncoding">
          <source>The value for this property is stored in <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph>.</source>
          <target state="translated">此属性的值存储在 <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.TransferEncoding">
          <source>If WebHeaderCollection is set, the property value is lost.</source>
          <target state="translated">如果设置了 WebHeaderCollection，则该属性值将丢失。</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.TransferEncoding">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph> is set when <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph> is <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">当 <ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="false" /&gt;</ph> 时设置 <ph id="ph2">&lt;see cref="P:System.Net.HttpWebRequest.SendChunked" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.TransferEncoding">
          <source><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph> is set to the value "Chunked".</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.HttpWebRequest.TransferEncoding" /&gt;</ph> 被设置为值“Chunked”。</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>Gets or sets a value that indicates whether to allow high-speed NTLM-authenticated connection sharing.</source>
          <target state="translated">获取或设置一个值，该值指示是否允许经过高速 NTLM 身份验证的连接共享。</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to keep the authenticated connection open; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示使经过身份验证的连接保持打开状态；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>The default value for this property is <ph id="ph1">`false`</ph>, which causes the current connection to be closed after a request is completed.</source>
          <target state="translated">此属性的默认值是<ph id="ph1">`false`</ph>，这将导致当前连接的请求完成后关闭。</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>Your application must go through the authentication sequence every time it issues a new request.</source>
          <target state="translated">每次发出新请求时，你的应用程序必须经过身份验证序列。</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>If this property is set to <ph id="ph1">`true`</ph>, the connection used to retrieve the response remains open after the authentication has been performed.</source>
          <target state="translated">如果此属性设置为<ph id="ph1">`true`</ph>，执行身份验证后，用于检索响应的连接保持打开状态。</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>In this case, other requests that have this property set to <ph id="ph1">`true`</ph> may use the connection without re-authenticating.</source>
          <target state="translated">在这种情况下，其他请求具有此属性设置为<ph id="ph1">`true`</ph>可以使用该连接而无需重新进行身份验证。</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>In other words, if a connection has been authenticated for user A, user B may reuse A's connection; user B's request is fulfilled based on the credentials of user A.</source>
          <target state="translated">换而言之，如果用户 A，连接已经过身份验证，用户 B 可能会重新使用 A 的连接;根据用户 a。 的凭据实现用户 B 的请求</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>Because it is possible for an application to use the connection without being authenticated, you need to be sure that there is no administrative vulnerability in your system when setting this property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">因为它是可能的应用程序不经过身份验证中使用连接，你必须在确定是否有任何管理漏洞在你的系统时将此属性设置为<ph id="ph1">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>If your application sends requests for multiple users (impersonates multiple user accounts) and relies on authentication to protect resources, do not set this property to <ph id="ph1">`true`</ph> unless you use connection groups as described below.</source>
          <target state="translated">如果你的应用程序将请求发送多个用户 （模拟多个用户帐户），并依赖于要保护的资源的身份验证，执行未设置此属性为<ph id="ph1">`true`</ph>除非你使用连接组，如下所述。</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>You may want to consider enabling this mechanism if your are having performance problems and your application is running on a Web server with integrated Windows authentication.</source>
          <target state="translated">你可能想要考虑启用此机制，如果你出现了性能问题，在使用集成 Windows 身份验证的 Web 服务器上运行你的应用程序。</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>Enabling this setting opens the system to security risks.</source>
          <target state="translated">启用此设置将使系统面临安全风险。</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>If you set the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A&gt;</ph> property to <ph id="ph2">`true`</ph> be sure to take the following precautions:</source>
          <target state="translated">如果你设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A&gt;</ph>属性<ph id="ph2">`true`</ph>一定要采取以下预防措施：</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ConnectionGroupName%2A&gt;</ph> property to manage connections for different users.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ConnectionGroupName%2A&gt;</ph>属性来管理不同的用户的连接。</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>This avoids the potential use of the connection by non-authenticated applications.</source>
          <target state="translated">这通过未经身份验证的应用程序来避免可能出现的连接的使用。</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>For example, user A should have a unique connection group name that is different from user B. This provides a layer of isolation for each user account.</source>
          <target state="translated">例如，用户 A 应该不同于用户 B 的唯一连接组名称这提供了一层隔离每个用户帐户。</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>Run your application in a protected environment to help avoid possible connection exploits.</source>
          <target state="translated">在受保护的环境，以帮助避免可能的连接攻击中运行你的应用程序。</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>If you control the back-end server, as an alternative you might consider turning off authentication persistence.</source>
          <target state="translated">若要控制后端服务器，或者你可能考虑关闭身份验证持久性。</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>This increases performance to a lesser degree, but it is safer.</source>
          <target state="translated">这将提高性能一定程度上，但它是更安全。</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>For more details, search for AuthPersistence in the MSDN library at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept>.</source>
          <target state="translated">有关详细信息，搜索在 MSDN 库中的 AuthPersistence <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept>。</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>If both <ph id="ph1">&lt;xref:System.Net.WebRequest.PreAuthenticate%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A&gt;</ph> are set to <ph id="ph3">`true`</ph>, each request is sent using a connection from the unsafe pool, but with an Authorization header.</source>
          <target state="translated">如果这两个<ph id="ph1">&lt;xref:System.Net.WebRequest.PreAuthenticate%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A&gt;</ph>设置为<ph id="ph3">`true`</ph>，每个请求发送来自不安全的池，但具有一个 Authorization 标头使用的连接。</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
          <source>Unrestricted Web permission is required to set this property.</source>
          <target state="translated">具有不受限制的 Web 访问权限需要设置此属性。</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.UseDefaultCredentials">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that controls whether default credentials are sent with requests.</source>
          <target state="translated">获取或设置一个 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值，该值控制默认凭据是否随请求一起发送。</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UseDefaultCredentials">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the default credentials are used; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果使用默认凭据，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UseDefaultCredentials">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UseDefaultCredentials">
          <source>Set this property to <ph id="ph1">`true`</ph> when requests made by this <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> object should, if requested by the server, be authenticated using the credentials of the currently logged on user.</source>
          <target state="translated">将此属性设置为<ph id="ph1">`true`</ph>时发出的此请求<ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>对象，如果请求服务器进行身份验证应使用当前登录用户的凭据。</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UseDefaultCredentials">
          <source>For client applications, this is the desired behavior in most scenarios.</source>
          <target state="translated">对于客户端应用程序，这是在大多数情况下所需的行为。</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UseDefaultCredentials">
          <source>For middle-tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Credentials%2A&gt;</ph> property to the credentials of the client on whose behalf the request is made.</source>
          <target state="translated">对于中间层应用程序，例如 ASP.NET 应用程序，而不是使用此属性，通常会设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.Credentials%2A&gt;</ph>到客户端的名义发出的请求的凭据的属性。</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.UseDefaultCredentials">
          <source>You attempted to set this property after the request was sent.</source>
          <target state="translated">你试图在发送请求后设置该属性。</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" uid="P:System.Net.HttpWebRequest.UserAgent">
          <source>Gets or sets the value of the <ph id="ph1">&lt;see langword="User-agent" /&gt;</ph> HTTP header.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see langword="User-agent" /&gt;</ph> HTTP 标头的值。</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UserAgent">
          <source>The value of the <ph id="ph1">&lt;see langword="User-agent" /&gt;</ph> HTTP header.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="User-agent" /&gt;</ph> HTTP 标头的值。</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UserAgent">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UserAgent">
          <source>The value for this property is stored in <ph id="ph1">&lt;see cref="T:System.Net.WebHeaderCollection" /&gt;</ph>.</source>
          <target state="translated">此属性的值存储在 <ph id="ph1">&lt;see cref="T:System.Net.WebHeaderCollection" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UserAgent">
          <source>If WebHeaderCollection is set, the property value is lost.</source>
          <target state="translated">如果设置了 WebHeaderCollection，则该属性值将丢失。</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpWebRequest.UserAgent">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.UserAgent%2A&gt;</ph> property.</source>
          <target state="translated">下面的代码示例设置<ph id="ph1">&lt;xref:System.Net.HttpWebRequest.UserAgent%2A&gt;</ph>属性。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>