<Type Name="Dns" FullName="System.Net.Dns">
  <Metadata><Meta Name="ms.openlocfilehash" Value="59f9b67b32615ee436e08a6c55ddbdb42b59faba" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56789180" /></Metadata><TypeSignature Language="C#" Value="public static class Dns" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Dns extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Dns" />
  <TypeSignature Language="VB.NET" Value="Public Class Dns" />
  <TypeSignature Language="C++ CLI" Value="public ref class Dns abstract sealed" />
  <TypeSignature Language="F#" Value="type Dns = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NameResolution</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="82013-101">提供简单的域名解析功能。</span><span class="sxs-lookup"><span data-stu-id="82013-101">Provides simple domain name resolution functionality.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82013-102"><xref:System.Net.Dns>类是一个静态类，从 Internet 域名系统 (DNS) 中检索有关特定主机的信息。</span><span class="sxs-lookup"><span data-stu-id="82013-102">The <xref:System.Net.Dns> class is a static class that retrieves information about a specific host from the Internet Domain Name System (DNS).</span></span>  
  
 <span data-ttu-id="82013-103">DNS 查询中的主机信息返回的实例中<xref:System.Net.IPHostEntry>类。</span><span class="sxs-lookup"><span data-stu-id="82013-103">The host information from the DNS query is returned in an instance of the <xref:System.Net.IPHostEntry> class.</span></span> <span data-ttu-id="82013-104">如果指定的主机在 DNS 数据库中，有多个条目<xref:System.Net.IPHostEntry>包含多个 IP 地址和别名。</span><span class="sxs-lookup"><span data-stu-id="82013-104">If the specified host has more than one entry in the DNS database, <xref:System.Net.IPHostEntry> contains multiple IP addresses and aliases.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82013-105">下面的示例查询 DNS 数据库中的主机 www.contoso.com 上的信息。</span><span class="sxs-lookup"><span data-stu-id="82013-105">The following example queries the DNS database for information on the host www.contoso.com.</span></span>  
  
 [!code-cpp[Classic Dns Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Dns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Dns Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Dns Example/CS/source.cs#1)]
 [!code-vb[Classic Dns Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Dns Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginGetHostAddresses">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostAddresses (string hostNameOrAddress, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostAddresses(string hostNameOrAddress, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostAddresses (hostNameOrAddress As String, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostAddresses(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostAddresses : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostAddresses (hostNameOrAddress, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="82013-106">要解析的主机名或 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-106">The host name or IP address to resolve.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="82013-107">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="82013-107">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="82013-108">一个用户定义对象，其中包含操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="82013-108">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="82013-109">当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="82013-109">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="82013-110">异步返回指定主机的 Internet 协议 (IP) 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-110">Asynchronously returns the Internet Protocol (IP) addresses for the specified host.</span></span></summary>
        <returns><span data-ttu-id="82013-111">引用异步请求的 <see cref="T:System.IAsyncResult" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="82013-111">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82013-112"><xref:System.Net.Dns.BeginGetHostAddresses%2A>方法以异步方式将查询与主机名相关联的 IP 地址的 DNS 服务器。</span><span class="sxs-lookup"><span data-stu-id="82013-112">The <xref:System.Net.Dns.BeginGetHostAddresses%2A> method asynchronously queries a DNS server for the IP addresses that are associated with a host name.</span></span> <span data-ttu-id="82013-113">如果`hostNameOrAddress`是 IP 地址，而无需查询 DNS 服务器返回此地址。</span><span class="sxs-lookup"><span data-stu-id="82013-113">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="82013-114">在应用程序中启用网络跟踪时，此成员会发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="82013-114">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="82013-115">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="82013-115">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 <span data-ttu-id="82013-116">如果为空字符串作为传递`hostNameOrAddress`参数，则此方法返回本地主机的 IPv4 和 IPv6 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-116">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="82013-117">异步<xref:System.Net.Dns.BeginGetHostAddresses%2A>完成操作，必须通过调用<xref:System.Net.Dns.EndGetHostAddresses%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="82013-117">The asynchronous <xref:System.Net.Dns.BeginGetHostAddresses%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostAddresses%2A> method.</span></span> <span data-ttu-id="82013-118">通常情况下，通过调用该方法`requestCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="82013-118">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="82013-119">此方法不会阻止，直到完成该操作。</span><span class="sxs-lookup"><span data-stu-id="82013-119">This method does not block until the operation is complete.</span></span> <span data-ttu-id="82013-120">若要阻止，直到完成该操作后，使用<xref:System.Net.Dns.GetHostAddresses%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="82013-120">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostAddresses%2A> method.</span></span>  
  
 <span data-ttu-id="82013-121">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="82013-121">For more information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82013-122"><paramref name="hostNameOrAddress" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="82013-122"><paramref name="hostNameOrAddress" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="82013-123"><paramref name="hostNameOrAddress" /> 的长度超过 255 个字符。</span><span class="sxs-lookup"><span data-stu-id="82013-123">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="82013-124">解析 <paramref name="hostNameOrAddress" /> 时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="82013-124">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="82013-125"><paramref name="hostNameOrAddress" /> 是无效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-125"><paramref name="hostNameOrAddress" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="82013-126">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="82013-126">for accessing DNS information.</span></span> <span data-ttu-id="82013-127">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="82013-127">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostByName">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostByName (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostByName(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostByName (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostByName(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostByName : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostByName (hostName, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("BeginGetHostByName is obsoleted for this type, please use BeginGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Obsolete("BeginGetHostByName is obsoleted for this type, please use BeginGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostName"><span data-ttu-id="82013-128">主机的 DNS 名称。</span><span class="sxs-lookup"><span data-stu-id="82013-128">The DNS name of the host.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="82013-129">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="82013-129">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="stateObject"><span data-ttu-id="82013-130">一个用户定义对象，其中包含操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="82013-130">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="82013-131">当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="82013-131">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="82013-132">开始异步请求关于指定 DNS 主机名的 <see cref="T:System.Net.IPHostEntry" /> 信息。</span><span class="sxs-lookup"><span data-stu-id="82013-132">Begins an asynchronous request for <see cref="T:System.Net.IPHostEntry" /> information about the specified DNS host name.</span></span></summary>
        <returns><span data-ttu-id="82013-133">引用异步请求的 <see cref="T:System.IAsyncResult" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="82013-133">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82013-134">异步<xref:System.Net.Dns.BeginGetHostByName%2A>完成操作，必须通过调用<xref:System.Net.Dns.EndGetHostByName%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="82013-134">The asynchronous <xref:System.Net.Dns.BeginGetHostByName%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostByName%2A> method.</span></span> <span data-ttu-id="82013-135">通常情况下，通过调用该方法`requestCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="82013-135">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="82013-136">此方法不会阻止，直到完成该操作。</span><span class="sxs-lookup"><span data-stu-id="82013-136">This method does not block until the operation is complete.</span></span> <span data-ttu-id="82013-137">若要阻止，直到完成该操作后，使用<xref:System.Net.Dns.GetHostByName%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="82013-137">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostByName%2A> method.</span></span>  
  
 <span data-ttu-id="82013-138">有关使用异步编程模型的详细信息，请参阅[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="82013-138">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="82013-139">在应用程序中启用网络跟踪时，此成员会发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="82013-139">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="82013-140">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="82013-140">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82013-141"><paramref name="hostName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="82013-141"><paramref name="hostName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="82013-142">执行 DNS 查询时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="82013-142">An error was encountered executing the DNS query.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="82013-143">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="82013-143">for accessing DNS information.</span></span> <span data-ttu-id="82013-144">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="82013-144">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0"><span data-ttu-id="82013-145">异步编程概述</span><span class="sxs-lookup"><span data-stu-id="82013-145">Asynchronous Programming Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="82013-146">将主机名或 IP 地址异步解析为 <see cref="T:System.Net.IPHostEntry" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="82013-146">Asynchronously resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (System.Net.IPAddress address, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(class System.Net.IPAddress address, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.Net.IPAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (address As IPAddress, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::Net::IPAddress ^ address, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostEntry : System.Net.IPAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostEntry (address, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="82013-147">要解析的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-147">The IP address to resolve.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="82013-148">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="82013-148">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="stateObject"><span data-ttu-id="82013-149">一个用户定义对象，其中包含操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="82013-149">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="82013-150">当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="82013-150">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="82013-151">将 IP 地址异步解析为 <see cref="T:System.Net.IPHostEntry" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="82013-151">Asynchronously resolves an IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="82013-152">引用异步请求的 <see cref="T:System.IAsyncResult" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="82013-152">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82013-153"><xref:System.Net.Dns.BeginGetHostEntry%2A>方法以异步方式将查询的 IP 地址和 IP 地址与关联的别名的 DNS 服务器。</span><span class="sxs-lookup"><span data-stu-id="82013-153">The <xref:System.Net.Dns.BeginGetHostEntry%2A> method asynchronously queries a DNS server for the IP addresses and aliases associated with an IP address.</span></span>  
  
 <span data-ttu-id="82013-154">**请注意**时在应用程序中启用网络跟踪，此成员发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="82013-154">**Note** This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="82013-155">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="82013-155">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 <span data-ttu-id="82013-156">异步<xref:System.Net.Dns.BeginGetHostEntry%2A>完成操作，必须通过调用<xref:System.Net.Dns.EndGetHostEntry%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="82013-156">The asynchronous <xref:System.Net.Dns.BeginGetHostEntry%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostEntry%2A> method.</span></span> <span data-ttu-id="82013-157">通常情况下，通过调用该方法`requestCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="82013-157">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="82013-158">此方法不会阻止，直到完成该操作。</span><span class="sxs-lookup"><span data-stu-id="82013-158">This method does not block until the operation is complete.</span></span> <span data-ttu-id="82013-159">若要阻止，直到完成该操作后，使用<xref:System.Net.Dns.GetHostEntry%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="82013-159">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>  
  
 <span data-ttu-id="82013-160">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="82013-160">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82013-161">下面的代码示例使用<xref:System.Net.Dns.BeginGetHostEntry%2A>方法以解析 IP 地址为<xref:System.Net.IPHostEntry>实例。</span><span class="sxs-lookup"><span data-stu-id="82013-161">The following code example uses the <xref:System.Net.Dns.BeginGetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82013-162"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="82013-162"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="82013-163">解析 <paramref name="address" /> 时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="82013-163">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="82013-164"><paramref name="address" /> 是无效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-164"><paramref name="address" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="82013-165">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="82013-165">for accessing DNS information.</span></span> <span data-ttu-id="82013-166">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="82013-166">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (string hostNameOrAddress, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(string hostNameOrAddress, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (hostNameOrAddress As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostEntry : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostEntry (hostNameOrAddress, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="82013-167">要解析的主机名或 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-167">The host name or IP address to resolve.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="82013-168">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="82013-168">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="stateObject"><span data-ttu-id="82013-169">一个用户定义对象，其中包含操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="82013-169">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="82013-170">当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="82013-170">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="82013-171">将主机名或 IP 地址异步解析为 <see cref="T:System.Net.IPHostEntry" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="82013-171">Asynchronously resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="82013-172">引用异步请求的 <see cref="T:System.IAsyncResult" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="82013-172">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82013-173"><xref:System.Net.Dns.BeginGetHostEntry%2A>方法将查询与主机名相关联的 IP 地址或 IP 地址的 DNS 服务器。</span><span class="sxs-lookup"><span data-stu-id="82013-173">The <xref:System.Net.Dns.BeginGetHostEntry%2A> method queries a DNS server for the IP address that is associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="82013-174">**请注意**时在应用程序中启用网络跟踪，此成员发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="82013-174">**Note** This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="82013-175">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="82013-175">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 <span data-ttu-id="82013-176">异步<xref:System.Net.Dns.BeginGetHostEntry%2A>完成操作，必须通过调用<xref:System.Net.Dns.EndGetHostEntry%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="82013-176">The asynchronous <xref:System.Net.Dns.BeginGetHostEntry%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostEntry%2A> method.</span></span> <span data-ttu-id="82013-177">通常情况下，通过调用该方法`requestCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="82013-177">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="82013-178">此方法不会阻止，直到完成该操作。</span><span class="sxs-lookup"><span data-stu-id="82013-178">This method does not block until the operation is complete.</span></span> <span data-ttu-id="82013-179">若要阻止，直到完成该操作后，使用<xref:System.Net.Dns.GetHostEntry%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="82013-179">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>  
  
 <span data-ttu-id="82013-180">有关使用异步编程模型的详细信息，请参阅[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="82013-180">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82013-181">下面的代码示例使用<xref:System.Net.Dns.BeginGetHostEntry%2A>方法以解析 IP 地址为<xref:System.Net.IPHostEntry>实例。</span><span class="sxs-lookup"><span data-stu-id="82013-181">The following code example uses the <xref:System.Net.Dns.BeginGetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82013-182"><paramref name="hostNameOrAddress" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="82013-182"><paramref name="hostNameOrAddress" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="82013-183"><paramref name="hostNameOrAddress" /> 的长度超过 255 个字符。</span><span class="sxs-lookup"><span data-stu-id="82013-183">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="82013-184">解析 <paramref name="hostNameOrAddress" /> 时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="82013-184">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="82013-185"><paramref name="hostNameOrAddress" /> 是无效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-185"><paramref name="hostNameOrAddress" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="82013-186">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="82013-186">for accessing DNS information.</span></span> <span data-ttu-id="82013-187">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="82013-187">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginResolve (hostName, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("BeginResolve is obsoleted for this type, please use BeginGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Obsolete("BeginResolve is obsoleted for this type, please use BeginGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostName"><span data-ttu-id="82013-188">主机的 DNS 名称。</span><span class="sxs-lookup"><span data-stu-id="82013-188">The DNS name of the host.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="82013-189">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="82013-189">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="stateObject"><span data-ttu-id="82013-190">一个用户定义对象，其中包含操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="82013-190">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="82013-191">当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="82013-191">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="82013-192">开始异步请求将 DNS 主机名或 IP 地址解析为 <see cref="T:System.Net.IPAddress" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="82013-192">Begins an asynchronous request to resolve a DNS host name or IP address to an <see cref="T:System.Net.IPAddress" /> instance.</span></span></summary>
        <returns><span data-ttu-id="82013-193">引用异步请求的 <see cref="T:System.IAsyncResult" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="82013-193">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82013-194">异步<xref:System.Net.Dns.BeginResolve%2A>完成操作，必须通过调用<xref:System.Net.Dns.EndResolve%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="82013-194">The asynchronous <xref:System.Net.Dns.BeginResolve%2A> operation must be completed by calling the <xref:System.Net.Dns.EndResolve%2A> method.</span></span> <span data-ttu-id="82013-195">通常情况下，通过调用该方法`requestCallback`委托。</span><span class="sxs-lookup"><span data-stu-id="82013-195">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="82013-196">此方法不会阻止，直到完成该操作。</span><span class="sxs-lookup"><span data-stu-id="82013-196">This method does not block until the operation is complete.</span></span> <span data-ttu-id="82013-197">若要阻止，直到完成该操作后，使用<xref:System.Net.Dns.Resolve%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="82013-197">To block until the operation is complete, use the <xref:System.Net.Dns.Resolve%2A> method.</span></span>  
  
 <span data-ttu-id="82013-198">有关使用异步编程模型的详细信息，请参阅[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="82013-198">For more information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="82013-199">在应用程序中启用网络跟踪时，此成员会发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="82013-199">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="82013-200">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="82013-200">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82013-201">下面的示例使用<xref:System.Net.Dns.BeginResolve%2A>若要解决 DNS 主机名到<xref:System.Net.IPAddress>。</span><span class="sxs-lookup"><span data-stu-id="82013-201">The following example uses <xref:System.Net.Dns.BeginResolve%2A> to resolve a DNS host name to an <xref:System.Net.IPAddress>.</span></span>  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82013-202"><paramref name="hostName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="82013-202"><paramref name="hostName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="82013-203">调用方没有访问 DNS 信息的权限。</span><span class="sxs-lookup"><span data-stu-id="82013-203">The caller does not have permission to access DNS information.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="82013-204">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="82013-204">for accessing DNS information.</span></span> <span data-ttu-id="82013-205">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="82013-205">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0"><span data-ttu-id="82013-206">异步编程概述</span><span class="sxs-lookup"><span data-stu-id="82013-206">Asynchronous Programming Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] EndGetHostAddresses (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] EndGetHostAddresses(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostAddresses(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostAddresses (asyncResult As IAsyncResult) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ EndGetHostAddresses(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostAddresses : IAsyncResult -&gt; System.Net.IPAddress[]" Usage="System.Net.Dns.EndGetHostAddresses asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="82013-207">一个 <see cref="T:System.IAsyncResult" /> 实例，该实例通过调用 <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" /> 方法返回。</span><span class="sxs-lookup"><span data-stu-id="82013-207">An <see cref="T:System.IAsyncResult" /> instance returned by a call to the <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="82013-208">结束对 DNS 信息的异步请求。</span><span class="sxs-lookup"><span data-stu-id="82013-208">Ends an asynchronous request for DNS information.</span></span></summary>
        <returns><span data-ttu-id="82013-209">一个 <see cref="T:System.Net.IPAddress" /> 类型的数组，用于保存由 <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" /> 的 <paramref name="hostNameOrAddress" /> 参数指定的主机的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-209">An array of type <see cref="T:System.Net.IPAddress" /> that holds the IP addresses for the host specified by the <paramref name="hostNameOrAddress" /> parameter of <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82013-210"><xref:System.Net.Dns.BeginGetHostAddresses%2A>方法将查询与主机名关联的 IP 地址的 DNS 服务器。</span><span class="sxs-lookup"><span data-stu-id="82013-210">The <xref:System.Net.Dns.BeginGetHostAddresses%2A> method queries a DNS server for the IP addresses associated with a host name.</span></span> <span data-ttu-id="82013-211">如果`hostNameOrAddress`是 IP 地址，而无需查询 DNS 服务器返回此地址。</span><span class="sxs-lookup"><span data-stu-id="82013-211">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>  
  
 <span data-ttu-id="82013-212">如果为空字符串作为传递`hostNameOrAddress`参数，则此方法返回本地主机的 IPv4 和 IPv6 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-212">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="82013-213">在应用程序中启用网络跟踪时，此成员会发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="82013-213">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="82013-214">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="82013-214">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostByName (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostByName(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostByName(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostByName (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostByName(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostByName : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndGetHostByName asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("EndGetHostByName is obsoleted for this type, please use EndGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Obsolete("EndGetHostByName is obsoleted for this type, please use EndGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="82013-215">一个 <see cref="T:System.IAsyncResult" /> 实例，该实例通过调用 <see cref="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" /> 方法返回。</span><span class="sxs-lookup"><span data-stu-id="82013-215">An <see cref="T:System.IAsyncResult" /> instance that is returned by a call to the <see cref="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="82013-216">结束对 DNS 信息的异步请求。</span><span class="sxs-lookup"><span data-stu-id="82013-216">Ends an asynchronous request for DNS information.</span></span></summary>
        <returns><span data-ttu-id="82013-217">一个 <see cref="T:System.Net.IPHostEntry" /> 对象，该对象包含一个主机的 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="82013-217">An <see cref="T:System.Net.IPHostEntry" /> object that contains DNS information about a host.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82013-218">此方法将阻塞，直到操作完成。</span><span class="sxs-lookup"><span data-stu-id="82013-218">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="82013-219">若要以同步方式执行此操作，请使用<xref:System.Net.Dns.GetHostByName%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="82013-219">To perform this operation synchronously, use the <xref:System.Net.Dns.GetHostByName%2A> method.</span></span>  
  
 <span data-ttu-id="82013-220">如果<xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType>属性设置为`true`，则<xref:System.Net.IPHostEntry.Aliases%2A>属性的<xref:System.Net.IPHostEntry>返回实例不由该方法填充并始终为空。</span><span class="sxs-lookup"><span data-stu-id="82013-220">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> property is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="82013-221">在应用程序中启用网络跟踪时，此成员会发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="82013-221">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="82013-222">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="82013-222">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82013-223"><paramref name="asyncResult" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="82013-223"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0"><span data-ttu-id="82013-224">异步编程概述</span><span class="sxs-lookup"><span data-stu-id="82013-224">Asynchronous Programming Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostEntry (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostEntry(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostEntry(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostEntry (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostEntry(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostEntry : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndGetHostEntry asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="82013-225">一个 <see cref="T:System.IAsyncResult" /> 实例，该实例通过调用 <see cref="Overload:System.Net.Dns.BeginGetHostEntry" /> 方法返回。</span><span class="sxs-lookup"><span data-stu-id="82013-225">An <see cref="T:System.IAsyncResult" /> instance returned by a call to an <see cref="Overload:System.Net.Dns.BeginGetHostEntry" /> method.</span></span></param>
        <summary><span data-ttu-id="82013-226">结束对 DNS 信息的异步请求。</span><span class="sxs-lookup"><span data-stu-id="82013-226">Ends an asynchronous request for DNS information.</span></span></summary>
        <returns><span data-ttu-id="82013-227">一个 <see cref="T:System.Net.IPHostEntry" /> 实例，其中包含有关主机的地址信息。</span><span class="sxs-lookup"><span data-stu-id="82013-227">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82013-228">此方法将阻塞，直到操作完成。</span><span class="sxs-lookup"><span data-stu-id="82013-228">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="82013-229"><xref:System.Net.IPHostEntry.Aliases%2A>属性的<xref:System.Net.IPHostEntry>返回实例不由该方法填充并始终为空。</span><span class="sxs-lookup"><span data-stu-id="82013-229">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
 <span data-ttu-id="82013-230">若要以同步方式执行此操作，请使用<xref:System.Net.Dns.GetHostEntry%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="82013-230">To perform this operation synchronously, use a <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="82013-231">在应用程序中启用网络跟踪时，此成员会发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="82013-231">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="82013-232">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="82013-232">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82013-233"><paramref name="asyncResult" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="82013-233"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndResolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndResolve (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndResolve(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndResolve(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndResolve (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndResolve(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndResolve : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndResolve asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("EndResolve is obsoleted for this type, please use EndGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Obsolete("EndResolve is obsoleted for this type, please use EndGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="82013-234">一个 <see cref="T:System.IAsyncResult" /> 实例，该实例通过调用 <see cref="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" /> 方法返回。</span><span class="sxs-lookup"><span data-stu-id="82013-234">An <see cref="T:System.IAsyncResult" /> instance that is returned by a call to the <see cref="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="82013-235">结束对 DNS 信息的异步请求。</span><span class="sxs-lookup"><span data-stu-id="82013-235">Ends an asynchronous request for DNS information.</span></span></summary>
        <returns><span data-ttu-id="82013-236">一个 <see cref="T:System.Net.IPHostEntry" /> 对象，该对象包含一个主机的 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="82013-236">An <see cref="T:System.Net.IPHostEntry" /> object that contains DNS information about a host.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82013-237">此方法将阻塞，直到操作完成。</span><span class="sxs-lookup"><span data-stu-id="82013-237">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="82013-238">如果<xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType>设置为`true`，则<xref:System.Net.IPHostEntry.Aliases%2A>属性的<xref:System.Net.IPHostEntry>返回实例不由该方法填充并始终为空。</span><span class="sxs-lookup"><span data-stu-id="82013-238">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
 <span data-ttu-id="82013-239">若要以同步方式执行此操作，请使用<xref:System.Net.Dns.Resolve%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="82013-239">To perform this operation synchronously, use the <xref:System.Net.Dns.Resolve%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="82013-240">在应用程序中启用网络跟踪时，此成员会发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="82013-240">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="82013-241">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="82013-241">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82013-242">下面的示例结束对 DNS 主机信息的异步请求。</span><span class="sxs-lookup"><span data-stu-id="82013-242">The following example ends an asynchronous request for DNS host information.</span></span>  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82013-243"><paramref name="asyncResult" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="82013-243"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0"><span data-ttu-id="82013-244">异步编程概述</span><span class="sxs-lookup"><span data-stu-id="82013-244">Asynchronous Programming Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] GetHostAddresses (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] GetHostAddresses(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddresses(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddresses (hostNameOrAddress As String) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ GetHostAddresses(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostAddresses : string -&gt; System.Net.IPAddress[]" Usage="System.Net.Dns.GetHostAddresses hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="82013-245">要解析的主机名或 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-245">The host name or IP address to resolve.</span></span></param>
        <summary><span data-ttu-id="82013-246">返回指定主机的 Internet 协议 (IP) 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-246">Returns the Internet Protocol (IP) addresses for the specified host.</span></span></summary>
        <returns><span data-ttu-id="82013-247">一个 <see cref="T:System.Net.IPAddress" /> 类型的数组，用于保存由 <paramref name="hostNameOrAddress" /> 参数指定的主机的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-247">An array of type <see cref="T:System.Net.IPAddress" /> that holds the IP addresses for the host that is specified by the <paramref name="hostNameOrAddress" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82013-248"><xref:System.Net.Dns.GetHostAddresses%2A>方法将查询与主机名关联的 IP 地址的 DNS 子系统。</span><span class="sxs-lookup"><span data-stu-id="82013-248">The <xref:System.Net.Dns.GetHostAddresses%2A> method queries the DNS subsystem for the IP addresses associated with a host name.</span></span> <span data-ttu-id="82013-249">如果`hostNameOrAddress`是 IP 地址，而无需查询 DNS 服务器返回此地址。</span><span class="sxs-lookup"><span data-stu-id="82013-249">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>
  
 <span data-ttu-id="82013-250">如果为空字符串作为传递`hostNameOrAddress`参数，则此方法返回本地主机的 IPv4 和 IPv6 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-250">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="82013-251">IPv6 地址进行筛选的结果中的<xref:System.Net.Dns.GetHostAddresses%2A>方法如果本地计算机没有安装 IPv6。</span><span class="sxs-lookup"><span data-stu-id="82013-251">IPv6 addresses are filtered from the results of the <xref:System.Net.Dns.GetHostAddresses%2A> method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="82013-252">因此，很可能返回一个空<xref:System.Net.IPAddress>只要 IPv6 结果已可供`hostNameOrAddress`参数。</span><span class="sxs-lookup"><span data-stu-id="82013-252">As a result, it is possible to get back an empty <xref:System.Net.IPAddress> instance if only IPv6 results were available for the `hostNameOrAddress` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="82013-253">在应用程序中启用网络跟踪时，此成员会发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="82013-253">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="82013-254">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="82013-254">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82013-255">下面的代码示例使用<xref:System.Net.Dns.GetHostAddresses%2A>方法以将 IP 地址解析为类型的数组<xref:System.Net.IPAddress>。</span><span class="sxs-lookup"><span data-stu-id="82013-255">The following code example uses the <xref:System.Net.Dns.GetHostAddresses%2A> method to resolve an IP address to an array of type <xref:System.Net.IPAddress>.</span></span>  
  
 [!code-cpp[System.Net.Dns#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#3)]
 [!code-csharp[System.Net.Dns#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#3)]
 [!code-vb[System.Net.Dns#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82013-256"><paramref name="hostNameOrAddress" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="82013-256"><paramref name="hostNameOrAddress" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="82013-257"><paramref name="hostNameOrAddress" /> 的长度超过 255 个字符。</span><span class="sxs-lookup"><span data-stu-id="82013-257">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="82013-258">解析 <paramref name="hostNameOrAddress" /> 时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="82013-258">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="82013-259"><paramref name="hostNameOrAddress" /> 是无效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-259"><paramref name="hostNameOrAddress" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="82013-260">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="82013-260">for accessing DNS information.</span></span> <span data-ttu-id="82013-261">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="82013-261">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddressesAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt; GetHostAddressesAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPAddress[]&gt; GetHostAddressesAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddressesAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddressesAsync (hostNameOrAddress As String) As Task(Of IPAddress())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;cli::array &lt;System::Net::IPAddress ^&gt; ^&gt; ^ GetHostAddressesAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostAddressesAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;" Usage="System.Net.Dns.GetHostAddressesAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="82013-262">要解析的主机名或 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-262">The host name or IP address to resolve.</span></span></param>
        <summary><span data-ttu-id="82013-263">返回指定主机的 Internet 协议 (IP) 地址以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="82013-263">Returns the Internet Protocol (IP) addresses for the specified host as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="82013-264">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="82013-264">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="82013-265">任务对象上的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性返回类型为 <see cref="T:System.Net.IPAddress" /> 的数组，该类型包含 <paramref name="hostNameOrAddress" /> 参数指定的主机的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-265">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an array of type <see cref="T:System.Net.IPAddress" /> that holds the IP addresses for the host that is specified by the <paramref name="hostNameOrAddress" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82013-266">不会阻止此操作。</span><span class="sxs-lookup"><span data-stu-id="82013-266">This operation will not block.</span></span> <span data-ttu-id="82013-267">返回<xref:System.Threading.Tasks.Task%601>对象将完成后`hostNameOrAddress`已解决。</span><span class="sxs-lookup"><span data-stu-id="82013-267">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the `hostNameOrAddress` has been resolved.</span></span>  
  
 <span data-ttu-id="82013-268">此方法将查询与主机名关联的 IP 地址的 DNS 服务器。</span><span class="sxs-lookup"><span data-stu-id="82013-268">This method queries a DNS server for the IP addresses associated with a host name.</span></span> <span data-ttu-id="82013-269">如果`hostNameOrAddress`是 IP 地址，而无需查询 DNS 服务器返回此地址。</span><span class="sxs-lookup"><span data-stu-id="82013-269">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82013-270"><paramref name="hostNameOrAddress" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="82013-270"><paramref name="hostNameOrAddress" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="82013-271"><paramref name="hostNameOrAddress" /> 的长度超过 255 个字符。</span><span class="sxs-lookup"><span data-stu-id="82013-271">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="82013-272">解析 <paramref name="hostNameOrAddress" /> 时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="82013-272">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="82013-273"><paramref name="hostNameOrAddress" /> 是无效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-273"><paramref name="hostNameOrAddress" /> is an invalid IP address.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostByAddress">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="82013-274">获取 IP 地址的 DNS 主机信息。</span><span class="sxs-lookup"><span data-stu-id="82013-274">Gets DNS host information for an IP address.</span></span> <span data-ttu-id="82013-275">这些方法现在已过时。</span><span class="sxs-lookup"><span data-stu-id="82013-275">These methods are now obsolete.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostByAddress : System.Net.IPAddress -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByAddress address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="82013-276">一个 <see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="82013-276">An <see cref="T:System.Net.IPAddress" />.</span></span></param>
        <summary><span data-ttu-id="82013-277">根据指定的 <see cref="T:System.Net.IPAddress" /> 创建 <see cref="T:System.Net.IPHostEntry" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="82013-277">Creates an <see cref="T:System.Net.IPHostEntry" /> instance from the specified <see cref="T:System.Net.IPAddress" />.</span></span></summary>
        <returns><span data-ttu-id="82013-278">一个 <see cref="T:System.Net.IPHostEntry" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="82013-278">An <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="82013-279">在应用程序中启用网络跟踪时，此成员会发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="82013-279">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="82013-280">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="82013-280">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82013-281">下面的示例创建<xref:System.Net.IPHostEntry>从<xref:System.Net.IPAddress>。</span><span class="sxs-lookup"><span data-stu-id="82013-281">The following example creates a <xref:System.Net.IPHostEntry> from an <xref:System.Net.IPAddress>.</span></span>  
  
 [!code-cpp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CPP/dns_gethostbyaddress_ipaddress.cpp#1)]
 [!code-csharp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CS/dns_gethostbyaddress_ipaddress.cs#1)]
 [!code-vb[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/VB/dns_gethostbyaddress_ipaddress.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82013-282"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="82013-282"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="82013-283">解析 <paramref name="address" /> 时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="82013-283">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="82013-284">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="82013-284">for accessing DNS information.</span></span> <span data-ttu-id="82013-285">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="82013-285">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::String ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostByAddress : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByAddress address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="82013-286">IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-286">An IP address.</span></span></param>
        <summary><span data-ttu-id="82013-287">根据 IP 地址创建 <see cref="T:System.Net.IPHostEntry" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="82013-287">Creates an <see cref="T:System.Net.IPHostEntry" /> instance from an IP address.</span></span></summary>
        <returns><span data-ttu-id="82013-288">一个 <see cref="T:System.Net.IPHostEntry" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="82013-288">An <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="82013-289">在应用程序中启用网络跟踪时，此成员会发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="82013-289">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="82013-290">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="82013-290">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82013-291"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="82013-291"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="82013-292">解析 <paramref name="address" /> 时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="82013-292">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="82013-293"><paramref name="address" /> 不是有效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-293"><paramref name="address" /> is not a valid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="82013-294">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="82013-294">for accessing DNS information.</span></span> <span data-ttu-id="82013-295">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="82013-295">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByName (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByName(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByName (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByName(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="static member GetHostByName : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByName hostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("GetHostByName is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Obsolete("GetHostByName is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostName"><span data-ttu-id="82013-296">主机的 DNS 名称。</span><span class="sxs-lookup"><span data-stu-id="82013-296">The DNS name of the host.</span></span></param>
        <summary><span data-ttu-id="82013-297">获取指定 DNS 主机名的 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="82013-297">Gets the DNS information for the specified DNS host name.</span></span></summary>
        <returns><span data-ttu-id="82013-298">一个 <see cref="T:System.Net.IPHostEntry" /> 对象，包含对应于 <paramref name="hostName" /> 中指定的地址的主机信息。</span><span class="sxs-lookup"><span data-stu-id="82013-298">An <see cref="T:System.Net.IPHostEntry" /> object that contains host information for the address specified in <paramref name="hostName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82013-299"><xref:System.Net.Dns.GetHostByName%2A>方法查询主机信息的 Internet DNS 服务器。</span><span class="sxs-lookup"><span data-stu-id="82013-299">The <xref:System.Net.Dns.GetHostByName%2A> method queries the Internet DNS server for host information.</span></span> <span data-ttu-id="82013-300">如果主机名称传递了空字符串，此方法检索本地计算机的标准主机名。</span><span class="sxs-lookup"><span data-stu-id="82013-300">If you pass an empty string as the host name, this method retrieves the standard host name for the local computer.</span></span>  
  
 <span data-ttu-id="82013-301">对于异步访问的 DNS 信息，请使用<xref:System.Net.Dns.BeginGetHostByName%2A>和<xref:System.Net.Dns.EndGetHostByName%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="82013-301">For asynchronous access to DNS information, use the <xref:System.Net.Dns.BeginGetHostByName%2A> and <xref:System.Net.Dns.EndGetHostByName%2A> methods.</span></span>  
  
 <span data-ttu-id="82013-302">如果<xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType>属性设置为`true`，则<xref:System.Net.IPHostEntry.Aliases%2A>属性的<xref:System.Net.IPHostEntry>返回实例不由该方法填充并始终为空。</span><span class="sxs-lookup"><span data-stu-id="82013-302">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> property is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="82013-303">在应用程序中启用网络跟踪时，此成员会发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="82013-303">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="82013-304">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="82013-304">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82013-305">下面的示例使用<xref:System.Net.Dns.GetHostByName%2A>方法以获取指定的 DNS 主机名的 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="82013-305">The following example uses the <xref:System.Net.Dns.GetHostByName%2A> method to get the DNS information for the specified DNS host name.</span></span>  
  
 [!code-cpp[Dns_GetHostByName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByName/CPP/dns_gethostbyname.cpp#1)]
 [!code-csharp[Dns_GetHostByName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByName/CS/dns_gethostbyname.cs#1)]
 [!code-vb[Dns_GetHostByName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByName/VB/dns_gethostbyname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82013-306"><paramref name="hostName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="82013-306"><paramref name="hostName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="82013-307"><paramref name="hostName" /> 的长度超过 255 个字符。</span><span class="sxs-lookup"><span data-stu-id="82013-307">The length of <paramref name="hostName" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="82013-308">解析 <paramref name="hostName" /> 时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="82013-308">An error is encountered when resolving <paramref name="hostName" />.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="82013-309">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="82013-309">for accessing DNS information.</span></span> <span data-ttu-id="82013-310">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="82013-310">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="82013-311">将主机名或 IP 地址解析为 <see cref="T:System.Net.IPHostEntry" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="82013-311">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostEntry : System.Net.IPAddress -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostEntry address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="82013-312">IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-312">An IP address.</span></span></param>
        <summary><span data-ttu-id="82013-313">将 IP 地址解析为 <see cref="T:System.Net.IPHostEntry" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="82013-313">Resolves an IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="82013-314">一个 <see cref="T:System.Net.IPHostEntry" /> 实例，包含有关 <paramref name="address" /> 中指定的主机的地址信息。</span><span class="sxs-lookup"><span data-stu-id="82013-314">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="address" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82013-315"><xref:System.Net.Dns.GetHostEntry%2A>方法将查询的 IP 地址和 IP 地址与关联的别名的 DNS 服务器。</span><span class="sxs-lookup"><span data-stu-id="82013-315">The <xref:System.Net.Dns.GetHostEntry%2A> method queries a DNS server for the IP addresses and aliases associated with an IP address.</span></span>  
  
 <span data-ttu-id="82013-316">IPv6 地址进行筛选的结果中的<xref:System.Net.Dns.GetHostEntry%2A>方法如果本地计算机没有安装 IPv6。</span><span class="sxs-lookup"><span data-stu-id="82013-316">IPv6 addresses are filtered from the results of the <xref:System.Net.Dns.GetHostEntry%2A> method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="82013-317">因此，很可能返回一个空<xref:System.Net.IPHostEntry>只要 IPv6 结果已可供`address`参数。</span><span class="sxs-lookup"><span data-stu-id="82013-317">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results were available for the `address` parameter.</span></span>  
  
 <span data-ttu-id="82013-318"><xref:System.Net.IPHostEntry.Aliases%2A>属性的<xref:System.Net.IPHostEntry>返回实例不由该方法填充并始终为空。</span><span class="sxs-lookup"><span data-stu-id="82013-318">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="82013-319">在应用程序中启用网络跟踪时，此成员会发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="82013-319">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="82013-320">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="82013-320">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  

## Examples  
 <span data-ttu-id="82013-321">下面的代码示例使用<xref:System.Net.Dns.GetHostEntry%2A>方法以解析 IP 地址为<xref:System.Net.IPHostEntry>实例。</span><span class="sxs-lookup"><span data-stu-id="82013-321">The following code example uses the <xref:System.Net.Dns.GetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#4)]
 [!code-csharp[System.Net.Dns#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#4)]
 [!code-vb[System.Net.Dns#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82013-322"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="82013-322"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="82013-323">解析 <paramref name="address" /> 时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="82013-323">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="82013-324"><paramref name="address" /> 是无效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-324"><paramref name="address" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="82013-325">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="82013-325">for accessing DNS information.</span></span> <span data-ttu-id="82013-326">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="82013-326">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (hostNameOrAddress As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostEntry : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostEntry hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="82013-327">要解析的主机名或 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-327">The host name or IP address to resolve.</span></span></param>
        <summary><span data-ttu-id="82013-328">将主机名或 IP 地址解析为 <see cref="T:System.Net.IPHostEntry" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="82013-328">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="82013-329">一个 <see cref="T:System.Net.IPHostEntry" /> 实例，包含有关 <paramref name="hostNameOrAddress" /> 中指定的主机的地址信息。</span><span class="sxs-lookup"><span data-stu-id="82013-329">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="hostNameOrAddress" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82013-330"><xref:System.Net.Dns.GetHostEntry%2A>方法将查询与主机名相关联的 IP 地址或 IP 地址的 DNS 服务器。</span><span class="sxs-lookup"><span data-stu-id="82013-330">The <xref:System.Net.Dns.GetHostEntry%2A> method queries a DNS server for the IP address that is associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="82013-331">如果为空字符串作为传递`hostNameOrAddress`参数，则此方法返回本地主机的 IPv4 和 IPv6 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-331">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="82013-332">如果找不到的主机名，<xref:System.Net.Sockets.SocketException>异常返回的值为 11001 （Windows 套接字错误 WSAHOST_NOT_FOUND）。</span><span class="sxs-lookup"><span data-stu-id="82013-332">If the host name could not be found, the <xref:System.Net.Sockets.SocketException> exception is returned with a value of 11001 (Windows Sockets error WSAHOST_NOT_FOUND).</span></span> <span data-ttu-id="82013-333">如果 DNS 服务器没有响应，则可以返回此异常。</span><span class="sxs-lookup"><span data-stu-id="82013-333">This exception can be returned if the DNS server does not respond.</span></span> <span data-ttu-id="82013-334">如果名称不是正式的主机名或别名，或找不到它在查询的数据库中，也会返回此异常。</span><span class="sxs-lookup"><span data-stu-id="82013-334">This exception can also be returned if the name is not an official host name or alias, or it cannot be found in the database(s) being queried.</span></span>  
  
 <span data-ttu-id="82013-335"><xref:System.ArgumentException>异常也会返回，如果`hostNameOrAddress`参数包含<xref:System.Net.IPAddress.Any>或<xref:System.Net.IPAddress.IPv6Any>。</span><span class="sxs-lookup"><span data-stu-id="82013-335">The <xref:System.ArgumentException> exception is also returned if the `hostNameOrAddress` parameter contains <xref:System.Net.IPAddress.Any> or <xref:System.Net.IPAddress.IPv6Any>.</span></span>  
  
 <span data-ttu-id="82013-336"><xref:System.Net.Dns.GetHostEntry%2A>方法假定，如果 IP 文本字符串中传递`hostNameOrAddress`参数，该应用程序希望参数<xref:System.Net.IPHostEntry>返回的属性集的所有实例。</span><span class="sxs-lookup"><span data-stu-id="82013-336">The <xref:System.Net.Dns.GetHostEntry%2A> method assumes that if an IP literal string is passed in the `hostNameOrAddress` parameter that the application wants an <xref:System.Net.IPHostEntry> instance returned with all of the properties set.</span></span> <span data-ttu-id="82013-337">这些属性包括<xref:System.Net.IPHostEntry.AddressList%2A>， <xref:System.Net.IPHostEntry.Aliases%2A>，和<xref:System.Net.IPHostEntry.HostName%2A>。</span><span class="sxs-lookup"><span data-stu-id="82013-337">These properties include the <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, and <xref:System.Net.IPHostEntry.HostName%2A>.</span></span> <span data-ttu-id="82013-338">因此，实现<xref:System.Net.Dns.GetHostEntry%2A>方法时传递 IP 字符串表现为以下行为：</span><span class="sxs-lookup"><span data-stu-id="82013-338">As a result, the implementation of the <xref:System.Net.Dns.GetHostEntry%2A> method exhibits the following behavior when an IP string literal is passed:</span></span>  
  
1.  <span data-ttu-id="82013-339">方法尝试解析地址。</span><span class="sxs-lookup"><span data-stu-id="82013-339">The method tries to parse the address.</span></span> <span data-ttu-id="82013-340">如果`hostNameOrAddress`参数包含合法 IP 字符串文字，则第一阶段成功。</span><span class="sxs-lookup"><span data-stu-id="82013-340">If the `hostNameOrAddress` parameter contains a legal IP string literal, then the first phase succeeds.</span></span>  
  
2.  <span data-ttu-id="82013-341">使用 IP 字符串文字的 IP 地址的反向查找试图获取的主机名。</span><span class="sxs-lookup"><span data-stu-id="82013-341">A reverse lookup using the IP address of the IP string literal is attempted to obtain the host name.</span></span> <span data-ttu-id="82013-342">此结果集作为<xref:System.Net.IPHostEntry.HostName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="82013-342">This result is set as the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
3.  <span data-ttu-id="82013-343">再次使用这种反向查找来自的主机名来获取所有可能的 IP 地址与名称相关联并将设置为<xref:System.Net.IPHostEntry.AddressList%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="82013-343">The host name from this reverse lookup is used again to obtain all the possible IP addresses associated with the name and set as the <xref:System.Net.IPHostEntry.AddressList%2A> property.</span></span>  
  
 <span data-ttu-id="82013-344">对于 IPv4 字符串文字，上述所有三个步骤可能会成功。</span><span class="sxs-lookup"><span data-stu-id="82013-344">For an IPv4 string literal, all three steps above may succeed.</span></span> <span data-ttu-id="82013-345">但很可能实际上属于要返回的不同主机的 IPv4 地址的过时 DNS 记录。</span><span class="sxs-lookup"><span data-stu-id="82013-345">But it is possible for a stale DNS record for an IPv4 address that actually belongs to a different host to be returned.</span></span> <span data-ttu-id="82013-346">这可能会导致步骤 #3 失败并引发的异常 （不存在 DNS PTR 记录的 IPv4 地址，但没有 DNS A 记录的 IPv4 地址）。</span><span class="sxs-lookup"><span data-stu-id="82013-346">This may cause step #3 to fail and throw an exception (there is a DNS PTR record for the IPv4 address, but no DNS A record for the IPv4 address).</span></span>  
  
 <span data-ttu-id="82013-347">对于 IPv6，上面的步骤 #2 可能会失败，因为大多数 IPv6 部署并注册 IPv6 地址的反向 (PTR) 记录。</span><span class="sxs-lookup"><span data-stu-id="82013-347">For IPv6, step #2 above may fail, since most IPv6 deployments do not register the reverse (PTR) record for an IPv6 address.</span></span> <span data-ttu-id="82013-348">因此，此方法可能会返回字符串 IPv6 文字中的完全限定域名 (FQDN) 主机名称<xref:System.Net.IPHostEntry.HostName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="82013-348">So this method may return the string IPv6 literal as the fully-qualified domain (FQDN) host name in the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
 <span data-ttu-id="82013-349"><xref:System.Net.Dns.GetHostAddresses%2A>方法具有与 IP 文本有关的不同行为。</span><span class="sxs-lookup"><span data-stu-id="82013-349">The <xref:System.Net.Dns.GetHostAddresses%2A> method has different behavior with respect to IP literals.</span></span> <span data-ttu-id="82013-350">如果上面的步骤 1 成功 （它成功地分析为 IP 地址），因此立即返回地址。</span><span class="sxs-lookup"><span data-stu-id="82013-350">If step #1 above succeeds (it successfully parses as an IP address), that address is immediately returned as the result.</span></span> <span data-ttu-id="82013-351">不会尝试在反向查找。</span><span class="sxs-lookup"><span data-stu-id="82013-351">There is no attempt at a reverse lookup.</span></span>  
  
 <span data-ttu-id="82013-352">IPv6 地址进行筛选的结果中的<xref:System.Net.Dns.GetHostEntry%2A>方法如果本地计算机没有安装 IPv6。</span><span class="sxs-lookup"><span data-stu-id="82013-352">IPv6 addresses are filtered from the results of the <xref:System.Net.Dns.GetHostEntry%2A> method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="82013-353">因此，很可能返回一个空<xref:System.Net.IPHostEntry>只要 IPv6 结果可用于`hostNameOrAddress`.parameter。</span><span class="sxs-lookup"><span data-stu-id="82013-353">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `hostNameOrAddress`.parameter.</span></span>  
  
 <span data-ttu-id="82013-354"><xref:System.Net.IPHostEntry.Aliases%2A>属性的<xref:System.Net.IPHostEntry>返回实例不由该方法填充并始终为空。</span><span class="sxs-lookup"><span data-stu-id="82013-354">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="82013-355">在应用程序中启用网络跟踪时，此成员会发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="82013-355">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="82013-356">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="82013-356">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82013-357">下面的示例使用<xref:System.Net.Dns.GetHostEntry%2A>方法以解析 IP 地址为<xref:System.Net.IPHostEntry>实例。</span><span class="sxs-lookup"><span data-stu-id="82013-357">The following example uses the <xref:System.Net.Dns.GetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#1)]
 [!code-csharp[System.Net.Dns#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#1)]
 [!code-vb[System.Net.Dns#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82013-358"><paramref name="hostNameOrAddress" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="82013-358">The <paramref name="hostNameOrAddress" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="82013-359"><paramref name="hostNameOrAddress" /> 参数的长度大于 255 个字符。</span><span class="sxs-lookup"><span data-stu-id="82013-359">The length of <paramref name="hostNameOrAddress" /> parameter is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="82013-360">解析 <paramref name="hostNameOrAddress" /> 参数时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="82013-360">An error was encountered when resolving the <paramref name="hostNameOrAddress" /> parameter.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="82013-361"><paramref name="hostNameOrAddress" /> 参数是无效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-361">The <paramref name="hostNameOrAddress" /> parameter is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="82013-362">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="82013-362">for accessing DNS information.</span></span> <span data-ttu-id="82013-363">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="82013-363">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntryAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="82013-364">将主机名或 IP 地址解析为 <see cref="T:System.Net.IPHostEntry" /> 实例以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="82013-364">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (address As IPAddress) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostEntryAsync : System.Net.IPAddress -&gt; System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;" Usage="System.Net.Dns.GetHostEntryAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="82013-365">IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-365">An IP address.</span></span></param>
        <summary><span data-ttu-id="82013-366">将 IP 地址解析为 <see cref="T:System.Net.IPHostEntry" /> 实例以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="82013-366">Resolves an IP address to an <see cref="T:System.Net.IPHostEntry" /> instance as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="82013-367">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="82013-367">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="82013-368">任务对象上的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性返回 <see cref="T:System.Net.IPHostEntry" /> 实例，该实例包含有关 <paramref name="address" /> 中指定的主机的地址信息。</span><span class="sxs-lookup"><span data-stu-id="82013-368">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="address" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82013-369">不会阻止此操作。</span><span class="sxs-lookup"><span data-stu-id="82013-369">This operation will not block.</span></span> <span data-ttu-id="82013-370">返回<xref:System.Threading.Tasks.Task%601>对象将完成后`address`已解决。</span><span class="sxs-lookup"><span data-stu-id="82013-370">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the `address` has been resolved.</span></span>  
  
 <span data-ttu-id="82013-371">此方法将查询的 IP 地址和 IP 地址与关联的别名的 DNS 服务器。</span><span class="sxs-lookup"><span data-stu-id="82013-371">This method queries a DNS server for the IP addresses and aliases associated with an IP address.</span></span>  
  
 <span data-ttu-id="82013-372">如果本地计算机没有安装 IPv6，IPv6 地址进行筛选的结果中的此方法。</span><span class="sxs-lookup"><span data-stu-id="82013-372">IPv6 addresses are filtered from the results of this method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="82013-373">因此，很可能返回一个空<xref:System.Net.IPHostEntry>只要 IPv6 结果可用于`address`参数。</span><span class="sxs-lookup"><span data-stu-id="82013-373">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `address` parameter.</span></span>  
  
 <span data-ttu-id="82013-374"><xref:System.Net.IPHostEntry.Aliases%2A>属性的<xref:System.Net.IPHostEntry>返回实例不由该方法填充并始终为空。</span><span class="sxs-lookup"><span data-stu-id="82013-374">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="82013-375">在应用程序中启用网络跟踪时，此成员会发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="82013-375">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="82013-376">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="82013-376">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82013-377"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="82013-377"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="82013-378">解析 <paramref name="address" /> 时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="82013-378">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="82013-379"><paramref name="address" /> 是无效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-379"><paramref name="address" /> is an invalid IP address.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (hostNameOrAddress As String) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostEntryAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;" Usage="System.Net.Dns.GetHostEntryAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="82013-380">要解析的主机名或 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-380">The host name or IP address to resolve.</span></span></param>
        <summary><span data-ttu-id="82013-381">将主机名或 IP 地址解析为 <see cref="T:System.Net.IPHostEntry" /> 实例以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="82013-381">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="82013-382">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="82013-382">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="82013-383">任务对象上的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性返回 <see cref="T:System.Net.IPHostEntry" /> 实例，该实例包含有关 <paramref name="hostNameOrAddress" /> 中指定的主机的地址信息。</span><span class="sxs-lookup"><span data-stu-id="82013-383">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="hostNameOrAddress" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82013-384">不会阻止此操作。</span><span class="sxs-lookup"><span data-stu-id="82013-384">This operation will not block.</span></span> <span data-ttu-id="82013-385">返回<xref:System.Threading.Tasks.Task%601>对象将完成后`hostNameOrAddress`已解决。</span><span class="sxs-lookup"><span data-stu-id="82013-385">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the `hostNameOrAddress` has been resolved.</span></span>  
  
 <span data-ttu-id="82013-386">此方法将查询与主机名相关联的 IP 地址或 IP 地址的 DNS 服务器。</span><span class="sxs-lookup"><span data-stu-id="82013-386">This method queries a DNS server for the IP address that is associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="82013-387">如果为空字符串作为传递`hostNameOrAddress`参数，则此方法返回本地主机的 IPv4 和 IPv6 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-387">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="82013-388">如果找不到的主机名，<xref:System.Net.Sockets.SocketException>异常返回的值为 11001 （Windows 套接字错误 WSAHOST_NOT_FOUND）。</span><span class="sxs-lookup"><span data-stu-id="82013-388">If the host name could not be found, the <xref:System.Net.Sockets.SocketException> exception is returned with a value of 11001 (Windows Sockets error WSAHOST_NOT_FOUND).</span></span> <span data-ttu-id="82013-389">如果 DNS 服务器没有响应，则可以返回此异常。</span><span class="sxs-lookup"><span data-stu-id="82013-389">This exception can be returned if the DNS server does not respond.</span></span> <span data-ttu-id="82013-390">如果名称不是正式的主机名或别名，或找不到它在查询的数据库中，也会返回此异常。</span><span class="sxs-lookup"><span data-stu-id="82013-390">This exception can also be returned if the name is not an official host name or alias, or it cannot be found in the database(s) being queried.</span></span>  
  
 <span data-ttu-id="82013-391"><xref:System.ArgumentException>异常也会返回，如果`hostNameOrAddress`参数包含<xref:System.Net.IPAddress.Any>或<xref:System.Net.IPAddress.IPv6Any>。</span><span class="sxs-lookup"><span data-stu-id="82013-391">The <xref:System.ArgumentException> exception is also returned if the `hostNameOrAddress` parameter contains <xref:System.Net.IPAddress.Any> or <xref:System.Net.IPAddress.IPv6Any>.</span></span>  
  
 <span data-ttu-id="82013-392">此方法假设，如果 IP 文本字符串中传递`hostNameOrAddress`参数，该应用程序希望参数<xref:System.Net.IPHostEntry>返回的属性集的所有实例。</span><span class="sxs-lookup"><span data-stu-id="82013-392">This method assumes that if an IP literal string is passed in the `hostNameOrAddress` parameter that the application wants an <xref:System.Net.IPHostEntry> instance returned with all of the properties set.</span></span> <span data-ttu-id="82013-393">这些属性包括<xref:System.Net.IPHostEntry.AddressList%2A>， <xref:System.Net.IPHostEntry.Aliases%2A>，和<xref:System.Net.IPHostEntry.HostName%2A>。</span><span class="sxs-lookup"><span data-stu-id="82013-393">These properties include the <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, and <xref:System.Net.IPHostEntry.HostName%2A>.</span></span> <span data-ttu-id="82013-394">因此，此方法的实现表现为以下行为时传递 IP 字符串：</span><span class="sxs-lookup"><span data-stu-id="82013-394">As a result, the implementation of this method exhibits the following behavior when an IP string literal is passed:</span></span>  
  
1.  <span data-ttu-id="82013-395">方法尝试解析地址。</span><span class="sxs-lookup"><span data-stu-id="82013-395">The method tries to parse the address.</span></span> <span data-ttu-id="82013-396">如果`hostNameOrAddress`参数包含合法 IP 字符串文字，则第一阶段成功。</span><span class="sxs-lookup"><span data-stu-id="82013-396">If the `hostNameOrAddress` parameter contains a legal IP string literal, then the first phase succeeds.</span></span>  
  
2.  <span data-ttu-id="82013-397">使用 IP 字符串文字的 IP 地址的反向查找试图获取的主机名。</span><span class="sxs-lookup"><span data-stu-id="82013-397">A reverse lookup using the IP address of the IP string literal is attempted to obtain the host name.</span></span> <span data-ttu-id="82013-398">此结果集作为<xref:System.Net.IPHostEntry.HostName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="82013-398">This result is set as the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
3.  <span data-ttu-id="82013-399">再次使用这种反向查找来自的主机名来获取所有可能的 IP 地址与名称相关联并将设置为<xref:System.Net.IPHostEntry.AddressList%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="82013-399">The host name from this reverse lookup is used again to obtain all the possible IP addresses associated with the name and set as the <xref:System.Net.IPHostEntry.AddressList%2A> property.</span></span>  
  
 <span data-ttu-id="82013-400">对于 IPv4 字符串文字，上述所有三个步骤可能会成功。</span><span class="sxs-lookup"><span data-stu-id="82013-400">For an IPv4 string literal, all three steps above may succeed.</span></span> <span data-ttu-id="82013-401">但很可能实际上属于要返回的不同主机的 IPv4 地址的过时 DNS 记录。</span><span class="sxs-lookup"><span data-stu-id="82013-401">But it is possible for a stale DNS record for an IPv4 address that actually belongs to a different host to be returned.</span></span> <span data-ttu-id="82013-402">这可能会导致步骤 #3 失败并引发的异常 （不存在 DNS PTR 记录的 IPv4 地址，但没有 DNS A 记录的 IPv4 地址）。</span><span class="sxs-lookup"><span data-stu-id="82013-402">This may cause step #3 to fail and throw an exception (there is a DNS PTR record for the IPv4 address, but no DNS A record for the IPv4 address).</span></span>  
  
 <span data-ttu-id="82013-403">对于 IPv6，上面的步骤 #2 可能会失败，因为大多数 IPv6 部署并注册 IPv6 地址的反向 (PTR) 记录。</span><span class="sxs-lookup"><span data-stu-id="82013-403">For IPv6, step #2 above may fail, since most IPv6 deployments do not register the reverse (PTR) record for an IPv6 address.</span></span> <span data-ttu-id="82013-404">因此，此方法可能会返回字符串 IPv6 文字中的完全限定域名 (FQDN) 主机名称<xref:System.Net.IPHostEntry.HostName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="82013-404">So this method may return the string IPv6 literal as the fully-qualified domain (FQDN) host name in the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
 <span data-ttu-id="82013-405"><xref:System.Net.Dns.GetHostAddresses%2A>方法具有与 IP 文本有关的不同行为。</span><span class="sxs-lookup"><span data-stu-id="82013-405">The <xref:System.Net.Dns.GetHostAddresses%2A> method has different behavior with respect to IP literals.</span></span> <span data-ttu-id="82013-406">如果上面的步骤 1 成功 （它成功地分析为 IP 地址），因此立即返回地址。</span><span class="sxs-lookup"><span data-stu-id="82013-406">If step #1 above succeeds (it successfully parses as an IP address), that address is immediately returned as the result.</span></span> <span data-ttu-id="82013-407">不会尝试在反向查找。</span><span class="sxs-lookup"><span data-stu-id="82013-407">There is no attempt at a reverse lookup.</span></span>  
  
 <span data-ttu-id="82013-408">如果本地计算机没有安装 IPv6，IPv6 地址进行筛选的结果中的此方法。</span><span class="sxs-lookup"><span data-stu-id="82013-408">IPv6 addresses are filtered from the results of this method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="82013-409">因此，很可能返回一个空<xref:System.Net.IPHostEntry>只要 IPv6 结果可用于`hostNameOrAddress`.parameter。</span><span class="sxs-lookup"><span data-stu-id="82013-409">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `hostNameOrAddress`.parameter.</span></span>  
  
 <span data-ttu-id="82013-410"><xref:System.Net.IPHostEntry.Aliases%2A>属性的<xref:System.Net.IPHostEntry>返回实例不由该方法填充并始终为空。</span><span class="sxs-lookup"><span data-stu-id="82013-410">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="82013-411">在应用程序中启用网络跟踪时，此成员会发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="82013-411">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="82013-412">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="82013-412">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82013-413"><paramref name="hostNameOrAddress" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="82013-413">The <paramref name="hostNameOrAddress" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="82013-414"><paramref name="hostNameOrAddress" /> 参数的长度大于 255 个字符。</span><span class="sxs-lookup"><span data-stu-id="82013-414">The length of <paramref name="hostNameOrAddress" /> parameter is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="82013-415">解析 <paramref name="hostNameOrAddress" /> 参数时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="82013-415">An error was encountered when resolving the <paramref name="hostNameOrAddress" /> parameter.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="82013-416"><paramref name="hostNameOrAddress" /> 参数是无效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-416">The <paramref name="hostNameOrAddress" /> parameter is an invalid IP address.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostName">
      <MemberSignature Language="C#" Value="public static string GetHostName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetHostName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetHostName();" />
      <MemberSignature Language="F#" Value="static member GetHostName : unit -&gt; string" Usage="System.Net.Dns.GetHostName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="82013-417">获取本地计算机的主机名。</span><span class="sxs-lookup"><span data-stu-id="82013-417">Gets the host name of the local computer.</span></span></summary>
        <returns><span data-ttu-id="82013-418">包含本地计算机的 DNS 主机名的字符串。</span><span class="sxs-lookup"><span data-stu-id="82013-418">A string that contains the DNS host name of the local computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="82013-419">下面的示例使用<xref:System.Net.Dns.GetHostName%2A>方法来获取本地计算机的主机名。</span><span class="sxs-lookup"><span data-stu-id="82013-419">The following example uses the <xref:System.Net.Dns.GetHostName%2A> method to obtain the host name of the local computer.</span></span>  
  
 [!code-cpp[Dns_GetHostName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostName/CPP/dns_gethostname.cpp#1)]
 [!code-csharp[Dns_GetHostName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostName/CS/dns_gethostname.cs#1)]
 [!code-vb[Dns_GetHostName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostName/VB/dns_gethostname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="82013-420">解析本地主机名时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="82013-420">An error is encountered when resolving the local host name.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="82013-421">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="82013-421">for accessing DNS information.</span></span> <span data-ttu-id="82013-422">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="82013-422">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry Resolve (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry Resolve(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.Resolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ Resolve(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="static member Resolve : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.Resolve hostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Resolve is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Obsolete("Resolve is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostName"><span data-ttu-id="82013-423">DNS 样式的主机名或 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="82013-423">A DNS-style host name or IP address.</span></span></param>
        <summary><span data-ttu-id="82013-424">将 DNS 主机名或 IP 地址解析为 <see cref="T:System.Net.IPHostEntry" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="82013-424">Resolves a DNS host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="82013-425">一个 <see cref="T:System.Net.IPHostEntry" /> 实例，包含有关 <paramref name="hostName" /> 中指定的主机的地址信息。</span><span class="sxs-lookup"><span data-stu-id="82013-425">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="hostName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82013-426"><xref:System.Net.Dns.Resolve%2A>方法将查询与主机名或 IP 地址关联的 IP 地址的 DNS 服务器。</span><span class="sxs-lookup"><span data-stu-id="82013-426">The <xref:System.Net.Dns.Resolve%2A> method queries a DNS server for the IP address associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="82013-427">当`hostName`DNS 样式主机名相关联的多个 IP 地址返回仅为第一个 IP 地址解析为相应主机名。</span><span class="sxs-lookup"><span data-stu-id="82013-427">When `hostName` is a DNS-style host name associated with multiple IP addresses, only the first IP address that resolves to that host name is returned.</span></span>  
  
 <span data-ttu-id="82013-428">如果<xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType>属性设置为`true`，则<xref:System.Net.IPHostEntry.Aliases%2A>属性的<xref:System.Net.IPHostEntry>返回实例不由该方法填充并始终为空。</span><span class="sxs-lookup"><span data-stu-id="82013-428">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> property is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="82013-429">在应用程序中启用网络跟踪时，此成员会发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="82013-429">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="82013-430">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="82013-430">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82013-431">下面的示例使用<xref:System.Net.Dns.Resolve%2A>方法以解析 IP 地址为<xref:System.Net.IPHostEntry>实例。</span><span class="sxs-lookup"><span data-stu-id="82013-431">The following example uses the <xref:System.Net.Dns.Resolve%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[Dns_Resolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Resolve/CPP/dns_resolve.cpp#1)]
 [!code-csharp[Dns_Resolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Resolve/CS/dns_resolve.cs#1)]
 [!code-vb[Dns_Resolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Resolve/VB/dns_resolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82013-432"><paramref name="hostName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="82013-432"><paramref name="hostName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="82013-433"><paramref name="hostName" /> 的长度超过 255 个字符。</span><span class="sxs-lookup"><span data-stu-id="82013-433">The length of <paramref name="hostName" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="82013-434">解析 <paramref name="hostName" /> 时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="82013-434">An error is encountered when resolving <paramref name="hostName" />.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="82013-435">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="82013-435">for accessing DNS information.</span></span> <span data-ttu-id="82013-436">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="82013-436">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>