<Type Name="Dns" FullName="System.Net.Dns">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6152732223fb783f078f46f1761153fd4adf9701" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30470521" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Dns" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Dns extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Dns" />
  <TypeSignature Language="VB.NET" Value="Public Class Dns" />
  <TypeSignature Language="C++ CLI" Value="public ref class Dns abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NameResolution</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供简单的域名解析功能。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns>类是一个静态类，从 Internet 域名系统 (DNS) 中检索有关特定主机的信息。  
  
 DNS 查询中的主机信息返回实例中<xref:System.Net.IPHostEntry>类。 如果指定的主机在 DNS 数据库中有多个条目<xref:System.Net.IPHostEntry>包含多个 IP 地址和别名。  
  
   
  
## Examples  
 下面的示例查询 DNS 数据库中的主机 www.contoso.com 上的信息。  
  
 [!code-cpp[Classic Dns Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Dns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Dns Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Dns Example/CS/source.cs#1)]
 [!code-vb[Classic Dns Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Dns Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginGetHostAddresses">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostAddresses (string hostNameOrAddress, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostAddresses(string hostNameOrAddress, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostAddresses (hostNameOrAddress As String, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostAddresses(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">要解析的主机名或 IP 地址。</param>
        <param name="requestCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</param>
        <param name="state">一个用户定义对象，其中包含操作的相关信息。 操作完成后，此对象会被传递给 <c>requestCallback</c> 委托。</param>
        <summary>异步返回指定主机的 Internet 协议 (IP) 地址。</summary>
        <returns>引用异步请求的 <see cref="T:System.IAsyncResult" /> 实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.BeginGetHostAddresses%2A>方法异步查询是与主机名关联的 IP 地址的 DNS 服务器。 如果`hostNameOrAddress`是 IP 地址，而无需查询 DNS 服务器返回此地址。  
  
> [!NOTE]
>  在你的应用程序中启用网络跟踪时，此成员将发出跟踪信息。 有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。  
  
 如果作为传递空字符串`hostNameOrAddress`自变量，则此方法返回的本地主机的 IPv4 和 IPv6 地址。
  
 异步<xref:System.Net.Dns.BeginGetHostAddresses%2A>操作必须通过调用<xref:System.Net.Dns.EndGetHostAddresses%2A>方法。 通常情况下，通过调用该方法`requestCallback`委托。  
  
 此方法不会阻止，直到完成该操作。 若要阻止该操作完成之前，请使用<xref:System.Net.Dns.GetHostAddresses%2A>方法。  
  
 有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="hostNameOrAddress" /> 的长度超过 255 个字符。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解析 <paramref name="hostNameOrAddress" /> 时遇到错误。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostNameOrAddress" /> 是无效的 IP 地址。</exception>
        <permission cref="T:System.Net.DnsPermission">用于访问 DNS 信息。 关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostByName">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostByName (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostByName(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostByName (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostByName(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostName">主机的 DNS 名称。</param>
        <param name="requestCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</param>
        <param name="stateObject">一个用户定义对象，其中包含操作的相关信息。 操作完成后，此对象会被传递给 <c>requestCallback</c> 委托。</param>
        <summary>开始异步请求关于指定 DNS 主机名的 <see cref="T:System.Net.IPHostEntry" /> 信息。</summary>
        <returns>引用异步请求的 <see cref="T:System.IAsyncResult" /> 实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 异步<xref:System.Net.Dns.BeginGetHostByName%2A>操作必须通过调用<xref:System.Net.Dns.EndGetHostByName%2A>方法。 通常情况下，通过调用该方法`requestCallback`委托。  
  
 此方法不会阻止，直到完成该操作。 若要阻止该操作完成之前，请使用<xref:System.Net.Dns.GetHostByName%2A>方法。  
  
 有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。  
  
> [!NOTE]
>  在你的应用程序中启用网络跟踪时，此成员将发出跟踪信息。 有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">执行 DNS 查询时遇到错误。</exception>
        <permission cref="T:System.Net.DnsPermission">用于访问 DNS 信息。 关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将主机名或 IP 地址异步解析为 <see cref="T:System.Net.IPHostEntry" /> 实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (System.Net.IPAddress address, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(class System.Net.IPAddress address, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.Net.IPAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (address As IPAddress, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::Net::IPAddress ^ address, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">要解析的 IP 地址。</param>
        <param name="requestCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</param>
        <param name="stateObject">一个用户定义对象，其中包含操作的相关信息。 操作完成后，此对象会被传递给 <c>requestCallback</c> 委托。</param>
        <summary>将 IP 地址异步解析为 <see cref="T:System.Net.IPHostEntry" /> 实例。</summary>
        <returns>引用异步请求的 <see cref="T:System.IAsyncResult" /> 实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.BeginGetHostEntry%2A>方法以异步方式将查询 DNS 服务器 IP 地址以及与 IP 地址相关联的别名。  
  
 **请注意**时你的应用程序中启用网络跟踪，此成员发出跟踪信息。 有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。  
  
 异步<xref:System.Net.Dns.BeginGetHostEntry%2A>操作必须通过调用<xref:System.Net.Dns.EndGetHostEntry%2A>方法。 通常情况下，通过调用该方法`requestCallback`委托。  
  
 此方法不会阻止，直到完成该操作。 若要阻止该操作完成之前，请使用<xref:System.Net.Dns.GetHostEntry%2A>方法。  
  
 有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Net.Dns.BeginGetHostEntry%2A>方法以解析 IP 地址为<xref:System.Net.IPHostEntry>实例。  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解析 <paramref name="address" /> 时遇到错误。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> 是无效的 IP 地址。</exception>
        <permission cref="T:System.Net.DnsPermission">用于访问 DNS 信息。 关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (string hostNameOrAddress, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(string hostNameOrAddress, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (hostNameOrAddress As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">要解析的主机名或 IP 地址。</param>
        <param name="requestCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</param>
        <param name="stateObject">一个用户定义对象，其中包含操作的相关信息。 操作完成后，此对象会被传递给 <c>requestCallback</c> 委托。</param>
        <summary>将主机名或 IP 地址异步解析为 <see cref="T:System.Net.IPHostEntry" /> 实例。</summary>
        <returns>引用异步请求的 <see cref="T:System.IAsyncResult" /> 实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.BeginGetHostEntry%2A>方法查询与主机名称关联的 IP 地址或 IP 地址的 DNS 服务器。  
  
 **请注意**时你的应用程序中启用网络跟踪，此成员发出跟踪信息。 有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。  
  
 异步<xref:System.Net.Dns.BeginGetHostEntry%2A>操作必须通过调用<xref:System.Net.Dns.EndGetHostEntry%2A>方法。 通常情况下，通过调用该方法`requestCallback`委托。  
  
 此方法不会阻止，直到完成该操作。 若要阻止该操作完成之前，请使用<xref:System.Net.Dns.GetHostEntry%2A>方法。  
  
 有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Net.Dns.BeginGetHostEntry%2A>方法以解析 IP 地址为<xref:System.Net.IPHostEntry>实例。  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="hostNameOrAddress" /> 的长度超过 255 个字符。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解析 <paramref name="hostNameOrAddress" /> 时遇到错误。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostNameOrAddress" /> 是无效的 IP 地址。</exception>
        <permission cref="T:System.Net.DnsPermission">用于访问 DNS 信息。 关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostName">主机的 DNS 名称。</param>
        <param name="requestCallback">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</param>
        <param name="stateObject">一个用户定义对象，其中包含操作的相关信息。 操作完成后，此对象会被传递给 <c>requestCallback</c> 委托。</param>
        <summary>开始异步请求将 DNS 主机名或 IP 地址解析为 <see cref="T:System.Net.IPAddress" /> 实例。</summary>
        <returns>引用异步请求的 <see cref="T:System.IAsyncResult" /> 实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 异步<xref:System.Net.Dns.BeginResolve%2A>操作必须通过调用<xref:System.Net.Dns.EndResolve%2A>方法。 通常情况下，通过调用该方法`requestCallback`委托。  
  
 此方法不会阻止，直到完成该操作。 若要阻止该操作完成之前，请使用<xref:System.Net.Dns.Resolve%2A>方法。  
  
 有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。  
  
> [!NOTE]
>  在你的应用程序中启用网络跟踪时，此成员将发出跟踪信息。 有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。  
  
   
  
## Examples  
 下面的示例使用<xref:System.Net.Dns.BeginResolve%2A>到将 DNS 主机名称解析<xref:System.Net.IPAddress>。  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">调用方没有访问 DNS 信息的权限。</exception>
        <permission cref="T:System.Net.DnsPermission">用于访问 DNS 信息。 关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] EndGetHostAddresses (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] EndGetHostAddresses(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostAddresses(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostAddresses (asyncResult As IAsyncResult) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ EndGetHostAddresses(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">一个 <see cref="T:System.IAsyncResult" /> 实例，该实例通过调用 <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" /> 方法返回。</param>
        <summary>结束对 DNS 信息的异步请求。</summary>
        <returns>一个 <see cref="T:System.Net.IPAddress" /> 类型的数组，用于保存由 <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" /> 的 <paramref name="hostNameOrAddress" /> 参数指定的主机的 IP 地址。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.BeginGetHostAddresses%2A>方法查询与主机名关联的 IP 地址的 DNS 服务器。 如果`hostNameOrAddress`是 IP 地址，而无需查询 DNS 服务器返回此地址。  
  
 如果作为传递空字符串`hostNameOrAddress`自变量，则此方法返回的本地主机的 IPv4 和 IPv6 地址。
  
> [!NOTE]
>  在你的应用程序中启用网络跟踪时，此成员将发出跟踪信息。 有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostByName (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostByName(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostByName(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostByName (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostByName(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">一个 <see cref="T:System.IAsyncResult" /> 实例，该实例通过调用 <see cref="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" /> 方法返回。</param>
        <summary>结束对 DNS 信息的异步请求。</summary>
        <returns>一个 <see cref="T:System.Net.IPHostEntry" /> 对象，该对象包含一个主机的 DNS 信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法受到阻止，直到操作完成。  
  
 若要以同步方式执行此操作，使用<xref:System.Net.Dns.GetHostByName%2A>方法。  
  
 如果<xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType>属性设置为`true`、<xref:System.Net.IPHostEntry.Aliases%2A>属性<xref:System.Net.IPHostEntry>返回实例不填充此方法，且将始终为空。  
  
> [!NOTE]
>  在你的应用程序中启用网络跟踪时，此成员将发出跟踪信息。 有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostEntry (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostEntry(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostEntry(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostEntry (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostEntry(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">一个 <see cref="T:System.IAsyncResult" /> 实例，该实例通过调用 <see cref="Overload:System.Net.Dns.BeginGetHostEntry" /> 方法返回。</param>
        <summary>结束对 DNS 信息的异步请求。</summary>
        <returns>一个 <see cref="T:System.Net.IPHostEntry" /> 实例，其中包含有关主机的地址信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法受到阻止，直到操作完成。  
  
 <xref:System.Net.IPHostEntry.Aliases%2A>属性<xref:System.Net.IPHostEntry>返回实例不填充此方法，且将始终为空。  
  
 若要以同步方式执行此操作，使用<xref:System.Net.Dns.GetHostEntry%2A>方法。  
  
> [!NOTE]
>  在你的应用程序中启用网络跟踪时，此成员将发出跟踪信息。 有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndResolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndResolve (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndResolve(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndResolve(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndResolve (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndResolve(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">一个 <see cref="T:System.IAsyncResult" /> 实例，该实例通过调用 <see cref="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" /> 方法返回。</param>
        <summary>结束对 DNS 信息的异步请求。</summary>
        <returns>一个 <see cref="T:System.Net.IPHostEntry" /> 对象，该对象包含一个主机的 DNS 信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法受到阻止，直到操作完成。  
  
 如果<xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType>设置为`true`、<xref:System.Net.IPHostEntry.Aliases%2A>属性<xref:System.Net.IPHostEntry>返回实例不填充此方法，且将始终为空。  
  
 若要以同步方式执行此操作，使用<xref:System.Net.Dns.Resolve%2A>方法。  
  
> [!NOTE]
>  在你的应用程序中启用网络跟踪时，此成员将发出跟踪信息。 有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。  
  
   
  
## Examples  
 下面的示例结束对 DNS 主机信息的异步请求。  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] GetHostAddresses (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] GetHostAddresses(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddresses(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddresses (hostNameOrAddress As String) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ GetHostAddresses(System::String ^ hostNameOrAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">要解析的主机名或 IP 地址。</param>
        <summary>返回指定主机的 Internet 协议 (IP) 地址。</summary>
        <returns>一个 <see cref="T:System.Net.IPAddress" /> 类型的数组，用于保存由 <paramref name="hostNameOrAddress" /> 参数指定的主机的 IP 地址。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.GetHostAddresses%2A>方法查询与主机名关联的 IP 地址的 DNS 服务器。 如果`hostNameOrAddress`是 IP 地址，而无需查询 DNS 服务器返回此地址。  
  
 如果作为传递空字符串`hostNameOrAddress`自变量，则此方法返回的本地主机的 IPv4 和 IPv6 地址。
  
 从结果中筛选 IPv6 地址<xref:System.Net.Dns.GetHostAddresses%2A>方法如果本地计算机没有安装 IPv6。 因此，很可能返回一个空<xref:System.Net.IPAddress>实例如果仅 IPv6 结果可用于`hostNameOrAddress`实例。  
  
> [!NOTE]
>  在你的应用程序中启用网络跟踪时，此成员将发出跟踪信息。 有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Net.Dns.GetHostAddresses%2A>方法以将 IP 地址解析为类型的数组<xref:System.Net.IPAddress>。  
  
 [!code-cpp[System.Net.Dns#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#3)]
 [!code-csharp[System.Net.Dns#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#3)]
 [!code-vb[System.Net.Dns#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="hostNameOrAddress" /> 的长度超过 255 个字符。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解析 <paramref name="hostNameOrAddress" /> 时遇到错误。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostNameOrAddress" /> 是无效的 IP 地址。</exception>
        <permission cref="T:System.Net.DnsPermission">用于访问 DNS 信息。 关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddressesAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt; GetHostAddressesAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPAddress[]&gt; GetHostAddressesAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddressesAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddressesAsync (hostNameOrAddress As String) As Task(Of IPAddress())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;cli::array &lt;System::Net::IPAddress ^&gt; ^&gt; ^ GetHostAddressesAsync(System::String ^ hostNameOrAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">要解析的主机名或 IP 地址。</param>
        <summary>返回指定主机的 Internet 协议 (IP) 地址以作为异步操作。</summary>
        <returns>返回 <see cref="T:System.Threading.Tasks.Task`1" />。  
  
 表示异步操作的任务对象。 任务对象上的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性返回类型为 <see cref="T:System.Net.IPAddress" /> 的数组，该类型包含 <paramref name="hostNameOrAddress" /> 参数指定的主机的 IP 地址。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不会阻止此操作。 返回<xref:System.Threading.Tasks.Task%601>对象都完成后`hostNameOrAddress`已得到解决。  
  
 此方法将查询与主机名关联的 IP 地址的 DNS 服务器。 如果`hostNameOrAddress`是 IP 地址，而无需查询 DNS 服务器返回此地址。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="hostNameOrAddress" /> 的长度超过 255 个字符。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解析 <paramref name="hostNameOrAddress" /> 时遇到错误。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostNameOrAddress" /> 是无效的 IP 地址。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostByAddress">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取 IP 地址的 DNS 主机信息。 这些方法现在已过时。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::Net::IPAddress ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">一个 <see cref="T:System.Net.IPAddress" />。</param>
        <summary>根据指定的 <see cref="T:System.Net.IPAddress" /> 创建 <see cref="T:System.Net.IPHostEntry" /> 实例。</summary>
        <returns>一个 <see cref="T:System.Net.IPHostEntry" />。  
  
 一个 <see cref="T:System.Net.IPHostEntry" /> 实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  在你的应用程序中启用网络跟踪时，此成员将发出跟踪信息。 有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Net.IPHostEntry>从<xref:System.Net.IPAddress>。  
  
 [!code-cpp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CPP/dns_gethostbyaddress_ipaddress.cpp#1)]
 [!code-csharp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CS/dns_gethostbyaddress_ipaddress.cs#1)]
 [!code-vb[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/VB/dns_gethostbyaddress_ipaddress.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解析 <paramref name="address" /> 时遇到错误。</exception>
        <permission cref="T:System.Net.DnsPermission">用于访问 DNS 信息。 关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::String ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">IP 地址。</param>
        <summary>根据 IP 地址创建 <see cref="T:System.Net.IPHostEntry" /> 实例。</summary>
        <returns>一个 <see cref="T:System.Net.IPHostEntry" /> 实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  在你的应用程序中启用网络跟踪时，此成员将发出跟踪信息。 有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解析 <paramref name="address" /> 时遇到错误。</exception>
        <exception cref="T:System.FormatException">
          <paramref name="address" /> 不是有效的 IP 地址。</exception>
        <permission cref="T:System.Net.DnsPermission">用于访问 DNS 信息。 关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByName (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByName(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByName (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByName(System::String ^ hostName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostName">主机的 DNS 名称。</param>
        <summary>获取指定 DNS 主机名的 DNS 信息。</summary>
        <returns>一个 <see cref="T:System.Net.IPHostEntry" /> 对象，包含对应于 <paramref name="hostName" /> 中指定的地址的主机信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.GetHostByName%2A>方法查询主机信息的 Internet DNS 服务器。 如果您的主机名称传入空字符串，则此方法检索本地计算机的标准的主机名。  
  
 DNS 信息异步访问，请使用<xref:System.Net.Dns.BeginGetHostByName%2A>和<xref:System.Net.Dns.EndGetHostByName%2A>方法。  
  
 如果<xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType>属性设置为`true`、<xref:System.Net.IPHostEntry.Aliases%2A>属性<xref:System.Net.IPHostEntry>返回实例不填充此方法，且将始终为空。  
  
> [!NOTE]
>  在你的应用程序中启用网络跟踪时，此成员将发出跟踪信息。 有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。  
  
   
  
## Examples  
 下面的示例使用<xref:System.Net.Dns.GetHostByName%2A>方法以获取指定的 DNS 主机名的 DNS 信息。  
  
 [!code-cpp[Dns_GetHostByName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByName/CPP/dns_gethostbyname.cpp#1)]
 [!code-csharp[Dns_GetHostByName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByName/CS/dns_gethostbyname.cs#1)]
 [!code-vb[Dns_GetHostByName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByName/VB/dns_gethostbyname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="hostName" /> 的长度超过 255 个字符。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解析 <paramref name="hostName" /> 时遇到错误。</exception>
        <permission cref="T:System.Net.DnsPermission">用于访问 DNS 信息。 关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将主机名或 IP 地址解析为 <see cref="T:System.Net.IPHostEntry" /> 实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::Net::IPAddress ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">IP 地址。</param>
        <summary>将 IP 地址解析为 <see cref="T:System.Net.IPHostEntry" /> 实例。</summary>
        <returns>一个 <see cref="T:System.Net.IPHostEntry" /> 实例，包含有关 <paramref name="address" /> 中指定的主机的地址信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.GetHostEntry%2A>方法将查询 DNS 服务器 IP 地址以及与 IP 地址相关联的别名。  
  
 从结果中筛选 IPv6 地址<xref:System.Net.Dns.GetHostEntry%2A>方法如果本地计算机没有安装 IPv6。 因此，很可能返回一个空<xref:System.Net.IPHostEntry>实例如果仅 IPv6 结果可用于`address`参数。  
  
 <xref:System.Net.IPHostEntry.Aliases%2A>属性<xref:System.Net.IPHostEntry>返回实例不填充此方法，且将始终为空。  
  
> [!NOTE]
>  在你的应用程序中启用网络跟踪时，此成员将发出跟踪信息。 有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。  

## Examples  
 下面的代码示例使用<xref:System.Net.Dns.GetHostEntry%2A>方法以解析 IP 地址为<xref:System.Net.IPHostEntry>实例。  
  
 [!code-cpp[System.Net.Dns#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#4)]
 [!code-csharp[System.Net.Dns#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#4)]
 [!code-vb[System.Net.Dns#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解析 <paramref name="address" /> 时遇到错误。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> 是无效的 IP 地址。</exception>
        <permission cref="T:System.Net.DnsPermission">用于访问 DNS 信息。 关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (hostNameOrAddress As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::String ^ hostNameOrAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">要解析的主机名或 IP 地址。</param>
        <summary>将主机名或 IP 地址解析为 <see cref="T:System.Net.IPHostEntry" /> 实例。</summary>
        <returns>一个 <see cref="T:System.Net.IPHostEntry" /> 实例，包含有关 <paramref name="hostNameOrAddress" /> 中指定的主机的地址信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.GetHostEntry%2A>方法查询与主机名称关联的 IP 地址或 IP 地址的 DNS 服务器。  
  
 如果作为传递空字符串`hostNameOrAddress`自变量，则此方法返回的本地主机的 IPv4 和 IPv6 地址。
  
 如果找不到的主机名，<xref:System.Net.Sockets.SocketException>异常返回值为 11001 （Windows 套接字错误 WSAHOST_NOT_FOUND）。 如果 DNS 服务器不响应，则可能会返回此异常。 如果名称不是正式的主机名或别名，或者找不到它正在查询的数据库中，可能还会返回此异常。  
  
 <xref:System.ArgumentException>异常，也会返回如果`hostNameOrAddress`参数包含<xref:System.Net.IPAddress.Any>或<xref:System.Net.IPAddress.IPv6Any>。  
  
 <xref:System.Net.Dns.GetHostEntry%2A>方法假定如果传入 IP 文字字符串`hostNameOrAddress`希望应用程序的参数<xref:System.Net.IPHostEntry>实例返回所有属性集。 这些属性包括<xref:System.Net.IPHostEntry.AddressList%2A>， <xref:System.Net.IPHostEntry.Aliases%2A>，和<xref:System.Net.IPHostEntry.HostName%2A>。 因此的实现<xref:System.Net.Dns.GetHostEntry%2A>方法传递 IP 字符串文本时出现以下行为：  
  
1.  该方法尝试分析地址。 如果`hostNameOrAddress`参数包含合法 IP 字符串文本，则第一阶段成功。  
  
2.  使用 IP 字符串文本的 IP 地址的反向查找尝试获取的主机名。 此结果集作为<xref:System.Net.IPHostEntry.HostName%2A>属性。  
  
3.  再次使用主机名从此反向查找以获取所有可能的 IP 地址与名称关联并将设置为<xref:System.Net.IPHostEntry.AddressList%2A>属性。  
  
 为 IPv4 字符串文本，以上所有三个步骤可能会成功。 但有可能属于不同的主机返回实际的 IPv4 地址的陈旧 DNS 记录。 这可能导致步骤 #3 失败并引发的异常 （不存在 DNS PTR 记录的 IPv4 地址，但任何 DNS A 记录的 IPv4 地址）。  
  
 对于 IPv6，# 上述步骤 2 可能会失败，因为大多数 IPv6 部署并注册的 IPv6 地址的反向 (PTR) 记录。 因此，此方法可能返回的字符串 IPv6 文字中的完全限定域名 (FQDN) 主机名作为<xref:System.Net.IPHostEntry.HostName%2A>属性。  
  
 <xref:System.Net.Dns.GetHostAddresses%2A>方法具有不同的行为时会 IP 文本。 如果上面的步骤 1 成功 （它已成功分析作为 IP 地址），因此立即返回地址。 不会尝试在反向查找。  
  
 从结果中筛选 IPv6 地址<xref:System.Net.Dns.GetHostEntry%2A>方法如果本地计算机没有安装 IPv6。 因此，很可能返回一个空<xref:System.Net.IPHostEntry>实例如果仅 IPv6 结果可用于`hostNameOrAddress`实例。  
  
 <xref:System.Net.IPHostEntry.Aliases%2A>属性<xref:System.Net.IPHostEntry>返回实例不填充此方法，且将始终为空。  
  
> [!NOTE]
>  在你的应用程序中启用网络跟踪时，此成员将发出跟踪信息。 有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。  
  
   
  
## Examples  
 下面的示例使用<xref:System.Net.Dns.GetHostEntry%2A>方法以解析 IP 地址为<xref:System.Net.IPHostEntry>实例。  
  
 [!code-cpp[System.Net.Dns#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#1)]
 [!code-csharp[System.Net.Dns#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#1)]
 [!code-vb[System.Net.Dns#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="hostNameOrAddress" /> 参数的长度大于 255 个字符。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解析 <paramref name="hostNameOrAddress" /> 参数时遇到错误。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostNameOrAddress" /> 参数是无效的 IP 地址。</exception>
        <permission cref="T:System.Net.DnsPermission">用于访问 DNS 信息。 关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntryAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将主机名或 IP 地址解析为 <see cref="T:System.Net.IPHostEntry" /> 实例以作为异步操作。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (address As IPAddress) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::Net::IPAddress ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">IP 地址。</param>
        <summary>将 IP 地址解析为 <see cref="T:System.Net.IPHostEntry" /> 实例以作为异步操作。</summary>
        <returns>返回 <see cref="T:System.Threading.Tasks.Task`1" />。  
  
 表示异步操作的任务对象。 任务对象上的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性返回 <see cref="T:System.Net.IPHostEntry" /> 实例，该实例包含有关 <paramref name="address" /> 中指定的主机的地址信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不会阻止此操作。 返回<xref:System.Threading.Tasks.Task%601>对象都完成后`address`已得到解决。  
  
 此方法将查询 DNS 服务器 IP 地址以及与 IP 地址相关联的别名。  
  
 如果本地计算机没有安装 IPv6，则此方法的结果从会筛选 IPv6 地址。 因此，很可能返回一个空<xref:System.Net.IPHostEntry>实例如果仅 IPv6 结果可用于`address`参数。  
  
 <xref:System.Net.IPHostEntry.Aliases%2A>属性<xref:System.Net.IPHostEntry>返回实例不填充此方法，且将始终为空。  
  
> [!NOTE]
>  在你的应用程序中启用网络跟踪时，此成员将发出跟踪信息。 有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解析 <paramref name="address" /> 时遇到错误。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> 是无效的 IP 地址。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (hostNameOrAddress As String) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::String ^ hostNameOrAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">要解析的主机名或 IP 地址。</param>
        <summary>将主机名或 IP 地址解析为 <see cref="T:System.Net.IPHostEntry" /> 实例以作为异步操作。</summary>
        <returns>返回 <see cref="T:System.Threading.Tasks.Task`1" />。  
  
 表示异步操作的任务对象。 任务对象上的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性返回 <see cref="T:System.Net.IPHostEntry" /> 实例，该实例包含有关 <paramref name="hostNameOrAddress" /> 中指定的主机的地址信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不会阻止此操作。 返回<xref:System.Threading.Tasks.Task%601>对象都完成后`hostNameOrAddress`已得到解决。  
  
 此方法将查询与主机名称关联的 IP 地址或 IP 地址的 DNS 服务器。  
  
 如果作为传递空字符串`hostNameOrAddress`自变量，则此方法返回的本地主机的 IPv4 和 IPv6 地址。
  
 如果找不到的主机名，<xref:System.Net.Sockets.SocketException>异常返回值为 11001 （Windows 套接字错误 WSAHOST_NOT_FOUND）。 如果 DNS 服务器不响应，则可能会返回此异常。 如果名称不是正式的主机名或别名，或者找不到它正在查询的数据库中，可能还会返回此异常。  
  
 <xref:System.ArgumentException>异常，也会返回如果`hostNameOrAddress`参数包含<xref:System.Net.IPAddress.Any>或<xref:System.Net.IPAddress.IPv6Any>。  
  
 此方法假定如果传入 IP 文字字符串`hostNameOrAddress`希望应用程序的参数<xref:System.Net.IPHostEntry>实例返回所有属性集。 这些属性包括<xref:System.Net.IPHostEntry.AddressList%2A>， <xref:System.Net.IPHostEntry.Aliases%2A>，和<xref:System.Net.IPHostEntry.HostName%2A>。 因此，此方法的实现具有以下行为，这是传递 IP 字符串时：  
  
1.  该方法尝试分析地址。 如果`hostNameOrAddress`参数包含合法 IP 字符串文本，则第一阶段成功。  
  
2.  使用 IP 字符串文本的 IP 地址的反向查找尝试获取的主机名。 此结果集作为<xref:System.Net.IPHostEntry.HostName%2A>属性。  
  
3.  再次使用主机名从此反向查找以获取所有可能的 IP 地址与名称关联并将设置为<xref:System.Net.IPHostEntry.AddressList%2A>属性。  
  
 为 IPv4 字符串文本，以上所有三个步骤可能会成功。 但有可能属于不同的主机返回实际的 IPv4 地址的陈旧 DNS 记录。 这可能导致步骤 #3 失败并引发的异常 （不存在 DNS PTR 记录的 IPv4 地址，但任何 DNS A 记录的 IPv4 地址）。  
  
 对于 IPv6，# 上述步骤 2 可能会失败，因为大多数 IPv6 部署并注册的 IPv6 地址的反向 (PTR) 记录。 因此，此方法可能返回的字符串 IPv6 文字中的完全限定域名 (FQDN) 主机名作为<xref:System.Net.IPHostEntry.HostName%2A>属性。  
  
 <xref:System.Net.Dns.GetHostAddresses%2A>方法具有不同的行为时会 IP 文本。 如果上面的步骤 1 成功 （它已成功分析作为 IP 地址），因此立即返回地址。 不会尝试在反向查找。  
  
 如果本地计算机没有安装 IPv6，则此方法的结果从会筛选 IPv6 地址。 因此，很可能返回一个空<xref:System.Net.IPHostEntry>实例如果仅 IPv6 结果可用于`hostNameOrAddress`实例。  
  
 <xref:System.Net.IPHostEntry.Aliases%2A>属性<xref:System.Net.IPHostEntry>返回实例不填充此方法，且将始终为空。  
  
> [!NOTE]
>  在你的应用程序中启用网络跟踪时，此成员将发出跟踪信息。 有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="hostNameOrAddress" /> 参数的长度大于 255 个字符。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解析 <paramref name="hostNameOrAddress" /> 参数时遇到错误。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostNameOrAddress" /> 参数是无效的 IP 地址。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostName">
      <MemberSignature Language="C#" Value="public static string GetHostName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetHostName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetHostName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取本地计算机的主机名。</summary>
        <returns>包含本地计算机的 DNS 主机名的字符串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例使用<xref:System.Net.Dns.GetHostName%2A>方法来获取本地计算机的主机名。  
  
 [!code-cpp[Dns_GetHostName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostName/CPP/dns_gethostname.cpp#1)]
 [!code-csharp[Dns_GetHostName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostName/CS/dns_gethostname.cs#1)]
 [!code-vb[Dns_GetHostName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostName/VB/dns_gethostname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">解析本地主机名时遇到错误。</exception>
        <permission cref="T:System.Net.DnsPermission">用于访问 DNS 信息。 关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry Resolve (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry Resolve(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.Resolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ Resolve(System::String ^ hostName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostName">DNS 样式的主机名或 IP 地址。</param>
        <summary>将 DNS 主机名或 IP 地址解析为 <see cref="T:System.Net.IPHostEntry" /> 实例。</summary>
        <returns>一个 <see cref="T:System.Net.IPHostEntry" /> 实例，包含有关 <paramref name="hostName" /> 中指定的主机的地址信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.Resolve%2A>方法查询与主机名或 IP 地址关联的 IP 地址的 DNS 服务器。  
  
 当`hostName`与多个 IP 地址关联的 DNS 样式主机名，则返回仅为第一个 IP 地址解析为该主机名。  
  
 如果<xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType>属性设置为`true`、<xref:System.Net.IPHostEntry.Aliases%2A>属性<xref:System.Net.IPHostEntry>返回实例不填充此方法，且将始终为空。  
  
> [!NOTE]
>  在你的应用程序中启用网络跟踪时，此成员将发出跟踪信息。 有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。  
  
   
  
## Examples  
 下面的示例使用<xref:System.Net.Dns.Resolve%2A>方法以解析 IP 地址为<xref:System.Net.IPHostEntry>实例。  
  
 [!code-cpp[Dns_Resolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Resolve/CPP/dns_resolve.cpp#1)]
 [!code-csharp[Dns_Resolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Resolve/CS/dns_resolve.cs#1)]
 [!code-vb[Dns_Resolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Resolve/VB/dns_resolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="hostName" /> 的长度超过 255 个字符。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解析 <paramref name="hostName" /> 时遇到错误。</exception>
        <permission cref="T:System.Net.DnsPermission">用于访问 DNS 信息。 关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>