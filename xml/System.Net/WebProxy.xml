<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WebProxy.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e5b6b938793be75677994e28647a8e29b1ceed4f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e5b6b938793be75677994e28647a8e29b1ceed4f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.WebProxy">
          <source>Contains HTTP proxy settings for the <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> class.</source>
          <target state="translated">包含 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 类的 HTTP 代理设置。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebProxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph> class contains the proxy settings that <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> instances use to determine whether a Web proxy is used to send requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph>类包含的代理设置，<ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph>实例都使用以确定是否使用 Web 代理以发送请求。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebProxy">
          <source>Global Web proxy settings can be specified in machine and application configuration files, and applications can use instances of the <ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph> class to customize Web proxy use.</source>
          <target state="translated">全局 Web 代理设置可以指定在计算机和应用程序配置文件和应用程序可以使用的实例<ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph>类自定义 Web 代理使用。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebProxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph> class is the base implementation of the <ph id="ph2">&lt;xref:System.Net.IWebProxy&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph>类是的基实现<ph id="ph2">&lt;xref:System.Net.IWebProxy&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebProxy">
          <source>To obtain instances of the Web proxy class, you can use any of the following methods:</source>
          <target state="translated">若要获取 Web 代理类的实例，可以使用任何以下方法：</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebProxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy.%23ctor%2A&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebProxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy.GetDefaultProxy%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy.GetDefaultProxy%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebProxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.GlobalProxySelection.Select%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.GlobalProxySelection.Select%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebProxy">
          <source>These methods each supply a <ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph> instance that you can further customize; the difference between them is how the instance is initialized before it is returned to your application.</source>
          <target state="translated">这些方法均提供<ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph>实例中可进一步自定义; 它们之间的区别是如何，该实例已初始化之前它将返回到你的应用程序。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebProxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy.%23ctor%2A&gt;</ph> constructor returns an instance of the <ph id="ph2">&lt;xref:System.Net.WebProxy&gt;</ph> class with the <ph id="ph3">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph> property set to <ph id="ph4">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy.%23ctor%2A&gt;</ph>构造函数将返回的实例<ph id="ph2">&lt;xref:System.Net.WebProxy&gt;</ph>类，该类具有<ph id="ph3">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph>属性设置为<ph id="ph4">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebProxy">
          <source>When a request uses a <ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph> instance in this state, no proxy is used to send the request.</source>
          <target state="translated">当请求使用<ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph>中此状态下，没有代理实例用于发送请求。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebProxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy.GetDefaultProxy%2A&gt;</ph> method returns an instance of the <ph id="ph2">&lt;xref:System.Net.WebProxy&gt;</ph> class with the <ph id="ph3">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph> properties set to the values used by Internet Explorer 5.5 and later.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy.GetDefaultProxy%2A&gt;</ph>方法返回的实例<ph id="ph2">&lt;xref:System.Net.WebProxy&gt;</ph>类，该类具有<ph id="ph3">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph>，和<ph id="ph5">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph>属性设置为使用由 Internet Explorer 5.5 和更高版本的值。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebProxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.GlobalProxySelection.Select%2A&gt;</ph> method returns an instance of the <ph id="ph2">&lt;xref:System.Net.WebProxy&gt;</ph> class with it properties set according to a combination of Internet Explorer and configuration file settings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.GlobalProxySelection.Select%2A&gt;</ph>方法返回的实例<ph id="ph2">&lt;xref:System.Net.WebProxy&gt;</ph>与其类根据 Internet Explorer 和配置文件设置的组合进行设置的属性。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebProxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph> class supports automatic detection and execution of proxy configuration scripts.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph>类支持自动检测和执行的代理配置脚本。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebProxy">
          <source>This feature is also known as Web Proxy Auto-Discovery (WPAD).</source>
          <target state="translated">此功能也称为 Web 代理自动发现 (WPAD)。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebProxy">
          <source>When using automatic proxy configuration, a configuration script, typically named Wpad.dat, must be located, downloaded, compiled, and run.</source>
          <target state="translated">使用自动代理配置时，通常名为 Wpad.dat，配置脚本，必须是位于、 下载、 编译，并运行。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebProxy">
          <source>If these operations are successful, the script returns the proxies that can be used for a request.</source>
          <target state="translated">如果上述操作成功，此脚本将返回可用于请求的代理。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebProxy">
          <source>The following code example assigns a <ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph> instance to a <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> instance.</source>
          <target state="translated">下面的代码示例分配<ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph>到实例<ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebProxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> instance uses the proxy to connect to external Internet resources.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph>实例使用代理连接到外部 Internet 资源。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebProxy">
          <source>(For an example that demonstrates using the WPAD feature, see the documentation for the <ph id="ph1">&lt;xref:System.Net.IWebProxyScript&gt;</ph> class.)</source>
          <target state="translated">(有关示例，演示如何使用 WPAD 功能，请参阅的文档<ph id="ph1">&lt;xref:System.Net.IWebProxyScript&gt;</ph>类。)</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.Net.WebProxy">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor">
          <source>Initializes an empty instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> 类的空实例。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.#ctor">
          <source>The default constructor initializes an empty instance of the <ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph> class with the <ph id="ph2">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph> property set to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">默认构造函数初始化的空实例<ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph>类，该类具有<ph id="ph2">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph>属性设置为<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.#ctor">
          <source>When the <ph id="ph1">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph> property is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Net.WebProxy.IsBypassed%2A&gt;</ph> method returns <ph id="ph4">`true`</ph> and the <ph id="ph5">&lt;xref:System.Net.WebProxy.GetProxy%2A&gt;</ph> method returns the destination address.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph>属性是<ph id="ph2">`null`</ph>、<ph id="ph3">&lt;xref:System.Net.WebProxy.IsBypassed%2A&gt;</ph>方法返回<ph id="ph4">`true`</ph>和<ph id="ph5">&lt;xref:System.Net.WebProxy.GetProxy%2A&gt;</ph>方法返回的目标地址。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.#ctor">
          <source>The following code example demonstrates calling this constructor.</source>
          <target state="translated">下面的代码示例演示如何调用此构造函数。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.String)">
          <source>The URI of the proxy server.</source>
          <target state="translated">代理服务器的 URI。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> class with the specified URI.</source>
          <target state="translated">用指定的 URI 初始化 <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph> instance is initialized with the <ph id="ph2">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph> property set to a <ph id="ph3">&lt;xref:System.Uri&gt;</ph> instance containing <ph id="ph4">`Address`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph>实例已初始化与<ph id="ph2">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph>属性设置为<ph id="ph3">&lt;xref:System.Uri&gt;</ph>实例包含<ph id="ph4">`Address`</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.#ctor(System.String)">
          <source>The following code example demonstrates calling this constructor.</source>
          <target state="translated">下面的代码示例演示如何调用此构造函数。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="Address" /&gt;</ph> is an invalid URI.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Address" /&gt;</ph> 是无效的 URI。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.Uri)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance that contains the address of the proxy server.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 实例，它包含代理服务器的地址。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.Uri)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> class from the specified <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> instance.</source>
          <target state="translated">从指定的 <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> 实例中初始化 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.#ctor(System.Uri)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph> instance is initialized with the <ph id="ph2">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph> property set to the <ph id="ph3">`Address`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph>实例已初始化与<ph id="ph2">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph>属性设置为<ph id="ph3">`Address`</ph>参数。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.#ctor(System.Uri)">
          <source>The following code example demonstrates calling this constructor.</source>
          <target state="translated">下面的代码示例演示如何调用此构造函数。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The serialization data.</source>
          <target state="translated">序列化数据。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The context for the serialized data.</source>
          <target state="translated">序列化数据的上下文。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes an instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> class using previously serialized content.</source>
          <target state="translated">使用以前序列化的内容初始化 <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> 类的实例。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This method is called by the system to deserialize a <ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph> instance; applications do not call it.</source>
          <target state="translated">此方法由系统进行反序列化<ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph>实例; 不调用它的应用程序执行。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.String,System.Boolean)">
          <source>The URI of the proxy server.</source>
          <target state="translated">代理服务器的 URI。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to bypass the proxy for local addresses; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果对本地地址跳过代理，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则，为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> class with the specified URI and bypass setting.</source>
          <target state="translated">使用指定的 URI 和回避设置初始化 <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.#ctor(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph> instance is initialized with the <ph id="ph2">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph> property set to a <ph id="ph3">&lt;xref:System.Uri&gt;</ph> instance that contains <ph id="ph4">`Address`</ph> and the <ph id="ph5">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph> property set to <ph id="ph6">`BypassOnLocal`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph>实例已初始化与<ph id="ph2">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph>属性设置为<ph id="ph3">&lt;xref:System.Uri&gt;</ph>实例，其中包含<ph id="ph4">`Address`</ph>和<ph id="ph5">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph>属性设置为<ph id="ph6">`BypassOnLocal`</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.#ctor(System.String,System.Boolean)">
          <source>The following code example demonstrates calling this constructor.</source>
          <target state="translated">下面的代码示例演示如何调用此构造函数。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="Address" /&gt;</ph> is an invalid URI.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Address" /&gt;</ph> 是无效的 URI。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.String,System.Int32)">
          <source>The name of the proxy host.</source>
          <target state="translated">代理主机的名称。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.String,System.Int32)">
          <source>The port number on <bpt id="p1">&lt;c&gt;</bpt>Host<ept id="p1">&lt;/c&gt;</ept> to use.</source>
          <target state="translated">要使用的 <bpt id="p1">&lt;c&gt;</bpt>Host<ept id="p1">&lt;/c&gt;</ept> 上的端口号。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> class with the specified host and port number.</source>
          <target state="translated">使用指定的主机和端口号初始化 <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.#ctor(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph> instance is initialized with the <ph id="ph2">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph> property set to a <ph id="ph3">&lt;xref:System.Uri&gt;</ph> instance of the form http:// <ph id="ph4">`Host`</ph> : <ph id="ph5">`Port`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph>实例已初始化与<ph id="ph2">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph>属性设置为<ph id="ph3">&lt;xref:System.Uri&gt;</ph>实例窗体 http:// <ph id="ph4">`Host`</ph> : <ph id="ph5">`Port`</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.#ctor(System.String,System.Int32)">
          <source>The following code example demonstrates calling this constructor.</source>
          <target state="translated">下面的代码示例演示如何调用此构造函数。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.String,System.Int32)">
          <source>The URI formed by combining <ph id="ph1">&lt;paramref name="Host" /&gt;</ph> and <ph id="ph2">&lt;paramref name="Port" /&gt;</ph> is not a valid URI.</source>
          <target state="translated">通过组合 <ph id="ph1">&lt;paramref name="Host" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="Port" /&gt;</ph> 构成的 URI 不是有效的 URI。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance that contains the address of the proxy server.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 实例，它包含代理服务器的地址。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to bypass the proxy for local addresses; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果对本地地址跳过代理，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则，为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> class with the <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> instance and bypass setting.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> 实例和回避设置初始化 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph> instance is initialized with the <ph id="ph2">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph> property set to <ph id="ph3">`Address`</ph> and with the <ph id="ph4">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph> property set to <ph id="ph5">`BypassOnLocal`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph>实例已初始化与<ph id="ph2">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph>属性设置为<ph id="ph3">`Address`</ph>与<ph id="ph4">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph>属性设置为<ph id="ph5">`BypassOnLocal`</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean)">
          <source>The following code example demonstrates calling this constructor.</source>
          <target state="translated">下面的代码示例演示如何调用此构造函数。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])">
          <source>The URI of the proxy server.</source>
          <target state="translated">代理服务器的 URI。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to bypass the proxy for local addresses; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果对本地地址跳过代理，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则，为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])">
          <source>An array of regular expression strings that contain the URIs of the servers to bypass.</source>
          <target state="translated">一个正则表达式字符串数组，它包含要跳过的服务器的 URI。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> class with the specified URI, bypass setting, and list of URIs to bypass.</source>
          <target state="translated">使用指定的 URI、回避设置和要回避的 URI 列表初始化 <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph> instance is initialized with the <ph id="ph2">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph> property set to a <ph id="ph3">&lt;xref:System.Uri&gt;</ph> instance that contains <ph id="ph4">`Address`</ph>, the <ph id="ph5">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph> property set to <ph id="ph6">`BypassOnLocal`</ph>, and the <ph id="ph7">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph> property set to <ph id="ph8">`BypassList`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph>实例已初始化与<ph id="ph2">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph>属性设置为<ph id="ph3">&lt;xref:System.Uri&gt;</ph>实例，其中包含<ph id="ph4">`Address`</ph>、<ph id="ph5">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph>属性设置为<ph id="ph6">`BypassOnLocal`</ph>，和<ph id="ph7">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph>属性设置为<ph id="ph8">`BypassList`</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])">
          <source>The following code example demonstrates calling this constructor.</source>
          <target state="translated">下面的代码示例演示如何调用此构造函数。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])">
          <source><ph id="ph1">&lt;paramref name="Address" /&gt;</ph> is an invalid URI.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Address" /&gt;</ph> 是无效的 URI。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance that contains the address of the proxy server.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 实例，它包含代理服务器的地址。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to bypass the proxy for local addresses; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果对本地地址跳过代理，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则，为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])">
          <source>An array of regular expression strings that contains the URIs of the servers to bypass.</source>
          <target state="translated">一个正则表达式字符串数组，它包含要跳过的服务器的 URI。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> instance, bypass setting, and list of URIs to bypass.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> 实例、回避设置和要回避的 URI 列表初始化 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph> instance is initialized with the <ph id="ph2">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph> property set to <ph id="ph3">`Address`</ph>, the <ph id="ph4">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph> property set to <ph id="ph5">`BypassOnLocal`</ph>, and the <ph id="ph6">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph> property set to <ph id="ph7">`BypassList`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph>实例已初始化与<ph id="ph2">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph>属性设置为<ph id="ph3">`Address`</ph>、<ph id="ph4">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph>属性设置为<ph id="ph5">`BypassOnLocal`</ph>，和<ph id="ph6">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph>属性设置为<ph id="ph7">`BypassList`</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])">
          <source>The following code example demonstrates calling this constructor.</source>
          <target state="translated">下面的代码示例演示如何调用此构造函数。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)">
          <source>The URI of the proxy server.</source>
          <target state="translated">代理服务器的 URI。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to bypass the proxy for local addresses; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果对本地地址跳过代理，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则，为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)">
          <source>An array of regular expression strings that contains the URIs of the servers to bypass.</source>
          <target state="translated">一个正则表达式字符串数组，它包含要跳过的服务器的 URI。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.ICredentials" /&gt;</ph> instance to submit to the proxy server for authentication.</source>
          <target state="translated">要提交给代理服务器进行身份验证的 <ph id="ph1">&lt;see cref="T:System.Net.ICredentials" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> class with the specified URI, bypass setting, list of URIs to bypass, and credentials.</source>
          <target state="translated">使用指定的 URI、回避设置、要回避的 URI 列表和凭据初始化 <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph> instance is initialized with the <ph id="ph2">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph> property set to a <ph id="ph3">&lt;xref:System.Uri&gt;</ph> instance that contains <ph id="ph4">`Address`</ph>, the <ph id="ph5">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph> property set to <ph id="ph6">`BypassOnLocal`</ph>, the <ph id="ph7">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph> property set to <ph id="ph8">`BypassList`</ph>, and the <ph id="ph9">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph> property set to <ph id="ph10">`Credentials`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph>实例已初始化与<ph id="ph2">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph>属性设置为<ph id="ph3">&lt;xref:System.Uri&gt;</ph>实例，其中包含<ph id="ph4">`Address`</ph>、<ph id="ph5">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph>属性设置为<ph id="ph6">`BypassOnLocal`</ph>、<ph id="ph7">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph>属性设置为<ph id="ph8">`BypassList`</ph>，和<ph id="ph9">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph>属性设置为<ph id="ph10">`Credentials`</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)">
          <source>The following code example demonstrates calling this constructor.</source>
          <target state="translated">下面的代码示例演示如何调用此构造函数。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)">
          <source><ph id="ph1">&lt;paramref name="Address" /&gt;</ph> is an invalid URI.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Address" /&gt;</ph> 是无效的 URI。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance that contains the address of the proxy server.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 实例，它包含代理服务器的地址。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to bypass the proxy for local addresses; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果对本地地址跳过代理，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则，为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)">
          <source>An array of regular expression strings that contains the URIs of the servers to bypass.</source>
          <target state="translated">一个正则表达式字符串数组，它包含要跳过的服务器的 URI。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.ICredentials" /&gt;</ph> instance to submit to the proxy server for authentication.</source>
          <target state="translated">要提交给代理服务器进行身份验证的 <ph id="ph1">&lt;see cref="T:System.Net.ICredentials" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> instance, bypass setting, list of URIs to bypass, and credentials.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> 实例、回避设置、要回避的 URI 列表和凭据初始化 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph> instance is initialized with the <ph id="ph2">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph> property set to <ph id="ph3">`Address`</ph>, the <ph id="ph4">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph> property set to <ph id="ph5">`BypassOnLocal`</ph>, the <ph id="ph6">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph> property set to <ph id="ph7">`BypassList`</ph>, and the <ph id="ph8">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph> property set to <ph id="ph9">`Credentials`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph>实例已初始化与<ph id="ph2">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph>属性设置为<ph id="ph3">`Address`</ph>、<ph id="ph4">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph>属性设置为<ph id="ph5">`BypassOnLocal`</ph>、<ph id="ph6">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph>属性设置为<ph id="ph7">`BypassList`</ph>，和<ph id="ph8">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph>属性设置为<ph id="ph9">`Credentials`</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)">
          <source>The following code example demonstrates calling this constructor.</source>
          <target state="translated">下面的代码示例演示如何调用此构造函数。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Net.WebProxy.Address">
          <source>Gets or sets the address of the proxy server.</source>
          <target state="translated">获取或设置代理服务器的地址。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.Address">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance that contains the address of the proxy server.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 实例，它包含代理服务器的地址。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.Address">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph> property contains the address of the proxy server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph>属性包含代理服务器的地址。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.Address">
          <source>When automatic proxy detection is not enabled, and no automatic configuration script is specified, the <ph id="ph1">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph> determine the proxy used for a request.</source>
          <target state="translated">当未启用自动代理检测，并指定了任何自动配置脚本，<ph id="ph1">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph>属性和<ph id="ph2">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph>确定用于请求的代理。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.Address">
          <source>When the <ph id="ph1">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph> property is <ph id="ph2">`null`</ph>, requests bypass the proxy and connect directly to the destination host.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph>属性是<ph id="ph2">`null`</ph>，请求不使用代理服务器和直接连接到目标主机。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.Address">
          <source>The following code example displays the properties of a <ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph> object, including its <ph id="ph2">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph>.</source>
          <target state="translated">下面的代码示例显示的属性<ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph>对象，包括其<ph id="ph2">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Net.WebProxy.BypassArrayList">
          <source>Gets a list of addresses that do not use the proxy server.</source>
          <target state="translated">获取不使用代理服务器的地址列表。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.BypassArrayList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> that contains a list of <ph id="ph2">&lt;see cref="P:System.Net.WebProxy.BypassList" /&gt;</ph> arrays that represents URIs that do not use the proxy server when accessed.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>，其中包含表示 URI 的 <ph id="ph2">&lt;see cref="P:System.Net.WebProxy.BypassList" /&gt;</ph> 数组的列表，这些 URI 在被访问时不使用代理服务器。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.BypassArrayList">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph> is an array list of regular expression strings that describe the URIs that a <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> instance accesses directly instead of through the proxy server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph>是描述 Uri 的正则表达式字符串的数组列表的<ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph>实例而不是直接访问通过代理服务器。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Net.WebProxy.BypassList">
          <source>Gets or sets an array of addresses that do not use the proxy server.</source>
          <target state="translated">获取或设置一个地址数组，这些地址不使用代理服务器。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.BypassList">
          <source>An array that contains a list of regular expressions that describe URIs that do not use the proxy server when accessed.</source>
          <target state="translated">包含描述 URI 的正则表达式列表的数组，这些 URI 在被访问时不使用代理服务器。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.BypassList">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph> property contains an array of regular expressions that describe URIs that a <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> instance accesses directly instead of through the proxy server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph>属性包含描述 Uri 的正则表达式的数组，<ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph>实例而不是直接访问通过代理服务器。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.BypassList">
          <source>The following code example displays the properties of a <ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph> object, including its <ph id="ph2">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph> property.</source>
          <target state="translated">下面的代码示例显示的属性<ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph>对象，包括其<ph id="ph2">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.Net.WebProxy.BypassProxyOnLocal">
          <source>Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</source>
          <target state="translated">获取或设置一个值，该值指示是否对本地地址不使用代理服务器。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.BypassProxyOnLocal">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to bypass the proxy server for local addresses; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果对本地地址不使用代理服务器，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.BypassProxyOnLocal">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.BypassProxyOnLocal">
          <source>The setting of the <ph id="ph1">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph> property determines whether <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> instances use the proxy server when accessing local Internet resources.</source>
          <target state="translated">设置<ph id="ph1">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph>属性确定是否<ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph>实例访问本地 Internet 资源时使用代理服务器。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.BypassProxyOnLocal">
          <source>If <ph id="ph1">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph> is <ph id="ph2">`true`</ph>, requests to local Internet resources do not use the proxy server.</source>
          <target state="translated">如果 <ph id="ph1">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph> 为 <ph id="ph2">`true`</ph>，则对本地 Internet 资源的请求不使用代理服务器。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.BypassProxyOnLocal">
          <source>Local requests are identified by the lack of a period (.) in the URI, as in <ph id="ph1">http://webserver/</ph>, or access the local server, including <ph id="ph2">http://localhost</ph>, <ph id="ph3">http://loopback</ph>, or <ph id="ph4">http://127.0.0.1</ph>.</source>
          <target state="translated">本地请求由句点 （.） 在 URI 中，在缺乏作为 in <ph id="ph1">http://webserver/</ph>，或访问本地服务器，包括<ph id="ph2">http://localhost</ph>， <ph id="ph3">http://loopback</ph>，或<ph id="ph4">http://127.0.0.1</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.BypassProxyOnLocal">
          <source>When <ph id="ph1">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph> is <ph id="ph2">`false`</ph>, all Internet requests are made through the proxy server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph> 为 <ph id="ph2">`false`</ph> 时，所有 Internet 请求都通过代理服务器进行。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.BypassProxyOnLocal">
          <source>Requests to a local host with a URI that contain a period use the proxy.</source>
          <target state="translated">包含一段时间到具有 URI 的本地主机请求使用代理服务器。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.BypassProxyOnLocal">
          <source>To avoid using a proxy in these cases, create an entry for the host in the <ph id="ph1">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph>.</source>
          <target state="translated">若要避免使用代理在这些情况下，创建一个条目中为主机<ph id="ph1">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.BypassProxyOnLocal">
          <source>The following code example demonstrates calling a constructor that sets this property and getting the value of this property.</source>
          <target state="translated">下面的代码示例演示调用设置此属性的构造函数以及获取此属性的值。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.Net.WebProxy.Credentials">
          <source>Gets or sets the credentials to submit to the proxy server for authentication.</source>
          <target state="translated">获取或设置要提交到代理服务器进行身份验证的凭据。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.Credentials">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.ICredentials" /&gt;</ph> instance that contains the credentials to submit to the proxy server for authentication.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Net.ICredentials" /&gt;</ph> 实例，它包含要提交给代理服务器进行身份验证的凭据。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph> property contains the authentication credentials to send to the proxy server in response to an HTTP 407 (proxy authorization) status code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph>属性包含要发送到为 HTTP 407 （代理授权） 状态代码的响应中的代理服务器的身份验证凭据。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.Credentials">
          <source>In most client scenarios, you should use the <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>, which are the credentials of the currently logged on user.</source>
          <target state="translated">在大多数客户端方案，应使用<ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>，这是当前登录用户的凭据。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.Credentials">
          <source>To do this, set the <ph id="ph1">&lt;xref:System.Net.WebProxy.UseDefaultCredentials%2A&gt;</ph> property to <ph id="ph2">`true`</ph> instead of setting this property.</source>
          <target state="translated">若要执行此操作，将设置<ph id="ph1">&lt;xref:System.Net.WebProxy.UseDefaultCredentials%2A&gt;</ph>属性<ph id="ph2">`true`</ph>而不是设置此属性。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.Credentials">
          <source>If you set the <ph id="ph1">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph> property to credentials other than the <ph id="ph2">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>, setting the <ph id="ph3">&lt;xref:System.Net.WebProxy.UseDefaultCredentials%2A&gt;</ph> property to <ph id="ph4">`true`</ph> causes a <ph id="ph5">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">如果你设置<ph id="ph1">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph>属性以外的其他凭据<ph id="ph2">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>，则设置<ph id="ph3">&lt;xref:System.Net.WebProxy.UseDefaultCredentials%2A&gt;</ph>属性<ph id="ph4">`true`</ph>导致<ph id="ph5">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.Credentials">
          <source>To prevent this, you must set the <ph id="ph1">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph> property to <ph id="ph2">`null`</ph> before setting the <ph id="ph3">&lt;xref:System.Net.WebProxy.UseDefaultCredentials%2A&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">若要防止此情况，必须设置<ph id="ph1">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph>属性<ph id="ph2">`null`</ph>之前设置<ph id="ph3">&lt;xref:System.Net.WebProxy.UseDefaultCredentials%2A&gt;</ph>属性<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.Credentials">
          <source>Likewise, you cannot set this property to any value when <ph id="ph1">&lt;xref:System.Net.WebProxy.UseDefaultCredentials%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">同样，不能将此属性设置为任何值时<ph id="ph1">&lt;xref:System.Net.WebProxy.UseDefaultCredentials%2A&gt;</ph>是<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="P:System.Net.WebProxy.Credentials">
          <source>You attempted to set this property when the <ph id="ph1">&lt;see cref="P:System.Net.WebProxy.UseDefaultCredentials" /&gt;</ph> property was set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Net.WebProxy.UseDefaultCredentials" /&gt;</ph> 属性设置为 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 后，尝试设置此属性。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.GetDefaultProxy">
          <source>Reads the Internet Explorer nondynamic proxy settings.</source>
          <target state="translated">读取 Internet Explorer 非动态代理设置。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.GetDefaultProxy">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> instance that contains the nondynamic proxy settings from Internet Explorer 5.5 and later.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> 实例，它包含 Internet Explorer 5.5 及更高版本中的非动态代理设置。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.GetDefaultProxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy.GetDefaultProxy%2A&gt;</ph> method reads the nondynamic proxy settings stored by Internet Explorer 5.5 and later, and creates a <ph id="ph2">&lt;xref:System.Net.WebProxy&gt;</ph> instance with those settings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy.GetDefaultProxy%2A&gt;</ph>方法读取由 Internet Explorer 5.5 和更高版本，存储的非动态代理设置，并创建<ph id="ph2">&lt;xref:System.Net.WebProxy&gt;</ph>用这些设置的实例。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.GetDefaultProxy">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy.GetDefaultProxy%2A&gt;</ph> method does not pick up any dynamic settings that are generated from scripts run by Internet Explorer, from automatic configuration entries, or from DHCP or DNS lookups.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy.GetDefaultProxy%2A&gt;</ph>方法没有获得从脚本运行由 Internet Explorer、 自动配置条目，或从 DHCP 或 DNS 查找生成的任何动态设置。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.GetDefaultProxy">
          <source>Applications should use the <ph id="ph1">&lt;xref:System.Net.WebRequest.DefaultWebProxy%2A?displayProperty=nameWithType&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Net.WebRequest.GetSystemWebProxy%2A?displayProperty=nameWithType&gt;</ph> method instead of the <ph id="ph3">&lt;xref:System.Net.WebProxy.GetDefaultProxy%2A&gt;</ph> method.</source>
          <target state="translated">应用程序应使用<ph id="ph1">&lt;xref:System.Net.WebRequest.DefaultWebProxy%2A?displayProperty=nameWithType&gt;</ph>属性和<ph id="ph2">&lt;xref:System.Net.WebRequest.GetSystemWebProxy%2A?displayProperty=nameWithType&gt;</ph>方法而不是<ph id="ph3">&lt;xref:System.Net.WebProxy.GetDefaultProxy%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.GetDefaultProxy">
          <source>The following code example demonstrates calling this method.</source>
          <target state="translated">下面的代码示例演示如何调用此方法。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.GetDefaultProxy">
          <source>for unrestricted access to network resources.</source>
          <target state="translated">无限制地访问网络资源。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.GetDefaultProxy">
          <source>Associated Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> to populate with data.</source>
          <target state="translated">要填充数据的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that specifies the destination for this serialization.</source>
          <target state="translated">用于指定该序列化的目标的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> with the data that is needed to serialize the target object.</source>
          <target state="translated">使用序列化目标对象所需的数据填充 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Any objects included in the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> are automatically tracked and serialized by the formatter.</source>
          <target state="translated">中包含的任何对象<ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>会自动跟踪和序列化格式化程序。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.GetProxy(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance of the requested Internet resource.</source>
          <target state="translated">所请求 Internet 资源的 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.GetProxy(System.Uri)">
          <source>Returns the proxied URI for a request.</source>
          <target state="translated">返回请求的已代理 URI。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.GetProxy(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance of the Internet resource, if the resource is on the bypass list; otherwise, the <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> instance of the proxy.</source>
          <target state="translated">如果资源在回避列表上，则为 Internet 资源的 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 实例；否则为代理的 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.GetProxy(System.Uri)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy.GetProxy%2A&gt;</ph> method returns the URI that the <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> instance uses to access the Internet resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy.GetProxy%2A&gt;</ph>方法返回的 URI<ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph>实例用于访问 Internet 资源。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.GetProxy(System.Uri)">
          <source><ph id="ph1">&lt;xref:System.Net.WebProxy.GetProxy%2A&gt;</ph> compares <ph id="ph2">`destination`</ph> with the contents of <ph id="ph3">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph>, using the <ph id="ph4">&lt;xref:System.Net.WebProxy.IsBypassed%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy.GetProxy%2A&gt;</ph> 比较<ph id="ph2">`destination`</ph>的内容<ph id="ph3">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph>，使用<ph id="ph4">&lt;xref:System.Net.WebProxy.IsBypassed%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.GetProxy(System.Uri)">
          <source>If <ph id="ph1">&lt;xref:System.Net.WebProxy.IsBypassed%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Net.WebProxy.GetProxy%2A&gt;</ph> returns <ph id="ph4">`destination`</ph> and the <ph id="ph5">&lt;xref:System.Net.WebRequest&gt;</ph> instance does not use the proxy server.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.WebProxy.IsBypassed%2A&gt;</ph>返回<ph id="ph2">`true`</ph>，<ph id="ph3">&lt;xref:System.Net.WebProxy.GetProxy%2A&gt;</ph>返回<ph id="ph4">`destination`</ph>和<ph id="ph5">&lt;xref:System.Net.WebRequest&gt;</ph>实例不使用代理服务器。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.GetProxy(System.Uri)">
          <source>If <ph id="ph1">`destination`</ph> is not in <ph id="ph2">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph>, the <ph id="ph3">&lt;xref:System.Net.WebRequest&gt;</ph> instance uses the proxy server and the <ph id="ph4">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph> property is returned.</source>
          <target state="translated">如果<ph id="ph1">`destination`</ph>不在<ph id="ph2">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph>、<ph id="ph3">&lt;xref:System.Net.WebRequest&gt;</ph>实例使用代理服务器和<ph id="ph4">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph>返回属性。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.GetProxy(System.Uri)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph> object and calls this method to get the proxy that is selected for a resource.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph>对象，然后调用此方法以获取资源的选择的代理。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.GetProxy(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="destination" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destination" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.IsBypassed(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance of the host to check for proxy use.</source>
          <target state="translated">要检查代理使用情况的主机的 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.IsBypassed(System.Uri)">
          <source>Indicates whether to use the proxy server for the specified host.</source>
          <target state="translated">指示是否对指定的主机使用代理服务器。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.IsBypassed(System.Uri)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the proxy server should not be used for <ph id="ph2">&lt;paramref name="host" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果代理服务器不应用于 <ph id="ph2">&lt;paramref name="host" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则，为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.IsBypassed(System.Uri)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy.IsBypassed%2A&gt;</ph> method is used to determine whether to bypass the proxy server when accessing an Internet resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy.IsBypassed%2A&gt;</ph>方法用于确定是否不使用代理服务器访问 Internet 资源时。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.IsBypassed(System.Uri)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph> properties control the return value of the <ph id="ph3">&lt;xref:System.Net.WebProxy.IsBypassed%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph>属性控制的返回值<ph id="ph3">&lt;xref:System.Net.WebProxy.IsBypassed%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.IsBypassed(System.Uri)">
          <source><ph id="ph1">&lt;xref:System.Net.WebProxy.IsBypassed%2A&gt;</ph> returns <ph id="ph2">`true`</ph> under any of the following conditions:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy.IsBypassed%2A&gt;</ph> 返回<ph id="ph2">`true`</ph>任何以下条件下：</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.IsBypassed(System.Uri)">
          <source>If <ph id="ph1">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph> is <ph id="ph2">`true`</ph> and <ph id="ph3">`host`</ph> is a local URI.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.WebProxy.BypassProxyOnLocal%2A&gt;</ph>是<ph id="ph2">`true`</ph>和<ph id="ph3">`host`</ph>是本地的 URI。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.IsBypassed(System.Uri)">
          <source>Local requests are identified by the lack of a period (.) in the URI, as in "<ph id="ph1">http://webserver/</ph>".</source>
          <target state="translated">本地请求标识通过省略句点 （.） 在 URI 中，如"<ph id="ph1">http://webserver/</ph>"。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.IsBypassed(System.Uri)">
          <source>If <ph id="ph1">`host`</ph> matches a regular expression in <ph id="ph2">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`host`</ph>与正则表达式中的匹配<ph id="ph2">&lt;xref:System.Net.WebProxy.BypassList%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.IsBypassed(System.Uri)">
          <source>If <ph id="ph1">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;xref:System.Net.WebProxy.Address%2A&gt;</ph> 为 <ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.IsBypassed(System.Uri)">
          <source>All other conditions return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">所有其他情况返回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.IsBypassed(System.Uri)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph> object and calls this method to check whether the bypass list is properly set.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Net.WebProxy&gt;</ph>对象，然后调用此方法来检查是否已正确设置跳过列表。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.IsBypassed(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="host" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="host" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object to populate with data.</source>
          <target state="translated">要填充数据的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> structure that indicates the destination for this serialization.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 结构，指定该序列化的目标。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Creates the serialization data and context that are used by the system to serialize a <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> object.</source>
          <target state="translated">创建系统序列化 <ph id="ph1">&lt;see cref="T:System.Net.WebProxy" /&gt;</ph> 对象时所使用的序列化数据和上下文。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The system calls this method to serialize an object; applications do not call it directly.</source>
          <target state="translated">系统调用此方法以序列化的对象;应用程序不直接调用它。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="P:System.Net.WebProxy.UseDefaultCredentials">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that controls whether the <ph id="ph2">&lt;see cref="P:System.Net.CredentialCache.DefaultCredentials" /&gt;</ph> are sent with requests.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值，该值控制 <ph id="ph2">&lt;see cref="P:System.Net.CredentialCache.DefaultCredentials" /&gt;</ph> 是否随请求一起发送。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.UseDefaultCredentials">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the default credentials are used; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果使用默认凭据，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.UseDefaultCredentials">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.UseDefaultCredentials">
          <source>Set this property to <ph id="ph1">`true`</ph> when requests made by this <ph id="ph2">&lt;xref:System.Net.WebProxy&gt;</ph> object should, if requested by the server, be authenticated using the credentials of the currently logged on user.</source>
          <target state="translated">将此属性设置为<ph id="ph1">`true`</ph>时发出的此请求<ph id="ph2">&lt;xref:System.Net.WebProxy&gt;</ph>对象，如果请求服务器进行身份验证应使用当前登录用户的凭据。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.UseDefaultCredentials">
          <source>For client applications, this is the desired behavior in most scenarios.</source>
          <target state="translated">对于客户端应用程序，这是在大多数情况下所需的行为。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.UseDefaultCredentials">
          <source>For middle tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <ph id="ph1">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph> property to the credentials of the client on whose behalf the request is made.</source>
          <target state="translated">对于中间层应用程序，例如 ASP.NET 应用程序，而不是使用此属性，通常会设置<ph id="ph1">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph>到客户端的名义发出的请求的凭据的属性。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.UseDefaultCredentials">
          <source>The following table shows the effect of setting the <ph id="ph1">&lt;xref:System.Net.WebProxy.UseDefaultCredentials%2A&gt;</ph> value, based on the value of the <ph id="ph2">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph> property.</source>
          <target state="translated">下表显示设置的效果<ph id="ph1">&lt;xref:System.Net.WebProxy.UseDefaultCredentials%2A&gt;</ph>基于的值的值<ph id="ph2">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.UseDefaultCredentials">
          <source><ph id="ph1">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph> value</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph> 值</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.UseDefaultCredentials">
          <source><ph id="ph1">&lt;xref:System.Net.WebProxy.UseDefaultCredentials%2A&gt;</ph> value</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebProxy.UseDefaultCredentials%2A&gt;</ph> 值</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.UseDefaultCredentials">
          <source>Effect</source>
          <target state="translated">效果</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.UseDefaultCredentials">
          <source>No effect.</source>
          <target state="translated">不起作用。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.UseDefaultCredentials">
          <source><ph id="ph1">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph> is set to <ph id="ph2">`null`</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph> 设置为 <ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.UseDefaultCredentials">
          <source><ph id="ph1">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph> 设置为 <ph id="ph2">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.UseDefaultCredentials">
          <source>Any value other than <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph> or <ph id="ph2">`null`</ph></source>
          <target state="translated">以外的任何值<ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>或 <ph id="ph2">`null`</ph></target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.UseDefaultCredentials">
          <source><ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph></source>
          <target state="translated"><ph id="ph1">`true`</ph> 或 <ph id="ph2">`false`</ph></target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.UseDefaultCredentials">
          <source>Setting <ph id="ph1">&lt;xref:System.Net.WebProxy.UseDefaultCredentials%2A&gt;</ph> throws an exception.</source>
          <target state="translated">设置<ph id="ph1">&lt;xref:System.Net.WebProxy.UseDefaultCredentials%2A&gt;</ph>引发异常。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.UseDefaultCredentials">
          <source>If <ph id="ph1">&lt;xref:System.Net.WebProxy.UseDefaultCredentials%2A&gt;</ph> is <ph id="ph2">`false`</ph>, you can change the <ph id="ph3">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph> property to any credentials.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.WebProxy.UseDefaultCredentials%2A&gt;</ph>是<ph id="ph2">`false`</ph>，你可以更改<ph id="ph3">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph>为任何凭据的属性。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebProxy.UseDefaultCredentials">
          <source>If <ph id="ph1">&lt;xref:System.Net.WebProxy.UseDefaultCredentials%2A&gt;</ph> is <ph id="ph2">`true`</ph>, changing the <ph id="ph3">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph> property from <ph id="ph4">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph> (the value that is set when the <ph id="ph5">&lt;xref:System.Net.WebProxy.UseDefaultCredentials%2A&gt;</ph> property is set to <ph id="ph6">`true`</ph>) will throw an exception.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.WebProxy.UseDefaultCredentials%2A&gt;</ph>是<ph id="ph2">`true`</ph>、 变化<ph id="ph3">&lt;xref:System.Net.WebProxy.Credentials%2A&gt;</ph>属性从<ph id="ph4">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>(时设置的值<ph id="ph5">&lt;xref:System.Net.WebProxy.UseDefaultCredentials%2A&gt;</ph>属性设置为<ph id="ph6">`true`</ph>) 将引发异常。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="P:System.Net.WebProxy.UseDefaultCredentials">
          <source>You attempted to set this property when the <ph id="ph1">&lt;see cref="P:System.Net.WebProxy.Credentials" /&gt;</ph> property contains credentials other than the default credentials.</source>
          <target state="translated">当 <ph id="ph1">&lt;see cref="P:System.Net.WebProxy.Credentials" /&gt;</ph> 属性包含默认凭据以外的凭据时，尝试设置此属性。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>