<Type Name="WebProxy" FullName="System.Net.WebProxy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5d09382b472e9a9b24e76b3d1c99fe0dc54bbe22" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48645048" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebProxy : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WebProxy extends System.Object implements class System.Net.IWebProxy, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebProxy" />
  <TypeSignature Language="VB.NET" Value="Public Class WebProxy&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebProxy : System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type WebProxy = class&#xA;    interface ISerializable&#xA;    interface IWebProxy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.WebProxy</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a4020-101">包含 <see cref="T:System.Net.WebRequest" /> 类的 HTTP 代理设置。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a4020-101">Contains HTTP proxy settings for the <see cref="T:System.Net.WebRequest" /> class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-102"><xref:System.Net.WebProxy>类包含的代理设置的<xref:System.Net.WebRequest>实例都使用以确定是否使用 Web 代理来发送请求。</span><span class="sxs-lookup"><span data-stu-id="a4020-102">The <xref:System.Net.WebProxy> class contains the proxy settings that <xref:System.Net.WebRequest> instances use to determine whether a Web proxy is used to send requests.</span></span> <span data-ttu-id="a4020-103">全局 Web 代理设置可以指定在计算机和应用程序配置文件和应用程序可以使用的实例<xref:System.Net.WebProxy>类自定义 Web 代理使用。</span><span class="sxs-lookup"><span data-stu-id="a4020-103">Global Web proxy settings can be specified in machine and application configuration files, and applications can use instances of the <xref:System.Net.WebProxy> class to customize Web proxy use.</span></span> <span data-ttu-id="a4020-104"><xref:System.Net.WebProxy>类是基实现<xref:System.Net.IWebProxy>接口。</span><span class="sxs-lookup"><span data-stu-id="a4020-104">The <xref:System.Net.WebProxy> class is the base implementation of the <xref:System.Net.IWebProxy> interface.</span></span>  
  
 <span data-ttu-id="a4020-105">若要获取 Web 代理类的实例，可以使用任何以下方法：</span><span class="sxs-lookup"><span data-stu-id="a4020-105">To obtain instances of the Web proxy class, you can use any of the following methods:</span></span>  
  
-   <span data-ttu-id="a4020-106"><xref:System.Net.WebProxy.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="a4020-106">The <xref:System.Net.WebProxy.%23ctor%2A> constructor.</span></span>  
  
-   <span data-ttu-id="a4020-107"><xref:System.Net.WebProxy.GetDefaultProxy%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a4020-107">The <xref:System.Net.WebProxy.GetDefaultProxy%2A> method.</span></span>  
  
-   <span data-ttu-id="a4020-108"><xref:System.Net.GlobalProxySelection.Select%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a4020-108">The <xref:System.Net.GlobalProxySelection.Select%2A> method.</span></span>  
  
 <span data-ttu-id="a4020-109">每个这些方法提供<xref:System.Net.WebProxy>实例可进一步自定义; 它们之间的区别是如何，该实例已初始化之前它将返回到你的应用程序。</span><span class="sxs-lookup"><span data-stu-id="a4020-109">These methods each supply a <xref:System.Net.WebProxy> instance that you can further customize; the difference between them is how the instance is initialized before it is returned to your application.</span></span> <span data-ttu-id="a4020-110"><xref:System.Net.WebProxy.%23ctor%2A>构造函数将返回的实例<xref:System.Net.WebProxy>类与<xref:System.Net.WebProxy.Address%2A>属性设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="a4020-110">The <xref:System.Net.WebProxy.%23ctor%2A> constructor returns an instance of the <xref:System.Net.WebProxy> class with the <xref:System.Net.WebProxy.Address%2A> property set to `null`.</span></span> <span data-ttu-id="a4020-111">当请求使用<xref:System.Net.WebProxy>中此状态下，任何代理的实例用于发送请求。</span><span class="sxs-lookup"><span data-stu-id="a4020-111">When a request uses a <xref:System.Net.WebProxy> instance in this state, no proxy is used to send the request.</span></span>  
  
 <span data-ttu-id="a4020-112"><xref:System.Net.WebProxy.GetDefaultProxy%2A>方法返回的实例<xref:System.Net.WebProxy>类与<xref:System.Net.WebProxy.Address%2A>， <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>，和<xref:System.Net.WebProxy.BypassList%2A>属性设置为使用由 Internet Explorer 5.5 及更高版本的值。</span><span class="sxs-lookup"><span data-stu-id="a4020-112">The <xref:System.Net.WebProxy.GetDefaultProxy%2A> method returns an instance of the <xref:System.Net.WebProxy> class with the <xref:System.Net.WebProxy.Address%2A>, <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>, and <xref:System.Net.WebProxy.BypassList%2A> properties set to the values used by Internet Explorer 5.5 and later.</span></span>  
  
 <span data-ttu-id="a4020-113"><xref:System.Net.GlobalProxySelection.Select%2A>方法返回的一个实例<xref:System.Net.WebProxy>与其类根据 Internet Explorer 和配置文件设置的组合进行设置的属性。</span><span class="sxs-lookup"><span data-stu-id="a4020-113">The <xref:System.Net.GlobalProxySelection.Select%2A> method returns an instance of the <xref:System.Net.WebProxy> class with it properties set according to a combination of Internet Explorer and configuration file settings.</span></span>  
  
 <span data-ttu-id="a4020-114"><xref:System.Net.WebProxy>类支持自动检测和代理配置脚本的执行。</span><span class="sxs-lookup"><span data-stu-id="a4020-114">The <xref:System.Net.WebProxy> class supports automatic detection and execution of proxy configuration scripts.</span></span> <span data-ttu-id="a4020-115">此功能也称为 Web 代理自动发现 (WPAD)。</span><span class="sxs-lookup"><span data-stu-id="a4020-115">This feature is also known as Web Proxy Auto-Discovery (WPAD).</span></span> <span data-ttu-id="a4020-116">使用自动代理配置时，通常名为 Wpad.dat 的配置脚本必须位于、 下载、 编译和运行。</span><span class="sxs-lookup"><span data-stu-id="a4020-116">When using automatic proxy configuration, a configuration script, typically named Wpad.dat, must be located, downloaded, compiled, and run.</span></span> <span data-ttu-id="a4020-117">如果这些操作都成功，此脚本将返回可用于请求的代理。</span><span class="sxs-lookup"><span data-stu-id="a4020-117">If these operations are successful, the script returns the proxies that can be used for a request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4020-118">下面的代码示例将分配<xref:System.Net.WebProxy>实例向<xref:System.Net.WebRequest>实例。</span><span class="sxs-lookup"><span data-stu-id="a4020-118">The following code example assigns a <xref:System.Net.WebProxy> instance to a <xref:System.Net.WebRequest> instance.</span></span> <span data-ttu-id="a4020-119"><xref:System.Net.WebRequest>实例使用的代理连接到外部 Internet 资源。</span><span class="sxs-lookup"><span data-stu-id="a4020-119">The <xref:System.Net.WebRequest> instance uses the proxy to connect to external Internet resources.</span></span> <span data-ttu-id="a4020-120">(有关示例，演示如何使用 WPAD 功能，请参阅的文档<xref:System.Net.IWebProxyScript>类。)</span><span class="sxs-lookup"><span data-stu-id="a4020-120">(For an example that demonstrates using the WPAD feature, see the documentation for the <xref:System.Net.IWebProxyScript> class.)</span></span>  
  
 [!code-cpp[Classic WebProxy Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebProxy Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebProxy Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebProxy Example/CS/source.cs#1)]
 [!code-vb[Classic WebProxy Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebProxy Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a4020-121">初始化 <see cref="T:System.Net.WebProxy" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-121">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4020-122">初始化 <see cref="T:System.Net.WebProxy" /> 类的空实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-122">Initializes an empty instance of the <see cref="T:System.Net.WebProxy" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-123">默认构造函数初始化的空实例<xref:System.Net.WebProxy>类的<xref:System.Net.WebProxy.Address%2A>属性设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="a4020-123">The default constructor initializes an empty instance of the <xref:System.Net.WebProxy> class with the <xref:System.Net.WebProxy.Address%2A> property set to `null`.</span></span>  
  
 <span data-ttu-id="a4020-124">当<xref:System.Net.WebProxy.Address%2A>属性是`null`，则<xref:System.Net.WebProxy.IsBypassed%2A>方法将返回`true`和<xref:System.Net.WebProxy.GetProxy%2A>方法返回的目标地址。</span><span class="sxs-lookup"><span data-stu-id="a4020-124">When the <xref:System.Net.WebProxy.Address%2A> property is `null`, the <xref:System.Net.WebProxy.IsBypassed%2A> method returns `true` and the <xref:System.Net.WebProxy.GetProxy%2A> method returns the destination address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4020-125">下面的代码示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="a4020-125">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#1)]
 [!code-csharp[NCLWebProxy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (string Address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string Address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(System::String ^ Address);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : string -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy Address" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Address">
          <span data-ttu-id="a4020-126">代理服务器的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-126">The URI of the proxy server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4020-127">用指定的 URI 初始化 <see cref="T:System.Net.WebProxy" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-127">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified URI.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-128"><xref:System.Net.WebProxy>使用初始化实例<xref:System.Net.WebProxy.Address%2A>属性设置为<xref:System.Uri>实例，包含`Address`。</span><span class="sxs-lookup"><span data-stu-id="a4020-128">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to a <xref:System.Uri> instance containing `Address`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4020-129">下面的代码示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="a4020-129">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#6)]
 [!code-csharp[NCLWebProxy#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="a4020-130">
            <paramref name="Address" /> 是无效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-130">
              <paramref name="Address" /> is an invalid URI.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (Uri Address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri Address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(Uri ^ Address);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : Uri -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy Address" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="Address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="Address">
          <span data-ttu-id="a4020-131">一个 <see cref="T:System.Uri" /> 实例，它包含代理服务器的地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-131">A <see cref="T:System.Uri" /> instance that contains the address of the proxy server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4020-132">从指定的 <see cref="T:System.Net.WebProxy" /> 实例中初始化 <see cref="T:System.Uri" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-132">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class from the specified <see cref="T:System.Uri" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-133"><xref:System.Net.WebProxy>使用初始化实例<xref:System.Net.WebProxy.Address%2A>属性设置为`Address`参数。</span><span class="sxs-lookup"><span data-stu-id="a4020-133">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to the `Address` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4020-134">下面的代码示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="a4020-134">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#2)]
 [!code-csharp[NCLWebProxy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebProxy (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebProxy(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <span data-ttu-id="a4020-135">序列化数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-135">The serialization data.</span>
          </span>
        </param>
        <param name="streamingContext">
          <span data-ttu-id="a4020-136">序列化数据的上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-136">The context for the serialized data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4020-137">使用以前序列化的内容初始化 <see cref="T:System.Net.WebProxy" /> 类的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-137">Initializes an instance of the <see cref="T:System.Net.WebProxy" /> class using previously serialized content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-138">要反序列化的系统调用此方法<xref:System.Net.WebProxy>实例; 不调用它的应用程序执行操作。</span><span class="sxs-lookup"><span data-stu-id="a4020-138">This method is called by the system to deserialize a <xref:System.Net.WebProxy> instance; applications do not call it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (string Address, bool BypassOnLocal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string Address, bool BypassOnLocal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As String, BypassOnLocal As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(System::String ^ Address, bool BypassOnLocal);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : string * bool -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (Address, BypassOnLocal)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Address" Type="System.String" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Address">
          <span data-ttu-id="a4020-139">代理服务器的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-139">The URI of the proxy server.</span>
          </span>
        </param>
        <param name="BypassOnLocal">
          <span data-ttu-id="a4020-140">如果对本地地址跳过代理，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-140">
              <see langword="true" /> to bypass the proxy for local addresses; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4020-141">使用指定的 URI 和回避设置初始化 <see cref="T:System.Net.WebProxy" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-141">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified URI and bypass setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-142"><xref:System.Net.WebProxy>使用初始化实例<xref:System.Net.WebProxy.Address%2A>属性设置为<xref:System.Uri>实例，其中包含`Address`并<xref:System.Net.WebProxy.BypassProxyOnLocal%2A>属性设置为`BypassOnLocal`。</span><span class="sxs-lookup"><span data-stu-id="a4020-142">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to a <xref:System.Uri> instance that contains `Address` and the <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> property set to `BypassOnLocal`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4020-143">下面的代码示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="a4020-143">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#7)]
 [!code-csharp[NCLWebProxy#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="a4020-144">
            <paramref name="Address" /> 是无效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-144">
              <paramref name="Address" /> is an invalid URI.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.WebProxy.BypassProxyOnLocal" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (string Host, int Port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string Host, int32 Port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Host As String, Port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(System::String ^ Host, int Port);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : string * int -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (Host, Port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Host" Type="System.String" />
        <Parameter Name="Port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Host">
          <span data-ttu-id="a4020-145">代理主机的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-145">The name of the proxy host.</span>
          </span>
        </param>
        <param name="Port">
          <span data-ttu-id="a4020-146">要使用的 <c>Host</c> 上的端口号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-146">The port number on <c>Host</c> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4020-147">使用指定的主机和端口号初始化 <see cref="T:System.Net.WebProxy" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-147">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified host and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-148"><xref:System.Net.WebProxy>使用初始化实例<xref:System.Net.WebProxy.Address%2A>属性设置为<xref:System.Uri>实例的形式为 http:// `Host` : `Port`。</span><span class="sxs-lookup"><span data-stu-id="a4020-148">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to a <xref:System.Uri> instance of the form http:// `Host` : `Port`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4020-149">下面的代码示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="a4020-149">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#5)]
 [!code-csharp[NCLWebProxy#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="a4020-150">通过组合 <paramref name="Host" /> 和 <paramref name="Port" /> 构成的 URI 不是有效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-150">The URI formed by combining <paramref name="Host" /> and <paramref name="Port" /> is not a valid URI.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (Uri Address, bool BypassOnLocal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri Address, bool BypassOnLocal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As Uri, BypassOnLocal As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(Uri ^ Address, bool BypassOnLocal);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : Uri * bool -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (Address, BypassOnLocal)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="Address" Type="System.Uri" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Address">
          <span data-ttu-id="a4020-151">一个 <see cref="T:System.Uri" /> 实例，它包含代理服务器的地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-151">A <see cref="T:System.Uri" /> instance that contains the address of the proxy server.</span>
          </span>
        </param>
        <param name="BypassOnLocal">
          <span data-ttu-id="a4020-152">如果对本地地址跳过代理，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-152">
              <see langword="true" /> to bypass the proxy for local addresses; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4020-153">使用 <see cref="T:System.Net.WebProxy" /> 实例和回避设置初始化 <see cref="T:System.Uri" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-153">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the <see cref="T:System.Uri" /> instance and bypass setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-154"><xref:System.Net.WebProxy>使用初始化实例<xref:System.Net.WebProxy.Address%2A>属性设置为`Address`且<xref:System.Net.WebProxy.BypassProxyOnLocal%2A>属性设置为`BypassOnLocal`。</span><span class="sxs-lookup"><span data-stu-id="a4020-154">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to `Address` and with the <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> property set to `BypassOnLocal`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4020-155">下面的代码示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="a4020-155">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#3)]
 [!code-csharp[NCLWebProxy#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (string Address, bool BypassOnLocal, string[] BypassList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string Address, bool BypassOnLocal, string[] BypassList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As String, BypassOnLocal As Boolean, BypassList As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(System::String ^ Address, bool BypassOnLocal, cli::array &lt;System::String ^&gt; ^ BypassList);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : string * bool * string[] -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (Address, BypassOnLocal, BypassList)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Address" Type="System.String" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" />
        <Parameter Name="BypassList" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="Address">
          <span data-ttu-id="a4020-156">代理服务器的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-156">The URI of the proxy server.</span>
          </span>
        </param>
        <param name="BypassOnLocal">
          <span data-ttu-id="a4020-157">如果对本地地址跳过代理，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-157">
              <see langword="true" /> to bypass the proxy for local addresses; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="BypassList">
          <span data-ttu-id="a4020-158">一个正则表达式字符串数组，它包含要跳过的服务器的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-158">An array of regular expression strings that contain the URIs of the servers to bypass.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4020-159">使用指定的 URI、回避设置和要回避的 URI 列表初始化 <see cref="T:System.Net.WebProxy" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-159">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified URI, bypass setting, and list of URIs to bypass.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-160"><xref:System.Net.WebProxy>使用初始化实例<xref:System.Net.WebProxy.Address%2A>属性设置为<xref:System.Uri>实例，其中包含`Address`，则<xref:System.Net.WebProxy.BypassProxyOnLocal%2A>属性设置为`BypassOnLocal`，以及<xref:System.Net.WebProxy.BypassList%2A>属性设置为`BypassList`。</span><span class="sxs-lookup"><span data-stu-id="a4020-160">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to a <xref:System.Uri> instance that contains `Address`, the <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> property set to `BypassOnLocal`, and the <xref:System.Net.WebProxy.BypassList%2A> property set to `BypassList`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4020-161">下面的代码示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="a4020-161">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#8)]
 [!code-csharp[NCLWebProxy#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="a4020-162">
            <paramref name="Address" /> 是无效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-162">
              <paramref name="Address" /> is an invalid URI.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.WebProxy.BypassProxyOnLocal" />
        <altmember cref="P:System.Net.WebProxy.BypassList" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (Uri Address, bool BypassOnLocal, string[] BypassList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri Address, bool BypassOnLocal, string[] BypassList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As Uri, BypassOnLocal As Boolean, BypassList As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(Uri ^ Address, bool BypassOnLocal, cli::array &lt;System::String ^&gt; ^ BypassList);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : Uri * bool * string[] -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (Address, BypassOnLocal, BypassList)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="Address" Type="System.Uri" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" />
        <Parameter Name="BypassList" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="Address">
          <span data-ttu-id="a4020-163">一个 <see cref="T:System.Uri" /> 实例，它包含代理服务器的地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-163">A <see cref="T:System.Uri" /> instance that contains the address of the proxy server.</span>
          </span>
        </param>
        <param name="BypassOnLocal">
          <span data-ttu-id="a4020-164">如果对本地地址跳过代理，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-164">
              <see langword="true" /> to bypass the proxy for local addresses; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="BypassList">
          <span data-ttu-id="a4020-165">一个正则表达式字符串数组，它包含要跳过的服务器的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-165">An array of regular expression strings that contains the URIs of the servers to bypass.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4020-166">使用指定的 <see cref="T:System.Net.WebProxy" /> 实例、回避设置和要回避的 URI 列表初始化 <see cref="T:System.Uri" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-166">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified <see cref="T:System.Uri" /> instance, bypass setting, and list of URIs to bypass.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-167"><xref:System.Net.WebProxy>使用初始化实例<xref:System.Net.WebProxy.Address%2A>属性设置为`Address`，则<xref:System.Net.WebProxy.BypassProxyOnLocal%2A>属性设置为`BypassOnLocal`，并且<xref:System.Net.WebProxy.BypassList%2A>属性设置为`BypassList`。</span><span class="sxs-lookup"><span data-stu-id="a4020-167">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to `Address`, the <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> property set to `BypassOnLocal`, and the <xref:System.Net.WebProxy.BypassList%2A> property set to `BypassList`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4020-168">下面的代码示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="a4020-168">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#4)]
 [!code-csharp[NCLWebProxy#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (string Address, bool BypassOnLocal, string[] BypassList, System.Net.ICredentials Credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string Address, bool BypassOnLocal, string[] BypassList, class System.Net.ICredentials Credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As String, BypassOnLocal As Boolean, BypassList As String(), Credentials As ICredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(System::String ^ Address, bool BypassOnLocal, cli::array &lt;System::String ^&gt; ^ BypassList, System::Net::ICredentials ^ Credentials);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : string * bool * string[] * System.Net.ICredentials -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (Address, BypassOnLocal, BypassList, Credentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Address" Type="System.String" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" />
        <Parameter Name="BypassList" Type="System.String[]" />
        <Parameter Name="Credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="Address">
          <span data-ttu-id="a4020-169">代理服务器的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-169">The URI of the proxy server.</span>
          </span>
        </param>
        <param name="BypassOnLocal">
          <span data-ttu-id="a4020-170">如果对本地地址跳过代理，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-170">
              <see langword="true" /> to bypass the proxy for local addresses; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="BypassList">
          <span data-ttu-id="a4020-171">一个正则表达式字符串数组，它包含要跳过的服务器的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-171">An array of regular expression strings that contains the URIs of the servers to bypass.</span>
          </span>
        </param>
        <param name="Credentials">
          <span data-ttu-id="a4020-172">要提交给代理服务器进行身份验证的 <see cref="T:System.Net.ICredentials" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-172">An <see cref="T:System.Net.ICredentials" /> instance to submit to the proxy server for authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4020-173">使用指定的 URI、回避设置、要回避的 URI 列表和凭据初始化 <see cref="T:System.Net.WebProxy" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-173">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified URI, bypass setting, list of URIs to bypass, and credentials.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-174"><xref:System.Net.WebProxy>使用初始化实例<xref:System.Net.WebProxy.Address%2A>属性设置为<xref:System.Uri>实例，其中包含`Address`，则<xref:System.Net.WebProxy.BypassProxyOnLocal%2A>属性设置为`BypassOnLocal`，则<xref:System.Net.WebProxy.BypassList%2A>属性设置为`BypassList`，和<xref:System.Net.WebProxy.Credentials%2A>属性设置为`Credentials`。</span><span class="sxs-lookup"><span data-stu-id="a4020-174">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to a <xref:System.Uri> instance that contains `Address`, the <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> property set to `BypassOnLocal`, the <xref:System.Net.WebProxy.BypassList%2A> property set to `BypassList`, and the <xref:System.Net.WebProxy.Credentials%2A> property set to `Credentials`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4020-175">下面的代码示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="a4020-175">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#9)]
 [!code-csharp[NCLWebProxy#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="a4020-176">
            <paramref name="Address" /> 是无效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-176">
              <paramref name="Address" /> is an invalid URI.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.WebProxy.BypassProxyOnLocal" />
        <altmember cref="P:System.Net.WebProxy.BypassList" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProxy (Uri Address, bool BypassOnLocal, string[] BypassList, System.Net.ICredentials Credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri Address, bool BypassOnLocal, string[] BypassList, class System.Net.ICredentials Credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Address As Uri, BypassOnLocal As Boolean, BypassList As String(), Credentials As ICredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebProxy(Uri ^ Address, bool BypassOnLocal, cli::array &lt;System::String ^&gt; ^ BypassList, System::Net::ICredentials ^ Credentials);" />
      <MemberSignature Language="F#" Value="new System.Net.WebProxy : Uri * bool * string[] * System.Net.ICredentials -&gt; System.Net.WebProxy" Usage="new System.Net.WebProxy (Address, BypassOnLocal, BypassList, Credentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Address" Type="System.Uri" />
        <Parameter Name="BypassOnLocal" Type="System.Boolean" />
        <Parameter Name="BypassList" Type="System.String[]" />
        <Parameter Name="Credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="Address">
          <span data-ttu-id="a4020-177">一个 <see cref="T:System.Uri" /> 实例，它包含代理服务器的地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-177">A <see cref="T:System.Uri" /> instance that contains the address of the proxy server.</span>
          </span>
        </param>
        <param name="BypassOnLocal">
          <span data-ttu-id="a4020-178">如果对本地地址跳过代理，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-178">
              <see langword="true" /> to bypass the proxy for local addresses; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="BypassList">
          <span data-ttu-id="a4020-179">一个正则表达式字符串数组，它包含要跳过的服务器的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-179">An array of regular expression strings that contains the URIs of the servers to bypass.</span>
          </span>
        </param>
        <param name="Credentials">
          <span data-ttu-id="a4020-180">要提交给代理服务器进行身份验证的 <see cref="T:System.Net.ICredentials" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-180">An <see cref="T:System.Net.ICredentials" /> instance to submit to the proxy server for authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4020-181">使用指定的 <see cref="T:System.Net.WebProxy" /> 实例、回避设置、要回避的 URI 列表和凭据初始化 <see cref="T:System.Uri" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-181">Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified <see cref="T:System.Uri" /> instance, bypass setting, list of URIs to bypass, and credentials.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-182"><xref:System.Net.WebProxy>使用初始化实例<xref:System.Net.WebProxy.Address%2A>属性设置为`Address`，则<xref:System.Net.WebProxy.BypassProxyOnLocal%2A>属性设置为`BypassOnLocal`，则<xref:System.Net.WebProxy.BypassList%2A>属性设置为`BypassList`，和<xref:System.Net.WebProxy.Credentials%2A>属性设置为`Credentials`.</span><span class="sxs-lookup"><span data-stu-id="a4020-182">The <xref:System.Net.WebProxy> instance is initialized with the <xref:System.Net.WebProxy.Address%2A> property set to `Address`, the <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> property set to `BypassOnLocal`, the <xref:System.Net.WebProxy.BypassList%2A> property set to `BypassList`, and the <xref:System.Net.WebProxy.Credentials%2A> property set to `Credentials`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4020-183">下面的代码示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="a4020-183">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NCLWebProxy#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#13)]
 [!code-csharp[NCLWebProxy#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public Uri Address { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebProxy.Address" />
      <MemberSignature Language="VB.NET" Value="Public Property Address As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Address { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Address : Uri with get, set" Usage="System.Net.WebProxy.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4020-184">获取或设置代理服务器的地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-184">Gets or sets the address of the proxy server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4020-185">一个 <see cref="T:System.Uri" /> 实例，它包含代理服务器的地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-185">A <see cref="T:System.Uri" /> instance that contains the address of the proxy server.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-186"><xref:System.Net.WebProxy.Address%2A>属性包含代理服务器的地址。</span><span class="sxs-lookup"><span data-stu-id="a4020-186">The <xref:System.Net.WebProxy.Address%2A> property contains the address of the proxy server.</span></span> <span data-ttu-id="a4020-187">当未启用自动代理检测，并指定不自动配置脚本，则<xref:System.Net.WebProxy.Address%2A>属性和<xref:System.Net.WebProxy.BypassList%2A>确定的请求使用的代理。</span><span class="sxs-lookup"><span data-stu-id="a4020-187">When automatic proxy detection is not enabled, and no automatic configuration script is specified, the <xref:System.Net.WebProxy.Address%2A> property and <xref:System.Net.WebProxy.BypassList%2A> determine the proxy used for a request.</span></span>  
  
 <span data-ttu-id="a4020-188">当<xref:System.Net.WebProxy.Address%2A>属性是`null`，请求绕过代理和直接连接到目标主机。</span><span class="sxs-lookup"><span data-stu-id="a4020-188">When the <xref:System.Net.WebProxy.Address%2A> property is `null`, requests bypass the proxy and connect directly to the destination host.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4020-189">下面的代码示例显示的属性<xref:System.Net.WebProxy>对象，包括其<xref:System.Net.WebProxy.Address%2A>。</span><span class="sxs-lookup"><span data-stu-id="a4020-189">The following code example displays the properties of a <xref:System.Net.WebProxy> object, including its <xref:System.Net.WebProxy.Address%2A>.</span></span>  
  
 [!code-cpp[NCLAutoProxy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLAutoProxy/CPP/proxy.cpp#1)]
 [!code-csharp[NCLAutoProxy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLAutoProxy/CS/proxy.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BypassArrayList">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList BypassArrayList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList BypassArrayList" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebProxy.BypassArrayList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BypassArrayList As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ BypassArrayList { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BypassArrayList : System.Collections.ArrayList" Usage="System.Net.WebProxy.BypassArrayList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4020-190">获取不使用代理服务器的地址列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-190">Gets a list of addresses that do not use the proxy server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4020-191">一个 <see cref="T:System.Collections.ArrayList" />，其中包含表示 URI 的 <see cref="P:System.Net.WebProxy.BypassList" /> 数组的列表，这些 URI 在被访问时不使用代理服务器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-191">An <see cref="T:System.Collections.ArrayList" /> that contains a list of <see cref="P:System.Net.WebProxy.BypassList" /> arrays that represents URIs that do not use the proxy server when accessed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-192"><xref:System.Net.WebProxy.BypassList%2A>是描述 Uri 的正则表达式字符串的数组列表的<xref:System.Net.WebRequest>实例而不是直接访问通过代理服务器。</span><span class="sxs-lookup"><span data-stu-id="a4020-192">The <xref:System.Net.WebProxy.BypassList%2A> is an array list of regular expression strings that describe the URIs that a <xref:System.Net.WebRequest> instance accesses directly instead of through the proxy server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BypassList">
      <MemberSignature Language="C#" Value="public string[] BypassList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] BypassList" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebProxy.BypassList" />
      <MemberSignature Language="VB.NET" Value="Public Property BypassList As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ BypassList { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BypassList : string[] with get, set" Usage="System.Net.WebProxy.BypassList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4020-193">获取或设置一个地址数组，这些地址不使用代理服务器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-193">Gets or sets an array of addresses that do not use the proxy server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4020-194">包含描述 URI 的正则表达式列表的数组，这些 URI 在被访问时不使用代理服务器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-194">An array that contains a list of regular expressions that describe URIs that do not use the proxy server when accessed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-195"><xref:System.Net.WebProxy.BypassList%2A>属性包含描述 Uri 的正则表达式的数组的<xref:System.Net.WebRequest>实例而不是直接访问通过代理服务器。</span><span class="sxs-lookup"><span data-stu-id="a4020-195">The <xref:System.Net.WebProxy.BypassList%2A> property contains an array of regular expressions that describe URIs that a <xref:System.Net.WebRequest> instance accesses directly instead of through the proxy server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4020-196">下面的代码示例显示的属性<xref:System.Net.WebProxy>对象，包括其<xref:System.Net.WebProxy.BypassList%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a4020-196">The following code example displays the properties of a <xref:System.Net.WebProxy> object, including its <xref:System.Net.WebProxy.BypassList%2A> property.</span></span>  
  
 [!code-cpp[NCLAutoProxy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLAutoProxy/CPP/proxy.cpp#1)]
 [!code-csharp[NCLAutoProxy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLAutoProxy/CS/proxy.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName="BypassProxyOnLocal">
      <MemberSignature Language="C#" Value="public bool BypassProxyOnLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BypassProxyOnLocal" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebProxy.BypassProxyOnLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property BypassProxyOnLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BypassProxyOnLocal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BypassProxyOnLocal : bool with get, set" Usage="System.Net.WebProxy.BypassProxyOnLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4020-197">获取或设置一个值，该值指示是否对本地地址不使用代理服务器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-197">Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4020-198">如果对本地地址不使用代理服务器，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-198">
              <see langword="true" /> to bypass the proxy server for local addresses; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a4020-199">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-199">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-200">设置<xref:System.Net.WebProxy.BypassProxyOnLocal%2A>属性确定是否<xref:System.Net.WebRequest>实例访问本地 Internet 资源时使用代理服务器。</span><span class="sxs-lookup"><span data-stu-id="a4020-200">The setting of the <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> property determines whether <xref:System.Net.WebRequest> instances use the proxy server when accessing local Internet resources.</span></span>  
  
 <span data-ttu-id="a4020-201">如果 <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> 为 `true`，则对本地 Internet 资源的请求不使用代理服务器。</span><span class="sxs-lookup"><span data-stu-id="a4020-201">If <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> is `true`, requests to local Internet resources do not use the proxy server.</span></span> <span data-ttu-id="a4020-202">通过省略句点 （.） 在 URI 中，作为中标识本地请求http://webserver/，或访问本地服务器，包括http://localhost， http://loopback，或http://127.0.0.1。</span><span class="sxs-lookup"><span data-stu-id="a4020-202">Local requests are identified by the lack of a period (.) in the URI, as in http://webserver/, or access the local server, including http://localhost, http://loopback, or http://127.0.0.1.</span></span> <span data-ttu-id="a4020-203"><xref:System.Net.WebProxy.BypassProxyOnLocal%2A> 为 `false` 时，所有 Internet 请求都通过代理服务器进行。</span><span class="sxs-lookup"><span data-stu-id="a4020-203">When <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> is `false`, all Internet requests are made through the proxy server.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a4020-204">对本地主机的 URI 包含句点的请求使用代理服务器。</span><span class="sxs-lookup"><span data-stu-id="a4020-204">Requests to a local host with a URI that contain a period use the proxy.</span></span> <span data-ttu-id="a4020-205">若要避免使用代理在这些情况下，创建一个条目中为主机<xref:System.Net.WebProxy.BypassList%2A>。</span><span class="sxs-lookup"><span data-stu-id="a4020-205">To avoid using a proxy in these cases, create an entry for the host in the <xref:System.Net.WebProxy.BypassList%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4020-206">下面的代码示例演示如何调用设置此属性的构造函数和获取此属性的值。</span><span class="sxs-lookup"><span data-stu-id="a4020-206">The following code example demonstrates calling a constructor that sets this property and getting the value of this property.</span></span>  
  
 [!code-cpp[NCLWebProxy#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#7)]
 [!code-csharp[NCLWebProxy#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultProxy">
      <MemberSignature Language="C#" Value="public static System.Net.IWebProxy CreateDefaultProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IWebProxy CreateDefaultProxy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.CreateDefaultProxy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefaultProxy () As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IWebProxy ^ CreateDefaultProxy();" />
      <MemberSignature Language="F#" Value="static member CreateDefaultProxy : unit -&gt; System.Net.IWebProxy" Usage="System.Net.WebProxy.CreateDefaultProxy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebProxy.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.WebProxy.Credentials" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Net.IWebProxy.Credentials</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4020-207">获取或设置要提交到代理服务器进行身份验证的凭据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-207">Gets or sets the credentials to submit to the proxy server for authentication.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4020-208">一个 <see cref="T:System.Net.ICredentials" /> 实例，它包含要提交给代理服务器进行身份验证的凭据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-208">An <see cref="T:System.Net.ICredentials" /> instance that contains the credentials to submit to the proxy server for authentication.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-209"><xref:System.Net.WebProxy.Credentials%2A>属性包含发送到响应 HTTP 407 （代理身份验证） 状态代码中的代理服务器的身份验证凭据。</span><span class="sxs-lookup"><span data-stu-id="a4020-209">The <xref:System.Net.WebProxy.Credentials%2A> property contains the authentication credentials to send to the proxy server in response to an HTTP 407 (proxy authorization) status code.</span></span> <span data-ttu-id="a4020-210">在大多数客户端方案中，应使用<xref:System.Net.CredentialCache.DefaultCredentials%2A>，这是当前登录用户的凭据。</span><span class="sxs-lookup"><span data-stu-id="a4020-210">In most client scenarios, you should use the <xref:System.Net.CredentialCache.DefaultCredentials%2A>, which are the credentials of the currently logged on user.</span></span> <span data-ttu-id="a4020-211">若要执行此操作，设置<xref:System.Net.WebProxy.UseDefaultCredentials%2A>属性设置为`true`而不是设置此属性。</span><span class="sxs-lookup"><span data-stu-id="a4020-211">To do this, set the <xref:System.Net.WebProxy.UseDefaultCredentials%2A> property to `true` instead of setting this property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a4020-212">如果您设置<xref:System.Net.WebProxy.Credentials%2A>属性设置为凭据以外的其他<xref:System.Net.CredentialCache.DefaultCredentials%2A>，并设置<xref:System.Net.WebProxy.UseDefaultCredentials%2A>属性设置为`true`导致<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="a4020-212">If you set the <xref:System.Net.WebProxy.Credentials%2A> property to credentials other than the <xref:System.Net.CredentialCache.DefaultCredentials%2A>, setting the <xref:System.Net.WebProxy.UseDefaultCredentials%2A> property to `true` causes a <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="a4020-213">若要防止此情况，必须设置<xref:System.Net.WebProxy.Credentials%2A>属性设置为`null`之前设置<xref:System.Net.WebProxy.UseDefaultCredentials%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="a4020-213">To prevent this, you must set the <xref:System.Net.WebProxy.Credentials%2A> property to `null` before setting the <xref:System.Net.WebProxy.UseDefaultCredentials%2A> property to `true`.</span></span> <span data-ttu-id="a4020-214">同样，不能将此属性设置为任何值时<xref:System.Net.WebProxy.UseDefaultCredentials%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="a4020-214">Likewise, you cannot set this property to any value when <xref:System.Net.WebProxy.UseDefaultCredentials%2A> is `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a4020-215">将 <see cref="P:System.Net.WebProxy.UseDefaultCredentials" /> 属性设置为 <see langword="true" /> 后，尝试设置此属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-215">You attempted to set this property when the <see cref="P:System.Net.WebProxy.UseDefaultCredentials" /> property was set to <see langword="true" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProxy">
      <MemberSignature Language="C#" Value="public static System.Net.WebProxy GetDefaultProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebProxy GetDefaultProxy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.GetDefaultProxy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProxy () As WebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebProxy ^ GetDefaultProxy();" />
      <MemberSignature Language="F#" Value="static member GetDefaultProxy : unit -&gt; System.Net.WebProxy" Usage="System.Net.WebProxy.GetDefaultProxy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This method has been deprecated. Please use the proxy selected for you by default. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebProxy</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4020-216">读取 Internet Explorer 非动态代理设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-216">Reads the Internet Explorer nondynamic proxy settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4020-217">一个 <see cref="T:System.Net.WebProxy" /> 实例，它包含 Internet Explorer 5.5 及更高版本中的非动态代理设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-217">A <see cref="T:System.Net.WebProxy" /> instance that contains the nondynamic proxy settings from Internet Explorer 5.5 and later.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-218"><xref:System.Net.WebProxy.GetDefaultProxy%2A>方法读取由 Internet Explorer 5.5 和更高版本，存储的非动态代理设置，并创建<xref:System.Net.WebProxy>实例使用这些设置。</span><span class="sxs-lookup"><span data-stu-id="a4020-218">The <xref:System.Net.WebProxy.GetDefaultProxy%2A> method reads the nondynamic proxy settings stored by Internet Explorer 5.5 and later, and creates a <xref:System.Net.WebProxy> instance with those settings.</span></span>  
  
 <span data-ttu-id="a4020-219"><xref:System.Net.WebProxy.GetDefaultProxy%2A>方法不提取从脚本运行 Internet explorer、 自动配置项，或 DHCP 或 DNS 查找生成的任何动态设置。</span><span class="sxs-lookup"><span data-stu-id="a4020-219">The <xref:System.Net.WebProxy.GetDefaultProxy%2A> method does not pick up any dynamic settings that are generated from scripts run by Internet Explorer, from automatic configuration entries, or from DHCP or DNS lookups.</span></span>  
  
 <span data-ttu-id="a4020-220">应用程序应使用<xref:System.Net.WebRequest.DefaultWebProxy%2A?displayProperty=nameWithType>属性和<xref:System.Net.WebRequest.GetSystemWebProxy%2A?displayProperty=nameWithType>方法而不是<xref:System.Net.WebProxy.GetDefaultProxy%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a4020-220">Applications should use the <xref:System.Net.WebRequest.DefaultWebProxy%2A?displayProperty=nameWithType> property and the <xref:System.Net.WebRequest.GetSystemWebProxy%2A?displayProperty=nameWithType> method instead of the <xref:System.Net.WebProxy.GetDefaultProxy%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4020-221">下面的代码示例演示如何调用此方法。</span><span class="sxs-lookup"><span data-stu-id="a4020-221">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NCLWebProxy#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#11)]
 [!code-csharp[NCLWebProxy#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#11)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="a4020-222">无限制地访问网络资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-222">for unrestricted access to network resources.</span>
          </span>
          <span data-ttu-id="a4020-223">关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-223">Associated Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="webProxy.GetObjectData (serializationInfo, streamingContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <span data-ttu-id="a4020-224">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-224">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span>
          </span>
        </param>
        <param name="streamingContext">
          <span data-ttu-id="a4020-225">用于指定该序列化的目标的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-225">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4020-226">使用序列化目标对象所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-226">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data that is needed to serialize the target object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-227">中包含的任何对象<xref:System.Runtime.Serialization.SerializationInfo>会自动跟踪和格式化程序序列化。</span><span class="sxs-lookup"><span data-stu-id="a4020-227">Any objects included in the <xref:System.Runtime.Serialization.SerializationInfo> are automatically tracked and serialized by the formatter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxy">
      <MemberSignature Language="C#" Value="public Uri GetProxy (Uri destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Uri GetProxy(class System.Uri destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.GetProxy(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProxy (destination As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Uri ^ GetProxy(Uri ^ destination);" />
      <MemberSignature Language="F#" Value="abstract member GetProxy : Uri -&gt; Uri&#xA;override this.GetProxy : Uri -&gt; Uri" Usage="webProxy.GetProxy destination" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.IWebProxy.GetProxy(System.Uri)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="a4020-228">所请求 Internet 资源的 <see cref="T:System.Uri" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-228">The <see cref="T:System.Uri" /> instance of the requested Internet resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4020-229">返回请求的已代理 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-229">Returns the proxied URI for a request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4020-230">如果资源在回避列表上，则为 Internet 资源的 <see cref="T:System.Uri" /> 实例；否则为代理的 <see cref="T:System.Uri" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-230">The <see cref="T:System.Uri" /> instance of the Internet resource, if the resource is on the bypass list; otherwise, the <see cref="T:System.Uri" /> instance of the proxy.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-231"><xref:System.Net.WebProxy.GetProxy%2A>方法返回的 URI<xref:System.Net.WebRequest>实例用于访问 Internet 资源。</span><span class="sxs-lookup"><span data-stu-id="a4020-231">The <xref:System.Net.WebProxy.GetProxy%2A> method returns the URI that the <xref:System.Net.WebRequest> instance uses to access the Internet resource.</span></span>  
  
 <span data-ttu-id="a4020-232"><xref:System.Net.WebProxy.GetProxy%2A> 比较`destination`的内容<xref:System.Net.WebProxy.BypassList%2A>，并使用<xref:System.Net.WebProxy.IsBypassed%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a4020-232"><xref:System.Net.WebProxy.GetProxy%2A> compares `destination` with the contents of <xref:System.Net.WebProxy.BypassList%2A>, using the <xref:System.Net.WebProxy.IsBypassed%2A> method.</span></span> <span data-ttu-id="a4020-233">如果<xref:System.Net.WebProxy.IsBypassed%2A>将返回`true`，<xref:System.Net.WebProxy.GetProxy%2A>返回`destination`和<xref:System.Net.WebRequest>实例不使用代理服务器。</span><span class="sxs-lookup"><span data-stu-id="a4020-233">If <xref:System.Net.WebProxy.IsBypassed%2A> returns `true`, <xref:System.Net.WebProxy.GetProxy%2A> returns `destination` and the <xref:System.Net.WebRequest> instance does not use the proxy server.</span></span>  
  
 <span data-ttu-id="a4020-234">如果`destination`未处于<xref:System.Net.WebProxy.BypassList%2A>，则<xref:System.Net.WebRequest>实例将使用代理服务器和<xref:System.Net.WebProxy.Address%2A>返回属性。</span><span class="sxs-lookup"><span data-stu-id="a4020-234">If `destination` is not in <xref:System.Net.WebProxy.BypassList%2A>, the <xref:System.Net.WebRequest> instance uses the proxy server and the <xref:System.Net.WebProxy.Address%2A> property is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4020-235">下面的代码示例创建<xref:System.Net.WebProxy>对象，然后调用此方法以获取资源处于选中状态的代理。</span><span class="sxs-lookup"><span data-stu-id="a4020-235">The following code example creates a <xref:System.Net.WebProxy> object and calls this method to get the proxy that is selected for a resource.</span></span>  
  
 [!code-cpp[NCLAutoProxy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLAutoProxy/CPP/proxy.cpp#2)]
 [!code-csharp[NCLAutoProxy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLAutoProxy/CS/proxy.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a4020-236">
            <paramref name="destination" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-236">The <paramref name="destination" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsBypassed">
      <MemberSignature Language="C#" Value="public bool IsBypassed (Uri host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBypassed(class System.Uri host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.IsBypassed(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsBypassed (host As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsBypassed(Uri ^ host);" />
      <MemberSignature Language="F#" Value="abstract member IsBypassed : Uri -&gt; bool&#xA;override this.IsBypassed : Uri -&gt; bool" Usage="webProxy.IsBypassed host" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.IWebProxy.IsBypassed(System.Uri)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="a4020-237">要检查代理使用情况的主机的 <see cref="T:System.Uri" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-237">The <see cref="T:System.Uri" /> instance of the host to check for proxy use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4020-238">指示是否对指定的主机使用代理服务器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-238">Indicates whether to use the proxy server for the specified host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4020-239">如果代理服务器不应用于 <paramref name="host" />，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-239">
              <see langword="true" /> if the proxy server should not be used for <paramref name="host" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-240"><xref:System.Net.WebProxy.IsBypassed%2A>方法用于确定是否绕过代理服务器访问 Internet 资源时。</span><span class="sxs-lookup"><span data-stu-id="a4020-240">The <xref:System.Net.WebProxy.IsBypassed%2A> method is used to determine whether to bypass the proxy server when accessing an Internet resource.</span></span>  
  
 <span data-ttu-id="a4020-241"><xref:System.Net.WebProxy.BypassProxyOnLocal%2A>并<xref:System.Net.WebProxy.BypassList%2A>属性控制的返回值<xref:System.Net.WebProxy.IsBypassed%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a4020-241">The <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> and <xref:System.Net.WebProxy.BypassList%2A> properties control the return value of the <xref:System.Net.WebProxy.IsBypassed%2A> method.</span></span>  
  
 <span data-ttu-id="a4020-242"><xref:System.Net.WebProxy.IsBypassed%2A> 返回`true`在任一以下条件：</span><span class="sxs-lookup"><span data-stu-id="a4020-242"><xref:System.Net.WebProxy.IsBypassed%2A> returns `true` under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="a4020-243">如果<xref:System.Net.WebProxy.BypassProxyOnLocal%2A>是`true`和`host`是本地的 URI。</span><span class="sxs-lookup"><span data-stu-id="a4020-243">If <xref:System.Net.WebProxy.BypassProxyOnLocal%2A> is `true` and `host` is a local URI.</span></span> <span data-ttu-id="a4020-244">本地请求标识通过省略句点 （.） 在 URI 中，如"http://webserver/"。</span><span class="sxs-lookup"><span data-stu-id="a4020-244">Local requests are identified by the lack of a period (.) in the URI, as in "http://webserver/".</span></span>  
  
-   <span data-ttu-id="a4020-245">如果`host`与正则表达式中的匹配<xref:System.Net.WebProxy.BypassList%2A>。</span><span class="sxs-lookup"><span data-stu-id="a4020-245">If `host` matches a regular expression in <xref:System.Net.WebProxy.BypassList%2A>.</span></span>  
  
-   <span data-ttu-id="a4020-246">如果 <xref:System.Net.WebProxy.Address%2A> 为 `null`。</span><span class="sxs-lookup"><span data-stu-id="a4020-246">If <xref:System.Net.WebProxy.Address%2A> is `null`.</span></span>  
  
 <span data-ttu-id="a4020-247">所有其他情况返回`false`。</span><span class="sxs-lookup"><span data-stu-id="a4020-247">All other conditions return `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4020-248">下面的代码示例创建<xref:System.Net.WebProxy>对象，然后调用此方法来检查是否正确设置跳过列表。</span><span class="sxs-lookup"><span data-stu-id="a4020-248">The following code example creates a <xref:System.Net.WebProxy> object and calls this method to check whether the bypass list is properly set.</span></span>  
  
 [!code-cpp[NCLWebProxy#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebProxy/CPP/nclwebproxy.cpp#12)]
 [!code-csharp[NCLWebProxy#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebProxy/CS/nclwebproxy.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a4020-249">
            <paramref name="host" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-249">The <paramref name="host" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <span data-ttu-id="a4020-250">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-250">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</span>
          </span>
        </param>
        <param name="streamingContext">
          <span data-ttu-id="a4020-251">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 结构，指定该序列化的目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-251">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure that indicates the destination for this serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4020-252">创建系统序列化 <see cref="T:System.Net.WebProxy" /> 对象时所使用的序列化数据和上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-252">Creates the serialization data and context that are used by the system to serialize a <see cref="T:System.Net.WebProxy" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-253">系统调用此方法以序列化对象;应用程序不直接调用它。</span><span class="sxs-lookup"><span data-stu-id="a4020-253">The system calls this method to serialize an object; applications do not call it directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebProxy.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.WebProxy.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebProxy</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4020-254">获取或设置 <see cref="T:System.Boolean" /> 值，该值控制 <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> 是否随请求一起发送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-254">Gets or sets a <see cref="T:System.Boolean" /> value that controls whether the <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> are sent with requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a4020-255">如果使用默认凭据，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-255">
              <see langword="true" /> if the default credentials are used; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a4020-256">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-256">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4020-257">将此属性设置为`true`时发出此请求<xref:System.Net.WebProxy>对象应，如果请求服务器进行身份验证使用当前登录用户的凭据。</span><span class="sxs-lookup"><span data-stu-id="a4020-257">Set this property to `true` when requests made by this <xref:System.Net.WebProxy> object should, if requested by the server, be authenticated using the credentials of the currently logged on user.</span></span> <span data-ttu-id="a4020-258">对于客户端应用程序，这是在大多数情况下所需的行为。</span><span class="sxs-lookup"><span data-stu-id="a4020-258">For client applications, this is the desired behavior in most scenarios.</span></span> <span data-ttu-id="a4020-259">对于中间层应用程序，如 ASP.NET 应用程序，而不是使用此属性，通常会设置<xref:System.Net.WebProxy.Credentials%2A>属性设置为客户端的名义发出请求的凭据。</span><span class="sxs-lookup"><span data-stu-id="a4020-259">For middle tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.WebProxy.Credentials%2A> property to the credentials of the client on whose behalf the request is made.</span></span>  
  
 <span data-ttu-id="a4020-260">下表显示了设置的效果<xref:System.Net.WebProxy.UseDefaultCredentials%2A>值，值的基础<xref:System.Net.WebProxy.Credentials%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a4020-260">The following table shows the effect of setting the <xref:System.Net.WebProxy.UseDefaultCredentials%2A> value, based on the value of the <xref:System.Net.WebProxy.Credentials%2A> property.</span></span>  
  
|<span data-ttu-id="a4020-261"><xref:System.Net.WebProxy.Credentials%2A> 值</span><span class="sxs-lookup"><span data-stu-id="a4020-261"><xref:System.Net.WebProxy.Credentials%2A> value</span></span>|<span data-ttu-id="a4020-262"><xref:System.Net.WebProxy.UseDefaultCredentials%2A> 值</span><span class="sxs-lookup"><span data-stu-id="a4020-262"><xref:System.Net.WebProxy.UseDefaultCredentials%2A> value</span></span>|<span data-ttu-id="a4020-263">效果</span><span class="sxs-lookup"><span data-stu-id="a4020-263">Effect</span></span>|  
|----------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|  
|<xref:System.Net.CredentialCache.DefaultCredentials%2A>|`true`|<span data-ttu-id="a4020-264">没有影响。</span><span class="sxs-lookup"><span data-stu-id="a4020-264">No effect.</span></span>|  
|<xref:System.Net.CredentialCache.DefaultCredentials%2A>|`false`|<span data-ttu-id="a4020-265">将 <xref:System.Net.WebProxy.Credentials%2A> 设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="a4020-265"><xref:System.Net.WebProxy.Credentials%2A> is set to `null`.</span></span>|  
|`null`|`true`|<span data-ttu-id="a4020-266">将 <xref:System.Net.WebProxy.Credentials%2A> 设置为 <xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="a4020-266"><xref:System.Net.WebProxy.Credentials%2A> is set to <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span>|  
|<span data-ttu-id="a4020-267">任何值，而不是<xref:System.Net.CredentialCache.DefaultCredentials%2A>或 `null`</span><span class="sxs-lookup"><span data-stu-id="a4020-267">Any value other than <xref:System.Net.CredentialCache.DefaultCredentials%2A> or `null`</span></span>|<span data-ttu-id="a4020-268">`true` 或 `false`</span><span class="sxs-lookup"><span data-stu-id="a4020-268">`true` or `false`</span></span>|<span data-ttu-id="a4020-269">设置<xref:System.Net.WebProxy.UseDefaultCredentials%2A>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="a4020-269">Setting <xref:System.Net.WebProxy.UseDefaultCredentials%2A> throws an exception.</span></span>|  
  
 <span data-ttu-id="a4020-270">如果<xref:System.Net.WebProxy.UseDefaultCredentials%2A>是`false`，可以更改<xref:System.Net.WebProxy.Credentials%2A>属性设置为任何凭据。</span><span class="sxs-lookup"><span data-stu-id="a4020-270">If <xref:System.Net.WebProxy.UseDefaultCredentials%2A> is `false`, you can change the <xref:System.Net.WebProxy.Credentials%2A> property to any credentials.</span></span> <span data-ttu-id="a4020-271">如果<xref:System.Net.WebProxy.UseDefaultCredentials%2A>是`true`，更改<xref:System.Net.WebProxy.Credentials%2A>属性从<xref:System.Net.CredentialCache.DefaultCredentials%2A>(时设置的值<xref:System.Net.WebProxy.UseDefaultCredentials%2A>属性设置为`true`) 将引发异常。</span><span class="sxs-lookup"><span data-stu-id="a4020-271">If <xref:System.Net.WebProxy.UseDefaultCredentials%2A> is `true`, changing the <xref:System.Net.WebProxy.Credentials%2A> property from <xref:System.Net.CredentialCache.DefaultCredentials%2A> (the value that is set when the <xref:System.Net.WebProxy.UseDefaultCredentials%2A> property is set to `true`) will throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a4020-272">当 <see cref="P:System.Net.WebProxy.Credentials" /> 属性包含默认凭据以外的凭据时，尝试设置此属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4020-272">You attempted to set this property when the <see cref="P:System.Net.WebProxy.Credentials" /> property contains credentials other than the default credentials.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>