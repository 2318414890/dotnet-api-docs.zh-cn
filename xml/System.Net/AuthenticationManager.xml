<Type Name="AuthenticationManager" FullName="System.Net.AuthenticationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="26a1164caa67eb4665a7274d8aabe13934f85997" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51862523" /></Metadata><TypeSignature Language="C#" Value="public class AuthenticationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.AuthenticationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationManager" />
  <TypeSignature Language="F#" Value="type AuthenticationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ec211-101">管理客户端身份验证过程中调用的身份验证模块。</span><span class="sxs-lookup"><span data-stu-id="ec211-101">Manages the authentication modules called during the client authentication process.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec211-102"><xref:System.Net.AuthenticationManager> 是一个静态类，用于管理应用程序使用的身份验证模块。</span><span class="sxs-lookup"><span data-stu-id="ec211-102"><xref:System.Net.AuthenticationManager> is a static class that manages the authentication modules that an application uses.</span></span> <span data-ttu-id="ec211-103">当请求受保护的资源，<xref:System.Net.AuthenticationManager>调用<xref:System.Net.AuthenticationManager.Authenticate%2A>方法以获取<xref:System.Net.Authorization>实例，以便在后续请求中使用。</span><span class="sxs-lookup"><span data-stu-id="ec211-103">When a request is made to protected resources, the <xref:System.Net.AuthenticationManager> calls the <xref:System.Net.AuthenticationManager.Authenticate%2A> method to get an <xref:System.Net.Authorization> instance to use in subsequent requests.</span></span>  
  
 <span data-ttu-id="ec211-104"><xref:System.Net.AuthenticationManager>通过调用查询的每个注册的身份验证模块<xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType>方法为每个模块。</span><span class="sxs-lookup"><span data-stu-id="ec211-104">The <xref:System.Net.AuthenticationManager> queries each registered authentication module by calling the <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType> method for each module.</span></span> <span data-ttu-id="ec211-105">若要返回的第一个身份验证模块<xref:System.Net.Authorization>实例用于请求进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ec211-105">The first authentication module to return an <xref:System.Net.Authorization> instance is used to authenticate the request.</span></span>  
  
 <span data-ttu-id="ec211-106">模块，提供基本、 摘要式、 协商、 NTLM 和 Kerberos 身份验证类型注册到<xref:System.Net.AuthenticationManager>默认情况下。</span><span class="sxs-lookup"><span data-stu-id="ec211-106">Modules that provide the basic, digest, negotiate, NTLM, and Kerberos authentication types are registered with the <xref:System.Net.AuthenticationManager> by default.</span></span> <span data-ttu-id="ec211-107">实现的附加身份验证模块<xref:System.Net.IAuthenticationModule>接口可以使用添加<xref:System.Net.AuthenticationManager.Register%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ec211-107">Additional authentication modules that implement the <xref:System.Net.IAuthenticationModule> interface can be added using the <xref:System.Net.AuthenticationManager.Register%2A> method.</span></span> <span data-ttu-id="ec211-108">身份验证模块添加到列表中的顺序调用。</span><span class="sxs-lookup"><span data-stu-id="ec211-108">Authentication modules are called in the order in which they were added to the list.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec211-109">Kerberos 和 negotiate 身份验证类型不支持在 Windows 95/98 或 Windows NT 4.0 上。</span><span class="sxs-lookup"><span data-stu-id="ec211-109">The Kerberos and negotiate authentication type is not supported on Windows 95/98 or Windows NT 4.0.</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Net.Authentication#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#1)]
 [!code-csharp[System.Net.Authentication#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#1)]
 [!code-vb[System.Net.Authentication#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8bf0b428-5a21-4299-8d6e-bf8251fd978a"><span data-ttu-id="ec211-110">版本 3.5 SP1 中对 HTTPWebRequest 的 NTLM 身份验证的更改</span><span class="sxs-lookup"><span data-stu-id="ec211-110">Changes to NTLM authentication for HTTPWebRequest in Version 3.5 SP1</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public static System.Net.Authorization Authenticate (string challenge, System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Authorization Authenticate(string challenge, class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Authenticate (challenge As String, request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Authorization ^ Authenticate(System::String ^ challenge, System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberSignature Language="F#" Value="static member Authenticate : string * System.Net.WebRequest * System.Net.ICredentials -&gt; System.Net.Authorization" Usage="System.Net.AuthenticationManager.Authenticate (challenge, request, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challenge" Type="System.String" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="challenge"><span data-ttu-id="ec211-111">Internet 资源返回的质询。</span><span class="sxs-lookup"><span data-stu-id="ec211-111">The challenge returned by the Internet resource.</span></span></param>
        <param name="request"><span data-ttu-id="ec211-112">启动身份验证质询的 <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="ec211-112">The <see cref="T:System.Net.WebRequest" /> that initiated the authentication challenge.</span></span></param>
        <param name="credentials"><span data-ttu-id="ec211-113">与此请求关联的 <see cref="T:System.Net.ICredentials" />。</span><span class="sxs-lookup"><span data-stu-id="ec211-113">The <see cref="T:System.Net.ICredentials" /> associated with this request.</span></span></param>
        <summary><span data-ttu-id="ec211-114">调用每个已注册的身份验证模块以查找第一个可响应身份验证请求的模块。</span><span class="sxs-lookup"><span data-stu-id="ec211-114">Calls each registered authentication module to find the first module that can respond to the authentication request.</span></span></summary>
        <returns><span data-ttu-id="ec211-115"><see cref="T:System.Net.Authorization" /> 类的实例，包含授权尝试的结果。</span><span class="sxs-lookup"><span data-stu-id="ec211-115">An instance of the <see cref="T:System.Net.Authorization" /> class containing the result of the authorization attempt.</span></span> <span data-ttu-id="ec211-116">如果没有身份验证模块响应质询，则此方法返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec211-116">If there is no authentication module to respond to the challenge, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec211-117"><xref:System.Net.AuthenticationManager.Authenticate%2A>方法调用<xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType>直到模块之一使用响应每个注册的身份验证模块上的方法<xref:System.Net.Authorization>实例。</span><span class="sxs-lookup"><span data-stu-id="ec211-117">The <xref:System.Net.AuthenticationManager.Authenticate%2A> method calls the <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType> method on each registered authentication module until one of the module responds with an <xref:System.Net.Authorization> instance.</span></span>  
  
 <span data-ttu-id="ec211-118">第一个<xref:System.Net.Authorization>实例返回用于对请求进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ec211-118">The first <xref:System.Net.Authorization> instance returned is used to authenticate the request.</span></span> <span data-ttu-id="ec211-119">如果没有身份验证模块可以对请求进行身份验证<xref:System.Net.AuthenticationManager.Authenticate%2A>方法将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="ec211-119">If no authentication module can authenticate the request, the <xref:System.Net.AuthenticationManager.Authenticate%2A> method returns `null`.</span></span>  
  
 <span data-ttu-id="ec211-120">身份验证模块的调用与注册顺序<xref:System.Net.AuthenticationManager>。</span><span class="sxs-lookup"><span data-stu-id="ec211-120">Authentication modules are called in the order in which they are registered with the <xref:System.Net.AuthenticationManager>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec211-121"><paramref name="challenge" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec211-121"><paramref name="challenge" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ec211-122">或</span><span class="sxs-lookup"><span data-stu-id="ec211-122">-or-</span></span> 
 <span data-ttu-id="ec211-123"><paramref name="request" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec211-123"><paramref name="request" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ec211-124">或</span><span class="sxs-lookup"><span data-stu-id="ec211-124">-or-</span></span> 
 <span data-ttu-id="ec211-125"><paramref name="credentials" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec211-125"><paramref name="credentials" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CredentialPolicy">
      <MemberSignature Language="C#" Value="public static System.Net.ICredentialPolicy CredentialPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.ICredentialPolicy CredentialPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.CredentialPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CredentialPolicy As ICredentialPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::ICredentialPolicy ^ CredentialPolicy { System::Net::ICredentialPolicy ^ get(); void set(System::Net::ICredentialPolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CredentialPolicy : System.Net.ICredentialPolicy with get, set" Usage="System.Net.AuthenticationManager.CredentialPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentialPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec211-126">获取或设置凭据策略，该凭据策略将用于使用 <see cref="T:System.Net.HttpWebRequest" /> 类发出的资源请求。</span><span class="sxs-lookup"><span data-stu-id="ec211-126">Gets or sets the credential policy to be used for resource requests made using the <see cref="T:System.Net.HttpWebRequest" /> class.</span></span></summary>
        <value><span data-ttu-id="ec211-127">一个实现 <see cref="T:System.Net.ICredentialPolicy" /> 接口的对象，该接口确定凭据是否随请求一起发送。</span><span class="sxs-lookup"><span data-stu-id="ec211-127">An object that implements the <see cref="T:System.Net.ICredentialPolicy" /> interface that determines whether credentials are sent with requests.</span></span> <span data-ttu-id="ec211-128">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec211-128">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec211-129">凭据策略将确定是否发送网络资源，例如 Web 页面的内容的请求时发送的凭据。</span><span class="sxs-lookup"><span data-stu-id="ec211-129">The credential policy determines whether to send credentials when sending a request for a network resource, such as the content of a Web page.</span></span> <span data-ttu-id="ec211-130">如果发送凭据，可以尝试对客户端进行身份验证，而不是发送，该值指示客户端的凭据所需的响应收到请求时需要客户端身份验证服务器。</span><span class="sxs-lookup"><span data-stu-id="ec211-130">If credentials are sent, servers that require client authentication can attempt to authenticate the client when the request is received instead of sending a response indicating that the client's credentials are required.</span></span> <span data-ttu-id="ec211-131">虽然这省去了与服务器的往返过程，这必须与通过网络发送凭据所固有的安全风险进行权衡。</span><span class="sxs-lookup"><span data-stu-id="ec211-131">While this saves a round trip to the server, this must be balanced against the security risk inherent in sending credentials across the network.</span></span> <span data-ttu-id="ec211-132">目标服务器不需要客户端身份验证时，最好不发送凭据。</span><span class="sxs-lookup"><span data-stu-id="ec211-132">When the destination server does not require client authentication it is best to not send credentials.</span></span>  
  
 <span data-ttu-id="ec211-133">凭据策略将仅为请求指定的凭据或使用调用<xref:System.Net.WebProxy>对象，指定凭据。</span><span class="sxs-lookup"><span data-stu-id="ec211-133">The credential policy will be called only for requests that specify credentials or use a <xref:System.Net.WebProxy> object that specifies credentials.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec211-134">下面的代码示例演示如何设置凭据策略。</span><span class="sxs-lookup"><span data-stu-id="ec211-134">The following code example demonstrates setting the credential policy.</span></span>  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomTargetNameDictionary">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringDictionary CustomTargetNameDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.StringDictionary CustomTargetNameDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.CustomTargetNameDictionary" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CustomTargetNameDictionary As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::StringDictionary ^ CustomTargetNameDictionary { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomTargetNameDictionary : System.Collections.Specialized.StringDictionary" Usage="System.Net.AuthenticationManager.CustomTargetNameDictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec211-135">获取包含服务主体名称 (SPN) 的字典，这些 SPN 用于在 Kerberos 身份验证期间为使用 <see cref="T:System.Net.WebRequest" /> 及其派生类发出的请求标识主机。</span><span class="sxs-lookup"><span data-stu-id="ec211-135">Gets the dictionary that contains Service Principal Names (SPNs) that are used to identify hosts during Kerberos authentication for requests made using <see cref="T:System.Net.WebRequest" /> and its derived classes.</span></span></summary>
        <value><span data-ttu-id="ec211-136">一个可写的 <see cref="T:System.Collections.Specialized.StringDictionary" />，它包含构成主机信息的键的 SPN 值。</span><span class="sxs-lookup"><span data-stu-id="ec211-136">A writable <see cref="T:System.Collections.Specialized.StringDictionary" /> that contains the SPN values for keys composed of host information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec211-137">SPN 是客户端唯一地标识服务或应用程序进行相互身份验证的服务器上的实例名称。</span><span class="sxs-lookup"><span data-stu-id="ec211-137">An SPN is a name by which a client uniquely identifies an instance of a service or application on a server for purposes of mutual authentication.</span></span> <span data-ttu-id="ec211-138">默认情况下，请求相互身份验证时，你可以通过设置要求它<xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=nameWithType>到<xref:System.Net.Security.AuthenticationLevel.MutualAuthRequired>在请求中。</span><span class="sxs-lookup"><span data-stu-id="ec211-138">Mutual authentication is requested by default, and you can require it by setting <xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=nameWithType> to <xref:System.Net.Security.AuthenticationLevel.MutualAuthRequired> in your request.</span></span>  
  
 <span data-ttu-id="ec211-139">当<xref:System.Net.WebRequest>要求相互身份验证，SPN，为客户端必须提供目标。</span><span class="sxs-lookup"><span data-stu-id="ec211-139">When a <xref:System.Net.WebRequest> requires mutual authentication, the SPN for the destination must be supplied by the client.</span></span> <span data-ttu-id="ec211-140">如果您知道 SPN，你可以将其添加到<xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A>之前发送请求。</span><span class="sxs-lookup"><span data-stu-id="ec211-140">If you know the SPN, you can add it to the <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> before sending the request.</span></span> <span data-ttu-id="ec211-141">如果未向此字典中，添加 SPN 的信息<xref:System.Net.AuthenticationManager>使用<xref:System.Net.WebRequest.RequestUri%2A>方法组合最有可能的 SPN; 但是，这是一个计算的值，可能是不正确。</span><span class="sxs-lookup"><span data-stu-id="ec211-141">If you have not added SPN information to this dictionary, the <xref:System.Net.AuthenticationManager> uses the <xref:System.Net.WebRequest.RequestUri%2A> method to compose the most likely SPN; however, this is a computed value and might be incorrect.</span></span> <span data-ttu-id="ec211-142">如果进行相互身份验证尝试失败，可以检查来确定计算得出的 SPN 的字典。</span><span class="sxs-lookup"><span data-stu-id="ec211-142">If mutual authentication is attempted and fails, you can check the dictionary to determine the computed SPN.</span></span> <span data-ttu-id="ec211-143">如果身份验证协议不支持相互身份验证，不会有 SPN 将输入到字典。</span><span class="sxs-lookup"><span data-stu-id="ec211-143">No SPN is entered into the dictionary if the authentication protocol does not support mutual authentication.</span></span>  
  
 <span data-ttu-id="ec211-144">若要将 SPN 值添加到此字典中，使用<xref:System.Uri.AbsoluteUri%2A>的<xref:System.Net.WebRequest.RequestUri%2A>作为键。</span><span class="sxs-lookup"><span data-stu-id="ec211-144">To add an SPN value to this dictionary, use the <xref:System.Uri.AbsoluteUri%2A> of the <xref:System.Net.WebRequest.RequestUri%2A> as the key.</span></span> <span data-ttu-id="ec211-145">在内部，该密钥将被截断以包括<xref:System.Uri.Scheme%2A>， <xref:System.Uri.Host%2A>，和<xref:System.Uri.Port%2A>如果它不是默认端口。</span><span class="sxs-lookup"><span data-stu-id="ec211-145">Internally, the key is truncated to include the <xref:System.Uri.Scheme%2A>, <xref:System.Uri.Host%2A>, and the <xref:System.Uri.Port%2A> if it is not the default port.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec211-146">访问方法和属性<xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A>需要不受限制<xref:System.Net.WebPermission>。</span><span class="sxs-lookup"><span data-stu-id="ec211-146">Accessing the methods and properties of the <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> requires unrestricted <xref:System.Net.WebPermission>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec211-147">通过代理执行 Kerberos 身份验证时，代理和最终宿主名称需要解析为 SPN。</span><span class="sxs-lookup"><span data-stu-id="ec211-147">When Kerberos authentication is performed through a proxy, both the proxy and the ultimate host name need to be resolved to an SPN.</span></span> <span data-ttu-id="ec211-148">代理名称解析受超时。</span><span class="sxs-lookup"><span data-stu-id="ec211-148">The proxy name resolution is protected by a timeout.</span></span> <span data-ttu-id="ec211-149">Ultimate 的主机名为的 SPN 的解决方法需要 DNS 查找，并没有直接与此操作关联的超时设置。</span><span class="sxs-lookup"><span data-stu-id="ec211-149">Resolution of the ultimate host name to a SPN requires a DNS lookup, and there is no timeout associated directly with this operation.</span></span> <span data-ttu-id="ec211-150">因此同步操作可能需要更长超时。</span><span class="sxs-lookup"><span data-stu-id="ec211-150">Therefore synchronous operations may take longer to timeout.</span></span> <span data-ttu-id="ec211-151">若要解决此问题，向之前发出请求到其 SPN 缓存中添加 ultimate 主机的 URI 前缀。</span><span class="sxs-lookup"><span data-stu-id="ec211-151">To overcome this, add the ultimate host's URI prefix to the SPN cache prior to making requests to it.</span></span>  
  
 <span data-ttu-id="ec211-152">当 <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> 未设置属性时，3.5 SP1 现在默认指定在 NTLM（NT LAN 管理器）身份验证交换中 的 SPN 的请求 URL 中使用的主机名。</span><span class="sxs-lookup"><span data-stu-id="ec211-152">Version 3.5 SP1 now defaults to specifying the host name used in the request URL in the SPN in the NTLM (NT LAN Manager) authentication exchange when the <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> property is not set.</span></span> <span data-ttu-id="ec211-153">在请求 URL 中使用的主机名可能不同于在客户端请求中的 <xref:System.Net.HttpRequestHeader?displayProperty=nameWithType> 中指定的主机标头。</span><span class="sxs-lookup"><span data-stu-id="ec211-153">The host name used in the request URL may be different from the Host header specified in the <xref:System.Net.HttpRequestHeader?displayProperty=nameWithType> in the client request.</span></span> <span data-ttu-id="ec211-154">在请求 URL 中使用的主机名可能不同于服务器的实际主机名、服务器的计算机名、计算机的 IP 地址或环回地址。</span><span class="sxs-lookup"><span data-stu-id="ec211-154">The host name used in the request URL may be different from the actual host name of the server, the machine name of the server, the computer's IP address, or the loopback address.</span></span> <span data-ttu-id="ec211-155">在这些情况下，Windows 将无法通过身份验证请求。</span><span class="sxs-lookup"><span data-stu-id="ec211-155">In these cases, Windows will fail the authentication request.</span></span> <span data-ttu-id="ec211-156">若要解决此问题，可能需要通知使用的主机名的 Windows 客户端在请求 URL 中请求 ("contoso"，例如) 是实际在本地计算机的备用名称。</span><span class="sxs-lookup"><span data-stu-id="ec211-156">To address the issue, you may need to notify Windows that the host name used in the request URL in the client request ("contoso", for example) is actually an alternate name for the local computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec211-157">下面的代码示例演示如何显示的内容<xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec211-157">The following code example demonstrates displaying the contents of the <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A>.</span></span>  
  
 [!code-cpp[NclCredPolicy#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#5)]
 [!code-csharp[NclCredPolicy#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/8bf0b428-5a21-4299-8d6e-bf8251fd978a"><span data-ttu-id="ec211-158">版本 3.5 SP1 中对 HTTPWebRequest 的 NTLM 身份验证的更改</span><span class="sxs-lookup"><span data-stu-id="ec211-158">Changes to NTLM authentication for HTTPWebRequest in Version 3.5 SP1</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public static System.Net.Authorization PreAuthenticate (System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Authorization PreAuthenticate(class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PreAuthenticate (request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Authorization ^ PreAuthenticate(System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberSignature Language="F#" Value="static member PreAuthenticate : System.Net.WebRequest * System.Net.ICredentials -&gt; System.Net.Authorization" Usage="System.Net.AuthenticationManager.PreAuthenticate (request, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="ec211-159">对 Internet 资源的 <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="ec211-159">A <see cref="T:System.Net.WebRequest" /> to an Internet resource.</span></span></param>
        <param name="credentials"><span data-ttu-id="ec211-160">与该请求相关联的 <see cref="T:System.Net.ICredentials" />。</span><span class="sxs-lookup"><span data-stu-id="ec211-160">The <see cref="T:System.Net.ICredentials" /> associated with the request.</span></span></param>
        <summary><span data-ttu-id="ec211-161">预身份验证请求。</span><span class="sxs-lookup"><span data-stu-id="ec211-161">Preauthenticates a request.</span></span></summary>
        <returns><span data-ttu-id="ec211-162">如果可以对请求进行预身份验证，则为 <see cref="T:System.Net.Authorization" /> 类的实例，否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec211-162">An instance of the <see cref="T:System.Net.Authorization" /> class if the request can be preauthenticated; otherwise, <see langword="null" />.</span></span> <span data-ttu-id="ec211-163">如果 <paramref name="credentials" /> 为 <see langword="null" />，则此方法返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec211-163">If <paramref name="credentials" /> is <see langword="null" />, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec211-164">如果身份验证模块可以预身份验证请求，<xref:System.Net.AuthenticationManager.PreAuthenticate%2A>方法将返回身份验证实例并将授权信息发送到提前而不是等待要发出质询的资源服务器。</span><span class="sxs-lookup"><span data-stu-id="ec211-164">If the authentication module can preauthenticate the request, the <xref:System.Net.AuthenticationManager.PreAuthenticate%2A> method returns an Authentication instance and sends the authorization information to the server preemptively instead of waiting for the resource to issue a challenge.</span></span> <span data-ttu-id="ec211-165">此行为在 RFC 2617 的 3.3 节中所述 (HTTP 身份验证： 基本和摘要式访问身份验证)。</span><span class="sxs-lookup"><span data-stu-id="ec211-165">This behavior is outlined in section 3.3 of RFC 2617 (HTTP Authentication: Basic and Digest Access Authentication).</span></span> <span data-ttu-id="ec211-166">支持预身份验证的身份验证模块允许客户端通过避免引起的身份验证质询的额外往返行程提高服务器的效率。</span><span class="sxs-lookup"><span data-stu-id="ec211-166">Authentication modules that support preauthentication allow clients to improve server efficiency by avoiding extra round trips caused by authentication challenges.</span></span>  
  
 <span data-ttu-id="ec211-167">可以进行预身份验证的授权模块请求集<xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=nameWithType>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="ec211-167">Authorization modules that can preauthenticate requests set the <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=nameWithType> property to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec211-168"><paramref name="request" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec211-168"><paramref name="request" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static void Register (System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register(class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Register (authenticationModule As IAuthenticationModule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Register(System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberSignature Language="F#" Value="static member Register : System.Net.IAuthenticationModule -&gt; unit" Usage="System.Net.AuthenticationManager.Register authenticationModule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="authenticationModule"><span data-ttu-id="ec211-169">要注册到该身份验证管理器的 <see cref="T:System.Net.IAuthenticationModule" />。</span><span class="sxs-lookup"><span data-stu-id="ec211-169">The <see cref="T:System.Net.IAuthenticationModule" /> to register with the authentication manager.</span></span></param>
        <summary><span data-ttu-id="ec211-170">向身份验证管理器注册身份验证模块。</span><span class="sxs-lookup"><span data-stu-id="ec211-170">Registers an authentication module with the authentication manager.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec211-171"><xref:System.Net.AuthenticationManager.Register%2A>方法的调用的模块列表的末尾添加身份验证模块<xref:System.Net.AuthenticationManager.Authenticate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ec211-171">The <xref:System.Net.AuthenticationManager.Register%2A> method adds authentication modules to the end of the list of modules called by the <xref:System.Net.AuthenticationManager.Authenticate%2A> method.</span></span> <span data-ttu-id="ec211-172">身份验证模块添加到列表中的顺序调用。</span><span class="sxs-lookup"><span data-stu-id="ec211-172">Authentication modules are called in the order in which they were added to the list.</span></span> <span data-ttu-id="ec211-173">如果模块具有相同<xref:System.Net.IAuthenticationModule.AuthenticationType%2A>是已注册，此方法删除已注册的模块并将添加`authenticationModule`到列表的末尾。</span><span class="sxs-lookup"><span data-stu-id="ec211-173">If a module with the same <xref:System.Net.IAuthenticationModule.AuthenticationType%2A> is already registered, this method removes the registered module and adds `authenticationModule` to the end of the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec211-174">下面的示例向身份验证管理器注册身份验证模块。</span><span class="sxs-lookup"><span data-stu-id="ec211-174">The following example registers an authentication module with the authentication manager.</span></span> <span data-ttu-id="ec211-175">有关完整示例，请参阅<xref:System.Net.AuthenticationManager>类。</span><span class="sxs-lookup"><span data-stu-id="ec211-175">For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.</span></span>  
  
 [!code-cpp[System.Net.Sockets.Authentication#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CPP/custombasicauthentication.cpp#2)]
 [!code-csharp[System.Net.Sockets.Authentication#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CS/custombasicauthentication.cs#2)]
 [!code-vb[System.Net.Sockets.Authentication#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.Authentication/VB/custombasicauthentication.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec211-176"><paramref name="authenticationModule" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec211-176"><paramref name="authenticationModule" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ec211-177">用于执行非托管的代码。</span><span class="sxs-lookup"><span data-stu-id="ec211-177">for executing unmanaged code.</span></span> <span data-ttu-id="ec211-178">关联枚举：<see cref="T:System.Security.Permissions.SecurityPermissionFlag" />。</span><span class="sxs-lookup"><span data-stu-id="ec211-178">Associated enumeration: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="RegisteredModules">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerator RegisteredModules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEnumerator RegisteredModules" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.RegisteredModules" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RegisteredModules As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEnumerator ^ RegisteredModules { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RegisteredModules : System.Collections.IEnumerator" Usage="System.Net.AuthenticationManager.RegisteredModules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec211-179">获取注册到身份验证管理器中的身份验证模块的列表。</span><span class="sxs-lookup"><span data-stu-id="ec211-179">Gets a list of authentication modules that are registered with the authentication manager.</span></span></summary>
        <value><span data-ttu-id="ec211-180"><see cref="T:System.Collections.IEnumerator" />，它启用要被阅读的已注册的身份验证模块。</span><span class="sxs-lookup"><span data-stu-id="ec211-180">An <see cref="T:System.Collections.IEnumerator" /> that enables the registered authentication modules to be read.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec211-181"><xref:System.Net.AuthenticationManager.RegisteredModules%2A>属性提供<xref:System.Collections.IEnumerator>允许列表的实例注册要读取的身份验证模块。</span><span class="sxs-lookup"><span data-stu-id="ec211-181">The <xref:System.Net.AuthenticationManager.RegisteredModules%2A> property provides an <xref:System.Collections.IEnumerator> instance that enables the list of registered authentication modules to be read.</span></span> <span data-ttu-id="ec211-182"><xref:System.Net.AuthenticationManager.Register%2A>方法将模块添加到列表中，和<xref:System.Net.AuthenticationManager.Unregister%2A>方法模块从其移除。</span><span class="sxs-lookup"><span data-stu-id="ec211-182">The <xref:System.Net.AuthenticationManager.Register%2A> method adds modules to the list, and the <xref:System.Net.AuthenticationManager.Unregister%2A> method removes modules from it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec211-183">下面的示例使用<xref:System.Net.AuthenticationManager.RegisteredModules%2A>属性获取的身份验证管理器注册的身份验证模块的列表。</span><span class="sxs-lookup"><span data-stu-id="ec211-183">The following example uses the <xref:System.Net.AuthenticationManager.RegisteredModules%2A> property to get a list of authentication modules that are registered with the authentication manager.</span></span> <span data-ttu-id="ec211-184">有关完整示例，请参阅<xref:System.Net.AuthenticationManager>类。</span><span class="sxs-lookup"><span data-stu-id="ec211-184">For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.</span></span>  
  
 [!code-cpp[System.Net.Authentication#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#8)]
 [!code-csharp[System.Net.Authentication#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#8)]
 [!code-vb[System.Net.Authentication#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Unregister">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec211-185">将身份验证模块从已注册的模块列表中移除。</span><span class="sxs-lookup"><span data-stu-id="ec211-185">Removes authentication modules from the list of registered modules.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (authenticationModule As IAuthenticationModule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberSignature Language="F#" Value="static member Unregister : System.Net.IAuthenticationModule -&gt; unit" Usage="System.Net.AuthenticationManager.Unregister authenticationModule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="authenticationModule"><span data-ttu-id="ec211-186">要从已注册模块列表中移除的 <see cref="T:System.Net.IAuthenticationModule" />。</span><span class="sxs-lookup"><span data-stu-id="ec211-186">The <see cref="T:System.Net.IAuthenticationModule" /> to remove from the list of registered modules.</span></span></param>
        <summary><span data-ttu-id="ec211-187">将指定的身份验证模块从已注册的模块列表中移除。</span><span class="sxs-lookup"><span data-stu-id="ec211-187">Removes the specified authentication module from the list of registered modules.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec211-188"><xref:System.Net.AuthenticationManager.Unregister%2A>方法调用的身份验证模块列表中移除指定的身份验证模块<xref:System.Net.AuthenticationManager.Authenticate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ec211-188">The <xref:System.Net.AuthenticationManager.Unregister%2A> method removes the specified authentication module from the list of authentication modules called by the <xref:System.Net.AuthenticationManager.Authenticate%2A> method.</span></span> <span data-ttu-id="ec211-189">该模块必须已添加到列表使用<xref:System.Net.AuthenticationManager.Register%2A>方法之前可以从列表中删除。</span><span class="sxs-lookup"><span data-stu-id="ec211-189">The module must have been added to the list using the <xref:System.Net.AuthenticationManager.Register%2A> method before it can be removed from the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec211-190">下面的示例使用<xref:System.Net.AuthenticationManager.Unregister%2A>方法以从已注册的模块列表中删除指定的身份验证模块。</span><span class="sxs-lookup"><span data-stu-id="ec211-190">The following example uses the <xref:System.Net.AuthenticationManager.Unregister%2A> method to remove the specified authentication module from the list of registered modules.</span></span> <span data-ttu-id="ec211-191">有关完整示例，请参阅<xref:System.Net.AuthenticationManager>类。</span><span class="sxs-lookup"><span data-stu-id="ec211-191">For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.</span></span>  
  
 [!code-cpp[System.Net.Sockets.Authentication#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CPP/custombasicauthentication.cpp#2)]
 [!code-csharp[System.Net.Sockets.Authentication#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CS/custombasicauthentication.cs#2)]
 [!code-vb[System.Net.Sockets.Authentication#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.Authentication/VB/custombasicauthentication.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec211-192"><paramref name="authenticationModule" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec211-192"><paramref name="authenticationModule" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec211-193">指定的 <see cref="T:System.Net.IAuthenticationModule" /> 没有注册。</span><span class="sxs-lookup"><span data-stu-id="ec211-193">The specified <see cref="T:System.Net.IAuthenticationModule" /> is not registered.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ec211-194">用于执行非托管的代码。</span><span class="sxs-lookup"><span data-stu-id="ec211-194">for executing unmanaged code.</span></span> <span data-ttu-id="ec211-195">关联枚举：<see cref="T:System.Security.Permissions.SecurityPermissionFlag" />。</span><span class="sxs-lookup"><span data-stu-id="ec211-195">Associated enumeration: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (string authenticationScheme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(string authenticationScheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Unregister(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (authenticationScheme As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::String ^ authenticationScheme);" />
      <MemberSignature Language="F#" Value="static member Unregister : string -&gt; unit" Usage="System.Net.AuthenticationManager.Unregister authenticationScheme" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationScheme" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationScheme"><span data-ttu-id="ec211-196">要移除的模块的身份验证方案。</span><span class="sxs-lookup"><span data-stu-id="ec211-196">The authentication scheme of the module to remove.</span></span></param>
        <summary><span data-ttu-id="ec211-197">将具有指定身份验证方案的身份验证模块从已注册模块列表中移除。</span><span class="sxs-lookup"><span data-stu-id="ec211-197">Removes authentication modules with the specified authentication scheme from the list of registered modules.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec211-198"><xref:System.Net.AuthenticationManager.Unregister%2A>方法调用的身份验证模块列表中移除具有指定的身份验证方案的身份验证模块<xref:System.Net.AuthenticationManager.Authenticate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ec211-198">The <xref:System.Net.AuthenticationManager.Unregister%2A> method removes the authentication module with the specified authentication scheme from the list of authentication modules called by the <xref:System.Net.AuthenticationManager.Authenticate%2A> method.</span></span> <span data-ttu-id="ec211-199">该模块必须已添加到列表使用<xref:System.Net.AuthenticationManager.Register%2A>方法之前可以从列表中删除。</span><span class="sxs-lookup"><span data-stu-id="ec211-199">The module must have been added to the list using the <xref:System.Net.AuthenticationManager.Register%2A> method before it can be removed from the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec211-200">下面的示例使用<xref:System.Net.AuthenticationManager.Unregister%2A>方法以从已注册的模块列表中删除具有指定的身份验证方案的身份验证模块。</span><span class="sxs-lookup"><span data-stu-id="ec211-200">The following example uses the <xref:System.Net.AuthenticationManager.Unregister%2A> method to remove an authentication module with the specified authentication scheme from the list of registered modules.</span></span>  
  
 [!code-cpp[AuthenticationManager_UnRegister2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/CPP/authenticationmanager_unregister2.cpp#2)]
 [!code-csharp[AuthenticationManager_UnRegister2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/CS/authenticationmanager_unregister2.cs#2)]
 [!code-vb[AuthenticationManager_UnRegister2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/VB/authenticationmanager_unregister2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec211-201"><paramref name="authenticationScheme" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec211-201"><paramref name="authenticationScheme" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec211-202">此身份验证方案的模块没有注册。</span><span class="sxs-lookup"><span data-stu-id="ec211-202">A module for this authentication scheme is not registered.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ec211-203">用于执行非托管的代码。</span><span class="sxs-lookup"><span data-stu-id="ec211-203">for executing unmanaged code.</span></span> <span data-ttu-id="ec211-204">关联枚举：<see cref="T:System.Security.Permissions.SecurityPermissionFlag" />。</span><span class="sxs-lookup"><span data-stu-id="ec211-204">Associated enumeration: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>