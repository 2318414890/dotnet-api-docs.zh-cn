<Type Name="HttpListenerRequest" FullName="System.Net.HttpListenerRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f61c51e43decaf4c046020886055904c7ddfa5aa" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37643508" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpListenerRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListenerRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerRequest sealed" />
  <TypeSignature Language="F#" Value="type HttpListenerRequest = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="44e82-101">Describes an incoming HTTP request to an <see cref="T:System.Net.HttpListener" /> object.</span>
      <span class="sxs-lookup">
        <span data-stu-id="44e82-101">Describes an incoming HTTP request to an <see cref="T:System.Net.HttpListener" /> object.</span>
      </span>
      <span data-ttu-id="44e82-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="44e82-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-103">当客户端发出请求到统一资源标识符 (URI) 由<xref:System.Net.HttpListener>对象，<xref:System.Net.HttpListener>提供了<xref:System.Net.HttpListenerContext>对象，其中包含有关发件人、 请求和响应发送到客户端的信息。</span><span class="sxs-lookup"><span data-stu-id="44e82-103">When a client makes a request to a Uniform Resource Identifier (URI) handled by an <xref:System.Net.HttpListener> object, the <xref:System.Net.HttpListener> provides a <xref:System.Net.HttpListenerContext> object that contains information about the sender, the request, and the response that is sent to the client.</span></span> <span data-ttu-id="44e82-104"><xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType>属性返回<xref:System.Net.HttpListenerRequest>描述的请求的对象。</span><span class="sxs-lookup"><span data-stu-id="44e82-104">The <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> property returns the <xref:System.Net.HttpListenerRequest> object that describes the request.</span></span>  
  
 <span data-ttu-id="44e82-105"><xref:System.Net.HttpListenerRequest>对象包含有关请求，如请求的信息<xref:System.Net.HttpListenerRequest.HttpMethod%2A>字符串，<xref:System.Net.HttpListenerRequest.UserAgent%2A>字符串，并将请求的正文数据 (请参阅<xref:System.Net.HttpListenerRequest.InputStream%2A>属性)。</span><span class="sxs-lookup"><span data-stu-id="44e82-105">The <xref:System.Net.HttpListenerRequest> object contains information about the request, such as the request <xref:System.Net.HttpListenerRequest.HttpMethod%2A> string, <xref:System.Net.HttpListenerRequest.UserAgent%2A> string, and request body data (see the <xref:System.Net.HttpListenerRequest.InputStream%2A> property).</span></span>  
  
 <span data-ttu-id="44e82-106">若要答复的请求，必须获取关联的响应使用<xref:System.Net.HttpListenerContext.Response%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-106">To reply to the request, you must get the associated response using the <xref:System.Net.HttpListenerContext.Response%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-107">下面的代码示例演示如何接收和响应<xref:System.Net.HttpListenerRequest>。</span><span class="sxs-lookup"><span data-stu-id="44e82-107">The following code example demonstrates how to receive and respond to a <xref:System.Net.HttpListenerRequest>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="T:System.Net.HttpListenerContext" />
    <altmember cref="T:System.Net.HttpListenerResponse" />
  </Docs>
  <Members>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptTypes : string[]" Usage="System.Net.HttpListenerRequest.AcceptTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-108">Gets the MIME types accepted by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-108">Gets the MIME types accepted by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-109">一个<see cref="T:System.String" />数组，其中包含在请求中指定的类型名称<see langword="Accept" />标头或<see langword="null" />如果客户端请求不包含<see langword="Accept" />标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-109">A <see cref="T:System.String" /> array that contains the type names specified in the request's <see langword="Accept" /> header or <see langword="null" /> if the client request did not include an <see langword="Accept" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-110">`Accept`标头是一个以空格分隔多用途 Internet 邮件扩展 (MIME) 类型名称的字符串 (例如， `image/jpeg`)，这表示客户端就已准备好接受并处理在响应中的 MIME 类型。</span><span class="sxs-lookup"><span data-stu-id="44e82-110">The `Accept` header is a string of space-separated Multipurpose Internet Mail Extensions (MIME) type names (for example, `image/jpeg`), which indicate the MIME types that the client is prepared to accept and process in a response.</span></span> <span data-ttu-id="44e82-111">`*/*`条目指示客户端接受任何 MIME 类型。</span><span class="sxs-lookup"><span data-stu-id="44e82-111">The `*/*` entry indicates that the client accepts any MIME type.</span></span> <span data-ttu-id="44e82-112">有关详细的说明`Accept`标头，请参阅 RFC 2616 网址[ https://www.rfc-editor.org ](https://www.rfc-editor.org/)。</span><span class="sxs-lookup"><span data-stu-id="44e82-112">For a detailed description of the `Accept` header, see RFC 2616, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="44e82-113">请求标头的完整列表，请参阅<xref:System.Net.HttpRequestHeader>枚举。</span><span class="sxs-lookup"><span data-stu-id="44e82-113">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-114">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-114">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetClientCertificate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetClientCertificate (AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetClientCertificate(class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetClientCertificate (requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetClientCertificate(AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetClientCertificate : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpListenerRequest.BeginGetClientCertificate (requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requestCallback">
          <span data-ttu-id="44e82-115">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-115">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="44e82-116">A user-defined object that contains information about the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-116">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="44e82-117">This object is passed to the callback delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-117">This object is passed to the callback delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44e82-118">Begins an asynchronous request for the client's X.509 v.3 certificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-118">Begins an asynchronous request for the client's X.509 v.3 certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44e82-119">An <see cref="T:System.IAsyncResult" /> that indicates the status of the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-119">An <see cref="T:System.IAsyncResult" /> that indicates the status of the operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateError">
      <MemberSignature Language="C#" Value="public int ClientCertificateError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ClientCertificateError" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ClientCertificateError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificateError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ClientCertificateError { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificateError : int" Usage="System.Net.HttpListenerRequest.ClientCertificateError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-120">Gets an error code that identifies a problem with the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> provided by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-120">Gets an error code that identifies a problem with the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> provided by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-121">
            <see cref="T:System.Int32" />值，该值包含 Windows 错误代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-121">An <see cref="T:System.Int32" /> value that contains a Windows error code.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-122">此属性包含返回通过安全通道 (Schannel) 安全支持提供程序接口 (SSPI)，用于验证证书的 Windows 错误代码。</span><span class="sxs-lookup"><span data-stu-id="44e82-122">This property contains a Windows error code returned by the Secure Channel (Schannel) Security Support Provider Interface (SSPI), which is used to validate the certificate.</span></span> <span data-ttu-id="44e82-123">有关 Schannel 的 SSPI 支持的详细信息，请参阅"创建安全连接使用 Schannel"中的安全文档[ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)。</span><span class="sxs-lookup"><span data-stu-id="44e82-123">For more information about SSPI support for Schannel, see "Creating a Secure Connection Using Schannel" in the Security documentation at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-124">下面的代码示例检查此属性以确定请求是否包含有效的客户端证书。</span><span class="sxs-lookup"><span data-stu-id="44e82-124">The following code example checks this property to determine whether the request includes a valid client certificate.</span></span>  
  
 [!code-csharp[NCLListener#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#3)]
 [!code-vb[NCLListener#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="44e82-125">The client certificate has not been initialized yet by a call to the <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> or <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> methods  -or -  The operation is still in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-125">The client certificate has not been initialized yet by a call to the <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> or <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> methods  -or -  The operation is still in progress.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : System.Text.Encoding" Usage="System.Net.HttpListenerRequest.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-126">Gets the content encoding that can be used with data sent with the request</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-126">Gets the content encoding that can be used with data sent with the request</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-127">
            <see cref="T:System.Text.Encoding" />适合与中的数据一起使用的对象<see cref="P:System.Net.HttpListenerRequest.InputStream" />属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-127">An <see cref="T:System.Text.Encoding" /> object suitable for use with the data in the <see cref="P:System.Net.HttpListenerRequest.InputStream" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-128"><xref:System.Text.Encoding>对象可用于将字节序列转换为字符集 （代码页） 和为字节序列的字符。</span><span class="sxs-lookup"><span data-stu-id="44e82-128">An <xref:System.Text.Encoding> object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences.</span></span> <span data-ttu-id="44e82-129">此属性使用的字符集值`Content-Type`标头以确定的编码。</span><span class="sxs-lookup"><span data-stu-id="44e82-129">This property uses the charset value from the `Content-Type` header to determine the encoding.</span></span> <span data-ttu-id="44e82-130">如果该信息不可用，此属性返回<xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="44e82-130">If that information is not available, this property returns <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-131">下面的代码示例演示了如何使用<xref:System.Net.HttpListenerRequest.ContentEncoding%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-131">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.ContentEncoding%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentLength64">
      <MemberSignature Language="C#" Value="public long ContentLength64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength64" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentLength64" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ContentLength64 { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength64 : int64" Usage="System.Net.HttpListenerRequest.ContentLength64" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-132">Gets the length of the body data included in the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-132">Gets the length of the body data included in the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-133">请求中的值<see langword="Content-Length" />标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-133">The value from the request's <see langword="Content-Length" /> header.</span>
          </span>
          <span data-ttu-id="44e82-134">如果不知道的内容长度，则此值为-1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-134">This value is -1 if the content length is not known.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-135">`Content-Length`标头表示伴随请求的正文数据的长度，以字节为单位。</span><span class="sxs-lookup"><span data-stu-id="44e82-135">The `Content-Length` header expresses the length, in bytes, of the body data that accompanies the request.</span></span>  
  
 <span data-ttu-id="44e82-136">请求标头的完整列表，请参阅<xref:System.Net.HttpRequestHeader>枚举。</span><span class="sxs-lookup"><span data-stu-id="44e82-136">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-137">下面的代码示例使用<xref:System.Net.HttpListenerRequest.ContentLength64%2A>属性，同时处理的正文数据。</span><span class="sxs-lookup"><span data-stu-id="44e82-137">The following code example uses the <xref:System.Net.HttpListenerRequest.ContentLength64%2A> property while processing body data.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string" Usage="System.Net.HttpListenerRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-138">Gets the MIME type of the body data included in the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-138">Gets the MIME type of the body data included in the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-139">一个<see cref="T:System.String" />，包含请求的文本<see langword="Content-Type" />标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-139">A <see cref="T:System.String" /> that contains the text of the request's <see langword="Content-Type" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-140">如果客户端在请求中包括的正文数据，它声明中的正文数据的多用途 Internet 邮件扩展 (MIME) 类型`Content-Type`标头。</span><span class="sxs-lookup"><span data-stu-id="44e82-140">If a client includes body data in a request, it declares the Multipurpose Internet Mail Extensions (MIME) type of the body data in the `Content-Type` header.</span></span> <span data-ttu-id="44e82-141">例如，从 Web 窗体使用返回的数据的默认 MIME 类型`POST`方法是`application/x-www-form-urlencoded`。</span><span class="sxs-lookup"><span data-stu-id="44e82-141">For example, the default MIME type of data returned from a Web form using the `POST` method is `application/x-www-form-urlencoded`.</span></span>  
  
 <span data-ttu-id="44e82-142">请求标头的完整列表，请参阅<xref:System.Net.HttpRequestHeader>枚举和 RFC 2616 网址[ https://www.rfc-editor.org ](https://www.rfc-editor.org/)。</span><span class="sxs-lookup"><span data-stu-id="44e82-142">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration and RFC 2616, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="44e82-143"><xref:System.Net.HttpListenerRequest.ContentType%2A>为 null 时没有任何`Content-Type`请求标头中的。</span><span class="sxs-lookup"><span data-stu-id="44e82-143">The <xref:System.Net.HttpListenerRequest.ContentType%2A> is null when there is no `Content-Type` header in the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-144">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-144">The following code example demonstrates how to use this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As CookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieCollection ^ Cookies { System::Net::CookieCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Net.CookieCollection" Usage="System.Net.HttpListenerRequest.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-145">Gets the cookies sent with the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-145">Gets the cookies sent with the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-146">一个<see cref="T:System.Net.CookieCollection" />，其中包含与请求一起发送的 cookie。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-146">A <see cref="T:System.Net.CookieCollection" /> that contains cookies that accompany the request.</span>
          </span>
          <span data-ttu-id="44e82-147">如果请求不包含 cookie，则此属性返回一个空集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-147">This property returns an empty collection if the request does not contain cookies.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-148">Cookie 是名称/值存储在本地 （客户端） 计算机的 Web 服务器从文本数据。</span><span class="sxs-lookup"><span data-stu-id="44e82-148">A cookie is name/value text data from a Web server that is stored on the local (client) computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-149">下面的代码示例显示与请求一起发送的 cookie 的值。</span><span class="sxs-lookup"><span data-stu-id="44e82-149">The following code example displays the values of cookies sent with the request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#18](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="EndGetClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetClientCertificate (asyncResult As IAsyncResult) As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2 ^ EndGetClientCertificate(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndGetClientCertificate : IAsyncResult -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="httpListenerRequest.EndGetClientCertificate asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="44e82-150">The pending request for the certificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-150">The pending request for the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44e82-151">Ends an asynchronous request for the client's X.509 v.3 certificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-151">Ends an asynchronous request for the client's X.509 v.3 certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44e82-152">The <see cref="T:System.IAsyncResult" /> object that is returned when the operation started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-152">The <see cref="T:System.IAsyncResult" /> object that is returned when the operation started.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44e82-153">
            <paramref name="asyncResult" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-153">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="44e82-154">
            <paramref name="asyncResult" /> was not obtained by calling <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e." /></span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-154">
              <paramref name="asyncResult" /> was not obtained by calling <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e." /></span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="44e82-155">This method was already called for the operation identified by <paramref name="asyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-155">This method was already called for the operation identified by <paramref name="asyncResult" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.GetClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientCertificate () As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2 ^ GetClientCertificate();" />
      <MemberSignature Language="F#" Value="member this.GetClientCertificate : unit -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="httpListenerRequest.GetClientCertificate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="44e82-156">Retrieves the client's X.509 v.3 certificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-156">Retrieves the client's X.509 v.3 certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44e82-157">A <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-157">A <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-158">此方法进行阻止，直到检索到证书。</span><span class="sxs-lookup"><span data-stu-id="44e82-158">This method blocks until the certificate is retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="44e82-159">A call to this method to retrieve the client's X.509 v.3 certificate is in progress and therefore another call to this method cannot be made.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-159">A call to this method to retrieve the client's X.509 v.3 certificate is in progress and therefore another call to this method cannot be made.</span>
          </span>
        </exception>
        <altmember cref="N:System.Security.Cryptography.X509Certificates" />
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt; GetClientCertificateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Security.Cryptography.X509Certificates.X509Certificate2&gt; GetClientCertificateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.GetClientCertificateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientCertificateAsync () As Task(Of X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ GetClientCertificateAsync();" />
      <MemberSignature Language="F#" Value="member this.GetClientCertificateAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;" Usage="httpListenerRequest.GetClientCertificateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="44e82-160">Retrieves the client's X.509 v.3 certificate as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-160">Retrieves the client's X.509 v.3 certificate as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44e82-161">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-161">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="44e82-162">The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-162">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="44e82-163">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-163">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-164">不会阻止此操作。</span><span class="sxs-lookup"><span data-stu-id="44e82-164">This operation will not block.</span></span> <span data-ttu-id="44e82-165">返回<xref:System.Threading.Tasks.Task%601>对象完成后，将检索的证书。</span><span class="sxs-lookup"><span data-stu-id="44e82-165">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the certificate has been retrieved.</span></span>  
  
 <span data-ttu-id="44e82-166">如果正在对此方法的调用以检索客户端的 X.509 v.3 证书，则无法进行另一个调用此方法。</span><span class="sxs-lookup"><span data-stu-id="44e82-166">If a call to this method to retrieve the client's X.509 v.3 certificate is in progress, then another call to this method cannot be made.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Security.Cryptography.X509Certificates" />
      </Docs>
    </Member>
    <Member MemberName="HasEntityBody">
      <MemberSignature Language="C#" Value="public bool HasEntityBody { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEntityBody" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.HasEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasEntityBody As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasEntityBody { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasEntityBody : bool" Usage="System.Net.HttpListenerRequest.HasEntityBody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-167">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request has associated body data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-167">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request has associated body data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-168">
            <see langword="true" /> 如果请求有关联的正文数据;，否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-168">
              <see langword="true" /> if the request has associated body data; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-169">将数据发送到服务器使用的请求`POST`方法，例如，应具有一个实体正文。</span><span class="sxs-lookup"><span data-stu-id="44e82-169">A request that sends data to the server using the `POST` method, for example, should have an entity body.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-170">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-170">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Net.HttpListenerRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-171">Gets the collection of header name/value pairs sent in the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-171">Gets the collection of header name/value pairs sent in the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-172">一个<see cref="T:System.Net.WebHeaderCollection" />，其中包含请求中包含的 HTTP 标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-172">A <see cref="T:System.Net.WebHeaderCollection" /> that contains the HTTP headers included in the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-173">请求标头包含元数据信息。</span><span class="sxs-lookup"><span data-stu-id="44e82-173">Request headers contain metadata information.</span></span> <span data-ttu-id="44e82-174">例如，标头可以包含客户端与服务器的资源的统一资源标识符 (URI)、 用户代理的标识受雇于客户端，并可接受的 MIME 类型的响应正文中的数据。</span><span class="sxs-lookup"><span data-stu-id="44e82-174">For example, headers can contain the Uniform Resource Identifier (URI) of the resource that referred the client to the server, the identity of the user agent employed by the client, and the acceptable MIME types for data in the response body.</span></span>  
  
 <span data-ttu-id="44e82-175">请求标头的完整列表，请参阅<xref:System.Net.HttpRequestHeader>枚举。</span><span class="sxs-lookup"><span data-stu-id="44e82-175">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-176">下面的代码示例显示中的所有信息给定<xref:System.Net.WebHeaderCollection>对象。</span><span class="sxs-lookup"><span data-stu-id="44e82-176">The following code example displays all the information in a given <xref:System.Net.WebHeaderCollection> object.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpMethod : string" Usage="System.Net.HttpListenerRequest.HttpMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-177">Gets the HTTP method specified by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-177">Gets the HTTP method specified by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-178">一个<see cref="T:System.String" />包含请求中使用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-178">A <see cref="T:System.String" /> that contains the method used in the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-179">HTTP 方法通常是 GET 或 POST，具体取决于客户端所需的操作。</span><span class="sxs-lookup"><span data-stu-id="44e82-179">The HTTP method is typically GET or POST, depending on the action desired by the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-180">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-180">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="System.Net.HttpListenerRequest.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-181">Gets a stream that contains the body data sent by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-181">Gets a stream that contains the body data sent by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-182">可读<see cref="T:System.IO.Stream" />对象，其中包含请求的正文中的客户端发送的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-182">A readable <see cref="T:System.IO.Stream" /> object that contains the bytes sent by the client in the body of the request.</span>
          </span>
          <span data-ttu-id="44e82-183">此属性返回<see cref="F:System.IO.Stream.Null" />如果随请求不发送任何数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-183">This property returns <see cref="F:System.IO.Stream.Null" /> if no data is sent with the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-184">如果客户端会将数据传输 (例如，使用 HTTP`POST`方法)，此方法返回的流包含的数据。</span><span class="sxs-lookup"><span data-stu-id="44e82-184">If the client transmits data (for example, using the HTTP `POST` method), the stream returned by this method contains that data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="44e82-185">关闭请求不会关闭此属性返回的流。</span><span class="sxs-lookup"><span data-stu-id="44e82-185">Closing the request does not close the stream returned by this property.</span></span> <span data-ttu-id="44e82-186">当不再需要该流时，你应通过调用关闭它<xref:System.IO.Stream.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="44e82-186">When you no longer need the stream, you should close it by calling the <xref:System.IO.Stream.Close%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-187">下面的代码示例演示如何使用此属性读取与请求一起发送的数据。</span><span class="sxs-lookup"><span data-stu-id="44e82-187">The following code example demonstrates using this property to read the data sent with a request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="44e82-188">
            <para>在应用程序中启用网络跟踪时，此成员将输出跟踪信息。有关详细信息，请参阅 [在.NET Framework](~/docs/framework/network-programming/network-tracing.md) 网络跟踪。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-188">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.HttpListenerRequest.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Always returns false")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-189">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client sending this request is authenticated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-189">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client sending this request is authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-190">
            <see langword="true" /> 如果客户端进行身份验证否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-190">
              <see langword="true" /> if the client was authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-191">客户端身份验证使用你的应用程序请求<xref:System.Net.HttpListener.AuthenticationSchemes%2A>或<xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-191">Your application requests client authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> or <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.</span></span>  
  
 <span data-ttu-id="44e82-192">你的应用程序不会收到<xref:System.Net.HttpListenerContext>来自不成功的身份验证的客户端请求。</span><span class="sxs-lookup"><span data-stu-id="44e82-192">Your application does not receive an <xref:System.Net.HttpListenerContext> for requests from clients that are not successfully authenticated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-193">下面的代码示例显示的值<xref:System.Net.HttpListenerRequest.IsAuthenticated%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-193">The following code example displays the value of the <xref:System.Net.HttpListenerRequest.IsAuthenticated%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocal : bool" Usage="System.Net.HttpListenerRequest.IsLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-194">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request is sent from the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-194">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request is sent from the local computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-195">
            <see langword="true" /> 如果同一台计算机上发出的请求<see cref="T:System.Net.HttpListener" />对象，提供请求; 否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-195">
              <see langword="true" /> if the request originated on the same computer as the <see cref="T:System.Net.HttpListener" /> object that provided the request; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-196">应用程序可以使用此属性以执行特殊处理请求时从本地计算机。</span><span class="sxs-lookup"><span data-stu-id="44e82-196">Applications can use this property to perform special processing when requests are from the local computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-197">下面的代码示例演示了如何使用<xref:System.Net.HttpListenerRequest.IsLocal%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-197">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsLocal%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecureConnection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecureConnection : bool" Usage="System.Net.HttpListenerRequest.IsSecureConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-198">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection used to send the request is using the Secure Sockets Layer (SSL) protocol.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-198">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection used to send the request is using the Secure Sockets Layer (SSL) protocol.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-199">
            <see langword="true" /> 如果 TCP 连接使用 SSL;否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-199">
              <see langword="true" /> if the TCP connection is using SSL; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-200">若要请求的安全连接，客户端请求，请使用<xref:System.Uri.UriSchemeHttps>而不是<xref:System.Uri.UriSchemeHttp>。</span><span class="sxs-lookup"><span data-stu-id="44e82-200">To request a secure connection, the client request uses <xref:System.Uri.UriSchemeHttps> instead of <xref:System.Uri.UriSchemeHttp>.</span></span> <span data-ttu-id="44e82-201">如果无法建立连接，使用 SSL，则客户端收到<xref:System.Net.WebException>提供有关错误的信息。</span><span class="sxs-lookup"><span data-stu-id="44e82-201">If the connection cannot be established using SSL, the client receives a <xref:System.Net.WebException> that provides information about the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-202">下面的代码示例演示了如何使用<xref:System.Net.HttpListenerRequest.IsSecureConnection%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-202">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsSecureConnection%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequest">
      <MemberSignature Language="C#" Value="public bool IsWebSocketRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequest" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsWebSocketRequest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWebSocketRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWebSocketRequest { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWebSocketRequest : bool" Usage="System.Net.HttpListenerRequest.IsWebSocketRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-203">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection was  a WebSocket request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-203">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection was  a WebSocket request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-204">返回 <see cref="T:System.Boolean" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-204">Returns <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="44e82-205">
            <see langword="true" /> 如果 TCP 连接是 WebSocket 请求;否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-205">
              <see langword="true" /> if the TCP connection is a WebSocket request; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool" Usage="System.Net.HttpListenerRequest.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-206">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client requests a persistent connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-206">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client requests a persistent connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-207">
            <see langword="true" /> 如果连接应保持打开状态;否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-207">
              <see langword="true" /> if the connection should be kept open; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-208">如果 HTTP 客户端和服务器预期在短时间内多次交换数据，持续性连接允许用户以避免打开和关闭每条消息的 TCP 连接所需的开销，从而加快其通信。</span><span class="sxs-lookup"><span data-stu-id="44e82-208">If an HTTP client and server expect to exchange data multiple times in a short time period, a persistent connection speeds up their communications by allowing them to avoid the overhead required to open and close a TCP connection for each message.</span></span> <span data-ttu-id="44e82-209">此属性的默认值是客户端可以使用 HTTP/1.1， `true`。</span><span class="sxs-lookup"><span data-stu-id="44e82-209">For clients using HTTP/1.1, the default value for this property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-210">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-210">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="LocalEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint LocalEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint LocalEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.LocalEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalEndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ LocalEndPoint { System::Net::IPEndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalEndPoint : System.Net.IPEndPoint" Usage="System.Net.HttpListenerRequest.LocalEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-211">Get the server IP address and port number to which the request is directed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-211">Get the server IP address and port number to which the request is directed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-212">
            <see cref="T:System.Net.IPEndPoint" />表示将请求发送到的 IP 地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-212">An <see cref="T:System.Net.IPEndPoint" /> that represents the IP address that the request is sent to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-213">当你想要对基于对它们进行寻址的方式请求做出响应时，此属性很有用。</span><span class="sxs-lookup"><span data-stu-id="44e82-213">This property is useful when you want to respond to requests based on the way they are addressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-214">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-214">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public Version ProtocolVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ProtocolVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtocolVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ProtocolVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProtocolVersion : Version" Usage="System.Net.HttpListenerRequest.ProtocolVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-215">Gets the HTTP version used by the requesting client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-215">Gets the HTTP version used by the requesting client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-216">一个<see cref="T:System.Version" />标识的 HTTP 客户端的版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-216">A <see cref="T:System.Version" /> that identifies the client's version of HTTP.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-217">可在文档中指定不同的 HTTP 版本的功能[ https://www.rfc-editor.org ](https://www.rfc-editor.org/)。</span><span class="sxs-lookup"><span data-stu-id="44e82-217">The capabilities of different HTTP versions are specified in the documents available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-218">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-218">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection" Usage="System.Net.HttpListenerRequest.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-219">Gets the query string included in the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-219">Gets the query string included in the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-220">一个<see cref="T:System.Collections.Specialized.NameValueCollection" />对象，其中包含请求中包含的查询数据<see cref="P:System.Net.HttpListenerRequest.Url" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-220">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the query data included in the request <see cref="P:System.Net.HttpListenerRequest.Url" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-221">在 URL 中，查询信息由问号 （？） 分隔的路径信息。</span><span class="sxs-lookup"><span data-stu-id="44e82-221">In a URL, the query information is separated from the path information by a question mark (?).</span></span> <span data-ttu-id="44e82-222">由等号 （=） 分隔名称/值对。</span><span class="sxs-lookup"><span data-stu-id="44e82-222">Name/value pairs are separated by an equals sign (=).</span></span> <span data-ttu-id="44e82-223">若要访问作为单个字符串的查询数据，获取<xref:System.Uri.Query%2A>属性值从<xref:System.Uri>对象返回的<xref:System.Net.HttpListenerRequest.Url%2A>。</span><span class="sxs-lookup"><span data-stu-id="44e82-223">To access the query data as a single string, get the <xref:System.Uri.Query%2A> property value from the <xref:System.Uri> object returned by <xref:System.Net.HttpListenerRequest.Url%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="44e82-224">查询而不需要一个等号 (示例： [ http://www.contoso.com/query.htm?Name ](http://www.contoso.com/query.htm?Name) ) 添加到`null`中的键<xref:System.Collections.Specialized.NameValueCollection>。</span><span class="sxs-lookup"><span data-stu-id="44e82-224">Queries without an equal sign (example: [http://www.contoso.com/query.htm?Name](http://www.contoso.com/query.htm?Name) ) are added to the `null` key in the <xref:System.Collections.Specialized.NameValueCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-225">下面的代码示例演示了如何使用<xref:System.Net.HttpListenerRequest.QueryString%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-225">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.QueryString%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawUrl : string" Usage="System.Net.HttpListenerRequest.RawUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-226">Gets the URL information (without the host and port) requested by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-226">Gets the URL information (without the host and port) requested by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-227">一个<see cref="T:System.String" />，其中包含此请求的原始 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-227">A <see cref="T:System.String" /> that contains the raw URL for this request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-228">原始 URL 定义为以下域信息的 URL 的一部分。</span><span class="sxs-lookup"><span data-stu-id="44e82-228">The raw URL is defined as the part of the URL following the domain information.</span></span> <span data-ttu-id="44e82-229">URL 字符串中`http://www.contoso.com/articles/recent.aspx`的原始 URL 是`/articles/recent.aspx`。</span><span class="sxs-lookup"><span data-stu-id="44e82-229">In the URL string `http://www.contoso.com/articles/recent.aspx`, the raw URL is `/articles/recent.aspx`.</span></span> <span data-ttu-id="44e82-230">原始 URL 包括查询字符串中，如果存在。</span><span class="sxs-lookup"><span data-stu-id="44e82-230">The raw URL includes the query string, if present.</span></span>  
  
 <span data-ttu-id="44e82-231">若要获取的主机和端口信息，请使用<xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-231">To obtain the host and port information, use the <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-232">下面的代码示例演示了如何使用<xref:System.Net.HttpListenerRequest.RawUrl%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-232">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RemoteEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint RemoteEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint RemoteEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RemoteEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteEndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ RemoteEndPoint { System::Net::IPEndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteEndPoint : System.Net.IPEndPoint" Usage="System.Net.HttpListenerRequest.RemoteEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-233">Gets the client IP address and port number from which the request originated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-233">Gets the client IP address and port number from which the request originated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-234">
            <see cref="T:System.Net.IPEndPoint" />表示发出请求的 IP 地址和端口号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-234">An <see cref="T:System.Net.IPEndPoint" /> that represents the IP address and port number from which the request originated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="44e82-235">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-235">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RequestTraceIdentifier">
      <MemberSignature Language="C#" Value="public Guid RequestTraceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid RequestTraceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RequestTraceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestTraceIdentifier As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid RequestTraceIdentifier { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestTraceIdentifier : Guid" Usage="System.Net.HttpListenerRequest.RequestTraceIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Always returns Guid.Empty")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-236">Gets the request identifier of the incoming HTTP request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-236">Gets the request identifier of the incoming HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-237">一个<see cref="T:System.Guid" />对象，其中包含 HTTP 请求的标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-237">A <see cref="T:System.Guid" /> object that contains the identifier of the HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public string ServiceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string" Usage="System.Net.HttpListenerRequest.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-238">Gets the Service Provider Name (SPN) that the client sent on the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-238">Gets the Service Provider Name (SPN) that the client sent on the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-239">一个<see cref="T:System.String" />，其中包含在请求上发送的客户端的 SPN。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-239">A <see cref="T:System.String" /> that contains the SPN the client sent on the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-240">应用程序可以使用<xref:System.Net.HttpListenerRequest.ServiceName%2A>属性来执行自定义服务提供名称 (SPN) 验证。</span><span class="sxs-lookup"><span data-stu-id="44e82-240">An application could use the <xref:System.Net.HttpListenerRequest.ServiceName%2A> property to perform custom Service Provide Name (SPN) validation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="P:System.Net.HttpListenerRequest.TransportContext" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="TransportContext">
      <MemberSignature Language="C#" Value="public System.Net.TransportContext TransportContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.TransportContext TransportContext" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.TransportContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransportContext As TransportContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::TransportContext ^ TransportContext { System::Net::TransportContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransportContext : System.Net.TransportContext" Usage="System.Net.HttpListenerRequest.TransportContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.TransportContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-241">Gets the <see cref="T:System.Net.TransportContext" /> for the client request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-241">Gets the <see cref="T:System.Net.TransportContext" /> for the client request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-242">一个<see cref="T:System.Net.TransportContext" />为客户端请求的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-242">A <see cref="T:System.Net.TransportContext" /> object for the client request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-243"><xref:System.Net.TransportContext>属性可以用于检索的通道绑定令牌 (CBT)<xref:System.Net.HttpListenerRequest>这是否使用 HTTPS 发送。</span><span class="sxs-lookup"><span data-stu-id="44e82-243">The <xref:System.Net.TransportContext> property can be used to retrieve the channel binding token (CBT) for an <xref:System.Net.HttpListenerRequest> which was sent using HTTPS.</span></span>  
  
 <span data-ttu-id="44e82-244">应用程序可以使用<xref:System.Net.TransportContext>属性来执行自定义身份验证，通过调用到本机 Win32 [AcceptSecurityContext](http://go.microsoft.com/fwlink/?LinkId=147021)函数。</span><span class="sxs-lookup"><span data-stu-id="44e82-244">An application could use the <xref:System.Net.TransportContext> property to perform custom authentication using calls to the native Win32 [AcceptSecurityContext](http://go.microsoft.com/fwlink/?LinkId=147021) function.</span></span>  
  
 <span data-ttu-id="44e82-245">如果应用程序尝试检索的通道绑定令牌 (CBT) 从这<xref:System.Net.HttpListenerRequest.TransportContext%2A>属性使用<xref:System.Net.TransportContext.GetChannelBinding%2A>方法并<xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind>不是<xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>，然后<xref:System.Net.HttpListenerRequest>将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="44e82-245">If an application attempts to retrieve the channel binding token (CBT) from this <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="44e82-246"><xref:System.Net.HttpListenerRequest>重写<xref:System.Net.TransportContext.GetChannelBinding%2A>使用内部实现的方法。</span><span class="sxs-lookup"><span data-stu-id="44e82-246">The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="P:System.Net.HttpListenerRequest.ServiceName" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="System.Net.HttpListenerRequest.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-247">Gets the <see cref="T:System.Uri" /> object requested by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-247">Gets the <see cref="T:System.Uri" /> object requested by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-248">一个<see cref="T:System.Uri" />对象，用于标识客户端请求的资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-248">A <see cref="T:System.Uri" /> object that identifies the resource requested by the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-249"><xref:System.Net.HttpListenerRequest.Url%2A>属性可以获取中提供的所有信息<xref:System.Uri>对象。</span><span class="sxs-lookup"><span data-stu-id="44e82-249">The <xref:System.Net.HttpListenerRequest.Url%2A> property allows you to obtain all the information available from a <xref:System.Uri> object.</span></span> <span data-ttu-id="44e82-250">如果您需要了解仅 URI 请求的原始文本，请考虑使用<xref:System.Net.HttpListenerRequest.RawUrl%2A>属性改为。</span><span class="sxs-lookup"><span data-stu-id="44e82-250">If you need to know only the raw text of the URI request, consider using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property instead.</span></span>  
  
 <span data-ttu-id="44e82-251"><xref:System.Net.HttpListenerRequest.Url%2A>属性为 null 如果<xref:System.Uri>从客户端无法分析。</span><span class="sxs-lookup"><span data-stu-id="44e82-251">The <xref:System.Net.HttpListenerRequest.Url%2A> property is null if the <xref:System.Uri> from the client could not be parsed.</span></span>  
  
 <span data-ttu-id="44e82-252"><xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>属性指示如果<xref:System.Net.HttpListener>使用未经转义的原始 URI，而不是经过转换的 URI 其中任何百分比编码值转换和执行其他任何规范化步骤。</span><span class="sxs-lookup"><span data-stu-id="44e82-252">The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.</span></span>  
  
 <span data-ttu-id="44e82-253">当<xref:System.Net.HttpListener>实例收到的请求通过`http.sys`服务，它创建的提供的 URI 字符串实例`http.sys`，并将其作为公开<xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-253">When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="44e82-254">`http.sys`服务公开两个请求的 URI 字符串：</span><span class="sxs-lookup"><span data-stu-id="44e82-254">The `http.sys` service exposes two request URI strings:</span></span>  
  
-   <span data-ttu-id="44e82-255">原始 URI</span><span class="sxs-lookup"><span data-stu-id="44e82-255">Raw URI</span></span>  
  
-   <span data-ttu-id="44e82-256">经过转换的 URI</span><span class="sxs-lookup"><span data-stu-id="44e82-256">Converted URI</span></span>  
  
 <span data-ttu-id="44e82-257">原始 URI 是<xref:System.Uri?displayProperty=nameWithType>HTTP 请求的请求行中提供：</span><span class="sxs-lookup"><span data-stu-id="44e82-257">The raw URI is the <xref:System.Uri?displayProperty=nameWithType> provided in the request line of a HTTP request:</span></span>  
  
 `GET /path/`  
  
 `Host: www.contoso.com`  
  
 <span data-ttu-id="44e82-258">提供的原始 URI`http.sys`前面所述的请求是"/ 路径 /"。</span><span class="sxs-lookup"><span data-stu-id="44e82-258">The raw URI provided by `http.sys` for the request mentioned above, is "/path/".</span></span> <span data-ttu-id="44e82-259">这表示在通过网络发送以下 HTTP 谓词字符串。</span><span class="sxs-lookup"><span data-stu-id="44e82-259">This represents the string following the HTTP verb as it was sent over the network.</span></span>  
  
 <span data-ttu-id="44e82-260">`http.sys`服务从使用 HTTP 请求行中提供的 URI 的请求中提供的信息创建经过转换的 URI，并要确定源服务器请求的主机标头应转发到。</span><span class="sxs-lookup"><span data-stu-id="44e82-260">The `http.sys` service creates a converted URI from the information provided in the request using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to.</span></span> <span data-ttu-id="44e82-261">这是通过比较已注册的 URI 前缀的一组与请求中的信息。</span><span class="sxs-lookup"><span data-stu-id="44e82-261">This is done by comparing the information from the request with a set of registered URI prefixes.</span></span> <span data-ttu-id="44e82-262">以便可以对这些值进行比较，需要完成一些规范化到请求。</span><span class="sxs-lookup"><span data-stu-id="44e82-262">In order to be able to compare those values, some normalization to the request needs to be done.</span></span> <span data-ttu-id="44e82-263">对于以上经过转换的 URI 示例将按如下所示：</span><span class="sxs-lookup"><span data-stu-id="44e82-263">For the sample above the converted URI would be as follows:</span></span>  
  
 `http://www.contoso.com/path/`  
  
 <span data-ttu-id="44e82-264">`http.sys`服务结合<xref:System.Uri.Host%2A?displayProperty=nameWithType>属性值和要创建一个已转换的 URI 的请求行中的字符串。</span><span class="sxs-lookup"><span data-stu-id="44e82-264">The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=nameWithType> property value and the string in the request line to create a converted URI.</span></span> <span data-ttu-id="44e82-265">此外，`http.sys`和<xref:System.Uri?displayProperty=nameWithType>类还执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="44e82-265">In addition, `http.sys` and the <xref:System.Uri?displayProperty=nameWithType> class also do the following:</span></span>  
  
-   <span data-ttu-id="44e82-266">取消转义所有百分比编码的值。</span><span class="sxs-lookup"><span data-stu-id="44e82-266">Un-escapes all percent encoded values.</span></span>  
  
-   <span data-ttu-id="44e82-267">将百分比编码为 utf-16 字符表示形式的非 ASCII 字符。</span><span class="sxs-lookup"><span data-stu-id="44e82-267">Converts percent-encoded non-ASCII characters into a UTF-16 character representation.</span></span> <span data-ttu-id="44e82-268">请注意，Unicode 字符 （Unicode 编码使用 %uxxxx 格式） 以及支持 utf-8 和 ANSI/DBCS 字符。</span><span class="sxs-lookup"><span data-stu-id="44e82-268">Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).</span></span>  
  
-   <span data-ttu-id="44e82-269">执行其他规范化步骤，如路径压缩。</span><span class="sxs-lookup"><span data-stu-id="44e82-269">Executes other normalization steps, like path compression.</span></span>  
  
 <span data-ttu-id="44e82-270">请求不包含有关使用百分比编码值的编码的任何信息，因为它可能无法确定正确的编码只是通过分析百分比编码值。</span><span class="sxs-lookup"><span data-stu-id="44e82-270">Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.</span></span>  
  
 <span data-ttu-id="44e82-271">因此`http.sys`提供了用于修改该过程的两个注册表项：</span><span class="sxs-lookup"><span data-stu-id="44e82-271">Therefore `http.sys` provides two registry keys for modifying the process:</span></span>  
  
|<span data-ttu-id="44e82-272">注册表项</span><span class="sxs-lookup"><span data-stu-id="44e82-272">Registry Key</span></span>|<span data-ttu-id="44e82-273">默认值</span><span class="sxs-lookup"><span data-stu-id="44e82-273">Default Value</span></span>|<span data-ttu-id="44e82-274">描述</span><span class="sxs-lookup"><span data-stu-id="44e82-274">Description</span></span>|  
|------------------|-------------------|-----------------|  
|<span data-ttu-id="44e82-275">EnableNonUTF8</span><span class="sxs-lookup"><span data-stu-id="44e82-275">EnableNonUTF8</span></span>|<span data-ttu-id="44e82-276">1</span><span class="sxs-lookup"><span data-stu-id="44e82-276">1</span></span>|<span data-ttu-id="44e82-277">如果为零，`http.sys`接受只有 UTF-8 编码的 Url。</span><span class="sxs-lookup"><span data-stu-id="44e82-277">If zero, `http.sys` accepts only UTF-8-encoded URLs.</span></span><br /><br /> <span data-ttu-id="44e82-278">如果非零`http.sys`还接受请求中的 ANSI 编码或 DBCS 编码 Url。</span><span class="sxs-lookup"><span data-stu-id="44e82-278">If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.</span></span>|  
|<span data-ttu-id="44e82-279">FavorUTF8</span><span class="sxs-lookup"><span data-stu-id="44e82-279">FavorUTF8</span></span>|<span data-ttu-id="44e82-280">1</span><span class="sxs-lookup"><span data-stu-id="44e82-280">1</span></span>|<span data-ttu-id="44e82-281">如果非零`http.sys`始终尝试解码 URL 为 utf-8 第一次; 如果该转换失败，并且 EnableNonUTF8 为非零，Http.sys 然后尝试将其解码为 ANSI 或者与 DBCS。</span><span class="sxs-lookup"><span data-stu-id="44e82-281">If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.</span></span><br /><br /> <span data-ttu-id="44e82-282">如果为零 （和 EnableNonUTF8 为非零），`http.sys`尝试对其进行解码为 ANSI 或者与 DBCS; 如果该操作不成功，它会尝试 utf-8 转换。</span><span class="sxs-lookup"><span data-stu-id="44e82-282">If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.</span></span>|  
  
 <span data-ttu-id="44e82-283">当<xref:System.Net.HttpListener>收到请求时，它使用从经过转换的 URI`http.sys`作为输入到<xref:System.Net.HttpListenerRequest.Url%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-283">When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 <span data-ttu-id="44e82-284">没有需要在 Uri 中支持除字符和数字的字符。</span><span class="sxs-lookup"><span data-stu-id="44e82-284">There is a need for supporting characters besides characters and numbers in URIs.</span></span> <span data-ttu-id="44e82-285">例如，以下 URI，用于检索客户的客户信息数字"1/3812":</span><span class="sxs-lookup"><span data-stu-id="44e82-285">An example is the following URI, which is used to retrieve customer information for customer number "1/3812":</span></span>  
  
 `http://www.contoso.com/Customer('1%2F3812')/`  
  
 <span data-ttu-id="44e82-286">请注意 Uri (%2f) 中的百分号编码斜杠。</span><span class="sxs-lookup"><span data-stu-id="44e82-286">Note the percent-encoded slash in the Uri (%2F).</span></span> <span data-ttu-id="44e82-287">这是有必要，请因为在这种情况下包含斜杠字符表示数据而不是路径分隔符。</span><span class="sxs-lookup"><span data-stu-id="44e82-287">This is necessary, since in this case the slash character represents data and not a path delimiter.</span></span>  
  
 <span data-ttu-id="44e82-288">将字符串传递给 Uri 构造函数将导致以下 URI:</span><span class="sxs-lookup"><span data-stu-id="44e82-288">Passing the string to Uri constructor will lead to the following URI:</span></span>  
  
 `http://www.contoso.com/Customer('1/3812')/`  
  
 <span data-ttu-id="44e82-289">将路径拆分为其段将导致以下元素：</span><span class="sxs-lookup"><span data-stu-id="44e82-289">Splitting the path into its segments would result in the following elements:</span></span>  
  
 `Customer('1`  
  
 `3812')`  
  
 <span data-ttu-id="44e82-290">这不是请求的发件人的意图。</span><span class="sxs-lookup"><span data-stu-id="44e82-290">This is not the intent of the sender of the request.</span></span>  
  
 <span data-ttu-id="44e82-291">如果<xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>属性设置为 false，然后当<xref:System.Net.HttpListener>收到请求时，它使用的原始 URI 而不是从经过转换的 URI`http.sys`作为输入到<xref:System.Net.HttpListenerRequest.Url%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-291">If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-292">下面的代码示例演示了如何使用<xref:System.Net.HttpListenerRequest.Url%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-292">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UrlReferrer : Uri" Usage="System.Net.HttpListenerRequest.UrlReferrer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-293">Gets the Uniform Resource Identifier (URI) of the resource that referred the client to the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-293">Gets the Uniform Resource Identifier (URI) of the resource that referred the client to the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-294">一个<see cref="T:System.Uri" />对象，其中包含请求的文本<see cref="F:System.Net.HttpRequestHeader.Referer" />标头，或<see langword="null" />如果请求中未包含在标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-294">A <see cref="T:System.Uri" /> object that contains the text of the request's <see cref="F:System.Net.HttpRequestHeader.Referer" /> header, or <see langword="null" /> if the header was not included in the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-295">如果客户端请求的 URI 已按照超链接，可能包含其请求`Referrer`标头，用于标识包含该超链接的资源的 URI。</span><span class="sxs-lookup"><span data-stu-id="44e82-295">If a client has followed a hyperlink to the requested URI, its request might contain a `Referrer` header that identifies the URI of the resource that contained the hyperlink.</span></span>  
  
 <span data-ttu-id="44e82-296">客户端可以伪造或选择不存在<xref:System.Net.HttpRequestHeader.Referer>标头。</span><span class="sxs-lookup"><span data-stu-id="44e82-296">Clients can falsify or choose not to present a <xref:System.Net.HttpRequestHeader.Referer> header.</span></span> <span data-ttu-id="44e82-297">因此，虽然<xref:System.Net.HttpListenerRequest.UrlReferrer%2A>属性可以是用于标识 Web 流量的基本趋势; 您不应使用它作为授权方案的一部分来控制对数据的访问。</span><span class="sxs-lookup"><span data-stu-id="44e82-297">Therefore, while the <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> property can be useful for identifying basic trends in Web traffic; you should not use it as part of an authorization scheme to control access to data.</span></span>  
  
 <span data-ttu-id="44e82-298">请求标头的完整列表，请参阅<xref:System.Net.HttpRequestHeader>枚举。</span><span class="sxs-lookup"><span data-stu-id="44e82-298">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
 <span data-ttu-id="44e82-299"><xref:System.Net.HttpListenerRequest.UrlReferrer%2A>为 null 时没有`Referrer`请求标头中的或当`Referrer`标头在请求中存在但未分析为有效<xref:System.Uri>。</span><span class="sxs-lookup"><span data-stu-id="44e82-299">The <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> is null when there is no `Referrer` header in the request or when the `Referrer` header is present in the request but does not parse to a valid <xref:System.Uri>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-300">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-300">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string" Usage="System.Net.HttpListenerRequest.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-301">Gets the user agent presented by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-301">Gets the user agent presented by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-302">一个<see cref="T:System.String" />对象，其中包含请求的文本<see langword="User-Agent" />标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-302">A <see cref="T:System.String" /> object that contains the text of the request's <see langword="User-Agent" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-303">`User-Agent`标头通常包含标识用于生成请求的软件的名称和版本数量的文本。</span><span class="sxs-lookup"><span data-stu-id="44e82-303">The `User-Agent` header typically contains text that identifies the name and version number of the software used to generate the request.</span></span>  
  
 <span data-ttu-id="44e82-304">请求标头的完整列表，请参阅<xref:System.Net.HttpRequestHeader>枚举。</span><span class="sxs-lookup"><span data-stu-id="44e82-304">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
 <span data-ttu-id="44e82-305"><xref:System.Net.HttpListenerRequest.UserAgent%2A>为 null 时没有任何`User-Agent`请求标头中的。</span><span class="sxs-lookup"><span data-stu-id="44e82-305">The <xref:System.Net.HttpListenerRequest.UserAgent%2A> is null when there is no `User-Agent` header in the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-306">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-306">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostAddress : string" Usage="System.Net.HttpListenerRequest.UserHostAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-307">Gets the server IP address and port number to which the request is directed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-307">Gets the server IP address and port number to which the request is directed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-308">一个<see cref="T:System.String" />包含主机地址信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-308">A <see cref="T:System.String" /> that contains the host address information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-309">此属性返回的信息也位于<xref:System.Net.HttpListenerRequest.LocalEndPoint%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="44e82-309">The information returned by this property is also available in the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-310">下面的代码示例显示了此属性的值。</span><span class="sxs-lookup"><span data-stu-id="44e82-310">The following code example displays the value of this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostName : string" Usage="System.Net.HttpListenerRequest.UserHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-311">Gets the DNS name and, if provided, the port number specified by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-311">Gets the DNS name and, if provided, the port number specified by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-312">一个<see cref="T:System.String" />值，该值包含文本的请求的<see langword="Host" />标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-312">A <see cref="T:System.String" /> value that contains the text of the request's <see langword="Host" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-313">`Host`标头包含请求的服务器主机名和端口号，如果指定，是由冒号分隔 (例如， `www.contoso.com:8080`)。</span><span class="sxs-lookup"><span data-stu-id="44e82-313">The `Host` header contains the requested server host name and port number, if specified, separated by a colon (for example, `www.contoso.com:8080`).</span></span>  
  
 <span data-ttu-id="44e82-314">可以使用此属性返回不同的响应，具体取决于请求中指定的主机名。</span><span class="sxs-lookup"><span data-stu-id="44e82-314">You can use this property to return different responses depending on the host name specified in the request.</span></span>  
  
 <span data-ttu-id="44e82-315">请求标头的完整列表，请参阅<xref:System.Net.HttpRequestHeader>枚举。</span><span class="sxs-lookup"><span data-stu-id="44e82-315">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-316">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="44e82-316">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserLanguages : string[]" Usage="System.Net.HttpListenerRequest.UserLanguages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44e82-317">Gets the natural languages that are preferred for the response.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-317">Gets the natural languages that are preferred for the response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44e82-318">一个<see cref="T:System.String" />数组，其中包含在请求中指定的语言<see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" />标头或<see langword="null" />如果客户端请求不包含<see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" />标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44e82-318">A <see cref="T:System.String" /> array that contains the languages specified in the request's <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header or <see langword="null" /> if the client request did not include an <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44e82-319">有关详细的说明`Accept-Language`标头，请参阅 RFC 2616 部分 14.4，网址[ https://www.rfc-editor.org ](https://www.rfc-editor.org/)。</span><span class="sxs-lookup"><span data-stu-id="44e82-319">For a detailed description of the `Accept-Language` header, see RFC 2616 Section 14.4, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="44e82-320">请求标头的完整列表，请参阅<xref:System.Net.HttpRequestHeader>枚举。</span><span class="sxs-lookup"><span data-stu-id="44e82-320">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44e82-321">下面的代码示例显示从请求的语言`Accept-Language`标头。</span><span class="sxs-lookup"><span data-stu-id="44e82-321">The following code example displays the languages from the request's `Accept-Language` header.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
  </Members>
</Type>