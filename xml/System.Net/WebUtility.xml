<Type Name="WebUtility" FullName="System.Net.WebUtility">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00077ce3265b7c9b8c9786ed662a0c1ce1775cb1" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="40449577" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class WebUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class WebUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type WebUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c4fa1-101">提供在处理 Web 请求时用于编码和解码 URL 的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4fa1-101">Provides methods for encoding and decoding URLs when processing Web requests.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4fa1-102"><xref:System.Web.HttpUtility>类包含编码和解码实用工具方法，用于与 HTML 编码字符串一起使用。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-102">The <xref:System.Web.HttpUtility> class contains encoding and decoding utility methods for use with HTML-encode strings.</span></span> <span data-ttu-id="c4fa1-103"><xref:System.Uri?displayProperty=nameWithType>类还包含可以用于相似目的的方法和属性。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-103">The <xref:System.Uri?displayProperty=nameWithType> class also contains methods and properties that can be used for similar purposes.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Uri" />
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
  </Docs>
  <Members>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c4fa1-104">将已经为 HTTP 传输进行过 HTML 编码的字符串转换为已解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-104">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string -&gt; string" Usage="System.Net.WebUtility.HtmlDecode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c4fa1-105">要解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-105">The string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4fa1-106">将已经为 HTTP 传输进行过 HTML 编码的字符串转换为已解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-106">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4fa1-107">已解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-107">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4fa1-108">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-108">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c4fa1-109">HTML 编码将转换为字符实体等效项; 不允许在 HTML 中的字符HTML 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-109">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="c4fa1-110">例如，在嵌入的字符的文本块`<`并`>`编码为`&lt;`和`&gt;`HTTP 传输。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-110">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="c4fa1-111">如果`value`参数是`null`，则返回已解码的字符串是`null`。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-111">If the `value` parameter is `null`, then the returned decoded string is `null`.</span></span> <span data-ttu-id="c4fa1-112">如果`value`参数是空字符串，则返回已解码的字符串为空字符串。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-112">If the `value` parameter is an empty string, then the returned decoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlDecode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c4fa1-113">要解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-113">The string to decode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="c4fa1-114">
            <see cref="T:System.IO.TextWriter" /> 输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-114">A <see cref="T:System.IO.TextWriter" /> stream of output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4fa1-115">将已经过 HTML 编码的字符串转换为已解码的字符串并将其发送给 <see cref="T:System.IO.TextWriter" /> 输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-115">Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4fa1-116">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-116">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c4fa1-117">HTML 编码将转换为字符实体等效项; 不允许在 HTML 中的字符HTML 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-117">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="c4fa1-118">例如，在嵌入的字符的文本块`<`并`>`编码为`&lt;`和`&gt;`HTTP 传输。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-118">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4fa1-119">如果 <paramref name="output" /> 参数不为 <see langword="null" />，则 <paramref name="value" /> 参数不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-119">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c4fa1-120">将字符串转换为 HTML 编码字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-120">Converts a string to an HTML-encoded string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string -&gt; string" Usage="System.Net.WebUtility.HtmlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c4fa1-121">要编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-121">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4fa1-122">将字符串转换为 HTML 编码字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-122">Converts a string to an HTML-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4fa1-123">已编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-123">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4fa1-124">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-124">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c4fa1-125">HTML 编码将转换为字符实体等效项; 不允许在 HTML 中的字符HTML 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-125">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="c4fa1-126">例如，在嵌入的字符的文本块`<`并`>`编码为`&lt;`和`&gt;`HTTP 传输。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-126">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="c4fa1-127">如果`value`参数是`null`，则返回已编码的字符串是`null`。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-127">If the `value` parameter is `null`, then the returned encoded string is `null`.</span></span> <span data-ttu-id="c4fa1-128">如果`value`参数是空字符串，则返回已编码的字符串为空字符串。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-128">If the `value` parameter is an empty string, then the returned encoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c4fa1-129">要编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-129">The string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="c4fa1-130">
            <see cref="T:System.IO.TextWriter" /> 输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-130">A <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4fa1-131">将字符串转换为 HTML 编码的字符串并将输出作为 <see cref="T:System.IO.TextWriter" /> 输出流返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-131">Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4fa1-132">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-132">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c4fa1-133">HTML 编码将转换为字符实体等效项; 不允许在 HTML 中的字符HTML 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-133">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="c4fa1-134">例如，在嵌入的字符的文本块`<`并`>`编码为`&lt;`和`&gt;`HTTP 传输。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-134">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4fa1-135">如果 <paramref name="output" /> 参数不为 <see langword="null" />，则 <paramref name="value" /> 参数不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-135">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string encodedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string encodedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (encodedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ encodedValue);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string -&gt; string" Usage="System.Net.WebUtility.UrlDecode encodedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encodedValue">
          <span data-ttu-id="c4fa1-136">要进行解码的 URL 编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-136">A URL-encoded string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4fa1-137">将已编码用于 URL 传输的字符串转换为解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-137">Converts a string that has been encoded for transmission in a URL into a decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4fa1-138">已解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-138">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4fa1-139">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-139">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c4fa1-140">URL 编码将转换为等效十六进制转义序列不允许在 URL 中使用的字符。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-140">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="c4fa1-141"><xref:System.Net.WebUtility.UrlEncode%2A>方法创建 URL 编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-141">The <xref:System.Net.WebUtility.UrlEncode%2A> method creates a URL-encoded string.</span></span>  
  
 <span data-ttu-id="c4fa1-142">URL 解码十六进制转义序列替换相应的 ASCII 字符等效项。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-142">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="c4fa1-143">例如，当嵌入在 URL 编码的文本块中，转义序列`%3c`并`%3e`解码为字符`<`和`>`。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-143">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] encodedValue, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] encodedValue, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (encodedValue As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ encodedValue, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlDecodeToBytes (encodedValue, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encodedValue">
          <span data-ttu-id="c4fa1-144">要进行解码的 URL 编码的 <see cref="T:System.Byte" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-144">A URL-encoded <see cref="T:System.Byte" /> array to decode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="c4fa1-145">相对于要解码的 <see cref="T:System.Byte" /> 数组的开头的偏移量（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-145">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c4fa1-146">要从 <see cref="T:System.Byte" /> 数组解码的计数（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-146">The count, in bytes, to decode from the <see cref="T:System.Byte" /> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4fa1-147">将为通过 URL 传输已编码的已编码字节数组转换为解码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-147">Converts an encoded byte array that has been encoded for transmission in a URL into a decoded byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4fa1-148">一个已解码的 <see cref="T:System.Byte" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-148">A decoded <see cref="T:System.Byte" /> array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4fa1-149">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-149">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c4fa1-150">URL 编码将转换为等效十六进制转义序列不允许在 URL 中使用的字符。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-150">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="c4fa1-151"><xref:System.Net.WebUtility.UrlEncodeToBytes%2A>方法创建一个 URL 编码的字节数组。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-151">The <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> method creates a URL-encoded byte array.</span></span>  
  
 <span data-ttu-id="c4fa1-152">URL 解码十六进制转义序列替换相应的 ASCII 字符等效项。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-152">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="c4fa1-153">例如，当嵌入在 URL 编码的文本块中，转义序列`%3c`并`%3e`解码为字符`<`和`>`。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-153">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Net.WebUtility.UrlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c4fa1-154">要进行 URL 编码的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-154">The text to URL-encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4fa1-155">将文本字符串转换为 URL 编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-155">Converts a text string into a URL-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4fa1-156">URL 编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-156">A URL-encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4fa1-157">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-157">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c4fa1-158">URL 编码替换不允许在 URL 中使用字符实体等效项包含的十六进制转义序列的字符。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-158">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="c4fa1-159">转换后的字符串应符合 utf-8 格式。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-159">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="c4fa1-160">URL 编码会将替换所有除字母、 数字和以下标点字符的字符代码：</span><span class="sxs-lookup"><span data-stu-id="c4fa1-160">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="c4fa1-161">`-` （负号）</span><span class="sxs-lookup"><span data-stu-id="c4fa1-161">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="c4fa1-162">`_` （下划线）</span><span class="sxs-lookup"><span data-stu-id="c4fa1-162">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="c4fa1-163">`.` （句点）</span><span class="sxs-lookup"><span data-stu-id="c4fa1-163">`.` (period)</span></span>  
  
-   <span data-ttu-id="c4fa1-164">`!` （感叹号）</span><span class="sxs-lookup"><span data-stu-id="c4fa1-164">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="c4fa1-165">`*` （星号）</span><span class="sxs-lookup"><span data-stu-id="c4fa1-165">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="c4fa1-166">`(` 和`)`（左、 右括号）</span><span class="sxs-lookup"><span data-stu-id="c4fa1-166">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="c4fa1-167">例如，在嵌入在 URL 中，字符要传输的文本块`<`并`>`编码为`%3c`和`%3e`。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-167">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="c4fa1-168"><xref:System.Net.WebUtility.UrlDecode%2A>方法可反转的编码。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-168">The <xref:System.Net.WebUtility.UrlDecode%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] value, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] value, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (value As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ value, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlEncodeToBytes (value, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c4fa1-169">要进行 URL 编码的 <see cref="T:System.Byte" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-169">The <see cref="T:System.Byte" /> array to URL-encode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="c4fa1-170">相对于要编码的 <see cref="T:System.Byte" /> 数组的开头的偏移量（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-170">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c4fa1-171">要从 <see cref="T:System.Byte" /> 数组编码的计数（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-171">The count, in bytes, to encode from the <see cref="T:System.Byte" /> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4fa1-172">将字节数组转换为 URL 编码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-172">Converts a byte array into a URL-encoded byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4fa1-173">编码的 <see cref="T:System.Byte" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4fa1-173">An encoded <see cref="T:System.Byte" /> array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4fa1-174">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-174">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c4fa1-175">URL 编码替换不允许在 URL 中使用字符实体等效项包含的十六进制转义序列的字符。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-175">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="c4fa1-176">转换后的字符串应符合 utf-8 格式。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-176">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="c4fa1-177">URL 编码会将替换所有除字母、 数字和以下标点字符的字符代码：</span><span class="sxs-lookup"><span data-stu-id="c4fa1-177">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="c4fa1-178">`-` （负号）</span><span class="sxs-lookup"><span data-stu-id="c4fa1-178">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="c4fa1-179">`_` （下划线）</span><span class="sxs-lookup"><span data-stu-id="c4fa1-179">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="c4fa1-180">`.` （句点）</span><span class="sxs-lookup"><span data-stu-id="c4fa1-180">`.` (period)</span></span>  
  
-   <span data-ttu-id="c4fa1-181">`!` （感叹号）</span><span class="sxs-lookup"><span data-stu-id="c4fa1-181">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="c4fa1-182">`*` （星号）</span><span class="sxs-lookup"><span data-stu-id="c4fa1-182">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="c4fa1-183">`'` （单引号）</span><span class="sxs-lookup"><span data-stu-id="c4fa1-183">`'` (single quotation mark)</span></span>  
  
-   <span data-ttu-id="c4fa1-184">`(` 和`)`（左、 右括号）</span><span class="sxs-lookup"><span data-stu-id="c4fa1-184">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="c4fa1-185">例如，在嵌入在 URL 中，字符要传输的文本块`<`并`>`编码为`%3c`和`%3e`。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-185">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="c4fa1-186"><xref:System.Net.WebUtility.UrlDecodeToBytes%2A>方法可反转的编码。</span><span class="sxs-lookup"><span data-stu-id="c4fa1-186">The <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>