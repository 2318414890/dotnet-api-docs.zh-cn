<Type Name="WebUtility" FullName="System.Net.WebUtility">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d26dd9460dd12b695a36cd9a7757a2ff00818623" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30469991" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class WebUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class WebUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebUtility abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="33936-101">提供在处理 Web 请求时用于编码和解码 URL 的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="33936-101">Provides methods for encoding and decoding URLs when processing Web requests.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33936-102"><xref:System.Web.HttpUtility>类包含编码和解码用于进行 HTML 编码字符串的实用工具方法。</span><span class="sxs-lookup"><span data-stu-id="33936-102">The <xref:System.Web.HttpUtility> class contains encoding and decoding utility methods for use with HTML-encode strings.</span></span> <span data-ttu-id="33936-103"><xref:System.Uri?displayProperty=nameWithType>类还包含方法和属性可以用于类似用途。</span><span class="sxs-lookup"><span data-stu-id="33936-103">The <xref:System.Uri?displayProperty=nameWithType> class also contains methods and properties that can be used for similar purposes.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Uri" />
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
  </Docs>
  <Members>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="33936-104">将已经为 HTTP 传输进行过 HTML 编码的字符串转换为已解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-104">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="33936-105">要解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-105">The string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33936-106">将已经为 HTTP 传输进行过 HTML 编码的字符串转换为已解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-106">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33936-107">已解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-107">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33936-108">如果在 HTTP 流传递字符如空格和标点符号，它们可能被错误解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="33936-108">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="33936-109">HTML 编码将转换为字符实体等效项; 不允许在 HTML 中的字符HTML 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="33936-109">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="33936-110">例如，在嵌入的文本块，字符\<和 > 被编码为&lt;和&gt;针对 HTTP 传输。</span><span class="sxs-lookup"><span data-stu-id="33936-110">For example, when embedded in a block of text, the characters \< and > are encoded as &lt; and &gt; for HTTP transmission.</span></span>  
  
 <span data-ttu-id="33936-111">如果`value`参数是`null`，则返回已解码的字符串是`null`。</span><span class="sxs-lookup"><span data-stu-id="33936-111">If the `value` parameter is `null`, then the returned decoded string is `null`.</span></span> <span data-ttu-id="33936-112">如果`value`参数是空字符串，则返回已解码的字符串为空字符串。</span><span class="sxs-lookup"><span data-stu-id="33936-112">If the `value` parameter is an empty string, then the returned decoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="33936-113">要解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-113">The string to decode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="33936-114">
            <see cref="T:System.IO.TextWriter" /> 输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-114">A <see cref="T:System.IO.TextWriter" /> stream of output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33936-115">将已经过 HTML 编码的字符串转换为已解码的字符串并将其发送给 <see cref="T:System.IO.TextWriter" /> 输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-115">Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33936-116">如果在 HTTP 流传递字符如空格和标点符号，它们可能被错误解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="33936-116">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="33936-117">HTML 编码将转换为字符实体等效项; 不允许在 HTML 中的字符HTML 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="33936-117">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="33936-118">例如，在嵌入的文本块，字符\<和 > 被编码为&lt;和&gt;针对 HTTP 传输。</span><span class="sxs-lookup"><span data-stu-id="33936-118">For example, when embedded in a block of text, the characters \< and > are encoded as &lt; and &gt; for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="33936-119">如果 <paramref name="output" /> 参数不为 <see langword="null" />，则 <paramref name="value" /> 参数不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-119">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="33936-120">将字符串转换为 HTML 编码字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-120">Converts a string to an HTML-encoded string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="33936-121">要编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-121">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33936-122">将字符串转换为 HTML 编码字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-122">Converts a string to an HTML-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33936-123">已编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-123">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33936-124">如果在 HTTP 流传递字符如空格和标点符号，它们可能被错误解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="33936-124">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="33936-125">HTML 编码将转换为字符实体等效项; 不允许在 HTML 中的字符HTML 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="33936-125">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="33936-126">例如，在嵌入的文本块，字符\<和 > 被编码为&lt;和&gt;针对 HTTP 传输。</span><span class="sxs-lookup"><span data-stu-id="33936-126">For example, when embedded in a block of text, the characters \< and > are encoded as &lt; and &gt; for HTTP transmission.</span></span>  
  
 <span data-ttu-id="33936-127">如果`value`参数是`null`，则返回已编码的字符串是`null`。</span><span class="sxs-lookup"><span data-stu-id="33936-127">If the `value` parameter is `null`, then the returned encoded string is `null`.</span></span> <span data-ttu-id="33936-128">如果`value`参数是空字符串，则返回已编码的字符串为空字符串。</span><span class="sxs-lookup"><span data-stu-id="33936-128">If the `value` parameter is an empty string, then the returned encoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="33936-129">要编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-129">The string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="33936-130">
            <see cref="T:System.IO.TextWriter" /> 输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-130">A <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33936-131">将字符串转换为 HTML 编码的字符串并将输出作为 <see cref="T:System.IO.TextWriter" /> 输出流返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-131">Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33936-132">如果在 HTTP 流传递字符如空格和标点符号，它们可能被错误解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="33936-132">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="33936-133">HTML 编码将转换为字符实体等效项; 不允许在 HTML 中的字符HTML 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="33936-133">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="33936-134">例如，在嵌入的文本块，字符\<和 >，编码为&lt;和&gt;针对 HTTP 传输。</span><span class="sxs-lookup"><span data-stu-id="33936-134">For example, when embedded in a block of text, the characters \< and >, are encoded as &lt; and &gt; for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="33936-135">如果 <paramref name="output" /> 参数不为 <see langword="null" />，则 <paramref name="value" /> 参数不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-135">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string encodedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string encodedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (encodedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ encodedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encodedValue">
          <span data-ttu-id="33936-136">要进行解码的 URL 编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-136">A URL-encoded string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33936-137">将已编码用于 URL 传输的字符串转换为解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-137">Converts a string that has been encoded for transmission in a URL into a decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33936-138">返回 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-138">Returns <see cref="T:System.String" />.</span>
          </span>
          <span data-ttu-id="33936-139">已解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-139">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33936-140">如果在 HTTP 流传递字符如空格和标点符号，它们可能被错误解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="33936-140">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="33936-141">URL 编码将转换为等效的十六进制转义序列不允许在 URL 中的字符。</span><span class="sxs-lookup"><span data-stu-id="33936-141">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="33936-142"><xref:System.Net.WebUtility.UrlEncode%2A>方法创建 URL 编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="33936-142">The <xref:System.Net.WebUtility.UrlEncode%2A> method creates a URL-encoded string.</span></span>  
  
 <span data-ttu-id="33936-143">URL 解码十六进制转义序列替换相应的 ASCII 字符等效项。</span><span class="sxs-lookup"><span data-stu-id="33936-143">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="33936-144">例如，当嵌入在 URL 编码的文本块中，转义序列`%3c`和`%3e`解码为字符`<`和`>`。</span><span class="sxs-lookup"><span data-stu-id="33936-144">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] encodedValue, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] encodedValue, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (encodedValue As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ encodedValue, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encodedValue">
          <span data-ttu-id="33936-145">要进行解码的 URL 编码的 <see cref="T:System.Byte" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-145">A URL-encoded <see cref="T:System.Byte" /> array to decode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="33936-146">相对于要解码的 <see cref="T:System.Byte" /> 数组的开头的偏移量（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-146">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="33936-147">要从 <see cref="T:System.Byte" /> 数组解码的计数（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-147">The count, in bytes, to decode from the <see cref="T:System.Byte" /> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33936-148">将为通过 URL 传输已编码的已编码字节数组转换为解码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-148">Converts an encoded byte array that has been encoded for transmission in a URL into a decoded byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33936-149">返回 <see cref="T:System.Byte" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-149">Returns <see cref="T:System.Byte" />.</span>
          </span>
          <span data-ttu-id="33936-150">一个已解码的 <see cref="T:System.Byte" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-150">A decoded <see cref="T:System.Byte" /> array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33936-151">如果在 HTTP 流传递字符如空格和标点符号，它们可能被错误解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="33936-151">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="33936-152">URL 编码将转换为等效的十六进制转义序列不允许在 URL 中的字符。</span><span class="sxs-lookup"><span data-stu-id="33936-152">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="33936-153"><xref:System.Net.WebUtility.UrlEncodeToBytes%2A>方法创建 URL 编码的字节数组。</span><span class="sxs-lookup"><span data-stu-id="33936-153">The <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> method creates a URL-encoded byte array.</span></span>  
  
 <span data-ttu-id="33936-154">URL 解码十六进制转义序列替换相应的 ASCII 字符等效项。</span><span class="sxs-lookup"><span data-stu-id="33936-154">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="33936-155">例如，当嵌入在 URL 编码的文本块中，转义序列`%3c`和`%3e`解码为字符`<`和`>`。</span><span class="sxs-lookup"><span data-stu-id="33936-155">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="33936-156">要进行 URL 编码的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-156">The text to URL-encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33936-157">将文本字符串转换为 URL 编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-157">Converts a text string into a URL-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33936-158">返回 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-158">Returns <see cref="T:System.String" />.</span>
          </span>
          <span data-ttu-id="33936-159">URL 编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-159">A URL-encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33936-160">如果在 HTTP 流传递字符如空格和标点符号，它们可能被错误解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="33936-160">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="33936-161">URL 编码替换字符，不允许在 URL 中使用的十六进制转义序列包含的字符实体等效项。</span><span class="sxs-lookup"><span data-stu-id="33936-161">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="33936-162">转换后的字符串应符合 utf-8 格式。</span><span class="sxs-lookup"><span data-stu-id="33936-162">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="33936-163">URL 编码替换除外字母、 数字和以下的标点字符的所有字符代码：</span><span class="sxs-lookup"><span data-stu-id="33936-163">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="33936-164">`-` （减号）</span><span class="sxs-lookup"><span data-stu-id="33936-164">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="33936-165">`_` （下划线）</span><span class="sxs-lookup"><span data-stu-id="33936-165">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="33936-166">`.` （句点）</span><span class="sxs-lookup"><span data-stu-id="33936-166">`.` (period)</span></span>  
  
-   <span data-ttu-id="33936-167">`!` （感叹号）</span><span class="sxs-lookup"><span data-stu-id="33936-167">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="33936-168">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="33936-168">\* (asterisk)</span></span>  
  
-   <span data-ttu-id="33936-169">`(` 和`)`（左、 右括号）</span><span class="sxs-lookup"><span data-stu-id="33936-169">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="33936-170">例如，当在要传输在 URL 中，字符的文本块中嵌入`<`和`>`编码为`%3c`和`%3e`。</span><span class="sxs-lookup"><span data-stu-id="33936-170">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="33936-171"><xref:System.Net.WebUtility.UrlDecode%2A>方法可反转的编码。</span><span class="sxs-lookup"><span data-stu-id="33936-171">The <xref:System.Net.WebUtility.UrlDecode%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] value, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] value, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (value As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ value, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="33936-172">要进行 URL 编码的 <see cref="T:System.Byte" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-172">The <see cref="T:System.Byte" /> array to URL-encode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="33936-173">相对于要编码的 <see cref="T:System.Byte" /> 数组的开头的偏移量（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-173">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="33936-174">要从 <see cref="T:System.Byte" /> 数组编码的计数（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-174">The count, in bytes, to encode from the <see cref="T:System.Byte" /> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33936-175">将字节数组转换为 URL 编码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-175">Converts a byte array into a URL-encoded byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33936-176">返回 <see cref="T:System.Byte" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-176">Returns <see cref="T:System.Byte" />.</span>
          </span>
          <span data-ttu-id="33936-177">编码的 <see cref="T:System.Byte" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33936-177">An encoded <see cref="T:System.Byte" /> array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33936-178">如果在 HTTP 流传递字符如空格和标点符号，它们可能被错误解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="33936-178">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="33936-179">URL 编码替换字符，不允许在 URL 中使用的十六进制转义序列包含的字符实体等效项。</span><span class="sxs-lookup"><span data-stu-id="33936-179">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="33936-180">转换后的字符串应符合 utf-8 格式。</span><span class="sxs-lookup"><span data-stu-id="33936-180">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="33936-181">URL 编码替换除外字母、 数字和以下的标点字符的所有字符代码：</span><span class="sxs-lookup"><span data-stu-id="33936-181">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="33936-182">`-` （减号）</span><span class="sxs-lookup"><span data-stu-id="33936-182">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="33936-183">`_` （下划线）</span><span class="sxs-lookup"><span data-stu-id="33936-183">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="33936-184">`.` （句点）</span><span class="sxs-lookup"><span data-stu-id="33936-184">`.` (period)</span></span>  
  
-   <span data-ttu-id="33936-185">`!` （感叹号）</span><span class="sxs-lookup"><span data-stu-id="33936-185">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="33936-186">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="33936-186">'\*' (asterisk)</span></span>  
  
-   <span data-ttu-id="33936-187">`'` （单引号）</span><span class="sxs-lookup"><span data-stu-id="33936-187">`'` (single quotation mark)</span></span>  
  
-   <span data-ttu-id="33936-188">`(` 和`)`（左、 右括号）</span><span class="sxs-lookup"><span data-stu-id="33936-188">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="33936-189">例如，当在要传输在 URL 中，字符的文本块中嵌入`<`和`>`编码为`%3c`和`%3e`。</span><span class="sxs-lookup"><span data-stu-id="33936-189">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="33936-190"><xref:System.Net.WebUtility.UrlDecodeToBytes%2A>方法可反转的编码。</span><span class="sxs-lookup"><span data-stu-id="33936-190">The <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>