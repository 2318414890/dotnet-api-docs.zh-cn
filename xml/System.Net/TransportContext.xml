<Type Name="TransportContext" FullName="System.Net.TransportContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9dd76a98f645732a832074f284279bb7e98b4e01" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57956422" /></Metadata><TypeSignature Language="C#" Value="public abstract class TransportContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TransportContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.TransportContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TransportContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class TransportContext abstract" />
  <TypeSignature Language="F#" Value="type TransportContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6a0a5-101"><see cref="T:System.Net.TransportContext" /> 类提供有关基础传输层的附加上下文。</span><span class="sxs-lookup"><span data-stu-id="6a0a5-101">The <see cref="T:System.Net.TransportContext" /> class provides additional context about the underlying transport layer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a0a5-102"><xref:System.Net.TransportContext>类中的类配合使用<xref:System.Security.Authentication.ExtendedProtection>命名空间为通过身份验证提供支持扩展保护的应用程序。</span><span class="sxs-lookup"><span data-stu-id="6a0a5-102">The <xref:System.Net.TransportContext> class is used with classes in the <xref:System.Security.Authentication.ExtendedProtection> namespace to provide support for authentication using extended protection for applications.</span></span>  
  
 <span data-ttu-id="6a0a5-103">集成式 Windows 身份验证的设计能使某些凭据质询响应变得通用，这意味着可以重新使用或转发这些响应。</span><span class="sxs-lookup"><span data-stu-id="6a0a5-103">The design of integrated Windows authentication allows for some credential challenge responses to be universal, meaning they can be re-used or forwarded.</span></span> <span data-ttu-id="6a0a5-104">如果不需要此特殊设计功能然后的质询响应应为构造，最小值，目标的特定信息并，充其量，还一些通道特定信息。</span><span class="sxs-lookup"><span data-stu-id="6a0a5-104">If this particular design feature is not needed then the challenge responses should be constructed with, at minimum, target specific information and, at best, also some channel specific information.</span></span> <span data-ttu-id="6a0a5-105">然后，服务可以提供扩展的保护，以确保凭据质询响应包含服务特定信息 （服务提供程序名称或 SPN） 以及，如有必要，通道特定信息 （通道绑定令牌或 CBT）。</span><span class="sxs-lookup"><span data-stu-id="6a0a5-105">Services can then provide extended protection to ensure that credential challenge responses contain service specific information (a Service Provider Name or SPN) and, if necessary, channel specific information (a channel binding token or CBT).</span></span> <span data-ttu-id="6a0a5-106">使用此凭据交换中的信息，服务就能更好地防范恶意使用可能未正确获得的凭据质询响应。</span><span class="sxs-lookup"><span data-stu-id="6a0a5-106">With this information in the credential exchanges, services are able to better protect against malicious use of credential challenge responses that might have been improperly obtained.</span></span>  
  
 <span data-ttu-id="6a0a5-107"><xref:System.Net.HttpWebRequest> 唯一的类派生自<xref:System.Net.WebRequest>有可能使用 IWA 的类。</span><span class="sxs-lookup"><span data-stu-id="6a0a5-107"><xref:System.Net.HttpWebRequest> is the only class derived from <xref:System.Net.WebRequest> class that can potentially use IWA.</span></span> <span data-ttu-id="6a0a5-108"><xref:System.Net.FtpWebRequest>类执行的唯一 FTP 明文形式的身份验证。</span><span class="sxs-lookup"><span data-stu-id="6a0a5-108">The <xref:System.Net.FtpWebRequest> class does only FTP clear text authentication.</span></span> <span data-ttu-id="6a0a5-109"><xref:System.Net.FileWebRequest>类不会执行任何身份验证。</span><span class="sxs-lookup"><span data-stu-id="6a0a5-109">The <xref:System.Net.FileWebRequest> class doesn't perform any authentication.</span></span>  
  
 <span data-ttu-id="6a0a5-110">有几种方法，应用程序可能会收到<xref:System.Net.TransportContext>实例。</span><span class="sxs-lookup"><span data-stu-id="6a0a5-110">There are several ways an application may get a <xref:System.Net.TransportContext> instance.</span></span> <span data-ttu-id="6a0a5-111">使用的应用程序<xref:System.Net.Security.SslStream>可以获取<xref:System.Net.TransportContext>使用<xref:System.Net.Security.SslStream.TransportContext%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6a0a5-111">An application that uses <xref:System.Net.Security.SslStream> can get the <xref:System.Net.TransportContext> using the <xref:System.Net.Security.SslStream.TransportContext%2A> property.</span></span> <span data-ttu-id="6a0a5-112">使用的应用程序<xref:System.Net.HttpWebRequest>可以获取<xref:System.Net.TransportContext>使用<xref:System.Net.HttpWebRequest.GetRequestStream%2A>或<xref:System.Net.HttpWebRequest.EndGetRequestStream%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6a0a5-112">An application that uses <xref:System.Net.HttpWebRequest> can get a <xref:System.Net.TransportContext> using the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> or <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> methods.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Net.Security.SslStream.TransportContext" />
    <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
    <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
    <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="6a0a5-113">带有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="6a0a5-113">Integrated Windows Authentication with Extended Protection</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TransportContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.TransportContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TransportContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6a0a5-114">创建 <see cref="T:System.Net.TransportContext" /> 类的新实例</span><span class="sxs-lookup"><span data-stu-id="6a0a5-114">Creates a new instance of the <see cref="T:System.Net.TransportContext" /> class</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChannelBinding">
      <MemberSignature Language="C#" Value="public abstract System.Security.Authentication.ExtendedProtection.ChannelBinding GetChannelBinding (System.Security.Authentication.ExtendedProtection.ChannelBindingKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Authentication.ExtendedProtection.ChannelBinding GetChannelBinding(valuetype System.Security.Authentication.ExtendedProtection.ChannelBindingKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetChannelBinding (kind As ChannelBindingKind) As ChannelBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Authentication::ExtendedProtection::ChannelBinding ^ GetChannelBinding(System::Security::Authentication::ExtendedProtection::ChannelBindingKind kind);" />
      <MemberSignature Language="F#" Value="abstract member GetChannelBinding : System.Security.Authentication.ExtendedProtection.ChannelBindingKind -&gt; System.Security.Authentication.ExtendedProtection.ChannelBinding" Usage="transportContext.GetChannelBinding kind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ChannelBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.Security.Authentication.ExtendedProtection.ChannelBindingKind" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="kind"><span data-ttu-id="6a0a5-115">要检索的通道绑定类型。</span><span class="sxs-lookup"><span data-stu-id="6a0a5-115">The type of channel binding to retrieve.</span></span></param>
        <summary><span data-ttu-id="6a0a5-116">检索请求的通道绑定。</span><span class="sxs-lookup"><span data-stu-id="6a0a5-116">Retrieves the requested channel binding.</span></span></summary>
        <returns><span data-ttu-id="6a0a5-117">请求的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />，如果当前传输或操作系统不支持通道绑定，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6a0a5-117">The requested <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />, or <see langword="null" /> if the channel binding is not supported by the current transport or by the operating system.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a0a5-118">可能的值`kind`参数是<xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>或<xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unique>。</span><span class="sxs-lookup"><span data-stu-id="6a0a5-118">The possible values for the `kind` parameter are <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint> or <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unique>.</span></span>  
  
 <span data-ttu-id="6a0a5-119">如果应用程序尝试从检索的通道绑定令牌 (CBT)<xref:System.Net.HttpListenerRequest.TransportContext%2A>属性使用<xref:System.Net.TransportContext.GetChannelBinding%2A>方法并<xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind>不是<xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>，然后<xref:System.Net.HttpListenerRequest>将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="6a0a5-119">If an application attempts to retrieve the channel binding token (CBT) from the <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="6a0a5-120"><xref:System.Net.HttpListenerRequest>重写<xref:System.Net.TransportContext.GetChannelBinding%2A>使用内部实现的方法</span><span class="sxs-lookup"><span data-stu-id="6a0a5-120">The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6a0a5-121"><paramref name="kind" /> 必须是用于从 <see cref="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint" /> 属性检索的 <see cref="T:System.Net.TransportContext" /> 的 <see cref="P:System.Net.HttpListenerRequest.TransportContext" />。</span><span class="sxs-lookup"><span data-stu-id="6a0a5-121"><paramref name="kind" /> is must be <see cref="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint" /> for use with the <see cref="T:System.Net.TransportContext" /> retrieved from the <see cref="P:System.Net.HttpListenerRequest.TransportContext" /> property.</span></span></exception>
        <altmember cref="P:System.Net.Security.SslStream.TransportContext" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="GetTlsTokenBindings">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Authentication.ExtendedProtection.TokenBinding&gt; GetTlsTokenBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Authentication.ExtendedProtection.TokenBinding&gt; GetTlsTokenBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.TransportContext.GetTlsTokenBindings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTlsTokenBindings () As IEnumerable(Of TokenBinding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Security::Authentication::ExtendedProtection::TokenBinding ^&gt; ^ GetTlsTokenBindings();" />
      <MemberSignature Language="F#" Value="abstract member GetTlsTokenBindings : unit -&gt; seq&lt;System.Security.Authentication.ExtendedProtection.TokenBinding&gt;&#xA;override this.GetTlsTokenBindings : unit -&gt; seq&lt;System.Security.Authentication.ExtendedProtection.TokenBinding&gt;" Usage="transportContext.GetTlsTokenBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Authentication.ExtendedProtection.TokenBinding&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6a0a5-122">获取传输安全层令牌绑定。</span><span class="sxs-lookup"><span data-stu-id="6a0a5-122">Gets the transport security layer token bindings.</span></span></summary>
        <returns><span data-ttu-id="6a0a5-123">传输安全层令牌绑定。</span><span class="sxs-lookup"><span data-stu-id="6a0a5-123">The transport security layer token bindings.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>