<Type Name="ServicePoint" FullName="System.Net.ServicePoint">
  <TypeSignature Language="C#" Value="public class ServicePoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServicePoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.ServicePoint" />
  <TypeSignature Language="VB.NET" Value="Public Class ServicePoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServicePoint" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.ServicePoint</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="887c0-101">提供 HTTP 连接的连接管理。</span><span class="sxs-lookup"><span data-stu-id="887c0-101">Provides connection management for HTTP connections.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="887c0-102"><xref:System.Net.ServicePoint>类处理连接到 Internet 资源基于传递中资源的统一资源标识符 (URI) 的主机信息。</span><span class="sxs-lookup"><span data-stu-id="887c0-102">The <xref:System.Net.ServicePoint> class handles connections to an Internet resource based on the host information passed in the resource's Uniform Resource Identifier (URI).</span></span> <span data-ttu-id="887c0-103">与资源的初始连接确定信息的<xref:System.Net.ServicePoint>对象维护，然后对该资源的所有后续请求的共享。</span><span class="sxs-lookup"><span data-stu-id="887c0-103">The initial connection to the resource determines the information that the <xref:System.Net.ServicePoint> object maintains, which is then shared by all subsequent requests to that resource.</span></span>  
  
 <span data-ttu-id="887c0-104"><xref:System.Net.ServicePoint> 对象由<xref:System.Net.ServicePointManager>类，并创建，如有必要，通过<xref:System.Net.ServicePointManager.FindServicePoint%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="887c0-104"><xref:System.Net.ServicePoint> objects are managed by the <xref:System.Net.ServicePointManager> class and are created, if necessary, by the <xref:System.Net.ServicePointManager.FindServicePoint%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="887c0-105"><xref:System.Net.ServicePoint> 对象永远不会直接创建，但始终创建和管理通过<xref:System.Net.ServicePointManager>类。</span><span class="sxs-lookup"><span data-stu-id="887c0-105"><xref:System.Net.ServicePoint> objects are never created directly but are always created and managed by the <xref:System.Net.ServicePointManager> class.</span></span> <span data-ttu-id="887c0-106">最大数<xref:System.Net.ServicePoint>可以创建的对象将由<xref:System.Net.ServicePointManager.MaxServicePoints?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="887c0-106">The maximum number of <xref:System.Net.ServicePoint> objects that can be created is set by the <xref:System.Net.ServicePointManager.MaxServicePoints?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="887c0-107">每个<xref:System.Net.ServicePoint>对象维护其连接，对 Internet 资源直到空闲时间超过指定的时间<xref:System.Net.ServicePoint.MaxIdleTime>属性。</span><span class="sxs-lookup"><span data-stu-id="887c0-107">Each <xref:System.Net.ServicePoint> object maintains its connection to an Internet resource until it has been idle longer than the time specified in the <xref:System.Net.ServicePoint.MaxIdleTime> property.</span></span> <span data-ttu-id="887c0-108">当<xref:System.Net.ServicePoint>超过<xref:System.Net.ServicePoint.MaxIdleTime>值，它可以回收到另一个连接。</span><span class="sxs-lookup"><span data-stu-id="887c0-108">When a <xref:System.Net.ServicePoint> exceeds the <xref:System.Net.ServicePoint.MaxIdleTime> value, it can be recycled to another connection.</span></span> <span data-ttu-id="887c0-109">默认值<xref:System.Net.ServicePoint.MaxIdleTime>由设置<xref:System.Net.ServicePointManager.MaxServicePointIdleTime?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="887c0-109">The default value of <xref:System.Net.ServicePoint.MaxIdleTime> is set by the <xref:System.Net.ServicePointManager.MaxServicePointIdleTime?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="887c0-110">当<xref:System.Net.ServicePoint.ConnectionLeaseTimeout>属性设置为-1，并且指定的时间过后，活动以外的值<xref:System.Net.ServicePoint>它服务下一个请求之后关闭连接。</span><span class="sxs-lookup"><span data-stu-id="887c0-110">When the <xref:System.Net.ServicePoint.ConnectionLeaseTimeout> property is set to a value other than -1, and after the specified time elapses, an active <xref:System.Net.ServicePoint> connection is closed after it services the next request.</span></span> <span data-ttu-id="887c0-111">这是适用于应用程序就是默认情况下不需要无限期，打开的活动连接。</span><span class="sxs-lookup"><span data-stu-id="887c0-111">This is useful for applications that do not require active connections that are opened indefinitely, as they are by default.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="887c0-112">在高负载情况下，某些应用程序可能耗尽线程池，这可能导致系统性能低下 （如高和变量事务时间） 中的可用线程。</span><span class="sxs-lookup"><span data-stu-id="887c0-112">In high load conditions, some applications may run out of free threads in the ThreadPool, which may lead to poor system performance (such as high and variable transaction times).</span></span> <span data-ttu-id="887c0-113">请参阅[ http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp ](http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp)提供大量可以进行若要解决此问题的配置更改。</span><span class="sxs-lookup"><span data-stu-id="887c0-113">See [http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp](http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp) for a number of configuration changes you can make to fix this issue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="887c0-114">下面的代码示例创建<xref:System.Net.ServicePoint>连接到 URI www.contoso.com 的对象。</span><span class="sxs-lookup"><span data-stu-id="887c0-114">The following code example creates a <xref:System.Net.ServicePoint> object that connects to the URI www.contoso.com.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#1)]
 [!code-csharp[System.Net.ServicePoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#1)]
 [!code-vb[System.Net.ServicePoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public Uri Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Address { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="887c0-115">获取此 <see cref="T:System.Net.ServicePoint" /> 对象连接到的服务器的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="887c0-115">Gets the Uniform Resource Identifier (URI) of the server that this <see cref="T:System.Net.ServicePoint" /> object connects to.</span></span></summary>
        <value><span data-ttu-id="887c0-116"><see cref="T:System.Uri" /> 类的实例，包含此 <see cref="T:System.Net.ServicePoint" /> 对象连接到的 Internet 服务器的 URI。</span><span class="sxs-lookup"><span data-stu-id="887c0-116">An instance of the <see cref="T:System.Uri" /> class that contains the URI of the Internet server that this <see cref="T:System.Net.ServicePoint" /> object connects to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="887c0-117">下面的代码示例显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="887c0-117">The following code example displays the value of this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#2)]
 [!code-csharp[System.Net.ServicePoint#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#2)]
 [!code-vb[System.Net.ServicePoint#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="887c0-118"><see cref="T:System.Net.ServicePoint" /> 处于宿主模式。</span><span class="sxs-lookup"><span data-stu-id="887c0-118">The <see cref="T:System.Net.ServicePoint" /> is in host mode.</span></span></exception>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="887c0-119">使用<see cref="P:System.Net.ServicePoint.Address" />如果<see cref="T:System.Net.ServicePoint" />通过代理服务器进行连接。</span><span class="sxs-lookup"><span data-stu-id="887c0-119">For using <see cref="P:System.Net.ServicePoint.Address" /> if the <see cref="T:System.Net.ServicePoint" /> connects through a proxy server.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BindIPEndPointDelegate">
      <MemberSignature Language="C#" Value="public System.Net.BindIPEndPoint BindIPEndPointDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.BindIPEndPoint BindIPEndPointDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.BindIPEndPointDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property BindIPEndPointDelegate As BindIPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::BindIPEndPoint ^ BindIPEndPointDelegate { System::Net::BindIPEndPoint ^ get(); void set(System::Net::BindIPEndPoint ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.BindIPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="887c0-120">指定用于将本地 <see cref="T:System.Net.IPEndPoint" /> 与 <see cref="T:System.Net.ServicePoint" /> 关联的委托。</span><span class="sxs-lookup"><span data-stu-id="887c0-120">Specifies the delegate to associate a local <see cref="T:System.Net.IPEndPoint" /> with a <see cref="T:System.Net.ServicePoint" />.</span></span></summary>
        <value><span data-ttu-id="887c0-121">强制 <see cref="T:System.Net.ServicePoint" /> 使用特定的本地 Internet 协议 (IP) 地址和端口号的委托。</span><span class="sxs-lookup"><span data-stu-id="887c0-121">A delegate that forces a <see cref="T:System.Net.ServicePoint" /> to use a particular local Internet Protocol (IP) address and port number.</span></span> <span data-ttu-id="887c0-122">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="887c0-122">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="887c0-123">一些负载平衡技术需要客户端使用特定本地 IP 地址和端口号，而不是<xref:System.Net.IPAddress.Any?displayProperty=nameWithType>(或<xref:System.Net.IPAddress.IPv6Any?displayProperty=nameWithType>的 Internet 协议版本 6) 和临时端口。</span><span class="sxs-lookup"><span data-stu-id="887c0-123">Some load balancing techniques require a client to use a specific local IP address and port number, rather than <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> (or <xref:System.Net.IPAddress.IPv6Any?displayProperty=nameWithType> for Internet Protocol Version 6) and an ephemeral port.</span></span> <span data-ttu-id="887c0-124">你<xref:System.Net.ServicePoint.BindIPEndPointDelegate>可满足此要求。</span><span class="sxs-lookup"><span data-stu-id="887c0-124">Your <xref:System.Net.ServicePoint.BindIPEndPointDelegate> can satisfy this requirement.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="887c0-125">用于绑定到的本地端口。</span><span class="sxs-lookup"><span data-stu-id="887c0-125">for binding to a local port.</span></span> <span data-ttu-id="887c0-126">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="887c0-126">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate Certificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate Certificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Certificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate ^ Certificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="887c0-127">获取为此 <see cref="T:System.Net.ServicePoint" /> 对象接收的证书。</span><span class="sxs-lookup"><span data-stu-id="887c0-127">Gets the certificate received for this <see cref="T:System.Net.ServicePoint" /> object.</span></span></summary>
        <value><span data-ttu-id="887c0-128"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 类的实例，包含为此 <see cref="T:System.Net.ServicePoint" /> 对象接收的安全证书。</span><span class="sxs-lookup"><span data-stu-id="887c0-128">An instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> class that contains the security certificate received for this <see cref="T:System.Net.ServicePoint" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="887c0-129">尽管<xref:System.Net.ServicePoint>对象可能会使对 Internet 资源的多个连接，它可以维护只有一个证书。</span><span class="sxs-lookup"><span data-stu-id="887c0-129">Although a <xref:System.Net.ServicePoint> object can make multiple connections to an Internet resource, it can maintain only one certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="887c0-130">下面的代码示例显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="887c0-130">The following code example displays the value of this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate ClientCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate ^ ClientCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="887c0-131">获取发送到服务器的上一个客户端证书。</span><span class="sxs-lookup"><span data-stu-id="887c0-131">Gets the last client certificate sent to the server.</span></span></summary>
        <value><span data-ttu-id="887c0-132"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 对象，包含发送到服务器的上一个客户端证书的公共值。</span><span class="sxs-lookup"><span data-stu-id="887c0-132">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object that contains the public values of the last client certificate sent to the server.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="887c0-133">下面的代码示例显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="887c0-133">The following code example displays the value of this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseConnectionGroup">
      <MemberSignature Language="C#" Value="public bool CloseConnectionGroup (string connectionGroupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CloseConnectionGroup(string connectionGroupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePoint.CloseConnectionGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CloseConnectionGroup (connectionGroupName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CloseConnectionGroup(System::String ^ connectionGroupName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionGroupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionGroupName"><span data-ttu-id="887c0-134">连接组的名称，该连接组包含要关闭的和要从此服务点移除的连接。</span><span class="sxs-lookup"><span data-stu-id="887c0-134">The name of the connection group that contains the connections to close and remove from this service point.</span></span></param>
        <summary><span data-ttu-id="887c0-135">从此 <see cref="T:System.Net.ServicePoint" /> 对象移除指定的连接组。</span><span class="sxs-lookup"><span data-stu-id="887c0-135">Removes the specified connection group from this <see cref="T:System.Net.ServicePoint" /> object.</span></span></summary>
        <returns><span data-ttu-id="887c0-136">指示连接组是否关闭的 <see cref="T:System.Boolean" /> 值。</span><span class="sxs-lookup"><span data-stu-id="887c0-136">A <see cref="T:System.Boolean" /> value that indicates whether the connection group was closed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="887c0-137">连接组将一组请求与一个特定连接或一组的连接相关联。</span><span class="sxs-lookup"><span data-stu-id="887c0-137">Connection groups associate a set of requests with a particular connection or set of connections.</span></span> <span data-ttu-id="887c0-138">此方法中删除，并关闭属于指定的连接组的所有连接。</span><span class="sxs-lookup"><span data-stu-id="887c0-138">This method removes and closes all connections that belong to the specified connection group.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionLeaseTimeout">
      <MemberSignature Language="C#" Value="public int ConnectionLeaseTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionLeaseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ConnectionLeaseTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionLeaseTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionLeaseTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="887c0-139">获取或设置在多少毫秒之后关闭活动 <see cref="T:System.Net.ServicePoint" /> 连接。</span><span class="sxs-lookup"><span data-stu-id="887c0-139">Gets or sets the number of milliseconds after which an active <see cref="T:System.Net.ServicePoint" /> connection is closed.</span></span></summary>
        <value><span data-ttu-id="887c0-140"><see cref="T:System.Int32" />，它指定活动 <see cref="T:System.Net.ServicePoint" /> 连接保持打开的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="887c0-140">A <see cref="T:System.Int32" /> that specifies the number of milliseconds that an active <see cref="T:System.Net.ServicePoint" /> connection remains open.</span></span> <span data-ttu-id="887c0-141">默认值为 -1，这样活动 <see cref="T:System.Net.ServicePoint" /> 连接可以无限期保持连接。</span><span class="sxs-lookup"><span data-stu-id="887c0-141">The default is -1, which allows an active <see cref="T:System.Net.ServicePoint" /> connection to stay connected indefinitely.</span></span> <span data-ttu-id="887c0-142">将此属性设置为 0 可在 <see cref="T:System.Net.ServicePoint" /> 连接为请求提供服务之后强制关闭该连接。</span><span class="sxs-lookup"><span data-stu-id="887c0-142">Set this property to 0 to force <see cref="T:System.Net.ServicePoint" /> connections to close after servicing a request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="887c0-143">你可以使用此属性以确保<xref:System.Net.ServicePoint>对象的活动连接不会保留打开无限期。</span><span class="sxs-lookup"><span data-stu-id="887c0-143">You can use this property to ensure that a <xref:System.Net.ServicePoint> object's active connections do not remain open indefinitely.</span></span> <span data-ttu-id="887c0-144">此属性适用于方案应删除并定期，如负载平衡方案重新建立连接。</span><span class="sxs-lookup"><span data-stu-id="887c0-144">This property is intended for scenarios where connections should be dropped and reestablished periodically, such as load balancing scenarios.</span></span>  
  
 <span data-ttu-id="887c0-145">默认情况下，当<xref:System.Net.HttpWebRequest.KeepAlive>是`true`对于请求，<xref:System.Net.ServicePoint.MaxIdleTime>属性设置为关闭的超时值<xref:System.Net.ServicePoint>由于无活动的连接。</span><span class="sxs-lookup"><span data-stu-id="887c0-145">By default, when <xref:System.Net.HttpWebRequest.KeepAlive> is `true` for a request, the <xref:System.Net.ServicePoint.MaxIdleTime> property sets the time-out for closing <xref:System.Net.ServicePoint> connections due to inactivity.</span></span> <span data-ttu-id="887c0-146">如果<xref:System.Net.ServicePoint>具有活动连接，<xref:System.Net.ServicePoint.MaxIdleTime>有影响，并且连接无限期地保持打开。</span><span class="sxs-lookup"><span data-stu-id="887c0-146">If the <xref:System.Net.ServicePoint> has active connections, <xref:System.Net.ServicePoint.MaxIdleTime> has no effect and the connections remain open indefinitely.</span></span>  
  
 <span data-ttu-id="887c0-147">当<xref:System.Net.ServicePoint.ConnectionLeaseTimeout>属性设置为-1，并且指定的时间过后，活动以外的值<xref:System.Net.ServicePoint>为请求提供服务通过设置后关闭连接<xref:System.Net.HttpWebRequest.KeepAlive>到`false`该请求中。</span><span class="sxs-lookup"><span data-stu-id="887c0-147">When the <xref:System.Net.ServicePoint.ConnectionLeaseTimeout> property is set to a value other than -1, and after the specified time elapses, an active <xref:System.Net.ServicePoint> connection is closed after servicing a request by setting <xref:System.Net.HttpWebRequest.KeepAlive> to `false` in that request.</span></span>  
  
 <span data-ttu-id="887c0-148">设置此值将影响所有连接由<xref:System.Net.ServicePoint>对象。</span><span class="sxs-lookup"><span data-stu-id="887c0-148">Setting this value affects all connections managed by the <xref:System.Net.ServicePoint> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="887c0-149">下面的代码示例设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="887c0-149">The following code example sets the value of this property.</span></span>  
  
 [!code-cpp[NCLServicePoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLServicePoint/CPP/nclservicepoint.cpp#1)]
 [!code-csharp[NCLServicePoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLServicePoint/CS/nclservicepoint.cs#1)]
 [!code-vb[NCLServicePoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLServicePoint/VB/nclservicepoint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="887c0-150">为 Set 操作指定的值为小于 -1 的负数。</span><span class="sxs-lookup"><span data-stu-id="887c0-150">The value specified for a set operation is a negative number less than -1.</span></span></exception>
        <altmember cref="P:System.Net.HttpWebRequest.KeepAlive" />
        <altmember cref="P:System.Net.FtpWebRequest.KeepAlive" />
        <altmember cref="P:System.Net.HttpListenerRequest.KeepAlive" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionLimit">
      <MemberSignature Language="C#" Value="public int ConnectionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ConnectionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionLimit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="887c0-151">获取或设置此 <see cref="T:System.Net.ServicePoint" /> 对象上允许的最大连接数。</span><span class="sxs-lookup"><span data-stu-id="887c0-151">Gets or sets the maximum number of connections allowed on this <see cref="T:System.Net.ServicePoint" /> object.</span></span></summary>
        <value><span data-ttu-id="887c0-152">此 <see cref="T:System.Net.ServicePoint" /> 对象上允许的最大连接数。</span><span class="sxs-lookup"><span data-stu-id="887c0-152">The maximum number of connections allowed on this <see cref="T:System.Net.ServicePoint" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="887c0-153"><xref:System.Net.ServicePoint.ConnectionLimit>属性设置的最大连接数<xref:System.Net.ServicePoint>对象可以对 Internet 资源。</span><span class="sxs-lookup"><span data-stu-id="887c0-153">The <xref:System.Net.ServicePoint.ConnectionLimit> property sets the maximum number of connections that the <xref:System.Net.ServicePoint> object can make to an Internet resource.</span></span> <span data-ttu-id="887c0-154">值<xref:System.Net.ServicePoint.ConnectionLimit>属性设置为的值<xref:System.Net.ServicePointManager.DefaultConnectionLimit?displayProperty=nameWithType>属性时<xref:System.Net.ServicePoint>创建对象; 后续更改为<xref:System.Net.ServicePointManager.DefaultConnectionLimit>对现有没有影响<xref:System.Net.ServicePoint>对象。</span><span class="sxs-lookup"><span data-stu-id="887c0-154">The value of the <xref:System.Net.ServicePoint.ConnectionLimit> property is set to the value of the <xref:System.Net.ServicePointManager.DefaultConnectionLimit?displayProperty=nameWithType> property when the <xref:System.Net.ServicePoint> object is created; subsequent changes to <xref:System.Net.ServicePointManager.DefaultConnectionLimit> have no effect on existing <xref:System.Net.ServicePoint> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="887c0-155">下面的代码示例使用<xref:System.Net.ServicePoint.ConnectionLimit>属性检查的最大连接数，<xref:System.Net.ServicePoint>对象可以建立到指定的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="887c0-155">The following code example uses the <xref:System.Net.ServicePoint.ConnectionLimit> property to check the maximum number of connections that the <xref:System.Net.ServicePoint> object can make to the specified Uniform Resource Identifier (URI).</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#4)]
 [!code-csharp[System.Net.ServicePoint#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#4)]
 [!code-vb[System.Net.ServicePoint#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="887c0-156">连接限制为 0 或小于 0。</span><span class="sxs-lookup"><span data-stu-id="887c0-156">The connection limit is equal to or less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionName">
      <MemberSignature Language="C#" Value="public string ConnectionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionName" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ConnectionName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="887c0-157">获取连接名。</span><span class="sxs-lookup"><span data-stu-id="887c0-157">Gets the connection name.</span></span></summary>
        <value><span data-ttu-id="887c0-158">一个表示连接名的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="887c0-158">A <see cref="T:System.String" /> that represents the connection name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="887c0-159">如果<xref:System.Net.ServicePoint>对象通过调用构造<xref:System.Net.ServicePointManager.FindServicePoint%2A>重载<xref:System.Uri>自变量，则<xref:System.Net.ServicePoint.ConnectionName>属性表示<xref:System.Uri.Scheme>属性<xref:System.Uri>使用的对象。</span><span class="sxs-lookup"><span data-stu-id="887c0-159">If the <xref:System.Net.ServicePoint> object was constructed by calling a <xref:System.Net.ServicePointManager.FindServicePoint%2A> overload with a <xref:System.Uri> argument, then the <xref:System.Net.ServicePoint.ConnectionName> property represents the <xref:System.Uri.Scheme> property of the <xref:System.Uri> object used.</span></span>  
  
 <span data-ttu-id="887c0-160">如果<xref:System.Net.ServicePoint>对象从网络主机和端口，构造<xref:System.Net.ServicePoint.ConnectionName>属性包含一个字符串，表示主机和网络端口。</span><span class="sxs-lookup"><span data-stu-id="887c0-160">If the <xref:System.Net.ServicePoint> object was constructed from a network host and port, the <xref:System.Net.ServicePoint.ConnectionName> property contains a string that represents the host and the network port.</span></span> <span data-ttu-id="887c0-161">如果<xref:System.Net.ServicePoint.ConnectionName>属性设置从主机和端口，仅在构造时<xref:System.Net.WebRequest>对象具有相同<xref:System.Net.WebRequest.ConnectionGroupName>值可以使用此<xref:System.Net.ServicePoint>对象。</span><span class="sxs-lookup"><span data-stu-id="887c0-161">If the <xref:System.Net.ServicePoint.ConnectionName> property is set when constructed from a host and port, only <xref:System.Net.WebRequest> objects with the same <xref:System.Net.WebRequest.ConnectionGroupName> value can use this <xref:System.Net.ServicePoint> object.</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Net.ServicePoint#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#4)]
 [!code-csharp[System.Net.ServicePoint#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#4)]
 [!code-vb[System.Net.ServicePoint#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentConnections">
      <MemberSignature Language="C#" Value="public int CurrentConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentConnections" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.CurrentConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentConnections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentConnections { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="887c0-162">获取与此 <see cref="T:System.Net.ServicePoint" /> 对象关联的打开连接的数目。</span><span class="sxs-lookup"><span data-stu-id="887c0-162">Gets the number of open connections associated with this <see cref="T:System.Net.ServicePoint" /> object.</span></span></summary>
        <value><span data-ttu-id="887c0-163">与此 <see cref="T:System.Net.ServicePoint" /> 对象关联的打开连接的数目。</span><span class="sxs-lookup"><span data-stu-id="887c0-163">The number of open connections associated with this <see cref="T:System.Net.ServicePoint" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="887c0-164"><xref:System.Net.ServicePoint.CurrentConnections>属性包含与此关联的打开 Internet 连接数<xref:System.Net.ServicePoint>对象。</span><span class="sxs-lookup"><span data-stu-id="887c0-164">The <xref:System.Net.ServicePoint.CurrentConnections> property contains the number of open Internet connections associated with this <xref:System.Net.ServicePoint> object.</span></span> <span data-ttu-id="887c0-165">值<xref:System.Net.ServicePoint.CurrentConnections>不能超出<xref:System.Net.ServicePoint.ConnectionLimit>。</span><span class="sxs-lookup"><span data-stu-id="887c0-165">The value of <xref:System.Net.ServicePoint.CurrentConnections> cannot exceed that of <xref:System.Net.ServicePoint.ConnectionLimit>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="887c0-166">下面的代码示例使用<xref:System.Net.ServicePoint.CurrentConnections>属性来确定与此关联的打开 Internet 连接数<xref:System.Net.ServicePoint>对象。</span><span class="sxs-lookup"><span data-stu-id="887c0-166">The following code example uses the <xref:System.Net.ServicePoint.CurrentConnections> property to determine the number of open Internet connections associated with this <xref:System.Net.ServicePoint> object.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#2)]
 [!code-csharp[System.Net.ServicePoint#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#2)]
 [!code-vb[System.Net.ServicePoint#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expect100Continue">
      <MemberSignature Language="C#" Value="public bool Expect100Continue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Expect100Continue" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.Expect100Continue" />
      <MemberSignature Language="VB.NET" Value="Public Property Expect100Continue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Expect100Continue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="887c0-167">获取或设置一个 <see cref="T:System.Boolean" /> 值，该值确定是否使用 100-Continue 行为。</span><span class="sxs-lookup"><span data-stu-id="887c0-167">Gets or sets a <see cref="T:System.Boolean" /> value that determines whether 100-Continue behavior is used.</span></span></summary>
        <value>
          <span data-ttu-id="887c0-168">如果 <see langword="POST" /> 请求需要 100-Continue 响应，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="887c0-168"><see langword="true" /> to expect 100-Continue responses for <see langword="POST" /> requests; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="887c0-169">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="887c0-169">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="887c0-170">当此属性设置为`true`，客户端请求使用`POST`方法应该可以接收 100-继续从要指示客户端应发送要发布的数据的服务器的响应。</span><span class="sxs-lookup"><span data-stu-id="887c0-170">When this property is set to `true`, client requests that use the `POST` method expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted.</span></span> <span data-ttu-id="887c0-171">此机制允许客户端以避免通过网络发送大量数据时的服务器，根据请求标头，想要拒绝请求。</span><span class="sxs-lookup"><span data-stu-id="887c0-171">This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.</span></span>  
  
 <span data-ttu-id="887c0-172">例如，假定<xref:System.Net.ServicePoint.Expect100Continue>属性是`false`。</span><span class="sxs-lookup"><span data-stu-id="887c0-172">For example, assume the <xref:System.Net.ServicePoint.Expect100Continue> property is `false`.</span></span> <span data-ttu-id="887c0-173">当请求发送到服务器时，它包括数据。</span><span class="sxs-lookup"><span data-stu-id="887c0-173">When the request is sent to the server, it includes the data.</span></span> <span data-ttu-id="887c0-174">如果在读取请求标头之后, 在服务器要求身份验证和发送的 401 响应，客户端必须重新发送具有正确的身份验证标头的数据。</span><span class="sxs-lookup"><span data-stu-id="887c0-174">If, after reading the request headers, the server requires authentication and sends a 401 response, the client must resend the data with proper authentication headers.</span></span>  
  
 <span data-ttu-id="887c0-175">如果<xref:System.Net.ServicePoint.Expect100Continue>属性是`true`，请求标头发送到服务器。</span><span class="sxs-lookup"><span data-stu-id="887c0-175">If the <xref:System.Net.ServicePoint.Expect100Continue> property is `true`, the request headers are sent to the server.</span></span> <span data-ttu-id="887c0-176">如果服务器不拒绝了请求，则将发送一个 100-继续响应信号可以传输数据。</span><span class="sxs-lookup"><span data-stu-id="887c0-176">If the server has not rejected the request, it sends a 100-Continue response signaling that the data can be transmitted.</span></span> <span data-ttu-id="887c0-177">如果如下所示前面的示例中，服务器需要身份验证，将它发送的 401 响应，客户端没有不必要地传输数据。</span><span class="sxs-lookup"><span data-stu-id="887c0-177">If, as in the preceding example, the server requires authentication, it sends the 401 response and the client has not unnecessarily transmitted the data.</span></span>  
  
 <span data-ttu-id="887c0-178">更改此属性的值不会影响现有连接。</span><span class="sxs-lookup"><span data-stu-id="887c0-178">Changing the value of this property does not affect existing connections.</span></span> <span data-ttu-id="887c0-179">仅会影响在更改后创建的新连接。</span><span class="sxs-lookup"><span data-stu-id="887c0-179">Only new connections created after the change are affected.</span></span>  
  
 <span data-ttu-id="887c0-180">Expect 100-继续行为完全部分所述 IETF RFC 2616 10.1.1 一起提供。</span><span class="sxs-lookup"><span data-stu-id="887c0-180">The Expect 100-Continue behavior is fully described in IETF RFC 2616 Section 10.1.1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="887c0-181">下面的代码示例显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="887c0-181">The following code example displays the value of this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#9](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#9)]
 [!code-csharp[System.Net.ServicePoint#9](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#9)]
 [!code-vb[System.Net.ServicePoint#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdleSince">
      <MemberSignature Language="C#" Value="public DateTime IdleSince { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime IdleSince" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.IdleSince" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IdleSince As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime IdleSince { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="887c0-182">获取上次将 <see cref="T:System.Net.ServicePoint" /> 对象连接到主机的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="887c0-182">Gets the date and time that the <see cref="T:System.Net.ServicePoint" /> object was last connected to a host.</span></span></summary>
        <value><span data-ttu-id="887c0-183"><see cref="T:System.DateTime" /> 对象，包含上次连接 <see cref="T:System.Net.ServicePoint" /> 对象的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="887c0-183">A <see cref="T:System.DateTime" /> object that contains the date and time at which the <see cref="T:System.Net.ServicePoint" /> object was last connected.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="887c0-184"><xref:System.Net.ServicePoint.IdleSince>属性记录的最后一个的日期和时间主机中断开服务点。</span><span class="sxs-lookup"><span data-stu-id="887c0-184">The <xref:System.Net.ServicePoint.IdleSince> property records the last date and time at which a service point was disconnected from a host.</span></span> <span data-ttu-id="887c0-185">时的当前时间之间的差异和<xref:System.Net.ServicePoint.IdleSince>超过的值<xref:System.Net.ServicePoint.MaxIdleTime>、<xref:System.Net.ServicePoint>对象是可用于回收到另一个连接。</span><span class="sxs-lookup"><span data-stu-id="887c0-185">When the difference between the current time and <xref:System.Net.ServicePoint.IdleSince> exceeds the value of <xref:System.Net.ServicePoint.MaxIdleTime>, the <xref:System.Net.ServicePoint> object is available for recycling to another connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="887c0-186">下面的代码示例使用<xref:System.Net.ServicePoint.IdleSince>属性来设置和检索日期和时间<xref:System.Net.ServicePoint>对象上次连接到主机。</span><span class="sxs-lookup"><span data-stu-id="887c0-186">The following code example uses the <xref:System.Net.ServicePoint.IdleSince> property to set and retrieve the date and time that the <xref:System.Net.ServicePoint> object was last connected to a host.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#3)]
 [!code-csharp[System.Net.ServicePoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#3)]
 [!code-vb[System.Net.ServicePoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxIdleTime">
      <MemberSignature Language="C#" Value="public int MaxIdleTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxIdleTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.MaxIdleTime" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxIdleTime As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxIdleTime { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="887c0-187">获取或设置与 <see cref="T:System.Net.ServicePoint" /> 对象关联的连接在关闭前可以持续空闲的时间。</span><span class="sxs-lookup"><span data-stu-id="887c0-187">Gets or sets the amount of time a connection associated with the <see cref="T:System.Net.ServicePoint" /> object can remain idle before the connection is closed.</span></span></summary>
        <value><span data-ttu-id="887c0-188">与 <see cref="T:System.Net.ServicePoint" /> 对象关联的连接在关闭和重用于另一个连接前可以持续空闲的时间长度（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="887c0-188">The length of time, in milliseconds, that a connection associated with the <see cref="T:System.Net.ServicePoint" /> object can remain idle before it is closed and reused for another connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="887c0-189">你可以设置<xref:System.Net.ServicePoint.MaxIdleTime>到<xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>以指示连接是否与<xref:System.Net.ServicePoint>对象永远不应超时。</span><span class="sxs-lookup"><span data-stu-id="887c0-189">You can set <xref:System.Net.ServicePoint.MaxIdleTime> to <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> to indicate that a connection associated with the <xref:System.Net.ServicePoint> object should never time out.</span></span>  
  
 <span data-ttu-id="887c0-190">默认值<xref:System.Net.ServicePoint.MaxIdleTime>属性是值的<xref:System.Net.ServicePointManager.MaxServicePointIdleTime?displayProperty=nameWithType>属性时<xref:System.Net.ServicePoint>创建对象。</span><span class="sxs-lookup"><span data-stu-id="887c0-190">The default value of the <xref:System.Net.ServicePoint.MaxIdleTime> property is the value of the <xref:System.Net.ServicePointManager.MaxServicePointIdleTime?displayProperty=nameWithType> property when the <xref:System.Net.ServicePoint> object is created.</span></span> <span data-ttu-id="887c0-191">对后续更改<xref:System.Net.ServicePointManager.MaxServicePointIdleTime>属性具有不会影响现有<xref:System.Net.ServicePoint>对象。</span><span class="sxs-lookup"><span data-stu-id="887c0-191">Subsequent changes to the <xref:System.Net.ServicePointManager.MaxServicePointIdleTime> property have no effect on existing <xref:System.Net.ServicePoint> objects.</span></span>  
  
 <span data-ttu-id="887c0-192">当<xref:System.Net.ServicePoint.MaxIdleTime>与关联的连接<xref:System.Net.ServicePoint>是超出，连接保持打开状态直到应用程序尝试使用该连接。</span><span class="sxs-lookup"><span data-stu-id="887c0-192">When the <xref:System.Net.ServicePoint.MaxIdleTime> for a connection associated with a <xref:System.Net.ServicePoint> is exceeded, the connection remains open until the application tries to use the connection.</span></span> <span data-ttu-id="887c0-193">在那时，框架将关闭连接，并创建一个新连接到远程主机。</span><span class="sxs-lookup"><span data-stu-id="887c0-193">At that time, the Framework closes the connection and creates a new connection to the remote host.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="887c0-194">下面的代码示例使用<xref:System.Net.ServicePoint.MaxIdleTime>属性用于设置和检索<xref:System.Net.ServicePoint>空闲时间。</span><span class="sxs-lookup"><span data-stu-id="887c0-194">The following code example uses the <xref:System.Net.ServicePoint.MaxIdleTime> property to set and retrieve the <xref:System.Net.ServicePoint> idle time.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#3)]
 [!code-csharp[System.Net.ServicePoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#3)]
 [!code-vb[System.Net.ServicePoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="887c0-195"><see cref="P:System.Net.ServicePoint.MaxIdleTime" /> 被设置为小于 <see cref="F:System.Threading.Timeout.Infinite" /> 或大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="887c0-195"><see cref="P:System.Net.ServicePoint.MaxIdleTime" /> is set to less than <see cref="F:System.Threading.Timeout.Infinite" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public virtual Version ProtocolVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ProtocolVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ProtocolVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Version ^ ProtocolVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="887c0-196">获取 <see cref="T:System.Net.ServicePoint" /> 对象使用的 HTTP 协议的版本。</span><span class="sxs-lookup"><span data-stu-id="887c0-196">Gets the version of the HTTP protocol that the <see cref="T:System.Net.ServicePoint" /> object uses.</span></span></summary>
        <value><span data-ttu-id="887c0-197"><see cref="T:System.Version" /> 对象，它包含 <see cref="T:System.Net.ServicePoint" /> 对象使用的 HTTP 协议版本。</span><span class="sxs-lookup"><span data-stu-id="887c0-197">A <see cref="T:System.Version" /> object that contains the HTTP protocol version that the <see cref="T:System.Net.ServicePoint" /> object uses.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="887c0-198">HTTP 协议版本是 HTTP/1.0 和 HTTP/1.1。</span><span class="sxs-lookup"><span data-stu-id="887c0-198">The HTTP protocol versions are HTTP/1.0 and HTTP/1.1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="887c0-199">下面的代码示例显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="887c0-199">The following code example displays the value of this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="887c0-200">获取或设置此 <see cref="T:System.Net.ServicePoint" /> 使用的套接字的接收缓冲区的大小。</span><span class="sxs-lookup"><span data-stu-id="887c0-200">Gets or sets the size of the receiving buffer for the socket used by this <see cref="T:System.Net.ServicePoint" />.</span></span></summary>
        <value><span data-ttu-id="887c0-201">包含接收缓冲区的大小（以字节为单位）的 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="887c0-201">A <see cref="T:System.Int32" /> that contains the size, in bytes, of the receive buffer.</span></span> <span data-ttu-id="887c0-202">默认值为 8192。</span><span class="sxs-lookup"><span data-stu-id="887c0-202">The default is 8192.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="887c0-203">有关附加信息，请参见 <xref:System.Net.Sockets.Socket.ReceiveBufferSize>。</span><span class="sxs-lookup"><span data-stu-id="887c0-203">For additional information, see <xref:System.Net.Sockets.Socket.ReceiveBufferSize>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="887c0-204">下面的代码示例设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="887c0-204">The following code example sets the value of this property.</span></span>  
  
 [!code-cpp[NCLServicePoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLServicePoint/CPP/nclservicepoint.cpp#1)]
 [!code-csharp[NCLServicePoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLServicePoint/CS/nclservicepoint.cs#1)]
 [!code-vb[NCLServicePoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLServicePoint/VB/nclservicepoint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="887c0-205">为 Set 操作指定的值大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="887c0-205">The value specified for a set operation is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetTcpKeepAlive">
      <MemberSignature Language="C#" Value="public void SetTcpKeepAlive (bool enabled, int keepAliveTime, int keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTcpKeepAlive(bool enabled, int32 keepAliveTime, int32 keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTcpKeepAlive (enabled As Boolean, keepAliveTime As Integer, keepAliveInterval As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTcpKeepAlive(bool enabled, int keepAliveTime, int keepAliveInterval);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
        <Parameter Name="keepAliveTime" Type="System.Int32" />
        <Parameter Name="keepAliveInterval" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enabled"><span data-ttu-id="887c0-206">如果设置为 true，则使用指定的 <c>keepAliveTime</c> 和 <c>keepAliveInterval</c> 值启用 TCP 连接上的 TCP keep-alive 选项。</span><span class="sxs-lookup"><span data-stu-id="887c0-206">If set to true, then the TCP keep-alive option on a TCP connection will be enabled using the specified <c>keepAliveTime</c> and <c>keepAliveInterval</c> values.</span></span>  
  
 <span data-ttu-id="887c0-207">如果设置为 false，则将禁用 TCP keep-alive 选项，并忽略剩余参数。</span><span class="sxs-lookup"><span data-stu-id="887c0-207">If set to false, then the TCP keep-alive option is disabled and the remaining parameters are ignored.</span></span>  
  
 <span data-ttu-id="887c0-208">默认值为 False。</span><span class="sxs-lookup"><span data-stu-id="887c0-208">The default value is false.</span></span></param>
        <param name="keepAliveTime"><span data-ttu-id="887c0-209">指定发送第一个 keep-alive 数据包之前没有活动的超时时间（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="887c0-209">Specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent.</span></span>  
  
 <span data-ttu-id="887c0-210">该值必须大于 0。</span><span class="sxs-lookup"><span data-stu-id="887c0-210">The value must be greater than 0.</span></span>  <span data-ttu-id="887c0-211">如果传递的值小于或等于零，则会引发 <see cref="T:System.ArgumentOutOfRangeException" />。</span><span class="sxs-lookup"><span data-stu-id="887c0-211">If a value of less than or equal to zero is passed an <see cref="T:System.ArgumentOutOfRangeException" /> is thrown.</span></span></param>
        <param name="keepAliveInterval"><span data-ttu-id="887c0-212">指定当未收到确认消息时发送连续 keep-alive 数据包之间的间隔（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="887c0-212">Specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.</span></span>  
  
 <span data-ttu-id="887c0-213">该值必须大于 0。</span><span class="sxs-lookup"><span data-stu-id="887c0-213">The value must be greater than 0.</span></span>  <span data-ttu-id="887c0-214">如果传递的值小于或等于零，则会引发 <see cref="T:System.ArgumentOutOfRangeException" />。</span><span class="sxs-lookup"><span data-stu-id="887c0-214">If a value of less than or equal to zero is passed an <see cref="T:System.ArgumentOutOfRangeException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="887c0-215">对 TCP 连接启用或禁用 keep-alive 选项。</span><span class="sxs-lookup"><span data-stu-id="887c0-215">Enables or disables the keep-alive option on a TCP connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="887c0-216">应用程序可以请求 TCP/IP 提供程序启用的 TCP 连接上的保持连接数据包使用。</span><span class="sxs-lookup"><span data-stu-id="887c0-216">An application can request that a TCP/IP provider enable the use of keep-alive packets on a TCP connection.</span></span> <span data-ttu-id="887c0-217">默认为禁用了 TCP 连接上的保持连接数据包的使用。</span><span class="sxs-lookup"><span data-stu-id="887c0-217">The default is that the use of keep-alive packets on a TCP connection is disabled.</span></span>  
  
 <span data-ttu-id="887c0-218">默认设置 TCP 套接字时初始化到 2 小时内保持活动状态设置超时和保持活动状态的间隔为 1 秒。</span><span class="sxs-lookup"><span data-stu-id="887c0-218">The default settings when a TCP socket is initialized sets the keep-alive timeout to 2 hours and the keep-alive interval to 1 second.</span></span> <span data-ttu-id="887c0-219">`keepAliveTime`参数指定超时，以毫秒为单位，发送第一个 keep-alive 数据包之前没有活动。</span><span class="sxs-lookup"><span data-stu-id="887c0-219">The `keepAliveTime` parameter specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent.</span></span> <span data-ttu-id="887c0-220">`keepAliveInterval`参数指定的间隔，以毫秒为单位，之间时收到任何确认消息时发送连续 keep-alive 数据包。</span><span class="sxs-lookup"><span data-stu-id="887c0-220">The `keepAliveInterval` parameter specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.</span></span> <span data-ttu-id="887c0-221">保持活动状态的探测数不能更改，并设置为 10。</span><span class="sxs-lookup"><span data-stu-id="887c0-221">The number of keep-alive probes cannot be changed and is set to 10.</span></span>  
  
 <span data-ttu-id="887c0-222">如果 TCP 连接删除 keep-alive，因此<xref:System.Net.Sockets.SocketError>的<xref:System.Net.Sockets.SocketError.NetworkReset>套接字，返回的任何正在进行的调用，任何后续调用将失败并<xref:System.Net.Sockets.SocketError>的<xref:System.Net.Sockets.SocketError.NotConnected>。</span><span class="sxs-lookup"><span data-stu-id="887c0-222">If a TCP connection is dropped as the result of keep-alives, a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError.NetworkReset> is returned to any calls in progress on the socket, and any subsequent calls will fail with a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError.NotConnected>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="887c0-223">为 <paramref name="keepAliveTime" /> 或 <paramref name="keepAliveInterval" /> 参数指定的值小于等于 0.</span><span class="sxs-lookup"><span data-stu-id="887c0-223">The value specified for <paramref name="keepAliveTime" /> or <paramref name="keepAliveInterval" /> parameter is less than or equal to 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsPipelining">
      <MemberSignature Language="C#" Value="public bool SupportsPipelining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsPipelining" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.SupportsPipelining" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsPipelining As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsPipelining { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="887c0-224">指示 <see cref="T:System.Net.ServicePoint" /> 对象是否支持管道连接。</span><span class="sxs-lookup"><span data-stu-id="887c0-224">Indicates whether the <see cref="T:System.Net.ServicePoint" /> object supports pipelined connections.</span></span></summary>
        <value>
          <span data-ttu-id="887c0-225">如果 <see cref="T:System.Net.ServicePoint" /> 对象支持管道连接，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="887c0-225"><see langword="true" /> if the <see cref="T:System.Net.ServicePoint" /> object supports pipelined connections; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="887c0-226">管道允许客户端发送的持续性连接跨多个请求，而无需等待来自服务器的每个响应。</span><span class="sxs-lookup"><span data-stu-id="887c0-226">Pipelining allows clients to send multiple requests across a persistent connection without waiting for each response from the server.</span></span> <span data-ttu-id="887c0-227">已接收到请求，服务器的相同顺序发送响应。</span><span class="sxs-lookup"><span data-stu-id="887c0-227">The server sends the responses in the same order as the requests were received.</span></span>  
  
 <span data-ttu-id="887c0-228">IETF RFC 2616 8.1.2.2 部分中的详细描述管道。</span><span class="sxs-lookup"><span data-stu-id="887c0-228">Pipelining is described in detail in IETF RFC 2616 section 8.1.2.2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="887c0-229">下面的代码示例显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="887c0-229">The following code example displays the value of this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseNagleAlgorithm">
      <MemberSignature Language="C#" Value="public bool UseNagleAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseNagleAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.UseNagleAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property UseNagleAlgorithm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseNagleAlgorithm { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="887c0-230">获取或设置一个 <see cref="T:System.Boolean" /> 值，该值确定在此 <see cref="T:System.Net.ServicePoint" /> 对象所管理的连接上是否使用 Nagle 算法。</span><span class="sxs-lookup"><span data-stu-id="887c0-230">Gets or sets a <see cref="T:System.Boolean" /> value that determines whether the Nagle algorithm is used on connections managed by this <see cref="T:System.Net.ServicePoint" /> object.</span></span></summary>
        <value>
          <span data-ttu-id="887c0-231">如果使用 Nagle 算法，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="887c0-231"><see langword="true" /> to use the Nagle algorithm; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="887c0-232">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="887c0-232">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="887c0-233">Nagle 算法用于缓冲的数据的小型数据包并将它们作为单个数据包传输。</span><span class="sxs-lookup"><span data-stu-id="887c0-233">The Nagle algorithm is used to buffer small packets of data and transmit them as a single packet.</span></span> <span data-ttu-id="887c0-234">此过程中，称为"nagling"广泛使用，因为它减少了传输数据包的数目，并降低了每个数据包的开销。</span><span class="sxs-lookup"><span data-stu-id="887c0-234">This process, referred to as "nagling," is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.</span></span>  
  
 <span data-ttu-id="887c0-235">更改此属性的值不会影响现有连接。</span><span class="sxs-lookup"><span data-stu-id="887c0-235">Changing the value of this property does not affect existing connections.</span></span> <span data-ttu-id="887c0-236">仅会影响在更改后创建的新连接。</span><span class="sxs-lookup"><span data-stu-id="887c0-236">Only new connections created after the change are affected.</span></span>  
  
 <span data-ttu-id="887c0-237">Nagle 算法完全述 IETF RFC 896。</span><span class="sxs-lookup"><span data-stu-id="887c0-237">The Nagle algorithm is fully described in IETF RFC 896.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="887c0-238">下面的代码示例显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="887c0-238">The following code example displays the value of this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#9](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#9)]
 [!code-csharp[System.Net.ServicePoint#9](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#9)]
 [!code-vb[System.Net.ServicePoint#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>