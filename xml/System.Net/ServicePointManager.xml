<Type Name="ServicePointManager" FullName="System.Net.ServicePointManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f72344dcdd86e1e2513d198545e7195049d4ea26" />
    <Meta Name="ms.sourcegitcommit" Value="3507e865a3613c00760f25ad1045aaa11bae4dd8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/23/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServicePointManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ServicePointManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.ServicePointManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ServicePointManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServicePointManager" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.ServicePoint</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="569bb-101">管理 <see cref="T:System.Net.ServicePoint" /> 对象集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="569bb-101">Manages the collection of <see cref="T:System.Net.ServicePoint" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="569bb-102"><xref:System.Net.ServicePointManager> 是用于创建、 维护和删除的实例的静态类<xref:System.Net.ServicePoint>类。</span><span class="sxs-lookup"><span data-stu-id="569bb-102"><xref:System.Net.ServicePointManager> is a static class used to create, maintain, and delete instances of the <xref:System.Net.ServicePoint> class.</span></span>  
  
 <span data-ttu-id="569bb-103">当应用程序请求对 Internet 资源统一资源标识符 (URI) 的连接通过<xref:System.Net.ServicePointManager>对象，<xref:System.Net.ServicePointManager>返回<xref:System.Net.ServicePoint>对象，其中包含的主机和标识的方案的连接信息通过 URI。</span><span class="sxs-lookup"><span data-stu-id="569bb-103">When an application requests a connection to an Internet resource Uniform Resource Identifier (URI) through the <xref:System.Net.ServicePointManager> object, the <xref:System.Net.ServicePointManager> returns a <xref:System.Net.ServicePoint> object that contains connection information for the host and scheme identified by the URI.</span></span> <span data-ttu-id="569bb-104">如果没有现有<xref:System.Net.ServicePoint>方案，该主机以及对象<xref:System.Net.ServicePointManager>对象返回现有<xref:System.Net.ServicePoint>对象; 否则为<xref:System.Net.ServicePointManager>对象创建一个新<xref:System.Net.ServicePoint>对象。</span><span class="sxs-lookup"><span data-stu-id="569bb-104">If there is an existing <xref:System.Net.ServicePoint> object for that host and scheme, the <xref:System.Net.ServicePointManager> object returns the existing <xref:System.Net.ServicePoint> object; otherwise, the <xref:System.Net.ServicePointManager> object creates a new <xref:System.Net.ServicePoint> object.</span></span>  
  
 <span data-ttu-id="569bb-105">.NET Framework 4.6 包括一个新的安全功能，将阻止不安全的密码和哈希算法的连接。</span><span class="sxs-lookup"><span data-stu-id="569bb-105">The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.</span></span> <span data-ttu-id="569bb-106">如使用 TLS/SSL 通过 Api 的应用程序<xref:System.Net.Http.HttpClient>， <xref:System.Net.HttpWebRequest>， <xref:System.Net.FtpWebRequest>， <xref:System.Net.Mail.SmtpClient>，<xref:System.Net.Security.SslStream>等和面向.NET Framework 4.6 默认情况下获得更安全的行为。</span><span class="sxs-lookup"><span data-stu-id="569bb-106">Applications using TLS/SSL through APIs such as <xref:System.Net.Http.HttpClient>, <xref:System.Net.HttpWebRequest>, <xref:System.Net.FtpWebRequest>, <xref:System.Net.Mail.SmtpClient>, <xref:System.Net.Security.SslStream>, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.</span></span>  
  
 <span data-ttu-id="569bb-107">开发人员可能想要选择退出此行为以便保持带 RC4 服务使用其现有 SSL3 服务或 TLS 互操作性。</span><span class="sxs-lookup"><span data-stu-id="569bb-107">Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services or TLS w/ RC4 services.</span></span> <span data-ttu-id="569bb-108">[这篇文章](https://support.microsoft.com/kb/3069494)说明如何修改你的代码，以便禁用新的行为。</span><span class="sxs-lookup"><span data-stu-id="569bb-108">[This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="569bb-109">下面的代码示例创建<xref:System.Net.ServicePoint>到 URI www.contoso.com 的连接的对象。</span><span class="sxs-lookup"><span data-stu-id="569bb-109">The following code example creates a <xref:System.Net.ServicePoint> object for connections to the URI www.contoso.com.</span></span>  
  
 [!code-cpp[Classic ServicePoint Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic ServicePoint Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServicePoint Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic ServicePoint Example/CS/source.cs#1)]
 [!code-vb[Classic ServicePoint Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic ServicePoint Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.ServicePoint" />
  </Docs>
  <Members>
    <Member MemberName="CertificatePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.ICertificatePolicy CertificatePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.ICertificatePolicy CertificatePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.CertificatePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CertificatePolicy As ICertificatePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::ICertificatePolicy ^ CertificatePolicy { System::Net::ICertificatePolicy ^ get(); void set(System::Net::ICertificatePolicy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use ServerCertificateValidationCallback instead", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICertificatePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="569bb-110">获取或设置服务器证书的策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-110">Gets or sets policy for server certificates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="569bb-111">一个实现 <see cref="T:System.Net.ICertificatePolicy" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-111">An object that implements the <see cref="T:System.Net.ICertificatePolicy" /> interface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="569bb-112">当<xref:System.Net.ServicePointManager.CertificatePolicy%2A>属性设置为<xref:System.Net.ICertificatePolicy>接口对象<xref:System.Net.ServicePointManager>对象使用该实例而不是默认证书策略中定义的证书策略。</span><span class="sxs-lookup"><span data-stu-id="569bb-112">When the <xref:System.Net.ServicePointManager.CertificatePolicy%2A> property is set to an <xref:System.Net.ICertificatePolicy> interface object, the <xref:System.Net.ServicePointManager> object uses the certificate policy defined in that instance instead of the default certificate policy.</span></span>  
  
 <span data-ttu-id="569bb-113">默认证书策略允许的有效证书和已过期的有效证书。</span><span class="sxs-lookup"><span data-stu-id="569bb-113">The default certificate policy allows valid certificates and valid certificates that have expired.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="569bb-114">下面的代码示例演示如何捕获自定义证书策略的证书策略异常。</span><span class="sxs-lookup"><span data-stu-id="569bb-114">The following code example shows how to catch a certificate policy exception for a custom certificate policy.</span></span> <span data-ttu-id="569bb-115">它假定已定义证书策略对象时，Web 资源的统一资源标识符 (URI) 包含在变量`myUri`，以及是否具有一个名为方法`ProcessResponse`，执行的应用程序的工作。</span><span class="sxs-lookup"><span data-stu-id="569bb-115">It assumes that the certificate policy object has been defined, that the Uniform Resource Identifier (URI) for the Web resource is contained in the variable `myUri`, and that there is a method named `ProcessResponse` that performs the work of the application.</span></span>  
  
 [!code-cpp[Classic ServicePointManager.CertificatePolicy Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic ServicePointManager.CertificatePolicy Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServicePointManager.CertificatePolicy Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic ServicePointManager.CertificatePolicy Example/CS/source.cs#1)]
 [!code-vb[Classic ServicePointManager.CertificatePolicy Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic ServicePointManager.CertificatePolicy Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="569bb-116">若要设置<see cref="P:System.Net.ServicePointManager.CertificatePolicy" />属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-116">To set the <see cref="P:System.Net.ServicePointManager.CertificatePolicy" /> property.</span>
          </span>
          <span data-ttu-id="569bb-117">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-117">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="T:System.Security.Permissions.SecurityPermission" />
      </Docs>
    </Member>
    <Member MemberName="CheckCertificateRevocationList">
      <MemberSignature Language="C#" Value="public static bool CheckCertificateRevocationList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CheckCertificateRevocationList" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.CheckCertificateRevocationList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CheckCertificateRevocationList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CheckCertificateRevocationList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("CRL checks not implemented")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="569bb-118">获取或设置一个 <see cref="T:System.Boolean" /> 值，该值指示是否根据证书颁发机构吊销列表检查证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-118">Gets or sets a <see cref="T:System.Boolean" /> value that indicates whether the certificate is checked against the certificate authority revocation list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="569bb-119">如果检查证书吊销列表，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-119">
              <see langword="true" /> if the certificate revocation list is checked; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="569bb-120">当<xref:System.Net.ServicePointManager.CheckCertificateRevocationList%2A>是`true`，根据证书颁发机构吊销列表中，证书验证过程的一部分检查证书。</span><span class="sxs-lookup"><span data-stu-id="569bb-120">When the <xref:System.Net.ServicePointManager.CheckCertificateRevocationList%2A> is `true`, the certificate is checked against the certificate authority revocation list, as part of the certificate validation process.</span></span> <span data-ttu-id="569bb-121">其默认值是`false`。</span><span class="sxs-lookup"><span data-stu-id="569bb-121">Its default value is `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="569bb-122">下面的代码示例设置此属性。</span><span class="sxs-lookup"><span data-stu-id="569bb-122">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]
 [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]
 [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="569bb-123">若要设置此属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-123">To set this property.</span>
          </span>
          <span data-ttu-id="569bb-124">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-124">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="T:System.Security.Permissions.SecurityPermission" />
      </Docs>
    </Member>
    <Member MemberName="ClientCipherSuitesCallback">
      <MemberSignature Language="C#" Value="public static System.Net.CipherSuitesCallback ClientCipherSuitesCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.CipherSuitesCallback ClientCipherSuitesCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.ClientCipherSuitesCallback" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ClientCipherSuitesCallback As CipherSuitesCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::CipherSuitesCallback ^ ClientCipherSuitesCallback { System::Net::CipherSuitesCallback ^ get(); void set(System::Net::CipherSuitesCallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API is no longer supported.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.CipherSuitesCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultConnectionLimit">
      <MemberSignature Language="C#" Value="public static int DefaultConnectionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 DefaultConnectionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.DefaultConnectionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultConnectionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int DefaultConnectionLimit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="569bb-125">获取或设置 <see cref="T:System.Net.ServicePoint" /> 对象所允许的最大并发连接数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-125">Gets or sets the maximum number of concurrent connections allowed by a <see cref="T:System.Net.ServicePoint" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="569bb-126">
            <see cref="T:System.Net.ServicePoint" /> 对象允许的最大并发连接数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-126">The maximum number of concurrent connections allowed by a <see cref="T:System.Net.ServicePoint" /> object.</span>
          </span>
          <span data-ttu-id="569bb-127">默认值为 2。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-127">The default value is 2.</span>
          </span>
          <span data-ttu-id="569bb-128">应用作为 ASP.NET 主机运行时，如果 autoConfig 属性设置为 <see langword="true" />，则无法通过配置文件更改此属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-128">When an app is running as an ASP.NET host, it is not possible to alter the value of this property through the config file if the autoConfig property is set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="569bb-129">但是，当 autoConfig 属性设置为 <see langword="true" /> 时，可以按编程方式更改值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-129">However, you can change the value programmatically when the autoConfig property is <see langword="true" />.</span>
          </span>
          <span data-ttu-id="569bb-130">当 AppDomain 加载时，设置一次首选值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-130">Set your preferred value once, when the AppDomain loads.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="569bb-131"><xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A>属性设置的默认最大并发连接数<xref:System.Net.ServicePointManager>对象将分配给<xref:System.Net.ServicePoint.ConnectionLimit%2A>属性在创建时<xref:System.Net.ServicePoint>对象。</span><span class="sxs-lookup"><span data-stu-id="569bb-131">The <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property sets the default maximum number of concurrent connections that the <xref:System.Net.ServicePointManager> object assigns to the <xref:System.Net.ServicePoint.ConnectionLimit%2A> property when creating <xref:System.Net.ServicePoint> objects.</span></span>  
  
 <span data-ttu-id="569bb-132">更改<xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A>属性不起现有<xref:System.Net.ServicePoint>对象; 它仅影响<xref:System.Net.ServicePoint>初始化在更改后的对象。</span><span class="sxs-lookup"><span data-stu-id="569bb-132">Changing the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property has no effect on existing <xref:System.Net.ServicePoint> objects; it affects only <xref:System.Net.ServicePoint> objects that are initialized after the change.</span></span> <span data-ttu-id="569bb-133">如果尚未设置此属性的值，直接或通过配置，则该值默认为常量<xref:System.Net.ServicePointManager.DefaultPersistentConnectionLimit>。</span><span class="sxs-lookup"><span data-stu-id="569bb-133">If the value of this property has not been set either directly or through configuration, the value defaults to the constant <xref:System.Net.ServicePointManager.DefaultPersistentConnectionLimit>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="569bb-134">对任何更改<xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A>属性将影响 HTTP 1.0 和 HTTP 1.1 连接。</span><span class="sxs-lookup"><span data-stu-id="569bb-134">Any changes to the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property affect both HTTP 1.0 and HTTP 1.1 connections.</span></span> <span data-ttu-id="569bb-135">不能单独 alter HTTP 1.0 和 HTTP 1.1 协议的连接限制。</span><span class="sxs-lookup"><span data-stu-id="569bb-135">It is not possible to separately alter the connection limit for HTTP 1.0 and HTTP 1.1 protocols.</span></span> <span data-ttu-id="569bb-136">在服务器环境 (ASP.NET) 中使用时<xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A>默认为较大的数字的连接，这是 10。</span><span class="sxs-lookup"><span data-stu-id="569bb-136">When used in the server environment (ASP.NET) <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> defaults to higher number of connections, which is 10.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="569bb-137">下面的代码示例设置此属性。</span><span class="sxs-lookup"><span data-stu-id="569bb-137">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]
 [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]
 [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="569bb-138">
            <see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> 小于或等于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-138">
              <see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> is less than or equal to 0.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="569bb-139">不受限制 Web 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-139">for unrestricted Web permissions.</span>
          </span>
          <span data-ttu-id="569bb-140">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-140">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="T:System.Net.WebPermission" />
      </Docs>
    </Member>
    <Member MemberName="DefaultNonPersistentConnectionLimit">
      <MemberSignature Language="C#" Value="public const int DefaultNonPersistentConnectionLimit = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DefaultNonPersistentConnectionLimit = (4)" />
      <MemberSignature Language="DocId" Value="F:System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultNonPersistentConnectionLimit As Integer  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: int DefaultNonPersistentConnectionLimit = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="569bb-141">在连接到 HTTP/1.0 或更高版本服务器的 <see cref="T:System.Net.ServicePoint" /> 对象上允许存在的非持久性连接的默认数目 (4)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-141">The default number of non-persistent connections (4) allowed on a <see cref="T:System.Net.ServicePoint" /> object connected to an HTTP/1.0 or later server.</span>
          </span>
          <span data-ttu-id="569bb-142">此字段为常量，但在 .NET Framework 2.0 中不再使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-142">This field is constant but is no longer used in the .NET Framework 2.0.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPersistentConnectionLimit">
      <MemberSignature Language="C#" Value="public const int DefaultPersistentConnectionLimit = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DefaultPersistentConnectionLimit = (2)" />
      <MemberSignature Language="DocId" Value="F:System.Net.ServicePointManager.DefaultPersistentConnectionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultPersistentConnectionLimit As Integer  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: int DefaultPersistentConnectionLimit = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="569bb-143">在连接到 HTTP/1.1 或更高版本服务器的 <see cref="T:System.Net.ServicePoint" /> 对象上允许存在的持久性连接的默认数目 (2)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-143">The default number of persistent connections (2) allowed on a <see cref="T:System.Net.ServicePoint" /> object connected to an HTTP/1.1 or later server.</span>
          </span>
          <span data-ttu-id="569bb-144">如果未以直接方式或通过配置设置 <see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> 属性的值，则此字段为常量，用于初始化 <see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-144">This field is constant and is used to initialize the <see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> property if the value of the <see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> property has not been set either directly or through configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="569bb-145">下面的代码示例设置<xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A>使用此字段的属性。</span><span class="sxs-lookup"><span data-stu-id="569bb-145">The following code example sets the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property using this field.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]
 [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]
 [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DnsRefreshTimeout">
      <MemberSignature Language="C#" Value="public static int DnsRefreshTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 DnsRefreshTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.DnsRefreshTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DnsRefreshTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int DnsRefreshTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="569bb-146">获取或设置一个值，该值指示域名服务 (DNS) 解析多长时间内视为有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-146">Gets or sets a value that indicates how long a Domain Name Service (DNS) resolution is considered valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="569bb-147">超时值（以毫秒为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-147">The time-out value, in milliseconds.</span>
          </span>
          <span data-ttu-id="569bb-148">值 -1 指示超时期限无限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-148">A value of -1 indicates an infinite time-out period.</span>
          </span>
          <span data-ttu-id="569bb-149">默认值是 120,000 毫秒（2 分钟）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-149">The default value is 120,000 milliseconds (two minutes).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="569bb-150">下面的代码示例设置此属性。</span><span class="sxs-lookup"><span data-stu-id="569bb-150">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePointWhidbey#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/cpp/servicepoint.cpp#1)]
 [!code-csharp[System.Net.ServicePointWhidbey#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/CS/servicepoint.cs#1)]
 [!code-vb[System.Net.ServicePointWhidbey#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/VB/servicepoint.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="EnableDnsRoundRobin">
      <MemberSignature Language="C#" Value="public static bool EnableDnsRoundRobin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableDnsRoundRobin" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.EnableDnsRoundRobin" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property EnableDnsRoundRobin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableDnsRoundRobin { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="569bb-151">获取或设置一个值，该值指示域名服务 (DNS) 解析是否在多个适用的 Internet 协议 (IP) 地址之间轮流进行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-151">Gets or sets a value that indicates whether a Domain Name Service (DNS) resolution rotates among the applicable Internet Protocol (IP) addresses.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="569bb-152">如果 DNS 解析总是返回特定主机的第一个 IP 地址，则为 <see langword="false" />；否则，为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-152">
              <see langword="false" /> if a DNS resolution always returns the first IP address for a particular host; otherwise <see langword="true" />.</span>
          </span>
          <span data-ttu-id="569bb-153">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-153">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="569bb-154">与主机名关联多个 IP 地址时，DNS 解析通常返回仅为第一个 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="569bb-154">When more than one IP address is associated with a host name, a DNS resolution normally returns only the first IP address.</span></span> <span data-ttu-id="569bb-155">如果将此属性设置为`true`，则后续的 DNS 解析将在特定主机的循环浏览所有可用的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="569bb-155">If you set this property to `true`, then subsequent DNS resolutions will cycle through all available IP addresses for a particular host.</span></span> <span data-ttu-id="569bb-156">如果服务使用 DNS 为负载平衡服务器或服务器群集之间的机制，此选项非常有用。</span><span class="sxs-lookup"><span data-stu-id="569bb-156">This option is useful when a service uses DNS as a load balancing mechanism between servers or server clusters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="569bb-157">下面的代码示例设置此属性。</span><span class="sxs-lookup"><span data-stu-id="569bb-157">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePointWhidbey#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/cpp/servicepoint.cpp#1)]
 [!code-csharp[System.Net.ServicePointWhidbey#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/CS/servicepoint.cs#1)]
 [!code-vb[System.Net.ServicePointWhidbey#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/VB/servicepoint.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="EncryptionPolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Security.EncryptionPolicy EncryptionPolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Net.Security.EncryptionPolicy EncryptionPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.EncryptionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EncryptionPolicy As EncryptionPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Security::EncryptionPolicy EncryptionPolicy { System::Net::Security::EncryptionPolicy get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Always returns EncryptionPolicy.RequireEncryption.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.EncryptionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="569bb-158">获取此 <see cref="T:System.Net.ServicePointManager" /> 实例的 <see cref="T:System.Net.Security.EncryptionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-158">Gets the <see cref="T:System.Net.Security.EncryptionPolicy" /> for this <see cref="T:System.Net.ServicePointManager" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="569bb-159">用于此 <see cref="T:System.Net.ServicePointManager" /> 实例的加密策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-159">The encryption policy to use for this <see cref="T:System.Net.ServicePointManager" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="569bb-160">如果在配置文件中，未指定值<xref:System.Net.ServicePointManager.EncryptionPolicy%2A>属性默认为<xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="569bb-160">If a value is not specified in the configuration file, the <xref:System.Net.ServicePointManager.EncryptionPolicy%2A> property defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType>.</span></span> <span data-ttu-id="569bb-161">这应用于此的 SSL/TLS 会话<xref:System.Net.ServicePointManager>实例。</span><span class="sxs-lookup"><span data-stu-id="569bb-161">This is applied to an SSL/TLS session on this <xref:System.Net.ServicePointManager> instance.</span></span>  
  
 <span data-ttu-id="569bb-162">Null 加密的使用时是必需的加密策略设置为<xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="569bb-162">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="P:System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy" />
        <altmember cref="T:System.Net.Security.EncryptionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="Expect100Continue">
      <MemberSignature Language="C#" Value="public static bool Expect100Continue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool Expect100Continue" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.Expect100Continue" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Expect100Continue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool Expect100Continue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="569bb-163">获取或设置一个 <see cref="T:System.Boolean" /> 值，该值确定是否使用 100-Continue 行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-163">Gets or sets a <see cref="T:System.Boolean" /> value that determines whether 100-Continue behavior is used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="569bb-164">若要启用 100-Continue 行为，则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-164">
              <see langword="true" /> to enable 100-Continue behavior.</span>
          </span>
          <span data-ttu-id="569bb-165">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-165">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="569bb-166">当此属性设置为`true`、 100-继续使用行为。</span><span class="sxs-lookup"><span data-stu-id="569bb-166">When this property is set to `true`, 100-Continue behavior is used.</span></span> <span data-ttu-id="569bb-167">客户端请求使用`PUT`和`POST`如果方法会将一个 Expect 标头添加到请求<xref:System.Net.ServicePointManager.Expect100Continue%2A>属性是`true`和<xref:System.Net.HttpWebRequest.ContentLength%2A>属性是大于零或<xref:System.Net.HttpWebRequest.SendChunked%2A>属性为 true。</span><span class="sxs-lookup"><span data-stu-id="569bb-167">Client requests that use the `PUT` and `POST` methods will add an Expect header to the request if the <xref:System.Net.ServicePointManager.Expect100Continue%2A> property is `true` and <xref:System.Net.HttpWebRequest.ContentLength%2A> property is greater than zero or the <xref:System.Net.HttpWebRequest.SendChunked%2A> property is true.</span></span> <span data-ttu-id="569bb-168">客户端将会收到一个 100-继续从要指示客户端应发送要发布的数据的服务器的响应。</span><span class="sxs-lookup"><span data-stu-id="569bb-168">The client will expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted.</span></span> <span data-ttu-id="569bb-169">此机制允许客户端以避免通过网络发送大量数据时的服务器，根据请求标头，想要拒绝请求。</span><span class="sxs-lookup"><span data-stu-id="569bb-169">This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.</span></span>  
  
 <span data-ttu-id="569bb-170">例如，假定<xref:System.Net.ServicePointManager.Expect100Continue%2A>属性是`false`。</span><span class="sxs-lookup"><span data-stu-id="569bb-170">For example, assume the <xref:System.Net.ServicePointManager.Expect100Continue%2A> property is `false`.</span></span> <span data-ttu-id="569bb-171">当请求发送到服务器时，它包括数据。</span><span class="sxs-lookup"><span data-stu-id="569bb-171">When the request is sent to the server, it includes the data.</span></span> <span data-ttu-id="569bb-172">如果在阅读后的请求标头，服务器需要身份验证，并且必须发送的 401 响应，客户端必须重新发送具有正确的身份验证标头的数据。</span><span class="sxs-lookup"><span data-stu-id="569bb-172">If, after reading the request headers, the server requires authentication and must send a 401 response, the client must resend the data with proper authentication headers.</span></span>  
  
 <span data-ttu-id="569bb-173">如果此属性为`true`，请求标头发送到服务器。</span><span class="sxs-lookup"><span data-stu-id="569bb-173">If this property is `true`, the request headers are sent to the server.</span></span> <span data-ttu-id="569bb-174">如果服务器不拒绝了请求，则将发送一个 100-继续响应信号可以传输数据。</span><span class="sxs-lookup"><span data-stu-id="569bb-174">If the server has not rejected the request, it sends a 100-Continue response signaling that the data can be transmitted.</span></span> <span data-ttu-id="569bb-175">如果如下所示前面的示例中，服务器需要身份验证，将它发送的 401 响应，客户端没有不必要地传输数据。</span><span class="sxs-lookup"><span data-stu-id="569bb-175">If, as in the preceding example, the server requires authentication, it sends the 401 response and the client has not unnecessarily transmitted the data.</span></span>  
  
 <span data-ttu-id="569bb-176">更改此属性的值不影响现有<xref:System.Net.ServicePoint>对象。</span><span class="sxs-lookup"><span data-stu-id="569bb-176">Changing the value of this property does not affect existing <xref:System.Net.ServicePoint> objects.</span></span> <span data-ttu-id="569bb-177">仅新增<xref:System.Net.ServicePoint>会影响在更改后创建的对象。</span><span class="sxs-lookup"><span data-stu-id="569bb-177">Only new <xref:System.Net.ServicePoint> objects created after the change are affected.</span></span>  
  
 <span data-ttu-id="569bb-178">100-继续行为不使用的 HTTP 1.0 请求，即使此属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="569bb-178">The 100-Continue behavior is not used for HTTP 1.0 requests even if this property is set to `true`.</span></span>  
  
 <span data-ttu-id="569bb-179">Expect 100-继续行为完全部分所述 IETF RFC 2616 10.1.1 一起提供。</span><span class="sxs-lookup"><span data-stu-id="569bb-179">The Expect 100-Continue behavior is fully described in IETF RFC 2616 Section 10.1.1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="569bb-180">下面的代码示例设置此属性。</span><span class="sxs-lookup"><span data-stu-id="569bb-180">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]
 [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]
 [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindServicePoint">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="569bb-181">查找现有的 <see cref="T:System.Net.ServicePoint" /> 对象或者创建新的 <see cref="T:System.Net.ServicePoint" /> 对象以管理此请求的通信。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-181">Finds an existing <see cref="T:System.Net.ServicePoint" /> object or creates a new <see cref="T:System.Net.ServicePoint" /> object to manage communication for this request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindServicePoint">
      <MemberSignature Language="C#" Value="public static System.Net.ServicePoint FindServicePoint (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.ServicePoint FindServicePoint(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePointManager.FindServicePoint(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindServicePoint (address As Uri) As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::ServicePoint ^ FindServicePoint(Uri ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="569bb-182">要联系的 Internet 资源的 <see cref="T:System.Uri" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-182">The <see cref="T:System.Uri" /> object of the Internet resource to contact.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="569bb-183">查找现有的 <see cref="T:System.Net.ServicePoint" /> 对象或创建新的 <see cref="T:System.Net.ServicePoint" /> 对象来管理与指定 <see cref="T:System.Uri" /> 对象的通信。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-183">Finds an existing <see cref="T:System.Net.ServicePoint" /> object or creates a new <see cref="T:System.Net.ServicePoint" /> object to manage communications with the specified <see cref="T:System.Uri" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="569bb-184">管理该请求的通信的 <see cref="T:System.Net.ServicePoint" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-184">The <see cref="T:System.Net.ServicePoint" /> object that manages communications for the request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="569bb-185"><xref:System.Net.ServicePointManager.FindServicePoint%2A>方法返回<xref:System.Net.ServicePoint>与指定的 Internet 主机名关联的对象。</span><span class="sxs-lookup"><span data-stu-id="569bb-185">The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name.</span></span> <span data-ttu-id="569bb-186">如果没有<xref:System.Net.ServicePoint>对象存在该主机<xref:System.Net.ServicePointManager>对象将创建一个。</span><span class="sxs-lookup"><span data-stu-id="569bb-186">If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="569bb-187">
            <paramref name="address" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-187">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="569bb-188">已达到在 <see cref="T:System.Net.ServicePoint" /> 中定义的 <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> 对象的最大数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-188">The maximum number of <see cref="T:System.Net.ServicePoint" /> objects defined in <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> has been reached.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="FindServicePoint">
      <MemberSignature Language="C#" Value="public static System.Net.ServicePoint FindServicePoint (string uriString, System.Net.IWebProxy proxy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.ServicePoint FindServicePoint(string uriString, class System.Net.IWebProxy proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindServicePoint (uriString As String, proxy As IWebProxy) As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::ServicePoint ^ FindServicePoint(System::String ^ uriString, System::Net::IWebProxy ^ proxy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriString" Type="System.String" />
        <Parameter Name="proxy" Type="System.Net.IWebProxy" />
      </Parameters>
      <Docs>
        <param name="uriString">
          <span data-ttu-id="569bb-189">要联系的 Internet 资源的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-189">The URI of the Internet resource to be contacted.</span>
          </span>
        </param>
        <param name="proxy">
          <span data-ttu-id="569bb-190">此请求的代理数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-190">The proxy data for this request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="569bb-191">查找现有的 <see cref="T:System.Net.ServicePoint" /> 对象或创建新的 <see cref="T:System.Net.ServicePoint" /> 对象，以管理与指定的统一资源标识符 (URI) 的通信。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-191">Finds an existing <see cref="T:System.Net.ServicePoint" /> object or creates a new <see cref="T:System.Net.ServicePoint" /> object to manage communications with the specified Uniform Resource Identifier (URI).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="569bb-192">管理该请求的通信的 <see cref="T:System.Net.ServicePoint" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-192">The <see cref="T:System.Net.ServicePoint" /> object that manages communications for the request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="569bb-193"><xref:System.Net.ServicePointManager.FindServicePoint%2A>方法返回<xref:System.Net.ServicePoint>与指定的 Internet 主机名关联的对象。</span><span class="sxs-lookup"><span data-stu-id="569bb-193">The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name.</span></span> <span data-ttu-id="569bb-194">如果没有<xref:System.Net.ServicePoint>对象存在该主机<xref:System.Net.ServicePointManager>对象将创建一个。</span><span class="sxs-lookup"><span data-stu-id="569bb-194">If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="569bb-195">下面的代码示例演示如何调用此方法来访问<xref:System.Net.ServicePoint>对象。</span><span class="sxs-lookup"><span data-stu-id="569bb-195">The following code example demonstrates calling this method to access a <xref:System.Net.ServicePoint> object.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#7)]
 [!code-csharp[System.Net.ServicePoint#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#7)]
 [!code-vb[System.Net.ServicePoint#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="569bb-196">
            <paramref name="uriString" /> 中指定的 URI 无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-196">The URI specified in <paramref name="uriString" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="569bb-197">已达到在 <see cref="T:System.Net.ServicePoint" /> 中定义的 <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> 对象的最大数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-197">The maximum number of <see cref="T:System.Net.ServicePoint" /> objects defined in <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> has been reached.</span>
          </span>
        </exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="FindServicePoint">
      <MemberSignature Language="C#" Value="public static System.Net.ServicePoint FindServicePoint (Uri address, System.Net.IWebProxy proxy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.ServicePoint FindServicePoint(class System.Uri address, class System.Net.IWebProxy proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindServicePoint (address As Uri, proxy As IWebProxy) As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::ServicePoint ^ FindServicePoint(Uri ^ address, System::Net::IWebProxy ^ proxy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="proxy" Type="System.Net.IWebProxy" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="569bb-198">
            <see cref="T:System.Uri" /> 对象，包含要联系的 Internet 资源的地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-198">A <see cref="T:System.Uri" /> object that contains the address of the Internet resource to contact.</span>
          </span>
        </param>
        <param name="proxy">
          <span data-ttu-id="569bb-199">此请求的代理数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-199">The proxy data for this request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="569bb-200">查找现有的 <see cref="T:System.Net.ServicePoint" /> 对象或创建新的 <see cref="T:System.Net.ServicePoint" /> 对象来管理与指定 <see cref="T:System.Uri" /> 对象的通信。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-200">Finds an existing <see cref="T:System.Net.ServicePoint" /> object or creates a new <see cref="T:System.Net.ServicePoint" /> object to manage communications with the specified <see cref="T:System.Uri" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="569bb-201">管理该请求的通信的 <see cref="T:System.Net.ServicePoint" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-201">The <see cref="T:System.Net.ServicePoint" /> object that manages communications for the request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="569bb-202"><xref:System.Net.ServicePointManager.FindServicePoint%2A>方法返回<xref:System.Net.ServicePoint>与指定的 Internet 主机名关联的对象。</span><span class="sxs-lookup"><span data-stu-id="569bb-202">The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name.</span></span> <span data-ttu-id="569bb-203">如果没有<xref:System.Net.ServicePoint>对象存在该主机<xref:System.Net.ServicePointManager>对象将创建一个。</span><span class="sxs-lookup"><span data-stu-id="569bb-203">If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="569bb-204">
            <paramref name="address" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-204">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="569bb-205">已达到在 <see cref="T:System.Net.ServicePoint" /> 中定义的 <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> 对象的最大数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-205">The maximum number of <see cref="T:System.Net.ServicePoint" /> objects defined in <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> has been reached.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="MaxServicePointIdleTime">
      <MemberSignature Language="C#" Value="public static int MaxServicePointIdleTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxServicePointIdleTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.MaxServicePointIdleTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property MaxServicePointIdleTime As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxServicePointIdleTime { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="569bb-206">获取或设置 <see cref="T:System.Net.ServicePoint" /> 对象的最大空闲时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-206">Gets or sets the maximum idle time of a <see cref="T:System.Net.ServicePoint" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="569bb-207">
            <see cref="T:System.Net.ServicePoint" /> 对象的最大空闲时间（以毫秒为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-207">The maximum idle time, in milliseconds, of a <see cref="T:System.Net.ServicePoint" /> object.</span>
          </span>
          <span data-ttu-id="569bb-208">默认值是 100,000 毫秒（100 秒）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-208">The default value is 100,000 milliseconds (100 seconds).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="569bb-209"><xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A>属性设置的最大空闲时间<xref:System.Net.ServicePointManager>对象将分配给<xref:System.Net.ServicePoint.MaxIdleTime%2A>属性在创建时<xref:System.Net.ServicePoint>对象。</span><span class="sxs-lookup"><span data-stu-id="569bb-209">The <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A> property sets the maximum idle time that the <xref:System.Net.ServicePointManager> object assigns to the <xref:System.Net.ServicePoint.MaxIdleTime%2A> property when creating <xref:System.Net.ServicePoint> objects.</span></span> <span data-ttu-id="569bb-210">为此值的更改只会影响<xref:System.Net.ServicePoint>后更改的值初始化的对象。</span><span class="sxs-lookup"><span data-stu-id="569bb-210">Changes to this value affect only <xref:System.Net.ServicePoint> objects that are initialized after the value is changed.</span></span>  
  
 <span data-ttu-id="569bb-211">后<xref:System.Net.ServicePoint>对象中指定的时间已处于空闲状态<xref:System.Net.ServicePoint.MaxIdleTime%2A>，它是符合垃圾回收的条件。</span><span class="sxs-lookup"><span data-stu-id="569bb-211">After a <xref:System.Net.ServicePoint> object has been idle for the time specified in <xref:System.Net.ServicePoint.MaxIdleTime%2A>, it is eligible for garbage collection.</span></span> <span data-ttu-id="569bb-212">A<xref:System.Net.ServicePoint>对象处于空闲状态时与关联的连接列表<xref:System.Net.ServicePoint>对象为空。</span><span class="sxs-lookup"><span data-stu-id="569bb-212">A <xref:System.Net.ServicePoint> object is idle when the list of connections associated with the <xref:System.Net.ServicePoint> object is empty.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="569bb-213">下面的代码示例设置此属性。</span><span class="sxs-lookup"><span data-stu-id="569bb-213">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#8)]
 [!code-csharp[System.Net.ServicePoint#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#8)]
 [!code-vb[System.Net.ServicePoint#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="569bb-214">
            <see cref="P:System.Net.ServicePointManager.MaxServicePointIdleTime" /> 小于 <see cref="F:System.Threading.Timeout.Infinite" /> 或大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-214">
              <see cref="P:System.Net.ServicePointManager.MaxServicePointIdleTime" /> is less than <see cref="F:System.Threading.Timeout.Infinite" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="569bb-215">不受限制 Web 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-215">For unrestricted Web permissions.</span>
          </span>
          <span data-ttu-id="569bb-216">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-216">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="T:System.Net.WebPermission" />
      </Docs>
    </Member>
    <Member MemberName="MaxServicePoints">
      <MemberSignature Language="C#" Value="public static int MaxServicePoints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxServicePoints" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.MaxServicePoints" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property MaxServicePoints As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxServicePoints { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="569bb-217">获取或设置任何时候保持的最大 <see cref="T:System.Net.ServicePoint" /> 对象数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-217">Gets or sets the maximum number of <see cref="T:System.Net.ServicePoint" /> objects to maintain at any time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="569bb-218">要保持的最大 <see cref="T:System.Net.ServicePoint" /> 对象数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-218">The maximum number of <see cref="T:System.Net.ServicePoint" /> objects to maintain.</span>
          </span>
          <span data-ttu-id="569bb-219">默认值是 0，表示对 <see cref="T:System.Net.ServicePoint" /> 对象的数量没有限制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-219">The default value is 0, which means there is no limit to the number of <see cref="T:System.Net.ServicePoint" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="569bb-220">当你减少<xref:System.Net.ServicePointManager.MaxServicePoints%2A>数以下属性<xref:System.Net.ServicePoint>当前中是否存在，对象<xref:System.Net.ServicePointManager>删除<xref:System.Net.ServicePoint>具有最长空闲时间的对象。</span><span class="sxs-lookup"><span data-stu-id="569bb-220">When you reduce the <xref:System.Net.ServicePointManager.MaxServicePoints%2A> property below the number of <xref:System.Net.ServicePoint> objects currently in existence, the <xref:System.Net.ServicePointManager> deletes the <xref:System.Net.ServicePoint> objects with the longest idle times.</span></span> <span data-ttu-id="569bb-221">如果数<xref:System.Net.ServicePoint>连接为活动状态的对象是否大于值<xref:System.Net.ServicePointManager.MaxServicePoints%2A>、<xref:System.Net.ServicePointManager>对象删除<xref:System.Net.ServicePoint>对象，如它们进入空闲状态。</span><span class="sxs-lookup"><span data-stu-id="569bb-221">If the number of <xref:System.Net.ServicePoint> objects with active connections is greater than the value of <xref:System.Net.ServicePointManager.MaxServicePoints%2A>, the <xref:System.Net.ServicePointManager> object deletes the <xref:System.Net.ServicePoint> objects as they become idle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="569bb-222">下面的代码示例设置此属性。</span><span class="sxs-lookup"><span data-stu-id="569bb-222">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#8)]
 [!code-csharp[System.Net.ServicePoint#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#8)]
 [!code-vb[System.Net.ServicePoint#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="569bb-223">
            <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> 小于 0 或大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-223">
              <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="569bb-224">不受限制 Web 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-224">for unrestricted Web permissions.</span>
          </span>
          <span data-ttu-id="569bb-225">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-225">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="T:System.Net.WebPermission" />
      </Docs>
    </Member>
    <Member MemberName="ReusePort">
      <MemberSignature Language="C#" Value="public static bool ReusePort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ReusePort" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.ReusePort" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ReusePort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ReusePort { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="569bb-226">将此属性值设置为 <see langword="true" /> 会导致来自 HttpWebRequest 的所有出站 TCP 连接对套接字使用本机套接字选项 SO_REUSE_UNICASTPORT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-226">Setting this property value to <see langword="true" /> causes all outbound TCP connections from HttpWebRequest to use the native socket option SO_REUSE_UNICASTPORT on the socket.</span>
          </span>
          <span data-ttu-id="569bb-227">这使得可以共享基础传出端口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-227">This causes the underlying outgoing ports to be shared.</span>
          </span>
          <span data-ttu-id="569bb-228">这可用于在短时间内进行大量传出连接并且应用面临耗尽端口风险的情况。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-228">This is useful for scenarios where a large number of outgoing connections are made in a short time, and the app risks running out of ports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="569bb-229">返回 <see cref="T:System.Boolean" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-229">Returns <see cref="T:System.Boolean" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="569bb-230">默认值为 `false`。</span><span class="sxs-lookup"><span data-stu-id="569bb-230">The default value is `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityProtocol">
      <MemberSignature Language="C#" Value="public static System.Net.SecurityProtocolType SecurityProtocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Net.SecurityProtocolType SecurityProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.SecurityProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SecurityProtocol As SecurityProtocolType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::SecurityProtocolType SecurityProtocol { System::Net::SecurityProtocolType get(); void set(System::Net::SecurityProtocolType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.SecurityProtocolType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="569bb-231">获取或设置由 <see cref="T:System.Net.ServicePointManager" /> 对象管理的 <see cref="T:System.Net.ServicePoint" /> 对象所使用的安全协议。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-231">Gets or sets the security protocol used by the <see cref="T:System.Net.ServicePoint" /> objects managed by the <see cref="T:System.Net.ServicePointManager" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="569bb-232">
            <see cref="T:System.Net.SecurityProtocolType" /> 枚举中定义的值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-232">One of the values defined in the <see cref="T:System.Net.SecurityProtocolType" /> enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="569bb-233">此属性选择要用于新连接; 的安全套接字层 (SSL) 或传输层安全 (TLS) 协议版本现有的连接不会更改。</span><span class="sxs-lookup"><span data-stu-id="569bb-233">This property selects the version of the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocol to use for new connections; existing connections aren't changed.</span></span>  
  
<span data-ttu-id="569bb-234">从.NET Framework 4.7 开始，此属性的默认值是<xref:System.Net.SecurityProtocolType.SystemDefault?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="569bb-234">Starting with the .NET Framework 4.7, the default value of this property is <xref:System.Net.SecurityProtocolType.SystemDefault?displayProperty=nameWithType>.</span></span> <span data-ttu-id="569bb-235">这允许网络基于 Api 的.NET Framework <xref:System.Net.Security.SslStream> （例如 FTP、 HTTP 和 SMTP） 继承的默认安全协议，从操作系统或从由系统管理员执行任何自定义配置。</span><span class="sxs-lookup"><span data-stu-id="569bb-235">This allows .NET Framework networking APIs based on <xref:System.Net.Security.SslStream> (such as FTP, HTTP, and SMTP) to inherit the default security protocols from the operating system or from any custom configurations performed by a system administrator.</span></span> <span data-ttu-id="569bb-236">有关哪些 SSL/TLS 协议启用默认情况下，在每个版本的 Windows 操作系统上的信息，请参阅[中 TLS/SSL (Schannel SSP) 的协议](https://msdn.microsoft.com/library/windows/desktop/mt808159.aspx)。</span><span class="sxs-lookup"><span data-stu-id="569bb-236">For information about which SSL/TLS protocols are enabled by default on each version of the Windows operating system, see  [Protocols in TLS/SSL (Schannel SSP)](https://msdn.microsoft.com/library/windows/desktop/mt808159.aspx).</span></span>
 
<span data-ttu-id="569bb-237">有关通过.NET Framework 4.6.2 的.NET framework 的版本，没有默认值为此属性列出。</span><span class="sxs-lookup"><span data-stu-id="569bb-237">For versions of the .NET Framework through the .NET Framework 4.6.2, no default value is listed for this property.</span></span> <span data-ttu-id="569bb-238">安全前景不断更改，并默认协议和保护级别随时间推移更改以避免已知漏洞的攻击。</span><span class="sxs-lookup"><span data-stu-id="569bb-238">The security landscape changes constantly, and default protocols and protection levels are changed over time in order to avoid known weaknesses.</span></span> <span data-ttu-id="569bb-239">默认值而异单台计算机配置、 已安装的软件和应用的修补程序。</span><span class="sxs-lookup"><span data-stu-id="569bb-239">Defaults vary depending on individual machine configuration, installed software, and applied patches.</span></span>  
  
 <span data-ttu-id="569bb-240">使用特定的保护级别，或假定默认情况下，使用给定的安全级别，应永远不会隐式依赖你的代码。</span><span class="sxs-lookup"><span data-stu-id="569bb-240">Your code should never implicitly depend on using a particular protection level, or on the assumption that a given security level is used by default.</span></span> <span data-ttu-id="569bb-241">如果你的应用程序依赖于使用特定的安全级别，你必须显式指定该级别，然后检查以确保它在建立的连接上使用实际上是。</span><span class="sxs-lookup"><span data-stu-id="569bb-241">If your app depends on the use of a particular security level, you must explicitly specify that level and then check to be sure that it is actually in use on the established connection.</span></span> <span data-ttu-id="569bb-242">此外，你的代码应设计为可靠在遇到时也支持协议的更改，这种情况下更改通常使用进行很少预先通知以便降低新出现的威胁。</span><span class="sxs-lookup"><span data-stu-id="569bb-242">Further, your code should be designed to be robust in the face of changes to which protocols are supported, as such changes are often made with little advance notice in order to mitigate emerging threats.</span></span>  
  
 <span data-ttu-id="569bb-243">.NET Framework 4.6 包括一个新的安全功能，将阻止不安全的密码和哈希算法的连接。</span><span class="sxs-lookup"><span data-stu-id="569bb-243">The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.</span></span> <span data-ttu-id="569bb-244">默认情况下，使用 TLS/SSL 通过例如 HttpClient、 HttpWebRequest、 FTPClient、 SmtpClient、 SslStream 等的 Api 和面向.NET Framework 4.6 的应用程序获得更安全行为。</span><span class="sxs-lookup"><span data-stu-id="569bb-244">Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.</span></span>  
  
 <span data-ttu-id="569bb-245">开发人员可能想要选择退出此行为以便保持其现有 SSL3 服务或 TLS 带 RC4 服务与互操作性。</span><span class="sxs-lookup"><span data-stu-id="569bb-245">Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services.</span></span> <span data-ttu-id="569bb-246">[这篇文章](https://support.microsoft.com/kb/3069494)说明如何修改你的代码，以便禁用新的行为。</span><span class="sxs-lookup"><span data-stu-id="569bb-246">[This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="569bb-247">为设置属性而指定的值不是有效 <see cref="T:System.Net.SecurityProtocolType" /> 枚举值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-247">The value specified to set the property is not a valid <see cref="T:System.Net.SecurityProtocolType" /> enumeration value.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="T:System.Net.SecurityProtocolType" />
      </Docs>
    </Member>
    <Member MemberName="ServerCertificateValidationCallback">
      <MemberSignature Language="C#" Value="public static System.Net.Security.RemoteCertificateValidationCallback ServerCertificateValidationCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Security.RemoteCertificateValidationCallback ServerCertificateValidationCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.ServerCertificateValidationCallback" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ServerCertificateValidationCallback As RemoteCertificateValidationCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Security::RemoteCertificateValidationCallback ^ ServerCertificateValidationCallback { System::Net::Security::RemoteCertificateValidationCallback ^ get(); void set(System::Net::Security::RemoteCertificateValidationCallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.RemoteCertificateValidationCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="569bb-248">获取或设置用于验证服务器证书的回调。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-248">Gets or sets the callback to validate a server certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="569bb-249">
            <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-249">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" />.</span>
          </span>
          <span data-ttu-id="569bb-250">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-250">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="569bb-251">应用程序可以设置<xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A>到要用于客户端的服务器证书的自定义验证方法的属性。</span><span class="sxs-lookup"><span data-stu-id="569bb-251">An application can set the <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A> property to a method to use for custom validation by the client of the server certificate.</span></span> <span data-ttu-id="569bb-252">执行自定义验证时`sender`参数传递给<xref:System.Net.Security.RemoteCertificateValidationCallback>可以是主机字符串名称或对象派生自<xref:System.Net.WebRequest>(<xref:System.Net.HttpWebRequest>，例如) 具体取决于<xref:System.Net.ServicePointManager.CertificatePolicy%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="569bb-252">When doing custom validation, the `sender` parameter passed to the <xref:System.Net.Security.RemoteCertificateValidationCallback> can be a host string name or an object derived from <xref:System.Net.WebRequest> (<xref:System.Net.HttpWebRequest>, for example) depending on the <xref:System.Net.ServicePointManager.CertificatePolicy%2A> property.</span></span>  
  
<span data-ttu-id="569bb-253">如果不使用自定义验证，与用于创建请求的主机名进行比较的证书名称。</span><span class="sxs-lookup"><span data-stu-id="569bb-253">When custom validation is not used, the certificate name is compared with the host name used to create the request.</span></span> <span data-ttu-id="569bb-254">例如，如果<xref:System.Net.WebRequest.Create%28System.String%29>传递的参数"https://www.contoso.com/default.html"，默认行为是客户端检查证书针对 www.contoso.com。</span><span class="sxs-lookup"><span data-stu-id="569bb-254">For example, if <xref:System.Net.WebRequest.Create%28System.String%29> was passed a parameter of "https://www.contoso.com/default.html", the default behavior is for the client to check the certificate against www.contoso.com.</span></span>  

<span data-ttu-id="569bb-255">尽管要多路广播的委托，仅从最后一个执行事件处理程序返回的值被视为权威。</span><span class="sxs-lookup"><span data-stu-id="569bb-255">Despite being a multicast delegate, only the value returned from the last-executed event handler is considered authoritative.</span></span> <span data-ttu-id="569bb-256">换而言之，你可以将附加多个代理，以及所有他们能获得来自回调<xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A>。</span><span class="sxs-lookup"><span data-stu-id="569bb-256">In other words, you can attach multiple delegates, and they all get a callback from <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A>.</span></span> <span data-ttu-id="569bb-257">每个回调返回一个值，该值指示是否; 是否接受证书但是，仅将值从最后一个委托，则考虑。</span><span class="sxs-lookup"><span data-stu-id="569bb-257">Each callback returns a value that indicates whether the certificate is accepted or not; however, only the value from the last delegate is respected.</span></span>
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="569bb-258">若要设置<see cref="P:System.Net.ServicePointManager.ServerCertificateValidationCallback" />属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-258">to set the <see cref="P:System.Net.ServicePointManager.ServerCertificateValidationCallback" /> property.</span>
          </span>
          <span data-ttu-id="569bb-259">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-259">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Net.ServicePoint" />
        <altmember cref="T:System.Security.Permissions.SecurityPermission" />
      </Docs>
    </Member>
    <Member MemberName="ServerCipherSuitesCallback">
      <MemberSignature Language="C#" Value="public static System.Net.CipherSuitesCallback ServerCipherSuitesCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.CipherSuitesCallback ServerCipherSuitesCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.ServerCipherSuitesCallback" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ServerCipherSuitesCallback As CipherSuitesCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::CipherSuitesCallback ^ ServerCipherSuitesCallback { System::Net::CipherSuitesCallback ^ get(); void set(System::Net::CipherSuitesCallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API is no longer supported.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.CipherSuitesCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTcpKeepAlive">
      <MemberSignature Language="C#" Value="public static void SetTcpKeepAlive (bool enabled, int keepAliveTime, int keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTcpKeepAlive(bool enabled, int32 keepAliveTime, int32 keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTcpKeepAlive (enabled As Boolean, keepAliveTime As Integer, keepAliveInterval As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTcpKeepAlive(bool enabled, int keepAliveTime, int keepAliveInterval);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
        <Parameter Name="keepAliveTime" Type="System.Int32" />
        <Parameter Name="keepAliveInterval" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enabled">
          <span data-ttu-id="569bb-260">如果设置为 true，则使用指定的 <c>keepAliveTime</c> 和 <c>keepAliveInterval</c> 值启用 TCP 连接上的 TCP keep-alive 选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-260">If set to true, then the TCP keep-alive option on a TCP connection will be enabled using the specified <c>keepAliveTime</c> and <c>keepAliveInterval</c> values.</span>
          </span>
          <span data-ttu-id="569bb-261">如果设置为 false，则将禁用 TCP keep-alive 选项，并忽略剩余参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-261">If set to false, then the TCP keep-alive option is disabled and the remaining parameters are ignored.</span>
          </span>
          <span data-ttu-id="569bb-262">默认值为 False。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-262">The default value is false.</span>
          </span>
        </param>
        <param name="keepAliveTime">
          <span data-ttu-id="569bb-263">指定发送第一个 keep-alive 数据包之前没有活动的超时时间（以毫秒为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-263">Specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent.</span>
          </span>
          <span data-ttu-id="569bb-264">该值必须大于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-264">The value must be greater than 0.</span>
          </span>
          <span data-ttu-id="569bb-265">如果传递的值小于或等于零，则会引发 <see cref="T:System.ArgumentOutOfRangeException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-265">If a value of less than or equal to zero is passed an <see cref="T:System.ArgumentOutOfRangeException" /> is thrown.</span>
          </span>
        </param>
        <param name="keepAliveInterval">
          <span data-ttu-id="569bb-266">指定当未收到确认消息时发送连续 keep-alive 数据包之间的间隔（以毫秒为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-266">Specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.</span>
          </span>
          <span data-ttu-id="569bb-267">该值必须大于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-267">The value must be greater than 0.</span>
          </span>
          <span data-ttu-id="569bb-268">如果传递的值小于或等于零，则会引发 <see cref="T:System.ArgumentOutOfRangeException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-268">If a value of less than or equal to zero is passed an <see cref="T:System.ArgumentOutOfRangeException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="569bb-269">对 TCP 连接启用或禁用 keep-alive 选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-269">Enables or disables the keep-alive option on a TCP connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="569bb-270">应用程序可以请求 TCP/IP 提供程序启用的 TCP 连接上的保持连接数据包使用。</span><span class="sxs-lookup"><span data-stu-id="569bb-270">An application can request that a TCP/IP provider enable the use of keep-alive packets on a TCP connection.</span></span> <span data-ttu-id="569bb-271">默认为禁用了 TCP 连接上的保持连接数据包的使用。</span><span class="sxs-lookup"><span data-stu-id="569bb-271">The default is that the use of keep-alive packets on a TCP connection is disabled.</span></span>  
  
 <span data-ttu-id="569bb-272">默认设置 TCP 套接字时初始化到 2 小时内保持活动状态设置超时和保持活动状态的间隔为 1 秒。</span><span class="sxs-lookup"><span data-stu-id="569bb-272">The default settings when a TCP socket is initialized sets the keep-alive timeout to 2 hours and the keep-alive interval to 1 second.</span></span> <span data-ttu-id="569bb-273">`keepAliveTime`参数指定超时，以毫秒为单位，发送第一个 keep-alive 数据包之前没有活动。</span><span class="sxs-lookup"><span data-stu-id="569bb-273">The `keepAliveTime` parameter specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent.</span></span> <span data-ttu-id="569bb-274">`keepAliveInterval`参数指定的间隔，以毫秒为单位，之间时收到任何确认消息时发送连续 keep-alive 数据包。</span><span class="sxs-lookup"><span data-stu-id="569bb-274">The `keepAliveInterval` parameter specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.</span></span> <span data-ttu-id="569bb-275">保持活动状态的探测数不能更改，并设置为 10。</span><span class="sxs-lookup"><span data-stu-id="569bb-275">The number of keep-alive probes cannot be changed and is set to 10.</span></span>  
  
 <span data-ttu-id="569bb-276">如果 TCP 连接删除 keep-alive，因此<xref:System.Net.Sockets.SocketError>的<xref:System.Net.Sockets.SocketError.NetworkReset>套接字，返回的任何正在进行的调用，任何后续调用将失败并<xref:System.Net.Sockets.SocketError>的<xref:System.Net.Sockets.SocketError.NotConnected>。</span><span class="sxs-lookup"><span data-stu-id="569bb-276">If a TCP connection is dropped as the result of keep-alives, a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError.NetworkReset> is returned to any calls in progress on the socket, and any subsequent calls will fail with a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError.NotConnected>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="569bb-277">为 <paramref name="keepAliveTime" /> 或 <paramref name="keepAliveInterval" /> 参数指定的值小于等于 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-277">The value specified for <paramref name="keepAliveTime" /> or <paramref name="keepAliveInterval" /> parameter is less than or equal to 0.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
    <Member MemberName="UseNagleAlgorithm">
      <MemberSignature Language="C#" Value="public static bool UseNagleAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseNagleAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePointManager.UseNagleAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property UseNagleAlgorithm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UseNagleAlgorithm { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="569bb-278">确定由此 <see cref="T:System.Net.ServicePointManager" /> 对象管理的服务点是否使用 Nagle 算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-278">Determines whether the Nagle algorithm is used by the service points managed by this <see cref="T:System.Net.ServicePointManager" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="569bb-279">如果使用 Nagle 算法，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-279">
              <see langword="true" /> to use the Nagle algorithm; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="569bb-280">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="569bb-280">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="569bb-281">Nagle 算法用于通过缓冲的数据的小型数据包并将其传输作为单个数据包降低网络流量。</span><span class="sxs-lookup"><span data-stu-id="569bb-281">The Nagle algorithm is used to reduce network traffic by buffering small packets of data and transmitting them as a single packet.</span></span> <span data-ttu-id="569bb-282">此过程也称为"nagling";它使用广泛，因为它减少了传输数据包的数目，并降低了每个数据包的开销。</span><span class="sxs-lookup"><span data-stu-id="569bb-282">This process is also referred to as "nagling"; it is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.</span></span>  
  
 <span data-ttu-id="569bb-283">更改此属性的值不影响现有<xref:System.Net.ServicePoint>对象。</span><span class="sxs-lookup"><span data-stu-id="569bb-283">Changing the value of this property does not affect existing <xref:System.Net.ServicePoint> objects.</span></span> <span data-ttu-id="569bb-284">仅新服务创建的点在更改后会受到影响。</span><span class="sxs-lookup"><span data-stu-id="569bb-284">Only new service points created after the change are affected.</span></span>  
  
 <span data-ttu-id="569bb-285">Nagle 算法完全述 IETF RFC 896。</span><span class="sxs-lookup"><span data-stu-id="569bb-285">The Nagle algorithm is fully described in IETF RFC 896.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="569bb-286">下面的代码示例设置此属性。</span><span class="sxs-lookup"><span data-stu-id="569bb-286">The following code example sets this property.</span></span>  
  
 [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]
 [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]
 [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ServicePoint" />
      </Docs>
    </Member>
  </Members>
</Type>