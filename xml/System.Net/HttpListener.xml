<Type Name="HttpListener" FullName="System.Net.HttpListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d338e721b028cce5bc0cb16416723f530a1ed165" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpListener : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListener extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListener" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListener&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListener sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e82e2-101">Provides a simple, programmatically controlled HTTP protocol listener.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e82e2-101">Provides a simple, programmatically controlled HTTP protocol listener.</span>
      </span>
      <span data-ttu-id="e82e2-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e82e2-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e82e2-103">使用<xref:System.Net.HttpListener>类，你可以创建一个响应 HTTP 请求的简单 HTTP 协议侦听器。</span><span class="sxs-lookup"><span data-stu-id="e82e2-103">Using the <xref:System.Net.HttpListener> class, you can create a simple HTTP protocol listener that responds to HTTP requests.</span></span> <span data-ttu-id="e82e2-104">侦听器处于活动状态的生存期内<xref:System.Net.HttpListener>对象，并使用其权限的应用程序中运行。</span><span class="sxs-lookup"><span data-stu-id="e82e2-104">The listener is active for the lifetime of the <xref:System.Net.HttpListener> object and runs within your application with its permissions.</span></span>
   
 <span data-ttu-id="e82e2-105">若要使用<xref:System.Net.HttpListener>，创建的类使用的新实例<xref:System.Net.HttpListener>构造函数，并使用<xref:System.Net.HttpListener.Prefixes%2A>属性来访问保留指定的统一资源标识符 (URI) 的字符串的集合前缀<xref:System.Net.HttpListener>应处理。</span><span class="sxs-lookup"><span data-stu-id="e82e2-105">To use <xref:System.Net.HttpListener>, create a new instance of the class using the <xref:System.Net.HttpListener> constructor and use the <xref:System.Net.HttpListener.Prefixes%2A> property to gain access to the collection that holds the strings that specify which Uniform Resource Identifier (URI) prefixes the <xref:System.Net.HttpListener> should process.</span></span>
  
 <span data-ttu-id="e82e2-106">URI 的前缀字符串组成的方案 （http 或 https）、 主机、 一个可选端口和一个可选路径。</span><span class="sxs-lookup"><span data-stu-id="e82e2-106">A URI prefix string is composed of a scheme (http or https), a host, an optional port, and an optional path.</span></span> <span data-ttu-id="e82e2-107">完整的前缀字符串的一个示例是* http://www.contoso.com:8080/customerData/ *。</span><span class="sxs-lookup"><span data-stu-id="e82e2-107">An example of a complete prefix string is *http://www.contoso.com:8080/customerData/*.</span></span> <span data-ttu-id="e82e2-108">前缀必须以正斜杠 （"/"） 结尾。</span><span class="sxs-lookup"><span data-stu-id="e82e2-108">Prefixes must end in a forward slash ("/").</span></span> <span data-ttu-id="e82e2-109"><xref:System.Net.HttpListener>最匹配所请求的 URI 前缀的对象的请求作出响应。</span><span class="sxs-lookup"><span data-stu-id="e82e2-109">The <xref:System.Net.HttpListener> object with the prefix that most closely matches a requested URI responds to the request.</span></span> <span data-ttu-id="e82e2-110">多个<xref:System.Net.HttpListener>对象不能添加相同的前缀;<xref:System.ComponentModel.Win32Exception>如果引发异常<xref:System.Net.HttpListener>会添加前缀中已被使用。</span><span class="sxs-lookup"><span data-stu-id="e82e2-110">Multiple <xref:System.Net.HttpListener> objects cannot add the same prefix; a <xref:System.ComponentModel.Win32Exception> exception is thrown if a <xref:System.Net.HttpListener> adds a prefix that is already in use.</span></span>
  
 <span data-ttu-id="e82e2-111">指定一个端口时，主机元素可以被替换为"\*"，则指示<xref:System.Net.HttpListener>接受请求发送到端口，如果请求的 URI 与任何其他前缀不匹配。</span><span class="sxs-lookup"><span data-stu-id="e82e2-111">When a port is specified, the host element can be replaced with "\*" to indicate that the <xref:System.Net.HttpListener> accepts requests sent to the port if the requested URI does not match any other prefix.</span></span> <span data-ttu-id="e82e2-112">例如，若要接收所有请求发送到端口 8080 时任何未处理请求的 URI <xref:System.Net.HttpListener>，该前缀是*http://\*: 8080 /*。</span><span class="sxs-lookup"><span data-stu-id="e82e2-112">For example, to receive all requests sent to port 8080 when the requested URI is not handled by any <xref:System.Net.HttpListener>, the prefix is *http://\*:8080/*.</span></span> <span data-ttu-id="e82e2-113">同样，若要指定<xref:System.Net.HttpListener>接受所有请求都发送到端口，将替换为"+"字符的宿主元素。</span><span class="sxs-lookup"><span data-stu-id="e82e2-113">Similarly, to specify that the <xref:System.Net.HttpListener> accepts all requests sent to a port, replace the host element with the "+" character.</span></span> <span data-ttu-id="e82e2-114">For example, *https://+:8080*.</span><span class="sxs-lookup"><span data-stu-id="e82e2-114">For example, *https://+:8080*.</span></span> <span data-ttu-id="e82e2-115">"\*"和"+"字符可出现在包含路径的前缀。</span><span class="sxs-lookup"><span data-stu-id="e82e2-115">The "\*" and "+" characters can be present in prefixes that include paths.</span></span>
  
 <span data-ttu-id="e82e2-116">从.NET 核心 2.0 或 Windows 10 上的.NET Framework 4.6 开始，在 URI 的前缀中管理的支持通配符子域<xref:System.Net.HttpListener>对象。</span><span class="sxs-lookup"><span data-stu-id="e82e2-116">Starting with .NET Core 2.0 or .NET Framework 4.6 on Windows 10, wildcard subdomains are supported in URI prefixes that are managed by an <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="e82e2-117">若要指定通配符子域，使用"\*"中的 URI 前缀的主机名的一部分的字符。</span><span class="sxs-lookup"><span data-stu-id="e82e2-117">To specify a wildcard subdomain, use the "\*" character as part of the hostname in a URI prefix.</span></span> <span data-ttu-id="e82e2-118">例如， *http://\*.foo.com/*。</span><span class="sxs-lookup"><span data-stu-id="e82e2-118">For example, *http://\*.foo.com/*.</span></span> <span data-ttu-id="e82e2-119">将作为自变量传递<xref:System.Net.HttpListenerPrefixCollection.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e82e2-119">Pass this as the argument to the <xref:System.Net.HttpListenerPrefixCollection.Add%2A> method.</span></span> <span data-ttu-id="e82e2-120">之所以能够从.NET 核心 2.0 或 Windows 10; 上的.NET Framework 4.6 开始在早期版本，这会生成<xref:System.Net.HttpListenerException>。</span><span class="sxs-lookup"><span data-stu-id="e82e2-120">This works as of .NET Core 2.0 or .NET Framework 4.6 on Windows 10; in earlier versions, this generates an <xref:System.Net.HttpListenerException>.</span></span>

 > [!WARNING]
 > <span data-ttu-id="e82e2-121">顶级通配符绑定 (*http://\*: 8080 /*和\* http://+:8080 \*) 应**不**使用。</span><span class="sxs-lookup"><span data-stu-id="e82e2-121">Top-level wildcard bindings (*http://\*:8080/* and *http://+:8080*) should **not** be used.</span></span> <span data-ttu-id="e82e2-122">顶级通配符绑定可能会为应用带来安全漏洞。</span><span class="sxs-lookup"><span data-stu-id="e82e2-122">Top-level wildcard bindings can open up your app to security vulnerabilities.</span></span> <span data-ttu-id="e82e2-123">此行为同时适用于强通配符和弱通配符。</span><span class="sxs-lookup"><span data-stu-id="e82e2-123">This applies to both strong and weak wildcards.</span></span> <span data-ttu-id="e82e2-124">使用显式主机名而不是通配符。</span><span class="sxs-lookup"><span data-stu-id="e82e2-124">Use explicit host names rather than wildcards.</span></span> <span data-ttu-id="e82e2-125">如果可控制整个父域（区别于易受攻击的 `*.com`），则子域通配符绑定（例如，`*.mysub.com`）不具有此安全风险。</span><span class="sxs-lookup"><span data-stu-id="e82e2-125">Subdomain wildcard binding (for example, `*.mysub.com`) doesn't have this security risk if you control the entire parent domain (as opposed to `*.com`, which is vulnerable).</span></span> <span data-ttu-id="e82e2-126">有关详细信息，请参阅 [rfc7230 第 5.4 条](https://tools.ietf.org/html/rfc7230#section-5.4)。</span><span class="sxs-lookup"><span data-stu-id="e82e2-126">See [rfc7230 section-5.4](https://tools.ietf.org/html/rfc7230#section-5.4) for more information.</span></span>
  
 <span data-ttu-id="e82e2-127">若要开始侦听来自客户端的请求，请将的 URI 前缀添加到集合，并且调用<xref:System.Net.HttpListener.Start%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e82e2-127">To begin listening for requests from clients, add the URI prefixes to the collection and call the <xref:System.Net.HttpListener.Start%2A> method.</span></span> <span data-ttu-id="e82e2-128"><xref:System.Net.HttpListener> 提供用于处理客户端请求的同步和异步模型。</span><span class="sxs-lookup"><span data-stu-id="e82e2-128"><xref:System.Net.HttpListener> offers both synchronous and asynchronous models for processing client requests.</span></span> <span data-ttu-id="e82e2-129">请求和其关联的响应使用访问<xref:System.Net.HttpListenerContext>返回对象<xref:System.Net.HttpListener.GetContext%2A>方法或其异步对应<xref:System.Net.HttpListener.BeginGetContext%2A>和<xref:System.Net.HttpListener.EndGetContext%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e82e2-129">Requests and their associated responses are accessed using the <xref:System.Net.HttpListenerContext> object returned by the <xref:System.Net.HttpListener.GetContext%2A> method or its asynchronous counterparts, the <xref:System.Net.HttpListener.BeginGetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods.</span></span>
  
 <span data-ttu-id="e82e2-130">同步模型适合，如果你的应用程序应阻止等待客户端请求时，如果你想要一次处理只请求一次。</span><span class="sxs-lookup"><span data-stu-id="e82e2-130">The synchronous model is appropriate if your application should block while waiting for a client request and if you want to process only one request at a time.</span></span> <span data-ttu-id="e82e2-131">使用同步模型，调用<xref:System.Net.HttpListener.GetContext%2A>方法，等待客户端发送请求。</span><span class="sxs-lookup"><span data-stu-id="e82e2-131">Using the synchronous model, call the <xref:System.Net.HttpListener.GetContext%2A> method, which waits for a client to send a request.</span></span> <span data-ttu-id="e82e2-132">该方法返回<xref:System.Net.HttpListenerContext>对象为你处理一个发生。</span><span class="sxs-lookup"><span data-stu-id="e82e2-132">The method returns an <xref:System.Net.HttpListenerContext> object to you for processing when one occurs.</span></span>
  
 <span data-ttu-id="e82e2-133">在更复杂的异步模型中，你的应用程序不会阻止在其自己的执行线程中等待请求和每个请求正在处理。</span><span class="sxs-lookup"><span data-stu-id="e82e2-133">In the more complex asynchronous model, your application does not block while waiting for requests and each request is processed in its own execution thread.</span></span> <span data-ttu-id="e82e2-134">使用<xref:System.Net.HttpListener.BeginGetContext%2A>方法，以指定的应用程序定义一个方法调用每个传入请求。</span><span class="sxs-lookup"><span data-stu-id="e82e2-134">Use the <xref:System.Net.HttpListener.BeginGetContext%2A> method to specify an application-defined method to be called for each incoming request.</span></span> <span data-ttu-id="e82e2-135">在该方法中，调用<xref:System.Net.HttpListener.EndGetContext%2A>方法以获取请求，处理请求和响应。</span><span class="sxs-lookup"><span data-stu-id="e82e2-135">Within that method, call the <xref:System.Net.HttpListener.EndGetContext%2A> method to obtain the request, process it, and respond.</span></span>
  
 <span data-ttu-id="e82e2-136">在任一模型中，使用访问传入的请求<xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType>属性和是否由表示<xref:System.Net.HttpListenerRequest>对象。</span><span class="sxs-lookup"><span data-stu-id="e82e2-136">In either model, incoming requests are accessed using the <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> property and are represented by <xref:System.Net.HttpListenerRequest> objects.</span></span> <span data-ttu-id="e82e2-137">同样，使用访问响应<xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType>属性和是否由表示<xref:System.Net.HttpListenerResponse>对象。</span><span class="sxs-lookup"><span data-stu-id="e82e2-137">Similarly, responses are accessed using the <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType> property and are represented by <xref:System.Net.HttpListenerResponse> objects.</span></span> <span data-ttu-id="e82e2-138">这些对象共享某些功能，带有<xref:System.Net.HttpWebRequest>和<xref:System.Net.HttpWebResponse>对象，但后者的对象不能与一起<xref:System.Net.HttpListener>因为它们实现客户端、 不是服务器、 行为。</span><span class="sxs-lookup"><span data-stu-id="e82e2-138">These objects share some functionality with the <xref:System.Net.HttpWebRequest> and <xref:System.Net.HttpWebResponse> objects, but the latter objects cannot be used in conjunction with <xref:System.Net.HttpListener> because they implement client, not server, behaviors.</span></span>
  
 <span data-ttu-id="e82e2-139"><xref:System.Net.HttpListener>可以要求客户端身份验证。</span><span class="sxs-lookup"><span data-stu-id="e82e2-139">An <xref:System.Net.HttpListener> can require client authentication.</span></span> <span data-ttu-id="e82e2-140">你可以指定一种特定的方案，用于进行身份验证，也可以指定一个委托来决定要使用的方案。</span><span class="sxs-lookup"><span data-stu-id="e82e2-140">You can either specify a particular scheme to use for authentication, or you can specify a delegate that determines the scheme to use.</span></span> <span data-ttu-id="e82e2-141">你必须要求某种形式的身份验证来获取有关客户端的标识信息。</span><span class="sxs-lookup"><span data-stu-id="e82e2-141">You must require some form of authentication to obtain information about the client's identity.</span></span> <span data-ttu-id="e82e2-142">有关其他信息，请参阅<xref:System.Net.HttpListenerContext.User%2A>， <xref:System.Net.HttpListener.AuthenticationSchemes%2A>，和<xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="e82e2-142">For additional information, see the <xref:System.Net.HttpListenerContext.User%2A>, <xref:System.Net.HttpListener.AuthenticationSchemes%2A>, and <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> properties.</span></span>
  
> [!NOTE]
> <span data-ttu-id="e82e2-143">如果你创建<xref:System.Net.HttpListener>使用 https，你必须为该侦听器选择服务器证书。</span><span class="sxs-lookup"><span data-stu-id="e82e2-143">If you create an <xref:System.Net.HttpListener> using https, you must select a Server Certificate for that listener.</span></span> <span data-ttu-id="e82e2-144">否则为<xref:System.Net.HttpWebRequest>此查询<xref:System.Net.HttpListener>并意外关闭的连接将失败。</span><span class="sxs-lookup"><span data-stu-id="e82e2-144">Otherwise, an <xref:System.Net.HttpWebRequest> query of this <xref:System.Net.HttpListener> will fail with an unexpected close of the connection.</span></span>
  
> [!NOTE]
> <span data-ttu-id="e82e2-145">可以使用 Network Shell (netsh.exe) 来配置服务器证书和其他侦听器选项。</span><span class="sxs-lookup"><span data-stu-id="e82e2-145">You can configure Server Certificates and other listener options by using Network Shell (netsh.exe).</span></span> <span data-ttu-id="e82e2-146">请参阅[Network Shell (Netsh)](/windows-server/networking/technologies/netsh/netsh)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="e82e2-146">See [Network Shell (Netsh)](/windows-server/networking/technologies/netsh/netsh) for more details.</span></span> <span data-ttu-id="e82e2-147">可执行文件开始使用 Windows Server 2008 和 Windows Vista 的传送。</span><span class="sxs-lookup"><span data-stu-id="e82e2-147">The executable began shipping with Windows Server 2008 and Windows Vista.</span></span>
  
> [!NOTE]
> <span data-ttu-id="e82e2-148">如果指定多个身份验证方案<xref:System.Net.HttpListener>，侦听器将请求客户端按以下顺序： `Negotiate`， `NTLM`， `Digest`，，然后`Basic`。</span><span class="sxs-lookup"><span data-stu-id="e82e2-148">If you specify multiple authentication schemes for the <xref:System.Net.HttpListener>, the listener will challenge clients in the following order: `Negotiate`, `NTLM`, `Digest`, and then `Basic`.</span></span>
  
   
  
## Examples
 <span data-ttu-id="e82e2-149">下面的代码示例演示如何使用<xref:System.Net.HttpListener>。</span><span class="sxs-lookup"><span data-stu-id="e82e2-149">The following code example demonstrates using a <xref:System.Net.HttpListener>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e82e2-150">Initializes a new instance of the <see cref="T:System.Net.HttpListener" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-150">Initializes a new instance of the <see cref="T:System.Net.HttpListener" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e82e2-151">在使用此构造函数返回的实例之前, 必须调用其<xref:System.Net.HttpListener.Start%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e82e2-151">Before using the instance returned by this constructor, you must invoke its <xref:System.Net.HttpListener.Start%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e82e2-152">下面的代码示例演示如何使用<xref:System.Net.HttpListener>构造函数来创建一个新<xref:System.Net.HttpListener>对象。</span><span class="sxs-lookup"><span data-stu-id="e82e2-152">The following code example demonstrates using the <xref:System.Net.HttpListener> constructor to create a new <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="e82e2-153">有关完整示例，请参阅<xref:System.Net.HttpListener>类主题。</span><span class="sxs-lookup"><span data-stu-id="e82e2-153">For the complete example, see the <xref:System.Net.HttpListener> class topic.</span></span>  
  
 [!code-csharp[Net_listener_Basic#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="e82e2-154">This class cannot be used on the current operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-154">This class cannot be used on the current operating system.</span>
          </span>
          <span data-ttu-id="e82e2-155">Windows Server 2003 or Windows XP SP2 is required to use instances of this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-155">Windows Server 2003 or Windows XP SP2 is required to use instances of this class.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="e82e2-156">注意： 此成员将输出跟踪信息时您的应用程序中启用网络跟踪。</span>
            <span class="sxs-lookup">
              <span data-stu-id="e82e2-156">Note: This member outputs trace information when you enable network tracing in your application.</span>
            </span>
            <span data-ttu-id="e82e2-157">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="e82e2-157">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e82e2-158">Shuts down the <see cref="T:System.Net.HttpListener" /> object immediately, discarding all currently queued requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-158">Shuts down the <see cref="T:System.Net.HttpListener" /> object immediately, discarding all currently queued requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e82e2-159">此方法释放该侦听器持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="e82e2-159">This method disposes of all resources held by this listener.</span></span> <span data-ttu-id="e82e2-160">任何挂起的请求将无法完成。</span><span class="sxs-lookup"><span data-stu-id="e82e2-160">Any pending requests are unable to complete.</span></span>  
  
 <span data-ttu-id="e82e2-161">调用此方法后，你将收到<xref:System.ObjectDisposedException>如果你尝试使用此<xref:System.Net.HttpListener>。</span><span class="sxs-lookup"><span data-stu-id="e82e2-161">After calling this method, you will receive an <xref:System.ObjectDisposedException> if you attempt to use this <xref:System.Net.HttpListener>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e82e2-162">下面的代码示例演示如何调用此方法。</span><span class="sxs-lookup"><span data-stu-id="e82e2-162">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="e82e2-163">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="e82e2-163">This member outputs trace information when you enable network tracing in your application.</span>
            </span>
            <span data-ttu-id="e82e2-164">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="e82e2-164">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationSchemes">
      <MemberSignature Language="C#" Value="public System.Net.AuthenticationSchemes AuthenticationSchemes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.AuthenticationSchemes AuthenticationSchemes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.AuthenticationSchemes" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationSchemes As AuthenticationSchemes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::AuthenticationSchemes AuthenticationSchemes { System::Net::AuthenticationSchemes get(); void set(System::Net::AuthenticationSchemes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.AuthenticationSchemes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e82e2-165">Gets or sets the scheme used to authenticate clients.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-165">Gets or sets the scheme used to authenticate clients.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e82e2-166">指示如何对客户端进行身份验证的 <see cref="T:System.Net.AuthenticationSchemes" /> 枚举值的按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-166">A bitwise combination of <see cref="T:System.Net.AuthenticationSchemes" /> enumeration values that indicates how clients are to be authenticated.</span>
          </span>
          <span data-ttu-id="e82e2-167">默认值为 <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-167">The default value is <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e82e2-168"><xref:System.Net.HttpListener>使用指定的方案所有传入的请求进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="e82e2-168">The <xref:System.Net.HttpListener> uses the specified scheme to authenticate all incoming requests.</span></span> <span data-ttu-id="e82e2-169"><xref:System.Net.HttpListener.GetContext%2A>和<xref:System.Net.HttpListener.EndGetContext%2A>方法返回传入的客户端请求，仅当<xref:System.Net.HttpListener>成功进行身份验证请求。</span><span class="sxs-lookup"><span data-stu-id="e82e2-169">The <xref:System.Net.HttpListener.GetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods return an incoming client request only if the <xref:System.Net.HttpListener> successfully authenticates the request.</span></span>  
  
 <span data-ttu-id="e82e2-170">你可以通过使用询问成功通过身份验证的客户端的标识<xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="e82e2-170">You can interrogate the identity of a successfully authenticated client by using the <xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="e82e2-171">如果你想<xref:System.Net.HttpListener>根据它接收的请求的特征对象使用不同的身份验证机制 (例如，请求的<xref:System.Net.HttpListenerRequest.Url%2A>或<xref:System.Net.HttpListenerRequest.UserHostName%2A>属性)，则必须实现的方法，选择身份验证方案。</span><span class="sxs-lookup"><span data-stu-id="e82e2-171">If you want an <xref:System.Net.HttpListener> object to use different authentication mechanisms based on characteristics of the requests it receives (for example, the request's <xref:System.Net.HttpListenerRequest.Url%2A> or <xref:System.Net.HttpListenerRequest.UserHostName%2A> property), you must implement a method that chooses the authentication scheme.</span></span> <span data-ttu-id="e82e2-172">有关如何执行此操作的说明，请参阅<xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A>属性文档。</span><span class="sxs-lookup"><span data-stu-id="e82e2-172">For instructions about how to do this, see the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property documentation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e82e2-173">若要设置此属性以启用摘要，NTLM 或协商需要<xref:System.Security.Permissions.SecurityPermission>， <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>。</span><span class="sxs-lookup"><span data-stu-id="e82e2-173">To set this property to enable Digest, NTLM, or Negotiate requires the <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e82e2-174">下面的代码示例演示如何使用<xref:System.Net.HttpListener.AuthenticationSchemes%2A>属性来指定身份验证方案。</span><span class="sxs-lookup"><span data-stu-id="e82e2-174">The following code example demonstrates using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property to specify an authentication scheme.</span></span>  
  
 [!code-csharp[Net_listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e82e2-175">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-175">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationSchemeSelectorDelegate">
      <MemberSignature Language="C#" Value="public System.Net.AuthenticationSchemeSelector AuthenticationSchemeSelectorDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.AuthenticationSchemeSelector AuthenticationSchemeSelectorDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationSchemeSelectorDelegate As AuthenticationSchemeSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::AuthenticationSchemeSelector ^ AuthenticationSchemeSelectorDelegate { System::Net::AuthenticationSchemeSelector ^ get(); void set(System::Net::AuthenticationSchemeSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.AuthenticationSchemeSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e82e2-176">Gets or sets the delegate called to determine the protocol used to authenticate clients.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-176">Gets or sets the delegate called to determine the protocol used to authenticate clients.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e82e2-177">
            <see cref="T:System.Net.AuthenticationSchemeSelector" /> 委托，它调用用于选择身份验证协议的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-177">An <see cref="T:System.Net.AuthenticationSchemeSelector" /> delegate that invokes the method used to select an authentication protocol.</span>
          </span>
          <span data-ttu-id="e82e2-178">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-178">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e82e2-179">如果你想要用于处理由的特定实例的所有请求的相同身份验证协议<xref:System.Net.HttpListener>，不需要设置此属性。</span><span class="sxs-lookup"><span data-stu-id="e82e2-179">If you want the same authentication protocol to be used for all requests handled by a particular instance of <xref:System.Net.HttpListener>, you do not need to set this property.</span></span> <span data-ttu-id="e82e2-180">若要指定要用于所有客户端请求的协议，使用<xref:System.Net.HttpListener.AuthenticationSchemes%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="e82e2-180">To specify a protocol to be used for all client requests, use the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property.</span></span>  
  
 <span data-ttu-id="e82e2-181">如果客户端未在其标头，指定身份验证信息<xref:System.Net.HttpListener>调用为每个未经身份验证的传入请求，以确定，如果有的话，使用协议进行身份验证客户端指定的委托。</span><span class="sxs-lookup"><span data-stu-id="e82e2-181">If the client has not specified authentication information in its headers, the <xref:System.Net.HttpListener> calls the specified delegate for each unauthenticated incoming request to determine which, if any, protocol to use to authenticate the client.</span></span> <span data-ttu-id="e82e2-182"><xref:System.Net.HttpListener.GetContext%2A>和<xref:System.Net.HttpListener.EndGetContext%2A>方法返回传入的请求仅当<xref:System.Net.HttpListener>成功通过身份验证请求。</span><span class="sxs-lookup"><span data-stu-id="e82e2-182">The <xref:System.Net.HttpListener.GetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods return an incoming request only if the <xref:System.Net.HttpListener> successfully authenticated the request.</span></span> <span data-ttu-id="e82e2-183">如果无法对请求进行身份验证，<xref:System.Net.HttpListener>自动发回 401 响应。</span><span class="sxs-lookup"><span data-stu-id="e82e2-183">If a request cannot be authenticated, the <xref:System.Net.HttpListener> automatically sends back a 401 response.</span></span> <span data-ttu-id="e82e2-184">你可以使用已成功经过身份验证客户端的标识<xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="e82e2-184">You can get the identity of a successfully authenticated client using the <xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="e82e2-185">委托所选的身份验证协议为应用程序特定方法的能力是如果你希望的实例大小时<xref:System.Net.HttpListener>使用不同的身份验证协议根据它接收 （对于请求的特性例如，请求的<xref:System.Net.HttpListenerRequest.Url%2A>或<xref:System.Net.HttpListenerRequest.UserHostAddress%2A>属性)。</span><span class="sxs-lookup"><span data-stu-id="e82e2-185">The ability to delegate the choice of authentication protocol to an application-specific method is useful if you want an instance of <xref:System.Net.HttpListener> to use different authentication protocols depending on the characteristics of the requests it receives (for example, the request's <xref:System.Net.HttpListenerRequest.Url%2A> or <xref:System.Net.HttpListenerRequest.UserHostAddress%2A> property).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e82e2-186">若要设置此属性以启用摘要，NTLM 或协商需要<xref:System.Security.Permissions.SecurityPermission>， <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>。</span><span class="sxs-lookup"><span data-stu-id="e82e2-186">To set this property to enable Digest, NTLM, or Negotiate requires the <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e82e2-187">下面的代码示例设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="e82e2-187">The following code example sets the value of this property.</span></span>  
  
 [!code-csharp[NclListener#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#2)]
 [!code-vb[NclListener#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#2)]  
  
 <span data-ttu-id="e82e2-188">下面的代码示例提供的方法由调用实现<xref:System.Net.AuthenticationSchemeSelector>委托。</span><span class="sxs-lookup"><span data-stu-id="e82e2-188">The following code example provides an implementation of a method invoked by an <xref:System.Net.AuthenticationSchemeSelector> delegate.</span></span>  
  
 [!code-csharp[NclListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#1)]
 [!code-vb[NclListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e82e2-189">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-189">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginGetContext">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetContext (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetContext(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetContext (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetContext(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="e82e2-190">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when a client request is available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-190">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when a client request is available.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e82e2-191">A user-defined object that contains information about the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-191">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="e82e2-192">This object is passed to the <c>callback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-192">This object is passed to the <c>callback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e82e2-193">Begins asynchronously retrieving an incoming request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-193">Begins asynchronously retrieving an incoming request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e82e2-194">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-194">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e82e2-195"><xref:System.Net.HttpListener.BeginGetContext%2A>方法开始异步 （非阻塞） 调用接收传入的客户端请求。</span><span class="sxs-lookup"><span data-stu-id="e82e2-195">The <xref:System.Net.HttpListener.BeginGetContext%2A> method begins an asynchronous (non-blocking) call to receive incoming client requests.</span></span> <span data-ttu-id="e82e2-196">调用此方法之前，必须调用<xref:System.Net.HttpListener.Start%2A>方法并添加至少一个统一资源标识符 (URI) 前缀，用于侦听的 URI 将字符串添加到<xref:System.Net.HttpListenerPrefixCollection>返回<xref:System.Net.HttpListener.Prefixes%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="e82e2-196">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one Uniform Resource Identifier (URI) prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span>  
  
 <span data-ttu-id="e82e2-197">必须通过调用完成异步操作<xref:System.Net.HttpListener.EndGetContext%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e82e2-197">The asynchronous operation must be completed by calling the <xref:System.Net.HttpListener.EndGetContext%2A> method.</span></span> <span data-ttu-id="e82e2-198">通常情况下，通过调用该方法`callback`委托。</span><span class="sxs-lookup"><span data-stu-id="e82e2-198">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="e82e2-199">在操作完成时，此方法不会阻止。</span><span class="sxs-lookup"><span data-stu-id="e82e2-199">This method does not block while the operation completes.</span></span> <span data-ttu-id="e82e2-200">若要获取传入的请求和块，该操作完成之前，调用<xref:System.Net.HttpListener.GetContext%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e82e2-200">To get an incoming request and block until the operation completes, call the <xref:System.Net.HttpListener.GetContext%2A> method.</span></span>  
  
 <span data-ttu-id="e82e2-201">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="e82e2-201">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e82e2-202">下面的代码示例演示如何使用<xref:System.Net.HttpListener.BeginGetContext%2A>方法，以指定将处理传入的客户端请求的回调方法。</span><span class="sxs-lookup"><span data-stu-id="e82e2-202">The following code example demonstrates using the <xref:System.Net.HttpListener.BeginGetContext%2A> method to specify a callback method that will handle incoming client requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 <span data-ttu-id="e82e2-203">下面的代码示例实现一个回调方法。</span><span class="sxs-lookup"><span data-stu-id="e82e2-203">The following code example implements a callback method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="e82e2-204">A Win32 function call failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-204">A Win32 function call failed.</span>
          </span>
          <span data-ttu-id="e82e2-205">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-205">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e82e2-206">This object has not been started or is currently stopped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-206">This object has not been started or is currently stopped.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e82e2-207">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-207">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="e82e2-208">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="e82e2-208">This member outputs trace information when you enable network tracing in your application.</span>
            </span>
            <span data-ttu-id="e82e2-209">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="e82e2-209">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e82e2-210">Shuts down the <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-210">Shuts down the <see cref="T:System.Net.HttpListener" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e82e2-211">调用此方法后，你无法再使用<xref:System.Net.HttpListener>对象。</span><span class="sxs-lookup"><span data-stu-id="e82e2-211">After calling this method, you can no longer use the <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="e82e2-212">若要临时暂停<xref:System.Net.HttpListener>对象，请使用<xref:System.Net.HttpListener.Stop%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e82e2-212">To temporarily pause an <xref:System.Net.HttpListener> object, use the <xref:System.Net.HttpListener.Stop%2A> method.</span></span>  
  
 <span data-ttu-id="e82e2-213">此方法关闭列表<xref:System.Net.HttpListener>而不会处理排队的请求的对象。</span><span class="sxs-lookup"><span data-stu-id="e82e2-213">This method shut downs the <xref:System.Net.HttpListener> object without processing queued requests.</span></span> <span data-ttu-id="e82e2-214">任何挂起的请求将无法完成。</span><span class="sxs-lookup"><span data-stu-id="e82e2-214">Any pending requests are unable to complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e82e2-215">下面的代码示例演示如何调用此方法。</span><span class="sxs-lookup"><span data-stu-id="e82e2-215">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="e82e2-216">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="e82e2-216">This member outputs trace information when you enable network tracing in your application.</span>
            </span>
            <span data-ttu-id="e82e2-217">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="e82e2-217">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DefaultServiceNames">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ServiceNameCollection DefaultServiceNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ServiceNameCollection DefaultServiceNames" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.DefaultServiceNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultServiceNames As ServiceNameCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ServiceNameCollection ^ DefaultServiceNames { System::Security::Authentication::ExtendedProtection::ServiceNameCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ServiceNameCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e82e2-218">Gets a default list of Service Provider Names (SPNs) as determined by registered prefixes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-218">Gets a default list of Service Provider Names (SPNs) as determined by registered prefixes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e82e2-219">一个包含 SPN 列表的 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-219">A <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> that contains a list of SPNs.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e82e2-220"><xref:System.Net.HttpListener.DefaultServiceNames%2A>属性用于使用集成 Windows 身份验证提供扩展的保护。</span><span class="sxs-lookup"><span data-stu-id="e82e2-220">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="e82e2-221">Spn 的列表初始化从<xref:System.Net.HttpListener.Prefixes%2A>属性时访问和清除在将新的前缀添加到<xref:System.Net.HttpListener.Prefixes%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="e82e2-221">The list of SPNs is initialized from the <xref:System.Net.HttpListener.Prefixes%2A> property when accessed and cleared when new prefixes are added to the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span>  
  
 <span data-ttu-id="e82e2-222"><xref:System.Net.HttpListener.DefaultServiceNames%2A>应用程序不设置，才使用属性<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A>上其扩展的保护策略的属性。</span><span class="sxs-lookup"><span data-stu-id="e82e2-222">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is used if an application doesn't set the <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A> property on its extended protection policy.</span></span>  
  
 <span data-ttu-id="e82e2-223"><xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection> ，检索与<xref:System.Net.HttpListener.DefaultServiceNames%2A>从生成属性<xref:System.Net.HttpListener.Prefixes%2A>属性根据下列规则：</span><span class="sxs-lookup"><span data-stu-id="e82e2-223">The <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection> that is retrieved with the <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is built from the <xref:System.Net.HttpListener.Prefixes%2A> property according to the following rules:</span></span>  
  
1.  <span data-ttu-id="e82e2-224">如果主机名是"+"，"*"，或 IPv4 或 IPv6 文本 (等效于"\*"但限制为特定的本地接口)，添加以下 SPN:</span><span class="sxs-lookup"><span data-stu-id="e82e2-224">If the hostname is "+", "*", or an IPv4 or IPv6 literal (equivalent to "\*" but restricted to a specific local interface), the following SPN is added:</span></span>  
  
 <span data-ttu-id="e82e2-225">`"HTTP/"` 加上的计算机的完全限定的域名。</span><span class="sxs-lookup"><span data-stu-id="e82e2-225">`"HTTP/"` plus the fully qualified domain name of the computer.</span></span>  
  
1.  <span data-ttu-id="e82e2-226">如果主机名不包含点 （没有域或子域），尝试解析使用 DNS 完全限定的域名称 (相同的行为由<xref:System.Net.HttpWebRequest>)。</span><span class="sxs-lookup"><span data-stu-id="e82e2-226">If the hostname contains no dots (no domains or subdomains), an attempt is made to resolve the fully-qualified domain name using DNS (the same behavior used by <xref:System.Net.HttpWebRequest>).</span></span> <span data-ttu-id="e82e2-227">如果可以解析的完全限定域名，则添加以下 Spn:</span><span class="sxs-lookup"><span data-stu-id="e82e2-227">If the fully-qualified domain name can be resolved, the following SPNs are added:</span></span>  
  
 <span data-ttu-id="e82e2-228">`"HTTP/"` 加上的主机名 （短名称）。</span><span class="sxs-lookup"><span data-stu-id="e82e2-228">`"HTTP/"` plus the hostname (the short name).</span></span>  
  
 <span data-ttu-id="e82e2-229">`"HTTP/"` 加上为此主机名的完全限定的域名。</span><span class="sxs-lookup"><span data-stu-id="e82e2-229">`"HTTP/"` plus the fully qualified domain name for the hostname.</span></span>  
  
1.  <span data-ttu-id="e82e2-230">如果主机名不包含点 （没有域或子域） 和无法解析的完全限定域名，将添加以下 SPN:</span><span class="sxs-lookup"><span data-stu-id="e82e2-230">If the hostname contains not dots (no domains or subdomains) and a fully-qualified domain name can't be resolved, the following SPN is added:</span></span>  
  
 <span data-ttu-id="e82e2-231">`"HTTP/"` 加上主机名。</span><span class="sxs-lookup"><span data-stu-id="e82e2-231">`"HTTP/"` plus the hostname.</span></span>  
  
1.  <span data-ttu-id="e82e2-232">如果主机名中包含点 （域或子域），将添加以下 SPN:</span><span class="sxs-lookup"><span data-stu-id="e82e2-232">If the hostname contains dots (domains or subdomains), the following SPN is added:</span></span>  
  
 <span data-ttu-id="e82e2-233">`"HTTP/"` 加上主机名。</span><span class="sxs-lookup"><span data-stu-id="e82e2-233">`"HTTP/"` plus the hostname.</span></span>  
  
 <span data-ttu-id="e82e2-234"><xref:System.Net.HttpListener.DefaultServiceNames%2A>属性可以使用应用程序，查看默认 Spn 将用于身份验证如果不提供任何自定义列表的列表。</span><span class="sxs-lookup"><span data-stu-id="e82e2-234">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property can be used by an application to review the list of default SPNs which will be used for authentication if no custom list is supplied.</span></span> <span data-ttu-id="e82e2-235">如果需要其他 Spn，则应用程序可以添加它们使用之一<xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e82e2-235">If other SPNs are needed, an application can add them using one of the <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A> methods.</span></span>  
  
 <span data-ttu-id="e82e2-236">使用扩展的保护策略基于做出决策所请求的 URL，因为这可以被欺骗时，它是不安全的。</span><span class="sxs-lookup"><span data-stu-id="e82e2-236">It is not safe when using extended protection to make policy decisions based on the requested URL, since this can be spoofed.</span></span> <span data-ttu-id="e82e2-237">相反，应用程序应依赖于<xref:System.Net.HttpListenerRequest.LocalEndPoint%2A>或<xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A>属性以使此类策略决策。</span><span class="sxs-lookup"><span data-stu-id="e82e2-237">Rather, applications should rely on the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> or <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> properties to make such policy decisions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="EndGetContext">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerContext EndGetContext (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.HttpListenerContext EndGetContext(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetContext (asyncResult As IAsyncResult) As HttpListenerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::HttpListenerContext ^ EndGetContext(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="e82e2-238">An <see cref="T:System.IAsyncResult" /> object that was obtained when the asynchronous operation was started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-238">An <see cref="T:System.IAsyncResult" /> object that was obtained when the asynchronous operation was started.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e82e2-239">Completes an asynchronous operation to retrieve an incoming client request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-239">Completes an asynchronous operation to retrieve an incoming client request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e82e2-240">An <see cref="T:System.Net.HttpListenerContext" /> object that represents the client request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-240">An <see cref="T:System.Net.HttpListenerContext" /> object that represents the client request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e82e2-241"><xref:System.Net.HttpListener.EndGetContext%2A>调用方法时，通常在应用程序定义的回调方法中调用的委托，以获取<xref:System.Net.HttpListenerContext>对象，其中包含传入的客户端请求和其关联的响应。</span><span class="sxs-lookup"><span data-stu-id="e82e2-241">The <xref:System.Net.HttpListener.EndGetContext%2A> method is called, usually within an application-defined callback method invoked by a delegate, to obtain the <xref:System.Net.HttpListenerContext> object that contains an incoming client request and its associated response.</span></span> <span data-ttu-id="e82e2-242">此方法完成以前通过调用启动操作<xref:System.Net.HttpListener.BeginGetContext%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e82e2-242">This method completes an operation previously started by calling the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span> <span data-ttu-id="e82e2-243">如果该操作未完成，此方法阻止，直至它执行。</span><span class="sxs-lookup"><span data-stu-id="e82e2-243">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="e82e2-244">因为调用<xref:System.Net.HttpListener.EndGetContext%2A>方法需要<xref:System.Net.HttpListener>对象，此对象通常传递到回调方法，从而使用传入的状态对象<xref:System.Net.HttpListener.BeginGetContext%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e82e2-244">Because calling the <xref:System.Net.HttpListener.EndGetContext%2A> method requires the <xref:System.Net.HttpListener> object, this object is typically passed into a callback method by using the state object passed into the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span> <span data-ttu-id="e82e2-245">你可以通过使用来获取此状态对象<xref:System.IAsyncResult.AsyncState%2A>属性`asyncResult`对象。</span><span class="sxs-lookup"><span data-stu-id="e82e2-245">You can obtain this state object by using the <xref:System.IAsyncResult.AsyncState%2A> property of the `asyncResult` object.</span></span>  
  
 <span data-ttu-id="e82e2-246">有关使用异步编程模型的详细信息，请参阅[异步调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="e82e2-246">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e82e2-247">下面的代码示例演示调用的回调方法的实现<xref:System.Net.HttpListener.EndGetContext%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e82e2-247">The following code example shows the implementation of a callback method that calls the <xref:System.Net.HttpListener.EndGetContext%2A> method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e82e2-248">
            <paramref name="asyncResult" /> was not obtained by calling the <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-248">
              <paramref name="asyncResult" /> was not obtained by calling the <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e82e2-249">
            <paramref name="asyncResult" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-249">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e82e2-250">The <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> method was already called for the specified <paramref name="asyncResult" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-250">The <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> method was already called for the specified <paramref name="asyncResult" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e82e2-251">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-251">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="e82e2-252">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="e82e2-252">This member outputs trace information when you enable network tracing in your application.</span>
            </span>
            <span data-ttu-id="e82e2-253">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="e82e2-253">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionPolicy">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionPolicy As ExtendedProtectionPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ ExtendedProtectionPolicy { System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ get(); void set(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("not used anywhere in the implementation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e82e2-254">Get or set the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for extended protection for a session.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-254">Get or set the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for extended protection for a session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e82e2-255">一个 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />，它指定要用于扩展保护的策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-255">A <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that specifies the policy to use for extended protection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e82e2-256"><xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A>属性用于使用集成 Windows 身份验证提供扩展的保护。</span><span class="sxs-lookup"><span data-stu-id="e82e2-256">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="e82e2-257"><xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A>属性允许的整个的扩展的保护策略配置<xref:System.Net.HttpListener>会话。</span><span class="sxs-lookup"><span data-stu-id="e82e2-257">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property allows the configuration of the extended protection policy for the whole <xref:System.Net.HttpListener> session.</span></span> <span data-ttu-id="e82e2-258"><xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A>属性允许的每个请求的扩展的保护策略的配置。</span><span class="sxs-lookup"><span data-stu-id="e82e2-258">The <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> property allows the configuration of the extended protection policy for each individual request.</span></span>  
  
 <span data-ttu-id="e82e2-259"><xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A>属性必须为`null`。</span><span class="sxs-lookup"><span data-stu-id="e82e2-259">The <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> property must be `null`.</span></span> <span data-ttu-id="e82e2-260"><xref:System.Net.HttpListener>实例在如果还有一个直接从其自己的 TLS 会话获取通道绑定令牌 (CBT)。</span><span class="sxs-lookup"><span data-stu-id="e82e2-260">The <xref:System.Net.HttpListener> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e82e2-261">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property was not <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-261">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property was not <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e82e2-262">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-262">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e82e2-263">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-263">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e82e2-264">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-264">This object is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="e82e2-265">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> property was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-265">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> property was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionSelectorDelegate">
      <MemberSignature Language="C#" Value="public System.Net.HttpListener.ExtendedProtectionSelector ExtendedProtectionSelectorDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListener/ExtendedProtectionSelector ExtendedProtectionSelectorDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionSelectorDelegate As HttpListener.ExtendedProtectionSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListener::ExtendedProtectionSelector ^ ExtendedProtectionSelectorDelegate { System::Net::HttpListener::ExtendedProtectionSelector ^ get(); void set(System::Net::HttpListener::ExtendedProtectionSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListener+ExtendedProtectionSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e82e2-266">Get or set the delegate called to determine the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for each request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-266">Get or set the delegate called to determine the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for each request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e82e2-267">一个 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />，它指定要用于扩展保护的策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-267">A <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that specifies the policy to use for extended protection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e82e2-268"><xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A>属性用于使用集成 Windows 身份验证提供扩展的保护。</span><span class="sxs-lookup"><span data-stu-id="e82e2-268">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="e82e2-269"><xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A>属性允许的整个的扩展的保护策略配置<xref:System.Net.HttpListener>会话。</span><span class="sxs-lookup"><span data-stu-id="e82e2-269">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property allows the configuration of the extended protection policy for the whole <xref:System.Net.HttpListener> session.</span></span> <span data-ttu-id="e82e2-270"><xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A>属性允许的每个单个请求的扩展的保护策略配置。</span><span class="sxs-lookup"><span data-stu-id="e82e2-270">The <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> property allows the configuration of the extended protection policy per individual request.</span></span>  
  
 <span data-ttu-id="e82e2-271"><xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A>属性必须为`null`。</span><span class="sxs-lookup"><span data-stu-id="e82e2-271">The <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> property must be `null`.</span></span> <span data-ttu-id="e82e2-272"><xref:System.Net.HttpListener>实例在如果还有一个直接从其自己的 TLS 会话获取通道绑定令牌 (CBT)。</span><span class="sxs-lookup"><span data-stu-id="e82e2-272">The <xref:System.Net.HttpListener> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</span></span>  
  
 <span data-ttu-id="e82e2-273">对于每个请求，该委托可以选择的设置，<xref:System.Net.HttpListener>实例将用于提供扩展的保护。</span><span class="sxs-lookup"><span data-stu-id="e82e2-273">For each request, the delegate can choose the settings that the <xref:System.Net.HttpListener> instance will use to provide extended protection.</span></span>  
  
 <span data-ttu-id="e82e2-274">如果委托返回`null`对于此属性，这表示<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy>其中<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>属性设置为<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="e82e2-274">If a delegate returns `null` for this property, this represents a <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy> which the <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> property set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e82e2-275">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property must be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-275">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property must be <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e82e2-276">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-276">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e82e2-277">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-277">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e82e2-278">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-278">This object is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="e82e2-279">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-279">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerContext GetContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.HttpListenerContext GetContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.GetContext" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContext () As HttpListenerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::HttpListenerContext ^ GetContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e82e2-280">Waits for an incoming request and returns when one is received.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-280">Waits for an incoming request and returns when one is received.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e82e2-281">An <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-281">An <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e82e2-282">调用此方法之前，必须调用<xref:System.Net.HttpListener.Start%2A>方法并添加至少一个用于侦听的 URI 将字符串添加到的 URI 前缀<xref:System.Net.HttpListenerPrefixCollection>返回<xref:System.Net.HttpListener.Prefixes%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="e82e2-282">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one URI prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span> <span data-ttu-id="e82e2-283">前缀的详细说明，请参阅<xref:System.Net.HttpListener>类概述。</span><span class="sxs-lookup"><span data-stu-id="e82e2-283">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
 <span data-ttu-id="e82e2-284">等待传入的请求时此方法阻止。</span><span class="sxs-lookup"><span data-stu-id="e82e2-284">This method blocks while waiting for an incoming request.</span></span> <span data-ttu-id="e82e2-285">如果您要处理以异步方式 （在单独的线程），以便你的应用程序不会阻止传入请求，使用<xref:System.Net.HttpListener.BeginGetContext%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e82e2-285">If you want incoming requests to be processed asynchronously (on separate threads) so that your application does not block, use the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e82e2-286">下面的代码示例演示如何调用此方法。</span><span class="sxs-lookup"><span data-stu-id="e82e2-286">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="e82e2-287">A Win32 function call failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-287">A Win32 function call failed.</span>
          </span>
          <span data-ttu-id="e82e2-288">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-288">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e82e2-289">This object has not been started or is currently stopped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-289">This object has not been started or is currently stopped.</span>
          </span>
          <span data-ttu-id="e82e2-290">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-290">-or-</span>
          </span>
          <span data-ttu-id="e82e2-291">The <see cref="T:System.Net.HttpListener" /> does not have any Uniform Resource Identifier (URI) prefixes to respond to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-291">The <see cref="T:System.Net.HttpListener" /> does not have any Uniform Resource Identifier (URI) prefixes to respond to.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e82e2-292">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-292">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="e82e2-293">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="e82e2-293">This member outputs trace information when you enable network tracing in your application.</span>
            </span>
            <span data-ttu-id="e82e2-294">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="e82e2-294">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetContextAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt; GetContextAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.HttpListenerContext&gt; GetContextAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.GetContextAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContextAsync () As Task(Of HttpListenerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::HttpListenerContext ^&gt; ^ GetContextAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e82e2-295">Waits for an incoming request as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-295">Waits for an incoming request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e82e2-296">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-296">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="e82e2-297">The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-297">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="e82e2-298">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-298">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e82e2-299">不会阻止此操作。</span><span class="sxs-lookup"><span data-stu-id="e82e2-299">This operation will not block.</span></span> <span data-ttu-id="e82e2-300">返回<xref:System.Threading.Tasks.Task%601>对象完成后将收到传入的请求。</span><span class="sxs-lookup"><span data-stu-id="e82e2-300">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the incoming request has been received.</span></span>  
  
 <span data-ttu-id="e82e2-301">调用此方法之前，必须调用<xref:System.Net.HttpListener.Start%2A>方法并添加至少一个用于侦听的 URI 将字符串添加到的 URI 前缀<xref:System.Net.HttpListenerPrefixCollection>返回<xref:System.Net.HttpListener.Prefixes%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="e82e2-301">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one URI prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span> <span data-ttu-id="e82e2-302">前缀的详细说明，请参阅<xref:System.Net.HttpListener>类概述。</span><span class="sxs-lookup"><span data-stu-id="e82e2-302">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListenerContext" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreWriteExceptions">
      <MemberSignature Language="C#" Value="public bool IgnoreWriteExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreWriteExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IgnoreWriteExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreWriteExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreWriteExceptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e82e2-303">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether your application receives exceptions that occur when an <see cref="T:System.Net.HttpListener" /> sends the response to the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-303">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether your application receives exceptions that occur when an <see cref="T:System.Net.HttpListener" /> sends the response to the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e82e2-304">如果此 <see cref="T:System.Net.HttpListener" /> 不返回向客户端发送响应时发生的异常，则返回 <see langword="true" />；否则返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-304">
              <see langword="true" /> if this <see cref="T:System.Net.HttpListener" /> should not return exceptions that occur when sending the response to the client; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e82e2-305">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-305">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e82e2-306">将此属性设置为`true`如果你的应用程序不需要响应成功发送到每个客户端。</span><span class="sxs-lookup"><span data-stu-id="e82e2-306">Set this property to `true` if your application does not require that a response is successfully sent to each client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e82e2-307">下面的代码示例演示如何设置此属性。</span><span class="sxs-lookup"><span data-stu-id="e82e2-307">The following code example demonstrates setting this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e82e2-308">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-308">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsListening">
      <MemberSignature Language="C#" Value="public bool IsListening { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsListening" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IsListening" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsListening As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsListening { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e82e2-309">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> has been started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-309">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> has been started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e82e2-310">如果已启动 <see cref="T:System.Net.HttpListener" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-310">
              <see langword="true" /> if the <see cref="T:System.Net.HttpListener" /> was started; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e82e2-311">若要启动<xref:System.Net.HttpListener>，调用<xref:System.Net.HttpListener.Start%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e82e2-311">To start an <xref:System.Net.HttpListener>, call the <xref:System.Net.HttpListener.Start%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e82e2-312">下面的代码示例演示如何使用此属性以确定实例的侦听状态。</span><span class="sxs-lookup"><span data-stu-id="e82e2-312">The following code example demonstrates using this property to determine the listening state of an instance.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupported">
      <MemberSignature Language="C#" Value="public static bool IsSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSupported" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IsSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSupported { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e82e2-313">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> can be used with the current operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-313">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> can be used with the current operating system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e82e2-314">如果支持 <see cref="T:System.Net.HttpListener" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-314">
              <see langword="true" /> if <see cref="T:System.Net.HttpListener" /> is supported; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e82e2-315">此类是仅在运行 Windows XP SP2 或 Windows Server 2003 操作系统的系统的计算机上可用。</span><span class="sxs-lookup"><span data-stu-id="e82e2-315">This class is available only on computers running the Windows XP SP2 or Windows Server 2003 operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e82e2-316">下面的代码示例演示如何将<xref:System.Net.HttpListener.IsSupported%2A>属性来检测是否<xref:System.Net.HttpListener>对象可以用于当前操作系统。</span><span class="sxs-lookup"><span data-stu-id="e82e2-316">The following code example demonstrates the use of the <xref:System.Net.HttpListener.IsSupported%2A> property to detect whether an <xref:System.Net.HttpListener> object can be used with the current operating system.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefixes">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerPrefixCollection Prefixes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerPrefixCollection Prefixes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.Prefixes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prefixes As HttpListenerPrefixCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerPrefixCollection ^ Prefixes { System::Net::HttpListenerPrefixCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerPrefixCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e82e2-317">Gets the Uniform Resource Identifier (URI) prefixes handled by this <see cref="T:System.Net.HttpListener" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-317">Gets the Uniform Resource Identifier (URI) prefixes handled by this <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e82e2-318">
            <see cref="T:System.Net.HttpListenerPrefixCollection" />，包含此 <see cref="T:System.Net.HttpListener" /> 对象在经配置后要处理的 URI 前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-318">An <see cref="T:System.Net.HttpListenerPrefixCollection" /> that contains the URI prefixes that this <see cref="T:System.Net.HttpListener" /> object is configured to handle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e82e2-319">前缀是采用规范格式。</span><span class="sxs-lookup"><span data-stu-id="e82e2-319">The prefixes are in canonical form.</span></span> <span data-ttu-id="e82e2-320">前缀的详细说明，请参阅<xref:System.Net.HttpListener>类概述。</span><span class="sxs-lookup"><span data-stu-id="e82e2-320">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e82e2-321">下面的代码示例演示如何使用<xref:System.Net.HttpListener.Prefixes%2A>属性来获取和打印处理的 URI 前缀。</span><span class="sxs-lookup"><span data-stu-id="e82e2-321">The following code example demonstrates using the <xref:System.Net.HttpListener.Prefixes%2A> property to obtain and print the URI prefixes that are handled.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e82e2-322">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-322">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e82e2-323">Gets or sets the realm, or resource partition, associated with this <see cref="T:System.Net.HttpListener" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-323">Gets or sets the realm, or resource partition, associated with this <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e82e2-324">
            <see cref="T:System.String" /> 值，包含与 <see cref="T:System.Net.HttpListener" /> 对象关联的领域名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-324">A <see cref="T:System.String" /> value that contains the name of the realm associated with the <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e82e2-325">服务器使用领域进行分区受保护的资源;每个分区可以有其自己的身份验证方案和/或授权数据库。</span><span class="sxs-lookup"><span data-stu-id="e82e2-325">Servers use realms to partition protected resources; each partition can have its own authentication scheme and/or authorization database.</span></span> <span data-ttu-id="e82e2-326">领域仅用于基本和摘要式身份验证。</span><span class="sxs-lookup"><span data-stu-id="e82e2-326">Realms are used only for basic and digest authentication.</span></span> <span data-ttu-id="e82e2-327">在客户端成功进行身份验证之后，该身份验证对给定领域内的所有资源都有效。</span><span class="sxs-lookup"><span data-stu-id="e82e2-327">After a client successfully authenticates, the authentication is valid for all resources in a given realm.</span></span> <span data-ttu-id="e82e2-328">有关领域的详细说明，请参阅在 RFC 2617 [ http://www.ietf.org ](http://www.ietf.org)。</span><span class="sxs-lookup"><span data-stu-id="e82e2-328">For a detailed description of realms, see RFC 2617 at [http://www.ietf.org](http://www.ietf.org).</span></span>  
  
 <span data-ttu-id="e82e2-329">实例<xref:System.Net.HttpListener>具有只有一个关联的领域。</span><span class="sxs-lookup"><span data-stu-id="e82e2-329">An instance of <xref:System.Net.HttpListener> has only one associated realm.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e82e2-330">下面的代码示例演示了如何设置<xref:System.Net.HttpListener.Realm%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="e82e2-330">The following code example demonstrates setting the <xref:System.Net.HttpListener.Realm%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e82e2-331">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-331">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e82e2-332">Allows this instance to receive incoming requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-332">Allows this instance to receive incoming requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e82e2-333">必须调用此方法，然后才能调用<xref:System.Net.HttpListener.GetContext%2A>或<xref:System.Net.HttpListener.BeginGetContext%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e82e2-333">This method must be called before you call the <xref:System.Net.HttpListener.GetContext%2A> or <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span>  
  
 <span data-ttu-id="e82e2-334">已启动之后<xref:System.Net.HttpListener>对象时，可以使用<xref:System.Net.HttpListener.Stop%2A>方法来停止它。</span><span class="sxs-lookup"><span data-stu-id="e82e2-334">After you have started an <xref:System.Net.HttpListener> object, you can use the <xref:System.Net.HttpListener.Stop%2A> method to stop it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e82e2-335">如果此侦听器实例使用 https，你必须安装并选择服务器证书。</span><span class="sxs-lookup"><span data-stu-id="e82e2-335">If this listener instance uses https, you must install and select a Server Certificate.</span></span> <span data-ttu-id="e82e2-336">否则为<xref:System.Net.HttpWebRequest>此查询<xref:System.Net.HttpListener>并意外关闭的连接将失败。</span><span class="sxs-lookup"><span data-stu-id="e82e2-336">Otherwise, an <xref:System.Net.HttpWebRequest> query of this <xref:System.Net.HttpListener> will fail with an unexpected close of the connection.</span></span> <span data-ttu-id="e82e2-337">可以通过使用 HttpCfg.exe 配置服务器证书和其他侦听器选项。</span><span class="sxs-lookup"><span data-stu-id="e82e2-337">You can configure Server Certificates and other listener options by using HttpCfg.exe.</span></span> <span data-ttu-id="e82e2-338">请参阅[ http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp ](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="e82e2-338">See [http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp) for more details.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e82e2-339">下面的代码示例演示如何使用<xref:System.Net.HttpListener.Start%2A>方法，以开始处理传入请求。</span><span class="sxs-lookup"><span data-stu-id="e82e2-339">The following code example demonstrates using the <xref:System.Net.HttpListener.Start%2A> method to begin processing incoming requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="e82e2-340">A Win32 function call failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-340">A Win32 function call failed.</span>
          </span>
          <span data-ttu-id="e82e2-341">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-341">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e82e2-342">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-342">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="e82e2-343">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="e82e2-343">This member outputs trace information when you enable network tracing in your application.</span>
            </span>
            <span data-ttu-id="e82e2-344">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="e82e2-344">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e82e2-345">Causes this instance to stop receiving incoming requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-345">Causes this instance to stop receiving incoming requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e82e2-346">如果此实例已停止，调用此方法无效。</span><span class="sxs-lookup"><span data-stu-id="e82e2-346">If this instance is already stopped, calling this method has no effect.</span></span>  
  
 <span data-ttu-id="e82e2-347">已停止后<xref:System.Net.HttpListener>对象时，可以使用<xref:System.Net.HttpListener.Start%2A>方法重新启动它。</span><span class="sxs-lookup"><span data-stu-id="e82e2-347">After you have stopped an <xref:System.Net.HttpListener> object, you can use the <xref:System.Net.HttpListener.Start%2A> method to restart it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e82e2-348">下面的代码示例演示如何使用<xref:System.Net.HttpListener.Stop%2A>方法来停止处理传入请求。</span><span class="sxs-lookup"><span data-stu-id="e82e2-348">The following code example demonstrates using the <xref:System.Net.HttpListener.Stop%2A> method to stop processing incoming requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e82e2-349">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-349">This object has been closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="e82e2-350">当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="e82e2-350">This member outputs trace information when you enable network tracing in your application.</span>
            </span>
            <span data-ttu-id="e82e2-351">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="e82e2-351">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e82e2-352">Releases the resources held by this <see cref="T:System.Net.HttpListener" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-352">Releases the resources held by this <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e82e2-353">应用程序应使用<xref:System.Net.HttpListener.Close%2A>而不是调用此方法的方法。</span><span class="sxs-lookup"><span data-stu-id="e82e2-353">Applications should use the <xref:System.Net.HttpListener.Close%2A> method instead of calling this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutManager">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerTimeoutManager TimeoutManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerTimeoutManager TimeoutManager" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.TimeoutManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeoutManager As HttpListenerTimeoutManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerTimeoutManager ^ TimeoutManager { System::Net::HttpListenerTimeoutManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerTimeoutManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e82e2-354">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-354">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e82e2-355">返回 <see cref="T:System.Net.HttpListenerTimeoutManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-355">Returns <see cref="T:System.Net.HttpListenerTimeoutManager" />.</span>
          </span>
          <span data-ttu-id="e82e2-356">此 <see cref="T:System.Net.HttpListener" /> 实例的超时管理器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-356">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e82e2-357">超时管理器定义的连接超时限制此<xref:System.Net.HttpListener>实例。</span><span class="sxs-lookup"><span data-stu-id="e82e2-357">The timeout manager defines the connection timeout limits for this <xref:System.Net.HttpListener> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeConnectionNtlmAuthentication">
      <MemberSignature Language="C#" Value="public bool UnsafeConnectionNtlmAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnsafeConnectionNtlmAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property UnsafeConnectionNtlmAuthentication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnsafeConnectionNtlmAuthentication { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Support for NTLM needs some loving.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e82e2-358">Gets or sets a <see cref="T:System.Boolean" /> value that controls whether, when NTLM is used, additional requests using the same Transmission Control Protocol (TCP) connection are required to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-358">Gets or sets a <see cref="T:System.Boolean" /> value that controls whether, when NTLM is used, additional requests using the same Transmission Control Protocol (TCP) connection are required to authenticate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e82e2-359">如果第一个请求的 <see cref="T:System.Security.Principal.IIdentity" /> 将用于同一连接上的后续请求，则返回 <see langword="true" />；否则返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-359">
              <see langword="true" /> if the <see cref="T:System.Security.Principal.IIdentity" /> of the first request will be used for subsequent requests on the same connection; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e82e2-360">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-360">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e82e2-361">当此属性设置为`true`和通过特定的 TCP 连接的第一个请求进行身份验证使用 NTLM，处理通过相同的 TCP 连接的后续请求使用的身份验证信息 (<xref:System.Security.Principal.IIdentity>) 的初始请求。</span><span class="sxs-lookup"><span data-stu-id="e82e2-361">When this property is set to `true` and the first request over a particular TCP connection is authenticated using NTLM, subsequent requests over the same TCP connection are processed using the authentication information (<xref:System.Security.Principal.IIdentity>) of the initial request.</span></span>  
  
 <span data-ttu-id="e82e2-362">此属性在 NTLM 不是身份验证协议时无效。</span><span class="sxs-lookup"><span data-stu-id="e82e2-362">This property has no effect when NTLM is not the authentication protocol.</span></span> <span data-ttu-id="e82e2-363">当 Negotiate 指定为身份验证协议时，此属性仅当 NTLM 是用于身份验证的实际协议时，才有意义。</span><span class="sxs-lookup"><span data-stu-id="e82e2-363">When Negotiate is specified as the authentication protocol, this property has an effect only if NTLM is the actual protocol used for authentication.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e82e2-364">此属性设置为时`true`提高性能，因为<xref:System.Net.HttpListener>不发送其他 NTLM 身份验证质询，则不需要提供身份验证信息的所有请求中有安全风险。</span><span class="sxs-lookup"><span data-stu-id="e82e2-364">While setting this property to `true` increases performance because the <xref:System.Net.HttpListener> does not send additional NTLM authentication challenges, there is a security risk in not requiring all requests to provide authentication information.</span></span> <span data-ttu-id="e82e2-365">必须确定为提高性能冒此风险是否值得。</span><span class="sxs-lookup"><span data-stu-id="e82e2-365">You must determine whether the increase in performance is worth this risk.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e82e2-366">下面的代码示例演示如何设置此属性。</span><span class="sxs-lookup"><span data-stu-id="e82e2-366">The following code example demonstrates setting this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e82e2-367">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e82e2-367">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>