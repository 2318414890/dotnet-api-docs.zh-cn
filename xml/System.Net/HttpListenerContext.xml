<Type Name="HttpListenerContext" FullName="System.Net.HttpListenerContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="75baa8585fe5c183f0da7f85cc7e329bfdbd6bbe" /><Meta Name="ms.sourcegitcommit" Value="b0551d7828f015124aca601dbb64bd913cc5067d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/13/2018" /><Meta Name="ms.locfileid" Value="53331989" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpListenerContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListenerContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerContext sealed" />
  <TypeSignature Language="F#" Value="type HttpListenerContext = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b97f0-101">提供对 <see cref="T:System.Net.HttpListener" /> 类使用的请求和响应对象的访问。</span><span class="sxs-lookup"><span data-stu-id="b97f0-101">Provides access to the request and response objects used by the <see cref="T:System.Net.HttpListener" /> class.</span></span> <span data-ttu-id="b97f0-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="b97f0-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97f0-103">此类提供与客户端的超文本传输协议 (HTTP) 请求正在处理相关的信息<xref:System.Net.HttpListener>对象。</span><span class="sxs-lookup"><span data-stu-id="b97f0-103">This class provides the information related to a client's Hypertext Transfer Protocol (HTTP) request being processed by an <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="b97f0-104">此类还具有方法，允许<xref:System.Net.HttpListener>对象要接受 WebSocket 连接。</span><span class="sxs-lookup"><span data-stu-id="b97f0-104">This class also has methods that allow an <xref:System.Net.HttpListener> object to accept a WebSocket connection.</span></span>  
  
 <span data-ttu-id="b97f0-105"><xref:System.Net.HttpListener.GetContext%2A>方法返回的实例<xref:System.Net.HttpListenerContext>类。</span><span class="sxs-lookup"><span data-stu-id="b97f0-105">The <xref:System.Net.HttpListener.GetContext%2A> method returns instances of the <xref:System.Net.HttpListenerContext> class.</span></span> <span data-ttu-id="b97f0-106">若要获取该对象表示客户端请求，请使用<xref:System.Net.HttpListenerContext.Request%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b97f0-106">To get the object that represents the client request, use the <xref:System.Net.HttpListenerContext.Request%2A> property.</span></span> <span data-ttu-id="b97f0-107">若要获取该对象表示将发送到客户端的响应<xref:System.Net.HttpListener>，使用<xref:System.Net.HttpListenerContext.Response%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b97f0-107">To get the object that represents the response that will be sent to the client by the <xref:System.Net.HttpListener>, use the <xref:System.Net.HttpListenerContext.Response%2A> property.</span></span> <span data-ttu-id="b97f0-108">若要获取有关客户端发送请求，例如它的登录名和是否经过验证，用户信息可以查询中的属性<xref:System.Security.Principal.IPrincipal>返回对象<xref:System.Net.HttpListenerContext.User%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b97f0-108">To get user information about the client sending the request, such as its login name and whether it has been authenticated, you can query the properties in the <xref:System.Security.Principal.IPrincipal> object returned by the <xref:System.Net.HttpListenerContext.User%2A> property.</span></span>  
  
 <span data-ttu-id="b97f0-109">关闭<xref:System.Net.HttpListenerContext>对象发送到客户端的响应，并释放使用的任何资源<xref:System.Net.HttpListenerContext>。</span><span class="sxs-lookup"><span data-stu-id="b97f0-109">Closing an <xref:System.Net.HttpListenerContext> object sends the response to the client and frees any resources used by the <xref:System.Net.HttpListenerContext>.</span></span> <span data-ttu-id="b97f0-110">正在中止<xref:System.Net.HttpListenerContext>对象会放弃对客户端的响应，如果它不已发送，并释放使用的任何资源<xref:System.Net.HttpListenerContext>。</span><span class="sxs-lookup"><span data-stu-id="b97f0-110">Aborting an <xref:System.Net.HttpListenerContext> object discards the response to the client if it has not already been sent, and frees any resources used by the <xref:System.Net.HttpListenerContext>.</span></span> <span data-ttu-id="b97f0-111">关闭或中止后<xref:System.Net.HttpListenerContext>对象，其方法或属性不能引用。</span><span class="sxs-lookup"><span data-stu-id="b97f0-111">After closing or aborting an <xref:System.Net.HttpListenerContext> object, you cannot reference its methods or properties.</span></span> <span data-ttu-id="b97f0-112">如果这样做，您将收到<xref:System.ObjectDisposedException>异常。</span><span class="sxs-lookup"><span data-stu-id="b97f0-112">If you do so, you will receive an <xref:System.ObjectDisposedException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b97f0-113">下面的代码示例显示客户端请求的用户信息。</span><span class="sxs-lookup"><span data-stu-id="b97f0-113">The following code example displays the user information for a client request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="T:System.Net.HttpListenerRequest" />
    <altmember cref="T:System.Net.HttpListenerResponse" />
  </Docs>
  <Members>
    <MemberGroup MemberName="AcceptWebSocketAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b97f0-114">接受 WebSocket 连接以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="b97f0-114">Accept a WebSocket connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AcceptWebSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync(string subProtocol) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptWebSocketAsync (subProtocol As String) As Task(Of HttpListenerWebSocketContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::WebSockets::HttpListenerWebSocketContext ^&gt; ^ AcceptWebSocketAsync(System::String ^ subProtocol);" />
      <MemberSignature Language="F#" Value="member this.AcceptWebSocketAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;" Usage="httpListenerContext.AcceptWebSocketAsync subProtocol" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subProtocol" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subProtocol"><span data-ttu-id="b97f0-115">支持的 WebSocket 子协议。</span><span class="sxs-lookup"><span data-stu-id="b97f0-115">The supported WebSocket sub-protocol.</span></span></param>
        <summary><span data-ttu-id="b97f0-116">接受 WebSocket 连接以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="b97f0-116">Accept a WebSocket connection as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="b97f0-117">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="b97f0-117">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="b97f0-118">任务对象上的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性返回了 <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b97f0-118">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97f0-119">不会阻止此操作。</span><span class="sxs-lookup"><span data-stu-id="b97f0-119">This operation will not block.</span></span> <span data-ttu-id="b97f0-120">返回<xref:System.Threading.Tasks.Task%601>对象将完成后已被接受 WebSocket 连接。</span><span class="sxs-lookup"><span data-stu-id="b97f0-120">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.</span></span>  
  
 <span data-ttu-id="b97f0-121">接收缓冲区的大小为 16,385 字节。</span><span class="sxs-lookup"><span data-stu-id="b97f0-121">The size of the receive buffer is 16,385 bytes.</span></span> <span data-ttu-id="b97f0-122">WebSocket 保持活动状态的间隔设置为 30000 （30 秒） 的默认值。</span><span class="sxs-lookup"><span data-stu-id="b97f0-122">The WebSocket keep-alive interval is set to the default value of 30,000 (30 seconds).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b97f0-123"><paramref name="subProtocol" /> 是空字符串</span><span class="sxs-lookup"><span data-stu-id="b97f0-123"><paramref name="subProtocol" /> is an empty string</span></span> 
<span data-ttu-id="b97f0-124">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b97f0-124">-or-</span></span> 
 <span data-ttu-id="b97f0-125"><paramref name="subProtocol" /> 包含非法字符。</span><span class="sxs-lookup"><span data-stu-id="b97f0-125"><paramref name="subProtocol" /> contains illegal characters.</span></span></exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException"><span data-ttu-id="b97f0-126">发送响应以完成 WebSocket 握手时出错。</span><span class="sxs-lookup"><span data-stu-id="b97f0-126">An error occurred when sending the response to complete the WebSocket handshake.</span></span></exception>
        <altmember cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol, TimeSpan keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync(string subProtocol, valuetype System.TimeSpan keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptWebSocketAsync (subProtocol As String, keepAliveInterval As TimeSpan) As Task(Of HttpListenerWebSocketContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::WebSockets::HttpListenerWebSocketContext ^&gt; ^ AcceptWebSocketAsync(System::String ^ subProtocol, TimeSpan keepAliveInterval);" />
      <MemberSignature Language="F#" Value="member this.AcceptWebSocketAsync : string * TimeSpan -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;" Usage="httpListenerContext.AcceptWebSocketAsync (subProtocol, keepAliveInterval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subProtocol" Type="System.String" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="subProtocol"><span data-ttu-id="b97f0-127">支持的 WebSocket 子协议。</span><span class="sxs-lookup"><span data-stu-id="b97f0-127">The supported WebSocket sub-protocol.</span></span></param>
        <param name="keepAliveInterval"><span data-ttu-id="b97f0-128">WebSocket 协议保持活动状态的间隔（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="b97f0-128">The WebSocket protocol keep-alive interval in milliseconds.</span></span></param>
        <summary><span data-ttu-id="b97f0-129">接受指定支持的 WebSocket 子协议和 WebSocket 保持活动状态的间隔的 WebSocket 连接以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="b97f0-129">Accept a WebSocket connection specifying the supported WebSocket sub-protocol  and WebSocket keep-alive interval as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="b97f0-130">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="b97f0-130">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="b97f0-131">任务对象上的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性返回了 <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b97f0-131">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97f0-132">不会阻止此操作。</span><span class="sxs-lookup"><span data-stu-id="b97f0-132">This operation will not block.</span></span> <span data-ttu-id="b97f0-133">返回<xref:System.Threading.Tasks.Task%601>对象将完成后已被接受 WebSocket 连接。</span><span class="sxs-lookup"><span data-stu-id="b97f0-133">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.</span></span>  
  
 <span data-ttu-id="b97f0-134">接收缓冲区的大小为 16,385 字节。</span><span class="sxs-lookup"><span data-stu-id="b97f0-134">The size of the receive buffer is 16,385 bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b97f0-135"><paramref name="subProtocol" /> 是空字符串</span><span class="sxs-lookup"><span data-stu-id="b97f0-135"><paramref name="subProtocol" /> is an empty string</span></span> 
<span data-ttu-id="b97f0-136">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b97f0-136">-or-</span></span> 
 <span data-ttu-id="b97f0-137"><paramref name="subProtocol" /> 包含非法字符。</span><span class="sxs-lookup"><span data-stu-id="b97f0-137"><paramref name="subProtocol" /> contains illegal characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b97f0-138"><paramref name="keepAliveInterval" /> 太小。</span><span class="sxs-lookup"><span data-stu-id="b97f0-138"><paramref name="keepAliveInterval" /> is too small.</span></span></exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException"><span data-ttu-id="b97f0-139">发送响应以完成 WebSocket 握手时出错。</span><span class="sxs-lookup"><span data-stu-id="b97f0-139">An error occurred when sending the response to complete the WebSocket handshake.</span></span></exception>
        <altmember cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync(string subProtocol, int32 receiveBufferSize, valuetype System.TimeSpan keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptWebSocketAsync (subProtocol As String, receiveBufferSize As Integer, keepAliveInterval As TimeSpan) As Task(Of HttpListenerWebSocketContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::WebSockets::HttpListenerWebSocketContext ^&gt; ^ AcceptWebSocketAsync(System::String ^ subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval);" />
      <MemberSignature Language="F#" Value="member this.AcceptWebSocketAsync : string * int * TimeSpan -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;" Usage="httpListenerContext.AcceptWebSocketAsync (subProtocol, receiveBufferSize, keepAliveInterval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subProtocol" Type="System.String" />
        <Parameter Name="receiveBufferSize" Type="System.Int32" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="subProtocol"><span data-ttu-id="b97f0-140">支持的 WebSocket 子协议。</span><span class="sxs-lookup"><span data-stu-id="b97f0-140">The supported WebSocket sub-protocol.</span></span></param>
        <param name="receiveBufferSize"><span data-ttu-id="b97f0-141">接收缓冲区大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="b97f0-141">The receive buffer size in bytes.</span></span></param>
        <param name="keepAliveInterval"><span data-ttu-id="b97f0-142">WebSocket 协议保持活动状态的间隔（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="b97f0-142">The WebSocket protocol keep-alive interval in milliseconds.</span></span></param>
        <summary><span data-ttu-id="b97f0-143">接受指定支持的 WebSocket 子协议的 WebSocket 连接、接受缓冲区大小和 WebSocket 保持活动状态的间隔以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="b97f0-143">Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, and WebSocket keep-alive interval as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="b97f0-144">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="b97f0-144">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="b97f0-145">任务对象上的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性返回了 <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b97f0-145">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97f0-146">不会阻止此操作。</span><span class="sxs-lookup"><span data-stu-id="b97f0-146">This operation will not block.</span></span> <span data-ttu-id="b97f0-147">返回<xref:System.Threading.Tasks.Task%601>> 已接受 WebSocket 连接后，将完成对象。</span><span class="sxs-lookup"><span data-stu-id="b97f0-147">The returned <xref:System.Threading.Tasks.Task%601> > object will complete after the WebSocket connection has been accepted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b97f0-148"><paramref name="subProtocol" /> 是空字符串</span><span class="sxs-lookup"><span data-stu-id="b97f0-148"><paramref name="subProtocol" /> is an empty string</span></span> 
<span data-ttu-id="b97f0-149">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b97f0-149">-or-</span></span> 
 <span data-ttu-id="b97f0-150"><paramref name="subProtocol" /> 包含非法字符。</span><span class="sxs-lookup"><span data-stu-id="b97f0-150"><paramref name="subProtocol" /> contains illegal characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b97f0-151"><paramref name="keepAliveInterval" /> 太小。</span><span class="sxs-lookup"><span data-stu-id="b97f0-151"><paramref name="keepAliveInterval" /> is too small.</span></span>  
  
<span data-ttu-id="b97f0-152">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b97f0-152">-or-</span></span> 
 <span data-ttu-id="b97f0-153"><paramref name="receiveBufferSize" /> 小于 16 字节</span><span class="sxs-lookup"><span data-stu-id="b97f0-153"><paramref name="receiveBufferSize" /> is less than 16 bytes</span></span> 
<span data-ttu-id="b97f0-154">或</span><span class="sxs-lookup"><span data-stu-id="b97f0-154">-or-</span></span> 
 <span data-ttu-id="b97f0-155"><paramref name="receiveBufferSize" /> 大于 64K 字节。</span><span class="sxs-lookup"><span data-stu-id="b97f0-155"><paramref name="receiveBufferSize" /> is greater than 64K bytes.</span></span></exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException"><span data-ttu-id="b97f0-156">发送响应以完成 WebSocket 握手时出错。</span><span class="sxs-lookup"><span data-stu-id="b97f0-156">An error occurred when sending the response to complete the WebSocket handshake.</span></span></exception>
        <altmember cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval, ArraySegment&lt;byte&gt; internalBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync(string subProtocol, int32 receiveBufferSize, valuetype System.TimeSpan keepAliveInterval, valuetype System.ArraySegment`1&lt;unsigned int8&gt; internalBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptWebSocketAsync (subProtocol As String, receiveBufferSize As Integer, keepAliveInterval As TimeSpan, internalBuffer As ArraySegment(Of Byte)) As Task(Of HttpListenerWebSocketContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::WebSockets::HttpListenerWebSocketContext ^&gt; ^ AcceptWebSocketAsync(System::String ^ subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval, ArraySegment&lt;System::Byte&gt; internalBuffer);" />
      <MemberSignature Language="F#" Value="member this.AcceptWebSocketAsync : string * int * TimeSpan * ArraySegment&lt;byte&gt; -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;" Usage="httpListenerContext.AcceptWebSocketAsync (subProtocol, receiveBufferSize, keepAliveInterval, internalBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subProtocol" Type="System.String" />
        <Parameter Name="receiveBufferSize" Type="System.Int32" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" />
        <Parameter Name="internalBuffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="subProtocol"><span data-ttu-id="b97f0-157">支持的 WebSocket 子协议。</span><span class="sxs-lookup"><span data-stu-id="b97f0-157">The supported WebSocket sub-protocol.</span></span></param>
        <param name="receiveBufferSize"><span data-ttu-id="b97f0-158">接收缓冲区大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="b97f0-158">The receive buffer size in bytes.</span></span></param>
        <param name="keepAliveInterval"><span data-ttu-id="b97f0-159">WebSocket 协议保持活动状态的间隔（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="b97f0-159">The WebSocket protocol keep-alive interval in milliseconds.</span></span></param>
        <param name="internalBuffer"><span data-ttu-id="b97f0-160">用于此操作的一个内部缓冲区。</span><span class="sxs-lookup"><span data-stu-id="b97f0-160">An internal buffer to use for this operation.</span></span></param>
        <summary><span data-ttu-id="b97f0-161">接受指定支持的 WebSocket 子协议的 WebSocket 连接、接受缓冲区大小和 WebSocket 保持活动状态的间隔和内部缓冲区以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="b97f0-161">Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, WebSocket keep-alive interval, and the internal buffer as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="b97f0-162">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="b97f0-162">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="b97f0-163">任务对象上的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性返回了 <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b97f0-163">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97f0-164">不会阻止此操作。</span><span class="sxs-lookup"><span data-stu-id="b97f0-164">This operation will not block.</span></span> <span data-ttu-id="b97f0-165">返回<xref:System.Threading.Tasks.Task%601>对象将完成后已被接受 WebSocket 连接。</span><span class="sxs-lookup"><span data-stu-id="b97f0-165">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b97f0-166"><paramref name="subProtocol" /> 是空字符串</span><span class="sxs-lookup"><span data-stu-id="b97f0-166"><paramref name="subProtocol" /> is an empty string</span></span> 
<span data-ttu-id="b97f0-167">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b97f0-167">-or-</span></span> 
 <span data-ttu-id="b97f0-168"><paramref name="subProtocol" /> 包含非法字符。</span><span class="sxs-lookup"><span data-stu-id="b97f0-168"><paramref name="subProtocol" /> contains illegal characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b97f0-169"><paramref name="keepAliveInterval" /> 太小。</span><span class="sxs-lookup"><span data-stu-id="b97f0-169"><paramref name="keepAliveInterval" /> is too small.</span></span>  
  
<span data-ttu-id="b97f0-170">或</span><span class="sxs-lookup"><span data-stu-id="b97f0-170">-or-</span></span> 
 <span data-ttu-id="b97f0-171"><paramref name="receiveBufferSize" /> 小于 16 字节</span><span class="sxs-lookup"><span data-stu-id="b97f0-171"><paramref name="receiveBufferSize" /> is less than 16 bytes</span></span> 
<span data-ttu-id="b97f0-172">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b97f0-172">-or-</span></span> 
 <span data-ttu-id="b97f0-173"><paramref name="receiveBufferSize" /> 大于 64K 字节。</span><span class="sxs-lookup"><span data-stu-id="b97f0-173"><paramref name="receiveBufferSize" /> is greater than 64K bytes.</span></span></exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException"><span data-ttu-id="b97f0-174">发送响应以完成 WebSocket 握手时出错。</span><span class="sxs-lookup"><span data-stu-id="b97f0-174">An error occurred when sending the response to complete the WebSocket handshake.</span></span></exception>
        <altmember cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerRequest Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerRequest Request" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerContext.Request" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Request As HttpListenerRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerRequest ^ Request { System::Net::HttpListenerRequest ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Request : System.Net.HttpListenerRequest" Usage="System.Net.HttpListenerContext.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b97f0-175">获取表示客户端对资源的请求的 <see cref="T:System.Net.HttpListenerRequest" />。</span><span class="sxs-lookup"><span data-stu-id="b97f0-175">Gets the <see cref="T:System.Net.HttpListenerRequest" /> that represents a client's request for a resource.</span></span></summary>
        <value><span data-ttu-id="b97f0-176">表示客户端请求的 <see cref="T:System.Net.HttpListenerRequest" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b97f0-176">An <see cref="T:System.Net.HttpListenerRequest" /> object that represents the client request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97f0-177">如果关闭此<xref:System.Net.HttpListenerContext>，它将响应发送到客户端，关闭<xref:System.Net.HttpListenerResponse>，其中包含响应，然后关闭<xref:System.Net.HttpListenerRequest>此属性返回的对象。</span><span class="sxs-lookup"><span data-stu-id="b97f0-177">If you close this <xref:System.Net.HttpListenerContext>, it will send the response to the client, close the <xref:System.Net.HttpListenerResponse> that contains the response, and close the <xref:System.Net.HttpListenerRequest> object returned by this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b97f0-178">下面的代码示例演示如何调用此方法。</span><span class="sxs-lookup"><span data-stu-id="b97f0-178">The following code example demonstrates calling this method.</span></span> <span data-ttu-id="b97f0-179">`listener`变量保存<xref:System.Net.HttpListener>对象。</span><span class="sxs-lookup"><span data-stu-id="b97f0-179">The `listener` variable holds an <xref:System.Net.HttpListener> object.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerResponse Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerResponse Response" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerContext.Response" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Response As HttpListenerResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerResponse ^ Response { System::Net::HttpListenerResponse ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Response : System.Net.HttpListenerResponse" Usage="System.Net.HttpListenerContext.Response" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerResponse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b97f0-180">获取 <see cref="T:System.Net.HttpListenerResponse" /> 对象，该对象将被发送到客户端以响应客户端的请求。</span><span class="sxs-lookup"><span data-stu-id="b97f0-180">Gets the <see cref="T:System.Net.HttpListenerResponse" /> object that will be sent to the client in response to the client's request.</span></span></summary>
        <value><span data-ttu-id="b97f0-181">用于将响应发送回客户端的 <see cref="T:System.Net.HttpListenerResponse" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b97f0-181">An <see cref="T:System.Net.HttpListenerResponse" /> object used to send a response back to the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97f0-182">你的应用程序配置中设置属性的响应<xref:System.Net.HttpListenerResponse>此属性返回的对象。</span><span class="sxs-lookup"><span data-stu-id="b97f0-182">Your application configures the response by setting properties in the <xref:System.Net.HttpListenerResponse> object returned by this property.</span></span> <span data-ttu-id="b97f0-183">配置响应之后, 您将其发送到客户端通过关闭响应，或关闭此<xref:System.Net.HttpListenerContext>对象。</span><span class="sxs-lookup"><span data-stu-id="b97f0-183">After configuring the response, you send it to the client by closing the response, or by closing this <xref:System.Net.HttpListenerContext> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b97f0-184">下面的代码示例演示如何获取对客户端的请求的响应和添加响应正文。</span><span class="sxs-lookup"><span data-stu-id="b97f0-184">The following code example demonstrates getting the response to a client's request and adding the response body.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="b97f0-185">注意:当你在应用程序中启用网络跟踪后，此成员将输出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="b97f0-185">Note: This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b97f0-186">有关详细信息，请参阅[在.NET Framework 中进行网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="b97f0-186">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerContext.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Principal.IPrincipal" Usage="System.Net.HttpListenerContext.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b97f0-187">获取用于为客户端获取标识、身份验证信息和安全角色的对象，该客户端的请求由此 <see cref="T:System.Net.HttpListenerContext" /> 对象表示。</span><span class="sxs-lookup"><span data-stu-id="b97f0-187">Gets an object used to obtain identity, authentication information, and security roles for the client whose request is represented by this <see cref="T:System.Net.HttpListenerContext" /> object.</span></span></summary>
        <value><span data-ttu-id="b97f0-188">描述客户端的 <see cref="T:System.Security.Principal.IPrincipal" /> 对象，或者，如果提供此 <see cref="T:System.Net.HttpListener" /> 的 <see cref="T:System.Net.HttpListenerContext" /> 不需要身份验证，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b97f0-188">An <see cref="T:System.Security.Principal.IPrincipal" /> object that describes the client, or <see langword="null" /> if the <see cref="T:System.Net.HttpListener" /> that supplied this <see cref="T:System.Net.HttpListenerContext" /> does not require authentication.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97f0-189"><xref:System.Net.HttpListener>指示它需要使用身份验证<xref:System.Net.HttpListener.AuthenticationSchemes%2A>属性或通过指定<xref:System.Net.AuthenticationSchemeSelector>委托使用<xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b97f0-189">An <xref:System.Net.HttpListener> indicates that it requires authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property or by specifying an <xref:System.Net.AuthenticationSchemeSelector> delegate using the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.</span></span>  
  
 <span data-ttu-id="b97f0-190">若要确定客户端的登录名和身份验证信息，请检查<xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=nameWithType>中此属性返回的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="b97f0-190">To determine the client's login name and authentication information, check the <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=nameWithType> property in the object returned by this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b97f0-191">下面的代码示例演示了有关客户端，并将其返回到响应中的客户端访问的标识和身份验证信息。</span><span class="sxs-lookup"><span data-stu-id="b97f0-191">The following code example demonstrates accessing identity and authentication information about the client, and returning it to the client in the response.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b97f0-192">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /><see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="b97f0-192">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /><see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>