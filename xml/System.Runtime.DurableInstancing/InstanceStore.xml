<Type Name="InstanceStore" FullName="System.Runtime.DurableInstancing.InstanceStore">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8972e8c961043629bb8c0c72a45e02d752733a77" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39993458" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class InstanceStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InstanceStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.DurableInstancing.InstanceStore" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InstanceStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstanceStore abstract" />
  <TypeSignature Language="F#" Value="type InstanceStore = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="32895-101">表示一个实例存储区。</span>
      <span class="sxs-lookup">
        <span data-stu-id="32895-101">Represents an instance store.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32895-102">永久性提供程序可通过 <xref:System.Runtime.DurableInstancing.InstanceStore> 类的具体实现来提供对实例存储区的访问。</span><span class="sxs-lookup"><span data-stu-id="32895-102">A persistence provider provides access to an instance store through a concrete implementation of the <xref:System.Runtime.DurableInstancing.InstanceStore> class.</span></span>  
  
 <span data-ttu-id="32895-103">即使此命令已完成执行，永久性提供程序也可以在已传递给 TryCommand 的句柄上调用 InstanceHandle.Free。</span><span class="sxs-lookup"><span data-stu-id="32895-103">Persistence providers may call InstanceHandle.Free on handles passed to TryCommand, even after the command has finished executing.</span></span> <span data-ttu-id="32895-104">但是，永久性提供程序不得保留对 InstanceHandle or InstanceOwner 对象的强引用，因为这会阻止 InstanceStore 进行垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="32895-104">But persistence providers must not hold strong references to InstanceHandle or InstanceOwner objects, as this can prevent InstanceStore from being garbage collected.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="32895-105">不能更改持久性工作流的工作流定义。</span><span class="sxs-lookup"><span data-stu-id="32895-105">Workflow definitions for persisted workflows cannot be changed.</span></span> <span data-ttu-id="32895-106">如果工作流定义后会永久保存更改，工作流运行时将重新加载工作流时崩溃。</span><span class="sxs-lookup"><span data-stu-id="32895-106">If a workflow definition is changed after it is persisted, the workflow runtime will crash when the workflow is reloaded.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InstanceStore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InstanceStore();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="32895-107">初始化 <see cref="T:System.Runtime.DurableInstancing.InstanceStore" /> 类的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-107">Initializes an instance of the <see cref="T:System.Runtime.DurableInstancing.InstanceStore" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute(class System.Runtime.DurableInstancing.InstanceHandle handle, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginExecute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute (handle As InstanceHandle, command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecute(System::Runtime::DurableInstancing::InstanceHandle ^ handle, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : System.Runtime.DurableInstancing.InstanceHandle * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instanceStore.BeginExecute (handle, command, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="32895-108">一个实例句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-108">An instance handle.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="32895-109">要执行的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-109">The command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="32895-110">命令执行的超时值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-110">The timeout value for the command execution.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="32895-111">可接收异步操作完成通知的异步回调接收委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-111">The asynchronous callback delegate that receives notification of the completion of the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="32895-112">状态信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-112">The state information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32895-113">异步执行永久性命令，如 <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> 和 <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-113">Asynchronously executes persistence commands such as <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> and <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32895-114">异步操作的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-114">The state of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32895-115">主机调用 <xref:System.Runtime.DurableInstancing.InstanceStore.BeginExecute%2A> 方法来对实例句柄异步执行永久性命令。</span><span class="sxs-lookup"><span data-stu-id="32895-115">A host calls the <xref:System.Runtime.DurableInstancing.InstanceStore.BeginExecute%2A> method to execute a persistence command against an instance handle asynchronously.</span></span> <span data-ttu-id="32895-116">主机可通过调用 <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> 方法获取实例句柄。</span><span class="sxs-lookup"><span data-stu-id="32895-116">The host obtains the instance handle by invoking the <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> method.</span></span> <span data-ttu-id="32895-117">此实例句柄可以绑定到表示命令的上下文和主题的实体，如实例、实例所有者或实例锁定。</span><span class="sxs-lookup"><span data-stu-id="32895-117">The instance handle may be bound to entities that represent the context and subject of the command, such as an instance, instance owner, or instance lock.</span></span>  <span data-ttu-id="32895-118">对于一个实例句柄，一次只能发出一个命令。</span><span class="sxs-lookup"><span data-stu-id="32895-118">Only one command may be issued against an instance handle at a time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual IAsyncResult BeginTryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult BeginTryCommand(class System.Runtime.DurableInstancing.InstancePersistenceContext context, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function BeginTryCommand (context As InstancePersistenceContext, command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual IAsyncResult ^ BeginTryCommand(System::Runtime::DurableInstancing::InstancePersistenceContext ^ context, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instanceStore.BeginTryCommand (context, command, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.DurableInstancing.InstancePersistenceContext" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="32895-119">实例上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-119">The instance context.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="32895-120">要执行的永久性命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-120">The persistence command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="32895-121">命令执行的超时值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-121">The timeout value for the command execution.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="32895-122">可接收异步操作完成通知的异步回调接收委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-122">The asynchronous callback delegate that receives notification of the completion of the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="32895-123">状态信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-123">The state information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32895-124">永久性提供程序可实现此方法，这可确定是否可执行特定的永久性命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-124">A persistence provider implements this method, which determines whether a particular persistence command can be executed.</span>
          </span>
          <span data-ttu-id="32895-125">如果可以执行此命令，请异步执行此命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-125">If the command can be executed, executes the command asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32895-126">异步操作的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-126">The state of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32895-127">如果可执行此命令，永久性提供程序会对 InstancePersistenceContext 调用相关方法，以提供此命令的结果。</span><span class="sxs-lookup"><span data-stu-id="32895-127">If the command can be executed, the persistence provider calls relevant methods on the InstancePersistenceContext to provide the results of the command.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="32895-128">尽管此方法声明为`virtual`而非`abstract`，没有实现。</span><span class="sxs-lookup"><span data-stu-id="32895-128">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="32895-129">必须重写此方法，以便提供的功能。</span><span class="sxs-lookup"><span data-stu-id="32895-129">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWaitForEvents">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginWaitForEvents(class System.Runtime.DurableInstancing.InstanceHandle handle, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForEvents (handle As InstanceHandle, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWaitForEvents(System::Runtime::DurableInstancing::InstanceHandle ^ handle, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginWaitForEvents : System.Runtime.DurableInstancing.InstanceHandle * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instanceStore.BeginWaitForEvents (handle, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="32895-130">一个实例句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-130">An instance handle.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="32895-131">在操作超时之后的期间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-131">The period after which the operation times out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="32895-132">要在完成异步操作之后调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-132">The method to be called after the asynchronous operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="32895-133">一个包含与异步操作关联的状态信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-133">An object containing the state information associated with the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32895-134">开始一个异步操作，以侦听特定实例句柄的实例存储区引发的任何事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-134">Begins an asynchronous operation to listen for any events raised by the instance store for a specific instance handle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32895-135">返回一个 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-135">Returns an <see cref="T:System.IAsyncResult" /> object..</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceHandle">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="32895-136">创建实例句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-136">Creates an instance handle.</span>
          </span>
          <span data-ttu-id="32895-137">如果设置了 DefaultInstanceOwner，此值将作为新句柄的实例所有者自动被绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-137">If the DefaultInstanceOwner is set, the value is automatically bound as the new handle’s instance owner.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle () As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle();" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : unit -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="32895-138">创建实例句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-138">Creates an instance handle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32895-139">实例句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-139">The instance handle.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (instanceId As Guid) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : Guid -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="32895-140">一个实例标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-140">An instance identifier.</span>
          </span>
          <span data-ttu-id="32895-141">不得是 Guid.Empty。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-141">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32895-142">创建实例句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-142">Creates an instance handle.</span>
          </span>
          <span data-ttu-id="32895-143">如果设置了 DefaultInstanceOwner，此值将作为新句柄的实例所有者自动被绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-143">If the DefaultInstanceOwner is set, the value is automatically bound as the new handle’s instance owner.</span>
          </span>
          <span data-ttu-id="32895-144">已作为一个参数传递的实例标识符会作为新句柄的实例自动被绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-144">The instance identifier passed as a parameter is automatically bound as the new handle’s instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32895-145">实例句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-145">The instance handle.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (owner As InstanceOwner) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : System.Runtime.DurableInstancing.InstanceOwner -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="32895-146">一个实例的所有者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-146">The owner of an instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32895-147">创建实例句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-147">Creates an instance handle.</span>
          </span>
          <span data-ttu-id="32895-148">如果作为参数传递的实例所有者不为 null，则此值会作为新的句柄实例所有者自动被绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-148">If the instance owner passed as a parameter is not null, the value is automatically bound as the new handle’s instance owner.</span>
          </span>
          <span data-ttu-id="32895-149">（否则，即使设置了 DefaultInstanceOwner，也不会绑定任何实例所有者。）</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-149">(Otherwise, no instance owner is bound, even if DefaultInstanceOwner is set.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32895-150">实例句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-150">The instance handle.</span>
          </span>
          <span data-ttu-id="32895-151">null 值指示新的句柄不应该自动绑定到实例所有者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-151">A null value indicates that the new handle should not be automatically bound to an instance owner.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(class System.Runtime.DurableInstancing.InstanceOwner owner, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (owner As InstanceOwner, instanceId As Guid) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(System::Runtime::DurableInstancing::InstanceOwner ^ owner, Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : System.Runtime.DurableInstancing.InstanceOwner * Guid -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle (owner, instanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="32895-152">一个 InstanceOwner 对象，表示一个实例的所有者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-152">An InstanceOwner object  that represents the owner of an instance.</span>
          </span>
          <span data-ttu-id="32895-153">将 null 值作为此参数的值传递，指示新的句柄不应该自动绑定到实例所有者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-153">Pass null as the value for this parameter to indicate that the new handle should not be automatically bound to an instance owner.</span>
          </span>
        </param>
        <param name="instanceId">
          <span data-ttu-id="32895-154">一个实例标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-154">An instance identifier.</span>
          </span>
          <span data-ttu-id="32895-155">不得是 Guid.Empty。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-155">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32895-156">创建实例句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-156">Creates an instance handle.</span>
          </span>
          <span data-ttu-id="32895-157">如果作为参数传递的实例所有者不为 null，则此值会作为新的句柄实例所有者自动被绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-157">If the instance owner passed as a parameter is not null, the value is automatically bound as the new handle’s instance owner.</span>
          </span>
          <span data-ttu-id="32895-158">（否则，即使设置了 DefaultInstanceOwner，也不会绑定任何实例所有者。）已作为一个参数传递的实例标识符会作为新句柄的实例自动被绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-158">(Otherwise, no instance owner is bound, even if DefaultInstanceOwner is set.) The instance identifier passed as a parameter is automatically bound as the new handle’s instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32895-159">实例句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-159">The instance handle.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultInstanceOwner As InstanceOwner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceOwner ^ DefaultInstanceOwner { System::Runtime::DurableInstancing::InstanceOwner ^ get(); void set(System::Runtime::DurableInstancing::InstanceOwner ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceOwner with get, set" Usage="System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceOwner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="32895-160">获取或设置默认实例的所有者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-160">Gets or sets the default instance owner.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="32895-161">默认实例所有者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-161">The default instance owner.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32895-162">有些主机会通过读取此属性推理要使用的实例所有者。</span><span class="sxs-lookup"><span data-stu-id="32895-162">Some hosts infer the instance owner to use by reading this property.</span></span> <span data-ttu-id="32895-163">WorkflowApplication 可以使用此属性。</span><span class="sxs-lookup"><span data-stu-id="32895-163">WorkflowApplication can use this property.</span></span> <span data-ttu-id="32895-164">WorkflowServiceHost 不使用此属性。</span><span class="sxs-lookup"><span data-stu-id="32895-164">WorkflowServiceHost does not use this property.</span></span>  
  
 <span data-ttu-id="32895-165">不再需要 DefaultInstanceOwner 属性时，必须将其设置为 null。</span><span class="sxs-lookup"><span data-stu-id="32895-165">The DefaultInstanceOwner propery must be set to null when it is no longer necessary.</span></span> <span data-ttu-id="32895-166">如果 DefaultInstanceOwner 不为 null，则 InstanceStore 对象可能不会进行垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="32895-166">InstanceStore objects might not be garbage collected if DefaultInstanceOwner is not null.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="32895-167">尽管此方法声明为`virtual`而非`abstract`，没有实现。</span><span class="sxs-lookup"><span data-stu-id="32895-167">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="32895-168">必须重写此方法，以便提供的功能。</span><span class="sxs-lookup"><span data-stu-id="32895-168">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecute">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView EndExecute (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceView EndExecute(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndExecute(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecute (result As IAsyncResult) As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceView ^ EndExecute(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndExecute : IAsyncResult -&gt; System.Runtime.DurableInstancing.InstanceView" Usage="instanceStore.EndExecute result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="32895-169">操作的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-169">The result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32895-170">结束异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-170">Ends the asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32895-171">一个 InstanceView 对象，表示成功完成此命令后此实例的已知状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-171">An InstanceView object  representing the known state of the instance after the successful completion of the command.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32895-172">如果在事务下调用 BeginExecute，则此状态可以包含未提交的数据。</span><span class="sxs-lookup"><span data-stu-id="32895-172">If BeginExecute was called under a transaction, this state may include uncommitted data.</span></span> <span data-ttu-id="32895-173">一旦成功提交此事务，InstanceView 对象中的数据就被认为是已提交。</span><span class="sxs-lookup"><span data-stu-id="32895-173">Once the transaction is committed successfully, the data in the InstanceView object can be considered committed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual bool EndTryCommand (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool EndTryCommand(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function EndTryCommand (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool EndTryCommand(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndTryCommand : IAsyncResult -&gt; bool&#xA;override this.EndTryCommand : IAsyncResult -&gt; bool" Usage="instanceStore.EndTryCommand result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="32895-174">操作的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-174">The result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32895-175">结束异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-175">Ends an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32895-176">如果永久性提供程序实现不支持传递到 BeginTryCommand 方法的命令，则它应该返回 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-176">A persistence provider implementation should return false if it doesn’t support the command passed to the BeginTryCommand method.</span>
          </span>
          <span data-ttu-id="32895-177">否则，它应该返回 true 或引发一个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-177">Otherwise it should return true or throw an exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="32895-178">尽管此方法声明为`virtual`而非`abstract`，没有实现。</span><span class="sxs-lookup"><span data-stu-id="32895-178">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="32895-179">必须重写此方法，以便提供的功能。</span><span class="sxs-lookup"><span data-stu-id="32895-179">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForEvents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; EndWaitForEvents (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; EndWaitForEvents(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForEvents (result As IAsyncResult) As List(Of InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ EndWaitForEvents(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndWaitForEvents : IAsyncResult -&gt; System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;" Usage="instanceStore.EndWaitForEvents result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="32895-180">一个通过 Begin 方法移交到客户端的 IAsyncResult 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-180">An IAsyncResult object that was handed over to the client by the Begin method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32895-181">结束由 <see cref="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" /> 方法启动的异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-181">Ends the asynchronous operation initiated by the <see cref="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32895-182">返回 <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> 对象的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-182">Returns a list of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects..</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView Execute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceView Execute(class System.Runtime.DurableInstancing.InstanceHandle handle, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.Execute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute (handle As InstanceHandle, command As InstancePersistenceCommand, timeout As TimeSpan) As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceView ^ Execute(System::Runtime::DurableInstancing::InstanceHandle ^ handle, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Runtime.DurableInstancing.InstanceHandle * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; System.Runtime.DurableInstancing.InstanceView" Usage="instanceStore.Execute (handle, command, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="32895-183">一个实例句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-183">An instance handle.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="32895-184">要执行的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-184">The command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="32895-185">此操作的超时值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-185">The timeout value for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32895-186">异步执行永久性命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-186">Executes a persistence command synchronously.</span>
          </span>
          <span data-ttu-id="32895-187">永久性命令的示例：<see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> 和 <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-187">Examples of persistence commands are: <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> and <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32895-188">一个 InstanceView 对象，表示成功完成此命令后此实例的已知状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-188">An InstanceView object representing the known state of the instance after the successful completion of the command.</span>
          </span>
          <span data-ttu-id="32895-189">如果在事务下调用了 Execute，则此状态可以包含未提交的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-189">If Execute was called under a transaction, this state may include uncommitted data.</span>
          </span>
          <span data-ttu-id="32895-190">一旦成功提交此事务，InstanceView 对象中的数据就被认为是已提交</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-190">Once the transaction is committed successfully, the data in the InstanceView object can be considered committed</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32895-191">主机可调用 <xref:System.Runtime.DurableInstancing.InstanceStore.Execute%2A> 方法来对实例句柄执行永久性命令，主机可通过调用 <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> 方法获得此实例句柄。</span><span class="sxs-lookup"><span data-stu-id="32895-191">A host calls the <xref:System.Runtime.DurableInstancing.InstanceStore.Execute%2A> method to execute a persistence command against an instance handle, which the host obtains by invoking the <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> method.</span></span> <span data-ttu-id="32895-192">此实例句柄可以绑定到表示命令的上下文和主题的实体，如实例、实例所有者或实例锁定。</span><span class="sxs-lookup"><span data-stu-id="32895-192">The instance handle may be bound to entities that represent the context and subject of the command, such as an instance, instance owner, or instance lock.</span></span>  <span data-ttu-id="32895-193">对于一个实例句柄，一次只能发出一个命令。</span><span class="sxs-lookup"><span data-stu-id="32895-193">Only one command may be issued against an instance handle at a time.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="32895-194">如果此方法执行与<xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>，它将创建<xref:System.Runtime.DurableInstancing.InstanceOwner>并将其绑定到的实例。</span><span class="sxs-lookup"><span data-stu-id="32895-194">If this method is executed with a <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>, it will create an <xref:System.Runtime.DurableInstancing.InstanceOwner> and bind it to the instance.</span></span> <span data-ttu-id="32895-195">这意味着没有其他进程将无法访问该工作流;如果该过程结束时，无法恢复或执行工作流。</span><span class="sxs-lookup"><span data-stu-id="32895-195">This means that no other process will be able to access that workflow; if the process ends, the workflow cannot be recovered or executed.</span></span> <span data-ttu-id="32895-196">如果此类工作流并且再次执行，<xref:System.Runtime.DurableInstancing.InstanceLockedException>将引发。</span><span class="sxs-lookup"><span data-stu-id="32895-196">If such a workflow is executed again, a <xref:System.Runtime.DurableInstancing.InstanceLockedException> will be thrown.</span></span>  
>   
>  <span data-ttu-id="32895-197">如果<xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>是未使用，实例存储将创建一个临时<xref:System.Runtime.DurableInstancing.InstanceOwner>的过程结束时删除。</span><span class="sxs-lookup"><span data-stu-id="32895-197">If <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand> is not used, the instance store will create a temporary <xref:System.Runtime.DurableInstancing.InstanceOwner> that will be deleted at the end of the process.</span></span> <span data-ttu-id="32895-198">但是，如果在进程结束工作流的最后一个暂留点之前，这将引发异常，除非中指定的时间段**HostLockRenewalPeriod**参数已过期。</span><span class="sxs-lookup"><span data-stu-id="32895-198">However, if the process ends before the workflow’s final persistence point, this exception will be thrown, unless the period of time specified in the **HostLockRenewalPeriod** parameter has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="protected System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents (System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents(class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.GetEvents(System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetEvents (owner As InstanceOwner) As InstancePersistenceEvent()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ GetEvents(System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.GetEvents : System.Runtime.DurableInstancing.InstanceOwner -&gt; System.Runtime.DurableInstancing.InstancePersistenceEvent[]" Usage="instanceStore.GetEvents owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstancePersistenceEvent[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="32895-199">一个 <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> 对象，表示实例的所有者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-199">An <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> object representing the owner of an instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32895-200">获取已绑定到 <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> 对象的所有已终止事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-200">Gets all the signaled events bound to an <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32895-201">返回一个 <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> 对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-201">Returns an array of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects..</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstanceOwners">
      <MemberSignature Language="C#" Value="protected System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetInstanceOwners () As InstanceOwner()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Runtime::DurableInstancing::InstanceOwner ^&gt; ^ GetInstanceOwners();" />
      <MemberSignature Language="F#" Value="member this.GetInstanceOwners : unit -&gt; System.Runtime.DurableInstancing.InstanceOwner[]" Usage="instanceStore.GetInstanceOwners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceOwner[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="32895-202">获取已绑定到有效实例句柄或没有进行垃圾回收的每个 InstanceOwner 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-202">Gets each InstanceOwner object that is bound to a valid instance handle or has not been garbage collected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32895-203">实例的所有者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-203">The owner of the instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32895-204">返回 InstanceOwner 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="32895-204">Returns an array of InstanceOwner objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFreeInstanceHandle">
      <MemberSignature Language="C#" Value="protected virtual void OnFreeInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFreeInstanceHandle(class System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFreeInstanceHandle(System::Runtime::DurableInstancing::InstanceHandle ^ instanceHandle, System::Object ^ userContext);" />
      <MemberSignature Language="F#" Value="abstract member OnFreeInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle * obj -&gt; unit&#xA;override this.OnFreeInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle * obj -&gt; unit" Usage="instanceStore.OnFreeInstanceHandle (instanceHandle, userContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceHandle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="userContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceHandle">
          <span data-ttu-id="32895-205">已释放的实例句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-205">The instance handle that was freed.</span>
          </span>
        </param>
        <param name="userContext">
          <span data-ttu-id="32895-206">从 OnNewInstanceHandle 返回的永久性提供程序的用户上下文信息，或者，如果未重写 OnNewInstanceHandle，则为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-206">The persistence provider’s user context information that was returned from OnNewInstanceHandle, or null if OnNewInstanceHandle is not overridden.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32895-207">在释放实例句柄时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-207">Invoked when an instance handle is freed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNewInstanceHandle">
      <MemberSignature Language="C#" Value="protected virtual object OnNewInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object OnNewInstanceHandle(class System.Runtime.DurableInstancing.InstanceHandle instanceHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ OnNewInstanceHandle(System::Runtime::DurableInstancing::InstanceHandle ^ instanceHandle);" />
      <MemberSignature Language="F#" Value="abstract member OnNewInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle -&gt; obj&#xA;override this.OnNewInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle -&gt; obj" Usage="instanceStore.OnNewInstanceHandle instanceHandle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceHandle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
      </Parameters>
      <Docs>
        <param name="instanceHandle">
          <span data-ttu-id="32895-208">一个实例句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-208">An instance handle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32895-209">在创建新实例句柄时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-209">Invoked when a new instance handle is created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32895-210">一个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-210">An object.</span>
          </span>
          <span data-ttu-id="32895-211">在使用此句柄执行命令和释放此句柄时，此用户上下文对象将可用于永久性提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-211">This user context object will be available to the persistence provider when commands are executed using the handle, and when the handle is freed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetEvent">
      <MemberSignature Language="C#" Value="protected void ResetEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResetEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.ResetEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ResetEvent (persistenceEvent As InstancePersistenceEvent, owner As InstanceOwner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ResetEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent, System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.ResetEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent * System.Runtime.DurableInstancing.InstanceOwner -&gt; unit" Usage="instanceStore.ResetEvent (persistenceEvent, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent">
          <span data-ttu-id="32895-212">以前终止的和要重置的永久性事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-212">The persistence event that was signaled earlier and to be reset.</span>
          </span>
        </param>
        <param name="owner">
          <span data-ttu-id="32895-213">与永久性事件关联的实例所有者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-213">The instance owner associated with the persistence event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32895-214">重置已终止事件，并从由实例所有者维护的已终止事件的列表中移除该事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-214">Resets the signaled event and removes the event from the signaled events list maintained by the instance owner.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignalEvent">
      <MemberSignature Language="C#" Value="protected void SignalEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SignalEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.SignalEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SignalEvent (persistenceEvent As InstancePersistenceEvent, owner As InstanceOwner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SignalEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent, System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.SignalEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent * System.Runtime.DurableInstancing.InstanceOwner -&gt; unit" Usage="instanceStore.SignalEvent (persistenceEvent, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent">
          <span data-ttu-id="32895-215">要发出信号的永久性事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-215">The persistence event to be signaled.</span>
          </span>
        </param>
        <param name="owner">
          <span data-ttu-id="32895-216">实例所有者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-216">The instance owner.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32895-217">实例存储区可调用此方法来使事件终止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-217">An instance store invokes this method to signal an event.</span>
          </span>
          <span data-ttu-id="32895-218">为此永久性事件订阅的工作流主机可接收这些信号，并可采取适当的措施。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-218">A workflow host that subscribes for this persistence event receives it and takes an appropriate action.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryCommand(class System.Runtime.DurableInstancing.InstancePersistenceContext context, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.TryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryCommand (context As InstancePersistenceContext, command As InstancePersistenceCommand, timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryCommand(System::Runtime::DurableInstancing::InstancePersistenceContext ^ context, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member TryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; bool&#xA;override this.TryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; bool" Usage="instanceStore.TryCommand (context, command, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.DurableInstancing.InstancePersistenceContext" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="32895-219">实例上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-219">The instance context.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="32895-220">要执行的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-220">The command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="32895-221">此操作的超时值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-221">Timeout value for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32895-222">永久性提供程序可实现此方法，这可确定是否可执行特定的永久性命令和是否可异步执行此命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-222">A persistence provider implements this method, which determines whether a particular persistence command can be executed and if the command can be executed executes it asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32895-223">如果永久性提供程序实现不支持作为参数传递的命令，则它应该返回 <see langword="false" />；否则，它应该返回 <see langword="true" /> 或引发一个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-223">A persistence provider implementation should return <see langword="false" /> if it doesn’t support the command passed as a parameter; otherwise it should return <see langword="true" /> or throw an exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32895-224">如果可执行此命令，永久性提供程序会对 <xref:System.Runtime.DurableInstancing.InstancePersistenceContext> 调用相关方法，以提供此命令的结果。</span><span class="sxs-lookup"><span data-stu-id="32895-224">If the command can be executed, the persistence provider calls relevant methods on the <xref:System.Runtime.DurableInstancing.InstancePersistenceContext> to provide the results of the command.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForEvents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; WaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; WaitForEvents(class System.Runtime.DurableInstancing.InstanceHandle handle, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForEvents (handle As InstanceHandle, timeout As TimeSpan) As List(Of InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ WaitForEvents(System::Runtime::DurableInstancing::InstanceHandle ^ handle, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.WaitForEvents : System.Runtime.DurableInstancing.InstanceHandle * TimeSpan -&gt; System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;" Usage="instanceStore.WaitForEvents (handle, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="32895-225">绑定到此事件的实例句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-225">The instance handle that is bound to the event.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="32895-226">在等待操作超时之后的时间跨度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-226">The time span after which the waiting operation times out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="32895-227">工作流主机通常会调用此方法来等待事件终止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-227">A workflow host typically invokes this method to wait for an event to be signaled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="32895-228">
            <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> 对象的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="32895-228">A list of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>