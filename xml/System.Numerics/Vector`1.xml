<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Vector`1.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f010be3bdb0eb8add39f3d12d4b064a83009da87.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f010be3bdb0eb8add39f3d12d4b064a83009da87</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source>The vector type.</source>
          <target state="translated">向量类型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept>可以是任何基元数值类型。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Numerics.Vector`1">
          <source>Represents a single vector of a specified numeric type that is suitable for low-level optimization of parallel algorithms.</source>
          <target state="translated">表示指定数值类型（适用于并行算法的低级别优化）的单个向量。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source><ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph> is an immutable structure that represents a single vector of a specified numeric type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph> 是不可变的结构，它表示指定数值类型的单个向量。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source>The count of a <ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph> instance is fixed, but its upper limit is CPU-register dependent.</source>
          <target state="translated">计数<ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph>实例固定的但其上限是 CPU 寄存器依赖。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source>It is intended to be used as a building block for vectorizing large algorithms.</source>
          <target state="translated">它旨在用作向量化大型算法构建基块。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph> structure provides support for hardware acceleration.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph>结构提供了对硬件加速的支持。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0)">
          <source>The numeric type that defines the type of the components in the vector.</source>
          <target state="translated">定义向量中的组件类型的数值类型。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0)">
          <source>Creates a vector whose components are of a specified type.</source>
          <target state="translated">创建其组件为指定类型的向量。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.#ctor(`0)">
          <source><ph id="ph1">`value`</ph> can be any primitive numeric type (that is, a numeric type whose <ph id="ph2">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType&gt;</ph> property returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`value`</ph> 可以是任何基元数值类型 (即，数字类型，该类型<ph id="ph2">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType&gt;</ph>属性返回<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[])">
          <source>A numeric array.</source>
          <target state="translated">数值数组。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[])">
          <source>Creates a vector from a specified array.</source>
          <target state="translated">从指定数组创建一个向量。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.#ctor(`0[])">
          <source><ph id="ph1">`values`</ph> must contain at least <ph id="ph2">&lt;xref:System.Numerics.Vector%601.Count%2A&gt;</ph> elements.</source>
          <target state="translated"><ph id="ph1">`values`</ph> 必须至少包含<ph id="ph2">&lt;xref:System.Numerics.Vector%601.Count%2A&gt;</ph>元素。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[])">
          <source><ph id="ph1">&lt;paramref name="values" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="values" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>A numeric array.</source>
          <target state="translated">数值数组。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>The starting index position from which to create the vector.</source>
          <target state="translated">从其创建向量的起始索引位置。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>Creates a vector from a specified array starting at a specified index position.</source>
          <target state="translated">于指定索引位置开始，从指定数组创建一个向量。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>The array must contain at least [Vector(T) Constructor (T<ph id="ph1">\&lt;</ph>xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType&gt; elements from the specified index.</source>
          <target state="translated">该数组必须至少包含 [Vector(T) 构造函数 (T<ph id="ph1">\&lt;</ph>xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType &gt; 从指定索引的元素。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="values" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="values" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>The length of <ph id="ph1">&lt;paramref name="values" /&gt;</ph> minus <ph id="ph2">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph3">&lt;see cref="P:System.Numerics.Vector`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="values" /&gt;</ph> 的长度减去 <ph id="ph2">&lt;paramref name="index" /&gt;</ph> 小于 <ph id="ph3">&lt;see cref="P:System.Numerics.Vector`1.Count" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source>The array to receive a copy of the vector values.</source>
          <target state="translated">要接收矢量值的副本的数组。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source>Copies the vector instance to a specified destination array.</source>
          <target state="translated">将向量实例复制到指定的目标数组。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source>The copy operation begins at index 0 of <ph id="ph1">`destination`</ph>.</source>
          <target state="translated">位于索引 0 处开始复制操作<ph id="ph1">`destination`</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source>The destination array must have at least <ph id="ph1">&lt;xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType&gt;</ph> elements.</source>
          <target state="translated">该目标数组必须至少具有<ph id="ph1">&lt;xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType&gt;</ph>元素。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source><ph id="ph1">&lt;paramref name="destination" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destination" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source>The number of elements in the current vector is greater than the number of elements available in the <ph id="ph1">&lt;paramref name="destination" /&gt;</ph> array.</source>
          <target state="translated">当前向量中的元素数目大于 <ph id="ph1">&lt;paramref name="destination" /&gt;</ph> 数组中的可用元素数目。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>The array to receive a copy of the vector values.</source>
          <target state="translated">要接收矢量值的副本的数组。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>The starting index in <bpt id="p1">&lt;c&gt;</bpt>destination<ept id="p1">&lt;/c&gt;</ept> at which to begin the copy operation.</source>
          <target state="translated">在“目标”<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept> 中的起始索引，要于此处开始复制操作。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>Copies the vector instance to a specified destination array starting at a specified index position.</source>
          <target state="translated">从指定索引位置开始，将向量实例复制到指定的目标数组中。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>The copy operation begins at index <ph id="ph1">`startIndex`</ph> of <ph id="ph2">`destination`</ph>.</source>
          <target state="translated">索引处开始复制操作<ph id="ph1">`startIndex`</ph>的<ph id="ph2">`destination`</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>The destination array must have at least <ph id="ph1">`startIndex`</ph> + [CopyTo Method (T<ph id="ph2">\&lt;</ph>xref:System.Numerics.Vector%601.Count%2A&gt; – 1 elements.</source>
          <target state="translated">该目标数组必须至少具有<ph id="ph1">`startIndex`</ph>+ [CopyTo 方法 (T<ph id="ph2">\&lt;</ph>xref:System.Numerics.Vector%601.Count%2A &gt; – 1 元素。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="destination" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destination" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>The number of elements in the current instance is greater than the number of elements available from <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> to the end of the <ph id="ph2">&lt;paramref name="destination" /&gt;</ph> array.</source>
          <target state="translated">当前实例中的元素数目大于从 <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> 到 <ph id="ph2">&lt;paramref name="destination" /&gt;</ph> 数组末尾之间的可用元素数目。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the last index in <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小于零或大于 <ph id="ph2">&lt;paramref name="destination" /&gt;</ph> 中的最后一个索引。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Count">
          <source>Returns the number of elements stored in the vector.</source>
          <target state="translated">返回存储在向量中的元素数量。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Vector`1.Count">
          <source>The number of elements stored in the vector.</source>
          <target state="translated">存储在向量中的元素数量。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Count">
          <source>Access to the property getter via reflection is not supported.</source>
          <target state="translated">不支持通过反射访问属性 getter。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
          <source>The vector to compare with this instance.</source>
          <target state="translated">要与此实例进行比较的向量。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
          <source>Returns a value that indicates whether this instance is equal to a specified vector.</source>
          <target state="translated">返回一个值，该值指示此实例是否与指定的向量相等。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance and <ph id="ph2">&lt;paramref name="other" /&gt;</ph> are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果当前实例与 <ph id="ph2">&lt;paramref name="other" /&gt;</ph> 相等，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
          <source>Two vectors are equal if they are of the same type, have the same number of values, and each value in the current instance is equal to the corresponding value in <ph id="ph1">`other`</ph>.</source>
          <target state="translated">两个向量相等，如果它们是相同类型的具有相同数目的值，并且当前实例中的每个值是否等于中的相应值<ph id="ph1">`other`</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Object)">
          <source>The object to compare with this instance.</source>
          <target state="translated">与该实例进行比较的对象。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Object)">
          <source>Returns a value that indicates whether this instance is equal to a specified object.</source>
          <target state="translated">返回一个值，该值指示此实例是否与指定的对象相等。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance and <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果当前实例与 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> 相等，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Object)">
          <source>The method returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is null, or if <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> is a vector of a different type than the current instance.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> 为 null，或者如果 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> 是与当前实例类型不同的向量，则该方法将返回 <ph id="ph1">&lt;see langword="false" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.Equals(System.Object)">
          <source>Two vectors are equal if they are of the same type, have the same number of values, and each value in the current instance is equal to the corresponding value in <ph id="ph1">`other`</ph>.</source>
          <target state="translated">两个向量相等，如果它们是相同类型的具有相同数目的值，并且当前实例中的每个值是否等于中的相应值<ph id="ph1">`other`</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">返回此实例的哈希代码。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.GetHashCode">
          <source>The hash code.</source>
          <target state="translated">哈希代码。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source>The index of the element to return.</source>
          <target state="translated">要返回的元素的索引。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source>Gets the element at a specified index.</source>
          <target state="translated">获取指定索引处的元素。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source>The element at index <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</source>
          <target state="translated">索引 <ph id="ph1">&lt;paramref name="index" /&gt;</ph> 处的元素。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than or equal to <ph id="ph2">&lt;see cref="P:System.Numerics.Vector`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 大于或等于 <ph id="ph2">&lt;see cref="P:System.Numerics.Vector`1.Count" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.One">
          <source>Returns a vector containing all ones.</source>
          <target state="translated">返回一个包含所有 1 的向量。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Vector`1.One">
          <source>A vector containing all ones.</source>
          <target state="translated">一个包含所有 1 的向量。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector to add.</source>
          <target state="translated">要相加的第一个向量。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector to add.</source>
          <target state="translated">要相加的第二个向量。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Adds two vectors together.</source>
          <target state="translated">将两个向量相加。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The summed vector.</source>
          <target state="translated">总和向量。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Addition%2A&gt;</ph> method defines the addition operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Addition%2A&gt;</ph>方法定义的加法运算<ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">第一个向量。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">第二个向量。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Returns a new vector by performing a bitwise <ph id="ph1">&lt;see langword="And" /&gt;</ph> operation on each of the elements in two vectors.</source>
          <target state="translated">通过在两个向量中的每个元素上执行按位 <ph id="ph1">&lt;see langword="And" /&gt;</ph> 运算，返回一个新向量。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The vector that results from the bitwise <ph id="ph1">&lt;see langword="And" /&gt;</ph> of <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">从 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 的按位 <ph id="ph1">&lt;see langword="And" /&gt;</ph> 得到的向量。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_BitwiseAnd%2A&gt;</ph> method defines the bitwise <ph id="ph2">`And`</ph> operation for <ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_BitwiseAnd%2A&gt;</ph>方法定义的按位<ph id="ph2">`And`</ph>操作<ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">第一个向量。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">第二个向量。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Returns a new vector by performing a bitwise <ph id="ph1">&lt;see langword="Or" /&gt;</ph> operation on each of the elements in two vectors.</source>
          <target state="translated">通过在两个向量中的每个元素上执行按位 <ph id="ph1">&lt;see langword="Or" /&gt;</ph> 运算，返回一个新向量。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The vector that results from the bitwise <ph id="ph1">&lt;see langword="Or" /&gt;</ph> of the elements in <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">从 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 中的元素的按位 <ph id="ph1">&lt;see langword="Or" /&gt;</ph> 运算得到的向量。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_BitwiseOr%2A&gt;</ph> method defines the bitwise <ph id="ph2">`Or`</ph> operation for <ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_BitwiseOr%2A&gt;</ph>方法定义的按位<ph id="ph2">`Or`</ph>操作<ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">第一个向量。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">第二个向量。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Divides the first vector by the second.</source>
          <target state="translated">将第一个向量除以第二个向量。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The vector that results from dividing <ph id="ph1">&lt;paramref name="left" /&gt;</ph> by <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;paramref name="left" /&gt;</ph> 除以 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 得到的结果向量。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Division%2A&gt;</ph> method defines the division operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Division%2A&gt;</ph>方法定义的除法运算<ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector to compare.</source>
          <target state="translated">要比较的第一个向量。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector to compare.</source>
          <target state="translated">要比较的第二个向量。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Returns a value that indicates whether each pair of elements in two specified vectors are equal.</source>
          <target state="translated">返回一个值，该值指示两个指定向量中的每对元素是否相等。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 相等，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Two vectors are equal if they are of the same type, have the same number of values, and each value in <ph id="ph1">`left`</ph> is equal to the corresponding value in <ph id="ph2">`right`</ph>.</source>
          <target state="translated">两个向量相等，如果它们相同类型的、 具有相同数目的值，以及在每个值<ph id="ph1">`left`</ph>等于中的相应值<ph id="ph2">`right`</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">第一个向量。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">第二个向量。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Returns a new vector by performing a bitwise <ph id="ph1">&lt;see langword="XOr" /&gt;</ph> operation on each of the elements in two vectors.</source>
          <target state="translated">通过在两个向量中的每个元素上执行按位 <ph id="ph1">&lt;see langword="XOr" /&gt;</ph> 运算，返回一个新向量。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The vector that results from the bitwise <ph id="ph1">&lt;see langword="XOr" /&gt;</ph> of the elements in <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">从 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 中的元素的按位 <ph id="ph1">&lt;see langword="XOr" /&gt;</ph> 运算得到的向量。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_ExclusiveOr%2A&gt;</ph> method defines the bitwise <ph id="ph2">`XOr`</ph> operation for <ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_ExclusiveOr%2A&gt;</ph>方法定义的按位<ph id="ph2">`XOr`</ph>操作<ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
          <source>The vector to reinterpret.</source>
          <target state="translated">要重新解释的向量。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated">将指定向量的位重新解释为 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 类型的向量。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
          <source>The reinterpreted vector.</source>
          <target state="translated">重新解释后的向量。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph>运算符定义收缩转换，而此过程要求 （在 C# 中) 强制转换运算符或转换方法 （在 Visual Basic 中)。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
          <source>The vector to reinterpret.</source>
          <target state="translated">要重新解释的向量。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">将指定向量的位重新解释为 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 类型的向量。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
          <source>The reinterpreted vector.</source>
          <target state="translated">重新解释后的向量。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph>运算符定义收缩转换，而此过程要求 （在 C# 中) 强制转换运算符或转换方法 （在 Visual Basic 中)。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
          <source>The vector to reinterpret.</source>
          <target state="translated">要重新解释的向量。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>.</source>
          <target state="translated">将指定向量的位重新解释为 <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> 类型的向量。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
          <source>The reinterpreted vector.</source>
          <target state="translated">重新解释后的向量。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph>运算符定义收缩转换，而此过程要求 （在 C# 中) 强制转换运算符或转换方法 （在 Visual Basic 中)。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
          <source>The vector to reinterpret.</source>
          <target state="translated">要重新解释的向量。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">将指定向量的位重新解释为 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 类型的向量。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
          <source>The reinterpreted vector.</source>
          <target state="translated">重新解释后的向量。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph>运算符定义收缩转换，而此过程要求 （在 C# 中) 强制转换运算符或转换方法 （在 Visual Basic 中)。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
          <source>The vector to reinterpret.</source>
          <target state="translated">要重新解释的向量。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">将指定向量的位重新解释为 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 类型的向量。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
          <source>The reinterpreted vector.</source>
          <target state="translated">重新解释后的向量。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph>运算符定义收缩转换，而此过程要求 （在 C# 中) 强制转换运算符或转换方法 （在 Visual Basic 中)。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
          <source>The vector to reinterpret.</source>
          <target state="translated">要重新解释的向量。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph>.</source>
          <target state="translated">将指定向量的位重新解释为 <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph> 类型的向量。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
          <source>The reinterpreted vector.</source>
          <target state="translated">重新解释后的向量。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph>运算符定义收缩转换，而此过程要求 （在 C# 中) 强制转换运算符或转换方法 （在 Visual Basic 中)。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
          <source>The vector to reinterpret.</source>
          <target state="translated">要重新解释的向量。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated">将指定向量的位重新解释为 <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 类型的向量。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
          <source>The reinterpreted vector.</source>
          <target state="translated">重新解释后的向量。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph>运算符定义收缩转换，而此过程要求 （在 C# 中) 强制转换运算符或转换方法 （在 Visual Basic 中)。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
          <source>The vector to reinterpret.</source>
          <target state="translated">要重新解释的向量。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph>.</source>
          <target state="translated">将指定向量的位重新解释为 <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph> 类型的向量。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
          <source>The reinterpreted vector.</source>
          <target state="translated">重新解释后的向量。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph>运算符定义收缩转换，而此过程要求 （在 C# 中) 强制转换运算符或转换方法 （在 Visual Basic 中)。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
          <source>The vector to reinterpret.</source>
          <target state="translated">要重新解释的向量。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated">将指定向量的位重新解释为 <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> 类型的向量。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
          <source>The reinterpreted vector.</source>
          <target state="translated">重新解释后的向量。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph>运算符定义收缩转换，而此过程要求 （在 C# 中) 强制转换运算符或转换方法 （在 Visual Basic 中)。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
          <source>The vector to reinterpret.</source>
          <target state="translated">要重新解释的向量。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated">将指定向量的位重新解释为 <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> 类型的向量。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
          <source>The reinterpreted vector.</source>
          <target state="translated">重新解释后的向量。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph>运算符定义收缩转换，而此过程要求 （在 C# 中) 强制转换运算符或转换方法 （在 Visual Basic 中)。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector to compare.</source>
          <target state="translated">要比较的第一个向量。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector to compare.</source>
          <target state="translated">要比较的第二个向量。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Returns a value that indicates whether any single pair of elements in the specified vectors is equal.</source>
          <target state="translated">返回一个值，该值指示指定向量中的任意元素对是否相等。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if any element pairs in left and right are equal.</source>
          <target state="translated">如果左侧和右侧的任意元素对相等，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if no element pairs are equal.</source>
          <target state="translated">如果没有元素对相等，则为 <ph id="ph1">&lt;see langword="false" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">第一个向量。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">第二个向量。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Multiplies two vectors together.</source>
          <target state="translated">将两个向量相乘。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The product vector.</source>
          <target state="translated">乘积向量。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph> method defines the multiplication operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph>方法定义的乘法运算<ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
          <source>The source vector.</source>
          <target state="translated">源向量。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
          <source>A scalar value.</source>
          <target state="translated">标量值。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
          <source>Multiplies a vector by a specified scalar value.</source>
          <target state="translated">将向量乘以指定标量值。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
          <source>The scaled vector.</source>
          <target state="translated">缩放后的向量。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph> method defines the multiplication operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph>方法定义的乘法运算<ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
          <source>The scalar value.</source>
          <target state="translated">标量值。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
          <source>The source vector.</source>
          <target state="translated">源向量。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
          <source>Multiplies a vector by the given scalar.</source>
          <target state="translated">将向量乘以给定标量。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
          <source>The scaled vector.</source>
          <target state="translated">缩放后的向量。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph> method defines the multiplication operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph>方法定义的乘法运算<ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})">
          <source>The source vector.</source>
          <target state="translated">源向量。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})">
          <source>Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.</source>
          <target state="translated">返回一个新向量，其元素是通过取用指定向量的元素的二进制反码来获取的。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})">
          <source>The one's complement vector.</source>
          <target state="translated">二进制反码向量。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">第一个向量。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">第二个向量。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Subtracts the second vector from the first.</source>
          <target state="translated">从第一个向量中减去第二个向量。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The vector that results from subtracting <ph id="ph1">&lt;paramref name="right" /&gt;</ph> from <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</source>
          <target state="translated">从 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 中减去 <ph id="ph1">&lt;paramref name="right" /&gt;</ph> 得到的结果向量。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Subtraction%2A&gt;</ph> method defines the subtraction operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Subtraction%2A&gt;</ph>方法定义的减法运算<ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
          <source>The vector to negate.</source>
          <target state="translated">要求反的向量。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
          <source>Negates a given vector.</source>
          <target state="translated">对给定向量求反。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
          <source>The negated vector.</source>
          <target state="translated">求反后的向量。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_UnaryNegation%2A&gt;</ph> method defines the unary negation operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_UnaryNegation%2A&gt;</ph>方法定义的一元求反运算<ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString">
          <source>Returns the string representation of this vector using default formatting.</source>
          <target state="translated">通过使用默认格式设置，返回此向量的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString">
          <source>The string representation of this vector.</source>
          <target state="translated">此向量的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.ToString">
          <source>This method returns a string in which each element of the vector is formatted using the "G" (general) format string and the formatting conventions of the current thread culture.</source>
          <target state="translated">此方法返回在其中向量的每个元素格式都是使用"G"（常规） 格式字符串，并且当前线程区域性的格式设置约定的字符串。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.ToString">
          <source>The current culture's <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph> property followed by a space is used to separate each element.</source>
          <target state="translated">当前区域性的<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph>属性跟一个空格用于分隔每个元素。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String)">
          <source>A  or  that defines the format of individual elements.</source>
          <target state="translated">一个  或  定义各个元素的格式的。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String)">
          <source>Returns the string representation of this vector using the specified format string to format individual elements.</source>
          <target state="translated">通过使用指定格式字符串设置各个元素的格式，来返回此向量的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String)">
          <source>The string representation of the current instance.</source>
          <target state="translated">当前实例的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.ToString(System.String)">
          <source>This method returns a string in which each element of the vector is formatted using <ph id="ph1">`format`</ph> and the current culture's formatting conventions.</source>
          <target state="translated">此方法返回在其中使用格式化向量的每个元素的字符串<ph id="ph1">`format`</ph>和当前区域性的格式设置约定。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.ToString(System.String)">
          <source>The current culture's <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph> property followed by a space is used to separate each element.</source>
          <target state="translated">当前区域性的<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph>属性跟一个空格用于分隔每个元素。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
          <source>A  or  that defines the format of individual elements.</source>
          <target state="translated">一个  或  定义各个元素的格式的。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
          <source>A format provider that supplies culture-specific formatting information.</source>
          <target state="translated">一个提供特定于区域性的格式设置信息的格式提供程序。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
          <source>Returns the string representation of this vector using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.</source>
          <target state="translated">通过使用指定格式字符串设置各个元素的格式并使用指定格式提供程序定义特定于区域性的格式设置，来返回此向量的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the current instance.</source>
          <target state="translated">当前实例的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
          <source>This method returns a string in which each element of the vector is formatted using <ph id="ph1">`format`</ph> and <ph id="ph2">`formatProvider`</ph>, and the format provider's <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph> property followed by a space is used to separate each element.</source>
          <target state="translated">此方法返回在其中使用格式化向量的每个元素的字符串<ph id="ph1">`format`</ph>和<ph id="ph2">`formatProvider`</ph>，和格式提供程序的<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph>属性跟一个空格用于分隔每个元素。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Zero">
          <source>Returns a vector containing all zeroes.</source>
          <target state="translated">返回一个包含所有 0 的向量。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Vector`1.Zero">
          <source>A vector containing all zeroes.</source>
          <target state="translated">一个包含所有 0 的向量。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>