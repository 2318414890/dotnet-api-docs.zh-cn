<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BigInteger.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57d0dcda34bb31112c320daec112f3dd4b818dc43.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d0dcda34bb31112c320daec112f3dd4b818dc43</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Represents an arbitrarily large signed integer.</source>
          <target state="translated">表示任意大的带符号整数。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> type is an immutable type that represents an arbitrarily large integer whose value in theory has no upper or lower bounds.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>类型是不可变类型，表示任意大整数的值在理论上没有上限或下限的边界。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The members of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> type closely parallel those of other integral types (the <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.Int64&gt;</ph>, <ph id="ph6">&lt;xref:System.SByte&gt;</ph>, <ph id="ph7">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt32&gt;</ph>, and <ph id="ph9">&lt;xref:System.UInt64&gt;</ph> types).</source>
          <target state="translated">成员<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>类型几乎其他整数类型 ( <ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.Int64&gt;</ph>， <ph id="ph6">&lt;xref:System.SByte&gt;</ph>， <ph id="ph7">&lt;xref:System.UInt16&gt;</ph>， <ph id="ph8">&lt;xref:System.UInt32&gt;</ph>，和<ph id="ph9">&lt;xref:System.UInt64&gt;</ph>类型)。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>This type differs from the other integral types in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, which have a range indicated by their <ph id="ph2">`MinValue`</ph> and <ph id="ph3">`MaxValue`</ph> properties.</source>
          <target state="translated">此类型不同于其他整数类型在<ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>，其中包含所指示的范围其<ph id="ph2">`MinValue`</ph>和<ph id="ph3">`MaxValue`</ph>属性。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Because the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> type is immutable (see <bpt id="p1">[</bpt>Mutability and the BigInteger Structure<ept id="p1">](#mutability)</ept>) and because it has no upper or lower bounds, an <ph id="ph2">&lt;xref:System.OutOfMemoryException&gt;</ph> can be thrown for any operation that causes a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value to grow too large.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>类型是不可变 (请参阅<bpt id="p1">[</bpt>可变性和 BigInteger 结构<ept id="p1">](#mutability)</ept>)，因为它有没有上限或下限的边界，<ph id="ph2">&lt;xref:System.OutOfMemoryException&gt;</ph>可能会导致任何操作引发<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值太增长大。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Instantiating a BigInteger Object</source>
          <target state="translated">实例化 BigInteger 对象</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object in several ways:</source>
          <target state="translated">可以实例化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象有几个方面：</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can use the <ph id="ph1">`new`</ph> keyword and provide any integral or floating-point value as a parameter to the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> constructor.</source>
          <target state="translated">你可以使用<ph id="ph1">`new`</ph>关键字并提供任何整型或浮点值作为参数传递给<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>(Floating-point values are truncated before they are assigned to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>.) The following example illustrates how to use the <ph id="ph2">`new`</ph> keyword to instantiate <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">(浮点值被截断之前分配给<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>。)下面的示例演示如何使用<ph id="ph2">`new`</ph>关键字来实例化<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can declare a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable and assign it a value just as you would any numeric type, as long as that value is an integral type.</source>
          <target state="translated">你可以声明<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>变量，并将分配一个值，就像你那样任何数值类型，只要该值是整数类型。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example uses assignment to create a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value from an <ph id="ph2">&lt;xref:System.Int64&gt;</ph>.</source>
          <target state="translated">下面的示例使用分配创建<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值从<ph id="ph2">&lt;xref:System.Int64&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can assign a decimal or floating-point value to a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object if you cast the value or convert it first.</source>
          <target state="translated">你可以分配到一个十进制或浮点值<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象，如果将值强制转换的虚拟机或模板，首先将其转换。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example explicitly casts (in C#) or converts (in Visual Basic) a <ph id="ph1">&lt;xref:System.Double&gt;</ph> and a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated">下面的示例显式强制转换 （在 C# 中) 或 （在 Visual Basic 中) 将转换<ph id="ph1">&lt;xref:System.Double&gt;</ph>和<ph id="ph2">&lt;xref:System.Decimal&gt;</ph>值赋给<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>These methods enable you to instantiate a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object whose value is in the range of one of the existing numeric types only.</source>
          <target state="translated">这些方法使你能够实例化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>其值处于与一个现有的数值范围的对象类型仅。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object whose value can exceed the range of the existing numeric types in one of three ways:</source>
          <target state="translated">可以实例化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>其值可以超过该范围的三种方式之一中的现有数值类型的对象：</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can use the <ph id="ph1">`new`</ph> keyword and provide a byte array of any size to the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">你可以使用<ph id="ph1">`new`</ph>关键字并提供到任何大小的字节数组<ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%2A?displayProperty=nameWithType&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>For example:</source>
          <target state="translated">例如:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%2A&gt;</ph> methods to convert the string representation of a number to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated">你可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%2A&gt;</ph>方法要转换的字符串表示形式到数值<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>For example:</source>
          <target state="translated">例如:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can call a <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic) <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> method that performs some operation on a numeric expression and returns a calculated <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> result.</source>
          <target state="translated">你可以调用<ph id="ph1">`static`</ph>(<ph id="ph2">`Shared`</ph>在 Visual Basic 中)<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>对数值表达式执行某种操作并返回计算方法<ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph>结果。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example does this by cubing <ph id="ph1">&lt;xref:System.UInt64.MaxValue?displayProperty=nameWithType&gt;</ph> and assigning the result to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated">下面的示例执行此通过立方<ph id="ph1">&lt;xref:System.UInt64.MaxValue?displayProperty=nameWithType&gt;</ph>并分配到结果<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The uninitialized value of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> is <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Zero%2A&gt;</ph>.</source>
          <target state="translated">未初始化的值<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>是<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Zero%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Performing Operations on BigInteger Values</source>
          <target state="translated">对 BigInteger 值执行操作</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can use a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> instance as you would use any other integral type.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>实例像使用任何其他整数类型。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> overloads the standard numeric operators to enable you to perform basic mathematical operations such as addition, subtraction, division, multiplication, subtraction, negation, and unary negation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> 重载标准数值的运算符，以使您能够执行基本的数学运算，例如加法、 减法、 除法、 乘法、 减法、 求反和一元求反。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can also use the standard numeric operators to compare two <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values with each other.</source>
          <target state="translated">你还可以使用标准数值运算符比较两个<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>与每个其他的值。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Like the other integral types, <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> also supports the bitwise <ph id="ph2">`And`</ph>, <ph id="ph3">`Or`</ph>, <ph id="ph4">`XOr`</ph>, left shift, and right shift operators.</source>
          <target state="translated">与其他整数类型，类似<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>还支持的按位<ph id="ph2">`And`</ph>， <ph id="ph3">`Or`</ph>， <ph id="ph4">`XOr`</ph>，左移位和右移位运算符。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>For languages that do not support custom operators, the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> structure also provides equivalent methods for performing mathematical operations.</source>
          <target state="translated">不支持自定义运算符的语言<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>结构还提供了用于执行数学运算的等效方法。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>These include <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph>, and several others.</source>
          <target state="translated">其中包括<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph>，以及其他几个人。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Many members of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> structure correspond directly to members of the other integral types.</source>
          <target state="translated">许多成员<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>结构直接对应于其他整数类型的成员。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>In addition, <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> adds members such as the following:</source>
          <target state="translated">此外，<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>添加成员，如下所示：</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Sign%2A&gt;</ph>, which returns a value that indicates the sign of a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Sign%2A&gt;</ph>它返回一个值，指示的符号<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Abs%2A&gt;</ph>, which returns the absolute value of a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Abs%2A&gt;</ph>它返回数值的绝对值<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source><ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph>, which returns both the quotient and remainder of a division operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph>它返回商和余数的除法运算。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source><ph id="ph1">&lt;xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A&gt;</ph>, which returns the greatest common divisor of two <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A&gt;</ph>它返回最大公约数的两个<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Many of these additional members correspond to the members of the <ph id="ph1">&lt;xref:System.Math&gt;</ph> class, which provides the functionality to work with the primitive numeric types.</source>
          <target state="translated">很多这些其他成员对应于的成员<ph id="ph1">&lt;xref:System.Math&gt;</ph>类，该类提供的功能，可以使用基元数值类型。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Mutability and the BigInteger Structure</source>
          <target state="translated">可变性和 BigInteger 结构</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object and then increments its value by one.</source>
          <target state="translated">下面的示例实例化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象，然后逐个增加其值。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Although this example appears to modify the value of the existing object, this is not the case.</source>
          <target state="translated">尽管此示例看起来可以修改现有对象的值，这不是这种情况。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects are immutable, which means that internally, the common language runtime actually creates a new <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object and assigns it a value one greater than its previous value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> 对象是不可变的这意味着内部，公共语言运行时实际创建一个新<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象并将其分配一个大于其以前的值的值。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>This new object is then returned to the caller.</source>
          <target state="translated">此新对象然后返回到调用方。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The other numeric types in the .NET Framework are also immutable.</source>
          <target state="translated">.NET Framework 中的其他数值类型也是不可变的。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>However, because the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> type has no upper or lower bounds, its values can grow extremely large and have a measurable impact on performance.</source>
          <target state="translated">但是，因为<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>类型已没有上限或下限的边界，其值可以变得非常大并对性能产生显著影响。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Although this process is transparent to the caller, it does incur a performance penalty.</source>
          <target state="translated">尽管此过程是透明的调用方，但它确实会引致性能下降。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>In some cases, especially when repeated operations are performed in a loop on very large <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values, that performance penalty can be significant.</source>
          <target state="translated">在某些情况下，尤其是当重复执行操作在循环中非常大<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，该性能损失可能很重要。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>For example, in the following example, an operation is performed repetitively up to a million times, and a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is incremented by one every time the operation succeeds.</source>
          <target state="translated">例如，在下面的示例中，执行操作重复达数百万次，和一个<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值就会递增 1 每次该操作成功。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>In such a case, you can improve performance by performing all intermediate assignments to an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> variable.</source>
          <target state="translated">在这种情况下，可以提高性能，通过执行到的所有中间分配<ph id="ph1">&lt;xref:System.Int32&gt;</ph>变量。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The final value of the variable can then be assigned to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object when the loop exits.</source>
          <target state="translated">然后，该变量的最终值可以分配给<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象循环退出时。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example provides an illustration.</source>
          <target state="translated">下面的示例进行了这方面的演示。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Working with Byte Arrays and Hexadecimal Strings</source>
          <target state="translated">使用字节数组和十六进制字符串</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>If you convert <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values to byte arrays, or if you convert byte arrays to <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values, you must consider the order of bytes.</source>
          <target state="translated">如果你转换<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>到字节数组的值或如果你转换到的字节数组<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，你必须考虑的字节顺序。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> structure expects the individual bytes in a byte array to appear in little-endian order (that is, the lower-order bytes of the value precede the higher-order bytes).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>结构要求的各个字节中的字节数组才会显示在 little-endian 的顺序 （即值较低序位字节先于更高序位字节）。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can round-trip a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value by calling the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph> method and then passing the resulting byte array to the <ph id="ph3">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructor, as the following example shows.</source>
          <target state="translated">你可以往返<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值通过调用<ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph>方法，然后将生成的字节数组到<ph id="ph3">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph>构造函数，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>To instantiate a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value from a byte array that represents a value of some other integral type, you can pass the integral value to the <ph id="ph2">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph> method, and then pass the resulting byte array to the <ph id="ph3">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructor.</source>
          <target state="translated">若要实例化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值可以将整数值与传递一个表示某些其他整数类型的值的字节数组，从<ph id="ph2">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph>方法，并生成的字节数组到然后传入<ph id="ph3">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value from a byte array that represents an <ph id="ph2">&lt;xref:System.Int16&gt;</ph> value.</source>
          <target state="translated">下面的示例实例化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值从一个字节数组，表示<ph id="ph2">&lt;xref:System.Int16&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> structure assumes that negative values are stored by using two's complement representation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>结构假定，使用 2 的补数表示存储负值。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Because the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> structure represents a numeric value with no fixed length, the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructor always interprets the most significant bit of the last byte in the array as a sign bit.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>结构表示具有无固定长度的数字值<ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph>构造函数始终解释为符号位数组中的最后一个字节的最高有效位。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>To prevent the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructor from confusing the two's complement representation of a negative value with the sign and magnitude representation of a positive value, positive values in which the most significant bit of the last byte in the byte array would ordinarily be set should include an additional byte whose value is 0.</source>
          <target state="translated">若要防止<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph>从令人费解 2 的补数表示形式的负值正是正数值的符号和量值表示的构造函数在其中最大值的字节数组中的最后一个字节的有效位通常为集应包含额外的字节，其值为 0。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>For example, 0xC0 0xBD 0xF0 0xFF is the little-endian hexadecimal representation of either -1,000,000 or 4,293,967,296.</source>
          <target state="translated">例如，0xC0 0xBD 0xF0 0xFF 是小 endian 十六进制表示形式 1000000 或 4293967296。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Because the most significant bit of the last byte in this array is on, the value of the byte array would be interpreted by the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructor as -1,000,000.</source>
          <target state="translated">因为此数组中的最后一个字节的最高有效位是打开的字节数组的值将被<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph>为-1000000 的构造函数。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>To instantiate a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> whose value is positive, a byte array whose elements are 0xC0 0xBD 0xF0 0xFF 0x00 must be passed to the constructor.</source>
          <target state="translated">若要实例化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>其值为正，字节数组，其元素为 0xC0 0xBD 0xF0 0xFF 0x00 必须传递给构造函数。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example illustrates this.</source>
          <target state="translated">下面的示例阐释了这一点。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Byte arrays created by the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph> method from positive values include this extra zero-value byte.</source>
          <target state="translated">字节数组创建<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph>从正值的方法包括此额外的零值字节。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> structure can successfully round-trip values by assigning them to, and then restoring them from, byte arrays, as the following example shows.</source>
          <target state="translated">因此，<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>结构可以成功往返行程值通过分配给，然后将它们还原从字节数组，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>However, you may need to add this additional zero-value byte to byte arrays that are created dynamically by the developer or that are returned by methods that convert unsigned integers to byte arrays (such as <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.UInt16%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.BitConverter.GetBytes%28System.UInt32%29?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.BitConverter.GetBytes%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">但是，你可能需要将此额外的零值字节添加到动态创建的开发人员或通过将无符号的整数转换为字节数组的方法返回的字节数组 (如<ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.UInt16%29?displayProperty=nameWithType&gt;</ph>， <ph id="ph2">&lt;xref:System.BitConverter.GetBytes%28System.UInt32%29?displayProperty=nameWithType&gt;</ph>，和<ph id="ph3">&lt;xref:System.BitConverter.GetBytes%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>When parsing a hexadecimal string, the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> methods assume that if the most significant bit of the first byte in the string is set, or if the first hexadecimal digit of the string represents the lower four bits of a byte value, the value is represented by using two's complement representation.</source>
          <target state="translated">在分析十六进制字符串时<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>方法假定，如果设置字符串中的第一个字节的最高有效位，或如果字符串的第一个十六进制数字表示较低的四位的字节值，则值为通过使用 2 的补数表示形式表示。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>For example, both "FF01" and "F01" represent the decimal value -255.</source>
          <target state="translated">例如，"FF01"和"F01"表示的十进制值-255。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>To differentiate positive from negative values, positive values should include a leading zero.</source>
          <target state="translated">若要区分正负值，正值应包括前导零。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The relevant overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, when they are passed the "X" format string, add a leading zero to the returned hexadecimal string for positive values.</source>
          <target state="translated">相关重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph>方法，在传递"X"格式字符串时, 添加到正值返回的十六进制字符串前导零。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>This makes it possible to round-trip <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values by using the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> methods, as the following example shows.</source>
          <target state="translated">这样便能保存/还原<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值使用<ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph>方法，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>However, the hexadecimal strings created by calling the <ph id="ph1">`ToString`</ph> methods of the other integral types or the overloads of the <ph id="ph2">&lt;xref:System.Convert.ToString%2A&gt;</ph> method that include a <ph id="ph3">`toBase`</ph> parameter do not indicate the sign of the value or the source data type from which the hexadecimal string was derived.</source>
          <target state="translated">但是，通过调用创建的十六进制字符串<ph id="ph1">`ToString`</ph>其他整数类型或的重载的方法<ph id="ph2">&lt;xref:System.Convert.ToString%2A&gt;</ph>方法包括<ph id="ph3">`toBase`</ph>参数不会指示的值或从其源数据类型的符号派生的十六进制字符串。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Successfully instantiating a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value from such a string requires some additional logic.</source>
          <target state="translated">已成功实例化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>从这样的字符串值需要一些其他的逻辑。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example provides one possible implementation.</source>
          <target state="translated">下面的示例提供了一种可能实现。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 结构的新实例。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>An array of byte values in little-endian order.</source>
          <target state="translated">顺序为 little-endian 的字节值的数组。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure using the values in a byte array.</source>
          <target state="translated">使用字节数组中的值初始化 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 结构的新实例。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The individual bytes in the <ph id="ph1">`value`</ph> array should be in little-endian order, from lowest-order byte to highest-order byte.</source>
          <target state="translated">中的单个字节<ph id="ph1">`value`</ph>数组应采用 little-endian 的顺序，从最低位字节到高序位字节。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>For example, the numeric value 1,000,000,000,000 is represented as shown in the following table:</source>
          <target state="translated">例如，数值 1000000000000 由下表中所示：</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Hexadecimal string</source>
          <target state="translated">十六进制字符串</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>E8D4A51000</source>
          <target state="translated">E8D4A51000</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Byte array (lowest index first)</source>
          <target state="translated">字节数组 （首先最低索引）</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>00 10 A5 D4 E8 00</source>
          <target state="translated">00 10 A5 D4 E8 00</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Most methods that convert numeric values to byte arrays, such as <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph>, return byte arrays in little-endian order.</source>
          <target state="translated">将数值转换为字节数组，如的大多数方法<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph>，在 little-endian 的顺序返回字节数组。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The constructor expects positive values in the byte array to use sign-and-magnitude representation, and negative values to use two's complement representation.</source>
          <target state="translated">构造函数需要在要使用符号数值表示法，并且负值使用 2 的补数表示的字节数组中的正值。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>In other words, if the highest-order bit of the highest-order byte in <ph id="ph1">`value`</ph> is set, the resulting <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is negative.</source>
          <target state="translated">换而言之，如果最高顺序位中的最高序位字节的<ph id="ph1">`value`</ph>设置，则结果<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值为负。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Depending on the source of the byte array, this may cause a positive value to be misinterpreted as a negative value.</source>
          <target state="translated">具体取决于的字节数组的源，这可能导致被错误解释为一个负值是正数值。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Byte arrays are typically generated in the following ways:</source>
          <target state="translated">字节数组通常通过以下方式生成：</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>By calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">通过调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Because this method returns a byte array with the highest-order bit of the highest-order byte in the array set to zero for positive values, there is no chance of misinterpreting a positive value as negative.</source>
          <target state="translated">因为此方法对于正值的零到返回数组集中的具有最高序位字节的最高顺序位的字节数组，则不可能的错误解释为负值是正数值。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Unmodified byte arrays created by the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph> method always successfully round-trip when they are passed to the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructor.</source>
          <target state="translated">修改字节数组创建<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph>方法总是能成功往返传递给<ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>By calling the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph> method and passing it a signed integer as a parameter.</source>
          <target state="translated">通过调用<ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph>方法并将其作为参数传递一个带符号的整数。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Because signed integers handle both sign-and-magnitude representation and two's complement representation, there is no chance of misinterpreting a positive value as negative.</source>
          <target state="translated">有符号的整数处理符号数值表示法和 2 的补数表示，因为没有为负值正值可能。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>By calling the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph> method and passing it an unsigned integer as a parameter.</source>
          <target state="translated">通过调用<ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph>方法并将其作为参数传递的无符号的整数。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Because unsigned integers are represented by their magnitude only, positive values can be misinterpreted as negative values.</source>
          <target state="translated">无符号的整数表示由它们的量仅，因为正值可能被曲解为负值。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>To prevent this misinterpretation, you can add a zero-byte value to the end of the array.</source>
          <target state="translated">若要防止此错误解释，可以向数组的末尾添加一个零字节值。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The example in the next section provides an illustration.</source>
          <target state="translated">下一节中的示例所示。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>By creating a byte array either dynamically or statically without necessarily calling any of the previous methods, or by modifying an existing byte array.</source>
          <target state="translated">通过创建一个字节数组可以动态或静态而不一定调用任何之前的方法，或通过修改现有的字节数组。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>To prevent positive values from being misinterpreted as negative values, you can add a zero-byte value to the end of the array.</source>
          <target state="translated">若要防止正值被错误解释为负值，可以向数组的末尾添加一个零字节值。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>If <ph id="ph1">`value`</ph> is an empty <ph id="ph2">&lt;xref:System.Byte&gt;</ph> array, the new <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> object is initialized to a value of <ph id="ph4">&lt;xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>是一个空<ph id="ph2">&lt;xref:System.Byte&gt;</ph>数组，则新<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象初始化为值为<ph id="ph4">&lt;xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the constructor throws an <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>是<ph id="ph2">`null`</ph>，在构造函数引发<ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object from a 5-element byte array whose value is {5, 4, 3, 2, 1}.</source>
          <target state="translated">下面的示例实例化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>从 5 元素字节数组，其值是 {5，4，3，2，1} 的对象。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>It then displays the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, represented as both decimal and hexadecimal numbers, to the console.</source>
          <target state="translated">然后，它显示<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，表示为十进制和十六进制数字，到控制台。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>A comparison of the input array with the text output makes it clear why this overload of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> class constructor creates a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object whose value is 4328719365 (or 0x102030405).</source>
          <target state="translated">文本输出的输入数组的比较可以清楚为什么的此重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>类构造函数创建<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象，其值是 4328719365 （或 0x102030405）。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The first element of the byte array, whose value is 5, defines the value of the lowest-order byte of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object, which is 0x05.</source>
          <target state="translated">字节数组，其值为 5，第一个元素定义的值的最低序位字节<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象，它是 0x05。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The second element of the byte array, whose value is 4, defines the value of the second byte of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object, which is 0x04, and so on.</source>
          <target state="translated">字节数组，其值为 4，第二个元素定义的第二个字节的值<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象，它是 0x04，依次类推。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The following example instantiates a positive and a negative <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, passes them to the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph> method, and then restores the original <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> values from the resulting byte array.</source>
          <target state="translated">下面的示例实例化一个正数和负数<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值时，请将它们传递到<ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph>方法，然后将还原原始<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>生成的字节数组中的值。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Note that the two values are represented by identical byte arrays.</source>
          <target state="translated">请注意两个值由相同的字节数组。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The only difference between them is in the most significant bit of the last element in the byte array.</source>
          <target state="translated">它们之间的唯一区别是中的字节数组中的最后一个元素的最高有效位。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>This bit is set (the value of the byte is 0xFF) if the array is created from a negative <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">此位是设置 （的字节的值为 0xFF），如果数组创建从负<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The bit is not set (the value of the byte is zero), if the array is created from a positive <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">位未设置 （的字节的值为零），如果数组创建一个正从<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The following example illustrates how to make sure that a positive value is not incorrectly instantiated as a negative value by adding a byte whose value is zero to the end of the array.</source>
          <target state="translated">下面的示例演示如何确保，是正数值不正确实例化为一个负值加上其值为 0 到数组末尾的字节。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
          <source>A decimal number.</source>
          <target state="translated">十进制数。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure using a <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值初始化 <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> 结构的新实例。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
          <source>The result of calling this constructor is identical to explicitly assigning a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable.</source>
          <target state="translated">调用此构造函数的结果等同于显式分配<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>值赋给<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>变量。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
          <source>Calling this constructor can cause data loss; any fractional part of <ph id="ph1">`value`</ph> is truncated when instantiating a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">调用此构造函数可能会导致数据丢失;任何小数部分<ph id="ph1">`value`</ph>实例化时截断<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29&gt;</ph> constructor to instantiate a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29&gt;</ph>构造函数实例化<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
          <source>It defines an array of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values, and then passes each value to the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29&gt;</ph> constructor.</source>
          <target state="translated">它定义的数组<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>值，并随后将传递到每个值<ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
          <source>Note that the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value is truncated instead of rounded when it is assigned to the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">请注意，<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>值截断而不是舍入时分配给<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>A double-precision floating-point value.</source>
          <target state="translated">一个双精度浮点值。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure using a double-precision floating-point value.</source>
          <target state="translated">使用双精度浮点值初始化 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 结构的新实例。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>Any fractional part of the <ph id="ph1">`value`</ph> parameter is truncated when instantiating a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">任何小数部分<ph id="ph1">`value`</ph>实例化时，参数将被截断<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>Because of the lack of precision of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type, calling this constructor can cause data loss.</source>
          <target state="translated">由于缺少的精度<ph id="ph1">&lt;xref:System.Double&gt;</ph>调用此构造函数的数据类型可能会导致数据丢失。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that results from calling this constructor is identical to the value that results from explicitly assigning a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>通过调用此构造函数生成的值等同于显式分配的值<ph id="ph2">&lt;xref:System.Double&gt;</ph>值赋给<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Double%29&gt;</ph> constructor to instantiate a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Double%29&gt;</ph>构造函数实例化<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>It also illustrates the loss of precision that may occur when you use the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type.</source>
          <target state="translated">它还阐释使用时可能发生的精度损失<ph id="ph1">&lt;xref:System.Double&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>A <ph id="ph1">&lt;xref:System.Double&gt;</ph> is assigned a large value, which is then assigned to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Double&gt;</ph>分配较大的值，然后分配给<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>As the output shows, this assignment involves a loss of precision.</source>
          <target state="translated">如输出所示，此分配涉及精度损失。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>Both values are then incremented by one.</source>
          <target state="translated">然后，按一递增这两个值。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>The output shows that the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object reflects the changed value, whereas the <ph id="ph2">&lt;xref:System.Double&gt;</ph> object does not.</source>
          <target state="translated">该输出显示<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象会反映更改后的值，而<ph id="ph2">&lt;xref:System.Double&gt;</ph>对象则没有。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值为 <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值为 <ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值为 <ph id="ph2">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>A 32-bit signed integer.</source>
          <target state="translated">32 位带符号整数。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure using a 32-bit signed integer value.</source>
          <target state="translated">使用 32 位带符号整数值初始化 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 结构的新实例。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>There is no loss of precision when instantiating a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object by using this constructor.</source>
          <target state="translated">没有不会丢失精度实例化时<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>通过使用此构造函数的对象。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that results from calling this constructor is identical to the value that results from assigning an <ph id="ph2">&lt;xref:System.Int32&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>通过调用此构造函数生成的值等同于分配的值<ph id="ph2">&lt;xref:System.Int32&gt;</ph>值赋给<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> structure does not include constructors with a parameter of type <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.SByte&gt;</ph>, or <ph id="ph5">&lt;xref:System.UInt16&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>结构不包括其中类型参数的构造函数<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.SByte&gt;</ph>，或<ph id="ph5">&lt;xref:System.UInt16&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>However, the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> type supports the implicit conversion of 8-bit and 16-bit signed and unsigned integers to signed 32-bit integers.</source>
          <target state="translated">但是，<ph id="ph1">&lt;xref:System.Int32&gt;</ph>类型支持的 8 位和 16 位有符号和无符号整数的隐式转换为有符号的 32 位整数。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>As a result, this constructor is called if <ph id="ph1">`value`</ph> is any one of these four integral types.</source>
          <target state="translated">此构造函数调用，因此，如果<ph id="ph1">`value`</ph>是之一，这四个整型。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29&gt;</ph> constructor to instantiate <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values from an array of 32-bit integers.</source>
          <target state="translated">下面的示例调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29&gt;</ph>构造函数实例化<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>32 位整数的数组中的值。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>It also uses implicit conversion to assign each 32-bit integer value to a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable.</source>
          <target state="translated">它还使用隐式转换将每个 32 位整数值赋给<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>变量。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>It then compares the two values to establish that the resulting <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values are the same.</source>
          <target state="translated">然后，它比较的两个值以确定所生成<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值都是相同。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Int64)">
          <source>A 64-bit signed integer.</source>
          <target state="translated">64 位带符号整数。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Int64)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure using a 64-bit signed integer value.</source>
          <target state="translated">使用 64 位带符号整数值初始化 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 结构的新实例。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int64)">
          <source>There is no loss of precision when instantiating a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object by using this constructor.</source>
          <target state="translated">没有不会丢失精度实例化时<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>通过使用此构造函数的对象。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that results from calling this constructor is identical to the value that results from assigning an <ph id="ph2">&lt;xref:System.Int64&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>通过调用此构造函数生成的值等同于分配的值<ph id="ph2">&lt;xref:System.Int64&gt;</ph>值赋给<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int64)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29&gt;</ph> constructor to instantiate <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values from an array of 64-bit integers.</source>
          <target state="translated">下面的示例调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29&gt;</ph>构造函数实例化<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>64 位整数的数组中的值。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int64)">
          <source>It also uses implicit conversion to assign each 64-bit integer value to a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable.</source>
          <target state="translated">它还使用隐式转换将每个 64 位整数值赋给<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>变量。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int64)">
          <source>It then compares the two values to establish that the resulting <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values are the same.</source>
          <target state="translated">然后，它比较的两个值以确定所生成<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值都是相同。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>A single-precision floating-point value.</source>
          <target state="translated">单精度浮点值。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure using a single-precision floating-point value.</source>
          <target state="translated">使用单精度浮点值初始化 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 结构的新实例。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>Any fractional part of the <ph id="ph1">`value`</ph> parameter is truncated when instantiating a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">任何小数部分<ph id="ph1">`value`</ph>实例化时，参数将被截断<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>Because of the lack of precision of the <ph id="ph1">&lt;xref:System.Single&gt;</ph> data type, calling this constructor can result in data loss.</source>
          <target state="translated">由于缺少的精度<ph id="ph1">&lt;xref:System.Single&gt;</ph>调用此构造函数的数据类型可能会导致数据丢失。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that results from calling this constructor is identical to the value that results from explicitly assigning a <ph id="ph2">&lt;xref:System.Single&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>通过调用此构造函数生成的值等同于显式分配的值<ph id="ph2">&lt;xref:System.Single&gt;</ph>值赋给<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Single%29&gt;</ph> constructor to instantiate a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Single%29&gt;</ph>构造函数实例化<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>It also illustrates the loss of precision that may occur when you use the <ph id="ph1">&lt;xref:System.Single&gt;</ph> data type.</source>
          <target state="translated">它还阐释使用时可能发生的精度损失<ph id="ph1">&lt;xref:System.Single&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>A <ph id="ph1">&lt;xref:System.Single&gt;</ph> is assigned a large negative value, which is then assigned to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Single&gt;</ph>分配较大的负值，然后分配给<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>As the output shows, this assignment involves a loss of precision.</source>
          <target state="translated">如输出所示，此分配涉及精度损失。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>Both values are then incremented by one.</source>
          <target state="translated">然后，按一递增这两个值。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>The output shows that the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object reflects the changed value, whereas the <ph id="ph2">&lt;xref:System.Single&gt;</ph> object does not.</source>
          <target state="translated">该输出显示<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象会反映更改后的值，而<ph id="ph2">&lt;xref:System.Single&gt;</ph>对象则没有。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值为 <ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值为 <ph id="ph2">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值为 <ph id="ph2">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
          <source>An unsigned 32-bit integer value.</source>
          <target state="translated">32 位无符号整数值。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure using an unsigned 32-bit integer value.</source>
          <target state="translated">使用 32 位无符号整数值初始化 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 结构的新实例。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
          <source>There is no loss of precision when instantiating a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> using this constructor.</source>
          <target state="translated">没有不会丢失精度实例化时<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>使用此构造函数。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that results from calling this constructor is identical to the value that results from assigning a <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>通过调用此构造函数生成的值等同于分配的值<ph id="ph2">&lt;xref:System.UInt32&gt;</ph>值赋给<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29&gt;</ph> constructor and an assignment statement to initialize <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values from an array of unsigned 32-bit integers.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29&gt;</ph>构造函数和赋值语句初始化<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>从无符号 32 位整数数组的值。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
          <source>It then compares the two values to demonstrate that the two methods of initializing a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value produce identical results.</source>
          <target state="translated">然后，它比较两个的值如下所示的初始化的两个方法<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值产生相同的结果。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.UInt64)">
          <source>An unsigned 64-bit integer.</source>
          <target state="translated">64 位无符号整数。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.UInt64)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure with an unsigned 64-bit integer value.</source>
          <target state="translated">使用 64 位无符号整数值初始化 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 结构的新实例。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.UInt64)">
          <source>There is no loss of precision when instantiating a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> using this constructor.</source>
          <target state="translated">没有不会丢失精度实例化时<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>使用此构造函数。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that results from calling this constructor is identical to the value that results from assigning a <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>通过调用此构造函数生成的值等同于分配的值<ph id="ph2">&lt;xref:System.UInt64&gt;</ph>值赋给<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.UInt64)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29&gt;</ph> constructor to instantiate a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object whose value is equal to <ph id="ph3">&lt;xref:System.UInt64.MaxValue&gt;</ph>.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29&gt;</ph>构造函数实例化<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象，其值是等于<ph id="ph3">&lt;xref:System.UInt64.MaxValue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>A number.</source>
          <target state="translated">数字。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>Gets the absolute value of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象的绝对值。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>The absolute value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的绝对值。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>The absolute value of a number is that number without its sign, as shown in the following table.</source>
          <target state="translated">下表中所示，数字的绝对值的数值为不带符号，该数字。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source><ph id="ph1">`value`</ph> parameter</source>
          <target state="translated"><ph id="ph1">`value`</ph> 参数</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>Return value</source>
          <target state="translated">返回值</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source><ph id="ph1">`value`</ph> &gt;= 0</source>
          <target state="translated"><ph id="ph1">`value`</ph> &gt;= 0</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source><ph id="ph1">`value`</ph> &lt; 0</source>
          <target state="translated"><ph id="ph1">`value`</ph> &lt; 0</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source><ph id="ph1">`value`</ph> * -1</source>
          <target state="translated"><ph id="ph1">`value`</ph> * -1</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Abs%2A&gt;</ph> method is equivalent to the <ph id="ph2">&lt;xref:System.Math.Abs%2A?displayProperty=nameWithType&gt;</ph> method for the primitive numeric types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Abs%2A&gt;</ph>方法相当于<ph id="ph2">&lt;xref:System.Math.Abs%2A?displayProperty=nameWithType&gt;</ph>基元数值类型的方法。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Abs%2A&gt;</ph> method to convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value from two's complement representation to sign-and-magnitude representation before serializing it to a file.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Abs%2A&gt;</ph>方法将转换<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>之前序列化到文件的符号数值表示法到 2 的补数表示形式之间的值。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>Data in the file is then deserialized and assigned to a new <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">文件中的数据然后反序列化和分配给一个新<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to add.</source>
          <target state="translated">要相加的第一个值。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to add.</source>
          <target state="translated">要相加的第二个值。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Adds two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values and returns the result.</source>
          <target state="translated">将两个 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值相加，并返回结果。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The sum of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> 与 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 的和。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support operator overloading or custom operators can use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph> method to perform addition using <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">不支持运算符重载或自定义运算符的语言可以使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph>方法来执行加法使用<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph> method is a useful substitute for the addition operator when instantiating a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable by assigning it a sum that results from addition, as shown in the following example.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph>方法实例化时是有用的替代的加法运算符<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>变量中将其分配添加后，得到的结果的总和，如下面的示例中所示。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Compares two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values and returns an integer that indicates whether the first value is less than, equal to, or greater than the second value.</source>
          <target state="translated">比较两个 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值，并返回一个整数，该整数指示第一个值是小于、等于还是大于第二个值。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>A signed integer that indicates the relative values of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated">一个有符号整数，指示 <ph id="ph1">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 的相对值，如下表所示。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 值</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Condition</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 条件</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 小于零</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="left" /&gt;</ph> is less than <ph id="ph4">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="left" /&gt;</ph> 小于 <ph id="ph4">&lt;paramref name="right" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="left" /&gt;</ph> equals <ph id="ph4">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="left" /&gt;</ph> 等于 <ph id="ph4">&lt;paramref name="right" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 大于零</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph4">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="left" /&gt;</ph> 大于 <ph id="ph4">&lt;paramref name="right" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Although the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> type has no fixed range, comparisons of <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values are not characterized by the lack of precision that characterizes the comparison of floating-point numbers.</source>
          <target state="translated">尽管<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>类型具有没有固定的范围，比较<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值不是通过在缺乏描述的浮点数进行比较的精度。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example compares two <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values that differ by one and that each have 1,896 digits.</source>
          <target state="translated">下面的示例比较两个<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>1 且都是不同的值有 1896 位。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph> method correctly reports that the two values are not equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph>方法将正确报告两个值是否不相等。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Compares the value of this instance with another value and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the other value.</source>
          <target state="translated">将此实例的值与另一个值进行比较，并返回一个整数，该整数指示此实例的值是小于、等于还是大于另一个值。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source>The signed 64-bit integer to compare.</source>
          <target state="translated">要比较的 64 位带符号整数。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source>Compares this instance to a signed 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the signed 64-bit integer.</source>
          <target state="translated">将此实例与 64 位带符号整数进行比较，并返回一个整数，该整数指示此实例的值是小于、等于还是大于 64 位带符号整数的值。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source>A signed integer value that indicates the relationship of this instance to <ph id="ph1">&lt;paramref name="other" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated">一个带符号整数值，指示此实例与 <ph id="ph1">&lt;paramref name="other" /&gt;</ph> 的关系，如下表所示。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 返回值</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 描述</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 小于零</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is less than <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 当前实例小于 <ph id="ph3">&lt;paramref name="other" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance equals <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 当前实例等于 <ph id="ph3">&lt;paramref name="other" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 大于零</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is greater than <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 当前实例大于 <ph id="ph3">&lt;paramref name="other" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source>If <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the <ph id="ph9">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29&gt;</ph> method is called.</source>
          <target state="translated">如果<ph id="ph1">`other`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它将隐式转换为<ph id="ph8">&lt;xref:System.Int64&gt;</ph>值时<ph id="ph9">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29&gt;</ph>调用方法。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source>The following example illustrates the result of calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29&gt;</ph> method with integral values.</source>
          <target state="translated">下面的示例演示调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29&gt;</ph>使用整数值的方法。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>The object to compare.</source>
          <target state="translated">要比较的对象。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>Compares this instance to a second <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</source>
          <target state="translated">将此实例与另一个 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 进行比较，并返回一个整数，该整数指示此实例的值是小于、等于还是大于指定对象的值。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>A signed integer value that indicates the relationship of this instance to <ph id="ph1">&lt;paramref name="other" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated">一个带符号整数值，指示此实例与 <ph id="ph1">&lt;paramref name="other" /&gt;</ph> 的关系，如下表所示。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 返回值</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 描述</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 小于零</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is less than <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 当前实例小于 <ph id="ph3">&lt;paramref name="other" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance equals <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 当前实例等于 <ph id="ph3">&lt;paramref name="other" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 大于零</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is greater than <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 当前实例大于 <ph id="ph3">&lt;paramref name="other" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%2A&gt;</ph> method implements the <ph id="ph2">&lt;xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">此重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%2A&gt;</ph>方法实现<ph id="ph2">&lt;xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>It is used by generic collection objects to order the items in the collection.</source>
          <target state="translated">它用于通过泛型集合对象在集合中的项进行排序。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29&gt;</ph> method to order a list of <ph id="ph2">`StarInfo`</ph> objects.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29&gt;</ph>方法进行排序的列表<ph id="ph2">`StarInfo`</ph>对象。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>Each <ph id="ph1">`StarInfo`</ph> object provides information about a star's name and its distance from the Earth in miles.</source>
          <target state="translated">每个<ph id="ph1">`StarInfo`</ph>对象提供星号的名称和其距离以英里地球有关的信息。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">`StarInfo`</ph> implements the <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph> interface, which enables <ph id="ph3">`StarInfo`</ph> objects to be sorted by generic collection classes.</source>
          <target state="translated"><ph id="ph1">`StarInfo`</ph> 实现<ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph>接口，它使<ph id="ph3">`StarInfo`</ph>要排序的泛型集合类的对象。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>Its <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType&gt;</ph> implementation just wraps a call to <ph id="ph2">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29&gt;</ph>.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType&gt;</ph>实现只需包装对的调用<ph id="ph2">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>The following code then instantiates four <ph id="ph1">`StarInfo`</ph> objects and stores them in a generic <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object.</source>
          <target state="translated">下面的代码然后实例化四个<ph id="ph1">`StarInfo`</ph>对象并将它们存储在一个泛型<ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>After the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType&gt;</ph> method is called, <ph id="ph2">`StarInfo`</ph> objects are displayed in order of their distance from the Earth.</source>
          <target state="translated">后<ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType&gt;</ph>调用方法时，<ph id="ph2">`StarInfo`</ph>地球距离的顺序显示对象。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>The object to compare.</source>
          <target state="translated">要比较的对象。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</source>
          <target state="translated">将此实例与指定对象进行比较，并返回一个整数，该整数指示此实例的值是小于、等于还是大于指定对象的值。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>A signed integer that indicates the relationship of the current instance to the <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> parameter, as shown in the following table.</source>
          <target state="translated">一个带符号整数，指示当前实例与 <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 参数的关系，如下表所示。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 返回值</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 描述</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 小于零</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is less than <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 当前实例小于 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance equals <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 当前实例等于 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 大于零</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is greater than <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>, or the <ph id="ph4">&lt;paramref name="obj" /&gt;</ph> parameter is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 当前实例大于 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>，或者 <ph id="ph4">&lt;paramref name="obj" /&gt;</ph> 参数为 <ph id="ph5">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%2A&gt;</ph> method implements the <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">此重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%2A&gt;</ph>方法实现<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>It is used by non-generic collection objects to order the items in the collection.</source>
          <target state="translated">它用于通过非泛型集合对象在集合中的项进行排序。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>The <ph id="ph1">`obj`</ph> parameter must be one of the following:</source>
          <target state="translated"><ph id="ph1">`obj`</ph>参数必须是以下项之一：</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>An object whose run-time type is <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated">一个对象，其运行时类型是<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>An <ph id="ph1">&lt;xref:System.Object&gt;</ph> variable whose value is <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object&gt;</ph>其值变量<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>If the value of the <ph id="ph1">`obj`</ph> parameter is <ph id="ph2">`null`</ph>, the method returns 1, which indicates that that the current instance is greater than <ph id="ph3">`obj`</ph>.</source>
          <target state="translated">如果值<ph id="ph1">`obj`</ph>参数是<ph id="ph2">`null`</ph>，该方法返回 1，指示当前实例大于<ph id="ph3">`obj`</ph>。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Object%29&gt;</ph> method to compare a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value with each element in an object array</source>
          <target state="translated">下面的示例调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Object%29&gt;</ph>方法来比较<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>与一个对象数组中的每个元素的值</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source>The unsigned 64-bit integer to compare.</source>
          <target state="translated">要比较的 64 位无符号整数。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source>Compares this instance to an unsigned 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the unsigned 64-bit integer.</source>
          <target state="translated">将此实例与 64 位无符号整数进行比较，并返回一个整数，该整数指示此实例的值是小于、等于还是大于 64 位无符号整数的值。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source>A signed integer that indicates the relative value of this instance and <ph id="ph1">&lt;paramref name="other" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated">一个带符号整数，指示此实例和 <ph id="ph1">&lt;paramref name="other" /&gt;</ph> 的相对值，如下表所示。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 返回值</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 描述</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 小于零</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is less than <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 当前实例小于 <ph id="ph3">&lt;paramref name="other" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance equals <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 当前实例等于 <ph id="ph3">&lt;paramref name="other" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 大于零</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is greater than <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 当前实例大于 <ph id="ph3">&lt;paramref name="other" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to be divided.</source>
          <target state="translated">要作为被除数的值。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to divide by.</source>
          <target state="translated">要作为除数的值。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Divides one <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value by another and returns the result.</source>
          <target state="translated">用另一个值除 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值并返回结果。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The quotient of the division.</source>
          <target state="translated">相除后的商。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> method performs integer division; any remainder that results from the division is discarded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph>方法执行整数除法; 相除所得的任何其余部分将被丢弃。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>To perform integer division while preserving the remainder, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> method.</source>
          <target state="translated">若要执行时保留其余部分的整数除法，调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>To retrieve only the remainder, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph> method.</source>
          <target state="translated">若要仅检索余数，调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> method can be used by languages that do not support operator overloading.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph>方法可以由不支持运算符重载的语言。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Its behavior is identical to division using the division operator.</source>
          <target state="translated">其行为等同于使用除法运算符的除法。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">下面的示例创建的数组<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It then uses each element as the quotient in a division operation that uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> method, the division operator (/), and the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> method.</source>
          <target state="translated">然后，它使用每个元素中使用的除法运算的商作为<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph>方法，除法运算符 （/） 和<ph id="ph2">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> is 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> 是 0（零）。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>The value to be divided.</source>
          <target state="translated">要作为被除数的值。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>The value to divide by.</source>
          <target state="translated">要作为除数的值。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>When this method returns, contains a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value that represents the remainder from the division.</source>
          <target state="translated">当此方法返回时，包含一个表示相除余数的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">此参数未经初始化即被传递。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>Divides one <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value by another, returns the result, and returns the remainder in an output parameter.</source>
          <target state="translated">用另一个值除一个 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值，返回结果，并在输出参数中返回余数。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>The quotient of the division.</source>
          <target state="translated">相除后的商。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>This method preserves both the quotient and the remainder that results from integer division.</source>
          <target state="translated">此方法保留商和余数的整数除法运算的结果。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>If you are not interested in the remainder, use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> method or the division operator; if you are only interested in the remainder, use the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph> method.</source>
          <target state="translated">如果你不感的其余部分中，使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph>方法或除法运算符; 如果要仅对感兴趣其余部分中，使用<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>The sign of the returned <ph id="ph1">`remainder`</ph> value is the same as the sign of the <ph id="ph2">`dividend`</ph> parameter.</source>
          <target state="translated">返回的符号<ph id="ph1">`remainder`</ph>值的符号相同<ph id="ph2">`dividend`</ph>参数。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>The behavior of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> method is identical to that of the <ph id="ph2">&lt;xref:System.Math.DivRem%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">行为<ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph>方法等同于的<ph id="ph2">&lt;xref:System.Math.DivRem%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">下面的示例创建的数组<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>It then uses each element as the quotient in a division operation that uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> method, the division operator (/), and the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> method.</source>
          <target state="translated">然后，它使用每个元素中使用的除法运算的商作为<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph>方法，除法运算符 （/） 和<ph id="ph2">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> is 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> 是 0（零）。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns a value that indicates whether two numeric values are equal.</source>
          <target state="translated">返回一个值，该值指示两个数值是否相等。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source>The signed 64-bit integer value to compare.</source>
          <target state="translated">要比较的 64 位带符号整数值。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source>Returns a value that indicates whether the current instance and a signed 64-bit integer have the same value.</source>
          <target state="translated">返回一个值，该值指示当前实例与 64 位带符号整数是否具有相同的值。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signed 64-bit integer and the current instance have the same value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 64 位带符号整数与当前实例具有相同的值，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source>If <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the method is called.</source>
          <target state="translated">如果<ph id="ph1">`other`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它将隐式转换为<ph id="ph8">&lt;xref:System.Int64&gt;</ph>时调用该方法的值。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source>To determine the relationship between the two objects instead of just testing for equality, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">若要确定两个对象而不是只测试相等性之间的关系，请调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object from each integral type except <ph id="ph2">&lt;xref:System.UInt64&gt;</ph>.</source>
          <target state="translated">下面的示例实例化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>从除每个整数类型的对象<ph id="ph2">&lt;xref:System.UInt64&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29&gt;</ph> method to compare the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value with the original integer value that was passed to the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> constructor.</source>
          <target state="translated">然后，它调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29&gt;</ph>方法来比较<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值与传递到的原始整数值<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source>As the output shows, the values are equal in each case.</source>
          <target state="translated">如输出所示，这些值相等中每个用例。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
          <source>The object to compare.</source>
          <target state="translated">要比较的对象。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether the current instance and a specified <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object have the same value.</source>
          <target state="translated">返回一个值，该值指示当前实例与指定的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象是否具有相同的值。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same value; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果此 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象与 <ph id="ph3">&lt;paramref name="other" /&gt;</ph> 具有相同的值，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph> interface and performs slightly better than <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Equals%28System.Object%29&gt;</ph> because it does not have to convert the <ph id="ph3">`other`</ph> parameter to a <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">此方法实现<ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph>接口，并且执行效果略好于<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Equals%28System.Object%29&gt;</ph>因为它不具有要转换<ph id="ph3">`other`</ph>参数<ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
          <source>To determine the relationship between the two <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects instead of just testing for equality, call the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">若要确定这两者之间的关系<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象而不是只测试相等性，调用<ph id="ph2">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
          <source>The following example compares the approximate distance of several stars from Earth with the distance of Epsilon Indi from Earth to determine whether they are equal.</source>
          <target state="translated">下面的示例比较多个星号从地球距离为 Epsilon 为了指明从地球以确定它们是否相等的近似的距离。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
          <source>The example uses each overload of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%2A&gt;</ph> method to test for equality.</source>
          <target state="translated">该示例使用的每个重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%2A&gt;</ph>方法来测试相等性。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>The object to compare.</source>
          <target state="translated">要比较的对象。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>Returns a value that indicates whether the current instance and a specified object have the same value.</source>
          <target state="translated">返回一个值，该值指示当前实例与指定的对象是否具有相同的值。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> argument is a <ph id="ph3">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object, and its value is equal to the value of the current <ph id="ph4">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> instance; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> 参数是 <ph id="ph3">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象，并且其值等于当前 <ph id="ph4">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 实例的值，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph5">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>If the <ph id="ph1">`obj`</ph> argument is not a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, the method returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`obj`</ph>参数不是<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，该方法返回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>The method returns <ph id="ph1">`true`</ph> only if <ph id="ph2">`obj`</ph> is a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> instance whose value is equal to the current instance.</source>
          <target state="translated">该方法返回<ph id="ph1">`true`</ph>才<ph id="ph2">`obj`</ph>是<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>其值是否等于当前实例的实例。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>To determine the relationship between the two objects instead of just testing for equality, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Object%29&gt;</ph> method.</source>
          <target state="translated">若要确定两个对象而不是只测试相等性之间的关系，请调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Object%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>The following example defines parallel <ph id="ph1">&lt;xref:System.Object&gt;</ph> and <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> arrays.</source>
          <target state="translated">下面的示例定义并行<ph id="ph1">&lt;xref:System.Object&gt;</ph>和<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>数组。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>Each element of one array has the same value as the corresponding element of the second array.</source>
          <target state="translated">一个数组的每个元素都有第二个数组的对应元素相同的值。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>As the output from the example shows, the instance in the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> array is considered to be equal to the instance in the <ph id="ph2">&lt;xref:System.Object&gt;</ph> array only if the latter is a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> and their values are equal.</source>
          <target state="translated">如示例所示中的实例输出<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>数组被视为等于中的实例<ph id="ph2">&lt;xref:System.Object&gt;</ph>数组仅当后者为<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>和它们的值是否相等。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.UInt64)">
          <source>The unsigned 64-bit integer to compare.</source>
          <target state="translated">要比较的 64 位无符号整数。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.UInt64)">
          <source>Returns a value that indicates whether the current instance and an unsigned 64-bit integer have the same value.</source>
          <target state="translated">返回一个值，该值指示当前实例与 64 位无符号整数是否具有相同的值。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.UInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance and the unsigned 64-bit integer have the same value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果当前实例与 64 位无符号整数具有相同的值，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.UInt64)">
          <source>To determine the relationship between the two objects instead of just testing for equality, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">若要确定两个对象而不是只测试相等性之间的关系，请调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.UInt64)">
          <source>The following example compares the approximate distance of several stars from Earth with the distance of Epsilon Indi from Earth to determine whether they are equal.</source>
          <target state="translated">下面的示例比较多个星号从地球距离为 Epsilon 为了指明从地球以确定它们是否相等的近似的距离。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.UInt64)">
          <source>The example uses each overload of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%2A&gt;</ph> method to test for equality.</source>
          <target state="translated">该示例使用的每个重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%2A&gt;</ph>方法来测试相等性。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.GetHashCode">
          <source>Returns the hash code for the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object.</source>
          <target state="translated">返回当前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象的哈希代码。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">32 位有符号整数哈希代码。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value.</source>
          <target state="translated">第一个值。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value.</source>
          <target state="translated">第二个值。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Finds the greatest common divisor of two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">查找两个 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的最大公约数。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The greatest common divisor of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 的最大公约数。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The greatest common divisor is the largest number into which the two <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values can be divided without returning a remainder.</source>
          <target state="translated">最大公约数是到其中的最大数目两个<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值可以划分而无需返回余数。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>If the <ph id="ph1">`left`</ph> and <ph id="ph2">`right`</ph> parameters are non-zero numbers, the method always returns at least a value of 1 because all numbers can be divided by 1.</source>
          <target state="translated">如果<ph id="ph1">`left`</ph>和<ph id="ph2">`right`</ph>参数均为非零数字，因为所有数字都除 1 后，该方法将始终返回至少值为 1。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>If either parameter is zero, the method returns the absolute value of the non-zero parameter.</source>
          <target state="translated">如果任一参数为零，该方法将返回非零参数的绝对值的数值。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>If both values are zero, the method returns zero.</source>
          <target state="translated">如果这两个值均为零，则该方法返回零。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Computing the greatest common divisor of very large values of <ph id="ph1">`left`</ph> and <ph id="ph2">`right`</ph> can be a very time-consuming operation.</source>
          <target state="translated">计算最大公约数非常大的值的<ph id="ph1">`left`</ph>和<ph id="ph2">`right`</ph>可以是非常耗时的操作。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value returned by the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A&gt;</ph> method is always positive regardless of the sign of the <ph id="ph2">`left`</ph> and <ph id="ph3">`right`</ph> parameters.</source>
          <target state="translated">返回的值<ph id="ph1">&lt;xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A&gt;</ph>方法始终为正的符号无论<ph id="ph2">`left`</ph>和<ph id="ph3">`right`</ph>参数。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example illustrates a call to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A&gt;</ph> method and the exception handling necessary to provide useful information about an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</source>
          <target state="translated">下面的示例演示调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A&gt;</ph>方法和异常处理提供了一些有用的信息所需<ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The result indicates that the greatest common divisor of these two numbers is 1.</source>
          <target state="translated">结果指示最大公约数的这两个数字为 1。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.IsEven">
          <source>Indicates whether the value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is an even number.</source>
          <target state="translated">指示当前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象的值是否是偶数。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsEven">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is an even number; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象的值是偶数，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsEven">
          <source>This property is a convenience feature that indicates whether a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is evenly divisible by two.</source>
          <target state="translated">此属性是便利功能，该值指示是否<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值是由两个整除。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsEven">
          <source>It is equivalent to the following expression:</source>
          <target state="translated">它等效于以下表达式：</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsEven">
          <source>If the value of the current <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object is <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType&gt;</ph>, the property returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">如果当前的值<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象是<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType&gt;</ph>，该属性返回<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.IsOne">
          <source>Indicates whether the value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is <ph id="ph2">&lt;see cref="P:System.Numerics.BigInteger.One" /&gt;</ph>.</source>
          <target state="translated">指示当前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象的值是否是 <ph id="ph2">&lt;see cref="P:System.Numerics.BigInteger.One" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsOne">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is <ph id="ph3">&lt;see cref="P:System.Numerics.BigInteger.One" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象的值是 <ph id="ph3">&lt;see cref="P:System.Numerics.BigInteger.One" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsOne">
          <source>This property offers significantly better performance than other comparisons with one, such as <ph id="ph1">`thisBigInteger.Equals(BigInteger.One)`</ph>.</source>
          <target state="translated">此属性提供性能明显高于其他比较方法，如<ph id="ph1">`thisBigInteger.Equals(BigInteger.One)`</ph>。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.IsPowerOfTwo">
          <source>Indicates whether the value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is a power of two.</source>
          <target state="translated">指示当前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象的值是否是 2 的幂。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsPowerOfTwo">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is a power of two; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象的值是 2 的幂，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsPowerOfTwo">
          <source>This property determines whether a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value has a single non-zero bit set.</source>
          <target state="translated">此属性确定是否<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值已设置的一个非零位。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsPowerOfTwo">
          <source>This means that it returns <ph id="ph1">`true`</ph> if the value of the current <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object is 1 (that is, 2<bpt id="p1">&lt;sup&gt;</bpt>0<ept id="p1">&lt;/sup&gt;</ept>) or any greater power of two.</source>
          <target state="translated">这意味着，它返回<ph id="ph1">`true`</ph>如果的当前值<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象为 1 (即，2<bpt id="p1">&lt;sup&gt;</bpt>0<ept id="p1">&lt;/sup&gt;</ept>) 或两个任何更高的能力。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsPowerOfTwo">
          <source>It returns <ph id="ph1">`false`</ph> if the value of the current <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object is 0.</source>
          <target state="translated">它将返回<ph id="ph1">`false`</ph>如果的当前值<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象为 0。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.IsZero">
          <source>Indicates whether the value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is <ph id="ph2">&lt;see cref="P:System.Numerics.BigInteger.Zero" /&gt;</ph>.</source>
          <target state="translated">指示当前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象的值是否是 <ph id="ph2">&lt;see cref="P:System.Numerics.BigInteger.Zero" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsZero">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is <ph id="ph3">&lt;see cref="P:System.Numerics.BigInteger.Zero" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象的值是 <ph id="ph3">&lt;see cref="P:System.Numerics.BigInteger.Zero" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsZero">
          <source>This property offers significantly better performance than <ph id="ph1">`BigInteger.Equals(BigInteger.Zero)`</ph>.</source>
          <target state="translated">此属性提供的性能明显优于<ph id="ph1">`BigInteger.Equals(BigInteger.Zero)`</ph>。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns the logarithm of a specified number.</source>
          <target state="translated">返回指定数字的对数。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>The number whose logarithm is to be found.</source>
          <target state="translated">要查找其对数的数字。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>Returns the natural (base <ph id="ph1">&lt;see langword="e" /&gt;</ph>) logarithm of a specified number.</source>
          <target state="translated">返回指定数字的自然对数（底为 <ph id="ph1">&lt;see langword="e" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>The natural (base <ph id="ph1">&lt;see langword="e" /&gt;</ph>) logarithm of <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, as shown in the table in the Remarks section.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph> 的自然对数（底为 <ph id="ph1">&lt;see langword="e" /&gt;</ph>），如“备注”部分中的表所示。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">`value`</ph> parameter is specified as a base 10 number.</source>
          <target state="translated"><ph id="ph1">`value`</ph>参数指定为底数 10。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>The precise return value of this method depends on the sign of <ph id="ph1">`value`</ph>, as the following table shows.</source>
          <target state="translated">此方法的值取决于的符号的精确返回<ph id="ph1">`value`</ph>下, 表所示。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>Sign of <ph id="ph1">`value`</ph> parameter</source>
          <target state="translated">登录的<ph id="ph1">`value`</ph>参数</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>Return value</source>
          <target state="translated">返回值</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>Positive</source>
          <target state="translated">正</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>The natural logarithm of <ph id="ph1">`value`</ph>; that is, ln <ph id="ph2">`value`</ph>, or log e<ph id="ph3">`value`</ph>.</source>
          <target state="translated">自然对数<ph id="ph1">`value`</ph>; 即，ln <ph id="ph2">`value`</ph>，或日志 e<ph id="ph3">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>Zero</source>
          <target state="translated">零</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.NegativeInfinity&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>Negative</source>
          <target state="translated">负数</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>To calculate the base 10 logarithm of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, call the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Log10%2A&gt;</ph> method.</source>
          <target state="translated">若要计算的 10 为底数<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值时，请调用<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Log10%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>To calculate the logarithm of a number in another base, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29&gt;</ph> method.</source>
          <target state="translated">若要计算的另一个基数的数字的对数，调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>You can find the square root of a number by calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%2A&gt;</ph> method along with the <ph id="ph2">&lt;xref:System.Math.Exp%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">你可以通过调用找到的数字的平方根<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%2A&gt;</ph>方法以及<ph id="ph2">&lt;xref:System.Math.Exp%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>Note that the result is <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> if the result is greater than <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">请注意，结果是<ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>如果结果大于<ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>The following example calculates the square root of each element in an array of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">下面的示例计算数组中的每个元素的平方根<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>This method corresponds to the <ph id="ph1">&lt;xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType&gt;</ph> method for the primitive numeric types.</source>
          <target state="translated">此方法对应于<ph id="ph1">&lt;xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType&gt;</ph>基元数值类型的方法。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>The natural log of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is out of range of the <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> data type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的自然对数超出了 <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> 数据类型的范围。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>A number whose logarithm is to be found.</source>
          <target state="translated">要查找其对数的数字。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>The base of the logarithm.</source>
          <target state="translated">对数的底。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>Returns the logarithm of a specified number in a specified base.</source>
          <target state="translated">返回指定数字在使用指定底时的对数。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>The base <ph id="ph1">&lt;paramref name="baseValue" /&gt;</ph> logarithm of <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, as shown in the table in the Remarks section.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseValue" /&gt;</ph> 的以 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 为底的对数，如“备注”部分中的表所示。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>The <ph id="ph1">`value`</ph> and <ph id="ph2">`baseValue`</ph> parameters are specified as base 10 numbers.</source>
          <target state="translated"><ph id="ph1">`value`</ph>和<ph id="ph2">`baseValue`</ph>作为基 10 个数字指定了参数。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>The precise return value of the method depends on the sign of <ph id="ph1">`value`</ph> and on the sign and value of <ph id="ph2">`baseValue`</ph>, as the following table shows.</source>
          <target state="translated">值的方法取决于的符号的精确返回<ph id="ph1">`value`</ph>和上的登录和值<ph id="ph2">`baseValue`</ph>下, 表所示。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> parameter</source>
          <target state="translated"><ph id="ph1">`value`</ph> 参数</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`baseValue`</ph> parameter</source>
          <target state="translated"><ph id="ph1">`baseValue`</ph> 参数</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>Return value</source>
          <target state="translated">返回值</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> &gt; 0</source>
          <target state="translated"><ph id="ph1">`value`</ph> &gt; 0</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>(0 &lt; <ph id="ph1">`baseValue`</ph> &lt; 1) -or-(<ph id="ph2">`baseValue`</ph> &gt; 1)</source>
          <target state="translated">(0 &lt; <ph id="ph1">`baseValue`</ph> &lt; 1) -or-(<ph id="ph2">`baseValue`</ph> &gt; 1)</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>logbaseValue(<ph id="ph1">`value`</ph>)</source>
          <target state="translated">logbaseValue(<ph id="ph1">`value`</ph>)</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> &lt; 0</source>
          <target state="translated"><ph id="ph1">`value`</ph> &lt; 0</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>(any value)</source>
          <target state="translated">（任意值）</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>(any value)</source>
          <target state="translated">（任意值）</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`baseValue`</ph> &lt; 0</source>
          <target state="translated"><ph id="ph1">`baseValue`</ph> &lt; 0</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> != 1</source>
          <target state="translated"><ph id="ph1">`value`</ph> != 1</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`baseValue`</ph> = 0</source>
          <target state="translated"><ph id="ph1">`baseValue`</ph> = 0</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> != 1</source>
          <target state="translated"><ph id="ph1">`value`</ph> != 1</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>(any value)</source>
          <target state="translated">（任意值）</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>(any value)</source>
          <target state="translated">（任意值）</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`baseValue`</ph> = 1</source>
          <target state="translated"><ph id="ph1">`baseValue`</ph> = 1</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> = 0</source>
          <target state="translated"><ph id="ph1">`value`</ph> = 0</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>0 &lt; <ph id="ph1">`baseValue`</ph> &lt; 1</source>
          <target state="translated">0 &lt; <ph id="ph1">`baseValue`</ph> &lt; 1</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> = 0</source>
          <target state="translated"><ph id="ph1">`value`</ph> = 0</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`baseValue`</ph> &gt; 1</source>
          <target state="translated"><ph id="ph1">`baseValue`</ph> &gt; 1</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> = 1</source>
          <target state="translated"><ph id="ph1">`value`</ph> = 1</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`baseValue`</ph> = 0</source>
          <target state="translated"><ph id="ph1">`baseValue`</ph> = 0</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> = 1</source>
          <target state="translated"><ph id="ph1">`value`</ph> = 1</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>To calculate the base 10 logarithm of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, call the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Log10%2A&gt;</ph> method.</source>
          <target state="translated">若要计算的 10 为底数<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值时，请调用<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Log10%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>To calculate the natural logarithm of a number, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29&gt;</ph> method.</source>
          <target state="translated">若要计算数字的自然对数，调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>This method corresponds to the <ph id="ph1">&lt;xref:System.Math.Log%2A?displayProperty=nameWithType&gt;</ph> method for the primitive numeric types.</source>
          <target state="translated">此方法对应于<ph id="ph1">&lt;xref:System.Math.Log%2A?displayProperty=nameWithType&gt;</ph>基元数值类型的方法。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>The log of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is out of range of the <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> data type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的对数超出了 <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> 数据类型的范围。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>A number whose logarithm is to be found.</source>
          <target state="translated">要查找其对数的数字。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>Returns the base 10 logarithm of a specified number.</source>
          <target state="translated">返回指定数字以 10 为底的对数。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>The base 10 logarithm of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, as shown in the table in the Remarks section.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的以 10 为底的对数，如“备注”部分中的表所示。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">`value`</ph> parameter is specified as a base 10 number.</source>
          <target state="translated"><ph id="ph1">`value`</ph>参数指定为底数 10。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>The precise return value of the method depends on the sign of <ph id="ph1">`value`</ph>, as the following table shows.</source>
          <target state="translated">值的方法取决于的符号的精确返回<ph id="ph1">`value`</ph>下, 表所示。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>Sign of value parameter</source>
          <target state="translated">值参数的符号</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>Return value</source>
          <target state="translated">返回值</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>Positive</source>
          <target state="translated">正</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>The base 10 log of <ph id="ph1">`value`</ph>; that is, log10<ph id="ph2">`value`</ph>.</source>
          <target state="translated">基 10 日志<ph id="ph1">`value`</ph>; 即，log10<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>Zero</source>
          <target state="translated">零</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>Negative</source>
          <target state="translated">负数</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>To calculate the natural logarithm of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, call the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">若要计算的自然对数<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值时，请调用<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>To calculate the logarithm of a number in another base, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">若要计算的另一个基数的数字的对数，调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>This method corresponds to the <ph id="ph1">&lt;xref:System.Math.Log10%2A?displayProperty=nameWithType&gt;</ph> method for the primitive numeric types.</source>
          <target state="translated">此方法对应于<ph id="ph1">&lt;xref:System.Math.Log10%2A?displayProperty=nameWithType&gt;</ph>基元数值类型的方法。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>The base 10 log of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is out of range of the <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> data type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的以 10 为底的对数超出了 <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> 数据类型的范围。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns the larger of two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">返回两个 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值中的较大者。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> parameter, whichever is larger.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 参数中较大的一个。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>This method corresponds to the <ph id="ph1">&lt;xref:System.Math.Max%2A?displayProperty=nameWithType&gt;</ph> method for primitive numeric types.</source>
          <target state="translated">此方法对应于<ph id="ph1">&lt;xref:System.Math.Max%2A?displayProperty=nameWithType&gt;</ph>基元数值类型的方法。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Max%2A&gt;</ph> method to select the largest number in an array of <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Max%2A&gt;</ph>方法来在一个数组中选择的最大数<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns the smaller of two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">返回两个 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值中的较小者。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> parameter, whichever is smaller.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 参数中较小的一个。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>This method corresponds to the <ph id="ph1">&lt;xref:System.Math.Min%2A?displayProperty=nameWithType&gt;</ph> method for primitive numeric types.</source>
          <target state="translated">此方法对应于<ph id="ph1">&lt;xref:System.Math.Min%2A?displayProperty=nameWithType&gt;</ph>基元数值类型的方法。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Min%2A&gt;</ph> method to select the smallest number in an array of <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Min%2A&gt;</ph>方法来选择最少数量的数组中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.MinusOne">
          <source>Gets a value that represents the number negative one (-1).</source>
          <target state="translated">获取一个表示数字负一 (-1) 的值。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.MinusOne">
          <source>An integer whose value is negative one (-1).</source>
          <target state="translated">其值为负一 (-1) 的整数。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.MinusOne">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.MinusOne%2A&gt;</ph> property is used to compare a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value to -1 or to assign -1 to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.MinusOne%2A&gt;</ph>属性用于比较<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值为-1 或分配-1 到<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The number to raise to the <bpt id="p1">&lt;c&gt;</bpt>exponent<ept id="p1">&lt;/c&gt;</ept> power.</source>
          <target state="translated">要计算 <bpt id="p1">&lt;c&gt;</bpt>exponent<ept id="p1">&lt;/c&gt;</ept> 次幂的数字。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The exponent to raise <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> by.</source>
          <target state="translated">对 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 进行幂运算的指数。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The number by which to divide <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> raised to the <bpt id="p2">&lt;c&gt;</bpt>exponent<ept id="p2">&lt;/c&gt;</ept> power.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 的 <bpt id="p2">&lt;c&gt;</bpt>exponent<ept id="p2">&lt;/c&gt;</ept> 次幂要除以的数值。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Performs modulus division on a number raised to the power of another number.</source>
          <target state="translated">对以某个数为底、以另一个数为指数的幂执行模数除法。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The remainder after dividing <ph id="ph1">&lt;paramref name="value" /&gt;</ph><bpt id="p1">&lt;sup&gt;</bpt>exponent<ept id="p1">&lt;/sup&gt;</ept> by <ph id="ph2">&lt;paramref name="modulus" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;paramref name="value" /&gt;</ph><bpt id="p1">&lt;sup&gt;</bpt>exponent<ept id="p1">&lt;/sup&gt;</ept> 除以 <ph id="ph2">&lt;paramref name="modulus" /&gt;</ph> 后的余数。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ModPow%2A&gt;</ph> method evaluates the following expression:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.ModPow%2A&gt;</ph>方法计算以下表达式：</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>(baseValue ^ exponent) Mod modulus</source>
          <target state="translated">(baseValue ^ 指数)Mod 取模</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>To perform exponentiation on <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values without modulus division, use the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Pow%2A&gt;</ph> method.</source>
          <target state="translated">若要对执行求幂<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值而无需模数除法使用<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Pow%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example provides a simple illustration of calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ModPow%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例提供了调用的简单说明<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ModPow%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;paramref name="modulus" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="modulus" /&gt;</ph> 为零。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;paramref name="exponent" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="exponent" /&gt;</ph> 为负数。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first number to multiply.</source>
          <target state="translated">要相乘的第一个数。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second number to multiply.</source>
          <target state="translated">要相乘的第二个数。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns the product of two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">返回两个 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的乘积。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The product of the <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph> parameters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> 与 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 参数的乘积。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph> method is implemented for languages that do not support operator overloading.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph>会为不支持运算符重载的语言实现方法。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Its behavior is identical to multiplication using the multiplication operator.</source>
          <target state="translated">其行为等同于使用乘法运算符的乘法。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph> method is a useful substitute for the multiplication operator when instantiating a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable by assigning it a product that results from multiplication, as shown in the following example.</source>
          <target state="translated">此外，<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph>方法是乘法运算符的有用替代方案，在实例化时<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>变量中将其分配的产品的乘法，得到的结果，如下面的示例中所示。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>If necessary, this method automatically performs implicit conversion of other integral types to <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects.</source>
          <target state="translated">如果有必要，此方法会自动执行到其他整数类型的隐式转换<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>This is illustrated in the example in the next section, where the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph> method is passed two <ph id="ph2">&lt;xref:System.Int64&gt;</ph> values.</source>
          <target state="translated">在下一节中的示例阐释了这其中<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph>方法传递两个<ph id="ph2">&lt;xref:System.Int64&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example tries to perform multiplication with two long integers.</source>
          <target state="translated">下面的示例尝试执行乘法的两个长整型。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Because the result exceeds the range of a long integer, an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> is thrown, and the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph> method is called to handle the multiplication.</source>
          <target state="translated">因为的结果超出了长整数范围<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>引发，与<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph>调用方法来处理乘法。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Note that C# requires that you use either the <ph id="ph1">`checked`</ph> keyword (as in this example) or the <ph id="ph2">`/checked+`</ph> compiler option to make sure an exception is thrown on a numeric overflow.</source>
          <target state="translated">请注意，C# 需要您使用两个<ph id="ph1">`checked`</ph>（如此示例所示） 的关键字或<ph id="ph2">`/checked+`</ph>编译器选项，以确保数字溢出引发异常。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>The value to negate.</source>
          <target state="translated">要求反的值。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>Negates a specified <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">对指定的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值求反。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>The result of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter multiplied by negative one (-1).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数乘以负一 (-1) 的结果。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>Negation obtains the additive inverse of a number.</source>
          <target state="translated">求反获取大量的加法逆元。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>The additive inverse of a number is a number that produces a value of zero when it is added to the original number.</source>
          <target state="translated">大量的加法逆元是生成的值为 0 时将其添加到原始数的数字。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph> method is implemented for languages that do not support custom operators.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph>会为不支持自定义运算符的语言实现方法。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>Its behavior is identical to negation using the unary negation operator.</source>
          <target state="translated">其行为等同于使用一元求反运算符的求反。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph> method is a useful substitute for the negation operator when instantiating a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable, as shown in the following example.</source>
          <target state="translated">此外，<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph>方法是求反运算符的有用替代方案，在实例化时<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>变量，如下面的示例中所示。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>The following example illustrates three ways to negate the value of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">下面的示例演示三种方式要求反的值<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.One">
          <source>Gets a value that represents the number one (1).</source>
          <target state="translated">获取一个表示数字一 (1) 的值。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.One">
          <source>An object whose value is one (1).</source>
          <target state="translated">其值为一 (1) 的对象。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.One">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.One%2A&gt;</ph> property is usually used to compare a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value to 1 or to assign 1 to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.One%2A&gt;</ph>属性通常用于比较<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值为 1 或分配 1 到<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to add.</source>
          <target state="translated">要相加的第一个值。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to add.</source>
          <target state="translated">要相加的第二个值。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Adds the values of two specified <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> objects.</source>
          <target state="translated">将两个指定的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象的值相加。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The sum of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> 与 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 的和。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Addition%2A&gt;</ph> method defines the addition operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Addition%2A&gt;</ph>方法定义的加法运算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value.</source>
          <target state="translated">第一个值。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value.</source>
          <target state="translated">第二个值。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Performs a bitwise <ph id="ph1">&lt;see langword="And" /&gt;</ph> operation on two <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">对两个 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值执行按位 <ph id="ph1">&lt;see langword="And" /&gt;</ph> 运算。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The result of the bitwise <ph id="ph1">&lt;see langword="And" /&gt;</ph> operation.</source>
          <target state="translated">按位 <ph id="ph1">&lt;see langword="And" /&gt;</ph> 运算的结果。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseAnd%2A&gt;</ph> method defines the bitwise <ph id="ph2">`And`</ph> operation for <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseAnd%2A&gt;</ph>方法定义的按位<ph id="ph2">`And`</ph>操作<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The bitwise <ph id="ph1">`And`</ph> operation sets a result bit only if the corresponding bits in <ph id="ph2">`left`</ph> and <ph id="ph3">`right`</ph> are also set, as shown in the following table.</source>
          <target state="translated">按位<ph id="ph1">`And`</ph>操作设置结果位仅当相应位<ph id="ph2">`left`</ph>和<ph id="ph3">`right`</ph>还设置下, 表中所示。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit in <ph id="ph1">`left`</ph></source>
          <target state="translated">中的位 <ph id="ph1">`left`</ph></target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit in <ph id="ph1">`right`</ph></source>
          <target state="translated">中的位 <ph id="ph1">`right`</ph></target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit in result</source>
          <target state="translated">Result 中位</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseAnd%2A&gt;</ph> method enables code such as the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseAnd%2A&gt;</ph>方法使代码如下所示：</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseAnd%2A&gt;</ph> method performs the bitwise <ph id="ph2">`And`</ph> operation on two <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> values as if they were both in two's complement representation with virtual sign extension.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseAnd%2A&gt;</ph>方法执行的按位<ph id="ph2">`And`</ph>对两个操作<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值就像它们是采用二者带虚拟符号扩展的补数表示形式。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value.</source>
          <target state="translated">第一个值。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value.</source>
          <target state="translated">第二个值。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Performs a bitwise <ph id="ph1">&lt;see langword="Or" /&gt;</ph> operation on two <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">对两个 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值执行按位 <ph id="ph1">&lt;see langword="Or" /&gt;</ph> 运算。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The result of the bitwise <ph id="ph1">&lt;see langword="Or" /&gt;</ph> operation.</source>
          <target state="translated">按位 <ph id="ph1">&lt;see langword="Or" /&gt;</ph> 运算的结果。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseOr%2A&gt;</ph> method defines the bitwise <ph id="ph2">`Or`</ph> operation for <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseOr%2A&gt;</ph>方法定义的按位<ph id="ph2">`Or`</ph>操作<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The bitwise <ph id="ph1">`Or`</ph> operation sets a result bit only if either or both of the corresponding bits in <ph id="ph2">`left`</ph> and <ph id="ph3">`right`</ph> are set, as shown in the following table.</source>
          <target state="translated">按位<ph id="ph1">`Or`</ph>操作设置结果位仅当一个或两个中的相应位<ph id="ph2">`left`</ph>和<ph id="ph3">`right`</ph>设置下, 表中所示。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit in <ph id="ph1">`left`</ph></source>
          <target state="translated">中的位 <ph id="ph1">`left`</ph></target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit in <ph id="ph1">`right`</ph></source>
          <target state="translated">中的位 <ph id="ph1">`right`</ph></target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit in result</source>
          <target state="translated">Result 中位</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseOr%2A&gt;</ph> method enables code such as the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseOr%2A&gt;</ph>方法使代码如下所示：</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseOr%2A&gt;</ph> method performs the bitwise <ph id="ph2">`Or`</ph> operation on two <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> values as if they were both in two's complement representation with virtual sign extension.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseOr%2A&gt;</ph>方法执行的按位<ph id="ph2">`Or`</ph>对两个操作<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值就像它们是采用二者带虚拟符号扩展的补数表示形式。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>The value to decrement.</source>
          <target state="translated">要递减的值。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>Decrements a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value by 1.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值减 1。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>The value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter decremented by 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数减 1 后的值。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Decrement%2A&gt;</ph> method defines the decrement operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Decrement%2A&gt;</ph>方法定义的减法运算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>For example:</source>
          <target state="translated">例如:</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>Because <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects are immutable, the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.op_Decrement%2A&gt;</ph> operator creates a new <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> object whose value is one less than the <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> object represented by <ph id="ph5">`value`</ph>.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象是不可变，<ph id="ph2">&lt;xref:System.Numerics.BigInteger.op_Decrement%2A&gt;</ph>运算符创建一个新<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象，其值是一个小于<ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph>所表示的对象<ph id="ph5">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>This means that repeated calls to <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Decrement%2A&gt;</ph> may be expensive.</source>
          <target state="translated">这意味着，重复调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Decrement%2A&gt;</ph>可能成本很高。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to be divided.</source>
          <target state="translated">要作为被除数的值。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to divide by.</source>
          <target state="translated">要作为除数的值。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Divides a specified <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value by another specified <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value by using integer division.</source>
          <target state="translated">通过使用整除，将指定的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值除以另一个指定的 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The integral result of the division.</source>
          <target state="translated">相除的整数结果。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Division%2A&gt;</ph> method defines the division operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Division%2A&gt;</ph>方法定义的除法运算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators and operator overloading can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义的运算符和运算符重载的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">此运算符的等效方法是 <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">下面的示例创建的数组<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It then uses each element as the quotient in a division operation that uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> method, the division operator (/), and the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> method.</source>
          <target state="translated">然后，它使用每个元素中使用的除法运算的商作为<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph>方法，除法运算符 （/） 和<ph id="ph2">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> is 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> 是 0（零）。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns a value that indicates whether two values are equal.</source>
          <target state="translated">返回一个值，该值指示两个值是否相等。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a signed long integer value and a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value are equal.</source>
          <target state="translated">返回一个值，该值指示带符号长整数值与 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否相等。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parameters have the same value; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 与 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 参数具有相同的值，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph> method defines the equality comparison operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph>方法定义的相等性比较运算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph> instance method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph>改为实例方法。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>If <ph id="ph1">`left`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`left`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它将隐式转换为<ph id="ph8">&lt;xref:System.Int64&gt;</ph>时执行此操作的值。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value and a signed long integer value are equal.</source>
          <target state="translated">返回一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值与带符号长整数值是否相等。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parameters have the same value; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 与 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 参数具有相同的值，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph> method defines the equality comparison operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph>方法定义的相等性比较运算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph> instance method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph>改为实例方法。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>If <ph id="ph1">`right`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`right`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它将隐式转换为<ph id="ph8">&lt;xref:System.Int64&gt;</ph>时执行此操作的值。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether the values of two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> objects are equal.</source>
          <target state="translated">返回一个值，该值指示两个 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象的值是否相等。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parameters have the same value; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 与 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 参数具有相同的值，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph> method defines the operation of the equality operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph>方法定义的相等运算符的运算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> instance method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>改为实例方法。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value and an unsigned long integer value are equal.</source>
          <target state="translated">返回一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值与无符号长整数值是否相等。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parameters have the same value; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 与 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 参数具有相同的值，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph> method defines the equality comparison operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph>方法定义的相等性比较运算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> instance method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>改为实例方法。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether an unsigned long integer value and a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value are equal.</source>
          <target state="translated">返回一个值，该值指示无符号长整数值与 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否相等。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parameters have the same value; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 与 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 参数具有相同的值，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph> method defines the equality comparison operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph>方法定义的相等性比较运算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> instance method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>改为实例方法。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value.</source>
          <target state="translated">第一个值。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value.</source>
          <target state="translated">第二个值。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Performs a bitwise exclusive <ph id="ph1">&lt;see langword="Or" /&gt;</ph> (<ph id="ph2">&lt;see langword="XOr" /&gt;</ph>) operation on two <ph id="ph3">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">对两个 <ph id="ph3">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值执行按位异 <ph id="ph1">&lt;see langword="Or" /&gt;</ph> (<ph id="ph2">&lt;see langword="XOr" /&gt;</ph>) 运算。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The result of the bitwise <ph id="ph1">&lt;see langword="Or" /&gt;</ph> operation.</source>
          <target state="translated">按位 <ph id="ph1">&lt;see langword="Or" /&gt;</ph> 运算的结果。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The result of a bitwise exclusive <ph id="ph1">`Or`</ph> operation is <ph id="ph2">`true`</ph> if the values of the two bits are different; otherwise, it is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">按位异的结果<ph id="ph1">`Or`</ph>操作<ph id="ph2">`true`</ph>如果两位的值不同; 否则为它是<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following table illustrates the exclusive <ph id="ph1">`Or`</ph> operation.</source>
          <target state="translated">下表说明了独占<ph id="ph1">`Or`</ph>操作。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit x in <ph id="ph1">`left`</ph></source>
          <target state="translated">中的位 x <ph id="ph1">`left`</ph></target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit x in <ph id="ph1">`right`</ph></source>
          <target state="translated">中的位 x <ph id="ph1">`right`</ph></target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Return value</source>
          <target state="translated">返回值</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_ExclusiveOr%2A&gt;</ph> method enables code such as the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_ExclusiveOr%2A&gt;</ph>方法使代码如下所示：</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_ExclusiveOr%2A&gt;</ph> method performs the bitwise exclusive <ph id="ph2">`Or`</ph> operation on two <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> values as if they were both in two's complement representation with virtual sign extension.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_ExclusiveOr%2A&gt;</ph>方法执行按位异<ph id="ph2">`Or`</ph>对两个操作<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值就像它们是采用二者带虚拟符号扩展的补数表示形式。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Defines an explicit conversion between a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object and another type.</source>
          <target state="translated">定义 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象与其他类型之间的显式转换。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">要转换为 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object to a <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">定义从 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 对象到 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的显式转换。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数值的对象。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>Any fractional part of the <ph id="ph1">`value`</ph> parameter is truncated before conversion.</source>
          <target state="translated">任何小数部分<ph id="ph1">`value`</ph>参数被截断转换前。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定义的类型到其中或从中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>可将对象转换。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>Because the conversion from <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> can involve truncating any fractional part of <ph id="ph3">`value`</ph>, language compilers do not perform this conversion automatically.</source>
          <target state="translated">因为从转换<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>到<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>可能涉及截断任何小数部分<ph id="ph3">`value`</ph>，语言编译器不会自动执行此转换。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反，它们执行转换仅当 （在 C# 中) 强制转换运算符或转换函数 (如<ph id="ph1">`CType`</ph>在 Visual Basic 中) 使用。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否则，它们显示编译器错误。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>For languages that do not support custom operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">对于不支持自定义运算符的语言，替代方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>The following example converts the individual elements in an array of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values to <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects, and then displays the result of each conversion.</source>
          <target state="translated">以下示例将转换的数组中的各个元素<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>值复制到<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象，，然后显示每个转换的结果。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>Note that any fractional part of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value is truncated during the conversion.</source>
          <target state="translated">请注意对任何小数部分的一部分<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>在转换期间截断值。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">要转换为 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value to a <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">定义从 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 值到 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的显式转换。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数值的对象。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>Any fractional part of the <ph id="ph1">`value`</ph> parameter is truncated before conversion.</source>
          <target state="translated">任何小数部分<ph id="ph1">`value`</ph>参数被截断转换前。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定义的类型到其中或从中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>可将对象转换。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>Because the conversion from <ph id="ph1">&lt;xref:System.Double&gt;</ph> to <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> can involve truncating any fractional part of <ph id="ph3">`value`</ph>, language compilers do not perform this conversion automatically.</source>
          <target state="translated">因为从转换<ph id="ph1">&lt;xref:System.Double&gt;</ph>到<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>可能涉及截断任何小数部分<ph id="ph3">`value`</ph>，语言编译器不会自动执行此转换。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反，它们执行转换仅当 （在 C# 中) 强制转换运算符或转换函数 (如<ph id="ph1">`CType`</ph>在 Visual Basic 中) 使用。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否则，它们显示编译器错误。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>For languages that do not support custom operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Double%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">对于不支持自定义运算符的语言，替代方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Double%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>The following example converts the individual elements in an array of <ph id="ph1">&lt;xref:System.Double&gt;</ph> values to <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects, and then displays the result of each conversion.</source>
          <target state="translated">以下示例将转换的数组中的各个元素<ph id="ph1">&lt;xref:System.Double&gt;</ph>值复制到<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象，，然后显示每个转换的结果。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>Note that any fractional part of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value is truncated during the conversion.</source>
          <target state="translated">请注意对任何小数部分的一部分<ph id="ph1">&lt;xref:System.Double&gt;</ph>在转换期间截断值。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值为 <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值为 <ph id="ph2">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值为 <ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated">要转换为 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to an unsigned byte value.</source>
          <target state="translated">定义从 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象到无符号字节值的显式转换。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数值的对象。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定义的类型到其中或从中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>可将对象转换。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">语言编译器不会自动执行此转换，因为它会导致数据丢失。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CByte`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反，它们执行转换仅当 （在 C# 中) 强制转换运算符或转换函数 (如<ph id="ph1">`CType`</ph>或<ph id="ph2">`CByte`</ph>在 Visual Basic 中) 使用。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否则，它们显示编译器错误。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Byte&gt;</ph> data type.</source>
          <target state="translated">因为此操作定义收缩转换，它可以引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>如果在运行时<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的范围超出了<ph id="ph3">&lt;xref:System.Byte&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>There is no loss of precision in the resulting <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value if the conversion is successful.</source>
          <target state="translated">不会丢失精度在随后出现的<ph id="ph1">&lt;xref:System.Byte&gt;</ph>值转换是否成功。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> values.</source>
          <target state="translated">下面的示例演示的转换<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>到<ph id="ph2">&lt;xref:System.Byte&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Byte&gt;</ph> data type.</source>
          <target state="translated">它还可以处理<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>引发因为<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的范围超出了<ph id="ph3">&lt;xref:System.Byte&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值小于 <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值大于 <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">要转换为 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to a <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">定义从 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象到 <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> 值的显式转换。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数值的对象。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定义的类型到其中或从中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>可将对象转换。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">语言编译器不会自动执行此转换，因为它会导致数据丢失。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CDec`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反，它们执行转换仅当 （在 C# 中) 强制转换运算符或转换函数 (如<ph id="ph1">`CType`</ph>或<ph id="ph2">`CDec`</ph>在 Visual Basic 中) 使用。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> data type.</source>
          <target state="translated">因为此操作定义收缩转换，它可以引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>如果在运行时<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的范围超出了<ph id="ph3">&lt;xref:System.Decimal&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">下面的示例演示的转换<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>到<ph id="ph2">&lt;xref:System.Decimal&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> data type.</source>
          <target state="translated">它还可以处理<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>引发因为<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的范围超出了<ph id="ph3">&lt;xref:System.Decimal&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值小于 <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值大于 <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">要转换为 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to a <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">定义从 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象到 <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> 值的显式转换。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数值的对象。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定义的类型到其中或从中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>可将对象转换。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">语言编译器不会自动执行此转换，因为它会导致数据丢失。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CDbl`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反，它们执行转换仅当 （在 C# 中) 强制转换运算符或转换函数 (如<ph id="ph1">`CType`</ph>或<ph id="ph2">`CDbl`</ph>在 Visual Basic 中) 使用。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>Because the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value can be outside the range of the <ph id="ph2">&lt;xref:System.Double&gt;</ph> data type, this operation is a narrowing conversion.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值可以是外部的范围<ph id="ph2">&lt;xref:System.Double&gt;</ph>数据类型，此操作都是收缩转换。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>If the conversion is unsuccessful, it does not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">如果转换失败，它不会引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>Instead, if the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is less than <ph id="ph2">&lt;xref:System.Double.MinValue?displayProperty=nameWithType&gt;</ph>, the resulting <ph id="ph3">&lt;xref:System.Double&gt;</ph> value is <ph id="ph4">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">相反，如果<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值是小于<ph id="ph2">&lt;xref:System.Double.MinValue?displayProperty=nameWithType&gt;</ph>，生成<ph id="ph3">&lt;xref:System.Double&gt;</ph>值是<ph id="ph4">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>If the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is greater than <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>, the resulting <ph id="ph3">&lt;xref:System.Double&gt;</ph> value is <ph id="ph4">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值是否大于<ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>，生成<ph id="ph3">&lt;xref:System.Double&gt;</ph>值是<ph id="ph4">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>The conversion of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> may involve a loss of precision.</source>
          <target state="translated">转换<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>到<ph id="ph2">&lt;xref:System.Double&gt;</ph>可能会丢失精度。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>In some cases, the loss of precision may cause the casting or conversion operation to succeed even if the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph2">&lt;xref:System.Double&gt;</ph> data type.</source>
          <target state="translated">在某些情况下，精度损失可能会导致成功执行该强制转换或转换操作即使<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的范围超出了<ph id="ph2">&lt;xref:System.Double&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>The following example provides an illustration.</source>
          <target state="translated">下面的示例进行了这方面的演示。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>It assigns the maximum value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> to two <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> variables, increments one <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable by 9.999e291, and tests the two variables for equality.</source>
          <target state="translated">它将分配的最大值<ph id="ph1">&lt;xref:System.Double&gt;</ph>到两个<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>变量，将一个<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>变量通过 9.999 e 291,，并测试两个变量是否相等。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>As expected, the call to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> method shows that they are unequal.</source>
          <target state="translated">按预期对的调用方式<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>方法演示，它们不相等。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>However, the conversion of the larger <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value back to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> succeeds, although the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value now exceeds <ph id="ph4">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">但是，将较大的转换<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>该值转换回<ph id="ph2">&lt;xref:System.Double&gt;</ph>成功，尽管<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值现在超出<ph id="ph4">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">下面的示例演示的转换<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>到<ph id="ph2">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>The value to convert to a 16-bit signed integer.</source>
          <target state="translated">要转换为 16 位带符号整数的值。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to a 16-bit signed integer value.</source>
          <target state="translated">定义从 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象到 16 位带符号整数值的显式转换。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数值的对象。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定义的类型到其中或从中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>可将对象转换。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">语言编译器不会自动执行此转换，因为它会导致数据丢失。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CShort`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反，它们执行转换仅当 （在 C# 中) 强制转换运算符或转换函数 (如<ph id="ph1">`CType`</ph>或<ph id="ph2">`CShort`</ph>在 Visual Basic 中) 使用。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否则，它们显示编译器错误。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Int16&gt;</ph> data type.</source>
          <target state="translated">因为此操作定义收缩转换，它可以引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>如果在运行时<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的范围超出了<ph id="ph3">&lt;xref:System.Int16&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>There is no loss of precision in the resulting <ph id="ph1">&lt;xref:System.Int16&gt;</ph> value if the conversion is successful.</source>
          <target state="translated">不会丢失精度在随后出现的<ph id="ph1">&lt;xref:System.Int16&gt;</ph>值转换是否成功。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.Int16&gt;</ph> values.</source>
          <target state="translated">下面的示例演示的转换<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>到<ph id="ph2">&lt;xref:System.Int16&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Int16&gt;</ph> data type.</source>
          <target state="translated">它还可以处理<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>引发因为<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的范围超出了<ph id="ph3">&lt;xref:System.Int16&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值小于 <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值大于 <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>The value to convert to a 32-bit signed integer.</source>
          <target state="translated">要转换为 32 位带符号整数的值。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to a 32-bit signed integer value.</source>
          <target state="translated">定义从 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象到 32 位带符号整数值的显式转换。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数值的对象。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定义的类型到其中或从中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>可将对象转换。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">语言编译器不会自动执行此转换，因为它会导致数据丢失。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CInt`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反，它们执行转换仅当 （在 C# 中) 强制转换运算符或转换函数 (如<ph id="ph1">`CType`</ph>或<ph id="ph2">`CInt`</ph>在 Visual Basic 中) 使用。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否则，它们显示编译器错误。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Int32&gt;</ph> data type.</source>
          <target state="translated">因为此操作定义收缩转换，它可以引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>如果在运行时<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的范围超出了<ph id="ph3">&lt;xref:System.Int32&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>There is no loss of precision in the resulting <ph id="ph1">&lt;xref:System.Int16&gt;</ph> value if the conversion is successful.</source>
          <target state="translated">不会丢失精度在随后出现的<ph id="ph1">&lt;xref:System.Int16&gt;</ph>值转换是否成功。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.Int32&gt;</ph> values.</source>
          <target state="translated">下面的示例演示的转换<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>到<ph id="ph2">&lt;xref:System.Int32&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Int32&gt;</ph> data type.</source>
          <target state="translated">它还可以处理<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>引发因为<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的范围超出了<ph id="ph3">&lt;xref:System.Int32&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值小于 <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值大于 <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>The value to convert to a 64-bit signed integer.</source>
          <target state="translated">要转换为 64 位带符号整数的值。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to a 64-bit signed integer value.</source>
          <target state="translated">定义从 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象到 64 位带符号整数值的显式转换。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数值的对象。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定义的类型到其中或从中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>可将对象转换。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">语言编译器不会自动执行此转换，因为它会导致数据丢失。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CLng`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反，它们执行转换仅当 （在 C# 中) 强制转换运算符或转换函数 (如<ph id="ph1">`CType`</ph>或<ph id="ph2">`CLng`</ph>在 Visual Basic 中) 使用。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否则，它们显示编译器错误。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Int64&gt;</ph> data type.</source>
          <target state="translated">因为此操作定义收缩转换，它可以引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>如果在运行时<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的范围超出了<ph id="ph3">&lt;xref:System.Int64&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.Int64&gt;</ph> values.</source>
          <target state="translated">下面的示例演示的转换<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>到<ph id="ph2">&lt;xref:System.Int64&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Int64&gt;</ph> data type.</source>
          <target state="translated">它还可以处理<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>引发因为<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的范围超出了<ph id="ph3">&lt;xref:System.Int64&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值小于 <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值大于 <ph id="ph2">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>The value to convert to a signed 8-bit value.</source>
          <target state="translated">要转换为 8 位带符号值的值。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to a signed 8-bit value.</source>
          <target state="translated">定义从 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象到 8 位带符号值的显式转换。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">此 API 不兼容 CLS。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>.</source>
          <target state="translated">符合的替代方法是 <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数值的对象。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定义的类型到其中或从中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>可将对象转换。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">语言编译器不会自动执行此转换，因为它会导致数据丢失。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CSByte`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反，它们执行转换仅当 （在 C# 中) 强制转换运算符或转换函数 (如<ph id="ph1">`CType`</ph>或<ph id="ph2">`CSByte`</ph>在 Visual Basic 中) 使用。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否则，它们显示编译器错误。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.SByte&gt;</ph> data type.</source>
          <target state="translated">因为此操作定义收缩转换，它可以引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>如果在运行时<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的范围超出了<ph id="ph3">&lt;xref:System.SByte&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>There is no loss of precision in the resulting <ph id="ph1">&lt;xref:System.SByte&gt;</ph> value if the conversion is successful.</source>
          <target state="translated">不会丢失精度在随后出现的<ph id="ph1">&lt;xref:System.SByte&gt;</ph>值转换是否成功。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.SByte&gt;</ph> values.</source>
          <target state="translated">下面的示例演示的转换<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>到<ph id="ph2">&lt;xref:System.SByte&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.SByte&gt;</ph> data type.</source>
          <target state="translated">它还可以处理<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>引发因为<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的范围超出了<ph id="ph3">&lt;xref:System.SByte&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值小于 <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值大于 <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>The value to convert to a single-precision floating-point value.</source>
          <target state="translated">要转换为单精度浮点值的值。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to a single-precision floating-point value.</source>
          <target state="translated">定义从 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象到单精度浮点值的显式转换。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>An object that contains the closest possible representation of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">一个对象，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数的尽可能精确的表示形式。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定义的类型到其中或从中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>可将对象转换。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss or a loss of precision.</source>
          <target state="translated">语言编译器不会自动执行此转换，因为它会导致数据丢失或精度损失。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CSng`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反，它们执行转换仅当 （在 C# 中) 强制转换运算符或转换函数 (如<ph id="ph1">`CType`</ph>或<ph id="ph2">`CSng`</ph>在 Visual Basic 中) 使用。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否则，它们显示编译器错误。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>Because the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value can be outside the range of the <ph id="ph2">&lt;xref:System.Single&gt;</ph> data type, this operation is a narrowing conversion.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值可以是外部的范围<ph id="ph2">&lt;xref:System.Single&gt;</ph>数据类型，此操作都是收缩转换。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>If the conversion is unsuccessful, it does not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">如果转换失败，它不会引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>Instead, if the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is less than <ph id="ph2">&lt;xref:System.Single.MinValue?displayProperty=nameWithType&gt;</ph>, the resulting <ph id="ph3">&lt;xref:System.Single&gt;</ph> value is <ph id="ph4">&lt;xref:System.Single.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">相反，如果<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值是小于<ph id="ph2">&lt;xref:System.Single.MinValue?displayProperty=nameWithType&gt;</ph>，生成<ph id="ph3">&lt;xref:System.Single&gt;</ph>值是<ph id="ph4">&lt;xref:System.Single.NegativeInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>If the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is greater than <ph id="ph2">&lt;xref:System.Single.MaxValue?displayProperty=nameWithType&gt;</ph>, the resulting <ph id="ph3">&lt;xref:System.Single&gt;</ph> value is <ph id="ph4">&lt;xref:System.Single.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值是否大于<ph id="ph2">&lt;xref:System.Single.MaxValue?displayProperty=nameWithType&gt;</ph>，生成<ph id="ph3">&lt;xref:System.Single&gt;</ph>值是<ph id="ph4">&lt;xref:System.Single.PositiveInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>The conversion of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to a <ph id="ph2">&lt;xref:System.Single&gt;</ph> may involve a loss of precision.</source>
          <target state="translated">转换<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>到<ph id="ph2">&lt;xref:System.Single&gt;</ph>可能会丢失精度。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>In some cases, the loss of precision may cause the casting or conversion operation to succeed even if the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph2">&lt;xref:System.Single&gt;</ph> data type.</source>
          <target state="translated">在某些情况下，精度损失可能会导致成功执行该强制转换或转换操作即使<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的范围超出了<ph id="ph2">&lt;xref:System.Single&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>The following example provides an illustration.</source>
          <target state="translated">下面的示例进行了这方面的演示。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>It assigns the maximum value of a <ph id="ph1">&lt;xref:System.Single&gt;</ph> to two <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> variables, increments one <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable by 9.999e291, and tests the two variables for equality.</source>
          <target state="translated">它将分配的最大值<ph id="ph1">&lt;xref:System.Single&gt;</ph>到两个<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>变量，将一个<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>变量通过 9.999 e 291,，并测试两个变量是否相等。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>As expected, the call to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> method shows that they are unequal.</source>
          <target state="translated">按预期对的调用方式<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>方法演示，它们不相等。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>However, the conversion of the larger <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value back to a <ph id="ph2">&lt;xref:System.Single&gt;</ph> succeeds, although the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value now exceeds <ph id="ph4">&lt;xref:System.Single.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">但是，将较大的转换<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>该值转换回<ph id="ph2">&lt;xref:System.Single&gt;</ph>成功，尽管<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值现在超出<ph id="ph4">&lt;xref:System.Single.MaxValue?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.Single&gt;</ph> values.</source>
          <target state="translated">下面的示例演示的转换<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>到<ph id="ph2">&lt;xref:System.Single&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>The value to convert to an unsigned 16-bit integer.</source>
          <target state="translated">要转换为 16 位无符号整数的值。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to an unsigned 16-bit integer value.</source>
          <target state="translated">定义从 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象到 16 位无符号整数值的显式转换。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">此 API 不兼容 CLS。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">符合的替代方法是 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数值的对象。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定义的类型到其中或从中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>可将对象转换。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">语言编译器不会自动执行此转换，因为它会导致数据丢失。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CUShort`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反，它们执行转换仅当 （在 C# 中) 强制转换运算符或转换函数 (如<ph id="ph1">`CType`</ph>或<ph id="ph2">`CUShort`</ph>在 Visual Basic 中) 使用。</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否则，它们显示编译器错误。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.UInt16&gt;</ph> data type.</source>
          <target state="translated">因为此操作定义收缩转换，它可以引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>如果在运行时<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的范围超出了<ph id="ph3">&lt;xref:System.UInt16&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>There is no loss of precision in the resulting <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> value if the conversion is successful.</source>
          <target state="translated">不会丢失精度在随后出现的<ph id="ph1">&lt;xref:System.UInt16&gt;</ph>值转换是否成功。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.UInt16&gt;</ph> values.</source>
          <target state="translated">下面的示例演示的转换<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>到<ph id="ph2">&lt;xref:System.UInt16&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.UInt16&gt;</ph> data type.</source>
          <target state="translated">它还可以处理<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>引发因为<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的范围超出了<ph id="ph3">&lt;xref:System.UInt16&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值小于 <ph id="ph2">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值大于 <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>The value to convert to an unsigned 32-bit integer.</source>
          <target state="translated">要转换为 32 位无符号整数的值。</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to an unsigned 32-bit integer value.</source>
          <target state="translated">定义从 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象到 32 位无符号整数值的显式转换。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">此 API 不兼容 CLS。</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">符合的替代方法是 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数值的对象。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定义的类型到其中或从中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>可将对象转换。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">语言编译器不会自动执行此转换，因为它会导致数据丢失。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CUInt`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反，它们执行转换仅当 （在 C# 中) 强制转换运算符或转换函数 (如<ph id="ph1">`CType`</ph>或<ph id="ph2">`CUInt`</ph>在 Visual Basic 中) 使用。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否则，它们显示编译器错误。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.UInt32&gt;</ph> data type.</source>
          <target state="translated">因为此操作定义收缩转换，它可以引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>如果在运行时<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的范围超出了<ph id="ph3">&lt;xref:System.UInt32&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>There is no loss of precision in the resulting <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> value if the conversion is successful.</source>
          <target state="translated">不会丢失精度在随后出现的<ph id="ph1">&lt;xref:System.UInt32&gt;</ph>值转换是否成功。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> values.</source>
          <target state="translated">下面的示例演示的转换<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>到<ph id="ph2">&lt;xref:System.UInt32&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.UInt32&gt;</ph> data type.</source>
          <target state="translated">它还可以处理<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>引发因为<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的范围超出了<ph id="ph3">&lt;xref:System.UInt32&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值小于 <ph id="ph2">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值大于 <ph id="ph2">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>The value to convert to an unsigned 64-bit integer.</source>
          <target state="translated">要转换为 64 位无符号整数的值。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to an unsigned 64-bit integer value.</source>
          <target state="translated">定义从 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象到 64 位无符号整数值的显式转换。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">此 API 不兼容 CLS。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">符合的替代方法是 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数值的对象。</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定义的类型到其中或从中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>可将对象转换。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">语言编译器不会自动执行此转换，因为它会导致数据丢失。</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CULng`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反，它们执行转换仅当 （在 C# 中) 强制转换运算符或转换函数 (如<ph id="ph1">`CType`</ph>或<ph id="ph2">`CULng`</ph>在 Visual Basic 中) 使用。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否则，它们显示编译器错误。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.UInt64&gt;</ph> data type.</source>
          <target state="translated">因为此操作定义收缩转换，它可以引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>如果在运行时<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的范围超出了<ph id="ph3">&lt;xref:System.UInt64&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>There is no loss of precision in the resulting <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> value if the conversion is successful.</source>
          <target state="translated">不会丢失精度在随后出现的<ph id="ph1">&lt;xref:System.UInt64&gt;</ph>值转换是否成功。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> values.</source>
          <target state="translated">下面的示例演示的转换<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>到<ph id="ph2">&lt;xref:System.UInt64&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.UInt64&gt;</ph> data type.</source>
          <target state="translated">它还可以处理<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>引发因为<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的范围超出了<ph id="ph3">&lt;xref:System.UInt64&gt;</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.UInt64.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值小于 <ph id="ph2">&lt;see cref="F:System.UInt64.MinValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值大于 <ph id="ph2">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">要转换为 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value to a <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">定义从 <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 值到 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的显式转换。</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数值的对象。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>Any fractional part of the <ph id="ph1">`value`</ph> parameter is truncated before conversion.</source>
          <target state="translated">任何小数部分<ph id="ph1">`value`</ph>参数被截断转换前。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定义的类型到其中或从中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>可将对象转换。</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>Because the conversion from <ph id="ph1">&lt;xref:System.Single&gt;</ph> to <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> can involve truncating any fractional part of <ph id="ph3">`value`</ph>, language compilers do not perform this conversion automatically.</source>
          <target state="translated">因为从转换<ph id="ph1">&lt;xref:System.Single&gt;</ph>到<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>可能涉及截断任何小数部分<ph id="ph3">`value`</ph>，语言编译器不会自动执行此转换。</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反，它们执行转换仅当 （在 C# 中) 强制转换运算符或转换函数 (如<ph id="ph1">`CType`</ph>在 Visual Basic 中) 使用。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否则，它们显示编译器错误。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>For languages that do not support custom operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Single%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">对于不支持自定义运算符的语言，替代方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Single%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>The following example converts the individual elements in an array of <ph id="ph1">&lt;xref:System.Single&gt;</ph> values to <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects, and then displays the result of each conversion.</source>
          <target state="translated">以下示例将转换的数组中的各个元素<ph id="ph1">&lt;xref:System.Single&gt;</ph>值复制到<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象，，然后显示每个转换的结果。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>Note that any fractional part of a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value is truncated during the conversion.</source>
          <target state="translated">请注意对任何小数部分的一部分<ph id="ph1">&lt;xref:System.Single&gt;</ph>在转换期间截断值。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值为 <ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值为 <ph id="ph2">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值为 <ph id="ph2">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns a value that indicates whether a specified value is greater than another specified value.</source>
          <target state="translated">返回一个值，该值指示指定的值是否大于另一个指定的值。</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit signed integer is greater than a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">返回一个值，该值指示 64 位带符号整数是否大于 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 大于 <ph id="ph2">&lt;paramref name="left" /&gt;</ph>，则为 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph> method defines the operation of the greater than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph>方法定义的操作的大于运算符<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> instance method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>改为实例方法。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">此外可以调用某些语言<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>If <ph id="ph1">`left`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`left`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它将隐式转换为<ph id="ph8">&lt;xref:System.Int64&gt;</ph>时执行此操作的值。</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> is greater than a 64-bit signed integer value.</source>
          <target state="translated">返回一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 是否大于 64 位带符号整数值。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 大于 <ph id="ph2">&lt;paramref name="left" /&gt;</ph>，则为 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph> method defines the operation of the greater than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph>方法定义的操作的大于运算符<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">此外可以调用某些语言<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph>方法直接，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>If <ph id="ph1">`right`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`right`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它将隐式转换为<ph id="ph8">&lt;xref:System.Int64&gt;</ph>时执行此操作的值。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is greater than another <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">返回一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否大于另一个 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 大于 <ph id="ph2">&lt;paramref name="left" /&gt;</ph>，则为 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph> method defines the operation of the greater than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph>方法定义的操作的大于运算符<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">它们还可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is greater than a 64-bit unsigned integer.</source>
          <target state="translated">返回一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否大于 64 位无符号整数。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 大于 <ph id="ph2">&lt;paramref name="left" /&gt;</ph>，则为 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph> method defines the operation of the greater than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph>方法定义的操作的大于运算符<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">此外可以调用某些语言<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph>方法直接，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is greater than a 64-bit unsigned integer.</source>
          <target state="translated">返回一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否大于 64 位无符号整数。</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 大于 <ph id="ph2">&lt;paramref name="left" /&gt;</ph>，则为 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph> method defines the operation of the greater than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph>方法定义的操作的大于运算符<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">此外可以调用某些语言<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns a value that indicates whether a specified value is greater than or equal to another specified value.</source>
          <target state="translated">返回一个值，该值指示指定的值是否大于等于另一个指定的值。</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit signed integer is greater than or equal to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">返回一个值，该值指示 64 位带符号整数是否大于等于 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 大于 <ph id="ph2">&lt;paramref name="left" /&gt;</ph>，则为 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph> method defines the operation of the greater than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph>方法定义的操作大于或等于运算符<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">此外可以调用某些语言<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>If <ph id="ph1">`left`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`left`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它将隐式转换为<ph id="ph8">&lt;xref:System.Int64&gt;</ph>时执行此操作的值。</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is greater than or equal to a 64-bit signed integer value.</source>
          <target state="translated">返回一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否大于等于 64 位带符号整数值。</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 大于 <ph id="ph2">&lt;paramref name="left" /&gt;</ph>，则为 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph> method defines the operation of the greater than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph>方法定义的操作大于或等于运算符<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">此外可以调用某些语言<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph>方法直接，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>If <ph id="ph1">`right`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`right`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它将隐式转换为<ph id="ph8">&lt;xref:System.Int64&gt;</ph>时执行此操作的值。</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is greater than or equal to another <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">返回一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否大于等于另一个 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 大于 <ph id="ph2">&lt;paramref name="left" /&gt;</ph>，则为 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph> method defines the operation of the greater than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph>方法定义的操作大于或等于运算符<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">此外可以调用某些语言<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is greater than or equal to a 64-bit unsigned integer value.</source>
          <target state="translated">返回一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否大于等于 64 位无符号整数值。</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 大于 <ph id="ph2">&lt;paramref name="left" /&gt;</ph>，则为 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph> method defines the operation of the greater than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph>方法定义的操作大于或等于运算符<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">此外可以调用某些语言<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph>方法直接，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit unsigned integer is greater than or equal to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">返回一个值，该值指示 64 位无符号整数是否大于等于 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 大于 <ph id="ph2">&lt;paramref name="left" /&gt;</ph>，则为 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph> method defines the operation of the greater than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph>方法定义的操作大于或等于运算符<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">此外可以调用某些语言<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Defines an implicit conversion between a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object and another type.</source>
          <target state="translated">定义 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象与其他类型之间的隐式转换。</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">要转换为 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of an unsigned byte to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">定义从无符号字节到 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的隐式转换。</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数值的对象。</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>Any fractional part of the <ph id="ph1">`value`</ph> parameter is truncated before conversion.</source>
          <target state="translated">任何小数部分<ph id="ph1">`value`</ph>参数被截断转换前。</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">对于不支持隐式运算符的语言，替代方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph>方法定义的类型，或从其编译器可自动转换到<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>而无需使用显式强制转换运算符 （在 C# 中) 或调用转换函数 （在 Visual Basic 中) 的值。</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它们扩大转换，不会丢失数据，不会引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">此重载使编译器能够处理从转换<ph id="ph1">&lt;xref:System.Byte&gt;</ph>值赋给<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">要转换为 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of a signed 16-bit integer to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">定义从 16 位带符号整数到 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的隐式转换。</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数值的对象。</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">对于不支持隐式运算符的语言，替代方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph>方法定义的类型，或从其编译器可自动转换到<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>而无需使用显式强制转换运算符 （在 C# 中) 或调用转换函数 （在 Visual Basic 中) 的值。</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它们扩大转换，不会丢失数据，不会引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Int16&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">此重载使编译器能够处理从转换<ph id="ph1">&lt;xref:System.Int16&gt;</ph>值赋给<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">要转换为 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of a signed 32-bit integer to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">定义从 32 位带符号整数到 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的隐式转换。</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数值的对象。</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">对于不支持隐式运算符的语言，替代方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph>方法定义的类型，或从其编译器可自动转换到<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>而无需使用显式强制转换运算符 （在 C# 中) 或调用转换函数 （在 Visual Basic 中) 的值。</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它们扩大转换，不会丢失数据，不会引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Int32&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">此重载使编译器能够处理从转换<ph id="ph1">&lt;xref:System.Int32&gt;</ph>值赋给<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">要转换为 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of a signed 64-bit integer to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">定义从 64 位带符号整数到 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的隐式转换。</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数值的对象。</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">对于不支持隐式运算符的语言，替代方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph>方法定义的类型，或从其编译器可自动转换到<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>而无需使用显式强制转换运算符 （在 C# 中) 或调用转换函数 （在 Visual Basic 中) 的值。</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它们扩大转换，不会丢失数据，不会引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Int64&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">此重载使编译器能够处理从转换<ph id="ph1">&lt;xref:System.Int64&gt;</ph>值赋给<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">要转换为 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of an 8-bit signed integer to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">定义从 8 位带符号整数到 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的隐式转换。</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">此 API 不兼容 CLS。</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" /&gt;</ph>.</source>
          <target state="translated">符合的替代方法是 <ph id="ph1">&lt;see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数值的对象。</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">对于不支持隐式运算符的语言，替代方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph>方法定义的类型，或从其编译器可自动转换到<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>而无需使用显式强制转换运算符 （在 C# 中) 或调用转换函数 （在 Visual Basic 中) 的值。</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它们扩大转换，不会丢失数据，不会引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.SByte&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">此重载使编译器能够处理从转换<ph id="ph1">&lt;xref:System.SByte&gt;</ph>值赋给<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">要转换为 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of a 16-bit unsigned integer to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">定义从 16 位无符号整数到 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的隐式转换。</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">此 API 不兼容 CLS。</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">符合的替代方法是 <ph id="ph1">&lt;see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数值的对象。</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">对于不支持隐式运算符的语言，替代方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph>方法定义的类型，或从其编译器可自动转换到<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>而无需使用显式强制转换运算符 （在 C# 中) 或调用转换函数 （在 Visual Basic 中) 的值。</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它们扩大转换，不会丢失数据，不会引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">此重载使编译器能够处理从转换<ph id="ph1">&lt;xref:System.UInt16&gt;</ph>值赋给<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">要转换为 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of a 32-bit unsigned integer to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">定义从 32 位无符号整数到 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的隐式转换。</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">此 API 不兼容 CLS。</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">符合的替代方法是 <ph id="ph1">&lt;see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数值的对象。</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">对于不支持隐式运算符的语言，替代方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph>方法定义的类型，或从其编译器可自动转换到<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>而无需使用显式强制转换运算符 （在 C# 中) 或调用转换函数 （在 Visual Basic 中) 的值。</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它们扩大转换，不会丢失数据，不会引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">此重载使编译器能够处理从转换<ph id="ph1">&lt;xref:System.UInt32&gt;</ph>值赋给<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">要转换为 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of a 64-bit unsigned integer to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">定义从 64 位无符号整数到 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的隐式转换。</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">此 API 不兼容 CLS。</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">符合的替代方法是 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数值的对象。</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">对于不支持隐式运算符的语言，替代方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph>方法定义的类型，或从其编译器可自动转换到<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>而无需使用显式强制转换运算符 （在 C# 中) 或调用转换函数 （在 Visual Basic 中) 的值。</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它们扩大转换，不会丢失数据，不会引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">此重载使编译器能够处理从转换<ph id="ph1">&lt;xref:System.UInt64&gt;</ph>值赋给<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>The value to increment.</source>
          <target state="translated">要递增的值。</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>Increments a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value by 1.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值加 1。</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>The value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter incremented by 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数加 1 后的值。</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph> method defines the increment operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph>方法定义的加法运算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>Some languages (such as Visual Basic) that lack an increment operator or do not support operator overloading can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">缺少递增运算符或不支持运算符重载的某些语言 （如 Visual Basic 中) 可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph>方法直接，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>Because <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects are immutable, the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph> operator creates a new <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> object whose value is one more than the <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> object represented by <ph id="ph5">`value`</ph>.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象是不可变，<ph id="ph2">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph>运算符创建一个新<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象，其值是一个多个<ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph>所表示的对象<ph id="ph5">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>Therefore, repeated calls to <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph> may be expensive.</source>
          <target state="translated">因此，重复调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph>可能成本很高。</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns a value that indicates whether two numeric values are not equal.</source>
          <target state="translated">返回一个值，该值指示两个数值是否不相等。</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit signed integer and a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value are not equal.</source>
          <target state="translated">返回一个值，该值指示 64 位带符号整数与 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否不相等。</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 不相等，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph> method defines the operation of the inequality operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph>方法定义的不相等运算符的运算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can test for inequality by using one of the following techniques:</source>
          <target state="translated">不支持自定义运算符的语言可以测试不相等，通过使用以下方法之一：</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> instance method, which indicates the relationship between a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> and a signed long integer value.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>实例方法，指示之间的关系<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>和符号长整数值。</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph> instance method and reversing its value.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph>实例方法和反转其值。</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>If <ph id="ph1">`left`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`left`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它将隐式转换为<ph id="ph8">&lt;xref:System.Int64&gt;</ph>时执行此操作的值。</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value and a 64-bit signed integer are not equal.</source>
          <target state="translated">返回一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值与 64 位带符号整数是否不相等。</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 不相等，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph> method defines the operation of the inequality operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph>方法定义的不相等运算符的运算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>Languages that do not support custom operators can test for inequality by using one of the following techniques:</source>
          <target state="translated">不支持自定义运算符的语言可以测试不相等，通过使用以下方法之一：</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method, which indicates the relationship between a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> and a signed long integer value.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>方法，指示之间的关系<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>和符号长整数值。</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method and reversing its value.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph>方法并反转其值。</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>If <ph id="ph1">`right`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`right`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它将隐式转换为<ph id="ph8">&lt;xref:System.Int64&gt;</ph>时执行此操作的值。</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> objects have different values.</source>
          <target state="translated">返回一个值，该值指示两个 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象是否具有不同的值。</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 不相等，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph> method defines the operation of the inequality operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph>方法定义的不相等运算符的运算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can test for inequality by using one of the following techniques:</source>
          <target state="translated">不支持自定义运算符的语言可以测试不相等，通过使用以下方法之一：</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType&gt;</ph> method, which indicates the relationship between two <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType&gt;</ph>方法，指示两个之间的关系<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> method and reversing its value.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>方法并反转其值。</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value and a 64-bit unsigned integer are not equal.</source>
          <target state="translated">返回一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值与 64 位无符号整数是否不相等。</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 不相等，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph> method defines the operation of the inequality operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph>方法定义的不相等运算符的运算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>Languages that do not support custom operators can test for inequality by using one of the following techniques:</source>
          <target state="translated">不支持自定义运算符的语言可以测试不相等，通过使用以下方法之一：</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method, which indicates the relationship between a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> and an unsigned long integer value.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法，指示之间的关系<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>和无符号长整数值。</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method and reversing its value.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法并反转其值。</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit unsigned integer and a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value are not equal.</source>
          <target state="translated">返回一个值，该值指示 64 位无符号整数与 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否不相等。</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 不相等，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph> method defines the operation of the inequality operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph>方法定义的不相等运算符的运算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can test for inequality by using one of the following techniques:</source>
          <target state="translated">不支持自定义运算符的语言可以测试不相等，通过使用以下方法之一：</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method, which indicates the relationship between a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> and an unsigned long integer value.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法，指示之间的关系<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>和无符号长整数值。</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method and reversing its value.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法并反转其值。</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>The value whose bits are to be shifted.</source>
          <target state="translated">要移动其位的值。</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>The number of bits to shift <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> to the left.</source>
          <target state="translated">将 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 向左移动的位数。</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>Shifts a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value a specified number of bits to the left.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值向左移动指定的位数。</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>A value that has been shifted to the left by the specified number of bits.</source>
          <target state="translated">一个已向左移动指定位数的值。</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LeftShift%2A&gt;</ph> method defines the operation of the bitwise left-shift operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LeftShift%2A&gt;</ph>方法定义的按位左移运算符的运算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>Unlike the bitwise left-shift operation with integer primitives, the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LeftShift%2A&gt;</ph> method preserves the sign of the original <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">与整数基元与按位左移运算不同<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LeftShift%2A&gt;</ph>方法保留原始的符号<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>Languages that do not support custom operators can perform a bitwise left-shift operation by multiplying <ph id="ph1">`value`</ph> by <ph id="ph2">`BigInteger.Pow(2, shift)`</ph>.</source>
          <target state="translated">不支持自定义运算符的语言可以通过将乘以执行按位左移运算<ph id="ph1">`value`</ph>通过<ph id="ph2">`BigInteger.Pow(2, shift)`</ph>。</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>The following example shows that the results are identical to the results of using this operator.</source>
          <target state="translated">下面的示例演示的结果与使用此运算符的结果相同。</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns a value that indicates whether a specified value is less than a second specified value.</source>
          <target state="translated">返回一个值，该值指示指定的值是否小于另一个指定的值。</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit signed integer is less than a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">返回一个值，该值指示 64 位带符号整数是否小于 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 小于 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph> method defines the operation of the less than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph>方法定义的操作的小于运算符<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">此外可以调用某些语言<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>If <ph id="ph1">`left`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`left`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它将隐式转换为<ph id="ph8">&lt;xref:System.Int64&gt;</ph>时执行此操作的值。</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is less than a 64-bit signed integer.</source>
          <target state="translated">返回一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否小于 64 位带符号整数。</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 小于 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph> method defines the operation of the less than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph>方法定义的操作的小于运算符<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">此外可以调用某些语言<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph>方法直接，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>If <ph id="ph1">`right`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`right`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它将隐式转换为<ph id="ph8">&lt;xref:System.Int64&gt;</ph>时执行此操作的值。</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is less than another <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">返回一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否小于另一个 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 小于 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph> method defines the operation of the less than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph>方法定义的操作的小于运算符<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">此外可以调用某些语言<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is less than a 64-bit unsigned integer.</source>
          <target state="translated">返回一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否小于 64 位无符号整数。</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 小于 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph> method defines the operation of the less than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph>方法定义的操作的小于运算符<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">它们还可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph>方法直接，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit unsigned integer is less than a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">返回一个值，该值指示 64 位无符号整数是否小于 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 小于 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph> method defines the operation of the less than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph>方法定义的操作的小于运算符<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">它们还可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns a value that indicates whether a specified value is less than or equal to another specified value.</source>
          <target state="translated">返回一个值，该值指示指定的值是否小于等于另一个指定的值。</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit signed integer is less than or equal to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">返回一个值，该值指示 64 位带符号整数是否小于等于 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 小于等于 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph> method defines the operation of the less than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph>方法定义的操作的运算符的小于或等于<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">它们还可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>If <ph id="ph1">`left`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`left`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它将隐式转换为<ph id="ph8">&lt;xref:System.Int64&gt;</ph>时执行此操作的值。</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is less than or equal to a 64-bit signed integer.</source>
          <target state="translated">返回一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否小于等于 64 位带符号整数。</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 小于等于 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph> method defines the operation of the less than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph>方法定义的操作的运算符的小于或等于<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">它们还可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph>方法直接，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>If <ph id="ph1">`right`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`right`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它将隐式转换为<ph id="ph8">&lt;xref:System.Int64&gt;</ph>时执行此操作的值。</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is less than or equal to another <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">返回一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否小于等于另一个 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 小于等于 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph> method defines the operation of the less than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph>方法定义的操作的运算符的小于或等于<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">它们还可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is less than or equal to a 64-bit unsigned integer.</source>
          <target state="translated">返回一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否小于等于 64 位无符号整数。</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 小于等于 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph> method defines the operation of the less than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph>方法定义的操作的运算符的小于或等于<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">它们还可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph>方法直接，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit unsigned integer is less than or equal to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">返回一个值，该值指示 64 位无符号整数是否小于等于 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 小于等于 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph> method defines the operation of the less than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph>方法定义的操作的运算符的小于或等于<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">它们还可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to be divided.</source>
          <target state="translated">要作为被除数的值。</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to divide by.</source>
          <target state="translated">要作为除数的值。</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns the remainder that results from division with two specified <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">返回两个指定 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值相除所得的余数。</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The remainder that results from the division.</source>
          <target state="translated">相除所得的余数。</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Modulus%2A&gt;</ph> method defines the operation of the modulus operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Modulus%2A&gt;</ph>方法定义的取模运算符的运算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%2A?displayProperty=nameWithType&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The sign of the value returned by the modulus operation depends on the sign of <ph id="ph1">`dividend`</ph>: If <ph id="ph2">`dividend`</ph> is positive, the modulus operation returns a positive result; if it is negative, the modulus operation returns a negative result.</source>
          <target state="translated">取模运算返回的值的符号取决于的符号<ph id="ph1">`dividend`</ph>： 如果<ph id="ph2">`dividend`</ph>为正，取模运算返回正结果; 如果它为负，取模运算返回负数的结果。</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The behavior of the modulus operation with <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values is identical to the modulus operation with other integral types.</source>
          <target state="translated">该取模操作的行为<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值等同于与其他整数类型取模运算。</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> is 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> 是 0（零）。</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to multiply.</source>
          <target state="translated">要相乘的第一个值。</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to multiply.</source>
          <target state="translated">要相乘的第二个值。</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Multiplies two specified <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">两个指定的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值相乘。</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The product of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> 与 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 的乘积。</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Multiply%2A&gt;</ph> method defines the operation of the multiplication operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Multiply%2A&gt;</ph>方法定义的乘法运算符的运算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>An integer value.</source>
          <target state="translated">一个整数值。</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>Returns the bitwise one's complement of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的按位二进制反码。</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>The bitwise one's complement of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的按位二进制反码。</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_OnesComplement%2A&gt;</ph> method defines the operation of the bitwise one's complement operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_OnesComplement%2A&gt;</ph>方法定义的操作的按位反码运算符的<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>The bitwise one's complement operator reverses each bit in a numeric value.</source>
          <target state="translated">每位中的数字值的按位反码运算符反转。</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>That is, bits in <ph id="ph1">`value`</ph> that are 0 are set to 1 in the result, and bits that are 1 are set to 0 in the result.</source>
          <target state="translated">即，位<ph id="ph1">`value`</ph>都 0 将设置为 1 在结果中，并为 1 的位将设置为在结果为 0。</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_OnesComplement%2A&gt;</ph> method enables code such as the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_OnesComplement%2A&gt;</ph>方法使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators may be able to call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_OnesComplement%2A&gt;</ph> method directly to perform a bitwise one's complement operation.</source>
          <target state="translated">不支持自定义运算符的语言可以在调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_OnesComplement%2A&gt;</ph>方法直接以执行按位二进制反码运算。</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>For example:</source>
          <target state="translated">例如:</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>The value whose bits are to be shifted.</source>
          <target state="translated">要移动其位的值。</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>The number of bits to shift <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> to the right.</source>
          <target state="translated">将 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 向右移动的位数。</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>Shifts a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value a specified number of bits to the right.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值向右移动指定的位数。</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>A value that has been shifted to the right by the specified number of bits.</source>
          <target state="translated">一个已向右移动指定位数的值。</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_RightShift%2A&gt;</ph> method defines the operation of the bitwise right-shift operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_RightShift%2A&gt;</ph>方法定义的按位右移运算符的运算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>Languages that do not support custom operators can perform a bitwise right-shift operation by dividing <ph id="ph1">`value`</ph> by <ph id="ph2">`BigInteger.Pow(2, shift)`</ph> and subtracting 1 times <ph id="ph3">`shift`</ph> for negative values.</source>
          <target state="translated">不支持自定义运算符的语言可以执行按位右移运算除以<ph id="ph1">`value`</ph>通过<ph id="ph2">`BigInteger.Pow(2, shift)`</ph>和减去 1 次<ph id="ph3">`shift`</ph>负值。</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>The following example shows that the results are identical to the results of using this operator.</source>
          <target state="translated">下面的示例演示的结果与使用此运算符的结果相同。</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>If <ph id="ph1">`shift`</ph> is greater than or equal to the number of bits in a positive <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, the result of the right-shift operation is <ph id="ph3">&lt;xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`shift`</ph>大于或等于正比特数<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，右移运算的结果是<ph id="ph3">&lt;xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>If <ph id="ph1">`shift`</ph> is greater than the number of bits in a negative <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, the result of the right-shift operation is <ph id="ph3">&lt;xref:System.Numerics.BigInteger.MinusOne%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`shift`</ph>大于在负的比特数<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，右移运算的结果是<ph id="ph3">&lt;xref:System.Numerics.BigInteger.MinusOne%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to subtract from (the minuend).</source>
          <target state="translated">要从中减去的值（被减数）。</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to subtract (the subtrahend).</source>
          <target state="translated">要减去的值（减数）。</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Subtracts a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value from another <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">从另一个 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值中减去 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The result of subtracting <ph id="ph1">&lt;paramref name="right" /&gt;</ph> from <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="right" /&gt;</ph> 减 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 所得的结果。</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Subtraction%2A&gt;</ph> method defines the operation of the subtraction operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Subtraction%2A&gt;</ph>方法定义的减法运算符，用于操作<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A?displayProperty=nameWithType&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>The value to negate.</source>
          <target state="translated">要求反的值。</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>Negates a specified BigInteger value.</source>
          <target state="translated">对指定的 BigInteger 值求反。</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>The result of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter multiplied by negative one (-1).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数乘以负一 (-1) 的结果。</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_UnaryNegation%2A&gt;</ph> method defines the operation of the unary negation operator (or the additive inverse operator) for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_UnaryNegation%2A&gt;</ph>方法定义的一元求反运算符 （或加法逆元运算符） 操作<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>The operation produces a value that results in 0 (zero) when it is added to the original number.</source>
          <target state="translated">操作会生成一个值，当将其添加到原始编号产生 0 （零）。</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">此运算符的等效方法是 <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>The following example illustrates three different ways to negate the value of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">下面的示例演示三种不同的方式进行求反运算的值<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)">
          <source>An integer value.</source>
          <target state="translated">一个整数值。</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)">
          <source>Returns the value of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> operand.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 操作数的值。</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)">
          <source>(The sign of the operand is unchanged.)</source>
          <target state="translated">（操作数的符号不变。）</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)">
          <source>The value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> operand.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 操作数的值。</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_UnaryPlus%2A&gt;</ph> method defines the operation of the unary positive operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_UnaryPlus%2A&gt;</ph>方法定义的一元正运算符的运算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent.</source>
          <target state="translated">将数字的字符串表示形式转换为它的等效 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 表示形式。</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">包含要转换的数字的字符串。</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent.</source>
          <target state="translated">将数字的字符串表示形式转换为它的等效 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 表示形式。</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>A value that is equivalent to the number specified in the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">一个值，等于 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数中指定的数字。</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>The <ph id="ph1">`value`</ph> parameter should be the string representation of a number in the following form.</source>
          <target state="translated"><ph id="ph1">`value`</ph>参数应为以下形式的数字的字符串表示。</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>]<bpt id="p3">*</bpt>digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>ws<ept id="p4">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>]<bpt id="p3">*</bpt>digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>ws<ept id="p4">*</ept>]</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">方括号 ([ and ]) 中的元素是可选的。</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每个元素。</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Optional white space.</source>
          <target state="translated">可选的空白区域。</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>An optional sign.</source>
          <target state="translated">一个可选符号后。</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Valid sign characters are determined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph> properties of the current culture.</source>
          <target state="translated">有效的符号字符由<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph>当前区域性的属性。</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">范围从 0 到 9 的数字的序列。</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Any leading zeros are ignored.</source>
          <target state="translated">忽略任何前导零。</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>The string specified by the <ph id="ph1">`value`</ph> parameter is interpreted by using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph> style.</source>
          <target state="translated">指定的字符串<ph id="ph1">`value`</ph>参数解释使用<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph>样式。</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</source>
          <target state="translated">不能包含任何组分隔符或小数分隔符，并且它不能具有小数部分。</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>The <ph id="ph1">`value`</ph> parameter is parsed by using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType&gt;</ph> object that is initialized for the current system culture.</source>
          <target state="translated"><ph id="ph1">`value`</ph>通过使用中的格式设置信息分析参数<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType&gt;</ph>初始化针对当前系统区域性的对象。</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">有关详情，请参阅<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>To parse a string by using the formatting information of a specific culture, use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method.</source>
          <target state="translated">若要通过使用特定区域性的格式设置信息中分析字符串，使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to round-trip the string representation of a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that was output by the <ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, you should use the <ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> method with the "R" format specifier to generate the string representation of the <ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">如果你使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph>保存/还原的字符串表示的方法的<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>已输出的值<ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph>方法，则应使用<ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph>使用"R"格式说明符生成的字符串表示形式的方法<ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Otherwise, the string representation of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to restore the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">否则为的字符串表示形式<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>仅 50，最高有效位的原始值和数据可能会丢失，当你使用保留<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph>方法，使还原<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%29&gt;</ph> method to instantiate two <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%29&gt;</ph>方法可实例化两个<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>It multiplies each object by another number and then calls the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph> method to determine the relationship between the two values.</source>
          <target state="translated">它将乘以每个对象由另一个数，然后调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph>方法来确定两个值之间的关系。</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的格式不正确。</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">包含要转换的数字的字符串。</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A bitwise combination of the enumeration values that specify the permitted format of <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">枚举值的按位组合，这些枚举值指定 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 所允许的格式。</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Converts the string representation of a number in a specified style to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent.</source>
          <target state="translated">将指定样式的数字的字符串表示形式转换为它的等效 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A value that is equivalent to the number specified in the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">一个值，等于 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数中指定的数字。</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the <ph id="ph2">`value`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated"><ph id="ph1">`style`</ph>参数定义中允许的样式元素 （如空格、 正整数或负号符号、 组分隔符符号或小数点符号）<ph id="ph2">`value`</ph>分析操作成功的参数。</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">`styles`</ph> must be a combination of bit flags from the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">`styles`</ph> 必须是中的位标志的组合<ph id="ph2">&lt;xref:System.Globalization.NumberStyles&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`style`</ph> parameter makes this method overload useful when <ph id="ph2">`value`</ph> contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by <ph id="ph3">`value`</ph> is known only at run time, or when you want to disallow white space or a sign symbol in <ph id="ph4">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`style`</ph>参数将使得此方法重载有用<ph id="ph2">`value`</ph>时数字系统 （十进制或十六进制） 由包含的字符串表示形式的十六进制值，<ph id="ph3">`value`</ph>仅在运行时，已知时，或者当你想要禁止的空白区域或正负符号<ph id="ph4">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`value`</ph> parameter may include the following elements:</source>
          <target state="translated">根据值<ph id="ph1">`style`</ph>、<ph id="ph2">`value`</ph>参数可能包括以下元素：</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>][<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>digits<ept id="p4">*</ept>,]<bpt id="p5">*</bpt>digits<ept id="p5">*</ept>[.<bpt id="p6">*</bpt>fractional_digits<ept id="p6">*</ept>][E[<bpt id="p7">*</bpt>sign<ept id="p7">*</ept>]<bpt id="p8">*</bpt>exponential_digits<ept id="p8">*</ept>][<bpt id="p9">*</bpt>ws<ept id="p9">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>][<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>digits<ept id="p4">*</ept>,]<bpt id="p5">*</bpt>digits<ept id="p5">*</ept>[.<bpt id="p6">*</bpt>fractional_digits<ept id="p6">*</ept>][E[<bpt id="p7">*</bpt>sign<ept id="p7">*</ept>]<bpt id="p8">*</bpt>exponential_digits<ept id="p8">*</ept>][<bpt id="p9">*</bpt>ws<ept id="p9">*</ept>]</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>If <ph id="ph1">`style`</ph> includes <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph>, the <ph id="ph3">`value`</ph> parameter may contain the following elements:</source>
          <target state="translated">如果<ph id="ph1">`style`</ph>包括<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph>、<ph id="ph3">`value`</ph>参数可能包含下列元素：</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>]<bpt id="p2">*</bpt>hexdigits<ept id="p2">*</ept>[<bpt id="p3">*</bpt>ws<ept id="p3">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>]<bpt id="p2">*</bpt>hexdigits<ept id="p2">*</ept>[<bpt id="p3">*</bpt>ws<ept id="p3">*</ept>]</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">方括号 ([ and ]) 中的元素是可选的。</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每个元素。</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Optional white space.</source>
          <target state="translated">可选的空白区域。</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>White space can appear at the start of <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`value`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">空格可以出现在开始<ph id="ph1">`value`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>标志，它可以出现在末尾<ph id="ph4">`value`</ph>如果<ph id="ph5">`style`</ph>包括<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">特定于区域性的货币符号。</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> properties of the current culture.</source>
          <target state="translated">在字符串中的位置由<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph>当前区域性的属性。</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's currency symbol can appear in <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">当前区域性的货币符号可以出现在<ph id="ph1">`value`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>An optional sign.</source>
          <target state="translated">一个可选符号后。</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The sign can appear at the start of <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`value`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">符号可以出现在开始<ph id="ph1">`value`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph>标志，它可以出现在末尾<ph id="ph4">`value`</ph>如果<ph id="ph5">`style`</ph>包括<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Parentheses can be used in <ph id="ph1">`value`</ph> to indicate a negative value if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">可以在使用括号<ph id="ph1">`value`</ph>以指示负值，如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A sequence of digits from 0 through 9.</source>
          <target state="translated">一系列从 0 到 9 的数字。</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>For <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>, only the digit 0 is valid.</source>
          <target state="translated">有关<bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>，但只数字 0 有效。</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>，<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific group separator symbol.</source>
          <target state="translated">区域性特定的组分隔符符号。</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's group separator can appear in <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">当前区域性的组分隔符可以出现在<ph id="ph1">`value`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">特定于区域性的小数点符号。</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's decimal point symbol can appear in <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">当前区域性的小数点符号可以出现在<ph id="ph1">`value`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> includes any other digit, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">仅数字 0 可以显示为分析操作才能成功; 一个小数数字如果<bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>包括任何其他数字<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>引发。</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>E</source>
          <target state="translated">E</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</source>
          <target state="translated">"E"或者"E"字符，指示该值表示指数 （科学型） 表示法。</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`value`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`value`</ph>参数可以表示指数记数法的数字，如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A sequence of hexadecimal digits from 0 through f, or 0 through F.</source>
          <target state="translated">一系列从 0 到 f 或从 0 到 F.的十六进制数字</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A string with digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> style) always parses successfully.</source>
          <target state="translated">仅为数字的字符串 (它对应于<ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph>样式) 总是可以分析成功。</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Most of the remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be present, but are not required to be present, in the input string.</source>
          <target state="translated">其余的大多数<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>成员控件可能会存在，但不是需要为存在于输入字符串中的元素。</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id="ph2">`value`</ph>.</source>
          <target state="translated">下表指示个别<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>成员影响中可能存在的元素<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">`NumberStyles`</ph> value</source>
          <target state="translated"><ph id="ph1">`NumberStyles`</ph> 值</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Elements permitted in <ph id="ph1">`value`</ph> in addition to digits</source>
          <target state="translated">元素允许在<ph id="ph1">`value`</ph>除数字之外</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>digits<ept id="p1">*</ept> element only.</source>
          <target state="translated"><bpt id="p1">*</bpt>数字<ept id="p1">*</ept>仅元素。</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The decimal point (.) and <bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept> elements.</source>
          <target state="translated">小数点 （.） 和<bpt id="p1">*</bpt>小数位数<ept id="p1">*</ept>元素。</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The "e" or "E" character, which indicates exponential notation, along with <bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept>.</source>
          <target state="translated">"E"或"E"字符，它指示指数记数法，连同<bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept>。</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the start of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>起始处的元素<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>结尾的元素<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the start of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>登录<ept id="p1">*</ept>起始处的元素<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the end of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>登录<ept id="p1">*</ept>结尾的元素<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element in the form of parentheses enclosing the numeric value.</source>
          <target state="translated"><bpt id="p1">*</bpt>登录<ept id="p1">*</ept>在括号内包含的数字值的窗体中的元素。</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The group separator (,) element.</source>
          <target state="translated">组分隔符 （，） 元素。</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The currency ($) element.</source>
          <target state="translated">货币 （$） 元素中。</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>All elements.</source>
          <target state="translated">所有元素。</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>However, <ph id="ph1">`value`</ph> cannot represent a hexadecimal number or a number in exponential notation.</source>
          <target state="translated">但是，<ph id="ph1">`value`</ph>不能表示十六进制数或指数记数法的数字。</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the start or end of <ph id="ph1">`value`</ph>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept> at the start of <ph id="ph2">`value`</ph>, and the decimal point (<bpt id="p3">*</bpt>.<ept id="p3">*</ept>) symbol.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>开头或末尾的元素<ph id="ph1">`value`</ph>，<bpt id="p2">*</bpt>登录<ept id="p2">*</ept>开头的<ph id="ph2">`value`</ph>，和小数点 (<bpt id="p3">*</bpt>。<ept id="p3">*</ept>) 符号。</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`value`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`value`</ph>参数还可以使用指数记数法。</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, group separator (<bpt id="p1">*</bpt>,<ept id="p1">*</ept>), and decimal point (<bpt id="p2">*</bpt>.<ept id="p2">*</ept>) elements.</source>
          <target state="translated"><ph id="ph1">`ws`</ph>， <ph id="ph2">`sign`</ph>，组分隔符 (<bpt id="p1">*</bpt>，<ept id="p1">*</ept>)，和小数点 (<bpt id="p2">*</bpt>。<ept id="p2">*</ept>) 元素。</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>All elements.</source>
          <target state="translated">所有元素。</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>However, <ph id="ph1">`value`</ph> cannot represent a hexadecimal number.</source>
          <target state="translated">但是，<ph id="ph1">`value`</ph>无法表示十六进制数字。</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to round-trip the string representation of a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that was output by the <ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, you should use the <ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> method with the "R" format specifier to generate the string representation of the <ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">如果你使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph>保存/还原的字符串表示的方法的<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>已输出的值<ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph>方法，则应使用<ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph>使用"R"格式说明符生成的字符串表示形式的方法<ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Otherwise, the string representation of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to restore the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">否则为的字符串表示形式<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>仅 50，最高有效位的原始值和数据可能会丢失，当你使用保留<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph>方法，使还原<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Unlike the other <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> values, which allow for, but do not require, the presence of particular style elements in <ph id="ph2">`value`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> style value means that the individual numeric characters in <ph id="ph4">`value`</ph> are always interpreted as hexadecimal characters.</source>
          <target state="translated">与其他不同<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>值，该值允许，但不是需要，特定样式中的元素是否存在<ph id="ph2">`value`</ph>、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph>样式值意味着中的单个数字字符<ph id="ph4">`value`</ph>总是被解释为十六进制字符。</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Valid hexadecimal characters are 0-9, A-F, and a-f.</source>
          <target state="translated">有效的十六进制字符为 0-9、 A-F 和 a-f。</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The only other flags that can be combined with the <ph id="ph1">`style`</ph> parameter are <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">其他标志只有可以与组合<ph id="ph1">`style`</ph>参数<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>和<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>(The <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration includes a composite number style, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber&gt;</ph>, that includes both white-space flags.)</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>枚举包含复合数字样式， <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber&gt;</ph>，其中包含两个空白标志。)</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>If <ph id="ph1">`value`</ph> is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as <ph id="ph2">`0x`</ph> or <ph id="ph3">`&amp;h`</ph>) that differentiates it as a hexadecimal number.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>是的字符串表示的十六进制数，则无法将前面添加的任何修饰符 (如<ph id="ph2">`0x`</ph>或<ph id="ph3">`&amp;h`</ph>) 用于将其识别为十六进制数。</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>This causes the conversion to fail.</source>
          <target state="translated">这将导致转换失败。</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>If <ph id="ph1">`value`</ph> is a hexadecimal string, the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph> method interprets <ph id="ph3">`value`</ph> as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to <ph id="ph4">`0x80`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>是一个十六进制的字符串，<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph>方法将解释<ph id="ph3">`value`</ph>作为使用 2 的补数表示，其前两个十六进制数字是否大于或等于存储的负数<ph id="ph4">`0x80`</ph>。</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>In other words, the method interprets the highest-order bit of the first byte in <ph id="ph1">`value`</ph> as the sign bit.</source>
          <target state="translated">换而言之，此方法将解释中的第一个字节的最高顺序位<ph id="ph1">`value`</ph>用作符号位。</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in <ph id="ph1">`value`</ph> must have a value of zero.</source>
          <target state="translated">若要确保十六进制字符串正确地解释为正数中的第一个数字<ph id="ph1">`value`</ph>必须具有值为零。</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>For example, the method interprets <ph id="ph1">`0x80`</ph> as a negative value, but it interprets either <ph id="ph2">`0x080`</ph> or <ph id="ph3">`0x0080`</ph> as a positive value.</source>
          <target state="translated">例如，此方法将解释<ph id="ph1">`0x80`</ph>为负值，但它解释<ph id="ph2">`0x080`</ph>或<ph id="ph3">`0x0080`</ph>为正值。</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</source>
          <target state="translated">下面的示例演示了表示正负值的十六进制字符串之间的差异。</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`value`</ph> parameter is parsed by using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that is initialized for the current system culture.</source>
          <target state="translated"><ph id="ph1">`value`</ph>通过使用中的格式设置信息分析参数<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>初始化针对当前系统区域性的对象。</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>To specify the culture whose formatting information is used for the parse operation, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph> overload.</source>
          <target state="translated">若要指定分析操作使用其格式设置信息的区域性，调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph>重载。</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following example illustrates calls to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph> method with several possible values for the <ph id="ph2">`style`</ph> parameter.</source>
          <target state="translated">下面的示例演示如何调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph>具有几个可能值的方法<ph id="ph2">`style`</ph>参数。</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>It illustrates how to interpret a string as a hexadecimal value, and how to disallow spaces and sign symbols.</source>
          <target state="translated">它阐释了如何将字符串解释为十六进制值，以及如何禁止空格和正负符号。</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> includes the <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> flag along with another value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> 包括 <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> 标志以及另一个值。</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not comply with the input pattern specified by <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 不符合由 <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 指定的输入模式。</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">包含要转换的数字的字符串。</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>An object that provides culture-specific formatting information about <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">一个对象，提供有关 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 的区域性特定格式设置信息。</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Converts the string representation of a number in a specified culture-specific format to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent.</source>
          <target state="translated">将指定的区域性特定格式的数字字符串表示形式转换为它的等效 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>A value that is equivalent to the number specified in the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">一个值，等于 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数中指定的数字。</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`value`</ph> parameter should be the string representation of a number in the following form:</source>
          <target state="translated"><ph id="ph1">`value`</ph>参数应为以下形式的数字的字符串表示：</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>]<bpt id="p3">*</bpt>digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>ws<ept id="p4">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>]<bpt id="p3">*</bpt>digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>ws<ept id="p4">*</ept>]</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">方括号 ([ and ]) 中的元素是可选的。</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每个元素。</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Optional white space.</source>
          <target state="translated">可选的空白区域。</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>An optional sign.</source>
          <target state="translated">一个可选符号后。</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Valid sign characters are determined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that is returned by the <ph id="ph4">`provider`</ph> object's <ph id="ph5">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method.</source>
          <target state="translated">有效的符号字符由<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph>属性<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>返回的对象<ph id="ph4">`provider`</ph>对象的<ph id="ph5">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">范围从 0 到 9 的数字的序列。</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Any leading zeros are ignored.</source>
          <target state="translated">忽略任何前导零。</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The string specified by the <ph id="ph1">`value`</ph> parameter is interpreted using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph> style.</source>
          <target state="translated">指定的字符串<ph id="ph1">`value`</ph>参数被解释使用<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph>样式。</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</source>
          <target state="translated">不能包含任何组分隔符或小数分隔符，并且它不能具有小数部分。</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to round-trip the string representation of a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that was output by the <ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, you should use the <ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> method with the "R" format specifier to generate the string representation of the <ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">如果你使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph>保存/还原的字符串表示的方法的<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>已输出的值<ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph>方法，则应使用<ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph>使用"R"格式说明符生成的字符串表示形式的方法<ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Otherwise, the string representation of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to restore the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">否则为的字符串表示形式<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>仅 50，最高有效位的原始值和数据可能会丢失，当你使用保留<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph>方法，使还原<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific formatting information.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>参数是<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>实现其<ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法返回<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供区域性特定格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>When the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method is invoked, it calls the <ph id="ph2">`provider`</ph> parameter's <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method and passes it a <ph id="ph4">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> type.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph>调用方法时，它调用<ph id="ph2">`provider`</ph>参数的<ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法并将其传递<ph id="ph4">&lt;xref:System.Type&gt;</ph>对象，表示<ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>类型。</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method then returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides information about the format of the <ph id="ph3">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法然后返回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供的格式有关的信息的对象<ph id="ph3">`value`</ph>参数。</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>There are three ways to use the <ph id="ph1">`provider`</ph> parameter to supply custom formatting information to the parse operation:</source>
          <target state="translated">有三种方法使用<ph id="ph1">`provider`</ph>参数来提供到分析操作的自定义格式设置信息：</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>You can pass a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information.</source>
          <target state="translated">你可以将传递<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>表示的区域性的提供格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information for that culture.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph>方法返回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供该区域性的数字格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>You can pass the actual <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information.</source>
          <target state="translated">你可以将传递的实际<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供数字格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>(Its implementation of <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> just returns itself.)</source>
          <target state="translated">(其实现<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph>仅返回它自身。)</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>You can pass a custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">你可以传递的自定义对象，实现<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method instantiates and returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法实例化，并返回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the formatting of <ph id="ph3">`value`</ph> is interpreted based on the <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the current culture.</source>
          <target state="translated">如果<ph id="ph1">`provider`</ph>是<ph id="ph2">`null`</ph>的格式<ph id="ph3">`value`</ph>解释基于<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>当前区域性的对象。</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The following examples show two ways to define the tilde (~) as a negative sign for formatting <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">下面的示例演示两种方法定义波形符 （~） 为负号的格式设置<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Note that to display the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values in the same format as the original strings, your code must call the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method and pass it the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">请注意，若要显示<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>对原始字符串的格式相同的值，你的代码必须调用<ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>方法并将其传递<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The first example defines a class that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> and uses the <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method to return the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">第一个示例定义一个类以实现<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>并使用<ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法以返回<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can then be instantiated with the following code:</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>然后可以使用下面的代码实例化对象：</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The second example is more straightforward.</source>
          <target state="translated">第二个示例是更简单。</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>It passes the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information to the <ph id="ph2">`provider`</ph> parameter.</source>
          <target state="translated">它将传递<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供到的格式设置信息的对象<ph id="ph2">`provider`</ph>参数。</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的格式不正确。</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">包含要转换的数字的字符串。</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A bitwise combination of the enumeration values that specify the permitted format of <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">枚举值的按位组合，这些枚举值指定 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 所允许的格式。</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>An object that provides culture-specific formatting information about <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">一个对象，提供有关 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 的区域性特定格式设置信息。</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Converts the string representation of a number in a specified style and culture-specific format to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent.</source>
          <target state="translated">将指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A value that is equivalent to the number specified in the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">一个值，等于 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数中指定的数字。</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the <ph id="ph2">`value`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated"><ph id="ph1">`style`</ph>参数定义中允许的样式元素 （如空格、 正整数或负号符号、 组分隔符符号或小数点符号）<ph id="ph2">`value`</ph>分析操作成功的参数。</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">`styles`</ph> must be a combination of bit flags from the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">`styles`</ph> 必须是中的位标志的组合<ph id="ph2">&lt;xref:System.Globalization.NumberStyles&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`style`</ph> parameter makes this method overload useful when <ph id="ph2">`value`</ph> contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by <ph id="ph3">`value`</ph> is known only at run time, or when you want to disallow white space or a sign symbol in <ph id="ph4">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`style`</ph>参数将使得此方法重载有用<ph id="ph2">`value`</ph>时数字系统 （十进制或十六进制） 由包含的字符串表示形式的十六进制值，<ph id="ph3">`value`</ph>仅在运行时，已知时，或者当你想要禁止的空白区域或正负符号<ph id="ph4">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`value`</ph> parameter may include the following elements:</source>
          <target state="translated">根据值<ph id="ph1">`style`</ph>、<ph id="ph2">`value`</ph>参数可能包括以下元素：</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>][<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>digits<ept id="p4">*</ept>,]<bpt id="p5">*</bpt>digits<ept id="p5">*</ept>[<bpt id="p6">*</bpt>.fractional_digits<ept id="p6">*</ept>][E[<bpt id="p7">*</bpt>sign<ept id="p7">*</ept>]<bpt id="p8">*</bpt>exponential_digits<ept id="p8">*</ept>][<bpt id="p9">*</bpt>ws<ept id="p9">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>][<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>digits<ept id="p4">*</ept>,]<bpt id="p5">*</bpt>digits<ept id="p5">*</ept>[<bpt id="p6">*</bpt>.fractional_digits<ept id="p6">*</ept>][E[<bpt id="p7">*</bpt>sign<ept id="p7">*</ept>]<bpt id="p8">*</bpt>exponential_digits<ept id="p8">*</ept>][<bpt id="p9">*</bpt>ws<ept id="p9">*</ept>]</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <ph id="ph1">`style`</ph> includes <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph>, the <ph id="ph3">`value`</ph> parameter may include the following elements:</source>
          <target state="translated">如果<ph id="ph1">`style`</ph>包括<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph>、<ph id="ph3">`value`</ph>参数可能包括以下元素：</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>]<bpt id="p2">*</bpt>hexdigits<ept id="p2">*</ept>[<bpt id="p3">*</bpt>ws<ept id="p3">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>]<bpt id="p2">*</bpt>hexdigits<ept id="p2">*</ept>[<bpt id="p3">*</bpt>ws<ept id="p3">*</ept>]</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">方括号 ([ and ]) 中的元素是可选的。</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每个元素。</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Optional white space.</source>
          <target state="translated">可选的空白区域。</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>White space can appear at the start of <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`value`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">空格可以出现在开始<ph id="ph1">`value`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>标志，它可以出现在末尾<ph id="ph4">`value`</ph>如果<ph id="ph5">`style`</ph>包括<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">特定于区域性的货币符号。</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> properties of the culture indicated by the <ph id="ph3">`provider`</ph> parameter.</source>
          <target state="translated">在字符串中的位置由<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph>区域性属性由<ph id="ph3">`provider`</ph>参数。</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The current culture's currency symbol can appear in <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">当前区域性的货币符号可以出现在<ph id="ph1">`value`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>An optional sign.</source>
          <target state="translated">一个可选符号后。</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The sign can appear at the start of <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`value`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">符号可以出现在开始<ph id="ph1">`value`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph>标志，它可以出现在末尾<ph id="ph4">`value`</ph>如果<ph id="ph5">`style`</ph>包括<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Parentheses can be used in <ph id="ph1">`value`</ph> to indicate a negative value if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">可以在使用括号<ph id="ph1">`value`</ph>以指示负值，如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A sequence of digits from 0 through 9.</source>
          <target state="translated">一系列从 0 到 9 的数字。</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>For <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>, only the digit 0 is valid.</source>
          <target state="translated">有关<bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>，但只数字 0 有效。</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>，<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific group separator symbol.</source>
          <target state="translated">区域性特定的组分隔符符号。</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The group separator symbol of the culture specified by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`value`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">指定的区域性组分隔符符号<ph id="ph1">`provider`</ph>可以出现在<ph id="ph2">`value`</ph>如果<ph id="ph3">`style`</ph>包括<ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">特定于区域性的小数点符号。</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The decimal point symbol of the culture designated by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`value`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">指定的区域性的小数点符号<ph id="ph1">`provider`</ph>可以出现在<ph id="ph2">`value`</ph>如果<ph id="ph3">`style`</ph>包括<ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> includes any other digit, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">仅数字 0 可以显示为分析操作才能成功; 一个小数数字如果<bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>包括任何其他数字<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>引发。</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>E</source>
          <target state="translated">E</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</source>
          <target state="translated">"E"或者"E"字符，指示该值表示指数 （科学型） 表示法。</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`value`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`value`</ph>参数可以表示指数记数法的数字，如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A sequence of hexadecimal digits from 0 through f, or 0 through F.</source>
          <target state="translated">一系列从 0 到 f 或从 0 到 F.的十六进制数字</target>       </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A string with digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> style) always parses successfully.</source>
          <target state="translated">仅为数字的字符串 (它对应于<ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph>样式) 总是可以分析成功。</target>       </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Most of the remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be present, but are not required to be present, in the input string.</source>
          <target state="translated">其余的大多数<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>成员控件可能会存在，但不是需要为存在于输入字符串中的元素。</target>       </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id="ph2">`value`</ph>.</source>
          <target state="translated">下表指示个别<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>成员影响中可能存在的元素<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>NumberStyles value</source>
          <target state="translated">NumberStyles 值</target>       </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Elements permitted in value in addition to digits</source>
          <target state="translated">除数字之外的值中允许的元素</target>       </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>digits<ept id="p1">*</ept> element only.</source>
          <target state="translated"><bpt id="p1">*</bpt>数字<ept id="p1">*</ept>仅元素。</target>       </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The decimal point (.) and <bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept> elements.</source>
          <target state="translated">小数点 （.） 和<bpt id="p1">*</bpt>小数位数<ept id="p1">*</ept>元素。</target>       </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The "e" or "E" character, which indicates exponential notation.</source>
          <target state="translated">"E"或者"E"字符，它指示指数记数法。</target>       </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>along with <bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept>.</source>
          <target state="translated">连同<bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept>。</target>       </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the start of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>起始处的元素<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>结尾的元素<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the start of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>登录<ept id="p1">*</ept>起始处的元素<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the end of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>登录<ept id="p1">*</ept>结尾的元素<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element in the form of parentheses enclosing the numeric value.</source>
          <target state="translated"><bpt id="p1">*</bpt>登录<ept id="p1">*</ept>在括号内包含的数字值的窗体中的元素。</target>       </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The group separator (,) element.</source>
          <target state="translated">组分隔符 （，） 元素。</target>       </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The currency ($) element.</source>
          <target state="translated">货币 （$） 元素中。</target>       </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>All elements.</source>
          <target state="translated">所有元素。</target>       </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>However, <ph id="ph1">`value`</ph> cannot represent a hexadecimal number or a number in exponential notation.</source>
          <target state="translated">但是，<ph id="ph1">`value`</ph>不能表示十六进制数或指数记数法的数字。</target>       </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the start or end of <ph id="ph1">`value`</ph>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept> at the start of <ph id="ph2">`value`</ph>, and the decimal point (.) symbol.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>开头或末尾的元素<ph id="ph1">`value`</ph>，<bpt id="p2">*</bpt>登录<ept id="p2">*</ept>开头的<ph id="ph2">`value`</ph>，和小数点 （.） 符号。</target>       </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`value`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`value`</ph>参数还可以使用指数记数法。</target>       </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, group separator (,), and decimal point (.) elements.</source>
          <target state="translated"><ph id="ph1">`ws`</ph>， <ph id="ph2">`sign`</ph>，组分隔符 （、）、 和小数点 （.） 元素。</target>       </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>All elements.</source>
          <target state="translated">所有元素。</target>       </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>However, <ph id="ph1">`value`</ph> cannot represent a hexadecimal number.</source>
          <target state="translated">但是，<ph id="ph1">`value`</ph>无法表示十六进制数字。</target>       </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to round-trip the string representation of a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that was output by the <ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, you should use the <ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> method with the "R" format specifier to generate the string representation of the <ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">如果你使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph>保存/还原的字符串表示的方法的<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>已输出的值<ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph>方法，则应使用<ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph>使用"R"格式说明符生成的字符串表示形式的方法<ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Otherwise, the string representation of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to restore the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">否则为的字符串表示形式<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>仅 50，最高有效位的原始值和数据可能会丢失，当你使用保留<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph>方法，使还原<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Unlike the other <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> values, which allow for but do not require the presence of particular style elements in <ph id="ph2">`value`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> style value means that the individual numeric characters in <ph id="ph4">`value`</ph> are always interpreted as hexadecimal characters.</source>
          <target state="translated">与其他不同<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>值，从而允许但不是需要特定样式中的元素是否存在<ph id="ph2">`value`</ph>、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph>样式值意味着中的单个数字字符<ph id="ph4">`value`</ph>总是被解释为十六进制字符。</target>       </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Valid hexadecimal characters are 0-9, A-F, and a-f.</source>
          <target state="translated">有效的十六进制字符为 0-9、 A-F 和 a-f。</target>       </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The only other flags that can be combined with the <ph id="ph1">`style`</ph> parameter are <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">其他标志只有可以与组合<ph id="ph1">`style`</ph>参数<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>和<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>(The <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration includes a composite number style, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber&gt;</ph>, that includes both white-space flags.)</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>枚举包含复合数字样式， <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber&gt;</ph>，其中包含两个空白标志。)</target>       </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <ph id="ph1">`value`</ph> is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as <ph id="ph2">`0x`</ph> or <ph id="ph3">`&amp;h`</ph>) that differentiates it as a hexadecimal number.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>是的字符串表示的十六进制数，则无法将前面添加的任何修饰符 (如<ph id="ph2">`0x`</ph>或<ph id="ph3">`&amp;h`</ph>) 用于将其识别为十六进制数。</target>       </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>This causes the conversion to fail.</source>
          <target state="translated">这将导致转换失败。</target>       </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <ph id="ph1">`value`</ph> is a hexadecimal string, the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph> method interprets <ph id="ph3">`value`</ph> as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to <ph id="ph4">`0x80`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>是一个十六进制的字符串，<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph>方法将解释<ph id="ph3">`value`</ph>作为使用 2 的补数表示，其前两个十六进制数字是否大于或等于存储的负数<ph id="ph4">`0x80`</ph>。</target>       </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>In other words, the method interprets the highest-order bit of the first byte in <ph id="ph1">`value`</ph> as the sign bit.</source>
          <target state="translated">换而言之，此方法将解释中的第一个字节的最高顺序位<ph id="ph1">`value`</ph>用作符号位。</target>       </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in <ph id="ph1">`value`</ph> must have a value of zero.</source>
          <target state="translated">若要确保十六进制字符串正确地解释为正数中的第一个数字<ph id="ph1">`value`</ph>必须具有值为零。</target>       </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>For example, the method interprets <ph id="ph1">`0x80`</ph> as a negative value, but it interprets either <ph id="ph2">`0x080`</ph> or <ph id="ph3">`0x0080`</ph> as a positive value.</source>
          <target state="translated">例如，此方法将解释<ph id="ph1">`0x80`</ph>为负值，但它解释<ph id="ph2">`0x080`</ph>或<ph id="ph3">`0x0080`</ph>为正值。</target>       </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</source>
          <target state="translated">下面的示例演示了表示正负值的十六进制字符串之间的差异。</target>       </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>参数是<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>实现。</target>       </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of <ph id="ph3">`value`</ph>.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法返回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>对象，提供区域性特定信息的格式<ph id="ph3">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Typically, <ph id="ph1">`provider`</ph> can be any one of the following:</source>
          <target state="translated">通常情况下，<ph id="ph1">`provider`</ph>可以是以下任何一个：</target>       </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that provides numeric formatting information.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>表示提供数字格式设置信息的区域性的对象。</target>       </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph>方法返回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供数字格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>(Its implementation of <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> just returns itself.)</source>
          <target state="translated">(其实现<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph>仅返回它自身。)</target>       </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> and uses the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> method to instantiate and return the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">实现一个自定义对象<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>并使用<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph>方法实例化并返回<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture is used.</source>
          <target state="translated">如果<ph id="ph1">`provider`</ph>是<ph id="ph2">`null`</ph>、<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>对象使用当前区域性的。</target>       </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following example makes several calls to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph> method using various combinations of values for the <ph id="ph2">`style`</ph> and <ph id="ph3">`provider`</ph> parameters.</source>
          <target state="translated">下面的示例执行几次调用到<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph>方法使用的值的各种组合<ph id="ph2">`style`</ph>和<ph id="ph3">`provider`</ph>参数。</target>       </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A number of the individual calls to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph> method pass an instance of the following <ph id="ph2">`BigIntegerFormatProvider`</ph> class, which defines a tilde (~) as the negative sign.</source>
          <target state="translated">大量的单独调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph>方法的以下实例传递<ph id="ph2">`BigIntegerFormatProvider`</ph>类，该类为负号定义波形符 （~）。</target>       </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> includes the <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> flag along with another value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> 包括 <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> 标志以及另一个值。</target>       </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not comply with the input pattern specified by <ph id="ph2">&lt;paramref name="style" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 不符合由 <ph id="ph2">&lt;paramref name="style" /&gt;</ph> 指定的输入模式。</target>       </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>The number to raise to the <bpt id="p1">&lt;c&gt;</bpt>exponent<ept id="p1">&lt;/c&gt;</ept> power.</source>
          <target state="translated">要计算 <bpt id="p1">&lt;c&gt;</bpt>exponent<ept id="p1">&lt;/c&gt;</ept> 次幂的数字。</target>       </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>The exponent to raise <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> by.</source>
          <target state="translated">对 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 进行幂运算的指数。</target>       </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>Raises a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value to the power of a specified value.</source>
          <target state="translated">求以 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值为底、以指定的值为指数的幂。</target>       </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>The result of raising <ph id="ph1">&lt;paramref name="value" /&gt;</ph> to the <ph id="ph2">&lt;paramref name="exponent" /&gt;</ph> power.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的 <ph id="ph2">&lt;paramref name="exponent" /&gt;</ph> 次幂的计算结果。</target>       </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Pow%2A&gt;</ph> method returns 1 if the value of the exponent parameter is 0, or if the values of both the <ph id="ph2">`value`</ph> and <ph id="ph3">`exponent`</ph> parameters are 0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Pow%2A&gt;</ph>方法返回 1，如果指数参数的值为 0，或如果两者的值<ph id="ph2">`value`</ph>和<ph id="ph3">`exponent`</ph>参数均为 0。</target>       </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>If <ph id="ph1">`exponent`</ph> is 1, the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Pow%2A&gt;</ph> method returns <ph id="ph3">`value`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`exponent`</ph>为 1，<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Pow%2A&gt;</ph>方法返回<ph id="ph3">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>If <ph id="ph1">`value`</ph> is negative, the method returns a negative result.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>是负数，该方法返回负数的结果。</target>       </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>This method corresponds to the <ph id="ph1">&lt;xref:System.Math.Pow%2A?displayProperty=nameWithType&gt;</ph> method for primitive numeric types.</source>
          <target state="translated">此方法对应于<ph id="ph1">&lt;xref:System.Math.Pow%2A?displayProperty=nameWithType&gt;</ph>基元数值类型的方法。</target>       </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>The following example illustrates exponentiation using a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value and an exponent whose value ranges from 0 to 10.</source>
          <target state="translated">下面的示例演示如何使用求幂<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，其值范围从 0 到 10 的指数。</target>       </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>The value of the <ph id="ph1">&lt;paramref name="exponent" /&gt;</ph> parameter is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="exponent" /&gt;</ph> 参数的值为负。</target>       </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to be divided.</source>
          <target state="translated">要作为被除数的值。</target>       </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to divide by.</source>
          <target state="translated">要作为除数的值。</target>       </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Performs integer division on two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values and returns the remainder.</source>
          <target state="translated">对两个 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值执行整除并返回余数。</target>       </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The remainder after dividing <ph id="ph1">&lt;paramref name="dividend" /&gt;</ph> by <ph id="ph2">&lt;paramref name="divisor" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;paramref name="dividend" /&gt;</ph> 除以 <ph id="ph2">&lt;paramref name="divisor" /&gt;</ph> 后的余数。</target>       </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The sign of the remainder is the sign of the <ph id="ph1">`dividend`</ph> parameter.</source>
          <target state="translated">余数的符号是的迹象<ph id="ph1">`dividend`</ph>参数。</target>       </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph> method is implemented for languages that do not support custom operators.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph>会为不支持自定义运算符的语言实现方法。</target>       </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Its behavior is identical to division using the modulus operator.</source>
          <target state="translated">其行为等同于使用取模运算符的除法。</target>       </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>If necessary, the method automatically performs implicit conversion of other integral types to <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects before it performs the modulus operation.</source>
          <target state="translated">如果有必要，该方法会自动执行到其他整数类型的隐式转换<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象执行取模运算之前。</target>       </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example compares the remainder from the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> method with the remainder returned by the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph> method to establish that the two methods calculate identical remainders.</source>
          <target state="translated">下面的示例比较的余数<ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph>方法而返回的其余部分<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph>方法来建立两个方法计算相同的余数。</target>       </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> is 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> 是 0（零）。</target>       </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.Sign">
          <source>Gets a number that indicates the sign (negative, positive, or zero) of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object.</source>
          <target state="translated">获取一个数字，该数字指示当前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象的符号（负、正或零）。</target>       </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source>A number that indicates the sign of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object, as shown in the following table.</source>
          <target state="translated">一个指示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象的符号的数字，如下表所示。</target>       </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Number</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 数</target>       </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 描述</target>       </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> -1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> -1</target>       </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The value of this object is negative.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 此对象的值为负。</target>       </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The value of this object is 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 此对象的值为 0 （零）。</target>       </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The value of this object is positive.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 此对象的值为正。</target>       </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Sign%2A&gt;</ph> property is equivalent to the <ph id="ph2">&lt;xref:System.Math.Sign%2A?displayProperty=nameWithType&gt;</ph> method for the primitive numeric types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Sign%2A&gt;</ph>属性等效于<ph id="ph2">&lt;xref:System.Math.Sign%2A?displayProperty=nameWithType&gt;</ph>基元数值类型的方法。</target>       </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to subtract from (the minuend).</source>
          <target state="translated">要从中减去的值（被减数）。</target>       </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to subtract (the subtrahend).</source>
          <target state="translated">要减去的值（减数）。</target>       </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Subtracts one <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value from another and returns the result.</source>
          <target state="translated">从另一个值中减去一个 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值并返回结果。</target>       </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The result of subtracting <ph id="ph1">&lt;paramref name="right" /&gt;</ph> from <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="right" /&gt;</ph> 减 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 所得的结果。</target>       </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph> method to perform subtraction using <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">不支持自定义运算符的语言可以使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph>方法来执行减法使用<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph> method is a useful substitute for the subtraction operator when instantiating a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable by assigning it the difference that results from subtraction, as shown in the following example.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph>实例化时，方法是减法运算符有用替代<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>变量中将其分配相减、 得到的结果的差异，如下面的示例中所示。</target>       </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>Converts a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value to a byte array.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值转换为字节数组。</target>       </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object converted to an array of bytes.</source>
          <target state="translated">转换为字节数组的当前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象的值。</target>       </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>The individual bytes in the array returned by this method appear in little-endian order.</source>
          <target state="translated">此方法返回的数组中的各个字节出现在 little-endian 的顺序。</target>       </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>That is, the lower-order bytes of the value precede the higher-order bytes.</source>
          <target state="translated">也就是说，值较低序位字节先于更高序位字节。</target>       </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>The first byte of the array reflects the first eight bits of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, the second byte reflects the next eight bits, and so on.</source>
          <target state="translated">数组的第一个字节反映前八位<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，第二个字节反映了下一步的八位，依次类推。</target>       </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>For example, the value 1024, or 0x0400, is stored as the following array of two bytes:</source>
          <target state="translated">例如，值 1024 或 0x0400 存储为以下两个字节的数组：</target>       </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>Byte value</source>
          <target state="translated">字节值</target>       </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>0x00</source>
          <target state="translated">0x00</target>       </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>0x04</source>
          <target state="translated">0x04</target>       </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>Negative values are written to the array using two's complement representation in the most compact form possible.</source>
          <target state="translated">负值写入到数组中的最精简的窗体可能使用 2 的补数表示。</target>       </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>For example, -1 is represented as a single byte whose value is <ph id="ph1">`0xFF`</ph> instead of as an array with multiple elements, such as <ph id="ph2">`0xFF`</ph>, <ph id="ph3">`0xFF`</ph> or <ph id="ph4">`0xFF`</ph>, <ph id="ph5">`0xFF`</ph>, <ph id="ph6">`0xFF`</ph>, <ph id="ph7">`0xFF`</ph>.</source>
          <target state="translated">例如，-1 表示为一个字节，其值是<ph id="ph1">`0xFF`</ph>而不是作为数组与多个元素，如<ph id="ph2">`0xFF`</ph>，<ph id="ph3">`0xFF`</ph>或<ph id="ph4">`0xFF`</ph>， <ph id="ph5">`0xFF`</ph>， <ph id="ph6">`0xFF`</ph>， <ph id="ph7">`0xFF`</ph>。</target>       </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>Because two's complement representation always interprets the highest-order bit of the last byte in the array (the byte at position <ph id="ph1">&lt;xref:System.Array.Length%2A?displayProperty=nameWithType&gt;</ph><ph id="ph2">`- 1`</ph>) as the sign bit, the method returns a byte array with an extra element whose value is zero to disambiguate positive values that could otherwise be interpreted as having their sign bits set.</source>
          <target state="translated">因为 2 的补数表示形式始终解释数组中的最后一个字节的最高顺序位 (处位置的字节<ph id="ph1">&lt;xref:System.Array.Length%2A?displayProperty=nameWithType&gt;</ph> <ph id="ph2">`- 1`</ph>) 用作符号位，该方法返回具有额外的元素，其值为零的字节数组到消除歧义否则无法解释为具有设置其符号位的正值。</target>       </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>For example, the value 120 or <ph id="ph1">`0x78`</ph> is represented as a single-byte array: <ph id="ph2">`0x78`</ph>.</source>
          <target state="translated">例如，值 120 或<ph id="ph1">`0x78`</ph>表示为单字节的数组： <ph id="ph2">`0x78`</ph>。</target>       </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>However, 128, or <ph id="ph1">`0x80`</ph>, is represented as a two-byte array: <ph id="ph2">`0x80`</ph>, <ph id="ph3">`0x00`</ph>.</source>
          <target state="translated">但是，128 或<ph id="ph1">`0x80`</ph>，表示为两个字节的数组： <ph id="ph2">`0x80`</ph>， <ph id="ph3">`0x00`</ph>。</target>       </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>You can round-trip a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value by storing it to a byte array and then restoring it using the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructor.</source>
          <target state="translated">你可以往返<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值将它存储为字节数组，然后将其使用还原<ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>If your code modifies the value of individual bytes in the array returned by this method before it restores the value, you must make sure that you do not unintentionally change the sign bit.</source>
          <target state="translated">如果你的代码修改它还原的值之前，此方法返回的数组内的单个字节值，则必须确保不要无意中更改符号位。</target>       </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>For example, if your modifications increase a positive value so that the highest-order bit in the last element of the byte array becomes set, you can add a new byte whose value is zero to the end of the array.</source>
          <target state="translated">例如，如果您的修改，以便最高顺序位的字节数组的最后一个元素中增加是正数值成为集，则可以添加其值为 0 到数组末尾的新字节。</target>       </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>The following example illustrates how some <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values are represented in byte arrays.</source>
          <target state="translated">下面的示例演示如何某些<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值以字节数组表示。</target>       </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Converts the numeric value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to its equivalent string representation.</source>
          <target state="translated">将当前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象的数值转换为其等效字符串表示形式。</target>       </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString">
          <source>Converts the numeric value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to its equivalent string representation.</source>
          <target state="translated">将当前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象的数值转换为其等效字符串表示形式。</target>       </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString">
          <source>The string representation of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">当前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value in the "R", or round-trip, format of the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString&gt;</ph>方法格式<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>"R"或往返，当前区域性的格式中的值。</target>       </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>If you want to specify a different format or culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">如果你想要指定其他文件格式或区域性，使用的其他重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph>方法，如下所示：</target>       </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>To use format</source>
          <target state="translated">若要使用格式</target>       </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>For culture</source>
          <target state="translated">区域性</target>       </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>Use the overload</source>
          <target state="translated">使用的重载</target>       </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>Round-trip ("R") format</source>
          <target state="translated">Round-trip ("R") 格式</target>       </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>A specific culture</source>
          <target state="translated">特定区域性</target>       </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>A specific format</source>
          <target state="translated">特定的格式</target>       </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>Default (current) culture</source>
          <target state="translated">默认值 （当前） 区域性</target>       </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>A specific format</source>
          <target state="translated">特定的格式</target>       </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>A specific culture</source>
          <target state="translated">特定区域性</target>       </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value includes a negative sign if its value is negative, and a sequence of digits ranging from 0 to 9 without leading zeros.</source>
          <target state="translated">字符串表示形式<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值包括一个负号，如果其值为负数，且一系列的范围从 0 到 9，不带前导零的数字。</target>       </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>The negative sign is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture.</source>
          <target state="translated">负号由<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>为当前区域性的对象。</target>       </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>The following example displays a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value by using the default <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString&gt;</ph> method.</source>
          <target state="translated">下面的示例显示<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>通过使用默认值<ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>It also displays the string representations of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that results from using some standard format specifiers.</source>
          <target state="translated">它还显示的字符串表示形式<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>通过使用某些标准格式说明符得到的值。</target>       </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>The examples are displayed using the formatting conventions of the en-US culture.</source>
          <target state="translated">示例使用 EN-US 区域性的格式设置约定来显示。</target>       </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">一个提供区域性特定的格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>Converts the numeric value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to its equivalent string representation by using the specified culture-specific formatting information.</source>
          <target state="translated">使用指定的区域性特定格式设置信息将当前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象的数值转换为它的等效字符串表示形式。</target>       </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The string representation of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value in the format specified by the <ph id="ph2">&lt;paramref name="provider" /&gt;</ph> parameter.</source>
          <target state="translated">当前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的字符串表示形式，该值使用 <ph id="ph2">&lt;paramref name="provider" /&gt;</ph> 参数指定的格式。</target>       </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value in the "R", or round-trip, format by using the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of a specified culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29&gt;</ph>方法格式<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值中的"R"，或往返中，使用来格式化<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>指定区域性的对象。</target>       </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>If you want to specify a different format or the current culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">如果你想要指定不同的格式或当前区域性，使用的其他重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph>方法，如下所示：</target>       </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>To use format</source>
          <target state="translated">若要使用格式</target>       </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>For culture</source>
          <target state="translated">区域性</target>       </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>Use the overload</source>
          <target state="translated">使用的重载</target>       </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>Round-trip ("R") format</source>
          <target state="translated">Round-trip ("R") 格式</target>       </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">默认值 （当前） 区域性</target>       </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>A specific format</source>
          <target state="translated">特定的格式</target>       </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">默认值 （当前） 区域性</target>       </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>A specific format</source>
          <target state="translated">特定的格式</target>       </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>A specific culture</source>
          <target state="translated">特定区域性</target>       </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>参数是<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>实现。</target>       </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of the string returned by this method.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法返回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供此方法返回的字符串的格式的区域性特定信息的对象。</target>       </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is formatted using the <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the current culture.</source>
          <target state="translated">如果<ph id="ph1">`provider`</ph>是<ph id="ph2">`null`</ph>、<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的格式使用<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>当前区域性的对象。</target>       </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The only property of the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that controls the string representation of the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value using the general format specifier is <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph>, which defines the character that represents the negative sign.</source>
          <target state="translated">唯一属性<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>控制的字符串表示形式的对象<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>使用常规格式说明符的值是<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph>，它定义表示负号的字符。</target>       </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter can be one of the following:</source>
          <target state="translated"><ph id="ph1">`provider`</ph>参数可以是以下之一：</target>       </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>表示的区域性的提供格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>A custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">实现一个自定义对象<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法返回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The following example instantiates a custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that defines the tilde (~) as a negative sign.</source>
          <target state="translated">下面的示例实例化自定义<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>波形符 （~） 定义为负号的对象。</target>       </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29&gt;</ph> method then uses the custom <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object to display a negative <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29&gt;</ph>方法然后使用自定义<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>对象来显示一个负<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>A standard or custom numeric format string.</source>
          <target state="translated">标准或自定义的数值格式字符串。</target>       </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>Converts the numeric value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to its equivalent string representation by using the specified format.</source>
          <target state="translated">使用指定的格式将当前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象的数值转换为它的等效字符串表示形式。</target>       </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>The string representation of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value in the format specified by the <ph id="ph2">&lt;paramref name="format" /&gt;</ph> parameter.</source>
          <target state="translated">当前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的字符串表示形式，该值使用 <ph id="ph2">&lt;paramref name="format" /&gt;</ph> 参数指定的格式。</target>       </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value in a specified format by using a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that represents the conventions of the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29&gt;</ph>方法格式<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>中通过使用指定的格式值<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>对象，表示当前区域性的约定。</target>       </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>If you want to use the "R", or round-trip, format or specify a different culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">如果你想要使用"R"或往返，格式或指定不同的区域性，请使用其他重载的<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph>方法，如下所示：</target>       </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>To use format</source>
          <target state="translated">若要使用格式</target>       </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>For culture</source>
          <target state="translated">区域性</target>       </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>Use the overload</source>
          <target state="translated">使用的重载</target>       </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>Round-trip ("R") format</source>
          <target state="translated">Round-trip ("R") 格式</target>       </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>Default (current) culture</source>
          <target state="translated">默认值 （当前） 区域性</target>       </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>Round-trip ("R") format</source>
          <target state="translated">Round-trip ("R") 格式</target>       </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>A specific culture</source>
          <target state="translated">特定区域性</target>       </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>A specific format</source>
          <target state="translated">特定的格式</target>       </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>A specific culture</source>
          <target state="translated">特定区域性</target>       </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid <bpt id="p1">[</bpt>standard numeric string<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>, or any combination of <bpt id="p2">[</bpt>custom numeric format strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated"><ph id="ph1">`format`</ph>参数可以是任何有效<bpt id="p1">[</bpt>标准数字字符串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>，或的任意组合<bpt id="p2">[</bpt>自定义数字格式字符串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>If <ph id="ph1">`format`</ph> is equal to <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> or is <ph id="ph3">`null`</ph>, the return value of the current <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> object is formatted with the round-trip format specifier ("R").</source>
          <target state="translated">如果<ph id="ph1">`format`</ph>等同于<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>或<ph id="ph3">`null`</ph>，当前的返回值<ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象使用往返过程格式说明符 ("R") 进行格式化。</target>       </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>If <ph id="ph1">`format`</ph> is any other value, the method throws a <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`format`</ph>是任何其他值，该方法将引发<ph id="ph2">&lt;xref:System.FormatException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</target>       </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">有关数字格式说明符的详细信息，请参阅<bpt id="p1">[</bpt>标准数字格式字符串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自定义数字格式字符串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>For more information about support for formatting in the .NET Framework, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">有关.NET Framework 中的格式设置支持的详细信息，请参阅<bpt id="p1">[</bpt>格式化类型<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>The format of the returned string is determined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture.</source>
          <target state="translated">返回字符串的格式由<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>为当前区域性的对象。</target>       </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>Depending on the <ph id="ph1">`format`</ph> parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string.</source>
          <target state="translated">具体取决于<ph id="ph1">`format`</ph>参数，此对象控制输出字符串中的负号、 组分隔符和小数点符号等符号。</target>       </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>To provide formatting information for cultures other than the current culture, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> overload.</source>
          <target state="translated">若要提供区域性而非当前区域性的格式设置信息，请调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph>重载。</target>       </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>The following example initializes a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value and displays it by using each standard format string and some custom format strings.</source>
          <target state="translated">下面的示例初始化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值并将其显示通过使用每个标准格式字符串和某些自定义格式字符串。</target>       </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 不是有效的格式字符串。</target>       </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>A standard or custom numeric format string.</source>
          <target state="translated">标准或自定义的数值格式字符串。</target>       </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">一个提供区域性特定的格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Converts the numeric value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to its equivalent string representation by using the specified format and culture-specific format information.</source>
          <target state="translated">使用指定的格式和区域性特定格式信息将当前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 对象的数值转换为它的等效字符串表示形式。</target>       </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value as specified by the <ph id="ph2">&lt;paramref name="format" /&gt;</ph> and <ph id="ph3">&lt;paramref name="provider" /&gt;</ph> parameters.</source>
          <target state="translated">由 <ph id="ph2">&lt;paramref name="format" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="provider" /&gt;</ph> 参数指定的当前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value in a specified format by using the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of a specified culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph>方法格式<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>中通过使用指定的格式值<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>指定区域性的对象。</target>       </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>If you want to use the round-trip format or default culture settings, use the other overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">如果你想要使用的往返格式或默认区域性设置，使用的其他重载<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph>方法，如下所示：</target>       </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>To use format</source>
          <target state="translated">若要使用格式</target>       </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>For culture</source>
          <target state="translated">区域性</target>       </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Use the overload</source>
          <target state="translated">使用的重载</target>       </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Round-trip ("R") format</source>
          <target state="translated">Round-trip ("R") 格式</target>       </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">默认值 （当前） 区域性</target>       </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Round-trip ("R") format</source>
          <target state="translated">Round-trip ("R") 格式</target>       </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>A specific culture</source>
          <target state="translated">特定区域性</target>       </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>A specific format</source>
          <target state="translated">特定的格式</target>       </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">默认值 （当前） 区域性</target>       </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid  <bpt id="p1">[</bpt>standard numeric string<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>, or any combination of <bpt id="p2">[</bpt>custom numeric format strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated"><ph id="ph1">`format`</ph>参数可以是任何有效<bpt id="p1">[</bpt>标准数字字符串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>，或的任意组合<bpt id="p2">[</bpt>自定义数字格式字符串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is equal to <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> or is <ph id="ph3">`null`</ph>, the return value of the current <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> object is formatted with the round-trip format specifier ("R").</source>
          <target state="translated">如果<ph id="ph1">`format`</ph>等同于<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>或<ph id="ph3">`null`</ph>，当前的返回值<ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象使用往返过程格式说明符 ("R") 进行格式化。</target>       </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is any other value, the method throws a <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`format`</ph>是任何其他值，该方法将引发<ph id="ph2">&lt;xref:System.FormatException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</target>       </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">有关数字格式说明符的详细信息，请参阅<bpt id="p1">[</bpt>标准数字格式字符串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自定义数字格式字符串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>For more information about support for formatting in the .NET Framework, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">有关.NET Framework 中的格式设置支持的详细信息，请参阅<bpt id="p1">[</bpt>格式化类型<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>参数是<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>实现。</target>       </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of the string returned by this method.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法返回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供此方法返回的字符串的格式的区域性特定信息的对象。</target>       </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>When the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method is invoked, it calls the <ph id="ph2">`provider`</ph> parameter's <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method and passes it a <ph id="ph4">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> type.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph>调用方法时，它调用<ph id="ph2">`provider`</ph>参数的<ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法并将其传递<ph id="ph4">&lt;xref:System.Type&gt;</ph>对象，表示<ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>类型。</target>       </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method then returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides information for formatting the <ph id="ph3">`value`</ph> parameter, such as the negative sign symbol, the group separator symbol, or the decimal point symbol.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法然后返回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供的格式设置信息的对象<ph id="ph3">`value`</ph>参数，如负号符号、 组分隔符符号或小数点符号。</target>       </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>There are three ways to use the <ph id="ph1">`provider`</ph> parameter to supply formatting information to the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method:</source>
          <target state="translated">有三种方法使用<ph id="ph1">`provider`</ph>参数来提供到的格式设置信息<ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph>方法：</target>       </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>You can pass a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information.</source>
          <target state="translated">你可以将传递<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>表示的区域性的提供格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information for that culture.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph>方法返回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供该区域性的数字格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>You can pass the actual <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information.</source>
          <target state="translated">你可以将传递的实际<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供数字格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>(Its implementation of <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> just returns itself.)</source>
          <target state="translated">(其实现<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph>仅返回它自身。)</target>       </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>You can pass a custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">你可以传递的自定义对象，实现<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method instantiates and returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法实例化，并返回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the formatting of the returned string is based on the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the current culture.</source>
          <target state="translated">如果<ph id="ph1">`provider`</ph>是<ph id="ph2">`null`</ph>，返回字符串的格式设置将基于<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>当前区域性的对象。</target>       </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>The following example initializes a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, and displays it to the console using a standard format string and a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that defines the tilde (~) as a negative sign.</source>
          <target state="translated">下面的示例初始化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，并将其显示到控制台中使用标准格式字符串和<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>波形符 （~） 定义为负号的对象。</target>       </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 不是有效的格式字符串。</target>       </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Tries to convert the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent, and returns a value that indicates whether the conversion succeeded.</source>
          <target state="translated">尝试将数字的字符串表示形式转换为它的等效 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>，并返回一个指示转换是否成功的值。</target>       </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The string representation of a number.</source>
          <target state="translated">数字的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>When this method returns, contains the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent to the number that is contained in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>, or zero (0) if the conversion fails.</source>
          <target state="translated">当此方法返回时，包含与 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 中所包含的数字等效的<ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>；如果转换失败，则包含零 (0)。</target>       </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The conversion fails if the <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or is not of the correct format.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 参数为 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 或格式不正确，则转换失败。</target>       </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">此参数未经初始化即被传递。</target>       </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>Tries to convert the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent, and returns a value that indicates whether the conversion succeeded.</source>
          <target state="translated">尝试将数字的字符串表示形式转换为它的等效 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>，并返回一个指示转换是否成功的值。</target>       </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 成功转换，则为 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29&gt;</ph> method is like the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%29&gt;</ph> method, except that it does not throw an exception if the conversion fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29&gt;</ph>方法就像是<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%29&gt;</ph>方法，但它不会引发异常，如果转换失败。</target>       </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>This method eliminates the need to use exception handling to test for a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> if <ph id="ph2">`value`</ph> is invalid and cannot be successfully parsed.</source>
          <target state="translated">此方法无需使用异常处理来测试是否<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>如果<ph id="ph2">`value`</ph>无效，无法成功分析。</target>       </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`value`</ph> parameter should be the string representation of a decimal number in the following form:</source>
          <target state="translated"><ph id="ph1">`value`</ph>参数应为以下形式的十进制数字的字符串表示：</target>       </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>]<bpt id="p3">*</bpt>digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>ws<ept id="p4">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>]<bpt id="p3">*</bpt>digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>ws<ept id="p4">*</ept>]</target>       </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">方括号 ([ and ]) 中的元素是可选的。</target>       </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每个元素。</target>       </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>Optional white space.</source>
          <target state="translated">可选的空白区域。</target>       </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>An optional sign.</source>
          <target state="translated">一个可选符号后。</target>       </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>Valid sign characters are determined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph> properties of the current culture.</source>
          <target state="translated">有效的符号字符由<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph>当前区域性的属性。</target>       </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>A sequence of decimal digits ranging from 0 to 9.</source>
          <target state="translated">范围从 0 到 9 的十进制数字的序列。</target>       </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The string specified by the <ph id="ph1">`value`</ph> parameter cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</source>
          <target state="translated">指定的字符串<ph id="ph1">`value`</ph>参数不能包含任何组分隔符或小数分隔符，并且它不能具有小数部分。</target>       </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`value`</ph> parameter is interpreted by using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph> style.</source>
          <target state="translated"><ph id="ph1">`value`</ph>参数解释使用<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph>样式。</target>       </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</source>
          <target state="translated">十进制数字，除了允许仅前导空格和尾随空格带有前导符号。</target>       </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>To explicitly define the style elements with the culture-specific formatting information that can be present in <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> method.</source>
          <target state="translated">若要显式定义可出现在的区域性特定格式设置信息的样式元素<ph id="ph1">`value`</ph>，调用<ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`value`</ph> parameter is parsed by using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture.</source>
          <target state="translated"><ph id="ph1">`value`</ph>通过使用中的格式设置信息分析参数<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>为当前区域性的对象。</target>       </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">有关详情，请参阅<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>This overload interprets all digits in the <ph id="ph1">`value`</ph> parameter as decimal digits.</source>
          <target state="translated">此重载将解释中的所有位<ph id="ph1">`value`</ph>为十进制数字的参数。</target>       </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>To parse the string representation of a hexadecimal number, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> overload instead.</source>
          <target state="translated">若要分析的字符串表示形式的十六进制数，请调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph>重载。</target>       </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29&gt;</ph> method to instantiate two <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29&gt;</ph>方法可实例化两个<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>If the conversions succeed, it multiplies each object by another number and then calls the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph> method to determine the relationship between the two objects.</source>
          <target state="translated">如果转换成功，它将乘以每个对象由另一个数，然后调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph>方法来确定两个对象之间的关系。</target>       </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The string representation of a number.</source>
          <target state="translated">数字的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The string is interpreted using the style specified by <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">该字符串使用由 <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept> 指定的样式来进行解释。</target>       </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A bitwise combination of enumeration values that indicates the style elements that can be present in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">枚举值的按位组合，用于指示可出现在 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 中的样式元素。</target>       </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph>.</source>
          <target state="translated">要指定的一个典型值为 <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>An object that supplies culture-specific formatting information about <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">一个对象，提供有关 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 的区域性特定格式设置信息。</target>       </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>When this method returns, contains the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent to the number that is contained in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>, or <ph id="ph2">&lt;see cref="P:System.Numerics.BigInteger.Zero" /&gt;</ph> if the conversion failed.</source>
          <target state="translated">当此方法返回时，包含与 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 中所包含的数字等效的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>；如果转换失败，则包含 <ph id="ph2">&lt;see cref="P:System.Numerics.BigInteger.Zero" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The conversion fails if the <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or is not in a format that is compliant with <bpt id="p2">&lt;c&gt;</bpt>style<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 参数为 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 或其格式不符合 <bpt id="p2">&lt;c&gt;</bpt>style<ept id="p2">&lt;/c&gt;</ept>，则转换失败。</target>       </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">此参数未经初始化即被传递。</target>       </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Tries to convert the string representation of a number in a specified style and culture-specific format to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent, and returns a value that indicates whether the conversion succeeded.</source>
          <target state="translated">尝试将指定样式和区域性特定格式的数字的字符串表示形式转换为其 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 等效项，并返回一个指示转换是否成功的值。</target>       </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 参数成功转换，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> method is like the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph> method, except that it does not throw an exception if the conversion fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph>方法就像是<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph>方法，但它不会引发异常，如果转换失败。</target>       </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>This method eliminates the need to use exception handling to test for a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> if <ph id="ph2">`value`</ph> is invalid and cannot be parsed successfully.</source>
          <target state="translated">此方法无需使用异常处理来测试是否<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>如果<ph id="ph2">`value`</ph>无效，无法成功分析。</target>       </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the <ph id="ph2">`value`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated"><ph id="ph1">`style`</ph>参数定义中允许的样式元素 （如空白或正整数或负号）<ph id="ph2">`value`</ph>分析操作成功的参数。</target>       </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">它必须是中的位标志的组合<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`value`</ph> parameter may include the following elements:</source>
          <target state="translated">根据值<ph id="ph1">`style`</ph>、<ph id="ph2">`value`</ph>参数可能包括以下元素：</target>       </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>][<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>digits<ept id="p4">*</ept>,]<bpt id="p5">*</bpt>digits<ept id="p5">*</ept>[.<bpt id="p6">*</bpt>fractional_digits<ept id="p6">*</ept>][E[<bpt id="p7">*</bpt>sign<ept id="p7">*</ept>]<bpt id="p8">*</bpt>exponential_digits<ept id="p8">*</ept>][<bpt id="p9">*</bpt>ws<ept id="p9">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>][<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>digits<ept id="p4">*</ept>,]<bpt id="p5">*</bpt>digits<ept id="p5">*</ept>[.<bpt id="p6">*</bpt>fractional_digits<ept id="p6">*</ept>][E[<bpt id="p7">*</bpt>sign<ept id="p7">*</ept>]<bpt id="p8">*</bpt>exponential_digits<ept id="p8">*</ept>][<bpt id="p9">*</bpt>ws<ept id="p9">*</ept>]</target>       </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>If the <ph id="ph1">`style`</ph> parameter includes <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>, the <ph id="ph3">`value`</ph> parameter may include the following elements:</source>
          <target state="translated">如果<ph id="ph1">`style`</ph>参数包含<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>、<ph id="ph3">`value`</ph>参数可能包括以下元素：</target>       </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>]<bpt id="p2">*</bpt>hexdigits<ept id="p2">*</ept>[<bpt id="p3">*</bpt>ws<ept id="p3">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>]<bpt id="p2">*</bpt>hexdigits<ept id="p2">*</ept>[<bpt id="p3">*</bpt>ws<ept id="p3">*</ept>]</target>       </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">方括号 ([ and ]) 中的元素是可选的。</target>       </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每个元素。</target>       </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Optional white space.</source>
          <target state="translated">可选的空白区域。</target>       </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>White space can appear at the start of <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, or at the end of <ph id="ph4">`value`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">空格可以出现在开始<ph id="ph1">`value`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>标志，或在末尾<ph id="ph4">`value`</ph>如果<ph id="ph5">`style`</ph>包括<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">特定于区域性的货币符号。</target>       </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method of the <ph id="ph4">`provider`</ph> parameter.</source>
          <target state="translated">在字符串中的位置由<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>返回对象<ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法<ph id="ph4">`provider`</ph>参数。</target>       </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The currency symbol can appear in <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">货币符号可以出现在<ph id="ph1">`value`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>An optional sign.</source>
          <target state="translated">一个可选符号后。</target>       </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The sign can appear at the start of <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`value`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">符号可以出现在开始<ph id="ph1">`value`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph>标志，它可以出现在末尾<ph id="ph4">`value`</ph>如果<ph id="ph5">`style`</ph>包括<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Parentheses can be used in <ph id="ph1">`value`</ph> to indicate a negative value if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">可以在使用括号<ph id="ph1">`value`</ph>以指示负值，如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A sequence of digits from 0 through 9.</source>
          <target state="translated">一系列从 0 到 9 的数字。</target>       </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>，<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A culture-specific group separator.</source>
          <target state="translated">特定于区域性的组分隔符。</target>       </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The group separator of the culture specified by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`value`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">指定的区域性的组分隔符<ph id="ph1">`provider`</ph>可以出现在<ph id="ph2">`value`</ph>如果<ph id="ph3">`style`</ph>包括<ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">特定于区域性的小数点符号。</target>       </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The decimal point symbol of the culture specified by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`value`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">指定的区域性的小数点符号<ph id="ph1">`provider`</ph>可以出现在<ph id="ph2">`value`</ph>如果<ph id="ph3">`style`</ph>包括<ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>One or more occurrences of the digit 0.</source>
          <target state="translated">数字 0 的一个或多个匹配项。</target>       </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Fractional digits can appear in <ph id="ph1">`value`</ph> only if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">小数位数可以出现在<ph id="ph1">`value`</ph>才<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>E</source>
          <target state="translated">E</target>       </trans-unit>
        <trans-unit id="1805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</source>
          <target state="translated">"E"或者"E"字符，指示该值表示指数 （科学型） 表示法。</target>       </trans-unit>
        <trans-unit id="1806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`value`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`value`</ph>参数可以表示指数记数法的数字，如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A sequence of digits from 0 through 9.</source>
          <target state="translated">一系列从 0 到 9 的数字。</target>       </trans-unit>
        <trans-unit id="1809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`value`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`value`</ph>参数可以表示指数记数法的数字，如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A sequence of hexadecimal digits from 0 through f, or 0 through F.</source>
          <target state="translated">一系列从 0 到 f 或从 0 到 F.的十六进制数字</target>       </trans-unit>
        <trans-unit id="1812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A string with decimal digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> flag) always parses successfully.</source>
          <target state="translated">仅为十进制数字的字符串 (它对应于<ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph>标志) 总是可以分析成功。</target>       </trans-unit>
        <trans-unit id="1813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Most of the remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be present, but are not required to be present, in this input string.</source>
          <target state="translated">其余的大多数<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>成员控件可能会存在，但不是要求必须存在，此输入字符串中的元素。</target>       </trans-unit>
        <trans-unit id="1814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id="ph2">`value`</ph>.</source>
          <target state="translated">下表指示个别<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>成员影响中可能存在的元素<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Non-composite <ph id="ph1">`NumberStyles`</ph> values</source>
          <target state="translated">非复合<ph id="ph1">`NumberStyles`</ph>值</target>       </trans-unit>
        <trans-unit id="1816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Elements permitted in value in addition to digits</source>
          <target state="translated">除数字之外的值中允许的元素</target>       </trans-unit>
        <trans-unit id="1817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Decimal digits only.</source>
          <target state="translated">仅为十进制数字。</target>       </trans-unit>
        <trans-unit id="1818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The decimal point (<bpt id="p1">*</bpt>.<ept id="p1">*</ept>) and <bpt id="p2">*</bpt>fractional_digits<ept id="p2">*</ept> elements.</source>
          <target state="translated">小数点 (<bpt id="p1">*</bpt>。<ept id="p1">*</ept>) 和<bpt id="p2">*</bpt>fractional_digits<ept id="p2">*</ept>元素。</target>       </trans-unit>
        <trans-unit id="1819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>However, <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> must consist of only one or more 0 digits, or the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">但是， <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>仅一个或多个数字 0 或该方法将返回必须组成<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="1820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The "e" or "E" character, which indicates exponential notation, along with <bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept>.</source>
          <target state="translated">"E"或"E"字符，它指示指数记数法，连同<bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept>。</target>       </trans-unit>
        <trans-unit id="1821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>If <ph id="ph1">`value`</ph> represents a number in exponential notation, it cannot have a non-zero, fractional component.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>表示的数字在指数记数法，它不能有非零、 小数组件。</target>       </trans-unit>
        <trans-unit id="1822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the start of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>起始处的元素<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>结尾的元素<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element before <bpt id="p2">*</bpt>digits<ept id="p2">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>登录<ept id="p1">*</ept>元素之前<bpt id="p2">*</bpt>数字<ept id="p2">*</ept>。</target>       </trans-unit>
        <trans-unit id="1825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element after <bpt id="p2">*</bpt>digits<ept id="p2">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>登录<ept id="p1">*</ept>元素的后面<bpt id="p2">*</bpt>数字<ept id="p2">*</ept>。</target>       </trans-unit>
        <trans-unit id="1826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element in the form of parentheses enclosing the numeric value.</source>
          <target state="translated"><bpt id="p1">*</bpt>登录<ept id="p1">*</ept>在括号内包含的数字值的窗体中的元素。</target>       </trans-unit>
        <trans-unit id="1827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The group separator (<bpt id="p1">*</bpt>,<ept id="p1">*</ept>) element.</source>
          <target state="translated">组分隔符 (<bpt id="p1">*</bpt>，<ept id="p1">*</ept>) 元素。</target>       </trans-unit>
        <trans-unit id="1828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The currency (<bpt id="p1">*</bpt><ph id="ph1">$</ph><ept id="p1">*</ept>) element.</source>
          <target state="translated">货币 (<bpt id="p1">*</bpt><ph id="ph1">$</ph><ept id="p1">*</ept>) 元素。</target>       </trans-unit>
        <trans-unit id="1829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>All elements.</source>
          <target state="translated">所有元素。</target>       </trans-unit>
        <trans-unit id="1830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>However, <ph id="ph1">`value`</ph> cannot represent a hexadecimal number or a number in exponential notation.</source>
          <target state="translated">但是，<ph id="ph1">`value`</ph>不能表示十六进制数或指数记数法的数字。</target>       </trans-unit>
        <trans-unit id="1831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the start or end of <ph id="ph1">`value`</ph>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept> at the start of <ph id="ph2">`value`</ph>, and the decimal point (<bpt id="p3">*</bpt>.<ept id="p3">*</ept>) symbol.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>开头或末尾的元素<ph id="ph1">`value`</ph>，<bpt id="p2">*</bpt>登录<ept id="p2">*</ept>开头的<ph id="ph2">`value`</ph>，和小数点 (<bpt id="p3">*</bpt>。<ept id="p3">*</ept>) 符号。</target>       </trans-unit>
        <trans-unit id="1832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`value`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`value`</ph>参数还可以使用指数记数法。</target>       </trans-unit>
        <trans-unit id="1833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept>, group separator (<bpt id="p3">*</bpt>,<ept id="p3">*</ept>), and decimal point (<bpt id="p4">*</bpt>.<ept id="p4">*</ept>) elements.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>，<bpt id="p2">*</bpt>登录<ept id="p2">*</ept>，组分隔符 (<bpt id="p3">*</bpt>，<ept id="p3">*</ept>)，和小数点 (<bpt id="p4">*</bpt>。<ept id="p4">*</ept>) 元素。</target>       </trans-unit>
        <trans-unit id="1834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>All elements.</source>
          <target state="translated">所有元素。</target>       </trans-unit>
        <trans-unit id="1835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>However, <ph id="ph1">`value`</ph> cannot represent a hexadecimal number.</source>
          <target state="translated">但是，<ph id="ph1">`value`</ph>无法表示十六进制数字。</target>       </trans-unit>
        <trans-unit id="1836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%2A&gt;</ph> method to round-trip the string representation of a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that was output by the <ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, you should use the <ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> method with the "R" format specifier to generate the string representation of the <ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">如果你使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%2A&gt;</ph>保存/还原的字符串表示的方法的<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>已输出的值<ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph>方法，则应使用<ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph>使用"R"格式说明符生成的字符串表示形式的方法<ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Otherwise, the string representation of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%2A&gt;</ph> method to restore the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">否则为的字符串表示形式<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>仅 50，最高有效位的原始值和数据可能会丢失，当你使用保留<ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%2A&gt;</ph>方法，使还原<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> flag is used, <ph id="ph2">`value`</ph> must be a hexadecimal value.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph>使用标志，<ph id="ph2">`value`</ph>必须是十六进制值。</target>       </trans-unit>
        <trans-unit id="1839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The only other flags that can be present in <ph id="ph1">`style`</ph> are <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">仅其他标志可出现在<ph id="ph1">`style`</ph>是<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>和<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>(The <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration has a composite style, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber&gt;</ph>, that includes both white-space flags.)</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>枚举具有复合样式， <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber&gt;</ph>，其中包含两个空白标志。)</target>       </trans-unit>
        <trans-unit id="1841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>If <ph id="ph1">`value`</ph> is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as <ph id="ph2">`0x`</ph> or <ph id="ph3">`&amp;h`</ph>) that differentiates it as a hexadecimal number.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>是的字符串表示的十六进制数，则无法将前面添加的任何修饰符 (如<ph id="ph2">`0x`</ph>或<ph id="ph3">`&amp;h`</ph>) 用于将其识别为十六进制数。</target>       </trans-unit>
        <trans-unit id="1842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>This causes the conversion to fail.</source>
          <target state="translated">这将导致转换失败。</target>       </trans-unit>
        <trans-unit id="1843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>If <ph id="ph1">`value`</ph> is a hexadecimal string, the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> method interprets <ph id="ph3">`value`</ph> as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to <ph id="ph4">`0x80`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>是一个十六进制的字符串，<ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph>方法将解释<ph id="ph3">`value`</ph>作为使用 2 的补数表示，其前两个十六进制数字是否大于或等于存储的负数<ph id="ph4">`0x80`</ph>。</target>       </trans-unit>
        <trans-unit id="1844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>In other words, the method interprets the highest-order bit of the first byte in <ph id="ph1">`value`</ph> as the sign bit.</source>
          <target state="translated">换而言之，此方法将解释中的第一个字节的最高顺序位<ph id="ph1">`value`</ph>用作符号位。</target>       </trans-unit>
        <trans-unit id="1845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in <ph id="ph1">`value`</ph> must have a value of zero.</source>
          <target state="translated">若要确保十六进制字符串正确地解释为正数中的第一个数字<ph id="ph1">`value`</ph>必须具有值为零。</target>       </trans-unit>
        <trans-unit id="1846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>For example, the method interprets <ph id="ph1">`0x80`</ph> as a negative value, but it interprets either <ph id="ph2">`0x080`</ph> or <ph id="ph3">`0x0080`</ph> as a positive value.</source>
          <target state="translated">例如，此方法将解释<ph id="ph1">`0x80`</ph>为负值，但它解释<ph id="ph2">`0x080`</ph>或<ph id="ph3">`0x0080`</ph>为正值。</target>       </trans-unit>
        <trans-unit id="1847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</source>
          <target state="translated">下面的示例演示了表示正负值的十六进制字符串之间的差异。</target>       </trans-unit>
        <trans-unit id="1848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>参数是<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>实现。</target>       </trans-unit>
        <trans-unit id="1849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of <ph id="ph3">`value`</ph>.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法返回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>对象，提供区域性特定信息的格式<ph id="ph3">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`provider`</ph> parameter can be any one of the following:</source>
          <target state="translated"><ph id="ph1">`provider`</ph>参数可以是以下任何一个：</target>       </trans-unit>
        <trans-unit id="1851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>表示的区域性的提供格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Its <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information for that culture.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph>方法返回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供该区域性的数字格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供数字格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>(Its implementation of <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> just returns itself.)</source>
          <target state="translated">(其实现<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph>仅返回它自身。)</target>       </trans-unit>
        <trans-unit id="1855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">实现一个自定义对象<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method instantiates and returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法实例化，并返回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="1857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture is used.</source>
          <target state="translated">如果<ph id="ph1">`provider`</ph>是<ph id="ph2">`null`</ph>、<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>对象使用当前区域性的。</target>       </trans-unit>
        <trans-unit id="1858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The following example makes some calls to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> method using various combinations of values for the <ph id="ph2">`style`</ph> and <ph id="ph3">`provider`</ph> parameters.</source>
          <target state="translated">下面的示例调用某些<ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph>方法使用的值的各种组合<ph id="ph2">`style`</ph>和<ph id="ph3">`provider`</ph>参数。</target>       </trans-unit>
        <trans-unit id="1859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A number of the individual calls to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> method pass an instance of the following <ph id="ph2">`BigIntegerFormatProvider`</ph> class, which defines a tilde (~) as the negative sign.</source>
          <target state="translated">大量的单独调用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph>方法的以下实例传递<ph id="ph2">`BigIntegerFormatProvider`</ph>类，该类为负号定义波形符 （~）。</target>       </trans-unit>
        <trans-unit id="1860" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1861" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="1862" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> includes the <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> flag along with another value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> 包括 <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> 标志以及另一个值。</target>       </trans-unit>
        <trans-unit id="1863" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.Zero">
          <source>Gets a value that represents the number 0 (zero).</source>
          <target state="translated">获取一个表示数字 0（零）的值。</target>       </trans-unit>
        <trans-unit id="1864" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Zero">
          <source>An integer whose value is 0 (zero).</source>
          <target state="translated">其值为 0（零）的整数。</target>       </trans-unit>
        <trans-unit id="1865" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Zero">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object returned by this property provides a convenient source of a zero value for use in assignments and comparisons.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>此属性返回的对象提供方便的来源的零值在赋值和比较中使用。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>