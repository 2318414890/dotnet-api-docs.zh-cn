<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Complex.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51adbe02d035bfc5cd2896e8b0e40079375718a5e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1adbe02d035bfc5cd2896e8b0e40079375718a5e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Represents a complex number.</source>
          <target state="translated">表示一个复数。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>A complex number is a number that comprises a real number part and an imaginary number part.</source>
          <target state="translated">一个复数是一个数字就会包含实数部分和虚数部分。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>A complex number z is usually written in the form z = x + yi, where <bpt id="p1">*</bpt>x<ept id="p1">*</ept> and <bpt id="p2">*</bpt>y<ept id="p2">*</ept> are real numbers, and <bpt id="p3">*</bpt>i<ept id="p3">*</ept> is the imaginary unit that has the property <bpt id="p4">*</bpt>i<ept id="p4">*</ept><bpt id="p5">&lt;sup&gt;</bpt>2<ept id="p5">&lt;/sup&gt;</ept> = -1.</source>
          <target state="translated">在窗体 z 通常编写复数 z = x + 彝语，其中<bpt id="p1">*</bpt>x<ept id="p1">*</ept>和<bpt id="p2">*</bpt>y<ept id="p2">*</ept>为实数，和<bpt id="p3">*</bpt>我<ept id="p3">*</ept>是具有属性的虚单元<bpt id="p4">*</bpt>i<ept id="p4">*</ept><bpt id="p5">&lt;sup&gt;</bpt>2<ept id="p5">&lt;/sup&gt;</ept> =-1。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The real part of the complex number is represented by <bpt id="p1">*</bpt>x<ept id="p1">*</ept>, and the imaginary part of the complex number is represented by <bpt id="p2">*</bpt>y<ept id="p2">*</ept>.</source>
          <target state="translated">由表示复数的实部<bpt id="p1">*</bpt>x<ept id="p1">*</ept>，并且由表示复数的虚部<bpt id="p2">*</bpt>y<ept id="p2">*</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> type uses the Cartesian coordinate system (real, imaginary) when instantiating and manipulating complex numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph>类型使用笛卡尔坐标系统 （实数，虚数） 时实例化和操作的复数。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>A complex number can be represented as a point in a two-dimensional coordinate system, which is known as the complex plane.</source>
          <target state="translated">复数可以表示为一个二维的坐标系统，这被称为复平面中的点。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The real part of the complex number is positioned on the x-axis (the horizontal axis), and the imaginary part is positioned on the y-axis (the vertical axis).</source>
          <target state="translated">复数的实部位于 x 轴 （水平轴），并在 y 轴 （垂直轴） 上定位的虚部。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Any point in the complex plane can also be expressed based on its absolute value, by using the polar coordinate system., In polar coordinates, a point is characterized by two numbers:</source>
          <target state="translated">此外可以使用极坐标图坐标系统，在极坐标基于其绝对值的数值，表示复平面中的任何点，两个数字的特征是一个点：</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Its magnitude, which is the distance of the point from the origin (that is, 0,0, or the point at which the x-axis and the y-axis intersect).</source>
          <target state="translated">其量值，该值是从原点的点的距离 （即，0，0 或从该处 x 轴和 y 轴相交的点）。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Its phase, which is the angle between the real axis and the line drawn from the origin to the point.</source>
          <target state="translated">其阶段，是指真实的轴和从原点绘制到点行之间的角度。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Instantiating a Complex Number</source>
          <target state="translated">实例化一个复杂的数字</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>You can assign a value to a complex number in one of the following ways:</source>
          <target state="translated">通过以下方式之一，可以将值分配给一个复杂的数字：</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By passing two <ph id="ph1">&lt;xref:System.Double&gt;</ph> values to its constructor.</source>
          <target state="translated">通过将两个传递<ph id="ph1">&lt;xref:System.Double&gt;</ph>给其构造函数的值。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The first value represents the real part of the complex number, and the second value represents its imaginary part.</source>
          <target state="translated">第一个值表示复数的实部，第二个值表示的虚数部分。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>These values represent the position of the complex number in the two-dimensional Cartesian coordinate system.</source>
          <target state="translated">这些值表示复数的二维笛卡尔坐标系统中的位置。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By calling the static (<ph id="ph1">`Shared`</ph> in Visual Basic) <ph id="ph2">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=nameWithType&gt;</ph> method to create a complex number from its polar coordinates.</source>
          <target state="translated">通过调用静态 (<ph id="ph1">`Shared`</ph>在 Visual Basic 中)<ph id="ph2">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=nameWithType&gt;</ph>方法从其极坐标创建复数。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By assigning a <ph id="ph1">&lt;xref:System.Byte&gt;</ph>, <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph5">&lt;xref:System.Int32&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph7">&lt;xref:System.Int64&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt64&gt;</ph>, <ph id="ph9">&lt;xref:System.Single&gt;</ph>, or <ph id="ph10">&lt;xref:System.Double&gt;</ph> value to a <ph id="ph11">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">通过分配<ph id="ph1">&lt;xref:System.Byte&gt;</ph>， <ph id="ph2">&lt;xref:System.SByte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.UInt16&gt;</ph>， <ph id="ph5">&lt;xref:System.Int32&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt32&gt;</ph>， <ph id="ph7">&lt;xref:System.Int64&gt;</ph>， <ph id="ph8">&lt;xref:System.UInt64&gt;</ph>， <ph id="ph9">&lt;xref:System.Single&gt;</ph>，或<ph id="ph10">&lt;xref:System.Double&gt;</ph>值赋给<ph id="ph11">&lt;xref:System.Numerics.Complex&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The value becomes the real part of the complex number, and its imaginary part equals 0.</source>
          <target state="translated">值将成为复数的实部，并且其虚数部分等于 0。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By casting (in C#) or converting (in Visual Basic) a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> or <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">通过强制转换 （在 C# 中) 或转换 （在 Visual Basic 中)<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>或<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值赋给<ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The value becomes the real part of the complex number, and its imaginary part equals 0.</source>
          <target state="translated">值将成为复数的实部，并且其虚数部分等于 0。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By assigning the complex number that is returned by a method or operator to a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">通过分配由方法或运算符返回的复数<ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>For example, <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A?displayProperty=nameWithType&gt;</ph> is a static method that returns a complex number that is the sum of two complex numbers, and the <ph id="ph2">&lt;xref:System.Numerics.Complex.op_Addition%2A?displayProperty=nameWithType&gt;</ph> operator adds two complex numbers and returns the result.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A?displayProperty=nameWithType&gt;</ph>是返回之和的两个复数的复数的静态方法和<ph id="ph2">&lt;xref:System.Numerics.Complex.op_Addition%2A?displayProperty=nameWithType&gt;</ph>运算符添加两个复数并返回结果。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The following example demonstrates each of these five ways of assigning a value to a complex number.</source>
          <target state="translated">下面的示例演示每个值分配到复数的这些五种方法。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Operations with Complex Numbers</source>
          <target state="translated">复数的操作</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> structure in the .NET Framework includes members that provide the following functionality:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> .NET Framework 中的结构包含提供以下功能的成员：</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Methods to compare two complex numbers to determine whether they are equal.</source>
          <target state="translated">要比较两个复数相加，以确定它们是否相等的方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Operators to perform arithmetic operations on complex numbers.</source>
          <target state="translated">若要执行复杂数字的算术运算的运算符。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> operators enable you to perform addition, subtraction, multiplication, division, and unary negation with complex numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 运算符，可执行加法、 减法、 乘法、 除法和复数的一元求反。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Methods to perform other numerical operations on complex numbers.</source>
          <target state="translated">若要执行复杂数字的其他数字操作的方法。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>In addition to the four basic arithmetic operations, you can raise a complex number to a specified power, find the square root of a complex number, and get the absolute value of a complex number.</source>
          <target state="translated">除了四个基本算术运算，你可以引发的指定幂的复数，一个复数的平方根并获取复数的绝对值的数值。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Methods to perform trigonometric operations on complex numbers.</source>
          <target state="translated">执行对复数的三角运算的方法。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>For example, you can calculate the tangent of an angle represented by a complex number.</source>
          <target state="translated">例如，可以计算由一个复杂的数字表示的角度的正切值。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Note that, because the <ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> and  <ph id="ph2">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> properties are read-only, you cannot modify the value of an existing <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">请注意，因为<ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph>属性是只读的不能修改的现有值<ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>All methods that perform an operation on a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> number, if their return value is of type <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>, return a new <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> number.</source>
          <target state="translated">在执行操作的所有方法<ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph>其编号为，如果其返回值的类型是<ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>，返回一个新<ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph>数。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Precision and Complex Numbers</source>
          <target state="translated">精度和复数</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The real and imaginary parts of a complex number are represented by two double-precision floating-point values.</source>
          <target state="translated">由两个双精度浮点值表示复数的实部和虚部组成部分。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>This means that <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> values, like double-precision floating-point values, can lose precision as a result of numerical operations.</source>
          <target state="translated">这意味着，<ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph>的值，如双精度浮点值，可能会丢失精度数字操作后的。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>This means that strict comparisons for equality of two <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> values may fail, even if the difference between the two values is due to a loss of precision.</source>
          <target state="translated">这意味着，严格比较是否相等的两个<ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph>值可能会失败，即使两个值之间的差异是由于精度损失。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">有关详情，请参阅<ph id="ph1">&lt;xref:System.Double&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>For example, performing exponentiation on the logarithm of a number should return the original number.</source>
          <target state="translated">例如，数字的对数求幂应返回原始的数量。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>However, in some cases, the loss of precision of floating-point values can cause slight differences between the two values, as the following example illustrates.</source>
          <target state="translated">但是，在某些情况下，浮点值的精度丢失可能导致细微差异的两个值，如下面的示例所示。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Similarly, the following example, which calculates the square root of a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> number, produces slightly different results on the 32-bit and IA64 versions of the .NET Framework.</source>
          <target state="translated">同样，下面的示例中计算的平方根<ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph>编号，在 32 位和 IA64 版本的.NET Framework 上产生略有不同的结果。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Complex Numbers, Infinity, and NaN</source>
          <target state="translated">复数、 无穷大和 NaN</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The real and imaginary parts of a complex number are represented by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">由表示复数的实部和虚部组成部分<ph id="ph1">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>In addition to ranging from <ph id="ph1">&lt;xref:System.Double.MinValue?displayProperty=nameWithType&gt;</ph> to <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>, the real or imaginary part of a complex number can have a value of <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, or <ph id="ph5">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">除了从<ph id="ph1">&lt;xref:System.Double.MinValue?displayProperty=nameWithType&gt;</ph>到<ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>，复数的实部或虚部部分可以具有的值<ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>， <ph id="ph4">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>，或<ph id="ph5">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source><ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> all propagate in any arithmetic or trigonometric operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph><ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>，和<ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>所有传播中任何算术或三角运算。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>In the following example, division by <ph id="ph1">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> produces a complex number whose real and imaginary parts are both <ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">在下面的示例中，被除<ph id="ph1">&lt;xref:System.Numerics.Complex.Zero&gt;</ph>会生成一个复数，其实部和虚部的复数都<ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>As a result, performing multiplication with this value also produces a complex number whose real and imaginary parts are <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">因此，执行乘法的此值还将生成一个复数，其实部和虚部的复数是<ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Similarly, performing a multiplication that overflows the range of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> type produces a complex number whose real part is <ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> and whose imaginary part is <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">同样，执行溢出的范围乘法<ph id="ph1">&lt;xref:System.Double&gt;</ph>生成类型的复数的实部<ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>和其虚数部分是<ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Subsequently performing division with this complex number returns a complex number whose real part is <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> and whose imaginary part is <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">随后执行使用此复数的除法将返回复数的实部<ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>和其虚数部分是<ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Mathematical operations with complex numbers that are invalid or that overflow the range of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type do not throw an exception.</source>
          <target state="translated">使用无效或溢出的范围的复数的数学运算<ph id="ph1">&lt;xref:System.Double&gt;</ph>数据类型不会引发异常。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Instead, they return a <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, or <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> under the following conditions:</source>
          <target state="translated">相反，它们返回<ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>， <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>，或<ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>以下情况下：</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The division of a positive number by zero returns <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">相除的正数零返回<ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Any operation that overflows the upper bound of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type returns <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">溢出的上限的任何操作<ph id="ph1">&lt;xref:System.Double&gt;</ph>数据类型返回<ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The division of a negative number by zero returns <ph id="ph1">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">相除的零返回负数<ph id="ph1">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Any operation that overflows the lower bound of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type returns <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">溢出零下限的任何操作<ph id="ph1">&lt;xref:System.Double&gt;</ph>数据类型返回<ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The division of a zero by zero returns <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">零被零的除法运算返回<ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Any operation that is performed on operands whose values are <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, or <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> returns <ph id="ph4">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, or <ph id="ph6">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>, depending on the specific operation.</source>
          <target state="translated">将对其值是的操作数执行任何操作<ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>， <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>，或<ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>返回<ph id="ph4">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>， <ph id="ph5">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>，或<ph id="ph6">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>，取决于特定操作。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Note that this applies to any intermediate calculations performed by a method.</source>
          <target state="translated">请注意，这适用于执行的方法的任何中间计算。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>For example, the multiplication of <ph id="ph1">`new Complex(9e308, 9e308) and new Complex(2.5, 3.5)`</ph> uses the formula (ac - bd) + (ad + bc)i.</source>
          <target state="translated">例如的乘法<ph id="ph1">`new Complex(9e308, 9e308) and new Complex(2.5, 3.5)`</ph>使用公式 (ac-bd) + （ad + bc） 我。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The calculation of the real component that results from the multiplication evaluates the expression 9e308 * 2.5 - 9e308 * 3.5.</source>
          <target state="translated">乘法运算生成的实分量的计算的计算结果表达式 9e308 * 2.5-9e308 * 3.5。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Each intermediate multiplication in this expression returns <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, and the attempt to subtract <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> from <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> returns <ph id="ph4">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此表达式中的每个中间乘法返回<ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>，并尝试减去<ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>从<ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>返回<ph id="ph4">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Formatting a Complex Number</source>
          <target state="translated">格式设置一个复杂的数字</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By default, the string representation of a complex number takes the form <ph id="ph1">`(`</ph><bpt id="p1">*</bpt>real<ept id="p1">*</ept><ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>imaginary<ept id="p2">*</ept><ph id="ph3">`)`</ph>, where <bpt id="p3">*</bpt>real<ept id="p3">*</ept> and <bpt id="p4">*</bpt>imaginary<ept id="p4">*</ept> are the string representations of the <ph id="ph4">&lt;xref:System.Double&gt;</ph> values that form the complex number's real and imaginary components.</source>
          <target state="translated">默认情况下，一个复杂的数字的字符串表示形式<ph id="ph1">`(`</ph><bpt id="p1">*</bpt>实际<ept id="p1">*</ept><ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>虚部<ept id="p2">*</ept><ph id="ph3">`)`</ph>，其中<bpt id="p3">*</bpt>实际<ept id="p3">*</ept>和<bpt id="p4">*</bpt>虚部<ept id="p4">*</ept>是字符串表示形式<ph id="ph4">&lt;xref:System.Double&gt;</ph>形成复数的实部和虚部组件的值。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Some overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.ToString%2A&gt;</ph> method allow customization of the string representations of these <ph id="ph2">&lt;xref:System.Double&gt;</ph> values to reflect the formatting conventions of a particular culture or to appear in a particular format defined by a standard or custom numeric format string.</source>
          <target state="translated">某些重载<ph id="ph1">&lt;xref:System.Numerics.Complex.ToString%2A&gt;</ph>方法允许自定义的字符串表示形式这些<ph id="ph2">&lt;xref:System.Double&gt;</ph>以反映特定区域性的格式设置约定，或显示在定义的标准或自定义数字特定格式的值格式字符串。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>(For more information, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.)</source>
          <target state="translated">(有关详细信息，请参阅<bpt id="p1">[</bpt>标准数字格式字符串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自定义数字格式字符串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。)</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>One of the more common ways of expressing the string representation of a complex number takes the form a + bi, where a is the complex number's real component, and b is the complex number's imaginary component.</source>
          <target state="translated">一个更常见的方法来表示一个复杂的数字的字符串表示形式 a + bi，其中是复数的实部，而 b 是复数的虚部。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>In electrical engineering, a complex number is most commonly expressed as a + bj.</source>
          <target state="translated">在电气工程复数通常表示为 + bj。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>You can return the string representation of a complex number in either of these two forms.</source>
          <target state="translated">你可以在这两种形式之一返回一个复杂的数字的字符串表示。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>To do this, define a custom format provider by implementing the <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> and <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> interfaces, and then call the <ph id="ph3">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">若要执行此操作，定义自定义格式提供程序通过实现<ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph>和<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>接口，然后调用<ph id="ph3">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The following example defines a <ph id="ph1">`ComplexFormatter`</ph> class that represents a complex number as a string in the form of either a + bi or a + bj.</source>
          <target state="translated">下面的示例定义<ph id="ph1">`ComplexFormatter`</ph>的格式的字符串表示一个复数的类 a + bi 或 + bj。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The following example then uses this custom formatter to display the string representation of a complex number.</source>
          <target state="translated">下面的示例然后使用此自定义格式化程序来显示一个复杂的数字的字符串表示。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
          <source>The real part of the complex number.</source>
          <target state="translated">复数的实部。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
          <source>The imaginary part of the complex number.</source>
          <target state="translated">复数的虚部。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> structure using the specified real and imaginary values.</source>
          <target state="translated">使用指定的实数值和虚数值初始化 <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 结构的新实例。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
          <source>The <ph id="ph1">`real`</ph> or <ph id="ph2">`imaginary`</ph> arguments may lose precision if they are data types that require an explicit cast to <ph id="ph3">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`real`</ph>或<ph id="ph2">`imaginary`</ph>它们是否需要显式转换为数据类型，自变量可能会丢失精度<ph id="ph3">&lt;xref:System.Double&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
          <source>The following example instantiates two complex numbers, and then uses them in addition, subtraction, multiplication, and division operations.</source>
          <target state="translated">下面的示例实例化两个复数相加，，，然后在加法、 减法、 乘法和除法操作中使用它们。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">一个复数。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>Gets the absolute value (or magnitude) of a complex number.</source>
          <target state="translated">获取复数的绝对值（或量值）。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>The absolute value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的绝对值。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>The absolute value of a complex number is equivalent to its <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property.</source>
          <target state="translated">复数的绝对值是等效于其<ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>The absolute value of a real number a + bi is calculated as follows:</source>
          <target state="translated">实数数值的绝对值的数值 + bi 的计算方式如下：</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>If b = 0, the result is 0.</source>
          <target state="translated">如果 b = 0，则结果为 0。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>If a &gt; b, the result is a *<ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(1 + b<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>/a<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>).</source>
          <target state="translated">如果 &gt; b，结果是 *<ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(1 + b<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>/a<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>)。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>If b &gt; a, the result is b * <ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(1 + a<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>/b<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>).</source>
          <target state="translated">如果 b &gt;，则结果是 b * <ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(1 + a<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>/b<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>)。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>If the calculation of the absolute value results in an overflow, the method returns either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果绝对值的数值的计算导致溢出时，该方法返回<ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>If either the <ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> property is <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> and the other property is neither <ph id="ph4">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> nor <ph id="ph5">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, the method returns <ph id="ph6">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果任一<ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph>属性是<ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>和其他属性既不是<ph id="ph4">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>也不<ph id="ph5">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>，该方法返回<ph id="ph6">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>The following example calculates the absolute value of a complex number and demonstrates that it is equivalent to the value of the <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property.</source>
          <target state="translated">下面的示例计算复数的绝对值和演示的值等效<ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>A complex number that represents a cosine.</source>
          <target state="translated">表示余弦的复数。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>Returns the angle that is the arc cosine of the specified complex number.</source>
          <target state="translated">返回表示指定复数的反余弦值的角度。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>The angle, measured in radians, which is the arc cosine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">以弧度为单位的角度，它表示 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的反余弦。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Acos%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph>复数的方法都对应<ph id="ph2">&lt;xref:System.Math.Acos%2A?displayProperty=nameWithType&gt;</ph>实数的方法。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method uses the following formula:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph>方法使用以下公式：</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>(-<ph id="ph1">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph>) * <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph3">`value`</ph><ph id="ph4"> + </ph><ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph><ph id="ph6">*</ph><ph id="ph7">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph>(<ph id="ph8">&lt;xref:System.Numerics.Complex.One&gt;</ph><ph id="ph9"> - </ph><ph id="ph10">`value`</ph><ph id="ph11"> * </ph><ph id="ph12">`value`</ph>)))</source>
          <target state="translated">(-<ph id="ph1">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph>) * <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph3">`value`</ph><ph id="ph4"> + </ph><ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph><ph id="ph6">*</ph><ph id="ph7">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph>(<ph id="ph8">&lt;xref:System.Numerics.Complex.One&gt;</ph><ph id="ph9"> - </ph><ph id="ph10">`value`</ph><ph id="ph11"> * </ph><ph id="ph12">`value`</ph>)))</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">它显示该通过返回的值<ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph>方法返回原始<ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first complex number to add.</source>
          <target state="translated">要相加的第一个复数。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second complex number to add.</source>
          <target state="translated">要相加的第二个复数。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Adds two complex numbers and returns the result.</source>
          <target state="translated">将两个复数相加，并返回结果。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The sum of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> 与 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 的和。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The addition of a complex number, a + bi, and a second complex number, c + di, takes the following form:</source>
          <target state="translated">添加复杂的数字，a + bi，和第二个复数，c + di，采用以下形式：</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(a + c) + (b + d)i.</source>
          <target state="translated">（a + c） + （b + d） 我。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the method call results in an overflow in either the real or imaginary component, the value of the component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果该方法调用结果实部或虚部溢出，则个分量的值是<ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can use the <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A&gt;</ph> method to perform addition with complex numbers.</source>
          <target state="translated">不支持自定义运算符的语言可以使用<ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A&gt;</ph>方法来执行与复数的加法。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The following example illustrates addition with complex numbers.</source>
          <target state="translated">下面的示例演示添加复数。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">一个复数。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>Returns the angle that is the arc sine of the specified complex number.</source>
          <target state="translated">返回表示指定复数的反正弦值的角度。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>The angle which is the arc sine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">表示 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的反正弦值的角度。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Asin%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph>复数的方法都对应<ph id="ph2">&lt;xref:System.Math.Asin%2A?displayProperty=nameWithType&gt;</ph>实数的方法。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> method uses the following formula:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph>方法使用以下公式：</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source><ph id="ph1">-</ph><ph id="ph2">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph><ph id="ph3"> * </ph><ph id="ph4">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> * value + <ph id="ph6">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph>(<ph id="ph7">&lt;xref:System.Numerics.Complex.One&gt;</ph> - value * value))</source>
          <target state="translated"><ph id="ph1">-</ph><ph id="ph2">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph><ph id="ph3"> * </ph><ph id="ph4">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> * 值 + <ph id="ph6">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph>(<ph id="ph7">&lt;xref:System.Numerics.Complex.One&gt;</ph> -值 * 值))</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">它显示该通过返回的值<ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph>方法返回原始<ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">一个复数。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>Returns the angle that is the arc tangent of the specified complex number.</source>
          <target state="translated">返回表示指定复数的反正切的角度。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>The angle that is the arc tangent of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">表示 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的反正切值的角度。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Atan%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph>复数的方法都对应<ph id="ph2">&lt;xref:System.Math.Atan%2A?displayProperty=nameWithType&gt;</ph>实数的方法。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> method uses the following formula:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph>方法使用以下公式：</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> / new Complex(2.0, 0.0)) * (<ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph3">&lt;xref:System.Numerics.Complex.One&gt;</ph><ph id="ph4"> - </ph><ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> * value) - <ph id="ph6">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph7">&lt;xref:System.Numerics.Complex.One&gt;</ph> + ImaginaryOne * value)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> / 新复杂 （2.0，0.0）) * (<ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph3">&lt;xref:System.Numerics.Complex.One&gt;</ph> <ph id="ph4"> - </ph> <ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> * 值)- <ph id="ph6">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph7">&lt;xref:System.Numerics.Complex.One&gt;</ph> + ImaginaryOne * 值)</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">它显示该通过返回的值<ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph>方法返回原始<ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">一个复数。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>Computes the conjugate of a complex number and returns the result.</source>
          <target state="translated">计算复数的共轭，并返回结果。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>The conjugate of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的共轭。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>The conjugate of a complex number inverts the sign of the imaginary component; that is, it applies unary negation to the imaginary component.</source>
          <target state="translated">复数的共轭反转的虚分量; 的符号也就是说，它适用于的虚分量一元求反。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>If a + bi is a complex number, its conjugate is a - bi.</source>
          <target state="translated">如果 a + bi 是一个复杂的数字，其共轭是 a-bi。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>The following example displays the conjugate of two complex numbers.</source>
          <target state="translated">下面的示例显示两个复数的共轭。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">一个复数。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>Returns the cosine of the specified complex number.</source>
          <target state="translated">返回指定复数的余弦值。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>The cosine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的余弦值。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Cos%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph>复数的方法都对应<ph id="ph2">&lt;xref:System.Math.Cos%2A?displayProperty=nameWithType&gt;</ph>实数的方法。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> method uses the following formula to calculate the cosine of the complex number a + bi:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph>方法使用以下公式来计算复数的余弦值 a + bi:</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>(<ph id="ph1">&lt;xref:System.Math.Cos%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cosh%2A&gt;</ph>(b), -(<ph id="ph3">&lt;xref:System.Math.Sin%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sinh%2A&gt;</ph>(b)))</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Math.Cos%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cosh%2A&gt;</ph>(b), -(<ph id="ph3">&lt;xref:System.Math.Sin%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sinh%2A&gt;</ph>(b)))</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">它显示该通过返回的值<ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph>方法返回原始<ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">一个复数。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>Returns the hyperbolic cosine of the specified complex number.</source>
          <target state="translated">返回指定复数的双曲余弦值。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>The hyperbolic cosine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的双曲余弦值。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Cosh%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph>复数的方法都对应<ph id="ph2">&lt;xref:System.Math.Cosh%2A?displayProperty=nameWithType&gt;</ph>实数的方法。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph> method uses the following formula to calculate the hyperbolic cosine of the complex number a + bi:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph>方法使用以下公式来计算复数的双曲余弦值 a + bi:</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>(<ph id="ph1">&lt;xref:System.Math.Cosh%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cos%2A&gt;</ph>(b), <ph id="ph3">&lt;xref:System.Math.Sinh%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sin%2A&gt;</ph>(b))</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Math.Cosh%2A&gt;</ph>（a） * <ph id="ph2">&lt;xref:System.Math.Cos%2A&gt;</ph>（b)， <ph id="ph3">&lt;xref:System.Math.Sinh%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sin%2A&gt;</ph>(b))</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The complex number to be divided.</source>
          <target state="translated">要作为被除数的复数。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The complex number to divide by.</source>
          <target state="translated">要作为除数的复数。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Divides one complex number by another and returns the result.</source>
          <target state="translated">用一个复数除另一个复数并返回结果。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The quotient of the division.</source>
          <target state="translated">相除后的商。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The division of a complex number, a + bi, by a second complex number, number, c + di, takes the following form:</source>
          <target state="translated">相除的复数，a + bi 中的，通过第二个复数、 数量、 c + di，采用以下形式：</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>((ac + bd) / (c<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept> + d<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>)) + ((bc - ad) / (c<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + d<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>)i</source>
          <target state="translated">((ac + bd) / (c<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept> + d<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>)) + ((bc-ad) / (c<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + d<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>) 我</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the calculation of the quotient results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果商的计算导致实部或虚部溢出，则该组件的值是<ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%2A&gt;</ph> method can be used by languages that do not support custom operators.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%2A&gt;</ph>方法可以由不支持自定义运算符的语言。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Its behavior is identical to division using the division operator.</source>
          <target state="translated">其行为等同于使用除法运算符的除法。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The following example divides a complex number by each element in an array of complex numbers.</source>
          <target state="translated">下面的示例将一个复杂的数字除以复数的数组中每个元素。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Returns a value that indicates whether two complex numbers are equal.</source>
          <target state="translated">返回一个值，该值指示两个复数是否相等。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>The complex number to compare.</source>
          <target state="translated">要比较的复数。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>Returns a value that indicates whether the current instance and a specified complex number have the same value.</source>
          <target state="translated">返回一个值，该值指示当前实例与指定的复数是否具有相同的值。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this complex number and <ph id="ph2">&lt;paramref name="value" /&gt;</ph> have the same value; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果此复数与 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 具有相同的值，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method provides the <ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph> implementation for the <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph>方法提供<ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph>实现<ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph>结构。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>It performs slightly better than <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> method because it does not have to convert its parameter to a complex number.</source>
          <target state="translated">它的执行略优于<ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph>方法因为它没有将其参数转换为一个复杂的数字。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>Two complex numbers are equal if their real parts are equal and their imaginary parts are equal.</source>
          <target state="translated">两个复数相等，如果相等的实数部分和虚数部分相等。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method is equivalent to the following expression:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph>方法等效于以下表达式：</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.Numerics.Complex.Equals(System.Numerics.Complex)" /&gt;</ph> method with caution, because two values that are apparently equivalent can be considered unequal due to the differing precision of their real and imaginary components.</source>
          <target state="translated">使用<ph id="ph1">&lt;see cref="M:System.Numerics.Complex.Equals(System.Numerics.Complex)" /&gt;</ph>方法时要格外小心，因为显然是等效的两个值是可被视为由于其实部和虚部的组件的不同精度不相等。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>The following example reports that <bpt id="p1">&lt;c&gt;</bpt>(3.33333, 0.142857)<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>(10/3, 1/7)<ept id="p2">&lt;/c&gt;</ept> are not equal.</source>
          <target state="translated">下面的示例报告<bpt id="p1">&lt;c&gt;</bpt>（3.33333，0.142857）<ept id="p1">&lt;/c&gt;</ept>和<bpt id="p2">&lt;c&gt;</bpt>（10/3，1/7）<ept id="p2">&lt;/c&gt;</ept>是否不相等。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>One recommended technique is to define an acceptable margin of difference between the two values (such as .01% of one of the values' real and imaginary components) instead of comparing the values for equality.</source>
          <target state="translated">一个建议的方法是定义两个值之间的差异可接受范围 (如。 01%的值的实部和虚部组件之一) 而不是比较是否相等的值。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>If the absolute value of the difference between the two values is less than or equal to that margin, the difference is likely to be due to a difference in precision, and, therefore, the values are likely to be equal.</source>
          <target state="translated">如果两个值之间的差异的绝对值是小于或等于该边距，区别是可能是由于精度，存在差异，并因此，值很可能是相等。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>The following example uses this technique to compare the two complex values that the previous code example found to be unequal.</source>
          <target state="translated">下面的示例使用此方法来比较两个复杂值前面的代码示例发现存在不相等。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>It finds the two complex numbers to be equal.</source>
          <target state="translated">它找到两个复数相等。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The object to compare.</source>
          <target state="translated">要比较的对象。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>Returns a value that indicates whether the current instance and a specified object have the same value.</source>
          <target state="translated">返回一个值，该值指示当前实例与指定的对象是否具有相同的值。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> parameter is a <ph id="ph3">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object or a type capable of implicit conversion to a <ph id="ph4">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object, and its value is equal to the current <ph id="ph5">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> 参数是一个 <ph id="ph3">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 对象或是一个能够隐式转换为 <ph id="ph4">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 对象的类型，并且其值等于当前 <ph id="ph5">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 对象，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph6">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>Two complex numbers are equal if their real parts are equal and their imaginary parts are equal.</source>
          <target state="translated">两个复数相等，如果相等的实数部分和虚数部分相等。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> method is equivalent to the following expression:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph>方法等效于以下表达式：</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>If the <ph id="ph1">`obj`</ph> parameter is not a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object, but it is a data type for which an implicit conversion is defined, the <ph id="ph3">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> method converts <ph id="ph4">`obj`</ph> to a <ph id="ph5">&lt;xref:System.Numerics.Complex&gt;</ph> object whose real part is equal to the value of <ph id="ph6">`obj`</ph> and whose imaginary part is equal to zero before it performs the comparison.</source>
          <target state="translated">如果<ph id="ph1">`obj`</ph>参数不是<ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>对象，但它是数据类型为其定义隐式转换，<ph id="ph3">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph>方法将<ph id="ph4">`obj`</ph>到<ph id="ph5">&lt;xref:System.Numerics.Complex&gt;</ph>对象，其实部为等于值<ph id="ph6">`obj`</ph>之前在执行比较，其虚数部分是等于零。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The following example illustrates this by finding that a complex number and a double-precision floating-point value are equal.</source>
          <target state="translated">下面的示例阐释了这一点通过查找一个复杂的数字和一个双精度浮点值相等。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.Numerics.Complex.Equals(System.Numerics.Complex)" /&gt;</ph> method with caution, because two values that are apparently equivalent can be considered unequal due to the differing precision of their real and imaginary components.</source>
          <target state="translated">使用<ph id="ph1">&lt;see cref="M:System.Numerics.Complex.Equals(System.Numerics.Complex)" /&gt;</ph>方法时要格外小心，因为显然是等效的两个值是可被视为由于其实部和虚部的组件的不同精度不相等。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The problem can be accentuated if <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> must be converted to a <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> before performing the comparison.</source>
          <target state="translated">可以更突出问题，如果<ph id="ph1">&lt;paramref name="obj" /&gt;</ph>必须转换为<ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>之前执行比较。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The following example compares a complex number whose real component appears to be equal to a <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value with that <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">下面的示例比较复数的实分量似乎是等于<ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>值与该<ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>As the output shows, the comparison for equality returns <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">如输出所示，相等性比较返回<ph id="ph1">&lt;see langword="False" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>One recommended technique is to define an acceptable margin of difference between the two values (such as .01% of one of the values' real and imaginary components) instead of comparing the values for equality.</source>
          <target state="translated">一个建议的方法是定义两个值之间的差异可接受范围 (如。 01%的值的实部和虚部组件之一) 而不是比较是否相等的值。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>If the absolute value of the difference between the two values is less than or equal to that margin, the difference is likely to be due to a difference in precision and, therefore, the values are likely to be equal.</source>
          <target state="translated">如果两个值之间的差异的绝对值是小于或等于该边距，区别是可能是由于在精度不同，并因此的值很可能相等。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The following example uses this technique to compare the two values that the previous code example found to be unequal.</source>
          <target state="translated">下面的示例使用此方法来比较两个前面的代码示例找到要不相等的值。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>It now finds them to be equal.</source>
          <target state="translated">它现在发现它们相等。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>A complex number that specifies a power.</source>
          <target state="translated">指定幂的复数。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>Returns <ph id="ph1">&lt;see langword="e" /&gt;</ph> raised to the power specified by a complex number.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see langword="e" /&gt;</ph> 的由一个复数指定的次幂。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>The number <ph id="ph1">&lt;see langword="e" /&gt;</ph> raised to the power <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">数字 <ph id="ph1">&lt;see langword="e" /&gt;</ph> 的 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 次幂。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>Use the <ph id="ph1">&lt;xref:System.Numerics.Complex.Pow%2A&gt;</ph> method to calculate the powers of other bases.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Numerics.Complex.Pow%2A&gt;</ph>方法来计算其他底的幂。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Exp%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph>复数的方法都对应<ph id="ph2">&lt;xref:System.Math.Exp%2A?displayProperty=nameWithType&gt;</ph>实数的方法。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> is the inverse of <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> 是函数的反函数<ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>It shows that, with some allowance for the lack of precision of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type, passing the value returned by the <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph> method to the <ph id="ph3">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> method returns the original <ph id="ph4">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">它表明，与某些宽限的精度缺乏<ph id="ph1">&lt;xref:System.Double&gt;</ph>数据类型，将返回的值传递<ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>方法<ph id="ph3">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph>方法返回原始<ph id="ph4">&lt;xref:System.Numerics.Complex&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>The magnitude, which is the distance from the origin (the intersection of the x-axis and the y-axis) to the number.</source>
          <target state="translated">量值，它是从原点（x 轴与 y 轴的交点）到数字的距离。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>The phase, which is the angle from the line to the horizontal axis, measured in radians.</source>
          <target state="translated">相位，它是直线相对于水平轴的角度，以弧度为单位。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>Creates a complex number from a point's polar coordinates.</source>
          <target state="translated">从点的极坐标创建复数。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>A complex number.</source>
          <target state="translated">一个复数。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method instantiates a complex number based on its polar coordinates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph>方法实例化基于其极坐标的复数。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>Because there are multiple representations of a point on a complex plane, the return value of the <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method is normalized.</source>
          <target state="translated">因为有多个表示形式上复平面的返回值的点<ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph>方法进行了规范化。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>The magnitude is normalized to a positive number, and the phase is normalized to a value in the range of -<ph id="ph1">&lt;xref:System.Math.PI&gt;</ph> to <ph id="ph2">&lt;xref:System.Math.PI&gt;</ph>.</source>
          <target state="translated">量值规范化为正数，并且在阶段被规范化-范围中的值为<ph id="ph1">&lt;xref:System.Math.PI&gt;</ph>到<ph id="ph2">&lt;xref:System.Math.PI&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>As a result, the values of the <ph id="ph1">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> properties of the resulting complex number may not equal the original values of the <ph id="ph3">`magnitude`</ph> and <ph id="ph4">`phase`</ph> parameters.</source>
          <target state="translated">因此的值<ph id="ph1">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph>产生的复数的属性可能抵不上的原始值<ph id="ph3">`magnitude`</ph>和<ph id="ph4">`phase`</ph>参数。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>To convert a value from degrees to radians for the <ph id="ph1">`phase`</ph> parameter, multiply it by <ph id="ph2">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>/180.</source>
          <target state="translated">若要将值从度数转换成弧度为<ph id="ph1">`phase`</ph>参数，multiply 它 <ph id="ph2">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph> /180。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method to instantiate a complex number based on its polar coordinates and then displays the value of its <ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> properties.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph>方法可实例化一个复数，基于其极坐标，然后显示的值其<ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.GetHashCode">
          <source>Returns the hash code for the current <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object.</source>
          <target state="translated">返回当前 <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 对象的哈希代码。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">32 位有符号整数哈希代码。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="P:System.Numerics.Complex.Imaginary">
          <source>Gets the imaginary component of the current <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object.</source>
          <target state="translated">获取当前 <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 对象的虚部。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Imaginary">
          <source>The imaginary component of a complex number.</source>
          <target state="translated">复数的虚部。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Imaginary">
          <source>Given a complex number a + bi, the <ph id="ph1">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> property returns the value of b.</source>
          <target state="translated">给定复数 a + bi、<ph id="ph1">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph>属性返回 b 的值。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Imaginary">
          <source>The following example instantiates an array of <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> objects and displays the real and imaginary components of each in the form a + bi.</source>
          <target state="translated">下面的示例实例化的数组<ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph>对象，并显示每个窗体的实部和虚部组件 a + bi。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="F:System.Numerics.Complex.ImaginaryOne">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> instance with a real number equal to zero and an imaginary number equal to one.</source>
          <target state="translated">返回新的 <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 实例，其实数等于零，虚数等于一。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.ImaginaryOne">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> value by using the <ph id="ph2">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> property.</source>
          <target state="translated">下面的示例实例化<ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph>值使用<ph id="ph2">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.ImaginaryOne">
          <source>It then compares this value to another value that is instantiated by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> constructor with a real part equal to zero and an imaginary part equal to one.</source>
          <target state="translated">然后，它比较另一个值，通过调用实例化到此值<ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph>等于零实部和虚部等于 1 的构造函数。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.ImaginaryOne">
          <source>As the output from the example shows, the two values are equal.</source>
          <target state="translated">如示例输出所示，两个值相等。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Returns the logarithm of a complex number.</source>
          <target state="translated">返回一个复数的对数。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">一个复数。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>Returns the natural (base <ph id="ph1">&lt;see langword="e" /&gt;</ph>) logarithm of a specified complex number.</source>
          <target state="translated">返回指定复数的自然对数（底为 <ph id="ph1">&lt;see langword="e" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>The natural (base <ph id="ph1">&lt;see langword="e" /&gt;</ph>) logarithm of <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph> 的自然对数（底为 <ph id="ph1">&lt;see langword="e" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Log%28System.Numerics.Complex%29&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Log%28System.Numerics.Complex%29&gt;</ph>复数的方法都对应<ph id="ph2">&lt;xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType&gt;</ph>实数的方法。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>It shows that, with some allowance for the lack of precision of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type, passing the value returned by the <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph> method to the <ph id="ph3">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> method returns the original <ph id="ph4">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">它表明，与某些宽限的精度缺乏<ph id="ph1">&lt;xref:System.Double&gt;</ph>数据类型，将返回的值传递<ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>方法<ph id="ph3">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph>方法返回原始<ph id="ph4">&lt;xref:System.Numerics.Complex&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
          <source>A complex number.</source>
          <target state="translated">一个复数。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
          <source>The base of the logarithm.</source>
          <target state="translated">对数的底。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
          <source>Returns the logarithm of a specified complex number in a specified base.</source>
          <target state="translated">返回指定复数在使用指定底时的对数。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
          <source>The logarithm of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> in base <ph id="ph2">&lt;paramref name="baseValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的对数（底为 <ph id="ph2">&lt;paramref name="baseValue" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Log%28System.Numerics.Complex%2CSystem.Double%29&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Log%28System.Double%2CSystem.Double%29?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Log%28System.Numerics.Complex%2CSystem.Double%29&gt;</ph>复数的方法都对应<ph id="ph2">&lt;xref:System.Math.Log%28System.Double%2CSystem.Double%29?displayProperty=nameWithType&gt;</ph>实数的方法。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log10(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">一个复数。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log10(System.Numerics.Complex)">
          <source>Returns the base-10 logarithm of a specified complex number.</source>
          <target state="translated">返回指定复数以 10 为底的对数。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log10(System.Numerics.Complex)">
          <source>The base-10 logarithm of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的以 10 为底的对数。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Log10(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Log10%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Log10%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Log10%2A&gt;</ph>复数的方法都对应<ph id="ph2">&lt;xref:System.Math.Log10%2A?displayProperty=nameWithType&gt;</ph>实数的方法。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Numerics.Complex.Magnitude">
          <source>Gets the magnitude (or absolute value) of a complex number.</source>
          <target state="translated">获取复数的量值（或绝对值）。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>The magnitude of the current instance.</source>
          <target state="translated">当前实例的量值。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property is equivalent to the absolute value of a complex number.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph>属性等效于绝对值的数值的复数。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>It specifies the distance from the origin (the intersection of the x-axis and the y-axis in the Cartesian coordinate system) to the two-dimensional point represented by a complex number.</source>
          <target state="translated">它指定从原点 （x 轴和 y 轴笛卡尔坐标系统中的交集） 到表示复数的二维点的距离。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>The absolute value is calculated as follows:</source>
          <target state="translated">绝对值的数值的计算方式如下：</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>&amp;#124; a + bi &amp;#124; = <ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(a * a + b * b)</source>
          <target state="translated">&amp;#124; a + bi &amp;#124; = <ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(a * a + b * b)</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>If the calculation of the absolute value results in an overflow, this property returns either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果绝对值的数值的计算导致溢出时，此属性返回<ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> properties define the position of a point that represents a complex number in the polar coordinate system.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph>属性定义极坐标图坐标系统中表示一个复数的点的位置。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>You can instantiate a complex number based on its polar coordinates instead of its Cartesian coordinates by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method.</source>
          <target state="translated">可以实例化一个复数，通过调用基于其极坐标，而不是笛卡尔坐标<ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>The following example calculates the absolute value of a complex number and demonstrates that it is equivalent to the value of the <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property.</source>
          <target state="translated">下面的示例计算复数的绝对值和演示的值等效<ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first complex number to multiply.</source>
          <target state="translated">要相乘的第一个复数。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second complex number to multiply.</source>
          <target state="translated">要相乘的第二个复数。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Returns the product of two complex numbers.</source>
          <target state="translated">返回两个复数的乘积。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The product of the <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph> parameters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> 与 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 参数的乘积。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The multiplication of a complex number, a + bi, and a second complex number, c + di, takes the following form:</source>
          <target state="translated">复杂的乘号，a + bi，并第二个复数，c + di，采用以下形式：</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(ac - bd) + (ad + bc)i</source>
          <target state="translated">(ac-bd) + （ad + bc） 我</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the multiplication results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果乘运算导致溢出实部或虚部组件中，该组件的值为<ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%2A&gt;</ph> method is implemented for languages that do not support custom operators.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%2A&gt;</ph>会为不支持自定义运算符的语言实现方法。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Its behavior is identical to multiplication using the multiplication operator.</source>
          <target state="translated">其行为等同于使用乘法运算符的乘法。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The following example multiples a complex number by each element in an array of complex numbers.</source>
          <target state="translated">下面的示例一个复数的数组中每个元素的复杂数字的倍数。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">一个复数。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>Returns the additive inverse of a specified complex number.</source>
          <target state="translated">返回指定复数的加法逆元。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>The result of the <ph id="ph1">&lt;see cref="P:System.Numerics.Complex.Real" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Numerics.Complex.Imaginary" /&gt;</ph> components of the <ph id="ph3">&lt;paramref name="value" /&gt;</ph> parameter multiplied by -1.</source>
          <target state="translated"><ph id="ph3">&lt;paramref name="value" /&gt;</ph> 参数的 <ph id="ph1">&lt;see cref="P:System.Numerics.Complex.Real" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="P:System.Numerics.Complex.Imaginary" /&gt;</ph> 部分乘以 -1 的结果。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>The additive inverse of a complex number is a complex number that produces a value of <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> when it is added to the original complex number.</source>
          <target state="translated">复数的加法逆元是生成的值的复数<ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph>何时添加到原始的复数。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>This method returns a complex number in which the real and imaginary components of the original complex number are multiplied by -1.</source>
          <target state="translated">此方法返回一个复杂的数字顺序原始复数的实部和虚部组件乘以-1。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%2A&gt;</ph> method is implemented for languages that do not support custom operators.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%2A&gt;</ph>会为不支持自定义运算符的语言实现方法。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>Its behavior is identical to negation using the unary negation operator, <ph id="ph1">&lt;xref:System.Numerics.Complex.op_UnaryNegation%2A&gt;</ph>.</source>
          <target state="translated">其行为等同于使用一元求反运算符的求反<ph id="ph1">&lt;xref:System.Numerics.Complex.op_UnaryNegation%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>The following example obtains the additive inverse of each element in an array of complex numbers.</source>
          <target state="translated">下面的示例获取复数的数组中每个元素的加法逆元。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="F:System.Numerics.Complex.One">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> instance with a real number equal to one and an imaginary number equal to zero.</source>
          <target state="translated">返回新的 <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 实例，其实数等于一，虚数等于零。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.One">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> value by using the <ph id="ph2">&lt;xref:System.Numerics.Complex.One&gt;</ph> property.</source>
          <target state="translated">下面的示例实例化<ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph>值使用<ph id="ph2">&lt;xref:System.Numerics.Complex.One&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.One">
          <source>It then compares this value to another value that is instantiated by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> constructor with a real part equal to one and an imaginary part equal to zero.</source>
          <target state="translated">然后，它比较另一个值，通过调用实例化到此值<ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph>等于个实部和虚部等于零的构造函数。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.One">
          <source>As the output from the example shows, the two values are equal.</source>
          <target state="translated">如示例输出所示，两个值相等。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first value to add.</source>
          <target state="translated">要相加的第一个值。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second value to add.</source>
          <target state="translated">要相加的第二个值。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Adds two complex numbers.</source>
          <target state="translated">将两个复数相加。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The sum of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> 与 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 的和。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Addition%2A&gt;</ph> method defines the addition operation for complex numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.op_Addition%2A&gt;</ph>方法定义复数的加法运算。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The addition of a complex number, a + bi, and a second complex number, c + di, takes the following form:</source>
          <target state="translated">添加复杂的数字，a + bi，和第二个复数，c + di，采用以下形式：</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(a + c) + (b + d)i</source>
          <target state="translated">（a + c） + （b + d） 我</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the method call results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果该方法调用结果实部或虚部溢出，该组件的值为<ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">此运算符的等效方法是 <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The following example illustrates addition with complex numbers.</source>
          <target state="translated">下面的示例演示添加复数。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to be divided.</source>
          <target state="translated">要作为被除数的值。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to divide by.</source>
          <target state="translated">要作为除数的值。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Divides a specified complex number by another specified complex number.</source>
          <target state="translated">用一个指定复数除另一个指定复数。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The result of dividing <ph id="ph1">&lt;paramref name="left" /&gt;</ph> by <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> 除以 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 的结果。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Division%2A&gt;</ph> method defines the division operation for complex numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.op_Division%2A&gt;</ph>方法定义为复数的除法运算。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The division of a complex number, a + bi, and a second complex number, c + di, takes the following form:</source>
          <target state="translated">一种复杂的划分号，a + bi，并第二个复数，c + di，采用以下形式：</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>((ac + bd) / (c<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept> + d<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>)) + ((bc - ad) / (c<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + d<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>)i</source>
          <target state="translated">((ac + bd) / (c<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept> + d<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>)) + ((bc-ad) / (c<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + d<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>) 我</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the division results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果除法运算导致溢出实部或虚部组件中，该组件的值为<ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators and operator overloading can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%2A&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义的运算符和运算符重载的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%2A&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">此运算符的等效方法是 <ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first complex number to compare.</source>
          <target state="translated">要比较的第一个复数。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second complex number to compare.</source>
          <target state="translated">要比较的第二个复数。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Returns a value that indicates whether two complex numbers are equal.</source>
          <target state="translated">返回一个值，该值指示两个复数是否相等。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parameters have the same value; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 与 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 参数具有相同的值，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> method defines the operation of the equality operator for <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph>方法定义的相等运算符的运算<ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Two complex numbers are equal if their real parts are equal and their imaginary parts are equal.</source>
          <target state="translated">两个复数相等，如果相等的实数部分和虚数部分相等。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> method is equivalent to the following expression:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph>方法等效于以下表达式：</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Note that, because of differences in precision, two complex numbers that are apparently equivalent can be considered unequal.</source>
          <target state="translated">请注意，由于精度的差异，显然是相等的两个复数可被视为不相等。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>For more information and a possible workaround, see the <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method.</source>
          <target state="translated">有关详细信息和可能的解决方法，请参阅<ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%2A?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">此运算符的等效方法是 <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%2A?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Defines an explicit conversion between a <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object and another type.</source>
          <target state="translated">定义 <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 对象与其他类型之间的显式转换。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">要转换为复数的值。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value to a complex number.</source>
          <target state="translated">定义从 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 值到复数的显式转换。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>A complex number that has a real component equal to <ph id="ph1">&lt;paramref name="value" /&gt;</ph> and an imaginary component equal to zero.</source>
          <target state="translated">一个复数，其实部等于 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>，虚部等于零。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>Explicit conversion operators define types that can be converted to a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">显式转换运算符定义可以转换为的类型<ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">语言编译器不会自动执行此转换，因为它会导致数据丢失。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反，它们执行转换仅当 （在 C# 中) 强制转换运算符或转换函数 (如<ph id="ph1">`CType`</ph>在 Visual Basic 中) 使用。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否则，它们显示编译器错误。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>The conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to the real part of a complex number can result in a loss of precision because a <ph id="ph2">&lt;xref:System.Double&gt;</ph>, which is the type of the complex number's <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> property, has fewer significant digits than a <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">转换<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>复数的实部值可能导致精度损失，因为<ph id="ph2">&lt;xref:System.Double&gt;</ph>，后者是复杂的数字的类型<ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph>属性，具有有效位比<ph id="ph4">&lt;xref:System.Decimal&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>The following example illustrates the explicit conversion of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values to <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> values.</source>
          <target state="translated">下面的示例演示的显式转换<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>值复制到<ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">要转换为复数的值。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value to a complex number.</source>
          <target state="translated">定义从 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值到复数的显式转换。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>A complex number that has a real component equal to <ph id="ph1">&lt;paramref name="value" /&gt;</ph> and an imaginary component equal to zero.</source>
          <target state="translated">一个复数，其实部等于 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>，虚部等于零。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Explicit conversion operators define types that can be converted to a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">显式转换运算符定义可以转换为的类型<ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">语言编译器不会自动执行此转换，因为它会导致数据丢失。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反，它们执行转换仅当 （在 C# 中) 强制转换运算符或转换函数 (如<ph id="ph1">`CType`</ph>在 Visual Basic 中) 使用。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否则，它们显示编译器错误。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>The conversion of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value to the real part of a complex number can result in a loss of precision because a <ph id="ph2">&lt;xref:System.Double&gt;</ph>, which is the type of the complex number's <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> property, has fewer significant digits than a <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated">转换<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>复数的实部值可能导致精度损失，因为<ph id="ph2">&lt;xref:System.Double&gt;</ph>，后者是复杂的数字的类型<ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph>属性，具有有效位比<ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>If the conversion is unsuccessful because the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is out of the range of the <ph id="ph2">&lt;xref:System.Double&gt;</ph> type, the operation does not throw an <ph id="ph3">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">如果转换失败因为<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值超出了范围的<ph id="ph2">&lt;xref:System.Double&gt;</ph>类型，该操作不会引发<ph id="ph3">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Instead, if <ph id="ph1">`value`</ph> is less than <ph id="ph2">&lt;xref:System.Double.MinValue&gt;</ph>, the result is a complex number that has a <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> property value equal to <ph id="ph4">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.</source>
          <target state="translated">相反，如果<ph id="ph1">`value`</ph>是小于<ph id="ph2">&lt;xref:System.Double.MinValue&gt;</ph>，结果是具有一个复数<ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph>属性值等于<ph id="ph4">&lt;xref:System.Double.NegativeInfinity&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>If <ph id="ph1">`value`</ph> is greater than <ph id="ph2">&lt;xref:System.Double.MaxValue&gt;</ph>, the result is a complex number that has a <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> property value equal to <ph id="ph4">&lt;xref:System.Double.PositiveInfinity&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>大于<ph id="ph2">&lt;xref:System.Double.MaxValue&gt;</ph>，结果是具有一个复数<ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph>属性值等于<ph id="ph4">&lt;xref:System.Double.PositiveInfinity&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>The following example illustrates the explicit conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values to <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> values.</source>
          <target state="translated">下面的示例演示的显式转换<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值复制到<ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Defines an implicit conversion between a <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object and another type.</source>
          <target state="translated">定义 <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 对象与其他类型之间的隐式转换。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">要转换为复数的值。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>Defines an implicit conversion of an unsigned byte to a complex number.</source>
          <target state="translated">定义从无符号字节到复数的隐式转换。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">一个对象，其中使用 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数的值作为其实部，并使用零作为其虚部。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph>运算符定义从中编译器可自动转换的类型<ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>而无需使用显式强制转换运算符 （在 C# 中) 或 （在 Visual Basic) 的转换函数的调用的对象。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它们扩大转换，不会丢失数据，不会引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value to a complex number, as the following example shows.</source>
          <target state="translated">此重载使编译器能够处理从转换<ph id="ph1">&lt;xref:System.Byte&gt;</ph>到复数，如以下示例所示的值。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value and whose imaginary part is equal to zero.</source>
          <target state="translated">请注意，转换的结果是复数的实部等同于<ph id="ph1">&lt;xref:System.Byte&gt;</ph>值，并且其虚数部分是等于零。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">要转换为复数的值。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a double-precision floating-point number to a complex number.</source>
          <target state="translated">定义从双精度浮点数到复数的隐式转换。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">一个对象，其中使用 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数的值作为其实部，并使用零作为其虚部。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph>运算符定义从中编译器可自动转换的类型<ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>而无需使用显式强制转换运算符 （在 C# 中) 或 （在 Visual Basic) 的转换函数的调用的对象。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它们扩大转换，不会丢失数据，不会引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value to a complex number, as the following example shows.</source>
          <target state="translated">此重载使编译器能够处理从转换<ph id="ph1">&lt;xref:System.Double&gt;</ph>到复数，如以下示例所示的值。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the <ph id="ph1">&lt;xref:System.Double&gt;</ph> value and whose imaginary part is equal to zero.</source>
          <target state="translated">请注意，转换的结果是复数的实部等同于<ph id="ph1">&lt;xref:System.Double&gt;</ph>值，并且其虚数部分是等于零。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">要转换为复数的值。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 16-bit signed integer to a complex number.</source>
          <target state="translated">定义从 16 位带符号整数到复数的隐式转换。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">一个对象，其中使用 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数的值作为其实部，并使用零作为其虚部。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph>运算符定义从中编译器可自动转换的类型<ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>而无需使用显式强制转换运算符 （在 C# 中) 或 （在 Visual Basic) 的转换函数的调用的对象。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它们扩大转换，不会丢失数据，不会引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a signed 16-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">此重载使编译器能够处理转换从 16 位有符号整数到复数，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the signed 16-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">请注意，转换的结果是一个复数的实部等于 16 位有符号整数，其虚部等于零。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">要转换为复数的值。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 32-bit signed integer to a complex number.</source>
          <target state="translated">定义从 32 位带符号整数到复数的隐式转换。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">一个对象，其中使用 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数的值作为其实部，并使用零作为其虚部。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph>运算符定义从中编译器可自动转换的类型<ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>而无需使用显式强制转换运算符 （在 C# 中) 或 （在 Visual Basic) 的转换函数的调用的对象。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它们扩大转换，不会丢失数据，不会引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a signed 32-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">此重载使编译器能够处理转换从有符号的 32 位整数到复数，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the signed 32-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">请注意，转换的结果是一个复数的实部等同于 32 位有符号整数，其虚部等于零。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">要转换为复数的值。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 64-bit signed integer to a complex number.</source>
          <target state="translated">定义从 64 位带符号整数到复数的隐式转换。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">一个对象，其中使用 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数的值作为其实部，并使用零作为其虚部。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph>运算符定义从中编译器可自动转换的类型<ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>而无需使用显式强制转换运算符 （在 C# 中) 或 （在 Visual Basic) 的转换函数的调用的对象。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它们扩大转换，不会丢失数据，不会引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a signed 64-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">此重载使编译器能够处理转换从 64 位有符号整数到复数，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the signed 64-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">请注意，转换的结果是一个复数的实部等于 64 位有符号整数，其虚部等于零。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">要转换为复数的值。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a signed byte to a complex number.</source>
          <target state="translated">定义从带符号字节到复数的隐式转换。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">此 API 不兼容 CLS。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">一个对象，其中使用 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数的值作为其实部，并使用零作为其虚部。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph>运算符定义从中编译器可自动转换的类型<ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>而无需使用显式强制转换运算符 （在 C# 中) 或 （在 Visual Basic) 的转换函数的调用的对象。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它们扩大转换，不会丢失数据，不会引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a signed byte to a complex number, as the following example shows.</source>
          <target state="translated">此重载使编译器能够处理转换从有符号字节到复数，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the signed byte and whose imaginary part is equal to zero.</source>
          <target state="translated">请注意，转换的结果是一个复数的实部等于有符号字节，其虚部等于零。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">要转换为复数的值。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a single-precision floating-point number to a complex number.</source>
          <target state="translated">定义从单精度浮点数到复数的隐式转换。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">一个对象，其中使用 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数的值作为其实部，并使用零作为其虚部。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph>运算符定义从中编译器可自动转换的类型<ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>而无需使用显式强制转换运算符 （在 C# 中) 或 （在 Visual Basic) 的转换函数的调用的对象。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它们扩大转换，不会丢失数据，不会引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value to a complex number, as the following example shows.</source>
          <target state="translated">此重载使编译器能够处理从转换<ph id="ph1">&lt;xref:System.Single&gt;</ph>到复数，如以下示例所示的值。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the <ph id="ph1">&lt;xref:System.Single&gt;</ph> value and whose imaginary part is equal to zero.</source>
          <target state="translated">请注意，转换的结果是复数的实部等同于<ph id="ph1">&lt;xref:System.Single&gt;</ph>值，并且其虚数部分是等于零。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">要转换为复数的值。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 16-bit unsigned integer to a complex number.</source>
          <target state="translated">定义从 16 位无符号整数到复数的隐式转换。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">此 API 不兼容 CLS。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">一个对象，其中使用 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数的值作为其实部，并使用零作为其虚部。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph>运算符定义从中编译器可自动转换的类型<ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>而无需使用显式强制转换运算符 （在 C# 中) 或 （在 Visual Basic) 的转换函数的调用的对象。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它们扩大转换，不会丢失数据，不会引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from an unsigned 16-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">此重载使编译器能够处理转换从 16 位无符号整数到复数，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the unsigned 16-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">请注意，转换的结果是一个复数的实部等于 16 位无符号整数，其虚部等于零。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">要转换为复数的值。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 32-bit unsigned integer to a complex number.</source>
          <target state="translated">定义从 32 位无符号整数到复数的隐式转换。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">此 API 不兼容 CLS。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">一个对象，其中使用 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数的值作为其实部，并使用零作为其虚部。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph>运算符定义从中编译器可自动转换的类型<ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>而无需使用显式强制转换运算符 （在 C# 中) 或 （在 Visual Basic) 的转换函数的调用的对象。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它们扩大转换，不会丢失数据，不会引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from an unsigned 32-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">此重载使编译器能够处理转换从 32 位无符号整数到复数，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the unsigned 32-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">请注意，转换的结果是一个复数的实部等同于 32 位无符号整数，其虚部等于零。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">要转换为复数的值。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 64-bit unsigned integer to a complex number.</source>
          <target state="translated">定义从 64 位无符号整数到复数的隐式转换。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">此 API 不兼容 CLS。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">一个对象，其中使用 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数的值作为其实部，并使用零作为其虚部。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph>运算符定义从中编译器可自动转换的类型<ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>而无需使用显式强制转换运算符 （在 C# 中) 或 （在 Visual Basic) 的转换函数的调用的对象。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它们扩大转换，不会丢失数据，不会引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from an unsigned 64-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">此重载使编译器能够处理转换从 64 位无符号整数到复数，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the unsigned 64-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">请注意，转换的结果是一个复数的实部等于 64 位无符号整数，其虚部等于零。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Returns a value that indicates whether two complex numbers are not equal.</source>
          <target state="translated">返回一个值，该值指示两个复数是否不相等。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 不相等，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> method defines the operation of the inequality operator for complex numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph>方法定义为复数是否不相等运算符的操作。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can test for inequality by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method and reversing its value.</source>
          <target state="translated">不支持自定义运算符的语言可以通过调用测试是否不相等<ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph>方法并反转其值。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Note that, because of differences in precision, two complex numbers that are apparently equivalent can be considered unequal.</source>
          <target state="translated">请注意，由于精度的差异，显然是相等的两个复数可被视为不相等。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>One possible workaround is to implement a comparison method that returns <ph id="ph1">`true`</ph> only if the difference between the two real and imaginary parts of the complex numbers exceeds a certain threshold (such as .01% of the value of the real or imaginary component of one of the complex numbers).</source>
          <target state="translated">一种解决方法是实现的比较方法，返回<ph id="ph1">`true`</ph>仅复杂数字的两个实部和虚部部分之间的差异超过特定阈值时 (如。 01%的值的实部或虚部组件一个复数的）。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method.</source>
          <target state="translated">有关更多信息，请参见 <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first value to multiply.</source>
          <target state="translated">要相乘的第一个值。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second value to multiply.</source>
          <target state="translated">要相乘的第二个值。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Multiplies two specified complex numbers.</source>
          <target state="translated">将两个指定复数相乘。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The product of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> 与 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 的乘积。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Multiply%2A&gt;</ph> method defines the operation of the multiplication operator for complex numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.op_Multiply%2A&gt;</ph>方法定义复数的乘法运算符的操作。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The multiplication of a complex number, a + bi, and a second complex number, c + di, takes the following form:</source>
          <target state="translated">复杂的乘号，a + bi，并第二个复数，c + di，采用以下形式：</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(ac - bd) + (ad + bc)i</source>
          <target state="translated">(ac-bd) + （ad + bc） 我</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the multiplication results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果乘运算导致溢出实部或虚部组件中，该组件的值为<ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%2A&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%2A&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">此运算符的等效方法是 <ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to subtract from (the minuend).</source>
          <target state="translated">要从中减去的值（被减数）。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to subtract (the subtrahend).</source>
          <target state="translated">要减去的值（减数）。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Subtracts a complex number from another complex number.</source>
          <target state="translated">从一个复数中减去另一个复数。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The result of subtracting <ph id="ph1">&lt;paramref name="right" /&gt;</ph> from <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="right" /&gt;</ph> 减 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 所得的结果。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Subtraction%2A&gt;</ph> method defines the operation of the subtraction operator for complex numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.op_Subtraction%2A&gt;</ph>方法定义的减法运算符为复数的运算。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the method call results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果该方法调用结果实部或虚部溢出，该组件的值为<ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The subtraction of a complex number, c + di, from another complex number, a + bi, takes the following form:</source>
          <target state="translated">减法的复数，c + di，从另一个复数 + bi，采用以下形式：</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(a - c) + (b - d)i</source>
          <target state="translated">(a - c) + (b - d)i</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%2A&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%2A&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">此运算符的等效方法是 <ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>The value to negate.</source>
          <target state="translated">要求反的值。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>Returns the additive inverse of a specified complex number.</source>
          <target state="translated">返回指定复数的加法逆元。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>The result of the <ph id="ph1">&lt;see cref="P:System.Numerics.Complex.Real" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Numerics.Complex.Imaginary" /&gt;</ph> components of the <ph id="ph3">&lt;paramref name="value" /&gt;</ph> parameter multiplied by -1.</source>
          <target state="translated"><ph id="ph3">&lt;paramref name="value" /&gt;</ph> 参数的 <ph id="ph1">&lt;see cref="P:System.Numerics.Complex.Real" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="P:System.Numerics.Complex.Imaginary" /&gt;</ph> 部分乘以 -1 的结果。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_UnaryNegation%2A&gt;</ph> method defines the operation of the unary negation (additive inverse) operator for complex numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.op_UnaryNegation%2A&gt;</ph>方法定义的一元求反 （加法逆元） 运算符为复数的运算。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">它使代码如下所示：</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>The resulting complex number produces a value of <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 0 (zero) when it is added to the original complex number.</source>
          <target state="translated">产生的复数生成的值<ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph>0 （零） 时将其添加到原始的复数。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%2A&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%2A&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%28System.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">此运算符的等效方法是 <ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%28System.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="P:System.Numerics.Complex.Phase">
          <source>Gets the phase of a complex number.</source>
          <target state="translated">获取复数的相位。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>The phase of a complex number, in radians.</source>
          <target state="translated">复数的相位（以弧度为单位）。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>For a complex number a + bi, the phase is computed as <ph id="ph1">&lt;xref:System.Math.Atan2%2A?displayProperty=nameWithType&gt;</ph>(b, a).</source>
          <target state="translated">对于复数 + bi，阶段将计算为<ph id="ph1">&lt;xref:System.Math.Atan2%2A?displayProperty=nameWithType&gt;</ph>(b)。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>You can identify a complex number by its Cartesian coordinates on the complex plane or by its polar coordinates.</source>
          <target state="translated">你可以标识一个复数，其实部通过笛卡尔坐标复平面上或通过其极坐标。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>The phase (argument) of a complex number is the angle to the real axis of a line drawn from the point of origin (the intersection of the x-axis and the y-axis) to the point represented by the complex number.</source>
          <target state="translated">复数的相位 （自变量） 是线条的表示复数的位从原点 （x 轴和 y 轴的交叉点） 绘制的实际轴的角度。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>The magnitude (represented by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property) is the distance from the point of origin to the point that is represented by the complex number.</source>
          <target state="translated">量值 (由表示<ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph>属性) 是由复杂的数字表示的点到原点的距离。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>You can instantiate a complex number based on its polar coordinates instead of its Cartesian coordinates by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method.</source>
          <target state="translated">可以实例化一个复数，通过调用基于其极坐标，而不是笛卡尔坐标<ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>To convert the phase from radians to degrees, multiply it by 180/<ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">若要从弧度阶段转换度，则将其乘 180 /<ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method to instantiate a complex number based on its polar coordinates, and then displays the value of its <ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> properties.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph>方法可实例化一个复数，基于其极坐标，，然后显示的值其<ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Returns a specified complex number raised to a specified power.</source>
          <target state="translated">返回指定复数的指定次幂。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>A complex number to be raised to a power.</source>
          <target state="translated">要对其求幂的复数。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>A double-precision floating-point number that specifies a power.</source>
          <target state="translated">指定幂的双精度浮点数。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>Returns a specified complex number raised to a power specified by a double-precision floating-point number.</source>
          <target state="translated">返回指定复数的由双精度浮点数指定的次幂。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>The complex number <ph id="ph1">&lt;paramref name="value" /&gt;</ph> raised to the power <ph id="ph2">&lt;paramref name="power" /&gt;</ph>.</source>
          <target state="translated">复数 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的 <ph id="ph2">&lt;paramref name="power" /&gt;</ph> 次幂。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>, the method returns <ph id="ph3">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">`value`</ph> 为 <ph id="ph2">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>，则此方法返回 <ph id="ph3">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>For other values, if <ph id="ph1">`power`</ph> is 0, the method returns <ph id="ph2">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph>, and if <ph id="ph3">`power`</ph> is 1, it returns <ph id="ph4">`value`</ph>.</source>
          <target state="translated">对于其他值，如果<ph id="ph1">`power`</ph>为 0，则此方法返回<ph id="ph2">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph>，并且如果<ph id="ph3">`power`</ph>为 1，它将返回<ph id="ph4">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>This method corresponds to the <ph id="ph1">&lt;xref:System.Math.Pow%2A?displayProperty=nameWithType&gt;</ph> method for primitive numeric types.</source>
          <target state="translated">此方法对应于<ph id="ph1">&lt;xref:System.Math.Pow%2A?displayProperty=nameWithType&gt;</ph>基元数值类型的方法。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>The following example illustrates exponentiation using a complex number and an exponent whose value ranges from -1 to 10.</source>
          <target state="translated">下面的示例演示使用一个复杂的数字和指数的幂值范围为-1 到 10。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
          <source>A complex number to be raised to a power.</source>
          <target state="translated">要对其求幂的复数。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
          <source>A complex number that specifies a power.</source>
          <target state="translated">指定幂的复数。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Returns a specified complex number raised to a power specified by a complex number.</source>
          <target state="translated">返回指定复数的由复数指定的次幂。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The complex number <ph id="ph1">&lt;paramref name="value" /&gt;</ph> raised to the power <ph id="ph2">&lt;paramref name="power" /&gt;</ph>.</source>
          <target state="translated">复数 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的 <ph id="ph2">&lt;paramref name="power" /&gt;</ph> 次幂。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="P:System.Numerics.Complex.Real">
          <source>Gets the real component of the current <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object.</source>
          <target state="translated">获取当前 <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 对象的实部。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Real">
          <source>The real component of a complex number.</source>
          <target state="translated">复数的实部。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Real">
          <source>Given a complex number a + bi, the <ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> property returns the value of a.</source>
          <target state="translated">给定复数 a + bi、<ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph>属性返回的值。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Real">
          <source>The following example instantiates an array of <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> objects and displays the real and imaginary components of each in the form a + bi.</source>
          <target state="translated">下面的示例实例化的数组<ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph>对象，并显示每个窗体的实部和虚部组件 a + bi。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">一个复数。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>Returns the multiplicative inverse of a complex number.</source>
          <target state="translated">返回复数的乘法倒数。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>The reciprocal of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的倒数。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>The reciprocal, or multiplicative inverse, of a number <bpt id="p1">*</bpt>x<ept id="p1">*</ept> is a number <bpt id="p2">*</bpt>y<ept id="p2">*</ept> where <bpt id="p3">*</bpt>x<ept id="p3">*</ept> multiplied by <bpt id="p4">*</bpt>y<ept id="p4">*</ept> yields 1.</source>
          <target state="translated">相互或乘法倒数，大量<bpt id="p1">*</bpt>x<ept id="p1">*</ept>是一个数字<bpt id="p2">*</bpt>y<ept id="p2">*</ept>其中<bpt id="p3">*</bpt>x<ept id="p3">*</ept>乘以<bpt id="p4">*</bpt>y<ept id="p4">*</ept>将生成 1。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>The reciprocal of a complex number is the complex number that produces <ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph> when the two numbers are multiplied.</source>
          <target state="translated">复数的倒数是生成的复数<ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph>两个数相乘时。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>If a complex number is represented by a +bi, its reciprocal is represented by the expression a/(a<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>+b<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>) + -b/(a<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + b<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>).</source>
          <target state="translated">如果 a + bi，由表示复数，由表达式表示其相互 / (<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>+ b<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>) +-b / (<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + b<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>)。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>If value is <ph id="ph1">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>, the method returns <ph id="ph2">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果值为<ph id="ph1">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>，该方法返回<ph id="ph2">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>Otherwise, it returns the result of the expression <ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph><ph id="ph2">/</ph><ph id="ph3">`value`</ph>.</source>
          <target state="translated">否则，它将返回该表达式的结果<ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph> <ph id="ph2">/</ph> <ph id="ph3">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.Complex.Reciprocal%2A&gt;</ph> method to calculate the reciprocal values of several complex numbers.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Numerics.Complex.Reciprocal%2A&gt;</ph>方法来计算多个复数的相应值。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>It also demonstrates that the result of multiplying a complex number by its reciprocal is <ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">它还演示了一个复杂的数字乘以其相互的结果是<ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">一个复数。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>Returns the sine of the specified complex number.</source>
          <target state="translated">返回指定复数的正弦值。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>The sine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的正弦值。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Sin%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph>复数的方法都对应<ph id="ph2">&lt;xref:System.Math.Sin%2A?displayProperty=nameWithType&gt;</ph>实数的方法。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> method uses the following formula to calculate the sine of the complex number a + bi:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph>方法使用以下公式来计算复数的正弦值 a + bi:</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>(<ph id="ph1">&lt;xref:System.Math.Sin%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cosh%2A&gt;</ph>(b), <ph id="ph3">&lt;xref:System.Math.Cos%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sinh%2A&gt;</ph>(b))</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Math.Sin%2A&gt;</ph>（a） * <ph id="ph2">&lt;xref:System.Math.Cosh%2A&gt;</ph>（b)， <ph id="ph3">&lt;xref:System.Math.Cos%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sinh%2A&gt;</ph>(b))</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">它显示该通过返回的值<ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph>方法返回原始<ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">一个复数。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>Returns the hyperbolic sine of the specified complex number.</source>
          <target state="translated">返回指定复数的双曲正弦值。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>The hyperbolic sine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的双曲正弦值。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Sinh%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph>复数的方法都对应<ph id="ph2">&lt;xref:System.Math.Sinh%2A?displayProperty=nameWithType&gt;</ph>实数的方法。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph> method uses the following formula to calculate the hyperbolic sine of the complex number a + bi:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph>方法使用以下公式来计算复数的双曲正弦值 a + bi:</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>(<ph id="ph1">&lt;xref:System.Math.Sinh%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cos%2A&gt;</ph>(b), <ph id="ph3">&lt;xref:System.Math.Cosh%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sin%2A&gt;</ph>(b))</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Math.Sinh%2A&gt;</ph>（a） * <ph id="ph2">&lt;xref:System.Math.Cos%2A&gt;</ph>（b)， <ph id="ph3">&lt;xref:System.Math.Cosh%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sin%2A&gt;</ph>(b))</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">一个复数。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source>Returns the square root of a specified complex number.</source>
          <target state="translated">返回指定复数的平方根。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source>The square root of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的平方根。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source>The square root of the complex number <ph id="ph1">`value`</ph> is calculated by using the following formula:</source>
          <target state="translated">复数的平方根<ph id="ph1">`value`</ph>通过使用以下公式计算：</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=nameWithType&gt;</ph>(<ph id="ph2">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(<ph id="ph3">`value`</ph>.<ph id="ph4">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph>), <ph id="ph5">`value`</ph>.<ph id="ph6">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph>/2.0)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=nameWithType&gt;</ph>(<ph id="ph2">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(<ph id="ph3">`value`</ph>.<ph id="ph4">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph>), <ph id="ph5">`value`</ph>.<ph id="ph6">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph>/2.0)</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph>复数的方法都对应<ph id="ph2">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>实数的方法。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to subtract from (the minuend).</source>
          <target state="translated">要从中减去的值（被减数）。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to subtract (the subtrahend).</source>
          <target state="translated">要减去的值（减数）。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Subtracts one complex number from another and returns the result.</source>
          <target state="translated">从一个复数中减去另一个复数并返回结果。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The result of subtracting <ph id="ph1">&lt;paramref name="right" /&gt;</ph> from <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="right" /&gt;</ph> 减 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 所得的结果。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The subtraction of a complex number, c + di, from another complex number, a + bi, takes the following form:</source>
          <target state="translated">减法的复数，c + di，从另一个复数 + bi，采用以下形式：</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(a - c) + (b - d)i</source>
          <target state="translated">(a - c) + (b - d)i</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the method call results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果该方法调用结果实部或虚部溢出，该组件的值为<ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can use the <ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%2A&gt;</ph> method to perform subtraction using complex numbers.</source>
          <target state="translated">不支持自定义运算符的语言可以使用<ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%2A&gt;</ph>方法来执行减法使用复数。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The following example subtracts each complex number in an array from a complex number.</source>
          <target state="translated">下面的示例中减去从复数数组中的每个复数。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">一个复数。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>Returns the tangent of the specified complex number.</source>
          <target state="translated">返回指定复数的正切值。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>The tangent of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的正切值。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Tan%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph>复数的方法都对应<ph id="ph2">&lt;xref:System.Math.Tan%2A?displayProperty=nameWithType&gt;</ph>实数的方法。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> method uses the following formula to calculate the tangent of the complex number <ph id="ph2">`value`</ph>:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph>方法使用以下公式来计算复数的正切值<ph id="ph2">`value`</ph>:</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph>(<ph id="ph2">`value`</ph>) / <ph id="ph3">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph>(<ph id="ph4">`value`</ph>)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph>(<ph id="ph2">`value`</ph>) / <ph id="ph3">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph>(<ph id="ph4">`value`</ph>)</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">它显示该通过返回的值<ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph>方法返回原始<ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">一个复数。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source>Returns the hyperbolic tangent of the specified complex number.</source>
          <target state="translated">返回指定复数的双曲正切值。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source>The hyperbolic tangent of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的双曲正切值。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Tanh%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Tanh%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Tanh%2A&gt;</ph>复数的方法都对应<ph id="ph2">&lt;xref:System.Math.Tanh%2A?displayProperty=nameWithType&gt;</ph>实数的方法。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Tanh%2A&gt;</ph> method uses the following formula to calculate the hyperbolic tangent of the complex number <ph id="ph2">`value`</ph>:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Tanh%2A&gt;</ph>方法使用以下公式来计算复数的双曲正切值<ph id="ph2">`value`</ph>:</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph>(<ph id="ph2">`value`</ph>) / <ph id="ph3">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph>(<ph id="ph4">`value`</ph>)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph>(<ph id="ph2">`value`</ph>) / <ph id="ph3">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph>(<ph id="ph4">`value`</ph>)</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Converts the value of a complex number to its equivalent string representation.</source>
          <target state="translated">将复数的值转换为其等效的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString">
          <source>Converts the value of the current complex number to its equivalent string representation in Cartesian form.</source>
          <target state="translated">将当前复数的值转换为其采用笛卡尔形式的等效字符串表示形式。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString">
          <source>The string representation of the current instance in Cartesian form.</source>
          <target state="translated">当前实例的采用笛卡尔形式的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString">
          <source>The default string representation of a complex number displays the number using its Cartesian coordinates in the form <ph id="ph1">`(`</ph><bpt id="p1">*</bpt>a<ept id="p1">*</ept><ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, where <bpt id="p3">*</bpt>a<ept id="p3">*</ept> is the real part of the complex number, and <bpt id="p4">*</bpt>b<ept id="p4">*</ept> is its imaginary part.</source>
          <target state="translated">默认字符串表示一个复数形式显示在窗体中使用笛卡尔坐标数<ph id="ph1">`(`</ph>  <ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>，其中是复数的实数部分和<bpt id="p4">*</bpt>b<ept id="p4">*</ept>是其虚数部分。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString">
          <source>Both <bpt id="p1">*</bpt>a<ept id="p1">*</ept> and <bpt id="p2">*</bpt>b<ept id="p2">*</ept> are formatted using the general format specifier ("G") and the conventions of the current system culture.</source>
          <target state="translated">同时和<bpt id="p2">*</bpt>b<ept id="p2">*</ept>使用常规格式说明符 ("G") 和当前系统区域性的约定进行格式化。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString">
          <source>The following example displays the string representation of several complex numbers.</source>
          <target state="translated">下面的示例显示几个复杂数字的字符串表示。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString">
          <source>The output uses the formatting conventions of the English - United States ("en-US") culture, which, in this case, is the current system culture.</source>
          <target state="translated">输出使用英语-美国 ("EN-US") 区域性，即，在这种情况下，当前系统区域性的格式设置约定。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">一个提供区域性特定的格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified culture-specific formatting information.</source>
          <target state="translated">使用指定的区域性特定格式设置信息，将当前复数的值转换为其采用笛卡尔形式的等效字符串表示形式。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The string representation of the current instance in Cartesian form, as specified by <ph id="ph1">&lt;paramref name="provider" /&gt;</ph>.</source>
          <target state="translated">由 <ph id="ph1">&lt;paramref name="provider" /&gt;</ph> 指定的当前实例的采用笛卡尔形式的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form <ph id="ph1">`(`</ph><bpt id="p1">*</bpt>a<ept id="p1">*</ept><ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, where <bpt id="p3">*</bpt>a<ept id="p3">*</ept> is the real part of the complex number, and <bpt id="p4">*</bpt>b<ept id="p4">*</ept> is its imaginary part.</source>
          <target state="translated">字符串表示此方法返回的复数形式显示在窗体中使用笛卡尔坐标数<ph id="ph1">`(`</ph>  <ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>，其中是复数的实数部分和<bpt id="p4">*</bpt>b<ept id="p4">*</ept>是其虚数部分。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>Both <bpt id="p1">*</bpt>a<ept id="p1">*</ept> and <bpt id="p2">*</bpt>b<ept id="p2">*</ept> are formatted using the general format specifier ("G") and the conventions of the culture defined by <ph id="ph1">`provider`</ph>.</source>
          <target state="translated">同时和<bpt id="p2">*</bpt>b<ept id="p2">*</ept>使用常规格式说明符 ("G") 和由定义区域性的约定进行格式化<ph id="ph1">`provider`</ph>。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>参数是<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>实现。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of the real and imaginary numbers in the returned string.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法返回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供的实数和返回字符串中的虚数格式的区域性特定信息的对象。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the returned string is formatted using the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the current culture.</source>
          <target state="translated">如果<ph id="ph1">`provider`</ph>是<ph id="ph2">`null`</ph>，则返回的字符串格式都是使用<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>当前区域性的对象。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter can be one of the following:</source>
          <target state="translated"><ph id="ph1">`provider`</ph>参数可以是以下之一：</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>表示的区域性的提供格式设置信息的对象</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>A custom object that implements the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface.</source>
          <target state="translated">实现一个自定义对象<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法返回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The following example displays the string representation of several complex numbers.</source>
          <target state="translated">下面的示例显示几个复杂数字的字符串表示。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The result uses the formatting conventions of the English - United States ("en-US") and French - France ("fr-FR") cultures.</source>
          <target state="translated">结果使用英语-美国 ("EN-US") 和法语-法国 ("FR-FR") 区域性的格式设置约定。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>A standard or custom numeric format string.</source>
          <target state="translated">标准或自定义的数值格式字符串。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format for its real and imaginary parts.</source>
          <target state="translated">通过对当前复数的实部和虚部使用指定格式，将它的值转换为其采用笛卡尔形式的等效字符串表示形式。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The string representation of the current instance in Cartesian form.</source>
          <target state="translated">当前实例的采用笛卡尔形式的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form <ph id="ph1">`(`</ph><bpt id="p1">*</bpt>a<ept id="p1">*</ept><ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, where <bpt id="p3">*</bpt>a<ept id="p3">*</ept> is the real part of the complex number, and <bpt id="p4">*</bpt>b<ept id="p4">*</ept> is its imaginary part.</source>
          <target state="translated">字符串表示此方法返回的复数形式显示在窗体中使用笛卡尔坐标数<ph id="ph1">`(`</ph>  <ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>，其中是复数的实数部分和<bpt id="p4">*</bpt>b<ept id="p4">*</ept>是其虚数部分。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>Both <bpt id="p1">*</bpt>a<ept id="p1">*</ept> and <bpt id="p2">*</bpt>b<ept id="p2">*</ept> are formatted using the format string specified by <ph id="ph1">`format`</ph>.</source>
          <target state="translated">同时和<bpt id="p2">*</bpt>b<ept id="p2">*</ept>都使用指定的格式字符串格式化<ph id="ph1">`format`</ph>。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid standard numeric format specifier, or any combination of custom numeric format specifiers.</source>
          <target state="translated"><ph id="ph1">`format`</ph>参数可以是任何有效的标准数字格式说明符或自定义数字格式说明符的任意组合。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>If <ph id="ph1">`format`</ph> is equal to <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> or is <ph id="ph3">`null`</ph>, the real and imaginary parts of the complex number are formatted with the general format specifier ("G").</source>
          <target state="translated">如果<ph id="ph1">`format`</ph>等同于<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>或<ph id="ph3">`null`</ph>，使用常规格式说明符 ("G") 格式表示复数的实部和虚部组成部分。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>If <ph id="ph1">`format`</ph> is any other value, the method throws a <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`format`</ph>是任何其他值，该方法将引发<ph id="ph2">&lt;xref:System.FormatException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following topics:</source>
          <target state="translated">.NET Framework 提供了广泛的格式设置支持，以下主题中的更详细地介绍：</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>For more information about numeric format strings, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">有关数字格式字符串的详细信息，请参阅<bpt id="p1">[</bpt>标准数字格式字符串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自定义数字格式字符串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>For more information about formatting in the .NET Framework, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">有关.NET Framework 中的格式设置的详细信息，请参阅<bpt id="p1">[</bpt>格式化类型<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The format of the returned string is determined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture.</source>
          <target state="translated">返回字符串的格式由<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>为当前区域性的对象。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>Depending on the <ph id="ph1">`format`</ph> parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string.</source>
          <target state="translated">具体取决于<ph id="ph1">`format`</ph>参数，此对象控制输出字符串中的负号、 组分隔符和小数点符号等符号。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>To provide formatting information for cultures other than the current culture, call the <ph id="ph1">&lt;xref:System.Numerics.Complex.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> overload.</source>
          <target state="translated">若要提供区域性而非当前区域性的格式设置信息，请调用<ph id="ph1">&lt;xref:System.Numerics.Complex.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph>重载。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The following example initializes a complex number and displays it using several standard format strings.</source>
          <target state="translated">下面的示例初始化一个复杂的数字，并显示它使用多个标准格式字符串。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 不是有效的格式字符串。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>A standard or custom numeric format string.</source>
          <target state="translated">标准或自定义的数值格式字符串。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">一个提供区域性特定的格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format and culture-specific format information for its real and imaginary parts.</source>
          <target state="translated">通过对当前复数的实部和虚部使用指定格式和区域性特定格式信息，将它的值转换为其采用笛卡尔形式的等效字符串表示形式。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the current instance in Cartesian form, as specified by <ph id="ph1">&lt;paramref name="format" /&gt;</ph> and <ph id="ph2">&lt;paramref name="provider" /&gt;</ph>.</source>
          <target state="translated">由 <ph id="ph1">&lt;paramref name="format" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="provider" /&gt;</ph> 指定的当前实例的采用笛卡尔形式的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form <ph id="ph1">`(`</ph><bpt id="p1">*</bpt>a<ept id="p1">*</ept><ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, where <bpt id="p3">*</bpt>a<ept id="p3">*</ept> is the real part of the complex number, and <bpt id="p4">*</bpt>b<ept id="p4">*</ept> is its imaginary part.</source>
          <target state="translated">字符串表示此方法返回的复数形式显示在窗体中使用笛卡尔坐标数<ph id="ph1">`(`</ph>  <ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>，其中是复数的实数部分和<bpt id="p4">*</bpt>b<ept id="p4">*</ept>是其虚数部分。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>Both <bpt id="p1">*</bpt>a<ept id="p1">*</ept> and <bpt id="p2">*</bpt>b<ept id="p2">*</ept> are formatted using the format string specified by <ph id="ph1">`format`</ph>.</source>
          <target state="translated">同时和<bpt id="p2">*</bpt>b<ept id="p2">*</ept>都使用指定的格式字符串格式化<ph id="ph1">`format`</ph>。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid standard numeric format specifier, or any combination of custom numeric format specifiers.</source>
          <target state="translated"><ph id="ph1">`format`</ph>参数可以是任何有效的标准数字格式说明符或自定义数字格式说明符的任意组合。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is equal to <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> or is <ph id="ph3">`null`</ph>, the real and imaginary parts of the complex number are formatted with the general format specifier ("G").</source>
          <target state="translated">如果<ph id="ph1">`format`</ph>等同于<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>或<ph id="ph3">`null`</ph>，使用常规格式说明符 ("G") 格式表示复数的实部和虚部组成部分。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is any other value, the method throws a <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`format`</ph>是任何其他值，该方法将引发<ph id="ph2">&lt;xref:System.FormatException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following topics:</source>
          <target state="translated">.NET Framework 提供了广泛的格式设置支持，以下主题中的更详细地介绍：</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>For more information about numeric format strings, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">有关数字格式字符串的详细信息，请参阅<bpt id="p1">[</bpt>标准数字格式字符串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自定义数字格式字符串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>For more information about formatting in the .NET Framework, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">有关.NET Framework 中的格式设置的详细信息，请参阅<bpt id="p1">[</bpt>格式化类型<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>参数是<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>实现。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of the real and imaginary numbers in the returned string.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法返回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供的实数和返回字符串中的虚数格式的区域性特定信息的对象。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>Depending on the <ph id="ph1">`format`</ph> parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string.</source>
          <target state="translated">具体取决于<ph id="ph1">`format`</ph>参数，此对象控制输出字符串中的负号、 组分隔符和小数点符号等符号。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the returned string is formatted using the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the current culture.</source>
          <target state="translated">如果<ph id="ph1">`provider`</ph>是<ph id="ph2">`null`</ph>，则返回的字符串格式都是使用<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>当前区域性的对象。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter can be one of the following:</source>
          <target state="translated"><ph id="ph1">`provider`</ph>参数可以是以下之一：</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>表示的区域性的提供格式设置信息的对象</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>A custom object that implements the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface.</source>
          <target state="translated">实现一个自定义对象<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法返回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The following example creates an array of complex numbers, and displays each using several standard format strings as well as <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objects that represent the English - United States ("en-US") and French - France ("fr-FR") cultures.</source>
          <target state="translated">下面的示例创建的复数，数组并显示每个使用几个标准格式字符串，以及<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>表示英语-美国 ("EN-US") 和法语-法国 ("FR-FR") 区域性的对象。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 不是有效的格式字符串。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="F:System.Numerics.Complex.Zero">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> instance with a real number equal to zero and an imaginary number equal to zero.</source>
          <target state="translated">返回新的 <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> 实例，其实数和虚数都等于零。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.Zero">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> property is most frequently used to compare a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> value to zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Zero&gt;</ph>属性最常用于比较<ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>为零的值。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.Zero">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> value by using the <ph id="ph2">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> property.</source>
          <target state="translated">下面的示例实例化<ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph>值使用<ph id="ph2">&lt;xref:System.Numerics.Complex.Zero&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.Zero">
          <source>It then compares this value to another value that is instantiated by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> constructor with a real part equal to zero and an imaginary part equal to zero.</source>
          <target state="translated">然后，它比较另一个值，通过调用实例化到此值<ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph>等于零实部和虚部等于零的构造函数。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.Zero">
          <source>As the output from the example shows, the two values are equal.</source>
          <target state="translated">如示例输出所示，两个值相等。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>
