<Type Name="RangeExpression" FullName="System.Web.UI.WebControls.Expressions.RangeExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c5010502f4c8f1be95f037c1e0482a76f0e352a4" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46652859" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RangeExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RangeExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.RangeExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class RangeExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class RangeExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <TypeSignature Language="F#" Value="type RangeExpression = class&#xA;    inherit ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供了一种方法，用于确定某个值是大于还是小于指定值，或者某个值是否介于两个指定值之间。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.QueryExtender>控件通过使用中的类提供在网页中的筛选器数据的能力<xref:System.Web.UI.WebControls.Expressions>命名空间。 这些类包括<xref:System.Web.UI.WebControls.Expressions.RangeExpression>类。  
  
 <xref:System.Web.UI.WebControls.Expressions.RangeExpression>类使用的定义范围的值对数据列中搜索。 您使用<xref:System.Web.UI.WebControls.Expressions.RangeExpression.DataField%2A>属性来指定要搜索的列。 您使用<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A>属性可指定是否要包括或排除在搜索中的最小的结果，并使用<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A>属性可指定是否要包括或排除的最大值。 可以在中指定的最大和最小值[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]控件和值然后可以传递给<xref:System.Web.UI.WebControls.QueryExtender>控件中的参数作为<xref:System.Web.UI.WebControls.ControlParameter>控件。 通常在数据绑定控件中显示结果。  
  
   
  
## Examples  
 下面的示例演示如何在 Products 表中指定的范围中具有标价的产品的 AdventureWorks 数据库中搜索 ListPrice 列`FromTextBox`和`ToTextBox`文本框。 筛选器包括的最小值，但不包括在结果中的最大值。 结果显示在<xref:System.Web.UI.WebControls.Label>控件。  
  
 此代码示例摘自[演练： 筛选数据的网页使用声明性语法](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)。  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException">
      <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" /> 属性为 <see langword="null" />。</exception>
    <related type="Article" href="http://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702">QueryExtender Web 服务器控件概述</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RangeExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.RangeExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RangeExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.Expressions.RangeExpression" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要用于比较的字段。</summary>
        <value>要用于比较的字段。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 范围表达式中搜索指定的范围内的数据字段。  
  
   
  
## Examples  
 下面的示例演示如何在 Products 表中指定的范围中具有标价的产品的 AdventureWorks 数据库中搜索标价列`FromTextBox`和`ToTextBox`文本框。  
  
 此代码示例摘自[演练： 筛选数据的网页使用声明性语法](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)。  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="rangeExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">要用于比较的对象。</param>
        <summary>获取对其执行范围比较的 <see cref="T:System.Linq.IQueryable" /> 对象。</summary>
        <returns>应用了表达式的 <see cref="T:System.Linq.IQueryable" /> 对象的实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法使用指定<xref:System.Linq.IQueryable>对象解析表达式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" /> 属性为 <see langword="null" />。  
  
或 
将 <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" /> 和 <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" /> 属性设置为 <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />。  
  
或 
<see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" /> 或 <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" /> 属性未设置为 <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />，参数集合为空。</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.RangeType MaxType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.RangeType MaxType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxType As RangeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::RangeType MaxType { System::Web::UI::WebControls::Expressions::RangeType get(); void set(System::Web::UI::WebControls::Expressions::RangeType value); };" />
      <MemberSignature Language="F#" Value="member this.MaxType : System.Web.UI.WebControls.Expressions.RangeType with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置范围的最大值。</summary>
        <value>要用于最大值的比较的类型。 默认值为 <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />，指示不执行最大值比较。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的可能值是<xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>， <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>，和<xref:System.Web.UI.WebControls.Expressions.RangeType.None>。  
  
 当<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A>设置为<xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>，在搜索结果中包含范围的最大值。 这相当于执行 > = 操作。 如果将属性设置为<xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>字段，它是等效于指定 > 或 < 操作。 如果将属性设置为<xref:System.Web.UI.WebControls.Expressions.RangeType.None>，对范围施加任何限制。  
  
   
  
## Examples  
 下面的示例演示如何包含在范围内指定的最小值以及如何排除的最大值。 最大和最小值输入到文本框。 此代码示例摘自[演练： 筛选数据的网页使用声明性语法](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)。  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.RangeType MinType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.RangeType MinType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" />
      <MemberSignature Language="VB.NET" Value="Public Property MinType As RangeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::RangeType MinType { System::Web::UI::WebControls::Expressions::RangeType get(); void set(System::Web::UI::WebControls::Expressions::RangeType value); };" />
      <MemberSignature Language="F#" Value="member this.MinType : System.Web.UI.WebControls.Expressions.RangeType with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.MinType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置范围的最小值。</summary>
        <value>要用于最小值的比较的类型。 默认值为 <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />，指示不执行最小值比较。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的可能值是<xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>， <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>，和<xref:System.Web.UI.WebControls.Expressions.RangeType.None>。  
  
 当<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A>或<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A>属性设置为<xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>，在搜索结果中包含范围的最小值和最大值。 这相当于执行 > = 或\<= 操作。 <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>字段等效于 > 或 < 操作和<xref:System.Web.UI.WebControls.Expressions.RangeType.None>未施加任何限制范围。  
  
   
  
## Examples  
 下面的示例演示如何包含在范围内指定的最小值以及如何排除的最大值。 最大和最小值输入到文本框。 此代码示例摘自[演练： 筛选数据的网页使用声明性语法](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)。  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>