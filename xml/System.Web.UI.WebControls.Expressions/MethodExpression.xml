<Type Name="MethodExpression" FullName="System.Web.UI.WebControls.Expressions.MethodExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="970264dc27c15aef12009b2e30f6891735a746f3" />
    <Meta Name="ms.sourcegitcommit" Value="d0bb31ec8354fa58c62c2a646057eec11d3e2150" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/17/2018" />
    <Meta Name="ms.locfileid" Value="36585712" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MethodExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MethodExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.MethodExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class MethodExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class MethodExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <TypeSignature Language="F#" Value="type MethodExpression = class&#xA;    inherit ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="dc9a9-101">提供一种方式，用于指定某个方法中定义的自定义 LINQ 查询。</span>
      <span class="sxs-lookup">
        <span data-stu-id="dc9a9-101">Provides a way to specify a custom LINQ query that is defined in a method.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc9a9-102"><xref:System.Web.UI.WebControls.QueryExtender>控件支持自定义 LINQ 查询。</span><span class="sxs-lookup"><span data-stu-id="dc9a9-102">The <xref:System.Web.UI.WebControls.QueryExtender> control supports custom LINQ queries.</span></span> <span data-ttu-id="dc9a9-103">您可以定义自定义 LINQ 查询在方法，并使用<xref:System.Web.UI.WebControls.Expressions.MethodExpression>筛选器选项来调用中的查询<xref:System.Web.UI.WebControls.QueryExtender>控件。</span><span class="sxs-lookup"><span data-stu-id="dc9a9-103">You can define a custom LINQ query in a method and use the <xref:System.Web.UI.WebControls.Expressions.MethodExpression> filter option to invoke the query in the <xref:System.Web.UI.WebControls.QueryExtender> control.</span></span>  
  
 <span data-ttu-id="dc9a9-104">包含自定义 LINQ 查询的方法必须满足以下条件：</span><span class="sxs-lookup"><span data-stu-id="dc9a9-104">The method that contains the custom LINQ query must meet the following criteria:</span></span>  
  
-   <span data-ttu-id="dc9a9-105">该方法必须是静态 (`Shared`在 Visual Basic 中)。</span><span class="sxs-lookup"><span data-stu-id="dc9a9-105">The method must be static (`Shared` in Visual Basic).</span></span> <span data-ttu-id="dc9a9-106">第一个参数必须是<xref:System.Linq.IQueryable%601>或<xref:System.Collections.Generic.IEnumerable%601>对象。</span><span class="sxs-lookup"><span data-stu-id="dc9a9-106">The first parameter must be an <xref:System.Linq.IQueryable%601> or <xref:System.Collections.Generic.IEnumerable%601> object.</span></span> <span data-ttu-id="dc9a9-107">该方法可以有多个参数。</span><span class="sxs-lookup"><span data-stu-id="dc9a9-107">The method can have more than one parameter.</span></span>  
  
-   <span data-ttu-id="dc9a9-108">返回值不能更改<xref:System.Linq.IQueryable%601>或<xref:System.Collections.Generic.IEnumerable%601>查询类型。</span><span class="sxs-lookup"><span data-stu-id="dc9a9-108">The return value cannot change the <xref:System.Linq.IQueryable%601> or <xref:System.Collections.Generic.IEnumerable%601> type that is queried.</span></span>  
  
 <span data-ttu-id="dc9a9-109"><xref:System.Web.UI.WebControls.Expressions.MethodExpression>搜索包含按以下顺序的查询的方法：</span><span class="sxs-lookup"><span data-stu-id="dc9a9-109">The <xref:System.Web.UI.WebControls.Expressions.MethodExpression> searches for the method that contains the query in the following order:</span></span>  
  
1.  <span data-ttu-id="dc9a9-110">如果<xref:System.Web.UI.WebControls.Expressions.MethodExpression.TypeName%2A>属性中指定<xref:System.Web.UI.WebControls.QueryExtender>控件，<xref:System.Web.UI.WebControls.Expressions.MethodExpression>对象查找中指定类型的方法。</span><span class="sxs-lookup"><span data-stu-id="dc9a9-110">If a <xref:System.Web.UI.WebControls.Expressions.MethodExpression.TypeName%2A> property is specified in the <xref:System.Web.UI.WebControls.QueryExtender> control, the <xref:System.Web.UI.WebControls.Expressions.MethodExpression> object looks for the method in the specified type.</span></span>  
  
2.  <span data-ttu-id="dc9a9-111">如果数据源实现<xref:System.Web.DynamicData.IDynamicDataSource>，该方法查找上下文类型上的方法 (<xref:System.Data.Linq.DataContext>或<xref:System.Data.Objects.ObjectContext>对象。)</span><span class="sxs-lookup"><span data-stu-id="dc9a9-111">If the data source implements <xref:System.Web.DynamicData.IDynamicDataSource>, the method looks for the method on the context type (<xref:System.Data.Linq.DataContext> or <xref:System.Data.Objects.ObjectContext> object.)</span></span>  
  
3.  <span data-ttu-id="dc9a9-112">该方法查找模板控件中、 在页上，类的基类或用户控件中的方法。</span><span class="sxs-lookup"><span data-stu-id="dc9a9-112">The method looks for the method in a template control, in the base class for the page, or in a user control.</span></span>  
  
 <span data-ttu-id="dc9a9-113"><xref:System.Web.UI.WebControls.Expressions.MethodExpression>类就像是<xref:System.Web.UI.WebControls.Expressions.CustomExpression>类相似，只不过方法表达式执行响应方法调用，并按响应某个事件执行自定义表达式。</span><span class="sxs-lookup"><span data-stu-id="dc9a9-113">The <xref:System.Web.UI.WebControls.Expressions.MethodExpression> class is like the <xref:System.Web.UI.WebControls.Expressions.CustomExpression> class except that the method expression is executed in response to a method call, and the custom expression is executed in response to an event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc9a9-114">下面的示例演示如何在 AdventureWorks 数据库中具有标价的 400 或更高的产品搜索产品表的 ListPrice 字段。</span><span class="sxs-lookup"><span data-stu-id="dc9a9-114">The following example shows how to search the ListPrice field of the Products table in the AdventureWorks database for products that have a list price of 400 or more.</span></span> <span data-ttu-id="dc9a9-115">此示例演示如何创建自定义 LINQ 查询中的方法中页面代码以及如何调用中的方法<xref:System.Web.UI.WebControls.QueryExtender>控件。</span><span class="sxs-lookup"><span data-stu-id="dc9a9-115">This example shows how to create a custom LINQ query in a method in page code and how to invoke the method in the <xref:System.Web.UI.WebControls.QueryExtender> control.</span></span>  
  
```vb  
Public Shared Function FilterStandardPrice(ByVal query As _  
        IQueryable(Of Product)) As IQueryable(Of Product)  
        Return From p In query _  
            Where p.ListPrice >= 400 _  
            Select p  
    End Function  
```  
  
```csharp  
public static IQueryable<Product>   
        FilterStandardPrice(IQueryable<Product> query)  
{  
        return from p in query  
                  where p.ListPrice >= 400  
                  select p;  
  
    }  
```  
  
 <span data-ttu-id="dc9a9-116">下面的示例演示如何在页面中调用该方法。</span><span class="sxs-lookup"><span data-stu-id="dc9a9-116">The following example shows how to call the method in the page.</span></span>  
  
```  
<html>  
<head runat="server">  
  <title>Custom Filter</title>  
</head>  
<body>  
  <form id="form1" runat="server">  
    <asp:LinqDataSource ID="LinqDataSource1" runat="server"   
        ContextTypeName="AdventureworksDataContext" EntityTypeName=""   
        TableName="Products">  
    </asp:LinqDataSource>  
  
    <asp:QueryExtender ID="QueryExtender1" runat="server"   
        TargetControlID="LinqDataSource1">  
      <asp:MethodExpression MethodName="FilterStandardPrice" >  
      </asp:MethodExpression>  
    </asp:QueryExtender>  
  
    <asp:GridView ID="GridView1" runat="server"   
        DataSourceID="LinqDataSource1"   
        DataKeyNames="ProductID"   
    </asp:GridView>  
  </form>  
</body>  
</html>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MethodExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.MethodExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MethodExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc9a9-117">初始化 <see cref="T:System.Web.UI.WebControls.Expressions.MethodExpression" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc9a9-117">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Expressions.MethodExpression" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.MethodExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="methodExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="dc9a9-118">要使用的数据源控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc9a9-118">The data source control to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc9a9-119">使用指定 <see cref="T:System.Linq.IQueryable" /> 对象解析表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc9a9-119">Resolves the expression by using the specified <see cref="T:System.Linq.IQueryable" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc9a9-120">用于解析表达式的 <see cref="T:System.Linq.IQueryable" /> 对象的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc9a9-120">An instance of the <see cref="T:System.Linq.IQueryable" /> object that was used to resolve the expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dc9a9-121">数据源控件为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc9a9-121">The data source control is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="dc9a9-122">未找到方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc9a9-122">The method was not found.</span>
          </span>
          <span data-ttu-id="dc9a9-123">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc9a9-123">-or-</span>
          </span>
          <span data-ttu-id="dc9a9-124">此方法不是静态的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc9a9-124">The method is not static.</span>
          </span>
          <span data-ttu-id="dc9a9-125">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc9a9-125">-or-</span>
          </span>
          <span data-ttu-id="dc9a9-126">传递的 <see langword="IQuerable&lt;T&gt;" /> 对象的类型已更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc9a9-126">The type of the passed <see langword="IQuerable&lt;T&gt;" /> object was changed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IgnoreIfNotFound">
      <MemberSignature Language="C#" Value="public bool IgnoreIfNotFound { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreIfNotFound" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.MethodExpression.IgnoreIfNotFound" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreIfNotFound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreIfNotFound { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreIfNotFound : bool with get, set" Usage="System.Web.UI.WebControls.Expressions.MethodExpression.IgnoreIfNotFound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc9a9-127">获取或设置一个值，该值指示是否应忽略表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc9a9-127">Gets or sets a value that indicates whether the expression should be ignored.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc9a9-128">如果忽略表达式，则该值为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc9a9-128">
              <see langword="true" /> if the expression is ignored; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc9a9-129"><xref:System.Web.UI.WebControls.Expressions.MethodExpression>对象搜索通过在特定位置中查找并按特定顺序搜索包含查询的方法。</span><span class="sxs-lookup"><span data-stu-id="dc9a9-129">The <xref:System.Web.UI.WebControls.Expressions.MethodExpression> object searches for a method that contains the query by looking in specific locations and searching in a specific order.</span></span> <span data-ttu-id="dc9a9-130">可以将此属性设置为`false`引发异常，如果<xref:System.Web.UI.WebControls.Expressions.CustomExpression>对象未找到包含 LINQ 的方法。</span><span class="sxs-lookup"><span data-stu-id="dc9a9-130">You can set this property to `false` to throw an exception if the <xref:System.Web.UI.WebControls.Expressions.CustomExpression> object does not find a method that contains a LINQ.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.MethodExpression.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MethodName : string with get, set" Usage="System.Web.UI.WebControls.Expressions.MethodExpression.MethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc9a9-131">获取或设置包含自定义 LINQ 查询的方法的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc9a9-131">Gets or sets the name of the method that contains a custom LINQ query.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc9a9-132">其中包含自定义 LINQ 查询的方法的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc9a9-132">The name of the method that contains the custom LINQ query.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc9a9-133"><xref:System.Web.UI.WebControls.Expressions.MethodExpression>对象可用于调用某个方法中定义的自定义 LINQ 查询。</span><span class="sxs-lookup"><span data-stu-id="dc9a9-133">The <xref:System.Web.UI.WebControls.Expressions.MethodExpression> object enables you to call a custom LINQ query that is defined in a method.</span></span> <span data-ttu-id="dc9a9-134">指定的方法中<xref:System.Web.UI.WebControls.QueryExtender>页中的控件。</span><span class="sxs-lookup"><span data-stu-id="dc9a9-134">You specify the method in the <xref:System.Web.UI.WebControls.QueryExtender> control in the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc9a9-135">下面的示例演示如何指定`FilterStandardPrice`中的方法<xref:System.Web.UI.WebControls.QueryExtender>控件。</span><span class="sxs-lookup"><span data-stu-id="dc9a9-135">The following example shows how to specify the `FilterStandardPrice` method in the <xref:System.Web.UI.WebControls.QueryExtender> control.</span></span> <span data-ttu-id="dc9a9-136">在中定义自定义 LINQ 查询`FilterStandardPrice`方法。</span><span class="sxs-lookup"><span data-stu-id="dc9a9-136">The custom LINQ query is defined in a `FilterStandardPrice` method.</span></span>  
  
```  
<asp:QueryExtender ID="QueryExtender1" runat="server"   
    TargetControlID="LinqDataSource1">  
  <asp:MethodExpression MethodName="FilterStandardPrice">  
  </asp:MethodExpression>  
  </asp:QueryExtender>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.MethodExpression.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Web.UI.WebControls.Expressions.MethodExpression.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc9a9-137">获取或设置其方法包含自定义查询的类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc9a9-137">Gets or sets the class whose method contains the custom query.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc9a9-138">包含方法作为成员的类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc9a9-138">The class that the method is a member of.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc9a9-139"><xref:System.Web.UI.WebControls.Expressions.MethodExpression>类可用于指定数据源中的自定义表达式<xref:System.Web.UI.WebControls.QueryExtender>控件。</span><span class="sxs-lookup"><span data-stu-id="dc9a9-139">The <xref:System.Web.UI.WebControls.Expressions.MethodExpression> class enables you to specify a custom expression for a data source in the <xref:System.Web.UI.WebControls.QueryExtender> control.</span></span> <span data-ttu-id="dc9a9-140">可以使用<xref:System.Web.UI.WebControls.Expressions.MethodExpression.TypeName%2A>属性来指定该方法所属的类。</span><span class="sxs-lookup"><span data-stu-id="dc9a9-140">You can use the <xref:System.Web.UI.WebControls.Expressions.MethodExpression.TypeName%2A> property to specify the class to which the method belongs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>