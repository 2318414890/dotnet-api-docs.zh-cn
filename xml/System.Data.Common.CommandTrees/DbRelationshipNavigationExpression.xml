<Type Name="DbRelationshipNavigationExpression" FullName="System.Data.Common.CommandTrees.DbRelationshipNavigationExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0772e7688389895af3605208b1d4b61806be452c" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39824442" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DbRelationshipNavigationExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DbRelationshipNavigationExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DbRelationshipNavigationExpression&#xA;Inherits DbExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbRelationshipNavigationExpression sealed : System::Data::Common::CommandTrees::DbExpression" />
  <TypeSignature Language="F#" Value="type DbRelationshipNavigationExpression = class&#xA;    inherit DbExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示关系的导航。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此表达式的结果就是关系的导航结果。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class System.Data.Common.CommandTrees.DbExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As DbExpressionVisitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(System::Data::Common::CommandTrees::DbExpressionVisitor ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Data.Common.CommandTrees.DbExpressionVisitor -&gt; unit" Usage="dbRelationshipNavigationExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">
          <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> 的一个实例。</param>
        <summary>实现不生成结果值的表达式的访问者模式。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="visitor" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public override TResultType Accept&lt;TResultType&gt; (System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResultType Accept&lt;TResultType&gt;(class System.Data.Common.CommandTrees.DbExpressionVisitor`1&lt;!!TResultType&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResultType) (visitor As DbExpressionVisitor(Of TResultType)) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; override TResultType Accept(System::Data::Common::CommandTrees::DbExpressionVisitor&lt;TResultType&gt; ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Data.Common.CommandTrees.DbExpressionVisitor&lt;'ResultType&gt; -&gt; 'ResultType" Usage="dbRelationshipNavigationExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResultType">生成的结果的类型<c>访问者</c>。</typeparam>
        <param name="visitor">生成特定类型结果值的类型化 <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> 的实例。</param>
        <summary>实现生成特定类型结果值的表达式的访问者模式。</summary>
        <returns>
          <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> 生成的特定类型的结果值。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="visitor" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="NavigateFrom">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.RelationshipEndMember NavigateFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.RelationshipEndMember NavigateFrom" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigateFrom" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NavigateFrom As RelationshipEndMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::RelationshipEndMember ^ NavigateFrom { System::Data::Metadata::Edm::RelationshipEndMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NavigateFrom : System.Data.Metadata.Edm.RelationshipEndMember" Usage="System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigateFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.RelationshipEndMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取作为导航起点的关系端的元数据。</summary>
        <value>要从其开始导航的关系 End 的元数据。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateTo">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.RelationshipEndMember NavigateTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.RelationshipEndMember NavigateTo" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigateTo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NavigateTo As RelationshipEndMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::RelationshipEndMember ^ NavigateTo { System::Data::Metadata::Edm::RelationshipEndMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NavigateTo : System.Data.Metadata.Edm.RelationshipEndMember" Usage="System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigateTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.RelationshipEndMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要导航到的关系 End 的元数据。</summary>
        <value>作为导航终点的关系端的元数据。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationSource">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression NavigationSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression NavigationSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigationSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NavigationSource As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ NavigationSource { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NavigationSource : System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigationSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，它用于指定导航的起始点，并且必须是对某个实体实例的引用。</summary>
        <value>一个 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，它指定应作为导航起点的源关系端的实例。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">表达式为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">表达式与 <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> 的命令目录树没有关联，或者其结果类型不等于或不可提升为 <see cref="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigateFrom" /> 属性的引用类型。</exception>
      </Docs>
    </Member>
    <Member MemberName="Relationship">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.RelationshipType Relationship { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.RelationshipType Relationship" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Relationship" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Relationship As RelationshipType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::RelationshipType ^ Relationship { System::Data::Metadata::Edm::RelationshipType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Relationship : System.Data.Metadata.Edm.RelationshipType" Usage="System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Relationship" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.RelationshipType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取发生导航的关系的元数据。</summary>
        <value>发生导航的关系的元数据。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>