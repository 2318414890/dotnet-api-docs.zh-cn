<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ContractAdapter.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac541d4782b82dcc729dd9b148472be19b45036f486.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">41d4782b82dcc729dd9b148472be19b45036f486</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.AddIn.Pipeline.ContractAdapter">
          <source>Provides methods for sharing and readapting add-ins.</source>
          <target state="translated">提供用于共享和重新适应外接程序的方法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractAdapter">
          <source>You can use this class to share an add-in with another host that does not have the same pipeline to that add-in (particularly, another host that does not have the same host view of the add-in).</source>
          <target state="translated">你可以使用此类与不具有向该外接程序相同的管道的另一台主机共享外接程序 （具体来说，是不具有相同的另一个主机承载的外接程序的视图）。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractAdapter">
          <source>If you need to adapt an activated add-in from its host view to the contract, use the <ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter%2A&gt;</ph> method.</source>
          <target state="translated">如果你需要能够激活外接程序从其主机视图到的协定中，使用<ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractAdapter">
          <source>If you have an instance of the contract and need to convert it to the host view, use the <ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter%2A&gt;</ph> method.</source>
          <target state="translated">如果你有协定的实例，并且需要将其转换为主机视图，使用<ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.AddIn.Pipeline.ContractAdapter">
          <source>Obtains a host view of an add-in if a suitable host-side adapter is found at a specified location.</source>
          <target state="translated">如果在指定位置找到了适合的宿主端适配器，则获取外接程序的宿主视图。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)">
          <source>The type that defines the host view of the add-in.</source>
          <target state="translated">用于定义外接程序宿主视图的类型。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)">
          <source>A handle to the contract used by the add-in to be shared.</source>
          <target state="translated">要共享的外接程序所使用的协定句柄。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)">
          <source>The host's application base.</source>
          <target state="translated">宿主的应用程序基。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)">
          <source>Obtains a host view of an add-in if a suitable host-side adapter is found at a location specified by a value from the <ph id="ph1">&lt;see cref="T:System.AddIn.Hosting.PipelineStoreLocation" /&gt;</ph> enumeration.</source>
          <target state="translated">如果在一个由 <ph id="ph1">&lt;see cref="T:System.AddIn.Hosting.PipelineStoreLocation" /&gt;</ph> 枚举中的值指定的位置找到了适合的宿主端适配器，则获取外接程序的宿主视图。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)">
          <source>The host view of the add-in that is shared.</source>
          <target state="translated">所共享的外接程序的宿主视图。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)">
          <source>In this scenario, an entity has an instance of a contract and wants to adapt it to a particular view.</source>
          <target state="translated">在此方案中，实体具有一个协定的实例，并希望使其满足特定的视图。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)">
          <source>Use this method to query the system to find and instantiate an adapter to convert into that view.</source>
          <target state="translated">使用此方法来查询系统以查找并实例化一个适配器来转换为该视图。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)">
          <source><ph id="ph1">&lt;paramref name="location" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="location" /&gt;</ph> 无效。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)">
          <source>The type that defines the host view of the add-in.</source>
          <target state="translated">用于定义外接程序宿主视图的类型。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)">
          <source>A handle to the contract used by the add-in to be shared.</source>
          <target state="translated">要共享的外接程序所使用的协定句柄。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)">
          <source>A path to the add-in store.</source>
          <target state="translated">到外接程序存储区的路径。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)">
          <source>Obtains a host view of an add-in if a suitable host-side adapter is found at a location specified by a path.</source>
          <target state="translated">如果在通过路径指定的位置找到了适合的宿主端适配器，则获取外接程序的宿主视图。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)">
          <source>The host view of the add-in that is shared.</source>
          <target state="translated">所共享的外接程序的宿主视图。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)">
          <source>In this scenario, an entity has an instance of a contract and wants to adapt it to a particular view.</source>
          <target state="translated">在此方案中，实体具有一个协定的实例，并希望使其满足特定的视图。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)">
          <source>Use this method to query the system to find and instantiate an adapter to convert into that view.</source>
          <target state="translated">使用此方法来查询系统以查找并实例化一个适配器来转换为该视图。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)">
          <source>The host view of an add-in activated by the system from the current application domain.</source>
          <target state="translated">由系统从当前应用程序域中激活的外接程序的宿主视图。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)">
          <source>Gets the handle to the contract for a provided host view of an add-in.</source>
          <target state="translated">获取提供的外接程序宿主视图的协定句柄。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)">
          <source>A handle to the contract.</source>
          <target state="translated">协定的句柄。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)">
          <source>In this scenario, the source entity (a host) has an add-in that wants to be shared by a destination entity (another host).</source>
          <target state="translated">在此方案中，源实体 （主机） 具有想要共享的目标实体 （另一台主机） 的外接程序。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)">
          <source>Use this method to obtain the handle to the contract that was instantiated for the source entity by the add-in system.</source>
          <target state="translated">使用此方法以获取已为源实体实例化由外接程序系统的协定的句柄。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)">
          <source><ph id="ph1">&lt;paramref name="view" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="view" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>