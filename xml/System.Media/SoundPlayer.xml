<Type Name="SoundPlayer" FullName="System.Media.SoundPlayer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e5fe33492f5e429c6a6eac89da3af1526de4ad4c" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52360780" /></Metadata><TypeSignature Language="C#" Value="public class SoundPlayer : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable SoundPlayer extends System.ComponentModel.Component implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Media.SoundPlayer" />
  <TypeSignature Language="VB.NET" Value="Public Class SoundPlayer&#xA;Inherits Component&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoundPlayer : System::ComponentModel::Component, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type SoundPlayer = class&#xA;    inherit Component&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>控制 .wav 文件中的声音播放。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Media.SoundPlayer>类提供了一个简单的界面，用于加载和播放.wav 文件。 <xref:System.Media.SoundPlayer>类支持从文件路径，一个 URL，加载.wav 文件<xref:System.IO.Stream>，其中包含.wav 文件或包含.wav 文件的嵌入的资源。  
  
 若要播放声音 using<xref:System.Media.SoundPlayer>类中，配置<xref:System.Media.SoundPlayer>.wav 文件并调用 play 方法之一的路径。 您可以确定.wav 文件，若要播放使用的构造函数之一或通过设置<xref:System.Media.SoundPlayer.SoundLocation%2A>或<xref:System.Media.SoundPlayer.Stream%2A>属性。 可以通过使用一种加载方法中，播放之前加载的文件，或可以延迟加载，直到调用 play 方法之一。 一个<xref:System.Media.SoundPlayer>配置为加载.wav 文件从<xref:System.IO.Stream>或 URL 之前，必须加载.wav 文件到内存开始播放。  
  
 您可以加载或以同步方式还是以异步方式播放.wav 文件。 如果调用同步加载或播放方法，调用线程将等到方法返回时，这可能会导致绘制和其他事件中断。 调用异步加载或 play 方法将允许调用线程继续而不发生中断。 有关异步方法调用的详细信息，请参阅[如何： 在后台运行操作](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)。  
  
 当<xref:System.Media.SoundPlayer>完成加载.wav 文件，它会发出<xref:System.Media.SoundPlayer.LoadCompleted>事件。 你可以检查<xref:System.ComponentModel.AsyncCompletedEventArgs>中事件处理程序，以确定加载是成功还是失败。 <xref:System.Media.SoundPlayer.SoundLocationChanged>音频源设置为新文件路径或 URL 时引发事件。 <xref:System.Media.SoundPlayer.StreamChanged>音频源设置到新时引发事件<xref:System.IO.Stream>。 有关如何处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 有关详细信息<xref:System.Media.SoundPlayer>，请参阅[SoundPlayer 类概述](~/docs/framework/winforms/controls/soundplayer-class-overview.md)。  
  
> [!NOTE]
>  <xref:System.Media.SoundPlayer>类不能播放其他文件类型，如.wma 或.mp3。 如果你想要播放其他文件类型，您可以使用 Windows Media Player 控件。 有关详细信息，请参阅[在.NET Framework 解决方案中使用 Windows Media Player 控制](https://go.microsoft.com/fwlink/?LinkId=131267)并[Visual Basic.NET 和 C# 的 Windows Media Player 对象模型引用](https://go.microsoft.com/fwlink/?LinkId=131269)Windows 媒体播放器 SDK 中.  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Media.SoundPlayer>用于播放.wav 文件的本地路径或统一资源标识符 (URI) 的类。  
  
 [!code-cpp[System.Windows.Forms.Sound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#1)]
 [!code-csharp[System.Windows.Forms.Sound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#1)]
 [!code-vb[System.Windows.Forms.Sound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Media.SystemSounds" />
    <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">SoundPlayer 类概述 （Windows 窗体）</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Media.SoundPlayer" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Media.SoundPlayer" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数初始化<xref:System.Media.SoundPlayer>含音频源。 具有音频源路径，配置之前<xref:System.Media.SoundPlayer>将播放提示音声音时调用其播放方法之一。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">SoundPlayer 类概述 （Windows 窗体）</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Media.SoundPlayer : System.IO.Stream -&gt; System.Media.SoundPlayer" Usage="new System.Media.SoundPlayer stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">.wav 文件的 <see cref="T:System.IO.Stream" />。</param>
        <summary>初始化 <see cref="T:System.Media.SoundPlayer" /> 类的新实例，并在指定的 <see cref="T:System.IO.Stream" /> 内附加 .wav 文件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Stream>传递给`stream`参数应为<xref:System.IO.Stream>包含.wav 文件。 返回的数据<xref:System.IO.Stream.Read%2A>方法的<xref:System.IO.Stream>应为.wav 文件中的数据。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">SoundPlayer 类概述 （Windows 窗体）</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer (string soundLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string soundLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (soundLocation As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer(System::String ^ soundLocation);" />
      <MemberSignature Language="F#" Value="new System.Media.SoundPlayer : string -&gt; System.Media.SoundPlayer" Usage="new System.Media.SoundPlayer soundLocation" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="soundLocation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="soundLocation">要加载的 .wav 文件的位置。</param>
        <summary>初始化 <see cref="T:System.Media.SoundPlayer" /> 类的新实例，并附加指定的 .wav 文件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将字符串传递到`soundLocation`参数可以是文件路径或.wav 文件的 URL。 如果路径或 URL 无效，<xref:System.Media.SoundPlayer>仍会向负载的构造，但后续调用或 play 方法将失败。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException">无法解析由 <paramref name="soundLocation" /> 指定的 URL 值。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">SoundPlayer 类概述 （Windows 窗体）</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoundPlayer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoundPlayer(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Media.SoundPlayer : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Media.SoundPlayer" Usage="new System.Media.SoundPlayer (serializationInfo, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">要用于反序列化的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
        <param name="context">用于反序列化的目标。</param>
        <summary>初始化 <see cref="T:System.Media.SoundPlayer" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.UriFormatException">无法解析 <paramref name="serializationInfo" /> 中指定的 <see cref="P:System.Media.SoundPlayer.SoundLocation" />。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">SoundPlayer 类概述 （Windows 窗体）</related>
      </Docs>
    </Member>
    <Member MemberName="IsLoadCompleted">
      <MemberSignature Language="C#" Value="public bool IsLoadCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoadCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.IsLoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoadCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoadCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLoadCompleted : bool" Usage="System.Media.SoundPlayer.IsLoadCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 .wav 文件的加载是否已经成功完成。</summary>
        <value>如果加载了 .wav 文件，则为 <see langword="true" />，如果还没有加载 .wav 文件，则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">SoundPlayer 类概述 （Windows 窗体）</related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load();" />
      <MemberSignature Language="F#" Value="member this.Load : unit -&gt; unit" Usage="soundPlayer.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>同步加载声音。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Media.SoundPlayer.Load%2A>方法使用当前线程来加载.wav 文件，防止线程处理其他消息，直到完成负载。  
  
> [!CAUTION]
>  <xref:System.Media.SoundPlayer.Load%2A>方法加载大型.wav 文件时可能会产生延迟。 此外，将阻止绘制和其他事件，直到完成负载。 使用<xref:System.Media.SoundPlayer.LoadAsync%2A>方法以异步方式加载声音允许调用线程继续而不发生中断。  
  
 此方法将引发<xref:System.Media.SoundPlayer.LoadCompleted>事件时加载完成后，即使负载不成功。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Media.SoundPlayer.LoadAsync%2A>方法将.wav 文件附加到的实例<xref:System.Media.SoundPlayer>类。 此代码示例是为提供一个更大示例的一部分<xref:System.Media.SoundPlayer>类。  
  
 [!code-cpp[System.Windows.Forms.Sound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#2)]
 [!code-csharp[System.Windows.Forms.Sound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#2)]
 [!code-vb[System.Windows.Forms.Sound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">加载所用的时间超出了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 指定的时间（以毫秒为单位）。</exception>
        <exception cref="T:System.IO.FileNotFoundException">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件。</exception>
        <permission cref="T:System.Net.WebPermission">HTTP Internet 资源的访问权。 关联的枚举： <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <altmember cref="M:System.Media.SoundPlayer.LoadAsync" />
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">SoundPlayer 类概述 （Windows 窗体）</related>
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public void LoadAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.LoadAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadAsync();" />
      <MemberSignature Language="F#" Value="member this.LoadAsync : unit -&gt; unit" Usage="soundPlayer.LoadAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用新线程从流或 Web 资源中加载 .wav 文件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Media.SoundPlayer>配置为加载.wav 文件从<xref:System.IO.Stream>或 Web 资源，此方法将启动从使用新线程的位置加载.wav 文件。  
  
 此方法将引发<xref:System.Media.SoundPlayer.LoadCompleted>事件时加载完成后，即使负载不成功。  
  
 如果<xref:System.Media.SoundPlayer>配置从本地文件路径加载.wav 文件，此方法不执行任何操作，因为加载推迟到播放开始。  
  
 有关异步加载的详细信息，请参阅[如何： 加载声音以异步方式在 Windows 窗体中](~/docs/framework/winforms/controls/how-to-load-a-sound-asynchronously-within-a-windows-form.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Media.SoundPlayer.LoadAsync%2A>方法以异步方式由的实例加载.wav 文件，以便使用<xref:System.Media.SoundPlayer>类。 此代码示例是为提供一个更大示例的一部分<xref:System.Media.SoundPlayer>类。  
  
 [!code-cpp[System.Windows.Forms.Sound#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#3)]
 [!code-csharp[System.Windows.Forms.Sound#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#3)]
 [!code-vb[System.Windows.Forms.Sound#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">加载所用的时间超出了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 指定的时间（以毫秒为单位）。</exception>
        <exception cref="T:System.IO.FileNotFoundException">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件。</exception>
        <altmember cref="M:System.Media.SoundPlayer.Load" />
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">SoundPlayer 类概述 （Windows 窗体）</related>
        <related type="Article" href="https://msdn.microsoft.com/library/3b6a9296-1d5e-4d52-a4ba-94366d6fe302">如何：在 Windows 窗体内异步加载声音</related>
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ LoadCompleted;" />
      <MemberSignature Language="F#" Value="member this.LoadCompleted : System.ComponentModel.AsyncCompletedEventHandler " Usage="member this.LoadCompleted : System.ComponentModel.AsyncCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当成功或未成功加载 .wav 文件时出现。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当加载.wav 文件的已完成时，引发此事件。 事件参数指示声音的加载是否已成功完成或失败。  
  
 有关如何处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Media.SoundPlayer.OnLoadCompleted%2A>事件处理程序接收通知，指示已加载的.wav 文件的内容。 此代码示例是为提供一个更大示例的一部分<xref:System.Media.SoundPlayer>类。  
  
 [!code-cpp[System.Windows.Forms.Sound#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#8)]
 [!code-csharp[System.Windows.Forms.Sound#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#8)]
 [!code-vb[System.Windows.Forms.Sound#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">SoundPlayer 类概述 （Windows 窗体）</related>
      </Docs>
    </Member>
    <Member MemberName="LoadTimeout">
      <MemberSignature Language="C#" Value="public int LoadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LoadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.LoadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LoadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LoadTimeout : int with get, set" Usage="System.Media.SoundPlayer.LoadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 .wav 文件的加载必须完成的时间（以毫秒为单位）。</summary>
        <value>要等待的毫秒数。 默认值为 10000（10 秒）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此时间到期后，取消加载和<xref:System.ServiceProcess.TimeoutException>引发异常。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">SoundPlayer 类概述 （Windows 窗体）</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoadCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnLoadCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoadCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoadCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoadCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoadCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit&#xA;override this.OnLoadCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit" Usage="soundPlayer.OnLoadCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Media.SoundPlayer.LoadCompleted" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当加载.wav 文件的已完成时，调用此方法。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">SoundPlayer 类概述 （Windows 窗体）</related>
      </Docs>
    </Member>
    <Member MemberName="OnSoundLocationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSoundLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSoundLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSoundLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSoundLocationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSoundLocationChanged : EventArgs -&gt; unit&#xA;override this.OnSoundLocationChanged : EventArgs -&gt; unit" Usage="soundPlayer.OnSoundLocationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Media.SoundPlayer.SoundLocationChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法的新音频源路径时此<xref:System.Media.SoundPlayer>已设置。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅如何： 提供事件的功能和[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="P:System.Media.SoundPlayer.SoundLocation" />
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">SoundPlayer 类概述 （Windows 窗体）</related>
      </Docs>
    </Member>
    <Member MemberName="OnStreamChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStreamChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStreamChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStreamChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStreamChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStreamChanged : EventArgs -&gt; unit&#xA;override this.OnStreamChanged : EventArgs -&gt; unit" Usage="soundPlayer.OnStreamChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Media.SoundPlayer.StreamChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法称为新<xref:System.IO.Stream>音频源<xref:System.Media.SoundPlayer>已设置。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Media.SoundPlayer.OnStreamChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="P:System.Media.SoundPlayer.Stream" />
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">SoundPlayer 类概述 （Windows 窗体）</related>
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public void Play ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Play() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Play" />
      <MemberSignature Language="VB.NET" Value="Public Sub Play ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Play();" />
      <MemberSignature Language="F#" Value="member this.Play : unit -&gt; unit" Usage="soundPlayer.Play " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用新线程播放 .wav 文件，如果尚未加载 .wav 文件，则先加载该文件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Media.SoundPlayer.Play%2A>方法播放声音使用新线程。 如果调用<xref:System.Media.SoundPlayer.Play%2A>之前开始播放.wav 文件加载到内存之前，将加载.wav 文件。 可以使用<xref:System.Media.SoundPlayer.LoadAsync%2A>或<xref:System.Media.SoundPlayer.Load%2A>方法预先加载到内存的.wav 文件。 从文件已成功加载后.wav<xref:System.IO.Stream>或 URL，将来的播放方法的调用<xref:System.Media.SoundPlayer>无需重新加载.wav 文件，直到声音更改的路径。  
  
 如果尚未指定.wav 文件，或者不会加载，<xref:System.Media.SoundPlayer.Play%2A>方法将播放声音的默认提示音。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Media.SoundPlayer.Play%2A>方法以异步方式播放.wav 文件。 此代码示例是为提供一个更大示例的一部分<xref:System.Media.SoundPlayer>类。  
  
 [!code-cpp[System.Windows.Forms.Sound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#5)]
 [!code-csharp[System.Windows.Forms.Sound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#5)]
 [!code-vb[System.Windows.Forms.Sound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">加载所用的时间超出了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 指定的时间（以毫秒为单位）。</exception>
        <exception cref="T:System.IO.FileNotFoundException">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件。</exception>
        <exception cref="T:System.InvalidOperationException">.wav 标头已损坏；由 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件不是 PCM .wav 文件。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">用于读取文件。 关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">用于访问本机代码。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="M:System.Media.SoundPlayer.PlayLooping" />
        <altmember cref="M:System.Media.SoundPlayer.PlaySync" />
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">SoundPlayer 类概述 （Windows 窗体）</related>
      </Docs>
    </Member>
    <Member MemberName="PlayLooping">
      <MemberSignature Language="C#" Value="public void PlayLooping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlayLooping() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.PlayLooping" />
      <MemberSignature Language="VB.NET" Value="Public Sub PlayLooping ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PlayLooping();" />
      <MemberSignature Language="F#" Value="member this.PlayLooping : unit -&gt; unit" Usage="soundPlayer.PlayLooping " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用新线程循环播放 .wav 文件，如果尚未加载 .wav 文件，则先加载该文件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Media.SoundPlayer.PlayLooping%2A>方法播放和循环使用新线程的声音。 如果调用<xref:System.Media.SoundPlayer.PlayLooping%2A>之前开始播放.wav 文件加载到内存之前，将加载.wav 文件。 可以使用<xref:System.Media.SoundPlayer.LoadAsync%2A>或<xref:System.Media.SoundPlayer.Load%2A>方法预先加载到内存的.wav 文件。 从文件已成功加载后.wav<xref:System.IO.Stream>或 URL，将来的播放方法的调用<xref:System.Media.SoundPlayer>无需重新加载.wav 文件，直到声音更改的路径。  
  
 如果尚未指定.wav 文件，或者不会加载，<xref:System.Media.SoundPlayer.PlayLooping%2A>方法将播放声音的默认提示音。  
  
 有关详细信息<xref:System.Media.SoundPlayer.PlayLooping%2A>，请参阅[如何： 循环声音播放 Windows 窗体上](~/docs/framework/winforms/controls/how-to-loop-a-sound-playing-on-a-windows-form.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Media.SoundPlayer.PlayLooping%2A>方法重复播放.wav 文件。 之前，都将播放.wav<xref:System.Media.SoundPlayer.Stop%2A>调用方法。 此代码示例是为提供一个更大示例的一部分<xref:System.Media.SoundPlayer>类。  
  
 [!code-cpp[System.Windows.Forms.Sound#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#6)]
 [!code-csharp[System.Windows.Forms.Sound#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#6)]
 [!code-vb[System.Windows.Forms.Sound#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">加载所用的时间超出了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 指定的时间（以毫秒为单位）。</exception>
        <exception cref="T:System.IO.FileNotFoundException">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件。</exception>
        <exception cref="T:System.InvalidOperationException">.wav 标头已损坏；由 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件不是 PCM .wav 文件。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">用于读取文件。 关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">用于访问本机代码。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="M:System.Media.SoundPlayer.Play" />
        <altmember cref="M:System.Media.SoundPlayer.PlaySync" />
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">SoundPlayer 类概述 （Windows 窗体）</related>
      </Docs>
    </Member>
    <Member MemberName="PlaySync">
      <MemberSignature Language="C#" Value="public void PlaySync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlaySync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.PlaySync" />
      <MemberSignature Language="VB.NET" Value="Public Sub PlaySync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PlaySync();" />
      <MemberSignature Language="F#" Value="member this.PlaySync : unit -&gt; unit" Usage="soundPlayer.PlaySync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>播放 .wav 文件，如果尚未加载 .wav 文件，则先加载该文件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Media.SoundPlayer.PlaySync%2A>方法使用当前线程播放.wav 文件，防止线程处理其他消息，直到完成负载。 可以使用<xref:System.Media.SoundPlayer.LoadAsync%2A>或<xref:System.Media.SoundPlayer.Load%2A>方法预先加载到内存的.wav 文件。 从文件已成功加载后.wav<xref:System.IO.Stream>或 URL，将来的播放方法的调用<xref:System.Media.SoundPlayer>无需重新加载.wav 文件，直到声音更改的路径。  
  
 如果尚未指定.wav 文件，或者不会加载，<xref:System.Media.SoundPlayer.PlaySync%2A>方法将播放声音的默认提示音。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Media.SoundPlayer.PlaySync%2A>方法以同步方式播放.wav 文件。  
  
 [!code-cpp[System.Windows.Forms.PlaySync#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/CPP/system.windows.forms.sound.playasync.cpp#1)]
 [!code-csharp[System.Windows.Forms.PlaySync#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/CS/system.windows.forms.sound.playasync.cs#1)]
 [!code-vb[System.Windows.Forms.PlaySync#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/VB/system.windows.forms.sound.playasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">加载所用的时间超出了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 指定的时间（以毫秒为单位）。</exception>
        <exception cref="T:System.IO.FileNotFoundException">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件。</exception>
        <exception cref="T:System.InvalidOperationException">.wav 标头已损坏；由 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件不是 PCM .wav 文件。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">用于读取文件。 关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">用于访问本机代码。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="M:System.Media.SoundPlayer.Play" />
        <altmember cref="M:System.Media.SoundPlayer.PlayLooping" />
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">SoundPlayer 类概述 （Windows 窗体）</related>
      </Docs>
    </Member>
    <Member MemberName="SoundLocation">
      <MemberSignature Language="C#" Value="public string SoundLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SoundLocation" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.SoundLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property SoundLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SoundLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SoundLocation : string with get, set" Usage="System.Media.SoundPlayer.SoundLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要加载的 .wav 文件的文件路径或 URL。</summary>
        <value>从中加载 .wav 文件的文件路径或 URL，如果不存在文件路径，则为 <see cref="F:System.String.Empty" />。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性设置为<xref:System.String.Empty?displayProperty=nameWithType>时<xref:System.Media.SoundPlayer.Stream%2A>属性设置为<xref:System.IO.Stream>。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Media.SoundPlayer.SoundLocation%2A>要分配给实例的.wav 文件源属性<xref:System.Media.SoundPlayer>类。 此代码示例是为提供一个更大示例的一部分<xref:System.Media.SoundPlayer>类。  
  
 [!code-cpp[System.Windows.Forms.Sound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#2)]
 [!code-csharp[System.Windows.Forms.Sound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#2)]
 [!code-vb[System.Windows.Forms.Sound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">用于查找文件。 关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">SoundPlayer 类概述 （Windows 窗体）</related>
      </Docs>
    </Member>
    <Member MemberName="SoundLocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SoundLocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SoundLocationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.SoundLocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SoundLocationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SoundLocationChanged;" />
      <MemberSignature Language="F#" Value="member this.SoundLocationChanged : EventHandler " Usage="member this.SoundLocationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当已设置此 <see cref="T:System.Media.SoundPlayer" /> 的新音频源路径时出现。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将引发此事件的新音频源路径时此<xref:System.Media.SoundPlayer>已设置。  
  
 有关如何处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A>事件处理程序以接收通知时<xref:System.Media.SoundPlayer>已附加到不同的.wav 文件。 此代码示例是为提供一个更大示例的一部分<xref:System.Media.SoundPlayer>类。  
  
 [!code-cpp[System.Windows.Forms.Sound#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#9)]
 [!code-csharp[System.Windows.Forms.Sound#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#9)]
 [!code-vb[System.Windows.Forms.Sound#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">SoundPlayer 类概述 （Windows 窗体）</related>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="soundPlayer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果播放正在进行，则停止播放声音。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何将<xref:System.Media.SoundPlayer.Stop%2A>方法来暂停当前播放.wav 文件。 此代码示例是为提供一个更大示例的一部分<xref:System.Media.SoundPlayer>类。  
  
 [!code-cpp[System.Windows.Forms.Sound#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#7)]
 [!code-csharp[System.Windows.Forms.Sound#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#7)]
 [!code-vb[System.Windows.Forms.Sound#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">用于访问本机代码。 关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">SoundPlayer 类概述 （Windows 窗体）</related>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="public System.IO.Stream Stream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Stream" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.Stream" />
      <MemberSignature Language="VB.NET" Value="Public Property Stream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Stream { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Stream : System.IO.Stream with get, set" Usage="System.Media.SoundPlayer.Stream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置从中加载 .wav 文件的 <see cref="T:System.IO.Stream" />。</summary>
        <value>从中加载 .wav 文件的 <see cref="T:System.IO.Stream" />，如果没有可用的流，则为 <see langword="null" />。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性设置为`null`时<xref:System.Media.SoundPlayer.SoundLocation%2A>属性设置为新的和有效的合理位置。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">SoundPlayer 类概述 （Windows 窗体）</related>
      </Docs>
    </Member>
    <Member MemberName="StreamChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StreamChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StreamChanged" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.StreamChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StreamChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StreamChanged;" />
      <MemberSignature Language="F#" Value="member this.StreamChanged : EventHandler " Usage="member this.StreamChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当已设置此 <see cref="T:System.IO.Stream" /> 的新 <see cref="T:System.Media.SoundPlayer" /> 音频源时出现。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当新时，将引发此事件<xref:System.IO.Stream>音频源<xref:System.Media.SoundPlayer>已设置。  
  
 有关如何处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fcebb938-62b9-4677-9cbe-6465bc863e22">SoundPlayer 类概述 （Windows 窗体）</related>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
        <param name="context">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</param>
        <summary>有关此成员的说明，请参见 <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Media.SoundPlayer> 实例强制转换为 <xref:System.Runtime.Serialization.ISerializable> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Media.SoundPlayer.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置包含有关 <see cref="T:System.Object" /> 的数据的 <see cref="T:System.Media.SoundPlayer" />。</summary>
        <value>一个 <see cref="T:System.Object" />，包含有关 <see cref="T:System.Media.SoundPlayer" /> 的数据。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>