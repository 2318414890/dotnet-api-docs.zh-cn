<Type Name="SoundPlayer" FullName="System.Media.SoundPlayer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f5689175ce146f944da27f7a96708300c1e9a48" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SoundPlayer : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable SoundPlayer extends System.ComponentModel.Component implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Media.SoundPlayer" />
  <TypeSignature Language="VB.NET" Value="Public Class SoundPlayer&#xA;Inherits Component&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoundPlayer : System::ComponentModel::Component, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6ec49-101">控制 .wav 文件中的声音播放。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6ec49-101">Controls playback of a sound from a .wav file.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ec49-102"><xref:System.Media.SoundPlayer>类提供一个简单的界面，用于加载和播放.wav 文件。</span><span class="sxs-lookup"><span data-stu-id="6ec49-102">The <xref:System.Media.SoundPlayer> class provides a simple interface for loading and playing a .wav file.</span></span> <span data-ttu-id="6ec49-103"><xref:System.Media.SoundPlayer>类支持在从文件路径，一个 URL，加载.wav 文件<xref:System.IO.Stream>包含.wav 文件或嵌入的资源包含.wav 文件。</span><span class="sxs-lookup"><span data-stu-id="6ec49-103">The <xref:System.Media.SoundPlayer> class supports loading a .wav file from a file path, a URL, a <xref:System.IO.Stream> that contains a .wav file, or an embedded resource that contains a .wav file.</span></span>  
  
 <span data-ttu-id="6ec49-104">若要播放声音 using<xref:System.Media.SoundPlayer>类中，配置<xref:System.Media.SoundPlayer>使用.wav 文件和一个 play 方法的调用路径。</span><span class="sxs-lookup"><span data-stu-id="6ec49-104">To play a sound using the <xref:System.Media.SoundPlayer> class, configure a <xref:System.Media.SoundPlayer> with a path to the .wav file and call one of the play methods.</span></span> <span data-ttu-id="6ec49-105">你可以标识要播放使用的构造函数之一，或设置的.wav 文件<xref:System.Media.SoundPlayer.SoundLocation%2A>或<xref:System.Media.SoundPlayer.Stream%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6ec49-105">You can identify the .wav file to play by using one of the constructors or by setting either the <xref:System.Media.SoundPlayer.SoundLocation%2A> or <xref:System.Media.SoundPlayer.Stream%2A> property.</span></span> <span data-ttu-id="6ec49-106">可以通过使用一种负载方法中，播放之前加载的文件或调用其中一个 play 方法之前，可以延迟加载。</span><span class="sxs-lookup"><span data-stu-id="6ec49-106">The file can be loaded prior to playing by using one of the load methods, or loading can be deferred until one of the play methods is called.</span></span> <span data-ttu-id="6ec49-107">A<xref:System.Media.SoundPlayer>配置为从.wav 文件加载<xref:System.IO.Stream>或播放开始之前 URL 必须将.wav 文件加载到内存。</span><span class="sxs-lookup"><span data-stu-id="6ec49-107">A <xref:System.Media.SoundPlayer> configured to load a .wav file from a <xref:System.IO.Stream> or URL must load the .wav file into memory before playback begins.</span></span>  
  
 <span data-ttu-id="6ec49-108">你可以加载或同步或异步播放.wav 文件。</span><span class="sxs-lookup"><span data-stu-id="6ec49-108">You can load or play a .wav file synchronously or asynchronously.</span></span> <span data-ttu-id="6ec49-109">如果你调用同步负载或播放方法，调用线程将等到方法返回时，这可能导致中断的绘制和其他事件。</span><span class="sxs-lookup"><span data-stu-id="6ec49-109">If you call a synchronous load or play method, the calling thread will wait until the method returns, which may cause painting and other events to be interrupted.</span></span> <span data-ttu-id="6ec49-110">调用异步加载或 play 方法将允许调用线程继续而不会中断。</span><span class="sxs-lookup"><span data-stu-id="6ec49-110">Calling an asynchronous load or play method will allow the calling thread to continue without interruption.</span></span> <span data-ttu-id="6ec49-111">有关异步方法调用的详细信息，请参阅[如何： 在后台运行操作](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)。</span><span class="sxs-lookup"><span data-stu-id="6ec49-111">For more information on asynchronous method calls, see [How to: Run an Operation in the Background](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md).</span></span>  
  
 <span data-ttu-id="6ec49-112">当<xref:System.Media.SoundPlayer>已完成加载.wav 文件，它会发出<xref:System.Media.SoundPlayer.LoadCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="6ec49-112">When a <xref:System.Media.SoundPlayer> has finished loading a .wav file, it raises the <xref:System.Media.SoundPlayer.LoadCompleted> event.</span></span> <span data-ttu-id="6ec49-113">你可以检查<xref:System.ComponentModel.AsyncCompletedEventArgs>中事件处理程序，以确定加载是成功还是失败。</span><span class="sxs-lookup"><span data-stu-id="6ec49-113">You can examine the <xref:System.ComponentModel.AsyncCompletedEventArgs> in your event handler to determine if the load succeeded or failed.</span></span> <span data-ttu-id="6ec49-114"><xref:System.Media.SoundPlayer.SoundLocationChanged>音频源设置为新文件路径或 URL 时引发事件。</span><span class="sxs-lookup"><span data-stu-id="6ec49-114">The <xref:System.Media.SoundPlayer.SoundLocationChanged> event is raised when the audio source is set to a new file path or URL.</span></span> <span data-ttu-id="6ec49-115"><xref:System.Media.SoundPlayer.StreamChanged>音频源设置为一个新时将引发事件<xref:System.IO.Stream>。</span><span class="sxs-lookup"><span data-stu-id="6ec49-115">The <xref:System.Media.SoundPlayer.StreamChanged> event is raised when the audio source is set to a new <xref:System.IO.Stream>.</span></span> <span data-ttu-id="6ec49-116">有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="6ec49-116">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="6ec49-117">有关详细信息<xref:System.Media.SoundPlayer>，请参阅[SoundPlayer 类概述](~/docs/framework/winforms/controls/soundplayer-class-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="6ec49-117">For more information about <xref:System.Media.SoundPlayer>, see [SoundPlayer Class Overview](~/docs/framework/winforms/controls/soundplayer-class-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6ec49-118"><xref:System.Media.SoundPlayer>类无法播放其他文件类型，例如.wma 或.mp3。</span><span class="sxs-lookup"><span data-stu-id="6ec49-118">The <xref:System.Media.SoundPlayer> class cannot play other file types, such as .wma or .mp3.</span></span> <span data-ttu-id="6ec49-119">如果你想要播放其他文件类型，你可以使用 Windows Media Player 控件。</span><span class="sxs-lookup"><span data-stu-id="6ec49-119">If you want to play other file types, you can use the Windows Media Player control.</span></span> <span data-ttu-id="6ec49-120">有关详细信息，请参阅[在.NET Framework 解决方案中使用 Windows 媒体播放器控件](http://go.microsoft.com/fwlink/?LinkId=131267)和[对于 Visual Basic.NET 和 C# 的 Windows Media Player 对象模型参考](http://go.microsoft.com/fwlink/?LinkId=131269)Windows 媒体播放器 SDK 中.</span><span class="sxs-lookup"><span data-stu-id="6ec49-120">For more information, see [Using the Windows Media Player Control in a .NET Framework Solution](http://go.microsoft.com/fwlink/?LinkId=131267) and [Windows Media Player Object Model Reference for Visual Basic .NET and C#](http://go.microsoft.com/fwlink/?LinkId=131269) in the Windows Media Player SDK.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ec49-121">下面的代码示例演示如何将<xref:System.Media.SoundPlayer>播放.wav 文件从本地路径或统一资源标识符 (URI) 的类。</span><span class="sxs-lookup"><span data-stu-id="6ec49-121">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer> class for playing .wav files from a local path or a Uniform Resource Identifier (URI).</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#1)]
 [!code-csharp[System.Windows.Forms.Sound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#1)]
 [!code-vb[System.Windows.Forms.Sound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Media.SystemSounds" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6ec49-122">初始化 <see cref="T:System.Media.SoundPlayer" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-122">Initializes a new instance of the <see cref="T:System.Media.SoundPlayer" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6ec49-123">初始化 <see cref="T:System.Media.SoundPlayer" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-123">Initializes a new instance of the <see cref="T:System.Media.SoundPlayer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ec49-124">此构造函数初始化<xref:System.Media.SoundPlayer>不带音频源。</span><span class="sxs-lookup"><span data-stu-id="6ec49-124">This constructor initializes a <xref:System.Media.SoundPlayer> with no audio source.</span></span> <span data-ttu-id="6ec49-125">它使用音频源路径，配置之前<xref:System.Media.SoundPlayer>将播放提示音调用其播放方法之一时。</span><span class="sxs-lookup"><span data-stu-id="6ec49-125">Until it is configured with an audio source path, the <xref:System.Media.SoundPlayer> will play a beep sound when one of its playback methods is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="6ec49-126">.wav 文件的 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-126">A <see cref="T:System.IO.Stream" /> to a .wav file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ec49-127">初始化 <see cref="T:System.Media.SoundPlayer" /> 类的新实例，并在指定的 <see cref="T:System.IO.Stream" /> 内附加 .wav 文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-127">Initializes a new instance of the <see cref="T:System.Media.SoundPlayer" /> class, and attaches the .wav file within the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ec49-128"><xref:System.IO.Stream>传递给`stream`参数应为<xref:System.IO.Stream>包含.wav 文件。</span><span class="sxs-lookup"><span data-stu-id="6ec49-128">The <xref:System.IO.Stream> passed to the `stream` parameter should be a <xref:System.IO.Stream> containing a .wav file.</span></span> <span data-ttu-id="6ec49-129">返回的数据<xref:System.IO.Stream.Read%2A>方法<xref:System.IO.Stream>应为.wav 文件内的数据。</span><span class="sxs-lookup"><span data-stu-id="6ec49-129">The data returned by the <xref:System.IO.Stream.Read%2A> method of the <xref:System.IO.Stream> should be the data within a .wav file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer (string soundLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string soundLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (soundLocation As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer(System::String ^ soundLocation);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="soundLocation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="soundLocation">
          <span data-ttu-id="6ec49-130">要加载的 .wav 文件的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-130">The location of a .wav file to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ec49-131">初始化 <see cref="T:System.Media.SoundPlayer" /> 类的新实例，并附加指定的 .wav 文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-131">Initializes a new instance of the <see cref="T:System.Media.SoundPlayer" /> class, and attaches the specified .wav file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ec49-132">将字符串传递到`soundLocation`参数可以是文件路径或.wav 文件的 URL。</span><span class="sxs-lookup"><span data-stu-id="6ec49-132">The string passed to the `soundLocation` parameter can be either a file path or a URL to a .wav file.</span></span> <span data-ttu-id="6ec49-133">如果路径或 URL 无效，<xref:System.Media.SoundPlayer>仍将向负载的构造，但后续调用或 play 方法将失败。</span><span class="sxs-lookup"><span data-stu-id="6ec49-133">If the path or URL is not valid, the <xref:System.Media.SoundPlayer> will still be constructed, but subsequent calls to a load or play method will fail.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="6ec49-134">无法解析由 <paramref name="soundLocation" /> 指定的 URL 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-134">The URL value specified by <paramref name="soundLocation" /> cannot be resolved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoundPlayer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoundPlayer(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <span data-ttu-id="6ec49-135">要用于反序列化的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-135">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to be used for deserialization.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="6ec49-136">用于反序列化的目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-136">The destination to be used for deserialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ec49-137">初始化 <see cref="T:System.Media.SoundPlayer" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-137">Initializes a new instance of the <see cref="T:System.Media.SoundPlayer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="6ec49-138">无法解析 <paramref name="serializationInfo" /> 中指定的 <see cref="P:System.Media.SoundPlayer.SoundLocation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-138">The <see cref="P:System.Media.SoundPlayer.SoundLocation" /> specified in <paramref name="serializationInfo" /> cannot be resolved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsLoadCompleted">
      <MemberSignature Language="C#" Value="public bool IsLoadCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoadCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.IsLoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoadCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoadCompleted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ec49-139">获取一个值，该值指示 .wav 文件的加载是否已经成功完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-139">Gets a value indicating whether loading of a .wav file has successfully completed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6ec49-140">如果加载了 .wav 文件，则为 <see langword="true" />，如果还没有加载 .wav 文件，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-140">
              <see langword="true" /> if a .wav file is loaded; <see langword="false" /> if a .wav file has not yet been loaded.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6ec49-141">同步加载声音。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-141">Loads a sound synchronously.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ec49-142"><xref:System.Media.SoundPlayer.Load%2A>方法使用当前线程来加载.wav 文件，防止线程处理其他消息，直到负载已完成。</span><span class="sxs-lookup"><span data-stu-id="6ec49-142">The <xref:System.Media.SoundPlayer.Load%2A> method uses the current thread to load a .wav file, preventing the thread from handling other messages until the load is complete.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="6ec49-143"><xref:System.Media.SoundPlayer.Load%2A>方法加载大型.wav 文件时可能产生延迟。</span><span class="sxs-lookup"><span data-stu-id="6ec49-143">The <xref:System.Media.SoundPlayer.Load%2A> method may produce a delay while loading a large .wav file.</span></span> <span data-ttu-id="6ec49-144">此外，将阻止绘制和其他事件，直到完成的负载。</span><span class="sxs-lookup"><span data-stu-id="6ec49-144">In addition, painting and other events will be blocked until the load is completed.</span></span> <span data-ttu-id="6ec49-145">使用<xref:System.Media.SoundPlayer.LoadAsync%2A>方法异步加载声音这样调用线程继续而不会中断。</span><span class="sxs-lookup"><span data-stu-id="6ec49-145">Use the <xref:System.Media.SoundPlayer.LoadAsync%2A> method to load a sound asynchronously, which allows the calling thread to continue without interruption.</span></span>  
  
 <span data-ttu-id="6ec49-146">此方法将引发<xref:System.Media.SoundPlayer.LoadCompleted>事件在加载时完成，即使负载不成功。</span><span class="sxs-lookup"><span data-stu-id="6ec49-146">This method raises the <xref:System.Media.SoundPlayer.LoadCompleted> event when loading completes, even if the load was not successful.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ec49-147">下面的代码示例演示如何将<xref:System.Media.SoundPlayer.LoadAsync%2A>方法将.wav 文件附加到的实例<xref:System.Media.SoundPlayer>类。</span><span class="sxs-lookup"><span data-stu-id="6ec49-147">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.LoadAsync%2A> method to attach a .wav file to an instance of the <xref:System.Media.SoundPlayer> class.</span></span> <span data-ttu-id="6ec49-148">此代码示例摘自更大的示例为提供<xref:System.Media.SoundPlayer>类。</span><span class="sxs-lookup"><span data-stu-id="6ec49-148">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#2)]
 [!code-csharp[System.Windows.Forms.Sound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#2)]
 [!code-vb[System.Windows.Forms.Sound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">
          <span data-ttu-id="6ec49-149">加载所用的时间超出了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 指定的时间（以毫秒为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-149">The elapsed time during loading exceeds the time, in milliseconds, specified by <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="6ec49-150">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-150">The file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> cannot be found.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="6ec49-151">用于对 HTTP Internet 资源的访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-151">for access to HTTP Internet resources.</span>
          </span>
          <span data-ttu-id="6ec49-152">关联的枚举： <see cref="F:System.Net.NetworkAccess.Connect" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-152">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Connect" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Media.SoundPlayer.LoadAsync" />
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public void LoadAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.LoadAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6ec49-153">使用新线程从流或 Web 资源中加载 .wav 文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-153">Loads a .wav file from a stream or a Web resource using a new thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ec49-154">如果<xref:System.Media.SoundPlayer>配置为从.wav 文件加载<xref:System.IO.Stream>或 Web 资源，此方法可开始从使用新线程的位置加载.wav 文件。</span><span class="sxs-lookup"><span data-stu-id="6ec49-154">If a <xref:System.Media.SoundPlayer> is configured to load a .wav file from a <xref:System.IO.Stream> or Web resource, this method begins loading a .wav file from the location using a new thread.</span></span>  
  
 <span data-ttu-id="6ec49-155">此方法将引发<xref:System.Media.SoundPlayer.LoadCompleted>事件在加载时完成，即使负载不成功。</span><span class="sxs-lookup"><span data-stu-id="6ec49-155">This method raises the <xref:System.Media.SoundPlayer.LoadCompleted> event when loading completes, even if the load was not successful.</span></span>  
  
 <span data-ttu-id="6ec49-156">如果<xref:System.Media.SoundPlayer>配置从本地文件路径加载.wav 文件，此方法不执行任何操作，因为加载推迟到播放开始。</span><span class="sxs-lookup"><span data-stu-id="6ec49-156">If a <xref:System.Media.SoundPlayer> is configured to load a .wav file from a local file path, this method does nothing, because loading is deferred until playing begins.</span></span>  
  
 <span data-ttu-id="6ec49-157">有关异步加载的详细信息，请参阅[How to: 声音以异步方式加载在 Windows 窗体](~/docs/framework/winforms/controls/how-to-load-a-sound-asynchronously-within-a-windows-form.md)。</span><span class="sxs-lookup"><span data-stu-id="6ec49-157">For more information about asynchronous loading, see [How to: Load a Sound Asynchronously within a Windows Form](~/docs/framework/winforms/controls/how-to-load-a-sound-asynchronously-within-a-windows-form.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ec49-158">下面的代码示例演示如何将<xref:System.Media.SoundPlayer.LoadAsync%2A>方法来以异步方式加载的实例使用的.wav 文件<xref:System.Media.SoundPlayer>类。</span><span class="sxs-lookup"><span data-stu-id="6ec49-158">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.LoadAsync%2A> method to asynchronously load a .wav file for use by an instance of the <xref:System.Media.SoundPlayer> class.</span></span> <span data-ttu-id="6ec49-159">此代码示例摘自更大的示例为提供<xref:System.Media.SoundPlayer>类。</span><span class="sxs-lookup"><span data-stu-id="6ec49-159">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#3)]
 [!code-csharp[System.Windows.Forms.Sound#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#3)]
 [!code-vb[System.Windows.Forms.Sound#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">
          <span data-ttu-id="6ec49-160">加载所用的时间超出了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 指定的时间（以毫秒为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-160">The elapsed time during loading exceeds the time, in milliseconds, specified by <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="6ec49-161">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-161">The file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> cannot be found.</span>
          </span>
        </exception>
        <altmember cref="M:System.Media.SoundPlayer.Load" />
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ LoadCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ec49-162">当成功或未成功加载 .wav 文件时出现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-162">Occurs when a .wav file has been successfully or unsuccessfully loaded.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ec49-163">.Wav 文件的加载完毕后，将引发此事件。</span><span class="sxs-lookup"><span data-stu-id="6ec49-163">This event is raised when loading of a .wav file is complete.</span></span> <span data-ttu-id="6ec49-164">事件自变量表示声音的负载是否已成功完成或失败。</span><span class="sxs-lookup"><span data-stu-id="6ec49-164">The event arguments indicate whether the load of the sound was completed successfully or failed.</span></span>  
  
 <span data-ttu-id="6ec49-165">有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="6ec49-165">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ec49-166">下面的代码示例演示如何将<xref:System.Media.SoundPlayer.OnLoadCompleted%2A>事件处理程序接收通知，指示已加载.wav 文件的内容。</span><span class="sxs-lookup"><span data-stu-id="6ec49-166">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> event handler to receive a notification indicating that the contents of a .wav file have been loaded.</span></span> <span data-ttu-id="6ec49-167">此代码示例摘自更大的示例为提供<xref:System.Media.SoundPlayer>类。</span><span class="sxs-lookup"><span data-stu-id="6ec49-167">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#8)]
 [!code-csharp[System.Windows.Forms.Sound#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#8)]
 [!code-vb[System.Windows.Forms.Sound#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="LoadTimeout">
      <MemberSignature Language="C#" Value="public int LoadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LoadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.LoadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LoadTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ec49-168">获取或设置 .wav 文件的加载必须完成的时间（以毫秒为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-168">Gets or sets the time, in milliseconds, in which the .wav file must load.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6ec49-169">要等待的毫秒数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-169">The number of milliseconds to wait.</span>
          </span>
          <span data-ttu-id="6ec49-170">默认值为 10000（10 秒）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-170">The default is 10000 (10 seconds).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ec49-171">此时间已过期后，取消加载和<xref:System.ServiceProcess.TimeoutException>引发异常。</span><span class="sxs-lookup"><span data-stu-id="6ec49-171">After this time has expired, the loading is canceled and a <xref:System.ServiceProcess.TimeoutException> exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoadCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnLoadCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoadCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoadCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoadCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6ec49-172">包含事件数据的 <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-172">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ec49-173">引发 <see cref="E:System.Media.SoundPlayer.LoadCompleted" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-173">Raises the <see cref="E:System.Media.SoundPlayer.LoadCompleted" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ec49-174">.Wav 文件的加载完毕后，调用此方法。</span><span class="sxs-lookup"><span data-stu-id="6ec49-174">This method is called when loading of a .wav file is complete.</span></span>  
  
 <span data-ttu-id="6ec49-175">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="6ec49-175">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="6ec49-176">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="6ec49-176">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="6ec49-177"><xref:System.Media.SoundPlayer.OnLoadCompleted%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="6ec49-177">The <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="6ec49-178">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="6ec49-178">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6ec49-179">在派生类中重写 <see cref="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ec49-179">When overriding <see cref="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
      </Docs>
    </Member>
    <Member MemberName="OnSoundLocationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSoundLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSoundLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSoundLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSoundLocationChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6ec49-180">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-180">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ec49-181">引发 <see cref="E:System.Media.SoundPlayer.SoundLocationChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-181">Raises the <see cref="E:System.Media.SoundPlayer.SoundLocationChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ec49-182">此方法调用新的音频源路径时此<xref:System.Media.SoundPlayer>已设置。</span><span class="sxs-lookup"><span data-stu-id="6ec49-182">This method is called when a new audio source path for this <xref:System.Media.SoundPlayer> has been set.</span></span>  
  
 <span data-ttu-id="6ec49-183">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="6ec49-183">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="6ec49-184">有关详细信息，请参阅如何： 提供的事件功能和[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="6ec49-184">For more information, see How to: Provide Event functionality and [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="6ec49-185"><xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="6ec49-185">The <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="6ec49-186">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="6ec49-186">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6ec49-187">在派生类中重写 <see cref="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ec49-187">When overriding <see cref="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Media.SoundPlayer.SoundLocation" />
      </Docs>
    </Member>
    <Member MemberName="OnStreamChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStreamChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStreamChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStreamChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStreamChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6ec49-188">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-188">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ec49-189">引发 <see cref="E:System.Media.SoundPlayer.StreamChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-189">Raises the <see cref="E:System.Media.SoundPlayer.StreamChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ec49-190">此方法称为新<xref:System.IO.Stream>音频源<xref:System.Media.SoundPlayer>已设置。</span><span class="sxs-lookup"><span data-stu-id="6ec49-190">This method is called when a new <xref:System.IO.Stream> audio source for this <xref:System.Media.SoundPlayer> has been set.</span></span>  
  
 <span data-ttu-id="6ec49-191">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="6ec49-191">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="6ec49-192">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="6ec49-192">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="6ec49-193"><xref:System.Media.SoundPlayer.OnStreamChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="6ec49-193">The <xref:System.Media.SoundPlayer.OnStreamChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="6ec49-194">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="6ec49-194">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6ec49-195">在派生类中重写 <see cref="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ec49-195">When overriding <see cref="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Media.SoundPlayer.Stream" />
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public void Play ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Play() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Play" />
      <MemberSignature Language="VB.NET" Value="Public Sub Play ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Play();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6ec49-196">使用新线程播放 .wav 文件，如果尚未加载 .wav 文件，则先加载该文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-196">Plays the .wav file using a new thread, and loads the .wav file first if it has not been loaded.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ec49-197"><xref:System.Media.SoundPlayer.Play%2A>方法播放声音使用新线程。</span><span class="sxs-lookup"><span data-stu-id="6ec49-197">The <xref:System.Media.SoundPlayer.Play%2A> method plays the sound using a new thread.</span></span> <span data-ttu-id="6ec49-198">如果调用<xref:System.Media.SoundPlayer.Play%2A>之前开始播放.wav 文件载入内存之前，将加载.wav 文件。</span><span class="sxs-lookup"><span data-stu-id="6ec49-198">If you call <xref:System.Media.SoundPlayer.Play%2A> before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts.</span></span> <span data-ttu-id="6ec49-199">你可以使用<xref:System.Media.SoundPlayer.LoadAsync%2A>或<xref:System.Media.SoundPlayer.Load%2A>预先加载到内存.wav 文件的方法。</span><span class="sxs-lookup"><span data-stu-id="6ec49-199">You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance.</span></span> <span data-ttu-id="6ec49-200">从文件成功加载后.wav<xref:System.IO.Stream>或 URL，将来的播放方法的调用<xref:System.Media.SoundPlayer>不需要重新.wav 文件加载之前声音更改的路径。</span><span class="sxs-lookup"><span data-stu-id="6ec49-200">After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes.</span></span>  
  
 <span data-ttu-id="6ec49-201">如果尚未指定.wav 文件或它无法加载，<xref:System.Media.SoundPlayer.Play%2A>方法将播放声音的默认提示音。</span><span class="sxs-lookup"><span data-stu-id="6ec49-201">If the .wav file has not been specified or it fails to load, the <xref:System.Media.SoundPlayer.Play%2A> method will play the default beep sound.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ec49-202">下面的代码示例演示如何将<xref:System.Media.SoundPlayer.Play%2A>方法以异步方式播放.wav 文件。</span><span class="sxs-lookup"><span data-stu-id="6ec49-202">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.Play%2A> method to asynchronously play a .wav file.</span></span> <span data-ttu-id="6ec49-203">此代码示例摘自更大的示例为提供<xref:System.Media.SoundPlayer>类。</span><span class="sxs-lookup"><span data-stu-id="6ec49-203">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#5)]
 [!code-csharp[System.Windows.Forms.Sound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#5)]
 [!code-vb[System.Windows.Forms.Sound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">
          <span data-ttu-id="6ec49-204">加载所用的时间超出了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 指定的时间（以毫秒为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-204">The elapsed time during loading exceeds the time, in milliseconds, specified by <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="6ec49-205">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-205">The file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6ec49-206">.wav 标头已损坏；由 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件不是 PCM .wav 文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-206">The .wav header is corrupted; the file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> is not a PCM .wav file.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="6ec49-207">用于读取文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-207">for reading files.</span>
          </span>
          <span data-ttu-id="6ec49-208">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-208">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="6ec49-209">用于为本机代码的访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-209">for access to native code.</span>
          </span>
          <span data-ttu-id="6ec49-210">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-210">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Media.SoundPlayer.PlayLooping" />
        <altmember cref="M:System.Media.SoundPlayer.PlaySync" />
      </Docs>
    </Member>
    <Member MemberName="PlayLooping">
      <MemberSignature Language="C#" Value="public void PlayLooping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlayLooping() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.PlayLooping" />
      <MemberSignature Language="VB.NET" Value="Public Sub PlayLooping ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PlayLooping();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6ec49-211">使用新线程循环播放 .wav 文件，如果尚未加载 .wav 文件，则先加载该文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-211">Plays and loops the .wav file using a new thread, and loads the .wav file first if it has not been loaded.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ec49-212"><xref:System.Media.SoundPlayer.PlayLooping%2A>方法播放并循环使用新线程的声音。</span><span class="sxs-lookup"><span data-stu-id="6ec49-212">The <xref:System.Media.SoundPlayer.PlayLooping%2A> method plays and loops the sound using a new thread.</span></span> <span data-ttu-id="6ec49-213">如果调用<xref:System.Media.SoundPlayer.PlayLooping%2A>之前开始播放.wav 文件载入内存之前，将加载.wav 文件。</span><span class="sxs-lookup"><span data-stu-id="6ec49-213">If you call <xref:System.Media.SoundPlayer.PlayLooping%2A> before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts.</span></span> <span data-ttu-id="6ec49-214">你可以使用<xref:System.Media.SoundPlayer.LoadAsync%2A>或<xref:System.Media.SoundPlayer.Load%2A>预先加载到内存.wav 文件的方法。</span><span class="sxs-lookup"><span data-stu-id="6ec49-214">You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance.</span></span> <span data-ttu-id="6ec49-215">从文件成功加载后.wav<xref:System.IO.Stream>或 URL，将来的播放方法的调用<xref:System.Media.SoundPlayer>不需要重新.wav 文件加载之前声音更改的路径。</span><span class="sxs-lookup"><span data-stu-id="6ec49-215">After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes.</span></span>  
  
 <span data-ttu-id="6ec49-216">如果尚未指定.wav 文件或它无法加载，<xref:System.Media.SoundPlayer.PlayLooping%2A>方法将播放声音的默认提示音。</span><span class="sxs-lookup"><span data-stu-id="6ec49-216">If the .wav file has not been specified or it fails to load, the <xref:System.Media.SoundPlayer.PlayLooping%2A> method will play the default beep sound.</span></span>  
  
 <span data-ttu-id="6ec49-217">有关详细信息<xref:System.Media.SoundPlayer.PlayLooping%2A>，请参阅[如何： 循环在 Windows 窗体上播放声音](~/docs/framework/winforms/controls/how-to-loop-a-sound-playing-on-a-windows-form.md)。</span><span class="sxs-lookup"><span data-stu-id="6ec49-217">For more information about <xref:System.Media.SoundPlayer.PlayLooping%2A>, see [How to: Loop a Sound Playing on a Windows Form](~/docs/framework/winforms/controls/how-to-loop-a-sound-playing-on-a-windows-form.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ec49-218">下面的代码示例演示如何将<xref:System.Media.SoundPlayer.PlayLooping%2A>方法重复播放.wav 文件。</span><span class="sxs-lookup"><span data-stu-id="6ec49-218">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.PlayLooping%2A> method to repeatedly play a .wav file.</span></span> <span data-ttu-id="6ec49-219">之前，将播放.wav<xref:System.Media.SoundPlayer.Stop%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="6ec49-219">The .wav will be played until the <xref:System.Media.SoundPlayer.Stop%2A> method is called.</span></span> <span data-ttu-id="6ec49-220">此代码示例摘自更大的示例为提供<xref:System.Media.SoundPlayer>类。</span><span class="sxs-lookup"><span data-stu-id="6ec49-220">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#6)]
 [!code-csharp[System.Windows.Forms.Sound#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#6)]
 [!code-vb[System.Windows.Forms.Sound#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">
          <span data-ttu-id="6ec49-221">加载所用的时间超出了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 指定的时间（以毫秒为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-221">The elapsed time during loading exceeds the time, in milliseconds, specified by <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="6ec49-222">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-222">The file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6ec49-223">.wav 标头已损坏；由 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件不是 PCM .wav 文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-223">The .wav header is corrupted; the file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> is not a PCM .wav file.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="6ec49-224">用于读取文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-224">for reading files.</span>
          </span>
          <span data-ttu-id="6ec49-225">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-225">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="6ec49-226">用于为本机代码的访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-226">for access to native code.</span>
          </span>
          <span data-ttu-id="6ec49-227">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-227">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Media.SoundPlayer.Play" />
        <altmember cref="M:System.Media.SoundPlayer.PlaySync" />
      </Docs>
    </Member>
    <Member MemberName="PlaySync">
      <MemberSignature Language="C#" Value="public void PlaySync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlaySync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.PlaySync" />
      <MemberSignature Language="VB.NET" Value="Public Sub PlaySync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PlaySync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6ec49-228">播放 .wav 文件，如果尚未加载 .wav 文件，则先加载该文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-228">Plays the .wav file and loads the .wav file first if it has not been loaded.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ec49-229"><xref:System.Media.SoundPlayer.PlaySync%2A>方法使用当前线程播放.wav 文件，防止线程处理其他消息，直到负载已完成。</span><span class="sxs-lookup"><span data-stu-id="6ec49-229">The <xref:System.Media.SoundPlayer.PlaySync%2A> method uses the current thread to play a .wav file, preventing the thread from handling other messages until the load is complete.</span></span> <span data-ttu-id="6ec49-230">你可以使用<xref:System.Media.SoundPlayer.LoadAsync%2A>或<xref:System.Media.SoundPlayer.Load%2A>预先加载到内存.wav 文件的方法。</span><span class="sxs-lookup"><span data-stu-id="6ec49-230">You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance.</span></span> <span data-ttu-id="6ec49-231">从文件成功加载后.wav<xref:System.IO.Stream>或 URL，将来的播放方法的调用<xref:System.Media.SoundPlayer>不需要重新.wav 文件加载之前声音更改的路径。</span><span class="sxs-lookup"><span data-stu-id="6ec49-231">After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes.</span></span>  
  
 <span data-ttu-id="6ec49-232">如果尚未指定.wav 文件或它无法加载，<xref:System.Media.SoundPlayer.PlaySync%2A>方法将播放声音的默认提示音。</span><span class="sxs-lookup"><span data-stu-id="6ec49-232">If the .wav file has not been specified or it fails to load, the <xref:System.Media.SoundPlayer.PlaySync%2A> method will play the default beep sound.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ec49-233">下面的代码示例演示如何将<xref:System.Media.SoundPlayer.PlaySync%2A>方法以同步方式播放.wav 文件。</span><span class="sxs-lookup"><span data-stu-id="6ec49-233">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.PlaySync%2A> method to synchronously play a .wav file.</span></span>  
  
 [!code-cpp[System.Windows.Forms.PlaySync#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/CPP/system.windows.forms.sound.playasync.cpp#1)]
 [!code-csharp[System.Windows.Forms.PlaySync#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/CS/system.windows.forms.sound.playasync.cs#1)]
 [!code-vb[System.Windows.Forms.PlaySync#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/VB/system.windows.forms.sound.playasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">
          <span data-ttu-id="6ec49-234">加载所用的时间超出了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 指定的时间（以毫秒为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-234">The elapsed time during loading exceeds the time, in milliseconds, specified by <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="6ec49-235">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-235">The file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6ec49-236">.wav 标头已损坏；由 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件不是 PCM .wav 文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-236">The .wav header is corrupted; the file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> is not a PCM .wav file.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="6ec49-237">用于读取文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-237">for reading files.</span>
          </span>
          <span data-ttu-id="6ec49-238">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-238">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="6ec49-239">用于为本机代码的访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-239">for access to native code.</span>
          </span>
          <span data-ttu-id="6ec49-240">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-240">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Media.SoundPlayer.Play" />
        <altmember cref="M:System.Media.SoundPlayer.PlayLooping" />
      </Docs>
    </Member>
    <Member MemberName="SoundLocation">
      <MemberSignature Language="C#" Value="public string SoundLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SoundLocation" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.SoundLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property SoundLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SoundLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ec49-241">获取或设置要加载的 .wav 文件的文件路径或 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-241">Gets or sets the file path or URL of the .wav file to load.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6ec49-242">从中加载 .wav 文件的文件路径或 URL，如果不存在文件路径，则为 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-242">The file path or URL from which to load a .wav file, or <see cref="F:System.String.Empty" /> if no file path is present.</span>
          </span>
          <span data-ttu-id="6ec49-243">默认值为 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-243">The default is <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ec49-244">此属性设置为<xref:System.String.Empty?displayProperty=nameWithType>时<xref:System.Media.SoundPlayer.Stream%2A>属性设置为<xref:System.IO.Stream>。</span><span class="sxs-lookup"><span data-stu-id="6ec49-244">This property is set to <xref:System.String.Empty?displayProperty=nameWithType> when the <xref:System.Media.SoundPlayer.Stream%2A> property is set to a <xref:System.IO.Stream>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ec49-245">下面的代码示例演示如何将<xref:System.Media.SoundPlayer.SoundLocation%2A>要分配给的实例的.wav 文件源属性<xref:System.Media.SoundPlayer>类。</span><span class="sxs-lookup"><span data-stu-id="6ec49-245">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.SoundLocation%2A> property to assign the .wav file source to an instance of the <xref:System.Media.SoundPlayer> class.</span></span> <span data-ttu-id="6ec49-246">此代码示例摘自更大的示例为提供<xref:System.Media.SoundPlayer>类。</span><span class="sxs-lookup"><span data-stu-id="6ec49-246">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#2)]
 [!code-csharp[System.Windows.Forms.Sound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#2)]
 [!code-vb[System.Windows.Forms.Sound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="6ec49-247">用于查找文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-247">for finding files.</span>
          </span>
          <span data-ttu-id="6ec49-248">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-248">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SoundLocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SoundLocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SoundLocationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.SoundLocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SoundLocationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SoundLocationChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ec49-249">当已设置此 <see cref="T:System.Media.SoundPlayer" /> 的新音频源路径时出现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-249">Occurs when a new audio source path for this <see cref="T:System.Media.SoundPlayer" /> has been set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ec49-250">将引发此事件的新的音频源路径时此<xref:System.Media.SoundPlayer>已设置。</span><span class="sxs-lookup"><span data-stu-id="6ec49-250">This event is raised when a new audio source path for this <xref:System.Media.SoundPlayer> has been set.</span></span>  
  
 <span data-ttu-id="6ec49-251">有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="6ec49-251">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ec49-252">下面的代码示例演示如何将<xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A>事件处理程序以接收通知时<xref:System.Media.SoundPlayer>已附加到不同的.wav 文件。</span><span class="sxs-lookup"><span data-stu-id="6ec49-252">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> event handler to receive a notification when the <xref:System.Media.SoundPlayer> has been attached to a different .wav file.</span></span> <span data-ttu-id="6ec49-253">此代码示例摘自更大的示例为提供<xref:System.Media.SoundPlayer>类。</span><span class="sxs-lookup"><span data-stu-id="6ec49-253">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#9)]
 [!code-csharp[System.Windows.Forms.Sound#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#9)]
 [!code-vb[System.Windows.Forms.Sound#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6ec49-254">如果播放正在进行，则停止播放声音。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-254">Stops playback of the sound if playback is occurring.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6ec49-255">下面的代码示例演示如何将<xref:System.Media.SoundPlayer.Stop%2A>方法来暂停当前播放的.wav 文件。</span><span class="sxs-lookup"><span data-stu-id="6ec49-255">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.Stop%2A> method to halt a .wav file that is currently playing.</span></span> <span data-ttu-id="6ec49-256">此代码示例摘自更大的示例为提供<xref:System.Media.SoundPlayer>类。</span><span class="sxs-lookup"><span data-stu-id="6ec49-256">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#7)]
 [!code-csharp[System.Windows.Forms.Sound#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#7)]
 [!code-vb[System.Windows.Forms.Sound#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="6ec49-257">用于为本机代码的访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-257">for access to native code.</span>
          </span>
          <span data-ttu-id="6ec49-258">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-258">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="public System.IO.Stream Stream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Stream" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.Stream" />
      <MemberSignature Language="VB.NET" Value="Public Property Stream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Stream { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ec49-259">获取或设置从中加载 .wav 文件的 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-259">Gets or sets the <see cref="T:System.IO.Stream" /> from which to load the .wav file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6ec49-260">从中加载 .wav 文件的 <see cref="T:System.IO.Stream" />，如果没有可用的流，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-260">A <see cref="T:System.IO.Stream" /> from which to load the .wav file, or <see langword="null" /> if no stream is available.</span>
          </span>
          <span data-ttu-id="6ec49-261">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-261">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ec49-262">此属性设置为`null`时<xref:System.Media.SoundPlayer.SoundLocation%2A>属性设置为新的和有效的声音位置。</span><span class="sxs-lookup"><span data-stu-id="6ec49-262">This property is set to `null` when the <xref:System.Media.SoundPlayer.SoundLocation%2A> property is set to a new and valid sound location.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="StreamChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StreamChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StreamChanged" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.StreamChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StreamChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StreamChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ec49-263">当已设置此 <see cref="T:System.IO.Stream" /> 的新 <see cref="T:System.Media.SoundPlayer" /> 音频源时出现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-263">Occurs when a new <see cref="T:System.IO.Stream" /> audio source for this <see cref="T:System.Media.SoundPlayer" /> has been set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ec49-264">当新时，将引发此事件<xref:System.IO.Stream>音频源<xref:System.Media.SoundPlayer>已设置。</span><span class="sxs-lookup"><span data-stu-id="6ec49-264">This event is raised when a new <xref:System.IO.Stream> audio source for this <xref:System.Media.SoundPlayer> has been set.</span></span>  
  
 <span data-ttu-id="6ec49-265">有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="6ec49-265">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="6ec49-266">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-266">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="6ec49-267">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-267">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ec49-268">有关此成员的说明，请参见 <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-268">For a description of this member, see the <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ec49-269">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6ec49-269">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6ec49-270">它只能在 <xref:System.Media.SoundPlayer> 实例强制转换为 <xref:System.Runtime.Serialization.ISerializable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6ec49-270">It can be used only when the <xref:System.Media.SoundPlayer> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ec49-271">获取或设置包含有关 <see cref="T:System.Object" /> 的数据的 <see cref="T:System.Media.SoundPlayer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-271">Gets or sets the <see cref="T:System.Object" /> that contains data about the <see cref="T:System.Media.SoundPlayer" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6ec49-272">一个 <see cref="T:System.Object" />，包含有关 <see cref="T:System.Media.SoundPlayer" /> 的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ec49-272">An <see cref="T:System.Object" /> that contains data about the <see cref="T:System.Media.SoundPlayer" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>