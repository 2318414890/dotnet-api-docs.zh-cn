<Type Name="ImageSourceTypeConverter" FullName="System.Windows.Xps.Serialization.ImageSourceTypeConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="787cdb73882144fae8a9abbfb5dbdc6367a15c26" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65009235" /></Metadata><TypeSignature Language="C#" Value="public class ImageSourceTypeConverter : System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageSourceTypeConverter extends System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Xps.Serialization.ImageSourceTypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ImageSourceTypeConverter&#xA;Inherits ExpandableObjectConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageSourceTypeConverter : System::ComponentModel::ExpandableObjectConverter" />
  <TypeSignature Language="F#" Value="type ImageSourceTypeConverter = class&#xA;    inherit ExpandableObjectConverter" />
  <AssemblyInfo>
    <AssemblyName>ReachFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ExpandableObjectConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供类型转换器，用于将 <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> 对象与其他类型的对象进行转换。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请参见基类<xref:System.ComponentModel.TypeConverter>和<xref:System.ComponentModel.ExpandableObjectConverter>有关重要用法说明。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageSourceTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageSourceTypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Xps.Serialization.ImageSourceTypeConverter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请参见基类<xref:System.ComponentModel.TypeConverter>和<xref:System.ComponentModel.ExpandableObjectConverter>有关重要用法说明。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="imageSourceTypeConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">提供上下文信息的对象。</param>
        <param name="sourceType">要转换的对象的类型。</param>
        <summary>返回一个值，指示此转换器是否可以转换为指定类型的实例<see cref="T:System.Windows.Media.Imaging.BitmapSource" />。</summary>
        <returns><see langword="true" /> 如果可以转换指定类型的对象;否则为<see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在此类中实现时，此方法返回`true`仅当`sourceType`是<xref:System.Uri>。  
  
 `context`未使用参数。 请参阅**的继承者说明**。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>重写该方法以提供您自己的转换需求。 使用 <paramref name="context" /> 参数提取有关调用此转换器的环境的附加信息。 此参数可以是<see langword="null" />; 因此，始终检查。 同样，<paramref name="context" /> 对象的属性也可能返回空引用 (<see langword="Nothing" />)。</para></block>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="imageSourceTypeConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">提供上下文信息的对象。</param>
        <param name="destinationType">你想要将转换为的对象的类型<see cref="T:System.Windows.Media.Imaging.BitmapSource" />。</param>
        <summary>返回一个值，该值指示是否这<see cref="T:System.Windows.Xps.Serialization.ImageSourceTypeConverter" />可转换<see cref="T:System.Windows.Media.Imaging.BitmapSource" />到指定类型的实例。</summary>
        <returns><see langword="true" /> 如果可以转换;否则为<see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在此类中实现时，此方法返回`true`仅当`destinationType`是<xref:System.Uri>。  
  
 `context`未使用参数。 请参阅**的继承者说明**。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>重写该方法以提供您自己的转换需求。 使用 <paramref name="context" /> 参数提取有关调用此转换器的环境的附加信息。 此参数可以是<see langword="null" />; 因此，始终检查。 同样，<paramref name="context" /> 对象的属性也可能返回空引用 (<see langword="Nothing" />)。</para></block>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="imageSourceTypeConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">提供上下文信息的对象。</param>
        <param name="culture">语言和区域性在转换过程中使用。</param>
        <param name="value">转换的对象。</param>
        <summary>指定将对象转换为<see cref="T:System.Windows.Media.Imaging.BitmapSource" />。</summary>
        <returns>新的 <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法未实现此类-但会引发异常中。 请参阅**的继承者说明**。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">此类，而不是从派生类中调用此方法。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="value" />不是可以转换的类型。</exception>
        <block subset="none" type="overrides"><para>重写此方法以提供转换方法。 使用 <paramref name="context" /> 参数提取有关调用此转换器的环境的附加信息。 使用<paramref name="culture" />参数来提供的语言的区域性信息。</para></block>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="imageSourceTypeConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">提供上下文信息的对象。</param>
        <param name="culture">语言和区域性在转换过程中使用。</param>
        <param name="value">你想要转换的对象。</param>
        <param name="destinationType">所需的类型<paramref name="value" />转换为。</param>
        <summary>将转换<see cref="T:System.Windows.Media.Imaging.BitmapSource" />到指定类型的对象。</summary>
        <returns>新<see cref="T:System.Object" />指定的类型。 在此类中实现时，该对象必须是<see cref="T:System.Uri" />。 该对象表示[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]的序列化的图像。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类中实现`value`必须是<xref:System.Windows.Media.Imaging.BitmapSource>。  
  
 此类中实现`destinationType`必须是<xref:System.Uri>或<xref:System.NotSupportedException>引发。  
  
 `culture`未使用参数。 请参阅**的继承者说明**。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationType" />不是类型的<paramref name="value" />可以转换为。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="context" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="value" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Windows.Xps.XpsSerializationException">序列化图像时发生错误。</exception>
        <block subset="none" type="overrides"><para>重写此方法以提供您自己的转换。 使用<paramref name="culture" />参数来指定语言和区域性。 使用 <paramref name="context" /> 参数提取有关调用此转换器的环境的附加信息。 此参数可以是<see langword="null" />; 因此，始终检查。 同样，<paramref name="context" /> 对象的属性也可能返回空引用 (<see langword="Nothing" />)。</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="imageSourceTypeConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">提供上下文信息的对象。</param>
        <param name="value">一个对象，您需要的属性说明。</param>
        <param name="attributes">用于筛选返回的集合以排除不相关的属性的属性的数组。</param>
        <summary>获取指定类型的属性说明的集合。</summary>
        <returns>一个<see cref="T:System.ComponentModel.PropertyDescriptorCollection" />包含为此组件; 公开的属性说明或<see langword="null" />如果不返回任何属性描述。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法未实现此类-但会引发该异常中。 请参阅**的继承者说明**。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">此类，而不是从派生类中调用此方法。</exception>
        <block subset="none" type="overrides"><para>重写此方法以提供一种方法获取所选<see cref="T:System.ComponentModel.PropertyDescriptor" />类型的对象。 使用 <paramref name="context" /> 参数提取有关调用此转换器的环境的附加信息。 使用<paramref name="attributes" />数组指定要包括或排除的属性。</para></block>
      </Docs>
    </Member>
  </Members>
</Type>