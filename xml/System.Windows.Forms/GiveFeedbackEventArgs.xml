<Type Name="GiveFeedbackEventArgs" FullName="System.Windows.Forms.GiveFeedbackEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fb3f4c81a2c1bbfbe83fd23e3bb5ee8c76852794" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36521645" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GiveFeedbackEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GiveFeedbackEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.GiveFeedbackEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class GiveFeedbackEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class GiveFeedbackEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type GiveFeedbackEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>为 <see cref="E:System.Windows.Forms.Control.GiveFeedback" /> 事件提供数据，该事件在拖动操作期间发生。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.GiveFeedback>在拖动操作期间发生的事件。 它可以修改鼠标指针的外观，以便在拖放操作过程中为提供的用户的可视反馈拖动事件的源。 A<xref:System.Windows.Forms.GiveFeedbackEventArgs>对象指定的拖放操作和是否使用默认游标类型。  
  
 有关事件模型的信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的示例演示两个之间拖放操作<xref:System.Windows.Forms.ListBox>控件。 该示例通过调用<xref:System.Windows.Forms.Control.DoDragDrop%2A>方法的拖放操作启动时。 如果鼠标已移动的拖放操作启动多个<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>从期间的鼠标位置<xref:System.Windows.Forms.Control.MouseDown>事件。 <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定要在将拖动的项的索引`MouseDown`事件。  
  
 该示例还演示如何使用自定义光标拖放操作。 该示例假定两个光标文件`3dwarro.cur`和`3dwno.cur`、 存在于应用程序目录，用于自定义拖动和非放置光标，分别。 如果将使用自定义光标`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>已选中。 自定义光标设置<xref:System.Windows.Forms.Control.GiveFeedback>事件处理程序。  
  
 键盘状态评估中<xref:System.Windows.Forms.Control.DragOver>事件处理程序右侧`ListBox`，以确定将哪些拖动操作根据 SHIFT、 CTRL、 alt 键或 CTRL + ALT 键的状态。 中的位置`ListBox`期间还确定将发生放置`DragOver`事件。 如果要删除的数据不是`String`，则<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>设置为<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>。 最后，下拉的状态将显示在`DropLocationLabel` <xref:System.Windows.Forms.Label>。  
  
 要为权限放置的数据`ListBox`中确定<xref:System.Windows.Forms.Control.DragDrop>事件处理程序和`String`值添加中的适当位置`ListBox`。 如果在拖动操作超出边界的窗体中，则采用取消拖放操作<xref:System.Windows.Forms.Control.QueryContinueDrag>事件处理程序。  
  
 此代码片段演示如何使用<xref:System.Windows.Forms.GiveFeedbackEventArgs>类。 请参阅<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整的代码示例的方法。  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GiveFeedbackEventArgs (System.Windows.Forms.DragDropEffects effect, bool useDefaultCursors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.DragDropEffects effect, bool useDefaultCursors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (effect As DragDropEffects, useDefaultCursors As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GiveFeedbackEventArgs(System::Windows::Forms::DragDropEffects effect, bool useDefaultCursors);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.GiveFeedbackEventArgs : System.Windows.Forms.DragDropEffects * bool -&gt; System.Windows.Forms.GiveFeedbackEventArgs" Usage="new System.Windows.Forms.GiveFeedbackEventArgs (effect, useDefaultCursors)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="effect" Type="System.Windows.Forms.DragDropEffects" />
        <Parameter Name="useDefaultCursors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="effect">拖放操作的类型。 对 <see cref="T:System.Windows.Forms.DragDropEffects" /> 中定义的常数应用按位“或”(|) 运算，获得可能的值。</param>
        <param name="useDefaultCursors">如果使用默认指针，值为 <see langword="true" />；反之，值为 <see langword="false" />。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects Effect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Effect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects Effect { System::Windows::Forms::DragDropEffects get(); };" />
      <MemberSignature Language="F#" Value="member this.Effect : System.Windows.Forms.DragDropEffects" Usage="System.Windows.Forms.GiveFeedbackEventArgs.Effect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取显示的拖放操作反馈。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DragDropEffects" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示两个之间拖放操作<xref:System.Windows.Forms.ListBox>控件。 该示例通过调用<xref:System.Windows.Forms.Control.DoDragDrop%2A>方法的拖放操作启动时。 如果鼠标已移动的拖放操作启动多个<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>从期间的鼠标位置<xref:System.Windows.Forms.Control.MouseDown>事件。 <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定要在将拖动的项的索引`MouseDown`事件。  
  
 该示例还演示如何使用自定义光标拖放操作。 该示例假定两个光标文件`3dwarro.cur`和`3dwno.cur`、 存在于应用程序目录，用于自定义拖动和非放置光标，分别。 如果将使用自定义光标`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>已选中。 自定义光标设置<xref:System.Windows.Forms.Control.GiveFeedback>事件处理程序。  
  
 键盘状态评估中<xref:System.Windows.Forms.Control.DragOver>事件处理程序右侧`ListBox`，以确定将哪些拖动操作根据 SHIFT、 CTRL、 alt 键或 CTRL + ALT 键的状态。 中的位置`ListBox`期间还确定将发生放置`DragOver`事件。 如果要删除的数据不是`String`，则<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>设置为<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>。 最后，下拉的状态将显示在`DropLocationLabel` <xref:System.Windows.Forms.Label>。  
  
 要为权限放置的数据`ListBox`中确定<xref:System.Windows.Forms.Control.DragDrop>事件处理程序和`String`值添加中的适当位置`ListBox`。 如果在拖动操作超出边界的窗体中，则采用取消拖放操作<xref:System.Windows.Forms.Control.QueryContinueDrag>事件处理程序。  
  
 此代码片段演示如何使用<xref:System.Windows.Forms.GiveFeedbackEventArgs>类。 请参阅<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整的代码示例的方法。  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCursors">
      <MemberSignature Language="C#" Value="public bool UseDefaultCursors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCursors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCursors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCursors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCursors : bool with get, set" Usage="System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置拖动操作是否应使用与拖放效果关联的默认光标。</summary>
        <value>如果使用默认指针，值为 <see langword="true" />；否则值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 系统提供了默认拖放游标移动或复制等的不同的拖放操作。 如果<xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A>设置为`false`，它负责要设置合适的光标的事件源。  
  
   
  
## Examples  
 下面的示例演示两个之间拖放操作<xref:System.Windows.Forms.ListBox>控件。 该示例通过调用<xref:System.Windows.Forms.Control.DoDragDrop%2A>方法的拖放操作启动时。 如果鼠标已移动的拖放操作启动多个<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>从期间的鼠标位置<xref:System.Windows.Forms.Control.MouseDown>事件。 <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定要在将拖动的项的索引`MouseDown`事件。  
  
 该示例还演示如何使用自定义光标拖放操作。 该示例假定两个光标文件`3dwarro.cur`和`3dwno.cur`、 存在于应用程序目录，用于自定义拖动和非放置光标，分别。 如果将使用自定义光标`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>已选中。 自定义光标设置<xref:System.Windows.Forms.Control.GiveFeedback>事件处理程序。  
  
 键盘状态评估中<xref:System.Windows.Forms.Control.DragOver>事件处理程序右侧`ListBox`，以确定将哪些拖动操作根据 SHIFT、 CTRL、 alt 键或 CTRL + ALT 键的状态。 中的位置`ListBox`期间还确定将发生放置`DragOver`事件。 如果要删除的数据不是`String`，则<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>设置为<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>。 最后，下拉的状态将显示在`DropLocationLabel` <xref:System.Windows.Forms.Label>。  
  
 要为权限放置的数据`ListBox`中确定<xref:System.Windows.Forms.Control.DragDrop>事件处理程序和`String`值添加中的适当位置`ListBox`。 如果在拖动操作超出边界的窗体中，则采用取消拖放操作<xref:System.Windows.Forms.Control.QueryContinueDrag>事件处理程序。  
  
 此代码片段演示如何使用<xref:System.Windows.Forms.GiveFeedbackEventArgs>类。 请参阅<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整的代码示例的方法。  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>