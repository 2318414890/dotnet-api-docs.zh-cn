<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Control.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b857fe3" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2eccf4de-4b1c-4706-8cb3-f46682ccfb725f165afa77e5133f21dc1457c8775b30a3be3018.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5f165afa77e5133f21dc1457c8775b30a3be3018</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b15b8cf0f6dbc1504057c88969d9ef4b790891fe</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/11/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Defines the base class for controls, which are components with visual representation.</source>
          <target state="translated">定义控件的基类，控件是带有可视化表示形式的组件。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>To create your own control class, inherit from the <ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> classes, or from the other Windows Forms provided controls.</source>
          <target state="translated">若要创建你自己的控件类，从<ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph>，<ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>类，或从其他 Windows 窗体提供的控件。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>For more information about authoring custom controls, see <bpt id="p1">[</bpt>Developing Custom Windows Forms Controls with the .NET Framework<ept id="p1">](~/docs/framework/winforms/controls/developing-custom-windows-forms-controls.md)</ept>.</source>
          <target state="translated">有关创作自定义控件的详细信息，请参阅<bpt id="p1">[</bpt>开发自定义 Windows 窗体控件与.NET Framework<ept id="p1">](~/docs/framework/winforms/controls/developing-custom-windows-forms-controls.md)</ept>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class implements very basic functionality required by classes that display information to the user.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类实现由向用户显示信息的类所需的最基本功能。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>It handles user input through the keyboard and pointing devices.</source>
          <target state="translated">它处理通过键盘和指针设备的用户输入。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>It handles message routing and security.</source>
          <target state="translated">它处理的消息路由和安全性。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>It defines the bounds of a control (its position and size), although it does not implement painting.</source>
          <target state="translated">它定义控件边界的 （其位置和大小），尽管它未实现绘制。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>It provides a window handle (<ph id="ph1">`hWnd`</ph>).</source>
          <target state="translated">它提供的窗口句柄 (<ph id="ph1">`hWnd`</ph>)。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Windows Forms controls use ambient properties so child controls can appear like their surrounding environment.</source>
          <target state="translated">Windows 窗体控件使用环境属性，因此子控件的外观接近其周围的环境。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>An <bpt id="p1">*</bpt>ambient property<ept id="p1">*</ept> is a control property that, if not set, is retrieved from the parent control.</source>
          <target state="translated"><bpt id="p1">*</bpt>环境属性<ept id="p1">*</ept>是控件的属性，如果未设置，从父控件检索。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>If the control does not have a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph>, and the property is not set, the control attempts to determine the value of the ambient property through the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Site%2A&gt;</ph> property.</source>
          <target state="translated">如果控件不具有<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph>，和未设置的属性、 控件尝试确定通过环境属性的值<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Site%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>If the control is not sited, if the site does not support ambient properties, or if the property is not set on the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph>, the control uses its own default values.</source>
          <target state="translated">如果控件不占位，如果站点不支持环境属性，或在未设置的属性<ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph>，该控件使用其自己的默认值。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Typically, an ambient property represents a characteristic of a control, such as <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, that is communicated to a child control.</source>
          <target state="translated">通常情况下，环境属性均表示一个控件的特征如<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>，即传递给子控件。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>都不具有相同<ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>作为其父<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>默认情况下。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Ambient properties provided by the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class include: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>.</source>
          <target state="translated">提供的环境属性<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类包括： <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>，和<ph id="ph6">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>To make your Windows Forms application support visual styles, be sure to set the <ph id="ph1">&lt;xref:System.Windows.Forms.FlatStyle&gt;</ph> property to <ph id="ph2">`System`</ph> and include a manifest with your executable.</source>
          <target state="translated">若要使 Windows 窗体应用程序支持视觉样式，请务必设置<ph id="ph1">&lt;xref:System.Windows.Forms.FlatStyle&gt;</ph>属性<ph id="ph2">`System`</ph>并包含可执行文件清单。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>A manifest is an XML file that is included either as a resource within your application executable or as a separate file that resides in the same directory as the executable file.</source>
          <target state="translated">清单是 XML 文件，包括作为应用程序可执行文件中的资源或者为单独的文件驻留在可执行文件所在的同一目录中。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>For an example of a manifest, see the Example section of the <ph id="ph1">&lt;xref:System.Windows.Forms.FlatStyle&gt;</ph> enumeration.</source>
          <target state="translated">有关清单的示例，请参阅示例部分<ph id="ph1">&lt;xref:System.Windows.Forms.FlatStyle&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>For more information about using visual styles, see <bpt id="p1">[</bpt>Visual Styles<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb773187.aspx)</ept>.</source>
          <target state="translated">有关使用视觉样式的详细信息，请参阅<bpt id="p1">[</bpt>视觉样式<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb773187.aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Windows Forms has accessibility support built in, and provides information about your application that enables it to work with accessibility client applications such as screen enlarger and reviewer utilities, voice input utilities, on-screen keyboards, alternative input devices, and keyboard enhancement utilities.</source>
          <target state="translated">Windows 窗体具有辅助功能支持内置的并提供有关你的应用程序，使它能够使用辅助功能客户端应用程序，如屏幕放大器和查看器实用程序、 语音输入实用程序，屏幕键盘，信息替代输入的设备，以及键盘增强实用工具。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Sometimes you will want to provide additional information to accessibility client applications.</source>
          <target state="translated">有时想要为辅助功能客户端应用程序提供附加信息。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>There are two ways of providing this additional information.</source>
          <target state="translated">有两种方法来提供这些额外信息。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>You can set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> property values, which will be reported to accessibility client applications.</source>
          <target state="translated">你可以设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph>将报告给具有辅助功能客户端应用程序的属性值。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>This method is typically used to provide limited accessibility information for existing controls.</source>
          <target state="translated">此方法通常用于提供有限的辅助功能信息的现有控件。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Alternatively, you can write your own class deriving from the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph> classes, providing as much accessibility information as needed.</source>
          <target state="translated">此外，你可以编写您自己的类派生自<ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph>类，提供所需任意数量的可访问性信息。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>To maintain better performance, do not set the size of a control in its constructor.</source>
          <target state="translated">若要维护更好的性能，不要在其构造函数中设置控件的大小。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>The preferred method is to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property.</source>
          <target state="translated">首选的方法是重写<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Do not add data bindings for a <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> in its constructor.</source>
          <target state="translated">不要在添加数据绑定<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>其构造函数中。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Doing so will cause errors in code generation and can cause unwanted behavior.</source>
          <target state="translated">这样会导致出现错误，生成代码，并可能导致意外的行为。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>The majority of the controls in the <ph id="ph1">&lt;xref:System.Windows.Forms&gt;</ph> namespace use the underlying Windows common control as a base to build on.</source>
          <target state="translated">中的控件的大部分<ph id="ph1">&lt;xref:System.Windows.Forms&gt;</ph>命名空间将基础的 Windows 公共控件用作的基础上生成。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>For more information about the Windows common controls, see <bpt id="p1">[</bpt>General Control Reference<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775497.aspx)</ept>.</source>
          <target state="translated">有关 Windows 公共控件的详细信息，请参阅<bpt id="p1">[</bpt>常规控件参考<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/bb775497.aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>To identify Windows Forms controls from a separate process, use a standard <ph id="ph1">`SendMessage`</ph> call to pass the WM_GETCONTROLNAME message.</source>
          <target state="translated">若要标识 Windows 窗体控件从一个单独的进程，使用一种标准<ph id="ph1">`SendMessage`</ph>调用即可传递 WM_GETCONTROLNAME 消息。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>WM_GETCONTROLNAME is independent of the language and Windows hierarchy.</source>
          <target state="translated">WM_GETCONTROLNAME 是独立于语言和 Windows 层次结构。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>For more information, see the "Recommended Solution for Windows Forms" topic in<bpt id="p1">[</bpt>Automating Windows Forms<ept id="p1">](http://msdn.microsoft.com/library/ms996405.aspx)</ept>.</source>
          <target state="translated">有关详细信息，请参阅中的"建议解决方案的 Windows 窗体"主题<bpt id="p1">[</bpt>自动执行 Windows 窗体<ept id="p1">](http://msdn.microsoft.com/library/ms996405.aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property to synchronize access to the control from multiple threads.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph>属性的访问进行同步到控件从多个线程。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>For more information about multithreaded Windows Forms controls, see <bpt id="p1">[</bpt>How to: Make Thread-Safe Calls to Windows Forms Controls<ept id="p1">](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)</ept></source>
          <target state="translated">有关多线程 Windows 窗体控件的详细信息，请参阅<bpt id="p1">[</bpt>如何： 向 Windows 窗体控件进行线程安全的调用<ept id="p1">](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Only the following members are thread safe: <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" /&gt;</ph>, <ph id="ph4">&lt;see cref="P:System.Windows.Forms.Control.InvokeRequired" /&gt;</ph>, and <ph id="ph5">&lt;see cref="M:System.Windows.Forms.Control.CreateGraphics" /&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">只有以下成员是线程安全： <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph>， <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" /&gt;</ph>， <ph id="ph3">&lt;see cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" /&gt;</ph>， <ph id="ph4">&lt;see cref="P:System.Windows.Forms.Control.InvokeRequired" /&gt;</ph>，和<ph id="ph5">&lt;see cref="M:System.Windows.Forms.Control.CreateGraphics" /&gt;</ph>如果已创建控件的句柄。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Control">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateGraphics" /&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">调用<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateGraphics" /&gt;</ph>在后台线程上创建控件的句柄之前可能会导致跨线程调用的非法。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class with default settings.</source>
          <target state="translated">使用默认设置初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is the base class for all controls used in a Windows Forms application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类是在 Windows 窗体应用程序中使用的所有控件的基类。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor">
          <source>Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</source>
          <target state="translated">因为此类通常不用于创建类的实例，此构造函数通常不直接调用，但而由派生类调用。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String)">
          <source>The text displayed by the control.</source>
          <target state="translated">控件显示的文本。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class with specific text.</source>
          <target state="translated">用特定的文本初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is the base class for all controls used in a Windows Forms application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类是在 Windows 窗体应用程序中使用的所有控件的基类。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String)">
          <source>Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</source>
          <target state="translated">因为此类通常不用于创建类的实例，此构造函数通常不直接调用，但而由派生类调用。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String)">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> constructor sets the initial <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value to the <ph id="ph3">`text`</ph> parameter value.</source>
          <target state="translated">此版本的<ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph>构造函数设置初始<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值设置为<ph id="ph3">`text`</ph>参数值。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to be the parent of the control.</source>
          <target state="translated">要成为该控件的父级的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)">
          <source>The text displayed by the control.</source>
          <target state="translated">控件显示的文本。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class as a child control, with specific text.</source>
          <target state="translated">用特定文本将 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> 类的新实例初始化为子控件。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is the base class for all controls used in a Windows Forms application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类是在 Windows 窗体应用程序中使用的所有控件的基类。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)">
          <source>Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</source>
          <target state="translated">因为此类通常不用于创建类的实例，此构造函数通常不直接调用，但而由派生类调用。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> constructor sets the initial <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value to the <ph id="ph3">`text`</ph> parameter value.</source>
          <target state="translated">此版本的<ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph>构造函数设置初始<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值设置为<ph id="ph3">`text`</ph>参数值。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)">
          <source>The constructor also adds the control to the parent control's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>.</source>
          <target state="translated">构造函数还将控件添加到父控件的<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The text displayed by the control.</source>
          <target state="translated">控件显示的文本。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> position of the control, in pixels, from the left edge of the control's container.</source>
          <target state="translated">控件距其容器左边缘的 <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> 位置（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property.</source>
          <target state="translated">该值被分配给 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> position of the control, in pixels, from the top edge of the control's container.</source>
          <target state="translated">控件距其容器上边缘的 <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> 位置（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property.</source>
          <target state="translated">该值被分配给 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The width of the control, in pixels.</source>
          <target state="translated">控件的宽度（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property.</source>
          <target state="translated">该值被分配给 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The height of the control, in pixels.</source>
          <target state="translated">控件的高度（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> property.</source>
          <target state="translated">该值被分配给 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class with specific text, size, and location.</source>
          <target state="translated">用特定的文本、大小和位置初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is the base class for all controls used in a Windows Forms application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类是在 Windows 窗体应用程序中使用的所有控件的基类。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</source>
          <target state="translated">因为此类通常不用于创建类的实例，此构造函数通常不直接调用，但而由派生类调用。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> constructor sets the initial <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value to the <ph id="ph3">`text`</ph> parameter value.</source>
          <target state="translated">此版本的<ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph>构造函数设置初始<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值设置为<ph id="ph3">`text`</ph>参数值。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The initial <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> of the control are determined by the <ph id="ph3">`left`</ph>, <ph id="ph4">`top`</ph>, <ph id="ph5">`width`</ph> and <ph id="ph6">`height`</ph> parameter values.</source>
          <target state="translated">初始<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>的控件由<ph id="ph3">`left`</ph>， <ph id="ph4">`top`</ph>，<ph id="ph5">`width`</ph>和<ph id="ph6">`height`</ph>参数值。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>To maintain better performance, do not set the size of a control in its constructor.</source>
          <target state="translated">若要维护更好的性能，不要在其构造函数中设置控件的大小。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The preferred method is to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property.</source>
          <target state="translated">首选的方法是重写<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to be the parent of the control.</source>
          <target state="translated">要成为该控件的父级的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The text displayed by the control.</source>
          <target state="translated">控件显示的文本。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> position of the control, in pixels, from the left edge of the control's container.</source>
          <target state="translated">控件距其容器左边缘的 <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> 位置（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property.</source>
          <target state="translated">该值被分配给 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> position of the control, in pixels, from the top edge of the control's container.</source>
          <target state="translated">控件距其容器上边缘的 <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> 位置（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property.</source>
          <target state="translated">该值被分配给 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The width of the control, in pixels.</source>
          <target state="translated">控件的宽度（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property.</source>
          <target state="translated">该值被分配给 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The height of the control, in pixels.</source>
          <target state="translated">控件的高度（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The value is assigned to the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> property.</source>
          <target state="translated">该值被分配给 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class as a child control, with specific text, size, and location.</source>
          <target state="translated">用特定的文本、大小和位置将 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> 类的新实例初始化为子控件。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is the base class for all controls used in a Windows Forms application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类是在 Windows 窗体应用程序中使用的所有控件的基类。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</source>
          <target state="translated">因为此类通常不用于创建类的实例，此构造函数通常不直接调用，但而由派生类调用。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph> constructor sets the initial <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value to the <ph id="ph3">`text`</ph> parameter value.</source>
          <target state="translated">此版本的<ph id="ph1">&lt;xref:System.Windows.Forms.Control.%23ctor%2A&gt;</ph>构造函数设置初始<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值设置为<ph id="ph3">`text`</ph>参数值。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The constructor also adds the control to the parent control's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>.</source>
          <target state="translated">构造函数还将控件添加到父控件的<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The initial <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> of the control are determined by the <ph id="ph3">`left`</ph>, <ph id="ph4">`top`</ph>, <ph id="ph5">`width`</ph> and <ph id="ph6">`height`</ph> parameter values.</source>
          <target state="translated">初始<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>的控件由<ph id="ph3">`left`</ph>， <ph id="ph4">`top`</ph>，<ph id="ph5">`width`</ph>和<ph id="ph6">`height`</ph>参数值。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>To maintain better performance, do not set the size of a control in its constructor.</source>
          <target state="translated">若要维护更好的性能，不要在其构造函数中设置控件的大小。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The preferred method is to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property.</source>
          <target state="translated">首选的方法是重写<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Notifies the accessibility client applications of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph>.</source>
          <target state="translated">向具有辅助功能的客户端应用程序通知 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph> to notify the accessibility client applications of.</source>
          <target state="translated">要将其通报给具有辅助功能的客户端应用程序的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>The child <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to notify of the accessible event.</source>
          <target state="translated">就该辅助性事件要通知的子 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>Notifies the accessibility client applications of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph> for the specified child control.</source>
          <target state="translated">就指定子控件的指定 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph> 通知辅助功能客户端应用程序。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>You must call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=nameWithType&gt;</ph> method for each <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleEvents&gt;</ph> the accessibility client applications are to be notified of.</source>
          <target state="translated">必须调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=nameWithType&gt;</ph>方法为每个<ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleEvents&gt;</ph>辅助功能客户端应用程序将接收的通知。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A&gt;</ph> method is typically called when a property is set or from within an event handler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A&gt;</ph>方法通常称为属性时设置或从事件处理程序。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>For example, you might call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A&gt;</ph> method and pass in an <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleEvents&gt;</ph> value of <ph id="ph3">`Hide`</ph> from within the event handler for the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">例如，你可能会调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A&gt;</ph>方法并传入<ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleEvents&gt;</ph>值<ph id="ph3">`Hide`</ph>从内的事件处理程序<ph id="ph4">&lt;xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=nameWithType&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>The following code example demonstrates the creation of an accessibility-aware chart control, using the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph> classes to expose accessible information.</source>
          <target state="translated">下面的代码示例演示如何创建一个具有辅助功能的图表控件，并使用<ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph>类来公开可访问的信息。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>The control plots two curves along with a legend.</source>
          <target state="translated">该控件绘制图例以及两条曲线。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>The <ph id="ph1">`ChartControlAccessibleObject`</ph> class, which derives from <ph id="ph2">`ControlAccessibleObject`</ph>, is used in the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> method to provide custom accessible information for the chart control.</source>
          <target state="translated"><ph id="ph1">`ChartControlAccessibleObject`</ph>类，该类派生自<ph id="ph2">`ControlAccessibleObject`</ph>，在使用<ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph>方法以提供为图表控件的自定义可访问的信息。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>Since the chart legend is not an actual <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> -based control, but instead is drawn by the chart control, it does not any built-in accessible information.</source>
          <target state="translated">因为图表图例不是实际<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>-基于控制，但改为绘制图表控件中，通过它不提供任何内置的可访问信息。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>Because of this, the <ph id="ph1">`ChartControlAccessibleObject`</ph> class overrides the <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleObject.GetChild%2A&gt;</ph> method to return the <ph id="ph3">`CurveLegendAccessibleObject`</ph> that represents accessible information for each part of the legend.</source>
          <target state="translated">因此，<ph id="ph1">`ChartControlAccessibleObject`</ph>类重写<ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleObject.GetChild%2A&gt;</ph>方法以返回<ph id="ph3">`CurveLegendAccessibleObject`</ph>，表示将图例的每个部分的访问信息。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>When an accessible-aware application uses this control, the control can provide the necessary accessible information.</source>
          <target state="translated">当辅助功能的应用程序使用此控件时，该控件可以提供所需的可访问信息。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>This code excerpt demonstrates calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibilityNotifyClients%2A&gt;</ph> method.</source>
          <target state="translated">此代码片段演示如何调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibilityNotifyClients%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> class overview for the complete code example.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph>完整的代码示例的类概述。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph> to notify the accessibility client applications of.</source>
          <target state="translated">要将其通报给具有辅助功能的客户端应用程序的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)">
          <source>The identifier of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> 的标识符。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)">
          <source>The child <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to notify of the accessible event.</source>
          <target state="translated">就该辅助性事件要通知的子 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)">
          <source>Notifies the accessibility client applications of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph> for the specified child control .</source>
          <target state="translated">就指定子控件的指定 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleEvents" /&gt;</ph> 通知辅助功能客户端应用程序。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AccessibilityObject">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> assigned to the control.</source>
          <target state="translated">获取分配给该控件的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibilityObject">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> assigned to the control.</source>
          <target state="translated">分配给控件的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibilityObject">
          <source>To control the instance returned from this method, override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> method.</source>
          <target state="translated">若要控制从此方法返回的实例，重写<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibilityObject">
          <source>If no <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> is currently assigned to the control, a new instance of one is created.</source>
          <target state="translated">如果当前没有给控件分配 <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph>，则会创建后者的一个新实例。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibilityObject">
          <source>To get or set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt;</ph> property, you must add a reference to the <ph id="ph2">`Accessibility`</ph> assembly installed with the<ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">要获取或设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt;</ph>属性，必须添加对引用<ph id="ph2">`Accessibility`</ph>与安装程序集<ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibilityObject">
          <source>For more information about accessible objects, see <bpt id="p1">[</bpt>Active Accessibility<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd373592.aspx)</ept>.</source>
          <target state="translated">有关辅助性对象的详细信息，请参阅<bpt id="p1">[</bpt>Active Accessibility<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd373592.aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>Gets or sets the default action description of the control for use by accessibility client applications.</source>
          <target state="translated">获取或设置控件的默认操作说明以供具有辅助功能的客户端应用程序使用。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>The default action description of the control for use by accessibility client applications.</source>
          <target state="translated">控件的默认操作说明，供辅助功能客户端应用程序使用。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>An object's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A&gt;</ph> property describes the object's primary method of manipulation from the user's viewpoint.</source>
          <target state="translated">对象的<ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A&gt;</ph>属性描述对象的主要方法从用户的角度来看的操作。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>This property should be a verb or a short verb phrase.</source>
          <target state="translated">此属性应为一个谓词或谓词短语。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>Not all objects have default actions, and some objects might have a default action that is related to its <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=nameWithType&gt;</ph> property, such as in the following examples:</source>
          <target state="translated">并非所有对象都有默认操作，而某些对象可能都具有与相关的默认操作其<ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=nameWithType&gt;</ph>属性，例如，下面的示例：</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>A selected check box has a default action of "Uncheck" and a value of "Checked."</source>
          <target state="translated">选中的复选框，并且在"请先取消选中"默认操作的值为"已选中"。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>A cleared check box has a default action of "Check" and a value of "Unchecked."</source>
          <target state="translated">已清除的复选框还具有默认操作的"检查"和"未选中。"的值</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>A button labeled "Print" has a default action of "Press," with no value.</source>
          <target state="translated">标记为"打印"按钮将"Press，"默认操作不具有任何值。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>A label or a text box control that shows "Printer" has no default action, but would have a value of "Printer."</source>
          <target state="translated">标签或显示"打印机"的一个文本框控件没有默认操作，但是"打印机。"的值</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
          <source>For more information about properties of accessible objects, see <bpt id="p1">[</bpt>Content of Descriptive Properties<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.</source>
          <target state="translated">有关辅助性对象的属性的详细信息，请参阅<bpt id="p1">[</bpt>的描述性属性内容<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>Gets or sets the description of the control used by accessibility client applications.</source>
          <target state="translated">获取或设置辅助功能客户端应用程序使用的控件说明。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>The description of the control used by accessibility client applications.</source>
          <target state="translated">辅助功能客户端应用程序使用的控件说明。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>An object's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> property provides a textual description about an object's visual appearance.</source>
          <target state="translated">对象的<ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph>属性提供有关对象的可视外观的文本说明。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>The description is primarily used to provide greater context for low-vision or blind users, but can also be used for context searching or other applications.</source>
          <target state="translated">描述主要用于提供更大的上下文对于视力较差或盲人用户，但还可用于上下文搜索或其他应用程序。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> property is needed if the description is not obvious, or if it is redundant based on the object's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.AccessibleObject.State%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.AccessibleObject.Value%2A&gt;</ph> properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph>说明不很明显，如果需要或多余基于对象的属性<ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.AccessibleObject.State%2A&gt;</ph>，和<ph id="ph5">&lt;xref:System.Windows.Forms.AccessibleObject.Value%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>For example, a button with "OK" would not need additional information, but a button that shows a picture of a cactus would.</source>
          <target state="translated">例如，一个具有"确定"按钮将不需要的其他信息，但会显示的兰图片的按钮。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>, and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> (and perhaps <ph id="ph3">&lt;xref:System.Windows.Forms.AccessibleObject.Help%2A&gt;</ph>) properties for the cactus button would describe its purpose, but the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> property would convey information that is less tangible, such as "A button that shows a picture of a cactus."</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>，和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph>(，也可能<ph id="ph3">&lt;xref:System.Windows.Forms.AccessibleObject.Help%2A&gt;</ph>) 兰按钮的属性将描述其用途，但<ph id="ph4">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph>属性传达不太明确，例如"显示图片的兰的按钮。"的信息</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>For more information about properties of accessible objects, see <bpt id="p1">[</bpt>Content of Descriptive Properties<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.</source>
          <target state="translated">有关辅助性对象的属性的详细信息，请参阅<bpt id="p1">[</bpt>的描述性属性内容<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>The following code example creates an instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> derived class, <ph id="ph2">`MyCheckBox`</ph>, assigns it an <ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph> to its <ph id="ph4">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph> property and sets the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> properties, because the <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property is <ph id="ph8">`null`</ph>.</source>
          <target state="translated">下面的代码示例创建的实例<ph id="ph1">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph>派生类， <ph id="ph2">`MyCheckBox`</ph>，将其分配<ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph>到其<ph id="ph4">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph>属性，并设置<ph id="ph5">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>和<ph id="ph6">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph>属性，因为<ph id="ph7">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性是<ph id="ph8">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleDescription">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`MyForm`</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名为<ph id="ph2">`MyForm`</ph>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AccessibleName">
          <source>Gets or sets the name of the control used by accessibility client applications.</source>
          <target state="translated">获取或设置辅助功能客户端应用程序所使用的控件名称。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleName">
          <source>The name of the control used by accessibility client applications.</source>
          <target state="translated">辅助功能客户端应用程序所使用的控件名称。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleName">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleName">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph> property is a label that briefly describes and identifies the object within its container, such as the text in a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>, the name of a <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>, or a label displayed next to a <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>属性是一个标签，简要描述并标识其容器，例如中的文本中的对象<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>，则名称<ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>，或旁边显示标签<ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleName">
          <source>For more information about properties of accessible objects, see the "<bpt id="p1">[</bpt>Content of Descriptive Properties<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.</source>
          <target state="translated">有关辅助性对象的属性的详细信息，请参阅"<bpt id="p1">[</bpt>内容的描述性属性<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleName">
          <source>The following code example creates an instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> derived class, <ph id="ph2">`MyCheckBox`</ph>, assigns it an <ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph> to its <ph id="ph4">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph> property and sets the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph> properties since the <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property is <ph id="ph8">`null`</ph>.</source>
          <target state="translated">下面的代码示例创建的实例<ph id="ph1">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph>派生类， <ph id="ph2">`MyCheckBox`</ph>，将其分配<ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph>到其<ph id="ph4">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph>属性，并设置<ph id="ph5">&lt;xref:System.Windows.Forms.Control.AccessibleName%2A&gt;</ph>和<ph id="ph6">&lt;xref:System.Windows.Forms.Control.AccessibleDescription%2A&gt;</ph>属性，因为<ph id="ph7">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性是<ph id="ph8">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleName">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`MyForm`</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名为<ph id="ph2">`MyForm`</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AccessibleRole">
          <source>Gets or sets the accessible role of the control</source>
          <target state="translated">获取或设置控件的辅助性角色</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleRole">
          <source>One of the values of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleRole" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleRole" /&gt;</ph> 的值之一。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleRole">
          <source>The default is <ph id="ph1">&lt;see langword="Default" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="Default" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleRole">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> property describes what kind of user interface element an object is.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> 属性描述对象是哪一种用户界面元素。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleRole">
          <source>If the control's role cannot be determined, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> property is set to <ph id="ph2">`Default`</ph>.</source>
          <target state="translated">如果无法确定控件的角色，则 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibleRole%2A&gt;</ph> 属性将设置为 <ph id="ph2">`Default`</ph>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AccessibleRole">
          <source>For more information about properties of accessible objects, see <bpt id="p1">[</bpt>Content of Descriptive Properties<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>.</source>
          <target state="translated">有关辅助性对象的属性的详细信息，请参阅<bpt id="p1">[</bpt>的描述性属性内容<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AccessibleRole">
          <source>The value assigned is not one of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleRole" /&gt;</ph> values.</source>
          <target state="translated">分配的值不是 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleRole" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>Gets or sets a value indicating whether the control can accept data that the user drags onto it.</source>
          <target state="translated">获取或设置一个值，该值指示控件是否可以接受用户拖放到它上面的数据。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if drag-and-drop operations are allowed in the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控件允许拖放操作，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped.</source>
          <target state="translated">下面的代码示例使用户将图像或图像文件拖动到窗体，并将其显示在上的点被删除。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph>方法被重写来重绘图像绘制窗体时每次; 否则该映像将只持续到下一步重新绘制。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph>事件处理方法确定要拖动到窗体中数据的类型，并提供适当的反馈。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event-handling method displays the image on the form, if an <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> can be created from the data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph>事件处理方法在窗体上显示的图像，如果<ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>可以从数据创建。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph> values are screen coordinates, the example uses the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph> method to convert them to client coordinates.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph>值屏幕坐标，该示例使用<ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph>方法来将它们转换成工作区坐标。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>for unrestricted Clipboard access to set this property to <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">有关不受限制的剪贴板访问，将此属性设置为<ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>Associated enumeration: the <ph id="ph1">&lt;see langword="AllClipboard" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionClipboard" /&gt;</ph></source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see langword="AllClipboard" /&gt;</ph>值 <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionClipboard" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.AllowDrop" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.AllowDrop" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.AllowDrop" /&gt;</ph>属性在派生类中，使用基类的<ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.AllowDrop" /&gt;</ph>属性来扩展的基实现。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">否则，你必须提供所有实现。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AllowDrop">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.AllowDrop" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">你无需重写二者，<ph id="ph1">&lt;see langword="get" /&gt;</ph>和<ph id="ph2">&lt;see langword="set" /&gt;</ph>访问器<ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.AllowDrop" /&gt;</ph>属性; 你可以根据需要重写只有一个。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Anchor">
          <source>Gets or sets the edges of the container to which a control is bound and determines how a control is resized with its parent.</source>
          <target state="translated">获取或设置控件绑定到的容器的边缘并确定控件如何随其父级一起调整大小。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AnchorStyles" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.AnchorStyles" /&gt;</ph> 值的按位组合。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>The default is <ph id="ph1">&lt;see langword="Top" /&gt;</ph> and <ph id="ph2">&lt;see langword="Left" /&gt;</ph>.</source>
          <target state="translated">默认值是 <ph id="ph1">&lt;see langword="Top" /&gt;</ph> 和 <ph id="ph2">&lt;see langword="Left" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> property to define how a control is automatically resized as its parent control is resized.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>属性来定义如何调整控件的自动调整其父控件的大小时。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>Anchoring a control to its parent control ensures that the anchored edges remain in the same position relative to the edges of the parent control when the parent control is resized.</source>
          <target state="translated">锚定到其父控件的控件，可确保时调整父控件的锚定的边缘保留在父控件的同一位置相对于边缘。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>You can anchor a control to one or more edges of its container.</source>
          <target state="translated">您可以定位到其容器的一个或多个边缘的控件。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>For example, if you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> whose <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> property value is set to <ph id="ph4">`Top`</ph> and <ph id="ph5">`Bottom`</ph>, the <ph id="ph6">&lt;xref:System.Windows.Forms.Button&gt;</ph> is stretched to maintain the anchored distance to the top and bottom edges of the <ph id="ph7">&lt;xref:System.Windows.Forms.Form&gt;</ph> as the <ph id="ph8">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> of the <ph id="ph9">&lt;xref:System.Windows.Forms.Form&gt;</ph> is increased.</source>
          <target state="translated">例如，如果你有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>与<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>其<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>属性值设置为<ph id="ph4">`Top`</ph>和<ph id="ph5">`Bottom`</ph>、<ph id="ph6">&lt;xref:System.Windows.Forms.Button&gt;</ph>拉伸以维护边缘和下边缘之间的锚定的距离<ph id="ph7">&lt;xref:System.Windows.Forms.Form&gt;</ph>作为<ph id="ph8">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>的<ph id="ph9">&lt;xref:System.Windows.Forms.Form&gt;</ph>增加。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> properties are mutually exclusive.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph>属性是互相排斥。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>Only one can be set at a time, and the last one set takes precedence.</source>
          <target state="translated">只有一个可以设置一次和最后一个组将优先。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>The following code example adds a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> to a form and sets some of its common properties.</source>
          <target state="translated">下面的代码示例将添加<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>到窗体并设置一些其通用的属性。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</source>
          <target state="translated">因此它会保留其相对位置，调整窗体的大小时，该示例将在窗体右下角该按钮定位。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>Next it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> and resizes the button to the same size as the <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">接下来，它将设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph>并调整其大小的按钮相同的大小为<ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>The example then sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> to <ph id="ph2">`true`</ph> and sets the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property.</source>
          <target state="translated">然后，示例设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph>到<ph id="ph2">`true`</ph>和设置<ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>Lastly, it adds an event handler to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event of the button.</source>
          <target state="translated">最后，它将添加事件处理程序来处理<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>该按钮的事件。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>This example requires that you have an <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> named <ph id="ph2">`imageList1`</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph>名为<ph id="ph2">`imageList1`</ph>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Anchor" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Anchor" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Anchor" /&gt;</ph>属性在派生类中，使用基类的<ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Anchor" /&gt;</ph>属性来扩展的基实现。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">否则，你必须提供所有实现。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Anchor">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Anchor" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">你无需重写二者，<ph id="ph1">&lt;see langword="get" /&gt;</ph>和<ph id="ph2">&lt;see langword="set" /&gt;</ph>访问器<ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Anchor" /&gt;</ph>属性; 你可以根据需要重写只有一个。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AutoScrollOffset">
          <source>Gets or sets where this control is scrolled to in <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" /&gt;</ph>.</source>
          <target state="translated">获取或设置一个值，该值指示在 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" /&gt;</ph> 中将控件滚动到何处。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AutoScrollOffset">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> specifying the scroll location.</source>
          <target state="translated">一个指定滚动位置的 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AutoScrollOffset">
          <source>The default is the upper-left corner of the control.</source>
          <target state="translated">默认为控件的左上角。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.AutoSize">
          <source>This property is not relevant for this class.</source>
          <target state="translated">此属性与此类无关。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AutoSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已启用，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.AutoSize">
          <source>This property is not relevant for this class.</source>
          <target state="translated">此属性与此类无关。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.AutoSizeChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">此事件与此类无关。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.AutoSizeChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">此事件与此类无关。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.BackColor">
          <source>Gets or sets the background color for the control.</source>
          <target state="translated">获取或设置控件的背景色。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the background color of the control.</source>
          <target state="translated">表示控件背景色的 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>The default is the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultBackColor" /&gt;</ph> property.</source>
          <target state="translated">默认为 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultBackColor" /&gt;</ph> 属性的值。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> property does not support transparent colors unless the <ph id="ph2">`SupportsTransparentBackColor`</ph> value of <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>属性不支持透明的颜色，除非<ph id="ph2">`SupportsTransparentBackColor`</ph>值<ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType&gt;</ph>设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> property is an ambient property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>属性是一个环境属性。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>An ambient property is a control property that, if not set, is retrieved from the parent control.</source>
          <target state="translated">环境属性是控件属性，如果未设置，从父控件检索。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>都不具有相同<ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>作为其父<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>默认情况下。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>For more information about ambient properties, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.</source>
          <target state="translated">有关环境属性的详细信息，请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph>类或<ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>类概述。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of the controls to the default system colors.</source>
          <target state="translated">下面的代码示例设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的默认系统颜色的控件。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>The code recursively calls itself if the control has any child controls.</source>
          <target state="translated">如果控件具有任何子控件，则代码以递归方式调用自身。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>This code example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with at least one child control; however, a child container control, like a <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, with its own child control(s) would better demonstrate the recursion.</source>
          <target state="translated">此代码示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>与至少一个子控件; 但是，子容器控制，如<ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>，与它自己的子控件将更好地演示递归。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph>属性在派生类中，使用基类的<ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph>属性来扩展的基实现。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">否则，你必须提供所有实现。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackColor">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">你无需重写二者，<ph id="ph1">&lt;see langword="get" /&gt;</ph>和<ph id="ph2">&lt;see langword="set" /&gt;</ph>访问器<ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph>属性; 你可以根据需要重写只有一个。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> property changes.</source>
          <target state="translated">当 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> 属性的值更改时发生。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">如果将引发此事件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>通过以编程方式修改或用户交互更改属性。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>The following code example is an event handler that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是一个事件处理程序时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph2">`Changed`</ph> that are raised when the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> value changes (<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph2">`Changed`</ph>都时引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept>值发生更改 (<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>显示货币数据。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackColorChanged">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>包含<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>Gets or sets the background image displayed in the control.</source>
          <target state="translated">获取或设置在控件中显示的背景图像。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> that represents the image to display in the background of the control.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>，表示在控件背景中显示的图像。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> property to place a graphic image onto a control.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph>属性将放到控件上的图形图像。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>Images with translucent or transparent colors are not supported by Windows Forms controls as background images.</source>
          <target state="translated">不支持使用透明或透明的颜色的图像是 Windows 窗体控件的背景图像。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>This property is not supported on child controls whose <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">不支持此属性的子控件<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph>属性是<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>The following code example adds a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> to a form and sets some of its common properties.</source>
          <target state="translated">下面的代码示例将添加<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>到窗体并设置一些其通用的属性。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</source>
          <target state="translated">因此它会保留其相对位置，调整窗体的大小时，该示例将在窗体右下角该按钮定位。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>Next it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> and resizes the button to the same size as the <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">接下来，它将设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph>并调整其大小的按钮相同的大小为<ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>The example then sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> to <ph id="ph2">`true`</ph> and sets the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property.</source>
          <target state="translated">然后，示例设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph>到<ph id="ph2">`true`</ph>和设置<ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>Lastly, it adds an event handler to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event of the button.</source>
          <target state="translated">最后，它将添加事件处理程序来处理<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>该按钮的事件。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>This example requires that you have an <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> named <ph id="ph2">`imageList1`</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph>名为<ph id="ph2">`imageList1`</ph>。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph>属性在派生类中，使用基类的<ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph>属性来扩展的基实现。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">否则，你必须提供所有实现。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImage">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">你无需重写二者，<ph id="ph1">&lt;see langword="get" /&gt;</ph>和<ph id="ph2">&lt;see langword="set" /&gt;</ph>访问器<ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph>属性; 你可以根据需要重写只有一个。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> property changes.</source>
          <target state="translated">当 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> 属性的值更改时发生。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">如果将引发此事件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph>通过以编程方式修改或用户交互更改属性。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>The following code example is an event handler that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是一个事件处理程序时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph2">`Changed`</ph> that are raised when the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> value changes (<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph2">`Changed`</ph>都时引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept>值发生更改 (<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>显示货币数据。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageChanged">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>包含<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.BackgroundImageLayout">
          <source>Gets or sets the background image layout as defined in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> enumeration.</source>
          <target state="translated">获取或设置在 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> 枚举中定义的背景图像布局。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImageLayout">
          <source>One of the values of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> (<ph id="ph2">&lt;see cref="F:System.Windows.Forms.ImageLayout.Center" /&gt;</ph> , <ph id="ph3">&lt;see cref="F:System.Windows.Forms.ImageLayout.None" /&gt;</ph>, <ph id="ph4">&lt;see cref="F:System.Windows.Forms.ImageLayout.Stretch" /&gt;</ph>, <ph id="ph5">&lt;see cref="F:System.Windows.Forms.ImageLayout.Tile" /&gt;</ph>, or <ph id="ph6">&lt;see cref="F:System.Windows.Forms.ImageLayout.Zoom" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> 的值（<ph id="ph2">&lt;see cref="F:System.Windows.Forms.ImageLayout.Center" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.Windows.Forms.ImageLayout.None" /&gt;</ph>、<ph id="ph4">&lt;see cref="F:System.Windows.Forms.ImageLayout.Stretch" /&gt;</ph>、<ph id="ph5">&lt;see cref="F:System.Windows.Forms.ImageLayout.Tile" /&gt;</ph> 或 <ph id="ph6">&lt;see cref="F:System.Windows.Forms.ImageLayout.Zoom" /&gt;</ph>）之一。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImageLayout">
          <source><ph id="ph1">&lt;see cref="F:System.Windows.Forms.ImageLayout.Tile" /&gt;</ph> is the default value.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ImageLayout.Tile" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImageLayout">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> property to specify the position and behavior of an image you have placed onto a control.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph>属性指定的位置和行为的已放到控件上的映像。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImageLayout">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> takes effect only if the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> property is set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> 才会生效<ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph>属性设置。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BackgroundImageLayout">
          <source>You can increase performance for large images if you set <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> to something other than <ph id="ph2">&lt;xref:System.Windows.Forms.ImageLayout.Tile&gt;</ph>.</source>
          <target state="translated">你可以提高性能对于大型图像，如果你设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph>到以外的其他<ph id="ph2">&lt;xref:System.Windows.Forms.ImageLayout.Tile&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.BackgroundImageLayout">
          <source>The specified enumeration value does not exist.</source>
          <target state="translated">指定的枚举值不存在。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /&gt;</ph> property changes.</source>
          <target state="translated">当 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /&gt;</ph> 属性更改时发生。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph> property changes either programmatically or by user interaction.</source>
          <target state="translated">如果将引发此事件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayout%2A&gt;</ph>属性更改以编程方式或由用户交互。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged&gt;</ph> event.</source>
          <target state="translated">然后将其命名实例<ph id="ph1">`Control1`</ph>并确保与事件处理程序<ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Executes a delegate asynchronously on the thread that the control's underlying handle was created on.</source>
          <target state="translated">在创建控件的基础句柄所在线程上异步执行委托。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>A delegate to a method that takes no parameters.</source>
          <target state="translated">对不带参数的方法的委托。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>Executes the specified delegate asynchronously on the thread that the control's underlying handle was created on.</source>
          <target state="translated">在创建控件的基础句柄所在线程上异步执行指定委托。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that represents the result of the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph> operation.</source>
          <target state="translated">一个表示 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 操作的结果的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>The delegate is called asynchronously, and this method returns immediately.</source>
          <target state="translated">以异步方式调用的委托，此方法将立即返回。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>You can call this method from any thread, even the thread that owns the control's handle.</source>
          <target state="translated">你可以从任何线程，即使拥有控件的句柄的线程调用此方法。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.</source>
          <target state="translated">如果控件的句柄尚不存在，此方法搜索沿控件的父链中，直到它找到的控件或窗体具有窗口句柄。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>If no appropriate handle can be found, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> will throw an exception.</source>
          <target state="translated">如果找不到任何合适的句柄，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>将引发异常。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.</source>
          <target state="translated">此委托方法中的异常被视为未，将发送到应用程序的未捕获的异常处理程序。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>You can call <ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> to retrieve the return value from the delegate, if neccesary, but this is not required.</source>
          <target state="translated">你可以调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>如果必要，但这不是必需的委托，检索返回值。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> will block until the return value can be retrieved.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> 将阻止，直到可以检索返回值。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>Most methods on a control can only be called from the thread where the control was created.</source>
          <target state="translated">在控件上的大多数方法可以仅从调用线程已创建该控件创建。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">除了<ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph>属性，在控件上都是线程安全的四种方法： <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>，和<ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph>如果已创建控件的句柄。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph>在后台线程上创建控件的句柄之前可能会导致跨线程调用的非法。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</source>
          <target state="translated">对于所有其他方法调用，你应使用 invoke 方法之一进行封送处理对控件的线程的调用。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>The invoke methods always invoke their callbacks on the control's thread.</source>
          <target state="translated">Invoke 方法始终调用控件的线程上其回调。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>An exception might be thrown if the thread that should process the message is no longer active.</source>
          <target state="translated">如果应处理该消息的线程不再处于活动状态，则可能引发异常。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>The following code example demonstrates a use of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> method.</source>
          <target state="translated">下面的代码示例演示使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>No appropriate window handle can be found.</source>
          <target state="translated">找不到适当的窗口句柄。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">直接调用方调用非托管的代码。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>A delegate to a method that takes parameters of the same number and type that are contained in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">一个方法委托，它采用的参数的数量和类型与 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 参数中所包含的相同。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>An array of objects to pass as arguments to the given method.</source>
          <target state="translated">作为给定方法的自变量传递的对象数组。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>This can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no arguments are needed.</source>
          <target state="translated">如果不需要参数，则可以为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>Executes the specified delegate asynchronously with the specified arguments, on the thread that the control's underlying handle was created on.</source>
          <target state="translated">在创建控件的基础句柄所在线程上，用指定的自变量异步执行指定委托。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that represents the result of the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph> operation.</source>
          <target state="translated">一个表示 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 操作的结果的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>The delegate is called asynchronously, and this method returns immediately.</source>
          <target state="translated">以异步方式调用的委托，此方法将立即返回。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>You can call this method from any thread, even the thread that owns the control's handle.</source>
          <target state="translated">你可以从任何线程，即使拥有控件的句柄的线程调用此方法。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.</source>
          <target state="translated">如果控件的句柄尚不存在，此方法搜索沿控件的父链中，直到它找到的控件或窗体具有窗口句柄。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>If no appropriate handle can be found, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> will throw an exception.</source>
          <target state="translated">如果找不到任何合适的句柄，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>将引发异常。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.</source>
          <target state="translated">此委托方法中的异常被视为未，将发送到应用程序的未捕获的异常处理程序。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>You can call <ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> to retrieve the return value from the delegate, if neccesary, but this is not required.</source>
          <target state="translated">你可以调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>如果必要，但这不是必需的委托，检索返回值。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> will block until the return value can be retrieved.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> 将阻止，直到可以检索返回值。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>Most methods on a control can only be called from the thread where the control was created.</source>
          <target state="translated">在控件上的大多数方法可以仅从调用线程已创建该控件创建。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">除了<ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph>属性，在控件上都是线程安全的四种方法： <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>，和<ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph>如果已创建控件的句柄。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph>在后台线程上创建控件的句柄之前可能会导致跨线程调用的非法。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</source>
          <target state="translated">对于所有其他方法调用，你应使用 invoke 方法之一进行封送处理对控件的线程的调用。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>The invoke methods always invoke their callbacks on the control's thread.</source>
          <target state="translated">Invoke 方法始终调用控件的线程上其回调。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>An exception might be thrown if the thread that should process the message is no longer active.</source>
          <target state="translated">如果应处理该消息的线程不再处于活动状态，则可能引发异常。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>The following code example demonstrates a use of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> method.</source>
          <target state="translated">下面的代码示例演示使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
          <source>No appropriate window handle can be found.</source>
          <target state="translated">找不到适当的窗口句柄。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> for the control.</source>
          <target state="translated">获取或设置控件的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> for the control.</source>
          <target state="translated">控件的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> is used to return a single <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> for all data-bound controls contained by the <ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>用于返回单个<ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph>所包含的所有数据绑定控件<ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> keeps all controls that are bound to the same data source synchronized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph>保留绑定到同一数据源同步的所有控件。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>For example, setting the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> specifies the item in the underlying list that all data-bound controls point to.</source>
          <target state="translated">例如，设置<ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph>所有数据绑定控件所都指向的基础列表中指定的项。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>For more information about creating a new <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> and assigning it to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> property, see the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingContext.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">有关创建一个新的详细信息<ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph>和将其分配给<ph id="ph2">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph>属性，请参阅<ph id="ph3">&lt;xref:System.Windows.Forms.BindingContext.%23ctor%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>The following code example creates four <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> objects to bind five controls, a <ph id="ph2">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> and four <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls, to several data sources.</source>
          <target state="translated">下面的代码示例创建四个<ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph>对象绑定五个控件，<ph id="ph2">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph>和第四个<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>向多个数据源控件。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> is then used to get the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> for each data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph>随后用于获取<ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph>每个数据源。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph>属性在派生类中，使用基类的<ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph>属性来扩展的基实现。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">否则，你必须提供所有实现。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.BindingContext">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">你无需重写二者，<ph id="ph1">&lt;see langword="get" /&gt;</ph>和<ph id="ph2">&lt;see langword="set" /&gt;</ph>访问器<ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph>属性; 你可以根据需要重写只有一个。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.BindingContextChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> property changes.</source>
          <target state="translated">当 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> 属性的值更改时发生。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BindingContextChanged">
          <source>To add a new <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> through the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> property, see the <ph id="ph4">&lt;xref:System.Windows.Forms.BindingContext.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">若要添加新<ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph>到<ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>通过<ph id="ph3">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph>属性，请参阅<ph id="ph4">&lt;xref:System.Windows.Forms.BindingContext.%23ctor%2A&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BindingContextChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> property is changed is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">如果将引发此事件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph>属性更改通过以编程方式修改或用户交互更改。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BindingContextChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.BindingContextChanged">
          <source>The following code example adds an <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> delegate to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BindingContextChanged&gt;</ph> event of a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">下面的代码示例将添加<ph id="ph1">&lt;xref:System.EventHandler&gt;</ph>委托给<ph id="ph2">&lt;xref:System.Windows.Forms.Control.BindingContextChanged&gt;</ph>事件<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Bottom">
          <source>Gets the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</source>
          <target state="translated">获取控件下边缘与其容器的工作区上边缘之间的距离（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bottom">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 表示控件下边缘与其容器的工作区上边缘之间的距离（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bottom">
          <source>The value of this property is equal to the sum of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> property value, and the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> property value.</source>
          <target state="translated">此属性的值等于的总和<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>属性值和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>属性值。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bottom">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property is a read-only property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph>属性是只读的属性。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bottom">
          <source>You can manipulate this property value by changing the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> properties or calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetBounds%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.UpdateBounds%2A&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> methods.</source>
          <target state="translated">您可以通过更改的值来操作此属性的值<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>属性或调用<ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetBounds%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Control.UpdateBounds%2A&gt;</ph>，或<ph id="ph6">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bottom">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property to define the lower limit of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control relative to the client area of the container.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph>属性来定义的下限<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控件容器的工作区相对。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Bounds">
          <source>Gets or sets the size and location of the control including its nonclient elements, in pixels, relative to the parent control.</source>
          <target state="translated">获取或设置控件（包括其非工作区元素）相对于其父控件的大小和位置（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> in pixels relative to the parent control that represents the size and location of the control including its nonclient elements.</source>
          <target state="translated">相对于父控件的 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>，表示控件（包括其非工作区元素）的大小和位置（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bounds">
          <source>The bounds of the control include the nonclient elements such as scroll bars, borders, title bars, and menus.</source>
          <target state="translated">控件的控件边界包括如滚动条、 边框、 标题栏和菜单的非工作区元素。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bounds">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph> method is called to set the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph>方法调用来设置<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bounds">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> property is not always changed through its <ph id="ph2">`set`</ph> method so you should override the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph> method to ensure that your code is executed when the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> property is set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph>属性始终不更改通过其<ph id="ph2">`set`</ph>方法，以便应重写<ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph>方法，以确保你的代码执行时<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph>属性设置。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bounds">
          <source>The following code example creates three <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls on a form and sets their size and location by using the various size-related and location-related properties.</source>
          <target state="translated">下面的代码示例创建三个<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>窗体上控件并通过使用各种大小相关以及与位置相关属性中设置其大小和位置。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Bounds">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that has a width and height of at least 300 pixels.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>，其宽度和高度至少 300 像素。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.BringToFront">
          <source>Brings the control to the front of the z-order.</source>
          <target state="translated">将控件带到 Z 顺序的前面。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BringToFront">
          <source>The control is moved to the front of the z-order.</source>
          <target state="translated">控件移动到 z 顺序的前面。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BringToFront">
          <source>If the control is a child of another control, the child control is moved to the front of the z-order.</source>
          <target state="translated">如果控件是另一个控件的子级，则移动子控件的到 z 顺序的前面。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BringToFront">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> does not make a control a top-level control, and it does not raise the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> 执行不使控件成为顶级控件，也不会引发<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BringToFront">
          <source>The following code example ensures that a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> is visible by calling its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> method.</source>
          <target state="translated">下面的代码示例可确保<ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph>是可见的通过调用其<ph id="ph2">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.BringToFront">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> named <ph id="ph3">`panel1`</ph>, and a <ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph> named <ph id="ph5">`label1`</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>与<ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph>名为<ph id="ph3">`panel1`</ph>，和一个<ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph>名为<ph id="ph5">`label1`</ph>。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CanEnableIme">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> property can be set to an active value, to enable IME support.</source>
          <target state="translated">获取一个用以指示是否可以将 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> 属性设置为活动值的值，以启用 IME 支持。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanEnableIme">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> in all cases.</source>
          <target state="translated">在所有情况下均为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanEnableIme">
          <source>Derived classes can override this property to return <ph id="ph1">`false`</ph> if IME is not supported.</source>
          <target state="translated">派生的类可以重写此属性以返回<ph id="ph1">`false`</ph>如果 IME 不受支持。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CanFocus">
          <source>Gets a value indicating whether the control can receive focus.</source>
          <target state="translated">获取一个值，该值指示控件是否可以接收焦点。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanFocus">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control can receive focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控件可以接收焦点，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanFocus">
          <source>In order for a control to receive input focus, the control must have a handle assigned to it, and the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> properties must both be set to <ph id="ph3">`true`</ph> for both the control and all its parent controls, and the control must be a form or the control's outermost parent must be a form.</source>
          <target state="translated">在要接收输入的焦点的控件的顺序，控件必须具有向其分配、 的句柄和<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph>属性必须都设置为<ph id="ph3">`true`</ph>控件和所有父控件和控件必须是一个窗体或控件的最外层父项必须是一个窗体。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanFocus">
          <source>The following code example sets focus to the specified <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, if it can receive focus.</source>
          <target state="translated">下面的代码示例将焦点设置为指定<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如果它可以接收焦点。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CanRaiseEvents">
          <source>Determines if events can be raised on the control.</source>
          <target state="translated">确定是否可以在控件上引发事件。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanRaiseEvents">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control is hosted as an ActiveX control whose events are not frozen; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控件是作为其事件未被冻结的 ActiveX 控件承载的，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanRaiseEvents">
          <source>If this control is being hosted as an ActiveX control, this property will return <ph id="ph1">`false`</ph> if the ActiveX control has its events frozen.</source>
          <target state="translated">如果此控件要承载作为 ActiveX 控件，则此属性将返回<ph id="ph1">`false`</ph>如果 ActiveX 控件拥有冻结其事件。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CanSelect">
          <source>Gets a value indicating whether the control can be selected.</source>
          <target state="translated">获取一个值，该值指示是否可以选中控件。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanSelect">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control can be selected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控件可以选中，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanSelect">
          <source>This property returns <ph id="ph1">`true`</ph> if the <ph id="ph2">`Selectable`</ph> value of <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph4">`true`</ph>, is contained in another control, the control itself is visible and enabled, and all its parent controls are visible and enabled.</source>
          <target state="translated">此属性返回<ph id="ph1">`true`</ph>如果<ph id="ph2">`Selectable`</ph>值<ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType&gt;</ph>设置为<ph id="ph4">`true`</ph>、 包含在另一个控件，该控件本身是可见的且已启用，和所有其父控件是否可见且已启用。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanSelect">
          <source>The Windows Forms controls in the following list are not selectable and will return a value of <ph id="ph1">`false`</ph> for the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanSelect%2A&gt;</ph> property.</source>
          <target state="translated">以下列表中的 Windows 窗体控件不是可选择并将返回的值<ph id="ph1">`false`</ph>为<ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanSelect%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanSelect">
          <source>Controls derived from these controls are also not selectable.</source>
          <target state="translated">派生自这些控件的控件也是不可选的。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanSelect">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (when there is no link present in the control)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> （当不存在控件中的链接）</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CanSelect">
          <source>The following code example selects the specified <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, if it is selectable.</source>
          <target state="translated">下面的代码示例选择指定<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如果它是可选择。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Capture">
          <source>Gets or sets a value indicating whether the control has captured the mouse.</source>
          <target state="translated">获取或设置一个值，该值指示控件是否已捕获鼠标。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control has captured the mouse; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控件已捕获鼠标，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>When a control has captured the mouse, it receives mouse input whether or not the cursor is within its borders.</source>
          <target state="translated">当控件已捕获鼠标时，它指示光标在其边框内将接收鼠标输入。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>The mouse is typically only captured during drag operations.</source>
          <target state="translated">在拖动操作期间通常仅捕获了鼠标。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>Only the foreground window can capture the mouse.</source>
          <target state="translated">只有前台窗口可以捕获鼠标。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>When a background window attempts to do so, the window receives messages only for mouse events that occur when the mouse cursor is within the visible portion of the window.</source>
          <target state="translated">当后台窗口尝试这样做时，窗口只接收的消息时发生鼠标光标位于窗口的可见部分的鼠标事件。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>Also, even if the foreground window has captured the mouse, the user can still click another window, bringing it to the foreground.</source>
          <target state="translated">此外，即使前景窗口已捕获鼠标，用户仍可以单击另一个窗口，使其变为前台。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>When the mouse is captured, shortcut keys should not work.</source>
          <target state="translated">当捕获鼠标时，不应处理键盘快捷方式。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Capture%2A&gt;</ph> property.</source>
          <target state="translated">下面的代码示例演示<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Capture%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>To run this example paste the following code in a form containing a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> named label1 and two <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls named listbox1 and listbox2.</source>
          <target state="translated">若要运行此示例，请粘贴下面的代码中一个窗体包含<ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph>label1 和第二个名为<ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>控件名为 listbox1 和 listbox2。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>Ensure the form and controls' <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event is associated with the method in this example.</source>
          <target state="translated">确保窗体和控件的<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>事件是与此示例中的方法相关联。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>for all windows to set this property value.</source>
          <target state="translated">若要设置此属性的值的所有窗口。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Capture">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>Gets or sets a value indicating whether the control causes validation to be performed on any controls that require validation when it receives focus.</source>
          <target state="translated">获取或设置一个值，该值指示控件是否会引起在任何需要在接收焦点时执行验证的控件上执行验证。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control causes validation to be performed on any controls requiring validation when it receives focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控件引起在任何需要在接收焦点时执行验证的控件上执行验证，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph>属性设置为<ph id="ph2">`false`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>和<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph>事件将被抑制。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property value is typically set to <ph id="ph2">`false`</ph> for controls such as a Help button.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph>属性值通常设置为<ph id="ph2">`false`</ph>控件如帮助按钮。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>The following code example uses the derived class <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and validates an email address that the user enters.</source>
          <target state="translated">下面的代码示例使用派生的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>并验证用户输入的电子邮件地址。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>If the email address is not in the standard format (containing "<ph id="ph1">@" and "</ph>."), the validation fails, an <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> icon is displayed, and the event is canceled.</source>
          <target state="translated">如果电子邮件地址不是标准的格式 (包含"<ph id="ph1">@" and "</ph>。")，则验证将失败，<ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph>图标会显示，并且取消了该事件。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>One of the buttons on the form has its <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">窗体上的按钮之一具有其<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph>属性设置为<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>Clicking or setting focus to this button does not trigger validation.</source>
          <target state="translated">单击或将焦点设置到此按钮不会触发验证。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CausesValidation">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, an <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> control, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> have been created on a form.</source>
          <target state="translated">此示例需要<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、<ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph>控件，和一个<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>已在窗体上创建。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.CausesValidationChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.CausesValidation" /&gt;</ph> property changes.</source>
          <target state="translated">当 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.CausesValidation" /&gt;</ph> 属性的值更改时发生。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CausesValidationChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">如果将引发此事件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph>通过以编程方式修改或用户交互更改属性。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CausesValidationChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>Occurs when the focus or keyboard user interface (UI) cues change.</source>
          <target state="translated">焦点或键盘用户界面 (UI) 提示更改时发生。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ChangeUICues&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ChangeUICues&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ChangeUICues">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ChangeUICues&gt;</ph> event.</source>
          <target state="translated">然后将其命名实例<ph id="ph1">`Control1`</ph>并确保与事件处理程序<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ChangeUICues&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls">
          <source>Gets or sets a value indicating whether to catch calls on the wrong thread that access a control's <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Handle" /&gt;</ph> property when an application is being debugged.</source>
          <target state="translated">获取或设置一个值，该值指示是否捕获对错误线程的调用，这些调用在调试应用程序时访问控件的 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Handle" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if calls on the wrong thread are caught; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果捕获了对错误线程的调用，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls">
          <source>When a thread other than the creating thread of a control tries to access one of that control's methods or properties, it often leads to unpredictable results.</source>
          <target state="translated">当创建控件的线程的线程尝试访问该控件的方法或属性之一时，它通常会导致不可预知的结果。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls">
          <source>A common invalid thread activity is a call on the wrong thread that accesses the control's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> property.</source>
          <target state="translated">通常，无效的线程活动是访问控件的对错误线程的调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls">
          <source>Set <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls%2A&gt;</ph> to <ph id="ph2">`true`</ph> to find and diagnose this thread activity more easily while debugging.</source>
          <target state="translated">设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls%2A&gt;</ph>到<ph id="ph2">`true`</ph>来查找和在调试时更轻松地诊断此线程活动。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Click">
          <source>Occurs when the control is clicked.</source>
          <target state="translated">在单击控件时发生。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event passes an <ph id="ph2">&lt;xref:System.EventArgs&gt;</ph> to its event handler, so it only indicates that a click has occurred.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>事件传递<ph id="ph2">&lt;xref:System.EventArgs&gt;</ph>给其事件处理程序中，因此它仅指示发生了单击操作。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>If you need more specific mouse information (button, number of clicks, wheel rotation, or location), use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.</source>
          <target state="translated">如果需要更具体的鼠标信息 （按钮、 单击、 鼠标轮旋转或位置的数），使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>However, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event will not be raised if the click is caused by action other than that of the mouse, such as pressing the ENTER key.</source>
          <target state="translated">但是，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph>如果单击引起操作不是鼠标，如按 ENTER 键操作，将不会引发事件。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>A double-click is determined by the mouse settings of the user's operating system.</source>
          <target state="translated">由用户的操作系统的鼠标设置确定一次双击。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</source>
          <target state="translated">用户可以设置两次单击鼠标按钮之间的时间以便将这两次单击认为是双击而不是两次单击。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event is raised every time a control is double-clicked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>每次双击控件时引发事件。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>For example, if you have event handlers for the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> events of a <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>, the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> events are raised when the form is double-clicked and both methods are called.</source>
          <target state="translated">例如，如果你有事件处理程序<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>的事件<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>、<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>和<ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>双击窗体，这两种方法调用时将引发事件。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>If a control is double-clicked and that control does not support the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event might be raised twice.</source>
          <target state="translated">如果双击控件时，控件不支持<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>事件，<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>事件，可能会引发两次。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>You must set the <ph id="ph1">`StandardClick`</ph> value of <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> to <ph id="ph3">`true`</ph> for this event to be raised.</source>
          <target state="translated">必须设置<ph id="ph1">`StandardClick`</ph>值<ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>到<ph id="ph3">`true`</ph>会引发此事件。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">不会引发以下事件<ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>类，除非没有至少一个<ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>中<ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph>集合： <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>， <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>， <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>， <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>， <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>，<ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph>和<ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">如果没有至少一个<ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>在集合中，以及用户与选项卡控件的标头进行交互 (其中<ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>名称显示)，则<ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>引发相应的事件。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">但是，如果用户交互的选项卡页中，客户端区域内<ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>引发相应的事件。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>The following code example shows the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event in an event handler.</source>
          <target state="translated">下面的代码示例演示<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>事件处理程序中的事件。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>Inheriting from a standard Windows Forms control and changing the <ph id="ph1">&lt;see langword="StandardClick" /&gt;</ph> or <ph id="ph2">&lt;see langword="StandardDoubleClick" /&gt;</ph> values of <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> to <ph id="ph4">&lt;see langword="true" /&gt;</ph> can cause unexpected behavior or have no effect at all if the control does not support the <ph id="ph5">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> or <ph id="ph6">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> events.</source>
          <target state="translated">从标准 Windows 窗体控件继承和更改<ph id="ph1">&lt;see langword="StandardClick" /&gt;</ph>或<ph id="ph2">&lt;see langword="StandardDoubleClick" /&gt;</ph>值<ph id="ph3">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph>到<ph id="ph4">&lt;see langword="true" /&gt;</ph>可以导致意外的行为，或者根本产生任何影响，如果控件不支持<ph id="ph5">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph>或<ph id="ph6">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>The following table lists Windows Forms controls and which event (<ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph>) is raised in response to the mouse action specified.</source>
          <target state="translated">下表列出了 Windows 窗体控件和哪些事件 (<ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph>或<ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph>) 在指定的鼠标操作的响应中引发。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Control</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 控件</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Left Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击鼠标左键</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Left Mouse Double Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 鼠标双击</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Right Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 鼠标右键单击</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Right Mouse Double Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 双击鼠标右键</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Middle Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 鼠标单击</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Middle Mouse Double Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 鼠标双击</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton1 Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton1 鼠标单击</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton1 Mouse Double-Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 双击 XButton1 鼠标</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton2 Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton2 鼠标单击</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton2 Mouse Double-Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton2 鼠标双击</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.MonthCalendar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.MonthCalendar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DateTimePicker" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DateTimePicker" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.HScrollBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.HScrollBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.VScrollBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.VScrollBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RichTextBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RichTextBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RadioButton" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RadioButton" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击，然后单击</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckedListBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckedListBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击、 双击</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.TextBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.TextBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DomainUpDown" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DomainUpDown" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.NumericUpDown" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.NumericUpDown" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击、 双击</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5"> * </ph><ph id="ph6">&lt;see cref="T:System.Windows.Forms.TreeView" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5"> * </ph><ph id="ph6">&lt;see cref="T:System.Windows.Forms.TreeView" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">\*</ph> <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ListView" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">\*</ph> <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ListView" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击、 双击</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击、 双击</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ProgressBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ProgressBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TrackBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TrackBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击，然后单击</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击，然后单击</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击，然后单击</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击，然后单击</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击，然后单击</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Label" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Label" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.LinkLabel" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.LinkLabel" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Panel" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Panel" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.GroupBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.GroupBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.PictureBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.PictureBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Splitter" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Splitter" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.StatusBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.StatusBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ToolBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ToolBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">** </ph><ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">** </ph><ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击、 双击</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击、 双击</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击、 双击</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击、 双击</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击、 双击</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source><ph id="ph1">\*</ph> The mouse pointer must be over a child object (<ph id="ph2">&lt;see cref="T:System.Windows.Forms.TreeNode" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ListViewItem" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">\*</ph> 鼠标指针必须位于子对象 (<ph id="ph2">&lt;see cref="T:System.Windows.Forms.TreeNode" /&gt;</ph>或<ph id="ph3">&lt;see cref="T:System.Windows.Forms.ListViewItem" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Click">
          <source>** The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph> must have at least one <ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph> in its <ph id="ph3">&lt;see cref="P:System.Windows.Forms.TabControl.TabPages" /&gt;</ph> collection.</source>
          <target state="translated">* *<ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph>必须至少一个<ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph>中其<ph id="ph3">&lt;see cref="P:System.Windows.Forms.TabControl.TabPages" /&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>Gets the rectangle that represents the client area of the control.</source>
          <target state="translated">获取表示控件的工作区的矩形。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the client area of the control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>，它表示控件的工作区。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus.</source>
          <target state="translated">控件的客户端区域是该控件，减去如滚动条、 边框、 标题栏和菜单非工作区元素的边界。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>Because client coordinates are relative to the upper-left corner of the client area of the control, the coordinates of the upper-left corner of the rectangle returned by this property are (0,0).</source>
          <target state="translated">由于客户端坐标相对于控件的客户端区域的左上角，此属性返回的矩形的左上角的坐标为 (0，0)。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>You can use this property to obtain the size and coordinates of the client area of the control for tasks such as drawing on the surface of the control.</source>
          <target state="translated">此属性可用于获取的大小和任务，例如在控件的图面上绘制的控件的客户端区域的坐标。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>For more information about drawing on controls, see <bpt id="p1">[</bpt>Rendering a Windows Forms Control<ept id="p1">](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)</ept>.</source>
          <target state="translated">在控件上绘制的详细信息，请参阅<bpt id="p1">[</bpt>呈现 Windows 窗体控件<ept id="p1">](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)</ept>。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>The following code example enables auto-scrolling for a form, resizes the form, and ensures that a button remains visible after the form is resized.</source>
          <target state="translated">下面的代码示例启用窗体的自动滚动，调整窗体，并确保按钮在窗体调整后仍然保持可见。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientRectangle">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> named <ph id="ph3">`button2`</ph> on it.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>与<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>名为<ph id="ph3">`button2`</ph>在其上。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>Gets or sets the height and width of the client area of the control.</source>
          <target state="translated">获取或设置控件的工作区的高度和宽度。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the dimensions of the client area of the control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>，表示控件的工作区的维数。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus.</source>
          <target state="translated">控件的客户端区域是该控件，减去如滚动条、 边框、 标题栏和菜单非工作区元素的边界。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> method is called to set the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph>方法调用来设置<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> property is not always changed through its <ph id="ph2">`set`</ph> method so you should override the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> method to ensure that your code is executed when the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> property is set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph>属性始终不更改通过其<ph id="ph2">`set`</ph>方法，以便应重写<ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph>方法，以确保你的代码执行时<ph id="ph4">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph>属性设置。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Size.Width%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Size.Height%2A?displayProperty=nameWithType&gt;</ph> properties represent the width and height of the client area of the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Size.Width%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Drawing.Size.Height%2A?displayProperty=nameWithType&gt;</ph>属性表示的宽度和高度的控件的工作区。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>You can use this property to obtain the size of the client area of the control for tasks such as drawing on the surface of the control.</source>
          <target state="translated">可以使用此属性以获取有关任务，例如在控件的图面上绘制控件的客户端区域的大小。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>For more information about drawing on controls, see <bpt id="p1">[</bpt>Rendering a Windows Forms Control<ept id="p1">](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)</ept>.</source>
          <target state="translated">在控件上绘制的详细信息，请参阅<bpt id="p1">[</bpt>呈现 Windows 窗体控件<ept id="p1">](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)</ept>。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>You cannot bind application settings to this property.</source>
          <target state="translated">无法将应用程序设置绑定到此属性。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>For more information on application settings, see <bpt id="p1">[</bpt>Application Settings Overview<ept id="p1">](~/docs/framework/winforms/advanced/application-settings-overview.md)</ept>.</source>
          <target state="translated">应用程序设置的详细信息，请参阅<bpt id="p1">[</bpt>应用程序设置概述<ept id="p1">](~/docs/framework/winforms/advanced/application-settings-overview.md)</ept>。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>The following code example resizes the specified control so the control will accommodate its formatted text.</source>
          <target state="translated">下面的代码示例调整大小时指定的控件，因此该控件能够容纳带格式的文本。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>The formatted text is the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property with the control's assigned <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> applied to the text.</source>
          <target state="translated">格式化的文本是<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>与该控件的属性的分配<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph>应用于文本。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>The <ph id="ph1">`AutoSizeControl`</ph> method in this example also has a <ph id="ph2">`textPadding`</ph> parameter that represents the padding to apply to all edges of the control.</source>
          <target state="translated"><ph id="ph1">`AutoSizeControl`</ph>在此示例中的方法还具有<ph id="ph2">`textPadding`</ph>表示要应用于控件的所有边缘的填充的参数。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ClientSize">
          <source>To make the padding appear equal, align the text with the <ph id="ph1">&lt;xref:System.Drawing.ContentAlignment.MiddleCenter?displayProperty=nameWithType&gt;</ph> value, if your control supports it.</source>
          <target state="translated">若要使边距相等，请将与文本对齐<ph id="ph1">&lt;xref:System.Drawing.ContentAlignment.MiddleCenter?displayProperty=nameWithType&gt;</ph>值，如果控件支持它。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ClientSize" /&gt;</ph> property changes.</source>
          <target state="translated">当 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ClientSize" /&gt;</ph> 属性的值更改时发生。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ClientSizeChanged&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ClientSizeChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ClientSizeChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ClientSizeChanged&gt;</ph> event.</source>
          <target state="translated">然后将其命名实例<ph id="ph1">`Control1`</ph>并确保与事件处理程序<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ClientSizeChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>Gets the name of the company or creator of the application containing the control.</source>
          <target state="translated">获取包含控件的应用程序的公司名称或创建者。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>The company name or creator of the application containing the control.</source>
          <target state="translated">包含控件的应用程序的公司名称或创建者。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph> property is a read-only property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph>属性是只读的属性。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>To change the value of this property, set the <ph id="ph1">&lt;xref:System.Reflection.AssemblyCompanyAttribute.Company%2A&gt;</ph> property value of the <ph id="ph2">&lt;xref:System.Reflection.AssemblyCompanyAttribute&gt;</ph>.</source>
          <target state="translated">若要更改此属性的值，设置<ph id="ph1">&lt;xref:System.Reflection.AssemblyCompanyAttribute.Company%2A&gt;</ph>属性值<ph id="ph2">&lt;xref:System.Reflection.AssemblyCompanyAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>The following line of C# code sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph> property.</source>
          <target state="translated">下面的 C# 代码集行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>It is strongly recommended that you provide the company name, product name, and product version for your app.</source>
          <target state="translated">强烈建议为你的应用程序提供的公司名称、 产品名称和产品版本。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>The following code example displays information about the application in a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> contained by a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">下面的代码示例显示有关中的应用程序的信息<ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph>包含<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CompanyName">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> have been set.</source>
          <target state="translated">此示例需要<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph>，<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph>已设置。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to evaluate.</source>
          <target state="translated">要计算的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)">
          <source>Retrieves a value indicating whether the specified control is a child of the control.</source>
          <target state="translated">检索一个值，该值指示指定控件是否为一个控件的子控件。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified control is a child of the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定控件是控件的子控件，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)">
          <source>The following code example ensures that a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> is visible by calling its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> method.</source>
          <target state="translated">下面的代码示例可确保<ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph>是可见的通过调用其<ph id="ph2">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> named <ph id="ph3">`panel1`</ph>, and a <ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph> named <ph id="ph5">`label1`</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>与<ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph>名为<ph id="ph3">`panel1`</ph>，和一个<ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph>名为<ph id="ph5">`label1`</ph>。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ContainsFocus">
          <source>Gets a value indicating whether the control, or one of its child controls, currently has the input focus.</source>
          <target state="translated">获取一个值，该值指示控件或它的一个子控件当前是否有输入焦点。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContainsFocus">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control or one of its child controls currently has the input focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控件或它的一个子控件当前已经有输入焦点，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContainsFocus">
          <source>You can use this property to determine whether a control or any of the controls contained within it has the input focus.</source>
          <target state="translated">此属性可用于确定控件或任何它所包含的控件是否具有输入的焦点。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContainsFocus">
          <source>To determine whether the control has focus, regardless of whether any of its child controls have focus, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focused%2A&gt;</ph> property.</source>
          <target state="translated">若要确定是否在控件有焦点，而不考虑任何子控件是否有焦点，使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focused%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContainsFocus">
          <source>To give a control the input focus, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> methods.</source>
          <target state="translated">若要为控件提供输入的焦点，请使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>Gets or sets the shortcut menu associated with the control.</source>
          <target state="translated">获取或设置与控件关联的快捷菜单。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph> that represents the shortcut menu associated with the control.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph>，表示与控件关联的快捷菜单。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>Use a shortcut menus to give context-specific menu options to users when they right-click on the control.</source>
          <target state="translated">使用快捷菜单在向用户提供特定于上下文菜单选项，当它们在控件上右键单击时。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>The following code example displays the <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> assigned to a <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> when the right mouse button is clicked and released.</source>
          <target state="translated">下面的代码示例显示<ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>分配给<ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph>时单击并释放鼠标右键按钮。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>This code requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> on it.</source>
          <target state="translated">此代码，你需要具有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>与<ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph>在其上。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>It is also required that the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> has a <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> assigned to its <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> property.</source>
          <target state="translated">另外，也需要的<ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph>具有<ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>分配给其<ph id="ph3">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph>属性在派生类中，使用基类的<ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph>属性来扩展的基实现。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">否则，你必须提供所有实现。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenu">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">你无需重写二者，<ph id="ph1">&lt;see langword="get" /&gt;</ph>和<ph id="ph2">&lt;see langword="set" /&gt;</ph>访问器<ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph>属性; 你可以根据需要重写只有一个。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ContextMenuChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph> property changes.</source>
          <target state="translated">当 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ContextMenu" /&gt;</ph> 属性的值更改时发生。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">如果将引发此事件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph>通过以编程方式修改或用户交互更改属性。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuChanged">
          <source>The following code example displays a message when a change occurs to the shortcut menu.</source>
          <target state="translated">下面的代码示例显示一条消息到快捷菜单发生更改时。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ContextMenuStrip">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenuStrip" /&gt;</ph> associated with this control.</source>
          <target state="translated">获取或设置与此控件关联的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenuStrip" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenuStrip">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenuStrip" /&gt;</ph> for this control, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there is no <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ContextMenuStrip" /&gt;</ph>.</source>
          <target state="translated">该控件的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContextMenuStrip" /&gt;</ph>；如果没有 <ph id="ph2">&lt;see langword="null" /&gt;</ph>，则为 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ContextMenuStrip" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenuStrip">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenuStrip">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> has also been assigned to the control, the <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> takes precedence over the <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>也已分配给该控件，<ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>优先于<ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenuStrip">
          <source>The following code example demonstrates how to add three <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripMenuItem&gt;</ph> objects to a <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示如何添加三个<ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripMenuItem&gt;</ph>对象添加到<ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ContextMenuStrip">
          <source>In addition it demonstrates setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ContextMenuStrip%2A&gt;</ph> property of the form.</source>
          <target state="translated">此外，它演示如何设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ContextMenuStrip%2A&gt;</ph>窗体的属性。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /&gt;</ph> property changes.</source>
          <target state="translated">当 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /&gt;</ph> 属性的值更改时发生。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ContextMenuStripChanged&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ContextMenuStripChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ContextMenuStripChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ContextMenuStripChanged&gt;</ph> event.</source>
          <target state="translated">然后将其命名实例<ph id="ph1">`Control1`</ph>并确保与事件处理程序<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ContextMenuStripChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ControlAdded">
          <source>Occurs when a new control is added to the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph>.</source>
          <target state="translated">在将新控件添加到 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph> 时发生。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ControlAdded">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ControlAdded">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAdded&gt;</ph> to add a control to a form and displays the name of the added control in a <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAdded&gt;</ph>控件添加到窗体，并显示所添加的控件中的名称<ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ControlRemoved">
          <source>Occurs when a control is removed from the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph>.</source>
          <target state="translated">在从 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph> 移除控件时发生。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ControlRemoved">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ControlRemoved">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlRemoved&gt;</ph> to remove a control from a form and displays the name of the removed control in a <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlRemoved&gt;</ph>以从窗体中移除的控件，并显示中移除的控件的名称<ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Controls">
          <source>Gets the collection of controls contained within the control.</source>
          <target state="translated">获取包含在控件内的控件的集合。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph> representing the collection of controls contained within the control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph>，它表示控件内包含的控件的集合。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> can act as a parent to a collection of controls.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>可以充当控件的集合的父级。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>For example, when several controls are added to a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, each of the controls is a member of the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> assigned to the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> property of the form, which is derived from the <ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph> class.</source>
          <target state="translated">例如，当多个控件添加到<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>，每个控件为属于<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>分配给<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>派生自该窗体的属性<ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>You can manipulate the controls in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> assigned to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> property by using the methods available in the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> class.</source>
          <target state="translated">你可以操作中的控件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>分配给<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>通过使用提供的方法的属性<ph id="ph3">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>When adding several controls to a parent control, it is recommended that you call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method before initializing the controls to be added.</source>
          <target state="translated">在多个控件添加到父控件时，建议您调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph>方法之前初始化要添加的控件。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>After adding the controls to the parent control, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method.</source>
          <target state="translated">在将控件添加到父控件之后, 调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>Doing so will increase the performance of applications with many controls.</source>
          <target state="translated">这样会增加有许多控件的应用程序的性能。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> property to iterate through all controls of a form, including nested controls.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>属性来循环访问所有控件的窗体中，包括嵌套的控件。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetNextControl%2A&gt;</ph> method to retrieve the previous or next child control in the tab order.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetNextControl%2A&gt;</ph>方法来检索上一页或下一页子控件的 tab 键顺序。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> property to get or set the active control of a container control.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph>属性来获取或设置容器控件的活动控件。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>The following code example removes a <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> from the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> of the derived class <ph id="ph3">&lt;xref:System.Windows.Forms.Panel&gt;</ph> if it is a member of the collection.</source>
          <target state="translated">下面的代码示例中删除<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>从<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>派生的类的<ph id="ph3">&lt;xref:System.Windows.Forms.Panel&gt;</ph>如果它是集合的成员。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>The example requires that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>, a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>, and at least one <ph id="ph3">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> control on a <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">该示例需要你已创建了<ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>，且至少一个<ph id="ph3">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph>控制上<ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> control(s) are added to the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> control, and the <ph id="ph3">&lt;xref:System.Windows.Forms.Panel&gt;</ph> control added to the <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph>控件添加到<ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph>控件，与<ph id="ph3">&lt;xref:System.Windows.Forms.Panel&gt;</ph>控件添加到<ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Controls">
          <source>When the button is clicked, the radio button named <ph id="ph1">`removeButton`</ph> is removed from the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>.</source>
          <target state="translated">单选按钮时单击该按钮，名为<ph id="ph1">`removeButton`</ph>从删除<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>Creates a new accessibility object for the control.</source>
          <target state="translated">为该控件创建一个新的辅助功能对象。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> for the control.</source>
          <target state="translated">控件的新 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>If you do not explicitly call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> method, it will be called when the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt;</ph> property is referenced.</source>
          <target state="translated">如果不显式调用 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> 方法，则在引用 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt;</ph> 属性时将会调用此方法。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>To get or set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt;</ph> property, you must add a reference to the <ph id="ph2">`Accessibility`</ph> assembly installed with the <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">要获取或设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.AccessibilityObject%2A&gt;</ph>属性，必须添加对引用<ph id="ph2">`Accessibility`</ph>与安装程序集<ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>The following code example demonstrates the creation of an accessibility-aware chart control, using the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph> classes to expose accessible information.</source>
          <target state="translated">下面的代码示例演示如何创建一个具有辅助功能的图表控件，并使用<ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph>类来公开可访问的信息。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>The control plots two curves along with a legend.</source>
          <target state="translated">该控件绘制图例以及两条曲线。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>The <ph id="ph1">`ChartControlAccessibleObject`</ph> class, which derives from <ph id="ph2">`ControlAccessibleObject`</ph>, is used in the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> method to provide custom accessible information for the chart control.</source>
          <target state="translated"><ph id="ph1">`ChartControlAccessibleObject`</ph>类，该类派生自<ph id="ph2">`ControlAccessibleObject`</ph>，在使用<ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph>方法以提供为图表控件的自定义可访问的信息。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>Since the chart legend is not an actual <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> -based control, but instead is drawn by the chart control, it does not any built-in accessible information.</source>
          <target state="translated">因为图表图例不是实际<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>-基于控制，但改为绘制图表控件中，通过它不提供任何内置的可访问信息。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>Because of this, the <ph id="ph1">`ChartControlAccessibleObject`</ph> class overrides the <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleObject.GetChild%2A&gt;</ph> method to return the <ph id="ph3">`CurveLegendAccessibleObject`</ph> that represents accessible information for each part of the legend.</source>
          <target state="translated">因此，<ph id="ph1">`ChartControlAccessibleObject`</ph>类重写<ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleObject.GetChild%2A&gt;</ph>方法以返回<ph id="ph3">`CurveLegendAccessibleObject`</ph>，表示将图例的每个部分的访问信息。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>When an accessible-aware application uses this control, the control can provide the necessary accessible information.</source>
          <target state="translated">当辅助功能的应用程序使用此控件时，该控件可以提供所需的可访问信息。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>This code excerpt demonstrates overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> method.</source>
          <target state="translated">此代码片段演示如何重写<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> class overview for the complete code example.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph>完整的代码示例的类概述。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /&gt;</ph> in a derived class, do not call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /&gt;</ph>在派生类中，请勿调用基类的<ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateControl">
          <source>Forces the creation of the visible control, including the creation of the handle and any visible child controls.</source>
          <target state="translated">强制创建可见控件，包括创建句柄和任何可见子控件。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateControl">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateControl%2A&gt;</ph> method forces a handle to be created for the control and its child controls.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateControl%2A&gt;</ph>方法强制要创建的控件及其子控件的句柄。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateControl">
          <source>This method is used when you need a handle immediately for manipulation of the control or its children; simply calling a control's constructor does not create the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph>.</source>
          <target state="translated">当需要一个句柄立即进行操作的控件或其子项; 使用此方法只需调用控件的构造函数不会创建<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateControl">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateControl%2A&gt;</ph> does not create a control handle if the control's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property is <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateControl%2A&gt;</ph> 不会创建控件句柄，如果控件的<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph>属性是<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateControl">
          <source>You can either call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> method or access the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> property to create the control's handle regardless of the control's visibility, but in this case, no window handles are created for the control's children.</source>
          <target state="translated">可以通过调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph>方法或访问<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph>要创建控件的属性处理而不考虑控件的可见性，但在此情况下，为控件的子级创建句柄没有窗口。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateControlsInstance">
          <source>Creates a new instance of the control collection for the control.</source>
          <target state="translated">为控件创建控件集合的新实例。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateControlsInstance">
          <source>A new instance of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph> assigned to the control.</source>
          <target state="translated">分配给控件的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph> 的新实例。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateControlsInstance">
          <source>The base class version of this method should not be called by a derived class.</source>
          <target state="translated">不应由派生类中调用此方法的基类版本。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Created">
          <source>Gets a value indicating whether the control has been created.</source>
          <target state="translated">获取一个值，该值指示控件是否已经创建。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Created">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control has been created; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已创建控件，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Created">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Created%2A&gt;</ph> property returns <ph id="ph2">`true`</ph> if the <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> was successfully created even though the control's handle might not have been created or recreated yet.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Created%2A&gt;</ph>属性返回<ph id="ph2">`true`</ph>如果<ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph>即使控件的句柄可能尚未创建或尚未重新创建已成功创建。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>Creates the <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for the control.</source>
          <target state="translated">为控件创建 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for the control.</source>
          <target state="translated">控件的 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object that you retrieve through the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> method should not normally be retained after the current Windows message has been processed, because anything painted with that object will be erased with the next WM_PAINT message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>检索到的对象<ph id="ph2">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph>方法应不通常会保留后当前的 Windows 消息已处理，因为与该对象的任何内容将被删除下, 一步 WM_PAINT 消息。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>Therefore you cannot cache the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object for reuse, except to use non-visual methods like <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">因此无法缓存<ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>对象以重用，除非若要使用非可视方法，如<ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>Instead, you must call <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> every time that you want to use the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> object, and then call <ph id="ph3">&lt;xref:System.Drawing.Graphics.Dispose%2A&gt;</ph> when you are finished using it.</source>
          <target state="translated">相反，您必须调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph>你想要使用每次<ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>对象，，然后调用<ph id="ph3">&lt;xref:System.Drawing.Graphics.Dispose%2A&gt;</ph>在完成使用它时。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>For more information about Windows messages, see <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph>.</source>
          <target state="translated">有关 Windows 消息的详细信息，请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>By design, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> sets ownership to the calling thread, and fails if it is called on other threads.</source>
          <target state="translated">按照设计，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph>将所有权设置为调用线程，并且如果在其他线程上调用将失败。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">除了<ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph>属性，在控件上都是线程安全的四种方法： <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>，和<ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph>如果已创建控件的句柄。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph>在后台线程上创建控件的句柄之前可能会导致跨线程调用的非法。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</source>
          <target state="translated">对于所有其他方法调用，你应使用 invoke 方法之一进行封送处理对控件的线程的调用。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>The following code example resizes the specified control so the control will accommodate its formatted text.</source>
          <target state="translated">下面的代码示例调整大小时指定的控件，因此该控件能够容纳带格式的文本。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>The formatted text is the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property with the control's assigned <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> applied to the text.</source>
          <target state="translated">格式化的文本是<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>与该控件的属性的分配<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph>应用于文本。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>The <ph id="ph1">`AutoSizeControl`</ph> method in this example also has a <ph id="ph2">`textPadding`</ph> parameter that represents the padding to apply to all edges of the control.</source>
          <target state="translated"><ph id="ph1">`AutoSizeControl`</ph>在此示例中的方法还具有<ph id="ph2">`textPadding`</ph>表示要应用于控件的所有边缘的填充的参数。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>To make the padding appear equal, align the text with the <ph id="ph1">`MiddleCenter`</ph> value of <ph id="ph2">&lt;xref:System.Drawing.ContentAlignment?displayProperty=nameWithType&gt;</ph> if your control supports it.</source>
          <target state="translated">若要使边距相等，请将与文本对齐<ph id="ph1">`MiddleCenter`</ph>值<ph id="ph2">&lt;xref:System.Drawing.ContentAlignment?displayProperty=nameWithType&gt;</ph>如果控件支持它。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>for safe subwindows to call this method.</source>
          <target state="translated">用于安全子窗口调用此方法。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateGraphics">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="SafeSubWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see langword="SafeSubWindows" /&gt;</ph>值<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateHandle">
          <source>Creates a handle for the control.</source>
          <target state="translated">为该控件创建句柄。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateHandle">
          <source>You typically should not call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> method directly.</source>
          <target state="translated">你通常不应调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph>直接的方法。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateHandle">
          <source>The preferred method is to call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateControl%2A&gt;</ph> method, which forces a handle to be created for the control and its child controls when the control is created.</source>
          <target state="translated">首选的方法是调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateControl%2A&gt;</ph>方法，这会强制创建控件时，要创建的控件及其子控件的句柄。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.CreateHandle">
          <source>The object is in a disposed state.</source>
          <target state="translated">对象处于被释放状态。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateHandle">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">为用于继承类来调用此方法的所有窗口。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateHandle">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph>值<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.CreateHandle">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateHandle" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.CreateHandle" /&gt;</ph> method to ensure that the handle is created.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateHandle" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.CreateHandle" /&gt;</ph>方法，以确保已创建了句柄。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>Gets the required creation parameters when the control handle is created.</source>
          <target state="translated">获取创建控件句柄时所需要的创建参数。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> that contains the required creation parameters when the handle to the control is created.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph>，包含创建控件的句柄时所需的创建参数。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> property should not be overridden and used to adjust the properties of your derived control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph>属性不应重写，用于调整派生控件的属性。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>Properties such as the <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=nameWithType&gt;</ph> should be set by the corresponding properties in your control such as <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Text%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Width%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Height%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">属性，如<ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=nameWithType&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=nameWithType&gt;</ph>，和<ph id="ph3">&lt;xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=nameWithType&gt;</ph>应设置在控件中的相应属性如<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Text%2A?displayProperty=nameWithType&gt;</ph>，<ph id="ph5">&lt;xref:System.Windows.Forms.Control.Width%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph6">&lt;xref:System.Windows.Forms.Control.Height%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams&gt;</ph> should only be extended when you are wrapping a standard Windows control class or to set styles not provided by the Windows Forms namespace.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams&gt;</ph>包装标准 Windows 控件类或设置样式不是由 Windows 窗体命名空间时才应扩展。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>For more information about creating control parameters, see the <ph id="ph1">`CreateWindow`</ph> and <ph id="ph2">`CreateWindowEx`</ph> functions and the <bpt id="p1">[</bpt>CREATESTRUCT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632603.aspx)</ept>structure documentation.</source>
          <target state="translated">有关创建控制参数的详细信息，请参阅<ph id="ph1">`CreateWindow`</ph>和<ph id="ph2">`CreateWindowEx`</ph>函数和<bpt id="p1">[</bpt>CREATESTRUCT<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632603.aspx)</ept>结构文档。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>The following code example extends the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> derived class.</source>
          <target state="translated">下面的代码示例扩展<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>派生类。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=nameWithType&gt;</ph> property is changed, which causes the button to display an <ph id="ph2">&lt;xref:System.Drawing.Icon&gt;</ph> rather than an <ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=nameWithType&gt;</ph>属性更改，这将导致按钮以显示<ph id="ph2">&lt;xref:System.Drawing.Icon&gt;</ph>而非<ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>This example requires that you have a class that inherits from the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有从继承的类<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>for the immediate caller to call unmanaged code when getting the property value.</source>
          <target state="translated">直接调用方调用非托管的代码时获取的属性值。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.CreateParams" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.CreateParams" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.CreateParams" /&gt;</ph>属性在派生类中，使用基类的<ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.CreateParams" /&gt;</ph>属性来扩展的基实现。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.CreateParams">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">否则，你必须提供所有实现。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Cursor">
          <source>Gets or sets the cursor that is displayed when the mouse pointer is over the control.</source>
          <target state="translated">获取或设置当鼠标指针位于控件上时显示的光标。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> that represents the cursor to display when the mouse pointer is over the control.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>，表示当鼠标指针位于控件上时显示的光标。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>Assign a <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property of the control to change the cursor displayed when the mouse pointer is over the control.</source>
          <target state="translated">分配<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>到<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph>要更改鼠标指针位于控件上方时显示的光标的控件的属性。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>To temporarily change the mouse cursor for all controls on your application set the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">若要暂时更改你的应用程序集上的所有控件的鼠标光标<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>Typically you would set the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType&gt;</ph> property to a wait cursor when populating a <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> or saving or loading a file.</source>
          <target state="translated">通常将设置<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType&gt;</ph>属性填充时等待光标<ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>或保存或加载文件。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property is an ambient property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph>属性是一个环境属性。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>An ambient property is a control property that, if not set, is retrieved from the parent control.</source>
          <target state="translated">环境属性是控件属性，如果未设置，从父控件检索。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>都不具有相同<ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>作为其父<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>默认情况下。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>For more information about ambient properties, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.</source>
          <target state="translated">有关环境属性的详细信息，请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph>类或<ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>类概述。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>The following code example fills a <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> with the user's available logical drives.</source>
          <target state="translated">以下代码示例填充<ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>以用户的可用逻辑驱动器。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>The example also sets the combo box's <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> property so the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursors.Hand%2A?displayProperty=nameWithType&gt;</ph> cursor is displayed when the mouse pointer is over the drop-down button.</source>
          <target state="translated">该示例还将组合框<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>属性因此<ph id="ph2">&lt;xref:System.Windows.Forms.Cursors.Hand%2A?displayProperty=nameWithType&gt;</ph>鼠标指针位于下拉按钮时显示的光标。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>This code requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> on it.</source>
          <target state="translated">此代码，你需要具有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>与<ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>在其上。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>for safe subwindows to set this property value.</source>
          <target state="translated">用于安全子窗口设置此属性的值。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph>属性在派生类中，使用基类的<ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph>属性来扩展的基实现。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">否则，你必须提供所有实现。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Cursor">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> methods of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">你无需重写二者，<ph id="ph1">&lt;see langword="get" /&gt;</ph>和<ph id="ph2">&lt;see langword="set" /&gt;</ph>方法<ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph>属性; 你可以根据需要重写只有一个。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> property changes.</source>
          <target state="translated">当 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> 属性的值更改时发生。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">如果将引发此事件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph>通过以编程方式修改或用户交互更改属性。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>The following code example demonstrates changing the mouse cursor using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> class, and the <ph id="ph3">&lt;xref:System.Windows.Forms.Cursors&gt;</ph> class.</source>
          <target state="translated">下面的代码示例演示如何更改鼠标光标使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType&gt;</ph>属性，<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>类，与<ph id="ph3">&lt;xref:System.Windows.Forms.Cursors&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>The example creates a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> control, a <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> control, and a <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
          <target state="translated">该示例创建一个包含窗体<ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>控件，<ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph>控件，和一个<ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> contains all cursors provided by the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursors&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>包含由提供的所有游标<ph id="ph2">&lt;xref:System.Windows.Forms.Cursors&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>When the user selects a mouse cursor in the <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType&gt;</ph> property is set to the selected cursor, which updates the cursor for the <ph id="ph3">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">当用户选择鼠标光标位于<ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType&gt;</ph>属性设置为选定的光标，这将更新的光标<ph id="ph3">&lt;xref:System.Windows.Forms.Panel&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.CursorChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> is updated every time the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CursorChanged?displayProperty=nameWithType&gt;</ph> event occurs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph>每次更新<ph id="ph2">&lt;xref:System.Windows.Forms.Control.CursorChanged?displayProperty=nameWithType&gt;</ph>事件发生。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DataBindings">
          <source>Gets the data bindings for the control.</source>
          <target state="translated">为该控件获取数据绑定。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DataBindings">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlBindingsCollection" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Binding" /&gt;</ph> objects for the control.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlBindingsCollection" /&gt;</ph>，其中包含该控件的 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Binding" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DataBindings">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DataBindings%2A&gt;</ph> property to access the <ph id="ph2">&lt;xref:System.Windows.Forms.ControlBindingsCollection&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DataBindings%2A&gt;</ph>属性来访问<ph id="ph2">&lt;xref:System.Windows.Forms.ControlBindingsCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DataBindings">
          <source>By adding <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> objects to the collection, you can bind any property of a control to the property of an object.</source>
          <target state="translated">通过添加<ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph>对象添加到集合中，你可以将控件的任何属性绑定到对象的属性。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DataBindings">
          <source>The following code example adds <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> objects to the <ph id="ph2">&lt;xref:System.Windows.Forms.ControlBindingsCollection&gt;</ph> of five controls: four <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls and a <ph id="ph4">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> control.</source>
          <target state="translated">下面的代码示例将添加<ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph>对象添加到<ph id="ph2">&lt;xref:System.Windows.Forms.ControlBindingsCollection&gt;</ph>的五个控件： 四个<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控件和<ph id="ph4">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DataBindings">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ControlBindingsCollection&gt;</ph> is accessed through the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DataBindings%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> class.</source>
          <target state="translated">通过 <ph id="ph1">&lt;xref:System.Windows.Forms.ControlBindingsCollection&gt;</ph> 类的 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DataBindings%2A&gt;</ph> 属性来访问 <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>Gets the default background color of the control.</source>
          <target state="translated">获取控件的默认背景色。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>The default background <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> of the control.</source>
          <target state="translated">控件的默认背景 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>The default is <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.Control" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.Control" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>This is the default <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> property value of a generic top-level control.</source>
          <target state="translated">这是默认<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>的通用的顶级控件的属性值。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>Derived classes can have different defaults.</source>
          <target state="translated">派生的类可以有不同的默认值。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultBackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DefaultForeColor%2A&gt;</ph> members.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultBackColor%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Windows.Forms.Control.DefaultForeColor%2A&gt;</ph>成员。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>To run the example, paste the following code in a form containing a <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> called ListBox1.</source>
          <target state="translated">若要运行该示例，请将以下代码粘贴在窗体包含<ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>调用 ListBox1。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultBackColor">
          <source>Call the <ph id="ph1">`Populate_ListBox`</ph> method in the form's constructor or <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event-handling method.</source>
          <target state="translated">调用<ph id="ph1">`Populate_ListBox`</ph>窗体的构造函数中的方法或<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>事件处理方法。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultCursor">
          <source>Gets or sets the default cursor for the control.</source>
          <target state="translated">获取或设置控件的默认光标。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultCursor">
          <source>An object of type <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> representing the current default cursor.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> 类型的对象，表示当前默认光标。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultCursor">
          <source>Override <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultCursor%2A&gt;</ph> to configure a default cursor for your control.</source>
          <target state="translated">重写<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultCursor%2A&gt;</ph>配置为您的控件的默认光标。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultCursor">
          <source>This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.</source>
          <target state="translated">这比将光标设置在控件的构造函数中更高效，并为自动支持提供某些游标相关的设计器函数。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>Gets the default font of the control.</source>
          <target state="translated">获取控件的默认字体。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> of the control.</source>
          <target state="translated">控件的默认 <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>The value returned will vary depending on the user's operating system the local culture setting of their system.</source>
          <target state="translated">根据用户的操作系统以及系统的本地区域性设置的不同，返回的值也将不同。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>The following table describes the value returned by <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph> depending on the operating system and local culture.</source>
          <target state="translated">下表描述返回的值<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph>取决于操作系统和本地区域性。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>System/and or Culture</source>
          <target state="translated">系统 / 和或区域性</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>Font</source>
          <target state="translated">字体</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>Windows NT 4x, Japanese version</source>
          <target state="translated">X，日语版本的 Windows NT 4</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>MS UI Gothic, 9 point.</source>
          <target state="translated">MS UI 歌特，9 点。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>Arabic Windows</source>
          <target state="translated">Arabic Windows</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>Tahoma, 8 point.</source>
          <target state="translated">Tahoma，8 磅。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>Other operating system/culture</source>
          <target state="translated">其他操作系统/区域性</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>MS Shell Dlg logical font, typically Microsoft San Serif 8 point.</source>
          <target state="translated">MS Shell Dlg 的逻辑字体通常 Microsoft San Serif 8 点。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>MS Shell Dlg maps to a font set in the system registry.</source>
          <target state="translated">MS Shell Dlg 将映射到在系统注册表中设置的字体。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>If the previous fonts are not installed, the default font is Tahoma, 8 point.</source>
          <target state="translated">如果未安装以前的字体，默认字体是宋体，8 磅。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>If Tahoma, 8 point, is not installed, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph> returns the value of the <ph id="ph2">&lt;xref:System.Drawing.FontFamily.GenericSansSerif%2A&gt;</ph> property</source>
          <target state="translated">如果未安装 Tahoma，8 磅，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph>返回的值<ph id="ph2">&lt;xref:System.Drawing.FontFamily.GenericSansSerif%2A&gt;</ph>属性</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultBackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DefaultForeColor%2A&gt;</ph> members.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultBackColor%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Windows.Forms.Control.DefaultForeColor%2A&gt;</ph>成员。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>To run the example, paste the following code in a form containing a <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> called ListBox1.</source>
          <target state="translated">若要运行该示例，请将以下代码粘贴在窗体包含<ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>调用 ListBox1。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>Call the <ph id="ph1">`Populate_ListBox`</ph> method in the form's constructor or <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event-handling method.</source>
          <target state="translated">调用<ph id="ph1">`Populate_ListBox`</ph>窗体的构造函数中的方法或<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>事件处理方法。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultFont">
          <source>The default font or the regional alternative fonts are not installed on the client computer.</source>
          <target state="translated">默认字体或地区可选字体未安装在客户计算机上。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>Gets the default foreground color of the control.</source>
          <target state="translated">获取控件的默认前景色。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>The default foreground <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> of the control.</source>
          <target state="translated">控件的前景 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>The default is <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.ControlText" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="P:System.Drawing.SystemColors.ControlText" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>This is the default <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> property value of a nonparented control.</source>
          <target state="translated">这是默认<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>无父级控件的属性值。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>Derived classes can have different defaults.</source>
          <target state="translated">派生的类可以有不同的默认值。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultBackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DefaultForeColor%2A&gt;</ph> members.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultBackColor%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DefaultFont%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Windows.Forms.Control.DefaultForeColor%2A&gt;</ph>成员。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>To run the example, paste the following code in a form containing a <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> called ListBox1.</source>
          <target state="translated">若要运行该示例，请将以下代码粘贴在窗体包含<ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>调用 ListBox1。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultForeColor">
          <source>Call the <ph id="ph1">`Populate_ListBox`</ph> method in the form's constructor or <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event-handling method.</source>
          <target state="translated">调用<ph id="ph1">`Populate_ListBox`</ph>窗体的构造函数中的方法或<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>事件处理方法。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>Gets the default Input Method Editor (IME) mode supported by the control.</source>
          <target state="translated">获取控件支持的默认输入法编辑器 (IME) 模式。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>An Input Method Editor (IME) is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.</source>
          <target state="translated">输入法编辑器 (IME) 是使用户能够通过使用标准键盘输入复杂字符和符号，如日语汉字字符的程序。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>As implemented in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class, this property always returns the <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.Inherit?displayProperty=nameWithType&gt;</ph> value.</source>
          <target state="translated">在中实现<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类，此属性始终返回<ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.Inherit?displayProperty=nameWithType&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ImeMode.Inherit&gt;</ph> value specifies that the IME mode is inherited from the parent control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ImeMode.Inherit&gt;</ph>值指定的 IME 模式从父控件继承。</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>The following code example overrides the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultImeMode%2A&gt;</ph> property to turn off the Input Method Editor.</source>
          <target state="translated">下面的代码示例替代<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultImeMode%2A&gt;</ph>属性来启用输入法编辑器关闭。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultImeMode" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.DefaultImeMode" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultImeMode" /&gt;</ph>属性在派生类中，使用基类的<ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.DefaultImeMode" /&gt;</ph>属性来扩展的基实现。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultImeMode">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">否则，你必须提供所有实现。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultMargin">
          <source>Gets the space, in pixels, that is specified by default between controls.</source>
          <target state="translated">获取控件之间默认指定的间距（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultMargin">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> that represents the default space between controls.</source>
          <target state="translated">表示控件之间默认间距的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultMaximumSize">
          <source>Gets the length and height, in pixels, that is specified as the default maximum size of a control.</source>
          <target state="translated">获取以像素为单位的长度和高度，此长度和高度被指定为控件的默认最大大小。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultMaximumSize">
          <source>A <ph id="ph1">&lt;see cref="M:System.Drawing.Point.#ctor(System.Drawing.Size)" /&gt;</ph> representing the size of the control.</source>
          <target state="translated">一个表示控件大小的 <ph id="ph1">&lt;see cref="M:System.Drawing.Point.#ctor(System.Drawing.Size)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultMinimumSize">
          <source>Gets the length and height, in pixels, that is specified as the default minimum size of a control.</source>
          <target state="translated">获取以像素为单位的长度和高度，此长度和高度被指定为控件的默认最小大小。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultMinimumSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> representing the size of the control.</source>
          <target state="translated">一个表示控件大小的 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultPadding">
          <source>Gets the internal spacing, in pixels, of the contents of a control.</source>
          <target state="translated">获取控件内容的内部间距（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultPadding">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> that represents the internal spacing of the contents of a control.</source>
          <target state="translated">表示控件内容内部间距的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>Gets the default size of the control.</source>
          <target state="translated">获取控件的默认大小。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> of the control.</source>
          <target state="translated">控件的默认 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property represents the <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph> of the control when it is initially created.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph>属性表示<ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph>最初创建时的控件。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>You can adjust the size of the control by setting its <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property value.</source>
          <target state="translated">你可以通过设置调整控件大小其<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>属性值。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>To maintain better performance, do not set the <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> of a control in its constructor.</source>
          <target state="translated">若要维护更好的性能，不要设置<ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph>处于其构造函数的控件。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>The preferred method is to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property.</source>
          <target state="translated">首选的方法是重写<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>On Windows Server 2003 systems, the size of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> is restricted by the maximum pixel width and height of the monitor.</source>
          <target state="translated">在 Windows Server 2003 系统中的大小<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>受到的最大像素宽度和高度的监视器。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>The following code example overrides the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property, and makes the default size of the form 500 pixels square.</source>
          <target state="translated">下面的代码示例替代<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph>属性，并使窗体 500 像素的正方形的默认大小。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DefaultSize">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultSize" /&gt;</ph> property in a derived class, it is preferable to return a <ph id="ph2">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> with the desired dimensions rather than to override all the implementation.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultSize" /&gt;</ph>派生类中的属性，它是更可取的方法返回<ph id="ph2">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>的所需的维度，而不是可重写所有实现。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)">
          <source>The Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> to process.</source>
          <target state="translated">要处理的 Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)">
          <source>Sends the specified message to the default window procedure.</source>
          <target state="translated">向默认窗口过程发送指定消息。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)">
          <source>For more information about processing Windows messages, see the <bpt id="p1">[</bpt>WindowProc function<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=181565)</ept>.</source>
          <target state="translated">有关处理 Windows 消息的详细信息，请参阅<bpt id="p1">[</bpt>WindowProc 函数<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=181565)</ept>。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">直接调用方调用非托管的代码。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">关联枚举：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DestroyHandle">
          <source>Destroys the handle associated with the control.</source>
          <target state="translated">毁坏与该控件关联的句柄。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DestroyHandle">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">直接调用方调用非托管的代码。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DestroyHandle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">关联枚举：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DestroyHandle">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.DestroyHandle" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.DestroyHandle" /&gt;</ph> method to ensure that the handle is destroyed.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.DestroyHandle" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.DestroyHandle" /&gt;</ph>方法，以确保句柄被销毁。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DeviceDpi">
          <source>Gets the DPI value for the display device where the control is currently being displayed.</source>
          <target state="translated">获取显示当前控件的显示设备的 DPI 值。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DeviceDpi">
          <source>The DPI value of the display device.</source>
          <target state="translated">显示设备的 DPI 值。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>Gets the rectangle that represents the display area of the control.</source>
          <target state="translated">获取表示控件的显示区域的矩形。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the display area of the control.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>，它表示控件的显示区域。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DisplayRectangle%2A&gt;</ph> property returns the client rectangle of the display area of the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DisplayRectangle%2A&gt;</ph>属性返回的控件的显示区域的客户端矩形。</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>For the base control class, this is equal to the client rectangle.</source>
          <target state="translated">对于基控件类中，这是与客户端矩形相等。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>However, inheriting controls might want to change this if their client area differs from their display area.</source>
          <target state="translated">但是，继承控件可能想要更改此如果其客户端区域与其显示区域不同。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>The display rectangle is the smallest <ph id="ph1">&lt;xref:System.Drawing.Rectangle&gt;</ph> that encloses a control and is used to lay out controls.</source>
          <target state="translated">显示矩形是最小<ph id="ph1">&lt;xref:System.Drawing.Rectangle&gt;</ph>，包括控件，使用控件进行布局。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DisplayRectangle" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.DisplayRectangle" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DisplayRectangle" /&gt;</ph>属性在派生类中，使用基类的<ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.DisplayRectangle" /&gt;</ph>属性来扩展的基实现。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DisplayRectangle">
          <source>Alternatively, you must provide all the implementation.</source>
          <target state="translated">或者，你必须提供所有实现。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">若要释放托管资源和非托管资源，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若仅释放非托管资源，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> and its child controls and optionally releases the managed resources.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> 和它的子控件占用的非托管资源，另外还可以释放托管资源。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.<ph id="ph3">`Dispose()`</ph></source>
          <target state="translated">此方法称为由公共<ph id="ph1">`Dispose()`</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。<ph id="ph3">`Dispose()`</ph></target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>invokes the protected <ph id="ph1">`Dispose(Boolean)`</ph> method with the <ph id="ph2">`disposing`</ph> parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">调用受保护<ph id="ph1">`Dispose(Boolean)`</ph>方法替换<ph id="ph2">`disposing`</ph>参数设置为<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 调用<ph id="ph2">`Dispose`</ph>与<ph id="ph3">`disposing`</ph>设置为<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> references.</source>
          <target state="translated">当 <ph id="ph1">`disposing`</ph> 参数为 <ph id="ph2">`true`</ph> 时，此方法释放该 <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> 引用的、由任何托管对象持有的全部资源。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用每个引用对象的 <ph id="ph1">`Dispose()`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以由其他对象多次调用。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>请注意不要引用已释放的以前调用中的对象<ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关如何实现详细信息<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>实现 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">有关详细信息<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>重写 Finalize 方法<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Disposing">
          <source>Gets a value indicating whether the base <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class is in the process of disposing.</source>
          <target state="translated">获取一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> 基类是否在释放进程中。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Disposing">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the base <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class is in the process of disposing; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> 基类在释放进程中，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Disposing">
          <source>When this property returns <ph id="ph1">`true`</ph>, the base <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class is in the process of disposing.</source>
          <target state="translated">当此属性返回<ph id="ph1">`true`</ph>，基<ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>类是在释放进程中。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Disposing">
          <source>After the control is disposed of, it can no longer be referenced as a valid Windows control.</source>
          <target state="translated">控件释放后，不再有效的 Windows 控件作为引用。</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Disposing">
          <source>Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection.</source>
          <target state="translated">即使控件的实例已释放，它仍保留在内存中直到从通过垃圾回收的内存中删除。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Disposing">
          <source>When a control is disposed of, you cannot call its <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method.</source>
          <target state="translated">当控件被释放的时不能调用其<ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Dock">
          <source>Gets or sets which control borders are docked to its parent control and determines how a control is resized with its parent.</source>
          <target state="translated">获取或设置哪些控件边框停靠到其父控件并确定控件如何随其父级一起调整大小。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DockStyle" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DockStyle" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DockStyle.None" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DockStyle.None" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> property to define how a control is automatically resized as its parent control is resized.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph>属性来定义如何调整控件的自动调整其父控件的大小时。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>For example, setting <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Forms.DockStyle.Left?displayProperty=nameWithType&gt;</ph> causes the control to align itself with the left edges of its parent control and to resize as the parent control is resized.</source>
          <target state="translated">例如，设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Windows.Forms.DockStyle.Left?displayProperty=nameWithType&gt;</ph>导致的控件将其自身的其父控件的左边缘对齐，并根据父控件一起调整大小调整大小。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>Controls are docked in their Z-order, which is the visual layering of controls on a form along the form's Z-axis (depth).</source>
          <target state="translated">控件停靠在其 Z 顺序，即沿窗体的 z 轴 （深度） 窗体上控件的可视化分层。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>A control can be docked to one edge of its parent container or can be docked to all edges and fill the parent container.</source>
          <target state="translated">控件可以停靠到其父容器的一个边或可以停靠到所有边缘和填充的父容器。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Margin%2A&gt;</ph> property on a docked control has no effect on the distance of the control from the edges of its container.</source>
          <target state="translated">设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Margin%2A&gt;</ph>停靠控件上的属性不起该控件从其容器的边缘的距离。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> properties are mutually exclusive.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph>属性是互相排斥。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>Only one can be set at a time, and the last one set takes precedence.</source>
          <target state="translated">只有一个可以设置一次和最后一个组将优先。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and sets some of its common properties.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>并设置一些其通用的属性。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and sets its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> within the group box.</source>
          <target state="translated">该示例创建<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>并设置其<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>组框中。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>Next, it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of the group box, and docks the group box to the top of the form.</source>
          <target state="translated">接下来，它将设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性组框中，并停靠组框中的，到窗体顶部。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>Lastly, it disables the group box by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>, which causes all controls contained within the group box to be disabled.</source>
          <target state="translated">最后，通过设置禁用分组框<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph>属性<ph id="ph2">`false`</ph>，这将导致产生包含在要禁用的组框内的所有控件。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Dock">
          <source>The value assigned is not one of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DockStyle" /&gt;</ph> values.</source>
          <target state="translated">分配的值不是 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DockStyle" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph>属性在派生类中，使用基类的<ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph>属性来扩展的基实现。</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">否则，你必须提供所有实现。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Dock">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> methods of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">你无需重写二者，<ph id="ph1">&lt;see langword="get" /&gt;</ph>和<ph id="ph2">&lt;see langword="set" /&gt;</ph>方法<ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph>属性; 你可以根据需要重写只有一个。</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph> property changes.</source>
          <target state="translated">当 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Dock" /&gt;</ph> 属性的值更改时发生。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">如果将引发此事件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph>通过以编程方式修改或用户交互更改属性。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>The following code example is an event handler that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是一个事件处理程序时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph2">`Changed`</ph> that are raised when the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> value changes(<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph2">`Changed`</ph>都时引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept>值发生更改 (<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>显示货币数据。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DockChanged">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>包含<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The data to drag.</source>
          <target state="translated">要拖动的数据。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>Begins a drag-and-drop operation.</source>
          <target state="translated">开始拖放操作。</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> enumeration that represents the final effect that was performed during the drag-and-drop operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> 枚举的值，它表示在拖放操作期间执行的最终效果。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The <ph id="ph1">`allowedEffects`</ph> parameter determines which drag operations can occur.</source>
          <target state="translated"><ph id="ph1">`allowedEffects`</ph>参数确定哪些拖动操作可以发生。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the drag operation needs to interoperate with applications in another process, data should either be a base managed class (<ph id="ph1">&lt;xref:System.String&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Bitmap&gt;</ph>, or <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph>), or an object that implements <ph id="ph4">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>.</source>
          <target state="translated">如果在拖动操作需要与另一个进程中的应用程序进行互操作，数据应为基的托管的类 (<ph id="ph1">&lt;xref:System.String&gt;</ph>， <ph id="ph2">&lt;xref:System.Drawing.Bitmap&gt;</ph>，或<ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph>)，或实现的对象<ph id="ph4">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>或<ph id="ph5">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The following describes how and when events related to drag-and-drop operations are raised.</source>
          <target state="translated">下面描述与拖放操作相关的事件的引发方式以及引发时间。</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>方法确定当前光标位置下的控件。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>It then checks to see if the control is a valid drop target.</source>
          <target state="translated">然后检查以确定控件是否有效的放置目标。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the control is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
          <target state="translated">如果控件是有效的放置目标，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>产生指定的拖放效果引发事件。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">有关拖放效果的列表，请参见 <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> 枚举。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</source>
          <target state="translated">跟踪鼠标光标位置、键盘状态和鼠标按钮状态的更改。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">如果用户移出一个窗口，则引发 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the mouse enters another control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.</source>
          <target state="translated">如果鼠标进入另一个控件，则引发该控件的 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the mouse moves but stays within the same control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.</source>
          <target state="translated">如果鼠标移动但停留在同一个控件中，则引发 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
          <target state="translated">如果键盘或鼠标按钮状态，更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph>事件引发，并确定是否继续拖动、 放置数据或取消该操作基于值<ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph>属性的事件的<ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Continue`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph>是<ph id="ph2">`Continue`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>引发事件以继续操作和<ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>产生新效果引发事件，从而能够设置适当的视觉反馈。</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">有关有效放置效果的列表，请参见 <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> 枚举。</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>事件成对发生，以便当鼠标移到放置目标时，用户提供的最新反馈有关鼠标位置。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph>是<ph id="ph2">`Drop`</ph>、 向源返回放置效果值，以便源应用程序可以执行适当的操作的源数据; 例如，如果会剪切数据是移动操作。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Cancel`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph>是<ph id="ph2">`Cancel`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method catches all exceptions and rethrows only the following security or critical exceptions:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>方法捕获所有异常，并重新引发的以下安全或严重异常：</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>SecurityException</source>
          <target state="translated">SecurityException</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>NullReferenceException</source>
          <target state="translated">NullReferenceException</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>StackOverflowException</source>
          <target state="translated">StackOverflowException</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>OutOfMemoryException</source>
          <target state="translated">OutOfMemoryException</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>ThreadAbortException</source>
          <target state="translated">ThreadAbortException</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>ExecutionEngineException</source>
          <target state="translated">ExecutionEngineException</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>IndexOutOfRangeException</source>
          <target state="translated">IndexOutOfRangeException</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>AccessViolationException</source>
          <target state="translated">AccessViolationException</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The following code example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">下面的代码示例演示两个之间拖放操作<ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">该示例通过调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>方法的拖放操作启动时。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">如果鼠标已移动的拖放操作启动多个<ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph>从期间的鼠标位置<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph>方法用于确定要在将拖动的项的索引<ph id="ph2">`MouseDown`</ph>事件。</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">该示例还演示如何使用自定义光标拖放操作。</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The example requires that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">该示例需要两个光标文件<ph id="ph1">`3dwarro.cur`</ph>和<ph id="ph2">`3dwno.cur`</ph>、 存在于应用程序目录，用于自定义拖动和非放置光标，分别。</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">如果将使用自定义光标<ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph>已选中。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">自定义光标设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">键盘状态评估中<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>事件处理程序右侧<ph id="ph2">`ListBox`</ph>，以确定将哪些拖动操作基于 SHIFT、 CTRL、 ALT 和 CTRL + ALT 键的状态。</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">中的位置<ph id="ph1">`ListBox`</ph>期间还确定将发生放置<ph id="ph2">`DragOver`</ph>事件。</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</source>
          <target state="translated">如果要删除的数据不是<ph id="ph1">`String`</ph>，则<ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph>设置为<ph id="ph3">`None`</ph>中<ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">最后，下拉的状态将显示在<ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">要为权限放置的数据<ph id="ph1">`ListBox`</ph>中确定<ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph>事件处理程序和<ph id="ph3">`String`</ph>值添加中的适当位置<ph id="ph4">`ListBox`</ph>。</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">如果在拖动操作超出边界的窗体中，则采用取消拖放操作<ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration to specify how data should be transferred between the controls involved in a drag-and-drop operation.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>枚举来指定应如何将数据转移之间拖放操作中涉及的控件。</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>This example requires that your form includes a <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control and a <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> control and that the <ph id="ph3">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> control is populated with a list of valid file names.</source>
          <target state="translated">此示例需要你的窗体包括<ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>控件和<ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>控制的和<ph id="ph3">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>控件中填充有效的文件名称的列表。</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>When the user drags a file name onto the <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control, the control's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event is raised.</source>
          <target state="translated">当用户拖动文件名拖到<ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>控件，该控件的<ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
          <source>Within the event handler, the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> is initialized to <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> to indicate that the data referenced by the file path should be copied to the <ph id="ph4">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control.</source>
          <target state="translated">在事件处理程序，<ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph>初始化为<ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>以指示所引用的文件路径的数据应复制到<ph id="ph4">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.DoubleBuffered">
          <source>Gets or sets a value indicating whether this control should redraw its surface using a secondary buffer to reduce or prevent flicker.</source>
          <target state="translated">获取或设置一个值，该值指示此控件是否应使用辅助缓冲区重绘其图面，以减少或避免闪烁。</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DoubleBuffered">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the surface of the control should be drawn using double buffering; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果应使用双缓冲绘制控件的图面，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DoubleBuffered">
          <source>Buffered graphics can reduce or eliminate flicker that is caused by progressive redrawing of parts of a displayed surface.</source>
          <target state="translated">缓冲的图形可以减少或消除引起的部件的显示的图面渐进式重绘的闪烁。</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DoubleBuffered">
          <source>Buffered graphics require that the updated graphics data is first written to a buffer.</source>
          <target state="translated">缓冲的图形需要更新的图形数据首先写入缓冲区。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DoubleBuffered">
          <source>The data in the graphics buffer is then quickly written to displayed surface memory.</source>
          <target state="translated">图形缓冲区中的数据快速然后写入到显示的图面内存中。</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DoubleBuffered">
          <source>The relatively quick switch of the displayed graphics memory typically reduces the flicker that can otherwise occur.</source>
          <target state="translated">显示的图形内存相对快速交换机通常会减少可以出现闪烁。</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.DoubleBuffered">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> is not a bindable property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> 不是可绑定属性。</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>Occurs when the control is double-clicked.</source>
          <target state="translated">在双击控件时发生。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>A double-click is determined by the mouse settings of the user's operating system.</source>
          <target state="translated">由用户的操作系统的鼠标设置确定一次双击。</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</source>
          <target state="translated">用户可以设置两次单击鼠标按钮之间的时间以便将这两次单击认为是双击而不是两次单击。</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event is raised every time a control is double-clicked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>每次双击控件时引发事件。</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>For example, if you have event handlers for the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> events of a <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>, the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> events are raised when the form is double-clicked and both methods are called.</source>
          <target state="translated">例如，如果你有事件处理程序<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>的事件<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>、<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>和<ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>双击窗体，这两种方法调用时将引发事件。</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>If a control is double-clicked and that control does not support the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event might be raised twice.</source>
          <target state="translated">如果双击控件时，控件不支持<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>事件，<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>事件，可能会引发两次。</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>You must set the <ph id="ph1">`StandardDoubleClick`</ph> and <ph id="ph2">`StandardClick`</ph> values of <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> to <ph id="ph4">`true`</ph> for this event to be raised.</source>
          <target state="translated">必须设置<ph id="ph1">`StandardDoubleClick`</ph>和<ph id="ph2">`StandardClick`</ph>值<ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>到<ph id="ph4">`true`</ph>会引发此事件。</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>These values might already be set to <ph id="ph1">`true`</ph> if you are inheriting from existing Windows Forms controls.</source>
          <target state="translated">这些值可能已设置为<ph id="ph1">`true`</ph>如果从现有继承 Windows 窗体控件。</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">不会引发以下事件<ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>类，除非没有至少一个<ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>中<ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph>集合： <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>， <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>， <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>， <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>， <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>，<ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph>和<ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">如果没有至少一个<ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>在集合中，以及用户与选项卡控件的标头进行交互 (其中<ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>名称显示)，则<ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>引发相应的事件。</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">但是，如果用户交互的选项卡页中，客户端区域内<ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>引发相应的事件。</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event of a <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> to load text files listed in the <ph id="ph3">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> into a <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>事件<ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>加载文本中列出的文件<ph id="ph3">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>到<ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>Inheriting from a standard Windows Forms control and changing the <ph id="ph1">&lt;see langword="StandardClick" /&gt;</ph> or <ph id="ph2">&lt;see langword="StandardDoubleClick" /&gt;</ph> values of <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> to <ph id="ph4">&lt;see langword="true" /&gt;</ph> can cause unexpected behavior or have no effect at all if the control does not support the <ph id="ph5">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> or <ph id="ph6">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> events.</source>
          <target state="translated">从标准 Windows 窗体控件继承和更改<ph id="ph1">&lt;see langword="StandardClick" /&gt;</ph>或<ph id="ph2">&lt;see langword="StandardDoubleClick" /&gt;</ph>值<ph id="ph3">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph>到<ph id="ph4">&lt;see langword="true" /&gt;</ph>可以导致意外的行为，或者根本产生任何影响，如果控件不支持<ph id="ph5">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph>或<ph id="ph6">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>The following table lists Windows Forms controls and which event (<ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph>) is raised in response to the mouse action specified.</source>
          <target state="translated">下表列出了 Windows 窗体控件和哪些事件 (<ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph>或<ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph>) 在指定的鼠标操作的响应中引发。</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Control</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 控件</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Left Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击鼠标左键</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Left Mouse Double Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 鼠标双击</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Right Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 鼠标右键单击</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Right Mouse Double Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 双击鼠标右键</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Middle Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 鼠标单击</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Middle Mouse Double Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 鼠标双击</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton1 Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton1 鼠标单击</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton1 Mouse Double-Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 双击 XButton1 鼠标</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton2 Mouse Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton2 鼠标单击</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton2 Mouse Double-Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> XButton2 鼠标双击</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.MonthCalendar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.MonthCalendar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DateTimePicker" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DateTimePicker" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RichTextBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RichTextBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.HScrollBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.HScrollBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.VScrollBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.VScrollBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RadioButton" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RadioButton" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击，然后单击</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckedListBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CheckedListBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击、 双击</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.TextBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.TextBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DomainUpDown" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DomainUpDown" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.NumericUpDown" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.NumericUpDown" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击、 双击</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5"> * </ph><ph id="ph6">&lt;see cref="T:System.Windows.Forms.TreeView" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5"> * </ph><ph id="ph6">&lt;see cref="T:System.Windows.Forms.TreeView" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">\*</ph> <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ListView" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">\*</ph> <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ListView" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击、 双击</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击、 双击</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> none</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 无</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ProgressBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.ProgressBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TrackBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TrackBar" /&gt;</ph><ph id="ph2">&lt;/term&gt;</ph><ph id="ph3">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击，然后单击</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击，然后单击</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击，然后单击</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击，然后单击</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击，然后单击</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataGrid" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Label" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Label" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.LinkLabel" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.LinkLabel" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Panel" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Panel" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.GroupBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.GroupBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.PictureBox" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.PictureBox" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Splitter" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Splitter" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.StatusBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.StatusBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ToolBar" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ToolBar" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">** </ph><ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">** </ph><ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph><ph id="ph3">&lt;/term&gt;</ph><ph id="ph4">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击、 双击</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击、 双击</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击、 双击</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击、 双击</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Click, DoubleClick</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 单击、 双击</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source><ph id="ph1">\*</ph> The mouse pointer must be over a child object (<ph id="ph2">&lt;see cref="T:System.Windows.Forms.TreeNode" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ListViewItem" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">\*</ph> 鼠标指针必须位于子对象 (<ph id="ph2">&lt;see cref="T:System.Windows.Forms.TreeNode" /&gt;</ph>或<ph id="ph3">&lt;see cref="T:System.Windows.Forms.ListViewItem" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DoubleClick">
          <source>** The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph> must have at least one <ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph> in its <ph id="ph3">&lt;see cref="P:System.Windows.Forms.TabControl.TabPages" /&gt;</ph> collection.</source>
          <target state="translated">* *<ph id="ph1">&lt;see cref="T:System.Windows.Forms.TabControl" /&gt;</ph>必须至少一个<ph id="ph2">&lt;see cref="T:System.Windows.Forms.TabPage" /&gt;</ph>中其<ph id="ph3">&lt;see cref="P:System.Windows.Forms.TabControl.TabPages" /&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DpiChangedAfterParent">
          <source>Occurs when the DPI setting for a control is changed programmatically after the DPI of it's parent control or form has changed.</source>
          <target state="translated">当父控件或窗体的 DPI 更改后，以编程方式更改控件的 DPI 设置时发生。</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DpiChangedBeforeParent">
          <source>Occurs when the DPI setting for a control is changed programmatically before a DPI change event for it's parent control or form has occurred.</source>
          <target state="translated">父控件或窗体的 DPI 更改事件发生前，以编程方式更改控件的 DPI 设置时发生。</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>Occurs when a drag-and-drop operation is completed.</source>
          <target state="translated">拖放操作完成时发生。</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> are in screen coordinates, not client coordinates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph>位于屏幕坐标，未工作区坐标。</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>The following line of Visual C# code converts the properties to a client <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph>.</source>
          <target state="translated">Visual C# 代码的以下行将属性转换为客户端<ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>In versions earlier than <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, if you put a <ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> with <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> events on a Windows Form and drag and drop something onto the <ph id="ph5">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> at design time, the <ph id="ph6">`DropDrop`</ph> and <ph id="ph7">`DropEnter`</ph> events are raised.</source>
          <target state="translated">在版本早于<ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>，如果将放<ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph>与<ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph>和<ph id="ph4">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph>Windows 窗体上的事件和拖动某个对象拖到<ph id="ph5">&lt;xref:System.Windows.Forms.UserControl&gt;</ph>在设计时，<ph id="ph6">`DropDrop`</ph>和<ph id="ph7">`DropEnter`</ph>事件引发。</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>However, when you close and reopen the solution, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> events are not raised again.</source>
          <target state="translated">但是，当你关闭并重新打开该解决方案，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph>不会再次引发事件。</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event.</source>
          <target state="translated">此代码片段演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragDrop">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>完整的代码示例的方法。</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>Occurs when an object is dragged into the control's bounds.</source>
          <target state="translated">在将对象拖入控件的边界时发生。</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event is raised when the user first drags the mouse cursor over the control during a drag-and-drop operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph>用户拖放操作过程中首次将鼠标光标拖到控件时将引发事件。</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>In versions earlier than <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, if you put a <ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> with <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> events on a Windows Form and drag and drop something onto the <ph id="ph5">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> at design time, the <ph id="ph6">`DropDrop`</ph> and <ph id="ph7">`DropEnter`</ph> events are raised.</source>
          <target state="translated">在版本早于<ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>，如果将放<ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph>与<ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph>和<ph id="ph4">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph>Windows 窗体上的事件和拖动某个对象拖到<ph id="ph5">&lt;xref:System.Windows.Forms.UserControl&gt;</ph>在设计时，<ph id="ph6">`DropDrop`</ph>和<ph id="ph7">`DropEnter`</ph>事件引发。</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>However, when you close and reopen the solution, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> events are not raised again.</source>
          <target state="translated">但是，当你关闭并重新打开该解决方案，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph>不会再次引发事件。</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The following describes how and when events related to drag-and-drop operations are raised.</source>
          <target state="translated">下面描述与拖放操作相关的事件的引发方式以及引发时间。</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>方法确定当前光标位置下的控件。</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>It then checks to see if the control is a valid drop target.</source>
          <target state="translated">然后检查以确定控件是否有效的放置目标。</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the control is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
          <target state="translated">如果控件是有效的放置目标，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>产生指定的拖放效果引发事件。</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">有关拖放效果的列表，请参见 <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> 枚举。</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</source>
          <target state="translated">跟踪鼠标光标位置、键盘状态和鼠标按钮状态的更改。</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">如果用户移出一个窗口，则引发 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the mouse enters another control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.</source>
          <target state="translated">如果鼠标进入另一个控件，则引发该控件的 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the mouse moves but stays within the same control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.</source>
          <target state="translated">如果鼠标移动但停留在同一个控件中，则引发 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
          <target state="translated">如果键盘或鼠标按钮状态，更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph>事件引发，并确定是否继续拖动、 放置数据或取消该操作基于值<ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph>属性的事件的<ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Continue`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph>是<ph id="ph2">`Continue`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>引发事件以继续操作和<ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>产生新效果引发事件，从而能够设置适当的视觉反馈。</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">有关有效放置效果的列表，请参见 <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> 枚举。</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>事件成对发生，以便当鼠标移到放置目标时，用户提供的最新反馈有关鼠标位置。</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph>是<ph id="ph2">`Drop`</ph>、 向源返回放置效果值，以便源应用程序可以执行适当的操作的源数据; 例如，如果会剪切数据是移动操作。</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Cancel`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph>是<ph id="ph2">`Cancel`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> are in screen coordinates, not client coordinates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph>位于屏幕坐标，未工作区坐标。</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The following line of Visual C# code converts the properties to a client <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph>.</source>
          <target state="translated">Visual C# 代码的以下行将属性转换为客户端<ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The following code example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">下面的代码示例演示两个之间拖放操作<ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">该示例通过调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>方法的拖放操作启动时。</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">如果鼠标已移动的拖放操作启动多个<ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph>从期间的鼠标位置<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph>方法用于确定要在将拖动的项的索引<ph id="ph2">`MouseDown`</ph>事件。</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">该示例还演示如何使用自定义光标拖放操作。</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The example requires that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">该示例需要两个光标文件<ph id="ph1">`3dwarro.cur`</ph>和<ph id="ph2">`3dwno.cur`</ph>、 存在于应用程序目录，用于自定义拖动和非放置光标，分别。</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">如果将使用自定义光标<ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph>已选中。</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">自定义光标设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">键盘状态评估中<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>事件处理程序右侧<ph id="ph2">`ListBox`</ph>，以确定将哪些拖动操作基于 SHIFT、 CTRL、 ALT 和 CTRL + ALT 键的状态。</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">中的位置<ph id="ph1">`ListBox`</ph>期间还确定将发生放置<ph id="ph2">`DragOver`</ph>事件。</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</source>
          <target state="translated">如果要删除的数据不是<ph id="ph1">`String`</ph>，则<ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph>设置为<ph id="ph3">`None`</ph>中<ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">最后，下拉的状态将显示在<ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">要为权限放置的数据<ph id="ph1">`ListBox`</ph>中确定<ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph>事件处理程序和<ph id="ph3">`String`</ph>值添加中的适当位置<ph id="ph4">`ListBox`</ph>。</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">如果在拖动操作超出边界的窗体中，则采用取消拖放操作<ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event.</source>
          <target state="translated">此代码片段演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragEnter">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>完整的代码示例的方法。</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>Occurs when an object is dragged out of the control's bounds.</source>
          <target state="translated">将对象拖出控件的边界时发生。</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised when the user drags the cursor out of the control or the user cancels the current drag-and-drop operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph>用户拖出控件的光标或用户取消当前的拖放操作时引发事件。</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The following describes how and when events related to drag-and-drop operations are raised.</source>
          <target state="translated">下面描述与拖放操作相关的事件的引发方式以及引发时间。</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>方法确定当前光标位置下的控件。</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>It then checks to see if the control is a valid drop target.</source>
          <target state="translated">然后检查以确定控件是否有效的放置目标。</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the control is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
          <target state="translated">如果控件是有效的放置目标，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>产生指定的拖放效果引发事件。</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">有关拖放效果的列表，请参见 <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> 枚举。</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</source>
          <target state="translated">跟踪鼠标光标位置、键盘状态和鼠标按钮状态的更改。</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">如果用户移出一个窗口，则引发 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the mouse enters another control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.</source>
          <target state="translated">如果鼠标进入另一个控件，则引发该控件的 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the mouse moves but stays within the same control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.</source>
          <target state="translated">如果鼠标移动但停留在同一个控件中，则引发 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
          <target state="translated">如果键盘或鼠标按钮状态，更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph>事件引发，并确定是否继续拖动、 放置数据或取消该操作基于值<ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph>属性的事件的<ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Continue`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph>是<ph id="ph2">`Continue`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>引发事件以继续操作和<ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>产生新效果引发事件，从而能够设置适当的视觉反馈。</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">有关有效放置效果的列表，请参见 <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> 枚举。</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>事件成对发生，以便当鼠标移到放置目标时，用户提供的最新反馈有关鼠标位置。</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph>是<ph id="ph2">`Drop`</ph>、 向源返回放置效果值，以便源应用程序可以执行适当的操作的源数据; 例如，如果会剪切数据是移动操作。</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Cancel`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph>是<ph id="ph2">`Cancel`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The following code example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">下面的代码示例演示两个之间拖放操作<ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">该示例通过调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>方法的拖放操作启动时。</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">如果鼠标已移动的拖放操作启动多个<ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph>从期间的鼠标位置<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph>方法用于确定要在将拖动的项的索引<ph id="ph2">`MouseDown`</ph>事件。</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">该示例还演示如何使用自定义光标拖放操作。</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The example requires that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">该示例需要两个光标文件<ph id="ph1">`3dwarro.cur`</ph>和<ph id="ph2">`3dwno.cur`</ph>、 存在于应用程序目录，用于自定义拖动和非放置光标，分别。</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">如果将使用自定义光标<ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph>已选中。</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">自定义光标设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">键盘状态评估中<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>事件处理程序右侧<ph id="ph2">`ListBox`</ph>，以确定将哪些拖动操作基于 SHIFT、 CTRL、 ALT 和 CTRL + ALT 键的状态。</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">中的位置<ph id="ph1">`ListBox`</ph>期间还确定将发生放置<ph id="ph2">`DragOver`</ph>事件。</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</source>
          <target state="translated">如果要删除的数据不是<ph id="ph1">`String`</ph>，则<ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph>设置为<ph id="ph3">`None`</ph>中<ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">最后，下拉的状态将显示在<ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">要为权限放置的数据<ph id="ph1">`ListBox`</ph>中确定<ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph>事件处理程序和<ph id="ph3">`String`</ph>值添加中的适当位置<ph id="ph4">`ListBox`</ph>。</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">如果在拖动操作超出边界的窗体中，则采用取消拖放操作<ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event.</source>
          <target state="translated">此代码片段演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragLeave">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>完整的代码示例的方法。</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.DragOver">
          <source>Occurs when an object is dragged over the control's bounds.</source>
          <target state="translated">在将对象拖到控件的边界上发生。</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised when the mouse cursor moves within the bounds of the control during a drag-and-drop operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>鼠标光标拖放操作期间的控件的边界内移动时将引发事件。</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The following describes how and when events related to drag-and-drop operations are raised.</source>
          <target state="translated">下面描述与拖放操作相关的事件的引发方式以及引发时间。</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>方法确定当前光标位置下的控件。</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>It then checks to see if the control is a valid drop target.</source>
          <target state="translated">然后检查以确定控件是否有效的放置目标。</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the control is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
          <target state="translated">如果控件是有效的放置目标，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>产生指定的拖放效果引发事件。</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">有关拖放效果的列表，请参见 <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> 枚举。</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</source>
          <target state="translated">跟踪鼠标光标位置、键盘状态和鼠标按钮状态的更改。</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">如果用户移出一个窗口，则引发 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the mouse enters another control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.</source>
          <target state="translated">如果鼠标进入另一个控件，则引发该控件的 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the mouse moves but stays within the same control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.</source>
          <target state="translated">如果鼠标移动但停留在同一个控件中，则引发 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
          <target state="translated">如果键盘或鼠标按钮状态，更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph>事件引发，并确定是否继续拖动、 放置数据或取消该操作基于值<ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph>属性的事件的<ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> value is <ph id="ph2">`Continue`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph>值是<ph id="ph2">`Continue`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>引发事件以继续操作和<ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>产生新效果引发事件，从而能够设置适当的视觉反馈。</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">有关有效放置效果的列表，请参见 <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> 枚举。</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>事件成对发生，以便当鼠标移到放置目标时，用户提供的最新反馈有关鼠标位置。</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph>是<ph id="ph2">`Drop`</ph>、 向源返回放置效果值，以便源应用程序可以执行适当的操作的源数据; 例如，如果会剪切数据是移动操作。</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Cancel`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph>是<ph id="ph2">`Cancel`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> are in screen coordinates, not client coordinates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph>位于屏幕坐标，未工作区坐标。</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The following line of C# code converts the properties to a client <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph>:</source>
          <target state="translated">以下 C# 代码行将属性转换为客户端<ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));</source>
          <target state="translated">点 clientPoint = targetControl.PointToClient （新的点 (de。X，de。Y));</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The following code example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">下面的代码示例演示两个之间拖放操作<ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">该示例通过调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>方法的拖放操作启动时。</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">如果鼠标已移动的拖放操作启动多个<ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph>从期间的鼠标位置<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph>方法用于确定要在将拖动的项的索引<ph id="ph2">`MouseDown`</ph>事件。</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">该示例还演示如何使用自定义光标拖放操作。</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The example requires that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">该示例需要两个光标文件<ph id="ph1">`3dwarro.cur`</ph>和<ph id="ph2">`3dwno.cur`</ph>、 存在于应用程序目录，用于自定义拖动和非放置光标，分别。</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">如果将使用自定义光标<ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph>已选中。</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">自定义光标设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">键盘状态评估中<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>事件处理程序右侧<ph id="ph2">`ListBox`</ph>，以确定将哪些拖动操作基于 SHIFT、 CTRL、 ALT 和 CTRL + ALT 键的状态。</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">中的位置<ph id="ph1">`ListBox`</ph>期间还确定将发生放置<ph id="ph2">`DragOver`</ph>事件。</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</source>
          <target state="translated">如果要删除的数据不是<ph id="ph1">`String`</ph>，则<ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph>设置为<ph id="ph3">`None`</ph>中<ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">最后，下拉的状态将显示在<ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">要为权限放置的数据<ph id="ph1">`ListBox`</ph>中确定<ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph>事件处理程序和<ph id="ph3">`String`</ph>值添加中的适当位置<ph id="ph4">`ListBox`</ph>。</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">如果在拖动操作超出边界的窗体中，则采用取消拖放操作<ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event.</source>
          <target state="translated">此代码片段演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.DragOver">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>完整的代码示例的方法。</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>The bitmap to be drawn to.</source>
          <target state="translated">要绘制到的位图。</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>The bounds within which the control is rendered.</source>
          <target state="translated">呈现控件时的边界。</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>Supports rendering to the specified bitmap.</source>
          <target state="translated">支持对指定位图的呈现。</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> method is not supported for ActiveX controls.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph>的 ActiveX 控件不支持方法。</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>You can override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPrint%2A&gt;</ph> event and provide custom printing logic if required.</source>
          <target state="translated">您可以重写<ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPrint%2A&gt;</ph>事件，并根据需要提供自定义打印逻辑。</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> method has the following limitations:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph>方法具有以下限制：</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>An <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> might be thrown for large bitmaps.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>针对大型位图，可能会引发。</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>The maximum allowable size varies by machine.</source>
          <target state="translated">因计算机而异的最大大小。</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> does not support the <ph id="ph2">`Ink`</ph> controls for the Windows XP Tablet PC Edition 2005 operating system.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> 不支持<ph id="ph2">`Ink`</ph>Windows XP Tablet PC Edition 2005 操作系统的控件。</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> does not draw a child <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> if the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> is set to <ph id="ph5">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> 不绘制子<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>如果<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph>属性<ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>设置为<ph id="ph5">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source>Controls inside containers are rendered in reverse order.</source>
          <target state="translated">容器内的控件将按相反的顺序呈现。</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> is not fully functional for the <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>; only the border of a bitmap is drawn.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DrawToBitmap%2A&gt;</ph> 不是完全正常工作，以<ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>; 仅绘制的位图的边框。</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Enabled">
          <source>Gets or sets a value indicating whether the control can respond to user interaction.</source>
          <target state="translated">获取或设置一个值，该值指示控件是否可以对用户交互作出响应。</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control can respond to user interaction; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控件可以对用户交互作出响应，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>With the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property, you can enable or disable controls at run time.</source>
          <target state="translated">与<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph>属性，你可以启用或禁用在运行时的控件。</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>For example, you can disable controls that do not apply to the current state of the application.</source>
          <target state="translated">例如，你可以禁用不适用于应用程序的当前状态的控件。</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>You can also disable a control to restrict its use.</source>
          <target state="translated">你也可以禁用以限制其使用的控件。</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>For example, a button can be disabled to prevent the user from clicking it.</source>
          <target state="translated">例如，可以禁用按钮，以防止用户单击它。</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>If a control is disabled, it cannot be selected.</source>
          <target state="translated">如果禁用了控件，则无法选择。</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph> does not disable the application's control box or prevent the application window from receiving the focus.</source>
          <target state="translated">设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph>属性<ph id="ph2">`false`</ph>不会禁用应用程序的控制框或防止应用程序窗口接收焦点。</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>When a container control has its enabled property set to <ph id="ph1">`false`</ph>, all its contained controls are disabled, as well.</source>
          <target state="translated">当容器控件具有设置为其启用的属性<ph id="ph1">`false`</ph>，其包含的所有控件将被都禁用，以及。</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>For example, if the user clicks on any of the controls contained in a disabled <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control, no events are raised.</source>
          <target state="translated">例如，如果用户单击的任何控件中已禁用包含<ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>控件，会引发任何事件。</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>When a scrollable control is disabled, the scroll bars are also disabled.</source>
          <target state="translated">当禁用可滚动的控件时，还将禁用滚动条。</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>For example, a disabled multiline textbox is unable to scroll to display all the lines of text.</source>
          <target state="translated">例如，已禁用的多行文本框中不能进行滚动才能显示的文本的所有行。</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and sets some of its common properties.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>并设置一些其通用的属性。</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and sets its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> within the group box.</source>
          <target state="translated">该示例创建<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>并设置其<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>组框中。</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>Next, it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of the group box, and docks the group box to the top of the form.</source>
          <target state="translated">接下来，它将设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性组框中，并停靠组框中的，到窗体顶部。</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Enabled">
          <source>Lastly, it disables the group box by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>, which causes all controls contained within the group box to be disabled.</source>
          <target state="translated">最后，通过设置禁用分组框<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph>属性<ph id="ph2">`false`</ph>，这将导致产生包含在要禁用的组框内的所有控件。</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.EnabledChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Enabled" /&gt;</ph> property value has changed.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Enabled" /&gt;</ph> 属性值更改后发生。</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.EnabledChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">如果将引发此事件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph>通过以编程方式修改或用户交互更改属性。</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.EnabledChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.EnabledChanged">
          <source>The following code example uses two <ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> controls to demonstrate the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.EnabledChanged&gt;</ph> event.</source>
          <target state="translated">下面的代码示例使用两个<ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph>控件，以演示<ph id="ph2">&lt;xref:System.Windows.Forms.Control.EnabledChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.EnabledChanged">
          <source>Clicking one button changes the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property of the other button to <ph id="ph2">`false`</ph> and displays a <ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">单击一个按钮将更改的值<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph>属性的其他按钮以<ph id="ph2">`false`</ph>并显示<ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that represents a specific invoke asynchronous operation, returned when calling <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>，表示特定的调用异步操作，在调用 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph> 时返回。</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>Retrieves the return value of the asynchronous operation represented by the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> passed.</source>
          <target state="translated">检索由传递的 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 表示的异步操作的返回值。</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> generated by the asynchronous operation.</source>
          <target state="translated">由异步操作生成的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>If the asynchronous operation has not been completed, this function will block until the result is available.</source>
          <target state="translated">如果尚未完成异步操作，在结果可用之前，将阻止此函数。</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">除了<ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph>属性，在控件上都是线程安全的四种方法： <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>，和<ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph>如果已创建控件的句柄。</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph>在后台线程上创建控件的句柄之前可能会导致跨线程调用的非法。</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</source>
          <target state="translated">对于所有其他方法调用，你应使用 invoke 方法之一进行封送处理对控件的线程的调用。</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 参数值为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> object was not created by a preceding call of the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph> method from the same control.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 对象不是由同一控件中的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /&gt;</ph> 方法的前一个调用创建的。</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Enter">
          <source>Occurs when the control is entered.</source>
          <target state="translated">进入控件时发生。</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> property to the current form, focus events occur in the following order:</source>
          <target state="translated">当你通过使用键盘 （选项卡上，按 SHIFT + TAB 等），通过调用更改焦点<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph>方法，或通过设置<ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph>到当前窗体的属性，将按以下顺序发生焦点事件：</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>When you change the focus by using the mouse or by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:</source>
          <target state="translated">当你通过使用鼠标或通过调用更改焦点<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph>方法，焦点事件按下列顺序发生：</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph>属性设置为<ph id="ph2">`false`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>和<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph>事件将被抑制。</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events are suppressed by the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>事件所抑制的<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>The equivalent events in the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class are the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> events.</source>
          <target state="translated">中的等效事件<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>类<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>事件层次结构，并将级联向上和向下父链直到达到相应的控件。</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>For example, assume you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with two <ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> controls, and each <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control has one <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">例如，假定你将<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>包含两个<ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>控件，并且每个<ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>控件有一个<ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>When the caret is moved from one <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> to the other, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> event is raised for the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, and the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> event is raised for the other <ph id="ph6">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and <ph id="ph7">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">当从一个移动插入符号<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>到另一个，<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>为引发事件<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>和<ph id="ph4">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>，和<ph id="ph5">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>其他引发事件<ph id="ph6">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>和<ph id="ph7">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>Do not attempt to set focus from within the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.</source>
          <target state="translated">请不要尝试将焦点设置在<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>，或<ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>Doing so can cause your application or the operating system to stop responding.</source>
          <target state="translated">这样做会导致你的应用程序或操作系统停止响应。</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>For more information, see the <ph id="ph1">`WM_KILLFOCUS`</ph> topic in the "Keyboard Input Reference" section and the "Message Deadlocks" section of the<bpt id="p1">[</bpt>About Messages and Message Queues<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx)</ept>topic.</source>
          <target state="translated">有关详细信息，请参阅<ph id="ph1">`WM_KILLFOCUS`</ph>"键盘输入参考"部分中的"消息死锁"部分的主题<bpt id="p1">[</bpt>关于消息和消息队列<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx)</ept>主题。</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Enter">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> event to change the foreground and background colors of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> under particular conditions.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>事件来更改的前景色和背景颜色<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>在特定情况下。</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FindForm">
          <source>Retrieves the form that the control is on.</source>
          <target state="translated">检索控件所在的窗体。</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FindForm">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that the control is on.</source>
          <target state="translated">控件所在的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FindForm">
          <source>The control's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> property value might not be the same as the <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> returned by <ph id="ph3">&lt;xref:System.Windows.Forms.Control.FindForm%2A&gt;</ph> method.</source>
          <target state="translated">控件的<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph>属性值可能不与相同<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>返回<ph id="ph3">&lt;xref:System.Windows.Forms.Control.FindForm%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FindForm">
          <source>For example, if a <ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> control is contained within a <ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control, and the <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> is on a <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>, the <ph id="ph5">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> control's <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> is the <ph id="ph7">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and the <ph id="ph8">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control's <ph id="ph9">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> is the <ph id="ph10">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">例如，如果<ph id="ph1">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph>控件包含在<ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>控件，与<ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>位于<ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>、<ph id="ph5">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph>控件的<ph id="ph6">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph>是<ph id="ph7">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>和<ph id="ph8">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>控件<ph id="ph9">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph>是<ph id="ph10">&lt;xref:System.Windows.Forms.Form&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FindForm">
          <source>The following code example finds the form that contains the specified button.</source>
          <target state="translated">下面的代码示例查找包含指定的按钮的窗体。</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FindForm">
          <source>for all windows to call this method.</source>
          <target state="translated">为所有窗口，才能调用此方法。</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FindForm">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph>值<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Focus">
          <source>Sets input focus to the control.</source>
          <target state="translated">为控件设置输入焦点。</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Focus">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the input focus request was successful; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果输入焦点请求成功，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method returns <ph id="ph2">`true`</ph> if the control successfully received input focus.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph>方法返回<ph id="ph2">`true`</ph>如果控件成功接收输入的焦点。</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>The control can have the input focus while not displaying any visual cues of having the focus.</source>
          <target state="translated">控件可以在不显示有焦点的任何视觉提示时具有输入的焦点。</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>This behavior is primarily observed by the nonselectable controls listed below, or any controls derived from them.</source>
          <target state="translated">下面列出的不可选择控件主要遵循此行为，或任何控件派生自它们。</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>A control can be selected and receive input focus if all the following are true: the <ph id="ph1">`Selectable`</ph> value of <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> is set to <ph id="ph3">`true`</ph>, it is contained in another control, and all its parent controls are both visible and enabled.</source>
          <target state="translated">控件可以选中并接收输入的焦点，如果符合下列所有条件：<ph id="ph1">`Selectable`</ph>值<ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>设置为<ph id="ph3">`true`</ph>，该列包含在另一个控件中，并且所有其父控件是否可见且已启用。</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>The Windows Forms controls in the following list are not selectable.</source>
          <target state="translated">以下列表中的 Windows 窗体控件不是可选的。</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>Controls derived from these controls are also not selectable.</source>
          <target state="translated">派生自这些控件的控件也是不可选的。</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (when there is no link present in the control)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> （当不存在控件中的链接）</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> is a low-level method intended primarily for custom control authors.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> 低级别的方法主要适用于自定义控件作者。</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>Instead, application programmers should use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> property for child controls, or the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> method for forms.</source>
          <target state="translated">相反，应使用应用程序程序员<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph>方法或<ph id="ph2">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph>子控件的属性或<ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph>窗体的方法。</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>The following code example sets focus to the specified <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, if it can receive focus.</source>
          <target state="translated">下面的代码示例将焦点设置为指定<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如果它可以接收焦点。</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>for all windows to call this method.</source>
          <target state="translated">为所有窗口，才能调用此方法。</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Focus">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph>值<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Focused">
          <source>Gets a value indicating whether the control has input focus.</source>
          <target state="translated">获取一个值，该值指示控件是否有输入焦点。</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Focused">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control has focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控件有焦点，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Focused">
          <source>The following code example disables a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> if a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> does not have focus.</source>
          <target state="translated">下面的代码示例禁用<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>如果<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>不具有焦点。</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Focused">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> named <ph id="ph3">`textBox1`</ph> and two <ph id="ph4">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects named <ph id="ph5">`menuItemEdit`</ph> and <ph id="ph6">`menuItemEditInsertCustomerInfo`</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>与<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>名为<ph id="ph3">`textBox1`</ph>和两个<ph id="ph4">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>对象命名的<ph id="ph5">`menuItemEdit`</ph>和<ph id="ph6">`menuItemEditInsertCustomerInfo`</ph>。</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Focused">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Focused" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Focused" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Focused" /&gt;</ph>属性在派生类中，使用基类的<ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Focused" /&gt;</ph>属性来扩展的基实现。</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Focused">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">否则，你必须提供所有实现。</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Font">
          <source>Gets or sets the font of the text displayed by the control.</source>
          <target state="translated">获取或设置控件显示的文字的字体。</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> to apply to the text displayed by the control.</source>
          <target state="translated">要应用于由控件显示的文本的 <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>The default is the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultFont" /&gt;</ph> property.</source>
          <target state="translated">默认为 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultFont" /&gt;</ph> 属性的值。</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> property is an ambient property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph>属性是一个环境属性。</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>An ambient property is a control property that, if not set, is retrieved from the parent control.</source>
          <target state="translated">环境属性是控件属性，如果未设置，从父控件检索。</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>都不具有相同<ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>作为其父<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>默认情况下。</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>For more information about ambient properties, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.</source>
          <target state="translated">有关环境属性的详细信息，请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph>类或<ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>类概述。</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>Because the <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> property a new <ph id="ph3">&lt;xref:System.Drawing.Font&gt;</ph>.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph>不可变 （这意味着你无法调整其任何属性），您可以只分配<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph>属性指定新<ph id="ph3">&lt;xref:System.Drawing.Font&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>However, you can base the new font on the existing font.</source>
          <target state="translated">但是，您可以基于新的字体基于现有的字体。</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic、 C#]</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>The following is an example of how to adjust the existing font to make it bold:</source>
          <target state="translated">下面是如何调整现有字体以使其成为粗体的示例：</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>The following code example displays a <ph id="ph1">&lt;xref:System.Windows.Forms.FontDialog&gt;</ph> to the user and changes the <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph> of a <ph id="ph3">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> control.</source>
          <target state="translated">下面的代码示例显示<ph id="ph1">&lt;xref:System.Windows.Forms.FontDialog&gt;</ph>给用户，并更改<ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph>的<ph id="ph3">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> and a <ph id="ph3">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> on it.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>与<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph>在其上。</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph>属性在派生类中，使用基类的<ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph>属性来扩展的基实现。</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">否则，你必须提供所有实现。</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Font">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">你无需重写二者，<ph id="ph1">&lt;see langword="get" /&gt;</ph>和<ph id="ph2">&lt;see langword="set" /&gt;</ph>访问器<ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph>属性; 你可以根据需要重写只有一个。</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.FontChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> property value changes.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> 属性值更改时发生。</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.FontChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> property is changed by either a programmatic modification or through interaction.</source>
          <target state="translated">如果将引发此事件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph>通过以编程方式修改或通过交互更改属性。</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.FontChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.FontChanged">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FontChanged&gt;</ph> event.</source>
          <target state="translated">下面的代码示例演示<ph id="ph1">&lt;xref:System.Windows.Forms.Control.FontChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.FontHeight">
          <source>Gets or sets the height of the font of the control.</source>
          <target state="translated">获取或设置控件的字体的高度。</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.FontHeight">
          <source>The height of the <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> of the control in pixels.</source>
          <target state="translated">控件的 <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> 的高度（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.FontHeight">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FontHeight%2A&gt;</ph> property should not be set to any value other than the control's <ph id="ph2">&lt;xref:System.Drawing.Font.Height%2A?displayProperty=nameWithType&gt;</ph> value, or -1.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.FontHeight%2A&gt;</ph>属性不应设置为非控件的值<ph id="ph2">&lt;xref:System.Drawing.Font.Height%2A?displayProperty=nameWithType&gt;</ph>值，则为-1。</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.FontHeight">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FontHeight%2A&gt;</ph> to -1 has the effect of clearing the cached height value, and the value is recalculated the next time the property is referenced.</source>
          <target state="translated">设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.FontHeight%2A&gt;</ph>为-1 起作用的清除缓存的高度值，并且引用该属性在下次重新计算的值。</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>Gets or sets the foreground color of the control.</source>
          <target state="translated">获取或设置控件的前景色。</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>The foreground <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> of the control.</source>
          <target state="translated">控件的前景 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>The default is the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultForeColor" /&gt;</ph> property.</source>
          <target state="translated">默认为 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultForeColor" /&gt;</ph> 属性的值。</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> property is an ambient property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>属性是一个环境属性。</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>An ambient property is a control property that, if not set, is retrieved from the parent control.</source>
          <target state="translated">环境属性是控件属性，如果未设置，从父控件检索。</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>都不具有相同<ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>作为其父<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>默认情况下。</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>For more information about ambient properties, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.</source>
          <target state="translated">有关环境属性的详细信息，请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph>类或<ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>类概述。</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of the controls to the default system colors.</source>
          <target state="translated">下面的代码示例设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的默认系统颜色的控件。</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>The code recursively calls itself if the control has any child controls.</source>
          <target state="translated">如果控件具有任何子控件，则代码以递归方式调用自身。</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>This code example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with at least one child control; however, a child container control, like a <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, with its own child control(s) would better demonstrate the recursion.</source>
          <target state="translated">此代码示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>与至少一个子控件; 但是，子容器控制，如<ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>，与它自己的子控件将更好地演示递归。</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph>属性在派生类中，使用基类的<ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph>属性来扩展的基实现。</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">否则，你必须提供所有实现。</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ForeColor">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">你无需重写二者，<ph id="ph1">&lt;see langword="get" /&gt;</ph>和<ph id="ph2">&lt;see langword="set" /&gt;</ph>访问器<ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph>属性; 你可以根据需要重写只有一个。</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> property value changes.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> 属性值更改时发生。</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> property is changed by either a programmatic modification or through interaction.</source>
          <target state="translated">如果将引发此事件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>通过以编程方式修改或通过交互更改属性。</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>The following code example is an event handler that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是一个事件处理程序时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph2">`Changed`</ph> that are raised when the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> value changes (<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph2">`Changed`</ph>都时引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept>值发生更改 (<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>显示货币数据。</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ForeColorChanged">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>包含<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)">
          <source>The window handle (<ph id="ph1">&lt;see langword="HWND" /&gt;</ph>) to search for.</source>
          <target state="translated">要搜索的窗口句柄 (<ph id="ph1">&lt;see langword="HWND" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)">
          <source>Retrieves the control that contains the specified handle.</source>
          <target state="translated">检索包含指定句柄的控件。</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> that represents the control associated with the specified handle; returns <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no control with the specified handle is found.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>，它表示与指定句柄关联的控件；如果找不到带有指定句柄的控件，就返回 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)">
          <source>This method searches up the window handle parent chain until it finds a handle that is associated with a control.</source>
          <target state="translated">此方法搜索窗口句柄父链向上，直至找到与控件关联的句柄。</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)">
          <source>This method is more reliable than the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FromHandle%2A&gt;</ph> method, because it correctly returns controls that own more than one handle.</source>
          <target state="translated">此方法是比更可靠<ph id="ph1">&lt;xref:System.Windows.Forms.Control.FromHandle%2A&gt;</ph>方法，因为它正确返回拥有多个句柄的控件。</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)">
          <source>for all windows to call this method.</source>
          <target state="translated">为所有窗口，才能调用此方法。</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph>值<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)">
          <source>The window handle (<ph id="ph1">&lt;see langword="HWND" /&gt;</ph>) to search for.</source>
          <target state="translated">要搜索的窗口句柄 (<ph id="ph1">&lt;see langword="HWND" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)">
          <source>Returns the control that is currently associated with the specified handle.</source>
          <target state="translated">返回当前与指定句柄关联的控件。</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> that represents the control associated with the specified handle; returns <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no control with the specified handle is found.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>，它表示与指定句柄关联的控件；如果找不到带有指定句柄的控件，就返回 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.FromChildHandle%2A&gt;</ph> method if you need to return controls that own more than one handle.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.FromChildHandle%2A&gt;</ph>方法如果你需要返回拥有多个句柄的控件。</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)">
          <source>for all windows to call this method.</source>
          <target state="translated">为所有窗口，才能调用此方法。</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph>值<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)">
          <source>An <ph id="ph1">&lt;see langword="Int32" /&gt;</ph> that identifies the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> to retrieve.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see langword="Int32" /&gt;</ph>，标识要检索的 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)">
          <source>Retrieves the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>.</source>
          <target state="translated">检索指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)">
          <source>The specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>.</source>
          <target state="translated">指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetAutoSizeMode">
          <source>Retrieves a value indicating how a control will behave when its <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.AutoSize" /&gt;</ph> property is enabled.</source>
          <target state="translated">检索一个值，该值指示当启用控件的 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.AutoSize" /&gt;</ph> 属性时控件的行为方式。</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetAutoSizeMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Retrieves the child control at a specified location.</source>
          <target state="translated">检索指定位置的子控件。</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that contains the coordinates where you want to look for a control.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>，其中包含的坐标指定您要在何处查找控件。</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)">
          <source>Coordinates are expressed relative to the upper-left corner of the control's client area.</source>
          <target state="translated">坐标相对于控件的工作区的左上角来表示。</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)">
          <source>Retrieves the child control that is located at the specified coordinates.</source>
          <target state="translated">检索位于指定坐标处的子控件。</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> that represents the control that is located at the specified point.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>，它表示位于指定点处的控件。</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)">
          <source>If there is no child control at the specified point, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetChildAtPoint%2A&gt;</ph> method returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">如果在指定的时候，没有任何子控件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetChildAtPoint%2A&gt;</ph>方法返回<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)">
          <source>for all windows to call this method if the control returned is not a child of the control.</source>
          <target state="translated">针对所有窗口，才能调用此方法，如果返回的控件不是子控件。</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph>值<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that contains the coordinates where you want to look for a control.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>，其中包含的坐标指定您要在何处查找控件。</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)">
          <source>Coordinates are expressed relative to the upper-left corner of the control's client area.</source>
          <target state="translated">坐标相对于控件的工作区的左上角来表示。</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)">
          <source>One of the values of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.GetChildAtPointSkip" /&gt;</ph>, determining whether to ignore child controls of a certain type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.GetChildAtPointSkip" /&gt;</ph> 值之一，确定是否忽略特定类型的子控件。</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)">
          <source>Retrieves the child control that is located at the specified coordinates, specifying whether to ignore child controls of a certain type.</source>
          <target state="translated">检索位于指定坐标的子控件，并且指定是否忽略特定类型的子控件。</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)">
          <source>The child <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> at the specified coordinates.</source>
          <target state="translated">指定坐标处的子 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetContainerControl">
          <source>Returns the next <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContainerControl" /&gt;</ph> up the control's chain of parent controls.</source>
          <target state="translated">沿着控件的父控件链向上，返回下一个 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContainerControl" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetContainerControl">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IContainerControl" /&gt;</ph>, that represents the parent of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.IContainerControl" /&gt;</ph>，表示 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> 的父级。</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetContainerControl">
          <source>for all windows to call this method.</source>
          <target state="translated">为所有窗口，才能调用此方法。</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetContainerControl">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph>值<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to start the search with.</source>
          <target state="translated">从其上开始搜索的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to search forward in the tab order; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to search backward.</source>
          <target state="translated">如果是 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则按 Tab 键顺序向前搜索；如果是 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 则向后搜索。</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
          <source>Retrieves the next control forward or back in the tab order of child controls.</source>
          <target state="translated">按照子控件的 Tab 键顺序向前或向后检索下一个控件。</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
          <source>The next <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> in the tab order.</source>
          <target state="translated">Tab 键顺序指定的下一个 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetNextControl%2A&gt;</ph> method is dependent on tab order.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetNextControl%2A&gt;</ph>方法是依赖于 tab 键顺序。</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
          <source>To iterate through all controls of a form, including nested controls, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> property.</source>
          <target state="translated">若要循环访问所有控件的窗体中，包括嵌套的控件，使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
          <source>To get or set the active control of a container control, use the <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> property.</source>
          <target state="translated">若要获取或设置容器控件的活动控件，请使用<ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>The custom-sized area for a control.</source>
          <target state="translated">控件的自定义大小的区域。</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>Retrieves the size of a rectangular area into which a control can be fitted.</source>
          <target state="translated">检索适合控件的矩形区域的大小。</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>An ordered pair of type <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> representing the width and height of a rectangle.</source>
          <target state="translated">类型为 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> 的有序对，表示矩形的宽度和高度。</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>The behavior of <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetPreferredSize%2A&gt;</ph> differs by control.</source>
          <target state="translated">行为<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetPreferredSize%2A&gt;</ph>不同的控件。</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.LayoutEngine%2A&gt;</ph> might be unable to assign the returned size to the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.LayoutEngine%2A&gt;</ph>可能导致无法将返回的大小分配给控件。</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>You can return a size larger than the constraints indicated in the <ph id="ph1">`proposedSize`</ph> parameter, but <ph id="ph2">`proposedSize`</ph> should decrease as the constraint decreases.</source>
          <target state="translated">你可以返回大小大于所示的约束<ph id="ph1">`proposedSize`</ph>参数，但<ph id="ph2">`proposedSize`</ph>会降低随着约束的降低。</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>For example, <ph id="ph1">`GetPreferredSize(new Size(100, 0))`</ph> should not be wider than <ph id="ph2">`GetPreferredSize(new Size(200, 0))`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`GetPreferredSize(new Size(100, 0))`</ph>不应为宽于<ph id="ph2">`GetPreferredSize(new Size(200, 0))`</ph>。</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
          <source>The exception is a <ph id="ph1">`proposedSize`</ph> of 0 or <ph id="ph2">`Size.Empty`</ph>, which are defined as unconstrained.</source>
          <target state="translated">例外情况是<ph id="ph1">`proposedSize`</ph>为 0 或<ph id="ph2">`Size.Empty`</ph>，其定义为不受约束。</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that specifies the area for which to retrieve the display bounds.</source>
          <target state="translated">指定要在显示器边界中检索的区域的 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>The height and width of the control's bounds.</source>
          <target state="translated">控件边界的高度和宽度。</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>One of the values of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> that specifies the bounds of the control to use when defining its size and position.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> 值之一，指定在定义控件大小和位置时要使用的控件边界。</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>Retrieves the bounds within which the control is scaled.</source>
          <target state="translated">检索缩放控件时的边界。</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> representing the bounds within which the control is scaled.</source>
          <target state="translated">一个表示控件缩放边界的 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>This is a helper method that is called by <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> to retrieve the bounds within which the control is scaled.</source>
          <target state="translated">这是由调用一个帮助器方法<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph>检索缩放控件时的边界。</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>You can override this method to reuse the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> scaling logic, but you must supply your own bounds.</source>
          <target state="translated">你可以重写此方法以重用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph>缩放逻辑，但你必须提供您自己的边界。</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>The default implementation returns scaled bounds that take into account the <ph id="ph1">`specified`</ph> bounds, whether the control is top level, whether the control is fixed width or auto size, and any adornments the control might have.</source>
          <target state="translated">默认实现返回考虑采取的缩放的边界<ph id="ph1">`specified`</ph>边界，是否控件为顶级，是否控件为固定宽度或自动调整大小，以及任何控件可能具有的修饰。</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> bit to return the value from.</source>
          <target state="translated">从中返回值的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> 位。</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source>Retrieves the value of the specified control style bit for the control.</source>
          <target state="translated">为控件检索指定控件样式位的值。</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified control style bit is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定控件样式位设置为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source>Control style bit flags are used to categorize supported behavior.</source>
          <target state="translated">控件样式位标志可用于进行分类支持的行为。</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source>A control can enable a style by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method and passing in the appropriate <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit and the Boolean value to set the bit to.</source>
          <target state="translated">控件可以通过调用来启用一种样式<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph>方法并传入适当<ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>位，要将位设置为的布尔值。</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source>To determine the value assigned to a specified <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit, use the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetStyle%2A&gt;</ph> method and pass in the <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> member to evaluate.</source>
          <target state="translated">若要确定分配给指定的值<ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>位，请使用<ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetStyle%2A&gt;</ph>方法并传入<ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>要计算的成员。</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source>The following code example returns the value of the double-buffering related style bits for a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">双缓冲相关样式的值的位将为以下代码示例返回<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
          <source>This example returns <ph id="ph1">`true`</ph> only if all the style bits are set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">此示例返回<ph id="ph1">`true`</ph>仅当所有样式位都设置为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetTopLevel">
          <source>Determines if the control is a top-level control.</source>
          <target state="translated">确定控件是否是顶级控件。</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.GetTopLevel">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control is a top-level control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果该控件为顶级控件，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>Occurs during a drag operation.</source>
          <target state="translated">在执行拖动操作期间发生。</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised when a drag-and-drop operation is started.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>启动拖放操作时引发事件。</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>With the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event, the source of a drag event can modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</source>
          <target state="translated">与<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>事件，拖动事件的源可以修改鼠标指针的外观，以便在拖放操作过程中为提供的用户的可视反馈。</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The following describes how and when events related to drag-and-drop operations are raised.</source>
          <target state="translated">下面描述与拖放操作相关的事件的引发方式以及引发时间。</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>方法确定当前光标位置下的控件。</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>It then checks to see if the control is a valid drop target.</source>
          <target state="translated">然后检查以确定控件是否有效的放置目标。</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the control is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
          <target state="translated">如果控件是有效的放置目标，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>产生指定的拖放效果引发事件。</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">有关拖放效果的列表，请参见 <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> 枚举。</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</source>
          <target state="translated">跟踪鼠标光标位置、键盘状态和鼠标按钮状态的更改。</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">如果用户移出一个窗口，则引发 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the mouse enters another control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.</source>
          <target state="translated">如果鼠标进入另一个控件，则引发该控件的 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the mouse moves but stays within the same control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.</source>
          <target state="translated">如果鼠标移动但停留在同一个控件中，则引发 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
          <target state="translated">如果键盘或鼠标按钮状态，更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph>事件引发，并确定是否继续拖动、 放置数据或取消该操作基于值<ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph>属性的事件的<ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Continue`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph>是<ph id="ph2">`Continue`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>引发事件以继续操作和<ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>产生新效果引发事件，从而能够设置适当的视觉反馈。</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">有关有效放置效果的列表，请参见 <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> 枚举。</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>事件成对发生，以便当鼠标移到放置目标时，用户提供的最新反馈有关鼠标位置。</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph>是<ph id="ph2">`Drop`</ph>、 向源返回放置效果值，以便源应用程序可以执行适当的操作的源数据; 例如，如果会剪切数据是移动操作。</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Cancel`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph>是<ph id="ph2">`Cancel`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The following code example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">下面的代码示例演示两个之间拖放操作<ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">该示例通过调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>方法的拖放操作启动时。</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">如果鼠标已移动的拖放操作启动多个<ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph>从期间的鼠标位置<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph>方法用于确定要在将拖动的项的索引<ph id="ph2">`MouseDown`</ph>事件。</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">该示例还演示如何使用自定义光标拖放操作。</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The example requires that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">该示例需要两个光标文件<ph id="ph1">`3dwarro.cur`</ph>和<ph id="ph2">`3dwno.cur`</ph>、 存在于应用程序目录，用于自定义拖动和非放置光标，分别。</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">如果将使用自定义光标<ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph>已选中。</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">自定义光标设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">键盘状态评估中<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>事件处理程序右侧<ph id="ph2">`ListBox`</ph>，以确定将哪些拖动操作基于 SHIFT、 CTRL、 ALT 和 CTRL + ALT 键的状态。</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">中的位置<ph id="ph1">`ListBox`</ph>期间还确定将发生放置<ph id="ph2">`DragOver`</ph>事件。</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</source>
          <target state="translated">如果要删除的数据不是<ph id="ph1">`String`</ph>，则<ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph>设置为<ph id="ph3">`None`</ph>中<ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">最后，下拉的状态将显示在<ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">要为权限放置的数据<ph id="ph1">`ListBox`</ph>中确定<ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph>事件处理程序和<ph id="ph3">`String`</ph>值添加中的适当位置<ph id="ph4">`ListBox`</ph>。</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">如果在拖动操作超出边界的窗体中，则采用取消拖放操作<ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event.</source>
          <target state="translated">此代码片段演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GiveFeedback">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>完整的代码示例的方法。</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>Occurs when the control receives focus.</source>
          <target state="translated">在控件接收焦点时发生。</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> property to the current form, focus events occur in the following order:</source>
          <target state="translated">当你通过使用键盘 （选项卡上，按 SHIFT + TAB 等），通过调用更改焦点<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph>方法，或通过设置<ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph>到当前窗体的属性，将按以下顺序发生焦点事件：</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>When you change the focus by using the mouse or by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:</source>
          <target state="translated">当你通过使用鼠标或通过调用更改焦点<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph>方法，焦点事件按下列顺序发生：</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph>属性设置为<ph id="ph2">`false`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>和<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph>事件将被抑制。</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages.</source>
          <target state="translated"><bpt id="p1">**</bpt>请注意<ept id="p1">**</ept><ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>事件是低级别的焦点事件绑定到的 WM_KILLFOCUS 和 WM_SETFOCUS Windows 消息。</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events are only used when updating <ph id="ph3">&lt;xref:System.Windows.Forms.UICues&gt;</ph> or when writing custom controls.</source>
          <target state="translated">通常情况下，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>更新时，仅使用事件<ph id="ph3">&lt;xref:System.Windows.Forms.UICues&gt;</ph>或编写自定义控件时。</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>Instead the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events should be used for all controls except the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> class, which uses the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> events.</source>
          <target state="translated">改为<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>事件应用于除之外的所有控件<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>类，它使用<ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>和<ph id="ph5">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>For more information about the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events, see the <bpt id="p1">[</bpt>WM_SETFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646283\(v=vs.85\).aspx)</ept>and<bpt id="p2">[</bpt>WM_KILLFOCUS<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> topics.</source>
          <target state="translated">有关详细信息<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>事件，请参阅<bpt id="p1">[</bpt>WM_SETFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646283\(v=vs.85\).aspx)</ept>和<bpt id="p2">[</bpt>WM_KILLFOCUS<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept>主题。</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>Do not attempt to set focus from within the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.</source>
          <target state="translated">请不要尝试将焦点设置在<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>，或<ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>Doing so can cause your application or the operating system to stop responding.</source>
          <target state="translated">这样做会导致你的应用程序或操作系统停止响应。</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>For more information, see the <bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> topic.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept>主题。</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.GotFocus">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> event.</source>
          <target state="translated">然后将其命名实例<ph id="ph1">`Control1`</ph>并确保与事件处理程序<ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Handle">
          <source>Gets the window handle that the control is bound to.</source>
          <target state="translated">获取控件绑定到的窗口句柄。</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Handle">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> that contains the window handle (<ph id="ph2">&lt;see langword="HWND" /&gt;</ph>) of the control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>，包含控件的窗口句柄 (<ph id="ph2">&lt;see langword="HWND" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Handle">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> property is a Windows <ph id="ph2">`HWND`</ph>.</source>
          <target state="translated">值<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph>属性是一个 Windows <ph id="ph2">`HWND`</ph>。</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Handle">
          <source>If the handle has not yet been created, referencing this property will force the handle to be created.</source>
          <target state="translated">如果尚未创建句柄，则引用此属性将强制要创建的句柄。</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Handle">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A?displayProperty=nameWithType&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> property.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Handle">
          <source>To run the example paste the following code in a form.</source>
          <target state="translated">若要运行该示例，请在窗体中粘贴以下代码。</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Handle">
          <source>Add two buttons named <ph id="ph1">`Button1`</ph> and <ph id="ph2">`Button2`</ph> to the form and ensure all events are connected to their event handlers.</source>
          <target state="translated">添加名为的两个按钮<ph id="ph1">`Button1`</ph>和<ph id="ph2">`Button2`</ph>到窗体，并确保所有事件都连接到其事件处理程序。</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>Occurs when a handle is created for the control.</source>
          <target state="translated">在为控件创建句柄时发生。</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>A handle is created when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> is displayed for the first time.</source>
          <target state="translated">当创建句柄<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>首次显示。</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>For example, if a <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> is created that has <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> set to <ph id="ph3">`false`</ph>, the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph> event will not be raised until <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> is set to <ph id="ph6">`true`</ph>.</source>
          <target state="translated">例如，如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>则会创建一个具有<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph>设置为<ph id="ph3">`false`</ph>、<ph id="ph4">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph>之前将不会引发事件<ph id="ph5">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph>设置为<ph id="ph6">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleCreated">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph> event.</source>
          <target state="translated">然后将其命名实例<ph id="ph1">`Control1`</ph>并确保与事件处理程序<ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>Occurs when the control's handle is in the process of being destroyed.</source>
          <target state="translated">在控件的句柄处于销毁过程中时发生。</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>During the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleDestroyed&gt;</ph> event, the control is still a valid Windows control and the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> can be recreated by calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method.</source>
          <target state="translated">期间<ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleDestroyed&gt;</ph>事件，该控件仍是一个有效的 Windows 控件和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph>可以通过调用重新创建<ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleDestroyed&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleDestroyed&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HandleDestroyed">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleDestroyed&gt;</ph> event.</source>
          <target state="translated">然后将其命名实例<ph id="ph1">`Control1`</ph>并确保与事件处理程序<ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleDestroyed&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.HasChildren">
          <source>Gets a value indicating whether the control contains one or more child controls.</source>
          <target state="translated">获取一个值，该值指示控件是否包含一个或多个子控件。</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.HasChildren">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control contains one or more child controls; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控件包含一个或多个子控件，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.HasChildren">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection has a <ph id="ph2">&lt;xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A&gt;</ph> greater than zero, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.HasChildren%2A&gt;</ph> property will return <ph id="ph4">`true`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>集合具有<ph id="ph2">&lt;xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A&gt;</ph>大于零，<ph id="ph3">&lt;xref:System.Windows.Forms.Control.HasChildren%2A&gt;</ph>属性将返回<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.HasChildren">
          <source>Accessing the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HasChildren%2A&gt;</ph> property does not force the creation of a <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> if the control has no children, so referencing this property can provide a performance benefit when walking a tree of controls.</source>
          <target state="translated">访问<ph id="ph1">&lt;xref:System.Windows.Forms.Control.HasChildren%2A&gt;</ph>属性不会强制创建<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>如果该控件没有任何子级，因此引用此属性可以提供性能益处时遍历树的控件。</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.HasChildren">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of the controls to the default system colors.</source>
          <target state="translated">下面的代码示例设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的默认系统颜色的控件。</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.HasChildren">
          <source>The code recursively calls itself if the control has any child controls.</source>
          <target state="translated">如果控件具有任何子控件，则代码以递归方式调用自身。</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.HasChildren">
          <source>This code example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with at least one child control; however, a child container control, like a <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, with its own child control(s) would better demonstrate the recursion.</source>
          <target state="translated">此代码示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>与至少一个子控件; 但是，子容器控制，如<ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>，与它自己的子控件将更好地演示递归。</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Height">
          <source>Gets or sets the height of the control.</source>
          <target state="translated">获取或设置控件的高度。</target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Height">
          <source>The height of the control in pixels.</source>
          <target state="translated">控件的高度（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Height">
          <source>Changes made to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> property values cause the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property value of the control to change.</source>
          <target state="translated">对所做更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>属性值将导致<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph>要更改的控件的属性值。</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Height">
          <source>The minimum height for the derived control <ph id="ph1">&lt;xref:System.Windows.Forms.Splitter&gt;</ph> is one pixel.</source>
          <target state="translated">派生的控件的最小高度<ph id="ph1">&lt;xref:System.Windows.Forms.Splitter&gt;</ph>为一个像素。</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Height">
          <source>The default height for the <ph id="ph1">&lt;xref:System.Windows.Forms.Splitter&gt;</ph> control is three pixels.</source>
          <target state="translated">默认高度<ph id="ph1">&lt;xref:System.Windows.Forms.Splitter&gt;</ph>控件为三个像素。</target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Height">
          <source>Setting the height of the <ph id="ph1">&lt;xref:System.Windows.Forms.Splitter&gt;</ph> control to a value less than one will reset the property value to the default height.</source>
          <target state="translated">设置的高度<ph id="ph1">&lt;xref:System.Windows.Forms.Splitter&gt;</ph>控制转移到一个值小于一个将属性值重置为默认高度。</target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Height">
          <source>The following code example creates three <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls on a form and sets their size and location by using the various size-related and location-related properties.</source>
          <target state="translated">下面的代码示例创建三个<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>窗体上控件并通过使用各种大小相关以及与位置相关属性中设置其大小和位置。</target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Height">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that has a width and height of at least 300 pixels.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>，其宽度和高度至少 300 像素。</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.HelpRequested">
          <source>Occurs when the user requests help for a control.</source>
          <target state="translated">用户请求控件帮助时发生。</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HelpRequested">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> event is commonly raised when the user presses the F1 key or an associated context-sensitive help button is clicked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph>通常时引发事件用户按下 F1 键或关联的上下文相关帮助按钮时发生。</target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HelpRequested">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HelpRequested">
          <source>The following code example demonstrates handling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> event to display custom Help content on a form containing four address fields.</source>
          <target state="translated">下面的代码示例演示如何处理<ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph>事件以便包含四个地址字段的窗体上显示自定义帮助内容。</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HelpRequested">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> event is raised either by pressing the F1 key with the focus in an address field, or by the using the context-sensitive Help button and clicking the Help cursor on an address field.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph>通过按 F1 键和焦点位于地址字段中，或通过使用上下文相关帮助按钮并单击帮助光标地址字段上的引发事件。</target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HelpRequested">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HelpEventArgs.Handled%2A&gt;</ph> property is set to true to indicate that the <ph id="ph2">`HelpRequested`</ph> event is handled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HelpEventArgs.Handled%2A&gt;</ph>属性设置为 true，则指示<ph id="ph2">`HelpRequested`</ph>处理事件。</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.HelpRequested">
          <source>The example also demonstrates storing the Help text in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Tag%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">该示例还演示存储中的帮助文本<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Tag%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Hide">
          <source>Conceals the control from the user.</source>
          <target state="translated">对用户隐藏控件。</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Hide">
          <source>Hiding the control is equivalent to setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">隐藏控件等效于设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph>属性<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Hide">
          <source>After the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property returns a value of <ph id="ph3">`false`</ph> until the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> method is called.</source>
          <target state="translated">后<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph>调用方法时，<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph>属性返回的值<ph id="ph3">`false`</ph>直到<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph>调用方法。</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Hide">
          <source>The following code example hides a button if the CTRL key is pressed when the button is clicked.</source>
          <target state="translated">如果单击该按钮下按下 CTRL 键，下面的代码示例将隐藏按钮。</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Hide">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> named <ph id="ph2">`button1`</ph> on a <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>名为<ph id="ph2">`button1`</ph>上<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>Gets or sets the Input Method Editor (IME) mode of the control.</source>
          <target state="translated">获取或设置控件的输入法编辑器 (IME) 模式。</target>       </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ImeMode.Inherit" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.ImeMode.Inherit" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>An IME is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, using a standard keyboard.</source>
          <target state="translated">IME 是一个程序，使用户能够输入复杂字符和符号，如日语汉字字符使用标准键盘。</target>       </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> property is typically set to <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.Off?displayProperty=nameWithType&gt;</ph> for a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control that is intended to only enter numeric values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph>属性通常设置为<ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.Off?displayProperty=nameWithType&gt;</ph>为<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>旨在只需输入数字值的控件。</target>       </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> property value is set to <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType&gt;</ph> for the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph>属性值设置为<ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType&gt;</ph>为<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>Most classes that do not directly support Input Method Editors, or allow direct input from an IME, will set the value of this property to <ph id="ph1">&lt;xref:System.Windows.Forms.ImeMode.NoControl&gt;</ph>.</source>
          <target state="translated">不直接支持输入法编辑器，或允许从 IME 直接输入的大多数类将设置到此属性的值<ph id="ph1">&lt;xref:System.Windows.Forms.ImeMode.NoControl&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>The user can interactively change the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> unless it has been programmatically set to <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.Disable?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">用户可以以交互方式更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph>除非已以编程方式设置<ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.Disable?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>In this case, the user will not be able to use the IME.</source>
          <target state="translated">在这种情况下，用户将不能使用 IME。</target>       </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> property is ignored on Windows 8 when the global input mode is in effect.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph>实际上全局输入的模式时，将在 Windows 8 上忽略属性。</target>       </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>For more info, see <bpt id="p1">[</bpt>Switch Text Input Changed from Per-Thread to Per-User<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=256509)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>交换机文本输入从更改每个线程为每个用户<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=256509)</ept>。</target>       </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ImeMode">
          <source>The assigned value is not one of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> enumeration values.</source>
          <target state="translated">所分配的值不是一个 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> 枚举值。</target>       </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ImeModeBase">
          <source>Gets or sets the IME mode of a control.</source>
          <target state="translated">获取或设置控件的 IME 模式。</target>       </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ImeModeBase">
          <source>The IME mode of the control.</source>
          <target state="translated">控件的 IME 模式。</target>       </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> property has changed.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> 属性更改后发生。</target>       </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph> property is changed by either a programmatic modification or through interaction.</source>
          <target state="translated">如果将引发此事件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A&gt;</ph>通过以编程方式修改或通过交互更改属性。</target>       </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>Controls that do not support Input Method Managers will never raise this event.</source>
          <target state="translated">不支持输入法管理器控件将永远不会引发此事件。</target>       </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>The following code example is an event handler that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是一个事件处理程序时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph2">`Changed`</ph> that are raised when the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> value changes (<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph2">`Changed`</ph>都时引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept>值发生更改 (<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>显示货币数据。</target>       </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ImeModeChanged">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>包含<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InitLayout">
          <source>Called after the control has been added to another container.</source>
          <target state="translated">在将控件添加到另一个容器之后调用。</target>       </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.InitLayout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InitLayout%2A&gt;</ph> method is called immediately after adding a control to a container.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.InitLayout%2A&gt;</ph>在将控件添加到容器之后立即调用方法。</target>       </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.InitLayout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InitLayout%2A&gt;</ph> method enables a control to initialize its layout state based on its container.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.InitLayout%2A&gt;</ph>方法使控件能够将基于其容器其布局状态初始化。</target>       </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.InitLayout">
          <source>For example, you would typically apply anchoring and docking to the control in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InitLayout%2A&gt;</ph> method.</source>
          <target state="translated">例如，你通常会应用锚定和停靠到中的控件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.InitLayout%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.InitLayout">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.InitLayout" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.InitLayout" /&gt;</ph> method so that the control is displayed correctly.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.InitLayout" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.InitLayout" /&gt;</ph>方法，以便正确显示控件。</target>       </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Invalidates a specific region of the control and causes a paint message to be sent to the control.</source>
          <target state="translated">使控件的特定区域无效并向控件发送绘制消息。</target>       </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>Invalidates the entire surface of the control and causes the control to be redrawn.</source>
          <target state="translated">使控件的整个图面无效并导致重绘控件。</target>       </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>方法不会强制同步绘制; 若要强制同步绘制，调用<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph>方法之后调用<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>When this method is called with no parameters, the entire client area is added to the update region.</source>
          <target state="translated">当不带任何参数调用此方法时，整个工作区添加到更新区域。</target>       </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped.</source>
          <target state="translated">下面的代码示例使用户将图像或图像文件拖动到窗体，并将其显示在上的点被删除。</target>       </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph>方法被重写来重绘图像绘制窗体时每次; 否则该映像将只持续到下一步重新绘制。</target>       </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph>事件处理方法确定要拖动到窗体中数据的类型，并提供适当的反馈。</target>       </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event-handling method displays the image on the form, if an <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> can be created from the data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph>事件处理方法在窗体上显示的图像，如果<ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>可以从数据创建。</target>       </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph> values are screen coordinates, the example uses the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph> method to convert them to client coordinates.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph>值屏幕坐标，该示例使用<ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph>方法来将它们转换成工作区坐标。</target>       </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to invalidate the control's child controls; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要使控件的子控件无效，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Boolean)">
          <source>Invalidates a specific region of the control and causes a paint message to be sent to the control.</source>
          <target state="translated">使控件的特定区域无效并向控件发送绘制消息。</target>       </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Boolean)">
          <source>Optionally, invalidates the child controls assigned to the control.</source>
          <target state="translated">还可以使分配给该控件的子控件无效。</target>       </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Boolean)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>方法不会强制同步绘制; 若要强制同步绘制，调用<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph>方法之后调用<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Boolean)">
          <source>When this method is called with no parameters, the entire client area is added to the update region.</source>
          <target state="translated">当不带任何参数调用此方法时，整个工作区添加到更新区域。</target>       </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the region to invalidate.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>，表示要使之无效的区域。</target>       </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)">
          <source>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</source>
          <target state="translated">使控件的指定区域无效（将其添加到控件的更新区域，下次绘制操作时将重新绘制更新区域），并向控件发送绘制消息。</target>       </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>方法不会强制同步绘制; 若要强制同步绘制，调用<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph>方法之后调用<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)">
          <source>When this method is called with no parameters, the entire client area is added to the update region.</source>
          <target state="translated">当不带任何参数调用此方法时，整个工作区添加到更新区域。</target>       </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> to invalidate.</source>
          <target state="translated">要使之无效的 <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)">
          <source>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</source>
          <target state="translated">使控件的指定区域无效（将其添加到控件的更新区域，下次绘制操作时将重新绘制更新区域），并向控件发送绘制消息。</target>       </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>方法不会强制同步绘制; 若要强制同步绘制，调用<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph>方法之后调用<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)">
          <source>When this method is called with no parameters, the entire client area is added to the update region.</source>
          <target state="translated">当不带任何参数调用此方法时，整个工作区添加到更新区域。</target>       </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the region to invalidate.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>，表示要使之无效的区域。</target>       </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to invalidate the control's child controls; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要使控件的子控件无效，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)">
          <source>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</source>
          <target state="translated">使控件的指定区域无效（将其添加到控件的更新区域，下次绘制操作时将重新绘制更新区域），并向控件发送绘制消息。</target>       </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)">
          <source>Optionally, invalidates the child controls assigned to the control.</source>
          <target state="translated">还可以使分配给该控件的子控件无效。</target>       </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>方法不会强制同步绘制; 若要强制同步绘制，调用<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph>方法之后调用<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)">
          <source>When this method is called with no parameters, the entire client area is added to the update region.</source>
          <target state="translated">当不带任何参数调用此方法时，整个工作区添加到更新区域。</target>       </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> to invalidate.</source>
          <target state="translated">要使之无效的 <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to invalidate the control's child controls; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要使控件的子控件无效，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)">
          <source>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</source>
          <target state="translated">使控件的指定区域无效（将其添加到控件的更新区域，下次绘制操作时将重新绘制更新区域），并向控件发送绘制消息。</target>       </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)">
          <source>Optionally, invalidates the child controls assigned to the control.</source>
          <target state="translated">还可以使分配给该控件的子控件无效。</target>       </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method does not force a synchronous paint; to force a synchronous paint, call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method after calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>方法不会强制同步绘制; 若要强制同步绘制，调用<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph>方法之后调用<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)">
          <source>When this method is called with no parameters, the entire client area is added to the update region.</source>
          <target state="translated">当不带任何参数调用此方法时，整个工作区添加到更新区域。</target>       </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>Occurs when a control's display requires redrawing.</source>
          <target state="translated">控件的显示要求重新绘制时发生。</target>       </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidated&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidated&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Invalidated">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invalidated&gt;</ph> event.</source>
          <target state="translated">然后将其命名实例<ph id="ph1">`Control1`</ph>并确保与事件处理程序<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invalidated&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Executes a delegate on the thread that owns the control's underlying window handle.</source>
          <target state="translated">在拥有此控件的基础窗口句柄的线程上执行委托。</target>       </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>A delegate that contains a method to be called in the control's thread context.</source>
          <target state="translated">包含要在控件的线程上下文中调用的方法的委托。</target>       </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>Executes the specified delegate on the thread that owns the control's underlying window handle.</source>
          <target state="translated">在拥有此控件的基础窗口句柄的线程上执行指定的委托。</target>       </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>The return value from the delegate being invoked, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the delegate has no return value.</source>
          <target state="translated">正在被调用的委托的返回值，或者如果委托没有返回值，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>Delegates are similar to function pointers in C or C++ languages.</source>
          <target state="translated">委托是类似于 C 或 c + + 语言中的函数指针。</target>       </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>Delegates encapsulate a reference to a method inside a delegate object.</source>
          <target state="translated">委托封装对委托对象中的方法的引用。</target>       </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time.</source>
          <target state="translated">然后可以传递给调用所引用的方法的代码的委托对象和要调用的方法可以在编译时未知。</target>       </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.</source>
          <target state="translated">与在 C 或 c + + 中的函数指针，不同委托是面向对象的、 类型安全和更安全。</target>       </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> method searches up the control's parent chain until it finds a control or form that has a window handle if the current control's underlying window handle does not exist yet.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>方法搜索沿控件的父链直到它找到的控件或窗体具有一个窗口处理如果尚不存在当前控件的基础窗口句柄。</target>       </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>If no appropriate handle can be found, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> method will throw an exception.</source>
          <target state="translated">如果找不到任何合适的句柄，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>方法将引发异常。</target>       </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>Exceptions that are raised during the call will be propagated back to the caller.</source>
          <target state="translated">在调用期间引发的异常将传播回调用方。</target>       </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">除了<ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph>属性，在控件上都是线程安全的四种方法： <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>，和<ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph>如果已创建控件的句柄。</target>       </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph>在后台线程上创建控件的句柄之前可能会导致跨线程调用的非法。</target>       </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</source>
          <target state="translated">对于所有其他方法调用，你应使用 invoke 方法之一进行封送处理对控件的线程的调用。</target>       </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>The delegate can be an instance of <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph>, in which case the sender parameter will contain this control, and the event parameter will contain <ph id="ph2">&lt;xref:System.EventArgs.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">委托可以是实例<ph id="ph1">&lt;xref:System.EventHandler&gt;</ph>，在这种情况下发件人参数将包含此控件，并且事件参数将包含<ph id="ph2">&lt;xref:System.EventArgs.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>The delegate can also be an instance of <ph id="ph1">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph>, or any other delegate that takes a void parameter list.</source>
          <target state="translated">委托还可以是实例<ph id="ph1">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph>，或采用 void 参数列表的任何其他委托。</target>       </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>A call to an <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph> delegate will be faster than a call to another type of delegate.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.EventHandler&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph>委托会更快比其他类型的委托的调用。</target>       </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>An exception might be thrown if the thread that should process the message is no longer active.</source>
          <target state="translated">如果应处理该消息的线程不再处于活动状态，则可能引发异常。</target>       </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>The following code example shows controls that contain a delegate.</source>
          <target state="translated">下面的代码示例显示包含一个委托的控件。</target>       </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>The delegate encapsulates a method that adds items to the list box, and this method is executed on the thread that owns the underlying handle of the form.</source>
          <target state="translated">委托封装的方法，将项添加到列表框中，并拥有的窗体的基础句柄的线程上执行此方法。</target>       </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
          <source>When the user clicks on the button, <ph id="ph1">`Invoke`</ph> runs the delegate.</source>
          <target state="translated">当用户单击按钮，<ph id="ph1">`Invoke`</ph>运行委托。</target>       </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>A delegate to a method that takes parameters of the same number and type that are contained in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">一个方法委托，它采用的参数的数量和类型与 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 参数中所包含的相同。</target>       </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>An array of objects to pass as arguments to the specified method.</source>
          <target state="translated">作为指定方法的参数传递的对象数组。</target>       </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the method takes no arguments.</source>
          <target state="translated">如果此方法没有参数，该参数可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>Executes the specified delegate, on the thread that owns the control's underlying window handle, with the specified list of arguments.</source>
          <target state="translated">在拥有控件的基础窗口句柄的线程上，用指定的自变量列表执行指定委托。</target>       </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains the return value from the delegate being invoked, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the delegate has no return value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>，它包含正被调用的委托返回值；如果该委托没有返回值，则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>Delegates are similar to function pointers in C or C++ languages.</source>
          <target state="translated">委托是类似于 C 或 c + + 语言中的函数指针。</target>       </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>Delegates encapsulate a reference to a method inside a delegate object.</source>
          <target state="translated">委托封装对委托对象中的方法的引用。</target>       </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time.</source>
          <target state="translated">然后可以传递给调用所引用的方法的代码的委托对象和要调用的方法可以在编译时未知。</target>       </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.</source>
          <target state="translated">与在 C 或 c + + 中的函数指针，不同委托是面向对象的、 类型安全和更安全。</target>       </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.</source>
          <target state="translated">如果控件的句柄尚不存在，此方法搜索沿控件的父链中，直到它找到的控件或窗体具有窗口句柄。</target>       </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>If no appropriate handle can be found, this method throws an exception.</source>
          <target state="translated">如果找不到任何合适的句柄，此方法将引发异常。</target>       </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>Exceptions that are raised during the call will be propagated back to the caller.</source>
          <target state="translated">在调用期间引发的异常将传播回调用方。</target>       </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">除了<ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph>属性，在控件上都是线程安全的四种方法： <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>，和<ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph>如果已创建控件的句柄。</target>       </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph>在后台线程上创建控件的句柄之前可能会导致跨线程调用的非法。</target>       </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</source>
          <target state="translated">对于所有其他方法调用，你应使用 invoke 方法之一进行封送处理对控件的线程的调用。</target>       </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>The delegate can be an instance of <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph>, in which case the sender parameter will contain this control, and the event parameter will contain <ph id="ph2">&lt;xref:System.EventArgs.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">委托可以是实例<ph id="ph1">&lt;xref:System.EventHandler&gt;</ph>，在这种情况下发件人参数将包含此控件，并且事件参数将包含<ph id="ph2">&lt;xref:System.EventArgs.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>The delegate can also be an instance of <ph id="ph1">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph>, or any other delegate that takes a void parameter list.</source>
          <target state="translated">委托还可以是实例<ph id="ph1">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph>，或采用 void 参数列表的任何其他委托。</target>       </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>A call to an <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph> delegate will be faster than a call to another type of delegate.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.EventHandler&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.MethodInvoker&gt;</ph>委托会更快比其他类型的委托的调用。</target>       </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>An exception might be thrown if the thread that should process the message is no longer active.</source>
          <target state="translated">如果应处理该消息的线程不再处于活动状态，则可能引发异常。</target>       </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>The following code example shows controls that contain a delegate.</source>
          <target state="translated">下面的代码示例显示包含一个委托的控件。</target>       </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>The delegate encapsulates a method that adds items to the list box, and this method is executed on the thread that owns the underlying handle of the form, using the specified arguments.</source>
          <target state="translated">该委托封装的方法，将项添加到列表框中，并拥有的窗体中，使用指定的参数的基础句柄的线程上执行此方法。</target>       </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
          <source>When the user clicks on the button, <ph id="ph1">`Invoke`</ph> runs the delegate.</source>
          <target state="translated">当用户单击按钮，<ph id="ph1">`Invoke`</ph>运行委托。</target>       </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to assign the event to.</source>
          <target state="translated">要将事件分配到的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GotFocus" /&gt;</ph> event for the specified control.</source>
          <target state="translated">为指定的控件引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GotFocus" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to assign the event to.</source>
          <target state="translated">要将事件分配到的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LostFocus" /&gt;</ph> event for the specified control.</source>
          <target state="translated">为指定的控件引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LostFocus" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to assign the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> event to.</source>
          <target state="translated">要为之分配 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> 事件的 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> event for the specified control.</source>
          <target state="translated">为指定的控件引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to assign the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event to.</source>
          <target state="translated">要为之分配 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> 事件的 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event for the specified control.</source>
          <target state="translated">为指定的控件引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> to assign the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event to.</source>
          <target state="translated">要为之分配 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> 事件的 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see langword="PaintBackground" /&gt;</ph> event for the specified control.</source>
          <target state="translated">为指定的控件引发 <ph id="ph1">&lt;see langword="PaintBackground" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>Gets a value indicating whether the caller must call an invoke method when making method calls to the control because the caller is on a different thread than the one the control was created on.</source>
          <target state="translated">获取一个值，该值指示调用方在对控件进行方法调用时是否必须调用 Invoke 方法，因为调用方位于创建控件所在的线程以外的线程中。</target>       </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Handle" /&gt;</ph> was created on a different thread than the calling thread (indicating that you must make calls to the control through an invoke method); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控件的 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 是在与调用线程不同的线程上创建的（说明您必须通过 Invoke 方法对控件进行调用），则为 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Handle" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>Controls in Windows Forms are bound to a specific thread and are not thread safe.</source>
          <target state="translated">Windows 窗体中的控件绑定到特定线程，不是线程安全。</target>       </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>Therefore, if you are calling a control's method from a different thread, you must use one of the control's invoke methods to marshal the call to the proper thread.</source>
          <target state="translated">因此，如果要从另一个线程调用控件的方法，你必须使用其中一个控件的调用封送到合适的线程调用的方法。</target>       </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>This property can be used to determine if you must call an invoke method, which can be useful if you do not know what thread owns a control.</source>
          <target state="translated">此属性可以用于确定是否必须调用 invoke 方法，这会非常有用，如果你不知道在哪个线程拥有一个控件。</target>       </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> property, there are four methods on a control that are thread safe to call: <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>,<ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> if the handle for the control has already been created.</source>
          <target state="translated">除了<ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph>属性，在控件上都是线程安全地调用的四种方法： <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>，<ph id="ph3">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>，<ph id="ph4">&lt;xref:System.Windows.Forms.Control.EndInvoke%2A&gt;</ph>和<ph id="ph5">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph>如果已创建控件的句柄。</target>       </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph> before the control's handle has been created on a background thread can cause illegal cross thread calls.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A&gt;</ph>在后台线程上创建控件的句柄之前可能会导致跨线程调用的非法。</target>       </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>For all other method calls, you should use one of these invoke methods when calling from a different thread.</source>
          <target state="translated">对于所有其他方法调用，应使用以下方法之一从另一个线程调用时调用的方法。</target>       </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>If the control's handle does not yet exist, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> searches up the control's parent chain until it finds a control or form that does have a window handle.</source>
          <target state="translated">如果控件的句柄尚不存在，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph>搜索直到它找到的控件或具有窗口句柄的窗体上控件的父链。</target>       </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>If no appropriate handle can be found, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> method returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">如果找不到任何合适的句柄，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph>方法返回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>This means that <ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> can return <ph id="ph2">`false`</ph> if <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> is not required (the call occurs on the same thread), or if the control was created on a different thread but the control's handle has not yet been created.</source>
          <target state="translated">这意味着，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph>可以返回<ph id="ph2">`false`</ph>如果<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>不是必需的 （调用发生在同一线程），或如果已创建该控件在不同线程的创建，但尚未创建控件的句柄。</target>       </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>In the case where the control's handle has not yet been created, you should not simply call properties, methods, or events on the control.</source>
          <target state="translated">在控件的句柄尚未创建的情况下，你不应只需调用属性、 方法或事件在控件上。</target>       </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>This might cause the control's handle to be created on the background thread, isolating the control on a thread without a message pump and making the application unstable.</source>
          <target state="translated">这可能会导致在隔离而无需消息泵线程上的控件并使该应用程序不稳定的后台线程上创建控件的句柄。</target>       </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>You can protect against this case by also checking the value of <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph> when <ph id="ph2">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph> returns <ph id="ph3">`false`</ph> on a background thread.</source>
          <target state="translated">可以通过还检查的值来避免这种情况<ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph>时<ph id="ph2">&lt;xref:System.Windows.Forms.Control.InvokeRequired%2A&gt;</ph>返回<ph id="ph3">`false`</ph>后台线程上。</target>       </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>If the control handle has not yet been created, you must wait until it has been created before calling <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>.</source>
          <target state="translated">如果尚未创建控件句柄，必须等待，直到它已创建，然后再调<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>Typically, this happens only if a background thread is created in the constructor of the primary form for the application (as in <ph id="ph1">`Application.Run(new MainForm())`</ph>, before the form has been shown or <ph id="ph2">`Application.Run`</ph> has been called.</source>
          <target state="translated">通常情况下，会发生此情况仅在应用程序的主窗体的构造函数中创建后台线程 (如<ph id="ph1">`Application.Run(new MainForm())`</ph>，然后显示窗体或<ph id="ph2">`Application.Run`</ph>已调用。</target>       </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>One solution is to wait until the form's handle has been created before starting the background thread.</source>
          <target state="translated">一种解决方案是等待，直到在开始后台线程之前已创建窗体的句柄。</target>       </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>Either force handle creation by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> property, or wait until the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event to start the background process.</source>
          <target state="translated">请通过调用强制创建句柄<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph>属性，或者等待<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>事件启动后台进程。</target>       </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>An even better solution is to use the <ph id="ph1">`SynchronizationContext`</ph> returned by <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> rather than a control for cross-thread marshaling.</source>
          <target state="translated">更好的解决方案是使用<ph id="ph1">`SynchronizationContext`</ph>返回<ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph>而不是用于跨线程封送处理的控件。</target>       </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>An exception might be thrown if the thread that should process the message is no longer active.</source>
          <target state="translated">如果应处理该消息的线程不再处于活动状态，则可能引发异常。</target>       </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.InvokeRequired">
          <source>For more information about multithreaded Windows Forms controls, see <bpt id="p1">[</bpt>How to: Use a Background Thread to Search for Files<ept id="p1">](~/docs/framework/winforms/controls/how-to-use-a-background-thread-to-search-for-files.md)</ept> and <bpt id="p2">[</bpt>How to: Make Thread-Safe Calls to Windows Forms Controls<ept id="p2">](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)</ept>.</source>
          <target state="translated">有关多线程 Windows 窗体控件的详细信息，请参阅<bpt id="p1">[</bpt>如何： 使用后台线程搜索文件<ept id="p1">](~/docs/framework/winforms/controls/how-to-use-a-background-thread-to-search-for-files.md)</ept>和<bpt id="p2">[</bpt>如何： 向 Windows 窗体控件进行线程安全的调用<ept id="p2">](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.IsAccessible">
          <source>Gets or sets a value indicating whether the control is visible to accessibility applications.</source>
          <target state="translated">获取或设置一个值，该值指示控件对辅助功能应用程序是否可见。</target>       </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsAccessible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control is visible to accessibility applications; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控件对辅助功能应用程序可见，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.IsDisposed">
          <source>Gets a value indicating whether the control has been disposed of.</source>
          <target state="translated">获取一个值，该值指示控件是否已经被释放。</target>       </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsDisposed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control has been disposed of; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控件已经被释放，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsDisposed">
          <source>When this property returns <ph id="ph1">`true`</ph>, the control is disposed of and can no longer be referenced as a valid Windows control.</source>
          <target state="translated">当此属性返回<ph id="ph1">`true`</ph>，该控件的释放，不再作为有效的 Windows 控件被引用。</target>       </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsDisposed">
          <source>Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection.</source>
          <target state="translated">即使控件的实例已释放，它仍保留在内存中直到从通过垃圾回收的内存中删除。</target>       </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsDisposed">
          <source>When a control is disposed, you cannot call its <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method.</source>
          <target state="translated">当释放一个控件时，不能调用其<ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.IsHandleCreated">
          <source>Gets a value indicating whether the control has a handle associated with it.</source>
          <target state="translated">获取一个值，该值指示控件是否有与它关联的句柄。</target>       </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsHandleCreated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a handle has been assigned to the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已经为控件分配了句柄，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsHandleCreated">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph> property to determine whether <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> has been called.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph>属性来确定是否<ph id="ph2">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph>已调用。</target>       </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>The character to test.</source>
          <target state="translated">要测试的字符。</target>       </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>Determines if a character is an input character that the control recognizes.</source>
          <target state="translated">确定一个字符是否是控件可识别的输入字符。</target>       </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character should be sent directly to the control and not preprocessed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果字符应直接发送到控件且不必经过预处理，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> method to determine whether the character specified by the <ph id="ph2">`charCode`</ph> parameter is an input character that the control wants.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph>方法来确定指定的字符是否<ph id="ph2">`charCode`</ph>参数为控件需要的输入的字符。</target>       </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>This method is called during window message preprocessing to determine whether the specified input character should be preprocessed or sent directly to the control.</source>
          <target state="translated">在窗口消息预处理，以确定是否应经过预处理，或直接向控件发送指定的输入的字符过程中调用此方法。</target>       </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, the specified character is sent directly to the control.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph>返回<ph id="ph2">`true`</ph>，直接向控件发送指定的字符。</target>       </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> returns <ph id="ph2">`false`</ph>, the specified character is preprocessed and only sent to the control if it is not consumed by the preprocessing phase.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph>返回<ph id="ph2">`false`</ph>，预处理和仅发送到控件，如果它不使用预处理阶段时指定的字符。</target>       </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>The preprocessing of a character includes checking whether the character is a mnemonic of another control.</source>
          <target state="translated">字符的预处理包括检查的字符是否另一个控件的助记键。</target>       </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">为用于继承类来调用此方法的所有窗口。</target>       </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph>值<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</source>
          <target state="translated">确定指定的键是常规输入键还是需要预处理的特殊键。</target>       </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified key is a regular input key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的键是常规输入键，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method to determine whether the key specified by the <ph id="ph2">`keyData`</ph> parameter is an input key that the control wants.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph>方法来确定指定的键是否<ph id="ph2">`keyData`</ph>参数是控件需要输入的键。</target>       </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>This method is called during window message preprocessing to determine whether the specified input key should be preprocessed or sent directly to the control.</source>
          <target state="translated">在窗口消息预处理，以确定是否应经过预处理，或直接向控件发送指定的输入的键过程中调用此方法。</target>       </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, the specified key is sent directly to the control.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph>返回<ph id="ph2">`true`</ph>，直接向控件发送指定的键。</target>       </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> returns <ph id="ph2">`false`</ph>, the specified key is preprocessed and only sent to the control if it is not consumed by the preprocessing phase.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph>返回<ph id="ph2">`false`</ph>，指定的键是预处理，如果它不使用预处理阶段时仅向控件发送。</target>       </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>Keys that are preprocessed include the TAB, RETURN, ESC, and the UP ARROW, DOWN ARROW, LEFT ARROW, and RIGHT ARROW keys.</source>
          <target state="translated">经过预处理的密钥包括选项卡、 返回、 ESC、 和的向上箭头、 向下箭头、 向左键和向右箭头键。</target>       </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>The following code example shows you how to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method for a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">下面的代码示例演示如何重写<ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>In this example, the <ph id="ph1">`TabTextBox`</ph> class handles the TAB key.</source>
          <target state="translated">在此示例中，<ph id="ph1">`TabTextBox`</ph>类处理 TAB 键。</target>       </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>When the <ph id="ph1">`TabTextBox`</ph> has the focus and the user presses the TAB key four spaces are added at the text insertion point, replacing any selected text.</source>
          <target state="translated">当<ph id="ph1">`TabTextBox`</ph>具有焦点并且用户按 TAB 键在文本插入点，添加四个空格替换任何所选的文本。</target>       </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control handles the TAB key by moving the input focus to the next control.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控件处理 TAB 键，通过将输入的焦点移动到下一个控件。</target>       </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>In this case, the keypress never reaches the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyDown%2A&gt;</ph> method override.</source>
          <target state="translated">在这种情况下，按键绝不会到达<ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyDown%2A&gt;</ph>方法重写。</target>       </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>To prevent this default behavior, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method override returns <ph id="ph2">`true`</ph> when the user presses the TAB key.</source>
          <target state="translated">若要防止此默认行为，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph>方法重写返回<ph id="ph2">`true`</ph>当用户按 TAB 键。</target>       </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>For all other keypresses, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method override returns the result of calling the base-class version of the method.</source>
          <target state="translated">对于所有其他按键，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph>方法重写返回时调用的方法的基类版本的结果。</target>       </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">为用于继承类来调用此方法的所有窗口。</target>       </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph>值<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)">
          <source>The CAPS LOCK, NUM LOCK, or SCROLL LOCK member of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 枚举的 Caps Lock、Num Lock 或 Scroll Lock 成员。</target>       </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)">
          <source>Determines whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK key is in effect.</source>
          <target state="translated">确定 Caps Lock、Num Lock 或 Scroll Lock 键是否有效。</target>       </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified key or keys are in effect; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的一个或多个键有效，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsKeyLocked%2A&gt;</ph> property to determine whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK keys are on, whether individually or in combination.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsKeyLocked%2A&gt;</ph>属性来确定 CAPS LOCK、 NUM LOCK 或 SCROLL LOCK 键是否，是否单独或组合。</target>       </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)">
          <source>The following code example displays a message box indicating whether the specified key (the Caps Lock key in this case) is in effect.</source>
          <target state="translated">下面的代码示例显示，该值指示指定的键 （在本例中为 Caps Lock 键） 是否实际上一个消息框。</target>       </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)">
          <source>The <ph id="ph1">&lt;paramref name="keyVal" /&gt;</ph> parameter refers to a key other than the CAPS LOCK, NUM LOCK, or SCROLL LOCK key.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyVal" /&gt;</ph> 参数指一个键，而不是 CAPS LOCK、NUM LOCK 或 SCROLL LOCK。</target>       </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.IsMirrored">
          <source>Gets a value indicating whether the control is mirrored.</source>
          <target state="translated">获取一个值，该值指示此控件是否为镜像控件。</target>       </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsMirrored">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control is mirrored; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果该控件是镜像控件，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsMirrored">
          <source>A mirrored control displays both layout and text from right to left.</source>
          <target state="translated">镜像的控件显示布局和从右到左的文本。</target>       </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.IsMirrored">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create Mirrored Windows Forms and Controls<ept id="p1">](http://msdn.microsoft.com/library/7c5c4ecc-9bfb-4508-8383-753e306719b1)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>如何： 创建镜像 Windows 窗体和控件<ept id="p1">](http://msdn.microsoft.com/library/7c5c4ecc-9bfb-4508-8383-753e306719b1)</ept>。</target>       </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>The character to test.</source>
          <target state="translated">要测试的字符。</target>       </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>The string to search.</source>
          <target state="translated">要搜索的字符串。</target>       </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>Determines if the specified character is the mnemonic character assigned to the control in the specified string.</source>
          <target state="translated">搜索指定的字符串，以确定指定字符是否是分配给此控件的助记键字符。</target>       </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="charCode" /&gt;</ph> character is the mnemonic character assigned to the control; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="charCode" /&gt;</ph> 字符是分配给控件的助记键字符，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>The mnemonic character is the character immediately following the first instance of "&amp;" in a <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">助记键字符是紧跟第一个实例中的"&amp;"字符<ph id="ph1">&lt;xref:System.String&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>The following code example demonstrates an extension of the button class that overrides the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessMnemonic%2A&gt;</ph> method to exhibit custom behavior.</source>
          <target state="translated">下面的代码示例演示的按钮类，并重写扩展<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessMnemonic%2A&gt;</ph>方法以显示自定义行为。</target>       </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>The example also demonstrates the use of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CanSelect%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsMnemonic%2A&gt;</ph> properties.</source>
          <target state="translated">该示例还演示了利用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CanSelect%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsMnemonic%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>To run this example paste the following code after a form class, in the same file.</source>
          <target state="translated">若要运行此示例，请粘贴窗体类，同一文件中后面的以下代码。</target>       </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>Add a button of type <ph id="ph1">`MnemonicButton`</ph> to the form.</source>
          <target state="translated">添加一个按钮类型<ph id="ph1">`MnemonicButton`</ph>到窗体。</target>       </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">为用于继承类来调用此方法的所有窗口。</target>       </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph>值<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>Occurs when a key is pressed while the control has focus.</source>
          <target state="translated">在控件有焦点的情况下按下键时发生。</target>       </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>Key events occur in the following order:</source>
          <target state="translated">键事件按下列顺序发生：</target>       </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph> property in your form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event-handling method to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">若要仅在窗体级别处理键盘事件而不允许其他控件可以接收键盘事件，将设置<ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph>中窗体的属性<ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph>到事件处理方法<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically.</source>
          <target state="translated">自动由控件处理某些键，例如选项卡、 返回、 ESC、 和箭头键。</target>       </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>To have these keys raise the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event, you must override the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method in each control on your form.</source>
          <target state="translated">若要使这些键引发<ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>事件，必须重写<ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph>窗体上的每个控件中的方法。</target>       </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>The code for the override of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> would need to determine if one of the special keys is pressed and return a value of <ph id="ph2">`true`</ph>.</source>
          <target state="translated">重写的代码<ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph>需要确定按下了某个特殊键，并返回的值<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>Instead of overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method, you can handle the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event and set the <ph id="ph3">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph> property to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">而不是重写<ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph>方法，你可以处理<ph id="ph2">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph>事件并设置<ph id="ph3">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph>属性<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>For a code example, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event.</source>
          <target state="translated">有关代码示例，请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyDown">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event to determine the type of character entered into the control.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>事件，以确定文本框控件中输入的字符的类型。</target>       </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>Occurs when a character.</source>
          <target state="translated">在控件有焦点的情况下</target>       </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>space or backspace key is pressed while the control has focus.</source>
          <target state="translated">字符、空格或退格键时发生。</target>       </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>Key events occur in the following order:</source>
          <target state="translated">键事件按下列顺序发生：</target>       </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event is not raised by non-character keys other than space and backspace; however, the non-character keys do raise the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> events.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph>空间和退格符以外的非字符键不会引发事件; 但是，不要引发非字符键<ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A&gt;</ph> property to sample keystrokes at run time and to consume or modify a subset of common keystrokes.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A&gt;</ph>属性示例的键击在运行时和使用或修改的常见击键的子集。</target>       </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph> property in your form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event-handling method to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">若要仅在窗体级别处理键盘事件而不允许其他控件可以接收键盘事件，将设置<ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph>中窗体的属性<ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph>到事件处理方法<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyPress">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event to prevent characters from entering the control.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph>事件，以防止从输入控件的字符。</target>       </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>Occurs when a key is released while the control has focus.</source>
          <target state="translated">在控件有焦点的情况下释放键时发生。</target>       </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>Key events occur in the following order:</source>
          <target state="translated">键事件按下列顺序发生：</target>       </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph> property in your form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event-handling method to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">若要仅在窗体级别处理键盘事件而不允许其他控件可以接收键盘事件，将设置<ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph>中窗体的属性<ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph>到事件处理方法<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically.</source>
          <target state="translated">自动由控件处理某些键，例如选项卡、 返回、 ESC、 和箭头键。</target>       </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>To have these keys raise the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> event, you must override the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method in each control on your form.</source>
          <target state="translated">若要使这些键引发<ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph>事件，必须重写<ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph>窗体上的每个控件中的方法。</target>       </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>The code for the override of <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> would need to determine if one of the special keys is pressed and return a value of <ph id="ph2">`true`</ph>.</source>
          <target state="translated">重写的代码<ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph>需要确定按下了某个特殊键，并返回的值<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.KeyUp">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> event with the <ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph> class to display pop-up style help to the user.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph>事件和<ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph>类来显示给用户的弹出样式帮助。</target>       </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Layout">
          <source>Occurs when a control should reposition its child controls.</source>
          <target state="translated">在控件应重新定位其子控件时发生。</target>       </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event occurs when child controls are added or removed, when the bounds of the control changes, and when other changes occur that can affect the layout of the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph>事件发生时添加或删除时的边界的控件更改，以及在出现的其他更改可能会影响控件的布局子控件。</target>       </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>The layout event can be suppressed using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> methods.</source>
          <target state="translated">可以使用抑制布局事件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>Suspending layout enables you to perform multiple actions on a control without having to perform a layout for each change.</source>
          <target state="translated">挂起的布局，可在控件上执行多个操作，而无需执行一次布局针对每项更改。</target>       </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>For example, if you resize and move a control, each operation would raise a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event.</source>
          <target state="translated">例如，如果你调整大小，并将控件移动，每个操作都会引发<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>The following code example centers a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> on the screen in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event.</source>
          <target state="translated">下面的代码示例中心<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>在的屏幕中<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>This will keep the form centered as the user resizes it.</source>
          <target state="translated">这将保留表单居中当用户调整其大小时。</target>       </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Layout">
          <source>This example requires that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> control.</source>
          <target state="translated">此示例需要你已创建了<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.LayoutEngine">
          <source>Gets a cached instance of the control's layout engine.</source>
          <target state="translated">获取控件的布局引擎的缓存实例。</target>       </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.LayoutEngine">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Layout.LayoutEngine" /&gt;</ph> for the control's contents.</source>
          <target state="translated">控件内容的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Layout.LayoutEngine" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.LayoutEngine">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.LayoutEngine%2A&gt;</ph> property gets the layout engine for the control's children rather than for the control itself.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.LayoutEngine%2A&gt;</ph>属性获取的布局引擎，为控件的子级而不是该控件本身。</target>       </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Leave">
          <source>Occurs when the input focus leaves the control.</source>
          <target state="translated">在输入焦点离开控件时发生。</target>       </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> property to the current form, focus events occur in the following order:</source>
          <target state="translated">当你通过使用键盘 （选项卡上，按 SHIFT + TAB 等），通过调用更改焦点<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph>方法，或通过设置<ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph>到当前窗体的属性，将按以下顺序发生焦点事件：</target>       </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>When you change the focus by using the mouse or by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:</source>
          <target state="translated">当你通过使用鼠标或通过调用更改焦点<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph>方法，焦点事件按下列顺序发生：</target>       </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph>属性设置为<ph id="ph2">`false`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>和<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph>事件将被抑制。</target>       </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events are suppressed by the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>事件所抑制的<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>The equivalent events in the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class are the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> events.</source>
          <target state="translated">中的等效事件<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>类<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>事件层次结构，并将级联向上和向下父链直到达到相应的控件。</target>       </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>For example, assume you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with two <ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> controls, and each <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control has one <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">例如，假定你将<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>包含两个<ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>控件，并且每个<ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>控件有一个<ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>When the caret is moved from one <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> to the other, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> event is raised for the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, and the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> event is raised for the other <ph id="ph6">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and <ph id="ph7">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">当从一个移动插入符号<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>到另一个，<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>为引发事件<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>和<ph id="ph4">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>，和<ph id="ph5">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>其他引发事件<ph id="ph6">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>和<ph id="ph7">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>Do not attempt to set focus from within the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.</source>
          <target state="translated">请不要尝试将焦点设置在<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>，或<ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>Doing so can cause your application or the operating system to stop responding.</source>
          <target state="translated">这样做会导致你的应用程序或操作系统停止响应。</target>       </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>For more information, see the <bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> topic.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept>主题。</target>       </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Leave">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> event to reset a control to its former state.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>事件，以将控件重置为其以前的状态。</target>       </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Left">
          <source>Gets or sets the distance, in pixels, between the left edge of the control and the left edge of its container's client area.</source>
          <target state="translated">获取或设置控件左边缘与其容器的工作区左边缘之间的距离（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Left">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> representing the distance, in pixels, between the left edge of the control and the left edge of its container's client area.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 表示控件左边缘与其容器的工作区左边缘之间的距离（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Left">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> property value is equivalent to the <ph id="ph2">&lt;xref:System.Drawing.Point.X%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property value of the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>属性值等于<ph id="ph2">&lt;xref:System.Drawing.Point.X%2A?displayProperty=nameWithType&gt;</ph>属性<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>的控件属性值。</target>       </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Left">
          <source>Changes made to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> property values cause the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> property value of the control to change.</source>
          <target state="translated">对所做更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>属性值将导致<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph>要更改的控件的属性值。</target>       </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Left">
          <source>The following code example creates three <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls on a form and sets their size and location by using the various size-related and location-related properties.</source>
          <target state="translated">下面的代码示例创建三个<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>窗体上控件并通过使用各种大小相关以及与位置相关属性中设置其大小和位置。</target>       </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Left">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that has a width and height of at least 300 pixels.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>，其宽度和高度至少 300 像素。</target>       </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Location">
          <source>Gets or sets the coordinates of the upper-left corner of the control relative to the upper-left corner of its container.</source>
          <target state="translated">获取或设置该控件的左上角相对于其容器的左上角的坐标。</target>       </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the upper-left corner of the control relative to the upper-left corner of its container.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>，表示控件的左上角相对于其容器的左上角。</target>       </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>Because the <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> class is a value type (<ph id="ph2">`Structure`</ph> in Visual Basic, <ph id="ph3">`struct`</ph> in Visual C#), it is returned by value, meaning accessing the property returns a copy of the upper-left point of the control.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph>类是值类型 (<ph id="ph2">`Structure`</ph>在 Visual Basic 中， <ph id="ph3">`struct`</ph> Visual C# 中)，它返回的值，这意味着访问该属性返回的控件的左上角点副本。</target>       </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>So, adjusting the <ph id="ph1">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> returned from this property will not affect the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>, or <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property values of the control.</source>
          <target state="translated">因此，调整<ph id="ph1">&lt;xref:System.Drawing.Point.X%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph>返回此属性将不会影响<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph>， <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>，或<ph id="ph7">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph>控件的属性值。</target>       </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>To adjust these properties set each property value individually, or set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property with a new <ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph>.</source>
          <target state="translated">若要调整这些属性分别设置每个属性值，或设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>为一个新的属性<ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> is a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property value represents the upper-left corner of the <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph> in screen coordinates.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>是<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>属性值表示的左上角<ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>以屏幕坐标。</target>       </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and sets some of its common properties.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>并设置一些其通用的属性。</target>       </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and sets its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> within the group box.</source>
          <target state="translated">该示例创建<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>并设置其<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>组框中。</target>       </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>Next, it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of the group box, and docks the group box to the top of the form.</source>
          <target state="translated">接下来，它将设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性组框中，并停靠组框中的，到窗体顶部。</target>       </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Location">
          <source>Lastly, it disables the group box by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>, which causes all controls contained within the group box to be disabled.</source>
          <target state="translated">最后，通过设置禁用分组框<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph>属性<ph id="ph2">`false`</ph>，这将导致产生包含在要禁用的组框内的所有控件。</target>       </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.LocationChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Location" /&gt;</ph> property value has changed.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Location" /&gt;</ph> 属性值更改后发生。</target>       </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LocationChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property is changed by either a programmatic modification or through interaction.</source>
          <target state="translated">如果将引发此事件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>通过以编程方式修改或通过交互更改属性。</target>       </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LocationChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LocationChanged">
          <source>The following code example raises the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> event on a <ph id="ph2">&lt;xref:System.Windows.Forms.StatusStrip&gt;</ph> when the form is resized.</source>
          <target state="translated">下面的代码示例引发<ph id="ph1">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph>上的事件<ph id="ph2">&lt;xref:System.Windows.Forms.StatusStrip&gt;</ph>调整窗体的大小。</target>       </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)">
          <source>The Logical value to convert.</source>
          <target state="translated">要转换的逻辑值。</target>       </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)">
          <source>Converts a Logical DPI value to it's equivalent DeviceUnit DPI value.</source>
          <target state="translated">将逻辑 DPI 值转换为它的等效 DeviceUnit DPI 值。</target>       </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)">
          <source>The resulting DeviceUnit value.</source>
          <target state="translated">生成的 DeviceUnit 值。</target>       </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>Occurs when the control loses focus.</source>
          <target state="translated">在控件失去焦点时发生。</target>       </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> property to the current form, focus events occur in the following order:</source>
          <target state="translated">当你通过使用键盘 （选项卡上，按 SHIFT + TAB 等），通过调用更改焦点<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph>方法，或通过设置<ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph>到当前窗体的属性，将按以下顺序发生焦点事件：</target>       </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>When you change the focus by using the mouse or by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:</source>
          <target state="translated">当你通过使用鼠标或通过调用更改焦点<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph>方法，焦点事件按下列顺序发生：</target>       </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph>属性设置为<ph id="ph2">`false`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>和<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph>事件将被抑制。</target>       </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>If the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> is set to <ph id="ph3">`true`</ph> in the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event delegate, all events that would usually occur after the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event are suppressed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph>设置为<ph id="ph3">`true`</ph>中<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>事件委托中，通常会发生后的所有事件<ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>事件将被抑制。</target>       </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>事件是低级别的焦点事件绑定到的 WM_KILLFOCUS 和 WM_SETFOCUS Windows 消息。</target>       </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events are only used when updating <ph id="ph3">&lt;xref:System.Windows.Forms.UICues&gt;</ph> or when writing custom controls.</source>
          <target state="translated">通常情况下，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>更新时，仅使用事件<ph id="ph3">&lt;xref:System.Windows.Forms.UICues&gt;</ph>或编写自定义控件时。</target>       </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>Instead the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> events should be used for all controls except the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> class, which uses the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> events.</source>
          <target state="translated">改为<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>事件应用于除之外的所有控件<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>类，它使用<ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>和<ph id="ph5">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>For more information about the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> events, see the <bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> and <bpt id="p2">[</bpt>WM_KILLFOCUS<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> topics.</source>
          <target state="translated">有关详细信息<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>事件，请参阅<bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept>和<bpt id="p2">[</bpt>WM_KILLFOCUS<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept>主题。</target>       </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>Do not attempt to set focus from within the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.</source>
          <target state="translated">请不要尝试将焦点设置在<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>，或<ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="1805" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>Doing so can cause your application or the operating system to stop responding.</source>
          <target state="translated">这样做会导致你的应用程序或操作系统停止响应。</target>       </trans-unit>
        <trans-unit id="1806" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>For more information, see the <bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept> topic.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)</ept>主题。</target>       </trans-unit>
        <trans-unit id="1807" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1808" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>The following code example demonstrates validating the text for TextBox1.</source>
          <target state="translated">下面的代码示例演示为 TextBox1 验证文本。</target>       </trans-unit>
        <trans-unit id="1809" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>It also demonstrates handling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph> event by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.FileDialog.InitialDirectory%2A?displayProperty=nameWithType&gt;</ph> property to the text in TextBox1.</source>
          <target state="translated">它还演示如何处理<ph id="ph1">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>事件通过设置<ph id="ph2">&lt;xref:System.Windows.Forms.FileDialog.InitialDirectory%2A?displayProperty=nameWithType&gt;</ph>TextBox1 中的文本属性。</target>       </trans-unit>
        <trans-unit id="1810" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>The code example used the <ph id="ph1">&lt;xref:System.Windows.Forms.ErrorProvider.GetError%2A?displayProperty=nameWithType&gt;</ph> method to check for an error before opening the file dialog box.</source>
          <target state="translated">使用的代码示例<ph id="ph1">&lt;xref:System.Windows.Forms.ErrorProvider.GetError%2A?displayProperty=nameWithType&gt;</ph>方法来检查是否有错误，然后打开文件对话框。</target>       </trans-unit>
        <trans-unit id="1811" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>To run this example, paste the following code into a form containing a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> named <ph id="ph2">`TextBox1`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> named <ph id="ph4">`OpenFileDialog1`</ph>, a <ph id="ph5">&lt;xref:System.Windows.Forms.Button&gt;</ph> named <ph id="ph6">`Button1`</ph>, and an <ph id="ph7">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> named <ph id="ph8">`ErrorProvider1`</ph>.</source>
          <target state="translated">若要运行此示例，请将以下代码粘贴到一个窗体包含<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>名为<ph id="ph2">`TextBox1`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>名为<ph id="ph4">`OpenFileDialog1`</ph>、<ph id="ph5">&lt;xref:System.Windows.Forms.Button&gt;</ph>名为<ph id="ph6">`Button1`</ph>，和<ph id="ph7">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph>名为<ph id="ph8">`ErrorProvider1`</ph>。</target>       </trans-unit>
        <trans-unit id="1812" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.LostFocus">
          <source>Ensure all events are associated with their event handlers.</source>
          <target state="translated">确保所有事件都都其事件处理程序关联。</target>       </trans-unit>
        <trans-unit id="1813" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Margin">
          <source>Gets or sets the space between controls.</source>
          <target state="translated">获取或设置控件之间的空间。</target>       </trans-unit>
        <trans-unit id="1814" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Margin">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> representing the space between controls.</source>
          <target state="translated">表示控件之间的间距的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1815" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Margin">
          <source>Controls receive default values for <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Margin%2A&gt;</ph> that are reasonably close to Windows user interface guidelines.</source>
          <target state="translated">默认值时控件接收<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Margin%2A&gt;</ph>规范的合理即将 Windows 用户界面指南。</target>       </trans-unit>
        <trans-unit id="1816" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Margin">
          <source>Some adjustments might still be necessary for particular applications.</source>
          <target state="translated">一些调整可能仍有必要为特定应用程序。</target>       </trans-unit>
        <trans-unit id="1817" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Margin">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Margin%2A&gt;</ph> property on a docked control has no effect on the distance of the control from the edges of its container.</source>
          <target state="translated">设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Margin%2A&gt;</ph>停靠控件上的属性不起该控件从其容器的边缘的距离。</target>       </trans-unit>
        <trans-unit id="1818" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>Occurs when the control's margin changes.</source>
          <target state="translated">在控件边距更改时发生。</target>       </trans-unit>
        <trans-unit id="1819" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1820" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="1821" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MarginChanged&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MarginChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1822" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="1823" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1824" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1825" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MarginChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MarginChanged&gt;</ph> event.</source>
          <target state="translated">然后将其命名实例<ph id="ph1">`Control1`</ph>并确保与事件处理程序<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MarginChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1826" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.MaximumSize">
          <source>Gets or sets the size that is the upper limit that <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /&gt;</ph> can specify.</source>
          <target state="translated">获取或设置大小，该大小是 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /&gt;</ph> 可以指定的上限。</target>       </trans-unit>
        <trans-unit id="1827" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MaximumSize">
          <source>An ordered pair of type <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> representing the width and height of a rectangle.</source>
          <target state="translated">类型为 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> 的有序对，表示矩形的宽度和高度。</target>       </trans-unit>
        <trans-unit id="1828" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.MinimumSize">
          <source>Gets or sets the size that is the lower limit that <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /&gt;</ph> can specify.</source>
          <target state="translated">获取或设置大小，该大小是 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /&gt;</ph> 可以指定的下限。</target>       </trans-unit>
        <trans-unit id="1829" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MinimumSize">
          <source>An ordered pair of type <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> representing the width and height of a rectangle.</source>
          <target state="translated">类型为 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> 的有序对，表示矩形的宽度和高度。</target>       </trans-unit>
        <trans-unit id="1830" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ModifierKeys">
          <source>Gets a value indicating which of the modifier keys (SHIFT, CTRL, and ALT) is in a pressed state.</source>
          <target state="translated">获取一个表示哪个修改键（Shift、Ctrl 和 Alt）处于按下状态的值。</target>       </trans-unit>
        <trans-unit id="1831" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ModifierKeys">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 值的按位组合。</target>       </trans-unit>
        <trans-unit id="1832" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ModifierKeys">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.Keys.None" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.Keys.None" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1833" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ModifierKeys">
          <source>The following code example hides a button when the CTRL key is pressed while the button is clicked.</source>
          <target state="translated">当单击该按钮并按下 CTRL 键，下面的代码示例将隐藏按钮。</target>       </trans-unit>
        <trans-unit id="1834" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ModifierKeys">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> named <ph id="ph2">`button1`</ph> on a <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>名为<ph id="ph2">`button1`</ph>上<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1835" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.MouseButtons">
          <source>Gets a value indicating which of the mouse buttons is in a pressed state.</source>
          <target state="translated">获取一个指示哪个鼠标按钮处于按下状态的值。</target>       </trans-unit>
        <trans-unit id="1836" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MouseButtons">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> enumeration values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseButtons" /&gt;</ph> 枚举值的按位组合。</target>       </trans-unit>
        <trans-unit id="1837" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MouseButtons">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.MouseButtons.None" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.MouseButtons.None" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1838" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MouseButtons">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RectangleToScreen%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToScreen%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseButtons%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph6">&lt;xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType&gt;</ph> members.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RectangleToScreen%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToScreen%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseButtons%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType&gt;</ph>，和<ph id="ph6">&lt;xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType&gt;</ph>成员。</target>       </trans-unit>
        <trans-unit id="1839" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MouseButtons">
          <source>To run the example, paste the following code in a form called Form1 containing several controls.</source>
          <target state="translated">若要运行该示例，请将以下代码粘贴一种称为 form1 包含多个控件。</target>       </trans-unit>
        <trans-unit id="1840" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MouseButtons">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> events are connected to the event handlers defined in the example.</source>
          <target state="translated">此示例需要<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>，和<ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>事件连接到示例中定义的事件处理程序。</target>       </trans-unit>
        <trans-unit id="1841" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>Occurs when the control loses mouse capture.</source>
          <target state="translated">当控件失去鼠标捕获时发生。</target>       </trans-unit>
        <trans-unit id="1842" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>In rare scenarios, you might need to detect unexpected input.</source>
          <target state="translated">在极少数情况下，你可能需要检测到意外的输入。</target>       </trans-unit>
        <trans-unit id="1843" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>For example, consider the following scenarios.</source>
          <target state="translated">例如，考虑以下方案。</target>       </trans-unit>
        <trans-unit id="1844" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>During a mouse operation, the user opens the Start menu by pressing the Windows key or CTRL+ESC.</source>
          <target state="translated">在鼠标操作中，用户通过按 Windows 键或 CTRL + ESC 打开开始菜单。</target>       </trans-unit>
        <trans-unit id="1845" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>During a mouse operation, the user switches to another program by pressing ALT+TAB.</source>
          <target state="translated">在鼠标操作中，用户切换到另一个程序通过按 ALT + TAB。</target>       </trans-unit>
        <trans-unit id="1846" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>During a mouse operation, another program displays a window or a message box that takes focus away from the current application.</source>
          <target state="translated">在鼠标操作中，另一个程序会显示任何窗口或采用焦点离开当前的应用程序的消息框。</target>       </trans-unit>
        <trans-unit id="1847" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>Mouse operations can include clicking and holding the mouse on a form or a control, or performing a mouse drag operation.</source>
          <target state="translated">鼠标操作可以包括，单击并按住鼠标窗体或控件，或执行鼠标拖动操作。</target>       </trans-unit>
        <trans-unit id="1848" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>If you have to detect when a form or a control loses mouse capture for these and related unexpected scenarios, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseCaptureChanged&gt;</ph> event.</source>
          <target state="translated">如果你有来检测何时窗体或控件失去鼠标捕获，对于这些数据和相关的意外情况下，你可以使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseCaptureChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1849" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseCaptureChanged&gt;</ph> event for a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> control.</source>
          <target state="translated">下面的代码示例演示<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseCaptureChanged&gt;</ph>事件<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="1850" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>To test this example, run it in the debugger by pressing F5.</source>
          <target state="translated">若要测试此示例中，它在调试器中按 F5 运行。</target>       </trans-unit>
        <trans-unit id="1851" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>Open the <bpt id="p1">**</bpt>Output<ept id="p1">**</ept> window in Visual Studio so that you can see when events are raised.</source>
          <target state="translated">打开<bpt id="p1">**</bpt>输出<ept id="p1">**</ept>Visual Studio 窗口中的，这样您可以看到时引发事件。</target>       </trans-unit>
        <trans-unit id="1852" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>Click the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> and notice the following output.</source>
          <target state="translated">单击<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>，并注意下面的输出。</target>       </trans-unit>
        <trans-unit id="1853" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>Now, click and hold the left mouse button on the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control.</source>
          <target state="translated">现在上, 单击并按住鼠标左键<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="1854" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>While still clicking the mouse, press ALT+TAB to switch to another program.</source>
          <target state="translated">在仍单击鼠标，同时按 ALT + TAB 切换到另一个程序。</target>       </trans-unit>
        <trans-unit id="1855" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>Notice that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseCaptureChanged&gt;</ph> event is raised enabling you to potentially handle this scenario.</source>
          <target state="translated">请注意，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseCaptureChanged&gt;</ph>使你能够可能处理这种情况下引发事件。</target>       </trans-unit>
        <trans-unit id="1856" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>Depending on your actions, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event might not be raised.</source>
          <target state="translated">具体取决于你的操作，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>可能不会引发事件。</target>       </trans-unit>
        <trans-unit id="1857" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseCaptureChanged">
          <source>You can also try this test with the Windows key or CTRL+ESC.</source>
          <target state="translated">你还可以尝试使用的 Windows 键或 CTRL + ESC 此测试。</target>       </trans-unit>
        <trans-unit id="1858" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>Occurs when the control is clicked by the mouse.</source>
          <target state="translated">用鼠标单击控件时发生。</target>       </trans-unit>
        <trans-unit id="1859" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>Depressing a mouse button when the cursor is over a control typically raises the following series of events from the control:</source>
          <target state="translated">释放鼠标按钮，当光标位于控件上方通常可引发以下一系列的控件中的事件：</target>       </trans-unit>
        <trans-unit id="1860" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1861" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1862" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1863" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1864" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>For this to occur, the various events cannot be disabled in the control's class.</source>
          <target state="translated">为此，各种事件不能禁用控件的类中。</target>       </trans-unit>
        <trans-unit id="1865" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>Two single clicks that occur close enough in time, as determined by the mouse settings of the user's operating system, will generate a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> event instead of the second <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.</source>
          <target state="translated">两次发生足够时间，具体由用户的操作系统的鼠标设置确定将生成的单击<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph>而不是第二个事件<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1866" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> events are logically higher-level events of a control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> 事件是逻辑上控件的事件。</target>       </trans-unit>
        <trans-unit id="1867" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>They are often raised by other actions, such as pressing the ENTER key when the control has focus.</source>
          <target state="translated">它们通常由其他操作，如按 ENTER 键在控件有焦点时引发。</target>       </trans-unit>
        <trans-unit id="1868" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1869" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="1870" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1871" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="1872" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1873" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1874" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseClick">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.</source>
          <target state="translated">然后将其命名实例<ph id="ph1">`Control1`</ph>并确保与事件处理程序<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1875" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>Occurs when the control is double clicked by the mouse.</source>
          <target state="translated">用鼠标双击控件时发生。</target>       </trans-unit>
        <trans-unit id="1876" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> event occurs when the user depresses a mouse button twice in quick succession when the cursor is over the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph>用户释放鼠标按钮两次连续快速地，当光标位于控件上方时发生事件。</target>       </trans-unit>
        <trans-unit id="1877" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>The time interval that separates two single clicks from a double-click is determined by the mouse settings of the user's operating system.</source>
          <target state="translated">将两次单击与双击分隔开的时间间隔由用户的操作系统的鼠标设置确定。</target>       </trans-unit>
        <trans-unit id="1878" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>The following series of events is raised by the control when such a user action takes place:</source>
          <target state="translated">在这样的用户操作发生时，将由控件引发以下一系列事件：</target>       </trans-unit>
        <trans-unit id="1879" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1880" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1881" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseClick&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1882" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1883" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1884" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1885" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1886" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="1887" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>For this to occur, the various events cannot be disabled in the control's class.</source>
          <target state="translated">为此，各种事件不能禁用控件的类中。</target>       </trans-unit>
        <trans-unit id="1888" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> events are logically higher-level events of a control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> 事件是逻辑上控件的事件。</target>       </trans-unit>
        <trans-unit id="1889" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>They may be raised by other user actions, such as shortcut key combinations.</source>
          <target state="translated">它们可能会引发由其他用户操作，如快捷键组合。</target>       </trans-unit>
        <trans-unit id="1890" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1891" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="1892" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1893" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="1894" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1895" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1896" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDoubleClick">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph> event.</source>
          <target state="translated">然后将其命名实例<ph id="ph1">`Control1`</ph>并确保与事件处理程序<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDoubleClick&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1897" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>Occurs when the mouse pointer is over the control and a mouse button is pressed.</source>
          <target state="translated">当鼠标指针位于控件上并按下鼠标键时发生。</target>       </trans-unit>
        <trans-unit id="1898" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>Mouse events occur in the following order:</source>
          <target state="translated">鼠标事件按下列顺序发生：</target>       </trans-unit>
        <trans-unit id="1899" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">不会引发以下事件<ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>类，除非没有至少一个<ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>中<ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph>集合： <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>， <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>， <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>， <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>， <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>，<ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph>和<ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1900" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">如果没有至少一个<ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>在集合中，以及用户与选项卡控件的标头进行交互 (其中<ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>名称显示)，则<ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>引发相应的事件。</target>       </trans-unit>
        <trans-unit id="1901" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">但是，如果用户交互的选项卡页中，客户端区域内<ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>引发相应的事件。</target>       </trans-unit>
        <trans-unit id="1902" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1903" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>The following code example demonstrates using different mouse events to draw the path of the mouse on a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示了如何使用不同的鼠标事件上绘制的路径鼠标<ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1904" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>A line segment is added to the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> for each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> events that occur.</source>
          <target state="translated">一条直线段添加到<ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>每个<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>发生的事件。</target>       </trans-unit>
        <trans-unit id="1905" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>To update the graphics, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method is called for the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> on each <ph id="ph3">`MouseDown`</ph> and <ph id="ph4">`MouseUp`</ph> event.</source>
          <target state="translated">要更新该图形<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>为调用方法<ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph>上每个<ph id="ph3">`MouseDown`</ph>和<ph id="ph4">`MouseUp`</ph>事件。</target>       </trans-unit>
        <trans-unit id="1906" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>In addition, the graphic path is scrolled up or down when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event occurs.</source>
          <target state="translated">此外，向上或向下时滚动的图形路径<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph>事件发生。</target>       </trans-unit>
        <trans-unit id="1907" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>Additional mouse events, like <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, are identified on screen as well.</source>
          <target state="translated">其他鼠标事件，如<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>，在屏幕上以及标识。</target>       </trans-unit>
        <trans-unit id="1908" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseDown">
          <source>Also displayed on the screen is additional information about the mouse from the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> class.</source>
          <target state="translated">在屏幕上还显示了从鼠标有关的其他信息<ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="1909" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>Occurs when the mouse pointer enters the control.</source>
          <target state="translated">在鼠标指针进入控件时发生。</target>       </trans-unit>
        <trans-unit id="1910" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>Mouse events occur in the following order:</source>
          <target state="translated">鼠标事件按下列顺序发生：</target>       </trans-unit>
        <trans-unit id="1911" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">不会引发以下事件<ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>类，除非没有至少一个<ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>中<ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph>集合： <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>， <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>， <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>， <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>， <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>，<ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph>和<ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1912" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">如果没有至少一个<ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>在集合中，以及用户与选项卡控件的标头进行交互 (其中<ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>名称显示)，则<ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>引发相应的事件。</target>       </trans-unit>
        <trans-unit id="1913" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">但是，如果用户交互的选项卡页中，客户端区域内<ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>引发相应的事件。</target>       </trans-unit>
        <trans-unit id="1914" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1915" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>The following code example demonstrates using different mouse events to draw the path of the mouse on a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示了如何使用不同的鼠标事件上绘制的路径鼠标<ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1916" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>A line segment is added to the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> for each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> events that occur.</source>
          <target state="translated">一条直线段添加到<ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>每个<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>发生的事件。</target>       </trans-unit>
        <trans-unit id="1917" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>To update the graphics, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method is called for the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> on each <ph id="ph3">`MouseDown`</ph> and <ph id="ph4">`MouseUp`</ph> event.</source>
          <target state="translated">要更新该图形<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>为调用方法<ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph>上每个<ph id="ph3">`MouseDown`</ph>和<ph id="ph4">`MouseUp`</ph>事件。</target>       </trans-unit>
        <trans-unit id="1918" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>In addition, the graphic path is scrolled up or down when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event occurs.</source>
          <target state="translated">此外，向上或向下时滚动的图形路径<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph>事件发生。</target>       </trans-unit>
        <trans-unit id="1919" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>Additional mouse events, like <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, are identified on screen as well.</source>
          <target state="translated">其他鼠标事件，如<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>，在屏幕上以及标识。</target>       </trans-unit>
        <trans-unit id="1920" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseEnter">
          <source>Also displayed on the screen is additional information about the mouse from the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> class.</source>
          <target state="translated">在屏幕上还显示了从鼠标有关的其他信息<ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="1921" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>Occurs when the mouse pointer rests on the control.</source>
          <target state="translated">在鼠标指针停放在控件上时发生。</target>       </trans-unit>
        <trans-unit id="1922" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>A typical use of <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph> is to display a tool tip when the mouse pauses on a control within a specified area around the control (the "hover rectangle").</source>
          <target state="translated">一个典型用途<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>是当鼠标悬停在控件 （"悬停矩形"） 周围的指定区域中控件上时显示工具提示。</target>       </trans-unit>
        <trans-unit id="1923" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>The pause required for this event to be raised is specified in milliseconds by the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A&gt;</ph> property.</source>
          <target state="translated">引发此事件所需的暂停指定以毫秒为单位通过<ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="1924" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph> event is defined and detected in connection with the <ph id="ph2">&lt;xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A&gt;</ph> properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>定义和检测到门户中的事件<ph id="ph2">&lt;xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="1925" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>Mouse events occur in the following order:</source>
          <target state="translated">鼠标事件按下列顺序发生：</target>       </trans-unit>
        <trans-unit id="1926" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">不会引发以下事件<ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>类，除非没有至少一个<ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>中<ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph>集合： <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>， <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>， <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>， <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>， <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>，<ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph>和<ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1927" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">如果没有至少一个<ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>在集合中，以及用户与选项卡控件的标头进行交互 (其中<ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>名称显示)，则<ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>引发相应的事件。</target>       </trans-unit>
        <trans-unit id="1928" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">但是，如果用户交互的选项卡页中，客户端区域内<ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>引发相应的事件。</target>       </trans-unit>
        <trans-unit id="1929" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1930" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>The following code example demonstrates using different mouse events to draw the path of the mouse on a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示了如何使用不同的鼠标事件上绘制的路径鼠标<ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1931" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>A line segment is added to the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> for each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> events that occur.</source>
          <target state="translated">一条直线段添加到<ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>每个<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>发生的事件。</target>       </trans-unit>
        <trans-unit id="1932" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>To update the graphics, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method is called for the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> on each <ph id="ph3">`MouseDown`</ph> and <ph id="ph4">`MouseUp`</ph> event.</source>
          <target state="translated">要更新该图形<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>为调用方法<ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph>上每个<ph id="ph3">`MouseDown`</ph>和<ph id="ph4">`MouseUp`</ph>事件。</target>       </trans-unit>
        <trans-unit id="1933" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>In addition, the graphic path is scrolled up or down when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event occurs.</source>
          <target state="translated">此外，向上或向下时滚动的图形路径<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph>事件发生。</target>       </trans-unit>
        <trans-unit id="1934" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>Additional mouse events, like <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, are identified on screen as well.</source>
          <target state="translated">其他鼠标事件，如<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>，在屏幕上以及标识。</target>       </trans-unit>
        <trans-unit id="1935" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseHover">
          <source>Also displayed on the screen is additional information about the mouse from the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> class.</source>
          <target state="translated">在屏幕上还显示了从鼠标有关的其他信息<ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="1936" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>Occurs when the mouse pointer leaves the control.</source>
          <target state="translated">在鼠标指针离开控件时发生。</target>       </trans-unit>
        <trans-unit id="1937" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>Mouse events occur in the following order:</source>
          <target state="translated">鼠标事件按下列顺序发生：</target>       </trans-unit>
        <trans-unit id="1938" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">不会引发以下事件<ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>类，除非没有至少一个<ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>中<ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph>集合： <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>， <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>， <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>， <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>， <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>，<ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph>和<ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1939" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">如果没有至少一个<ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>在集合中，以及用户与选项卡控件的标头进行交互 (其中<ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>名称显示)，则<ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>引发相应的事件。</target>       </trans-unit>
        <trans-unit id="1940" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">但是，如果用户交互的选项卡页中，客户端区域内<ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>引发相应的事件。</target>       </trans-unit>
        <trans-unit id="1941" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1942" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>The following code example demonstrates using different mouse events to draw the path of the mouse on a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示了如何使用不同的鼠标事件上绘制的路径鼠标<ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1943" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>A line segment is added to the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> for each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> events that occur.</source>
          <target state="translated">一条直线段添加到<ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>每个<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>发生的事件。</target>       </trans-unit>
        <trans-unit id="1944" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>To update the graphics, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method is called for the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> on each <ph id="ph3">`MouseDown`</ph> and <ph id="ph4">`MouseUp`</ph> event.</source>
          <target state="translated">要更新该图形<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>为调用方法<ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph>上每个<ph id="ph3">`MouseDown`</ph>和<ph id="ph4">`MouseUp`</ph>事件。</target>       </trans-unit>
        <trans-unit id="1945" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>In addition, the graphic path is scrolled up or down when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event occurs.</source>
          <target state="translated">此外，向上或向下时滚动的图形路径<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph>事件发生。</target>       </trans-unit>
        <trans-unit id="1946" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>Additional mouse events, like <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, are identified on screen as well.</source>
          <target state="translated">其他鼠标事件，如<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>，在屏幕上以及标识。</target>       </trans-unit>
        <trans-unit id="1947" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseLeave">
          <source>Also displayed on the screen is additional information about the mouse from the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> class.</source>
          <target state="translated">在屏幕上还显示了从鼠标有关的其他信息<ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="1948" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>Occurs when the mouse pointer is moved over the control.</source>
          <target state="translated">在鼠标指针移到控件上时发生。</target>       </trans-unit>
        <trans-unit id="1949" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>Typical uses of <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> are to change the control's color or to paint a raised rectangle around the control.</source>
          <target state="translated">典型用法<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>若要更改控件的颜色或来绘制控件周围的引发的矩形。</target>       </trans-unit>
        <trans-unit id="1950" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>Mouse events occur in the following order:</source>
          <target state="translated">鼠标事件按下列顺序发生：</target>       </trans-unit>
        <trans-unit id="1951" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">不会引发以下事件<ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>类，除非没有至少一个<ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>中<ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph>集合： <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>， <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>， <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>， <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>， <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>，<ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph>和<ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1952" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">如果没有至少一个<ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>在集合中，以及用户与选项卡控件的标头进行交互 (其中<ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>名称显示)，则<ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>引发相应的事件。</target>       </trans-unit>
        <trans-unit id="1953" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">但是，如果用户交互的选项卡页中，客户端区域内<ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>引发相应的事件。</target>       </trans-unit>
        <trans-unit id="1954" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1955" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>The following code example demonstrates using different mouse events to draw the path of the mouse on a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示了如何使用不同的鼠标事件上绘制的路径鼠标<ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1956" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>A line segment is added to the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> for each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> events that occur.</source>
          <target state="translated">一条直线段添加到<ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>每个<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>发生的事件。</target>       </trans-unit>
        <trans-unit id="1957" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>To update the graphics, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method is called for the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> on each <ph id="ph3">`MouseDown`</ph> and <ph id="ph4">`MouseUp`</ph> event.</source>
          <target state="translated">要更新该图形<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>为调用方法<ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph>上每个<ph id="ph3">`MouseDown`</ph>和<ph id="ph4">`MouseUp`</ph>事件。</target>       </trans-unit>
        <trans-unit id="1958" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>In addition, the graphic path is scrolled up or down when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event occurs.</source>
          <target state="translated">此外，向上或向下时滚动的图形路径<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph>事件发生。</target>       </trans-unit>
        <trans-unit id="1959" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>Additional mouse events, like <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, are identified on screen as well.</source>
          <target state="translated">其他鼠标事件，如<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>，在屏幕上以及标识。</target>       </trans-unit>
        <trans-unit id="1960" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseMove">
          <source>Also displayed on the screen is additional information about the mouse from the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> class.</source>
          <target state="translated">在屏幕上还显示了从鼠标有关的其他信息<ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="1961" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>Gets the position of the mouse cursor in screen coordinates.</source>
          <target state="translated">获取鼠标光标的位置（以屏幕坐标表示）。</target>       </trans-unit>
        <trans-unit id="1962" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that contains the coordinates of the mouse cursor relative to the upper-left corner of the screen.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>，它包含鼠标光标相对于屏幕左上角的坐标。</target>       </trans-unit>
        <trans-unit id="1963" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MousePosition%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph> that represents the mouse cursor position at the time the property was referenced.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MousePosition%2A&gt;</ph>属性返回<ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph>表示引用属性次鼠标光标位置。</target>       </trans-unit>
        <trans-unit id="1964" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>The coordinates indicate the position on the screen, not relative to the control, and are returned regardless of whether the cursor is positioned over the control.</source>
          <target state="translated">这些坐标指示的位置在屏幕上，不是相对于控件，并且无论是否将光标定位在控件返回。</target>       </trans-unit>
        <trans-unit id="1965" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>The coordinates of the upper-left corner of the screen are 0,0.</source>
          <target state="translated">屏幕的左上角的坐标为 0，0。</target>       </trans-unit>
        <trans-unit id="1966" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MousePosition%2A&gt;</ph> property is identical to the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.MousePosition%2A&gt;</ph>属性等同于<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="1967" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>The following code example puts a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> label into an editable state when the user presses ALT+E while the mouse cursor is over the tree node.</source>
          <target state="translated">下面的代码示例将<ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>到可编辑状态，当用户按下 ALT + E，而鼠标光标位于树节点的标签。</target>       </trans-unit>
        <trans-unit id="1968" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>After the user is done editing the label, the labels cannot be edited again until the ALT+E key combination is pressed again.</source>
          <target state="translated">在用户完成后编辑的标签，标签之前，无法编辑再次再次按 ALT + E 键组合。</target>       </trans-unit>
        <trans-unit id="1969" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> on a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph>上<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1970" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.MousePosition">
          <source>The tree view should also have at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> in its <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.Nodes%2A&gt;</ph> collection.</source>
          <target state="translated">树视图还应该至少一个<ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>中其<ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.Nodes%2A&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="1971" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>Occurs when the mouse pointer is over the control and a mouse button is released.</source>
          <target state="translated">在鼠标指针在控件上并释放鼠标键时发生。</target>       </trans-unit>
        <trans-unit id="1972" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>Mouse events occur in the following order:</source>
          <target state="translated">鼠标事件按下列顺序发生：</target>       </trans-unit>
        <trans-unit id="1973" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>The following events are not raised for the <ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> class unless there is at least one <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph> collection: <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph> and <ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>.</source>
          <target state="translated">不会引发以下事件<ph id="ph1">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>类，除非没有至少一个<ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>中<ph id="ph3">&lt;xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType&gt;</ph>集合： <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>， <ph id="ph6">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>， <ph id="ph7">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>， <ph id="ph8">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>， <ph id="ph9">&lt;xref:System.Windows.Forms.Control.MouseEnter&gt;</ph>，<ph id="ph10">&lt;xref:System.Windows.Forms.Control.MouseLeave&gt;</ph>和<ph id="ph11">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1974" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>If there is at least one <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> in the collection, and the user interacts with the tab control's header (where the <ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> names appear), the <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph> raises the appropriate event.</source>
          <target state="translated">如果没有至少一个<ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>在集合中，以及用户与选项卡控件的标头进行交互 (其中<ph id="ph2">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>名称显示)，则<ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>引发相应的事件。</target>       </trans-unit>
        <trans-unit id="1975" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>However, if the user interaction is within the client area of the tab page, the <ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph> raises the appropriate event.</source>
          <target state="translated">但是，如果用户交互的选项卡页中，客户端区域内<ph id="ph1">&lt;xref:System.Windows.Forms.TabPage&gt;</ph>引发相应的事件。</target>       </trans-unit>
        <trans-unit id="1976" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1977" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>The following code example demonstrates using different mouse events to draw the path of the mouse on a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示了如何使用不同的鼠标事件上绘制的路径鼠标<ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1978" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>A line segment is added to the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> for each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> events that occur.</source>
          <target state="translated">一条直线段添加到<ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>每个<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>发生的事件。</target>       </trans-unit>
        <trans-unit id="1979" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>To update the graphics, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method is called for the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> on each <ph id="ph3">`MouseDown`</ph> and <ph id="ph4">`MouseUp`</ph> event.</source>
          <target state="translated">要更新该图形<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>为调用方法<ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph>上每个<ph id="ph3">`MouseDown`</ph>和<ph id="ph4">`MouseUp`</ph>事件。</target>       </trans-unit>
        <trans-unit id="1980" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>In addition, the graphic path is scrolled up or down when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event occurs.</source>
          <target state="translated">此外，向上或向下时滚动的图形路径<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph>事件发生。</target>       </trans-unit>
        <trans-unit id="1981" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>Additional mouse events, like <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, are identified on screen as well.</source>
          <target state="translated">其他鼠标事件，如<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>，在屏幕上以及标识。</target>       </trans-unit>
        <trans-unit id="1982" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseUp">
          <source>Also displayed on the screen is additional information about the mouse from the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> class.</source>
          <target state="translated">在屏幕上还显示了从鼠标有关的其他信息<ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="1983" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>Occurs when the mouse wheel moves while the control has focus.</source>
          <target state="translated">在控件有焦点且鼠标轮移动时发生。</target>       </trans-unit>
        <trans-unit id="1984" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>When handling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event it is important to follow the user interface (UI) standards associated with the mouse wheel.</source>
          <target state="translated">当处理<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph>务必遵循与鼠标滚轮关联的用户界面 (UI) 标准的事件。</target>       </trans-unit>
        <trans-unit id="1985" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MouseEventArgs.Delta%2A?displayProperty=nameWithType&gt;</ph> property value indicates the amount the mouse wheel has been moved.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MouseEventArgs.Delta%2A?displayProperty=nameWithType&gt;</ph>属性值指示已移动的量鼠标滚轮。</target>       </trans-unit>
        <trans-unit id="1986" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>The UI should scroll when the accumulated delta is plus or minus 120.</source>
          <target state="translated">当累积的增量是加上或减去 120 时，应滚动 UI。</target>       </trans-unit>
        <trans-unit id="1987" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>The UI should scroll the number of logical lines returned by the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType&gt;</ph> property for every delta value reached.</source>
          <target state="translated">UI 应该滚动逻辑返回的行数<ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType&gt;</ph>达到每个增量值的属性。</target>       </trans-unit>
        <trans-unit id="1988" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>You can also scroll more smoothly in smaller that 120 unit increments, however the ratio should remain constant, that is <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType&gt;</ph> lines scrolled per 120 delta units of wheel movement.</source>
          <target state="translated">你还可以滚动更平稳地中较小 120 单位的增量，但是之比应保持不变，即<ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType&gt;</ph>每 120 增量单位的滚轮移动滚动的行。</target>       </trans-unit>
        <trans-unit id="1989" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>For more information about handling mouse wheel messages, see the<bpt id="p1">[</bpt>WM_MOUSEWHEEL<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645617\(v=vs.85\).aspx)</ept>topic.</source>
          <target state="translated">有关处理鼠标滚轮消息的详细信息，请参阅<bpt id="p1">[</bpt>WM_MOUSEWHEEL<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms645617\(v=vs.85\).aspx)</ept>主题。</target>       </trans-unit>
        <trans-unit id="1990" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>Mouse events occur in the following order:</source>
          <target state="translated">鼠标事件按下列顺序发生：</target>       </trans-unit>
        <trans-unit id="1991" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1992" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>The following code example demonstrates using different mouse events to draw the path of the mouse on a <ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示了如何使用不同的鼠标事件上绘制的路径鼠标<ph id="ph1">&lt;xref:System.Windows.Forms.Panel&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1993" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>A line segment is added to the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> for each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> events that occur.</source>
          <target state="translated">一条直线段添加到<ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>每个<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>发生的事件。</target>       </trans-unit>
        <trans-unit id="1994" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>To update the graphics, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method is called for the <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph> on each <ph id="ph3">`MouseDown`</ph> and <ph id="ph4">`MouseUp`</ph> event.</source>
          <target state="translated">要更新该图形<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>为调用方法<ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph>上每个<ph id="ph3">`MouseDown`</ph>和<ph id="ph4">`MouseUp`</ph>事件。</target>       </trans-unit>
        <trans-unit id="1995" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>In addition, the graphic path is scrolled up or down when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph> event occurs.</source>
          <target state="translated">此外，向上或向下时滚动的图形路径<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseWheel&gt;</ph>事件发生。</target>       </trans-unit>
        <trans-unit id="1996" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>Additional mouse events, like <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>, are identified on screen as well.</source>
          <target state="translated">其他鼠标事件，如<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph>，在屏幕上以及标识。</target>       </trans-unit>
        <trans-unit id="1997" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.MouseWheel">
          <source>Also displayed on the screen is additional information about the mouse from the <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph> class.</source>
          <target state="translated">在屏幕上还显示了从鼠标有关的其他信息<ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="1998" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Move">
          <source>Occurs when the control is moved.</source>
          <target state="translated">在移动控件时发生。</target>       </trans-unit>
        <trans-unit id="1999" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Move">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2000" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Move">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Move&gt;</ph> event to display the location of the form in screen coordinates on the caption bar of the form.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Move&gt;</ph>事件以在窗体的标题栏上的屏幕坐标中显示的窗体的位置。</target>       </trans-unit>
        <trans-unit id="2001" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Name">
          <source>Gets or sets the name of the control.</source>
          <target state="translated">获取或设置控件的名称。</target>       </trans-unit>
        <trans-unit id="2002" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Name">
          <source>The name of the control.</source>
          <target state="translated">控件的名称。</target>       </trans-unit>
        <trans-unit id="2003" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Name">
          <source>The default is an empty string ("").</source>
          <target state="translated">默认值为空字符串("")。</target>       </trans-unit>
        <trans-unit id="2004" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Name">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> property can be used at run time to evaluate the object by name rather than type and programmatic name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph>属性可以用于在运行时评估对象由名称而不是类型和编程名称。</target>       </trans-unit>
        <trans-unit id="2005" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Name">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.String&gt;</ph> type, it can be evaluated in case-style logic statements (<ph id="ph3">`Select`</ph> statement in Visual Basic, <ph id="ph4">`switch`</ph> statement in Visual C# and <ph id="ph5">[!INCLUDE[vcprvc](~/includes/vcprvc-md.md)]</ph>).</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph>属性返回<ph id="ph2">&lt;xref:System.String&gt;</ph>类型，可以用例样式逻辑语句中对它进行评估 (<ph id="ph3">`Select`</ph>在 Visual Basic 中的语句<ph id="ph4">`switch`</ph>语句在 Visual C# 和<ph id="ph5">[!INCLUDE[vcprvc](~/includes/vcprvc-md.md)]</ph>)。</target>       </trans-unit>
        <trans-unit id="2006" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Name">
          <source>The following code example displays the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> of a control in a <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> when the control is added or removed from a form.</source>
          <target state="translated">下面的代码示例显示<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph>中的控件的<ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>添加或删除从窗体控件时。</target>       </trans-unit>
        <trans-unit id="2007" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> representing the area to invalidate.</source>
          <target state="translated">一个表示要使之无效的区域的 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2008" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Invalidated" /&gt;</ph> event with a specified region of the control to invalidate.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Invalidated" /&gt;</ph> 事件，其中带有要使之无效的控件的指定区域。</target>       </trans-unit>
        <trans-unit id="2009" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2010" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.AutoSizeChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.AutoSizeChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2012" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnAutoSizeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnAutoSizeChanged%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2016" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2017" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackColorChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackColorChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBackColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBackColorChanged%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是引发事件的方法时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="2023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> ，引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph>事件时<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>值发生更改 (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="2024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2028" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2029" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBackgroundImageChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBackgroundImageChanged%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是引发事件的方法时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="2035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> ，引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph>事件时<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>值发生更改 (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="2036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2040" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2041" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2047" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2048" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BindingContextChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BindingContextChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2049" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBindingContextChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnBindingContextChanged%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2054" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2055" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.CausesValidationChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.CausesValidationChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCausesValidationChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCausesValidationChanged%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是引发事件的方法时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="2061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> ，引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph>事件时<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>值发生更改 (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="2062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2066" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UICuesEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UICuesEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2067" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ChangeUICues" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ChangeUICues" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnChangeUICues%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnChangeUICues%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2073" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2074" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>The following code example demonstrates overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;</ph> method in a derived class.</source>
          <target state="translated">下面的代码示例演示如何重写<ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;</ph>派生类中的方法。</target>       </trans-unit>
        <trans-unit id="2080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>To run the example, paste the following code after a form class, in the same file.</source>
          <target state="translated">若要运行该示例，将窗体类，在同一文件后面粘贴下面的代码。</target>       </trans-unit>
        <trans-unit id="2081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>Add a textbox of type <ph id="ph1">`SingleClickTextBox`</ph> to the form.</source>
          <target state="translated">添加的类型的文本框<ph id="ph1">`SingleClickTextBox`</ph>到窗体。</target>       </trans-unit>
        <trans-unit id="2082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>The following code example shows one of the many uses of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event and event handler.</source>
          <target state="translated">下面的代码示例演示的多种用途之一<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>事件和事件处理程序。</target>       </trans-unit>
        <trans-unit id="2083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2084" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2085" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ClientSizeChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ClientSizeChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClientSizeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnClientSizeChanged%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2091" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2092" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ContextMenuChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ContextMenuChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnContextMenuChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnContextMenuChanged%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是引发事件的方法时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="2098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> ，引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph>事件时<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>值发生更改 (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="2099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2103" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2104" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ContextMenuStripChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ContextMenuStripChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnContextMenuStripChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnContextMenuStripChanged%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2110" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2111" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ControlAdded" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ControlAdded" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>Called when a child control is added to the control.</source>
          <target state="translated">当子控件添加到控件时调用。</target>       </trans-unit>
        <trans-unit id="2113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnControlAdded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnControlAdded%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAdded&gt;</ph> to add a control to a form and displays the name of the added control in a <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlAdded&gt;</ph>控件添加到窗体，并显示所添加的控件中的名称<ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2119" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ControlRemoved" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ControlRemoved" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>Called when a child control is removed from the control.</source>
          <target state="translated">当从控件中移除子控件时调用。</target>       </trans-unit>
        <trans-unit id="2122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnControlRemoved%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnControlRemoved%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlRemoved&gt;</ph> to remove a control from a form and displays the name of the removed control in a <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlRemoved&gt;</ph>以从窗体中移除的控件，并显示中移除的控件的名称<ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2128" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnCreateControl">
          <source>Raises the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateControl" /&gt;</ph> method.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.CreateControl" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCreateControl">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCreateControl%2A&gt;</ph> method is called when the control is first created.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCreateControl%2A&gt;</ph>首次创建控件时调用方法。</target>       </trans-unit>
        <trans-unit id="2130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCreateControl">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCreateControl%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCreateControl%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCreateControl">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCreateControl">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnCreateControl" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnCreateControl" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnCreateControl" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnCreateControl" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2133" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2134" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.CursorChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.CursorChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCursorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnCursorChanged%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是引发事件的方法时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="2140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> ，引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph>事件时<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>值发生更改 (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="2141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2145" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2146" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DockChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DockChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDockChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDockChanged%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是引发事件的方法时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="2152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> ，引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph>事件时<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>值发生更改 (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="2153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2157" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2158" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DoubleClick" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event of a <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> to load text files listed in the <ph id="ph3">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> into a <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph>事件<ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>加载文本中列出的文件<ph id="ph3">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>到<ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="2164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2165" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DpiChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DpiChangedEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2166" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DpiChangedAfterParent" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DpiChangedAfterParent" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2167" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DpiChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DpiChangedEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2168" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DpiChangedBeforeParent" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DpiChangedBeforeParent" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2169" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2170" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragDrop" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragDrop" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragDrop%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragDrop%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2176" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2177" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragEnter" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragEnter" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragEnter%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2183" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2184" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragLeave" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragLeave" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragLeave%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2190" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2191" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragOver" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragOver" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragOver%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnDragOver%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2197" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2198" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.EnabledChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.EnabledChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnEnabledChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnEnabledChanged%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2204" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2205" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Enter" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Enter" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnEnter%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph> event to change the foreground and background colors of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> under particular conditions.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>事件来更改的前景色和背景颜色<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>在特定情况下。</target>       </trans-unit>
        <trans-unit id="2211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2212" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2213" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnFontChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnFontChanged%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是引发事件的方法时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="2219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> ，引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph>事件时<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>值发生更改 (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="2220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2224" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2225" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ForeColorChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ForeColorChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnForeColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnForeColorChanged%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是引发事件的方法时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="2231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> ，引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph>事件时<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>值发生更改 (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="2232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2236" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2237" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GiveFeedback" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GiveFeedback" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnGiveFeedback%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnGiveFeedback%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2243" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2244" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GotFocus" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GotFocus" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnGotFocus%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnGotFocus%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2250" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2251" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnHandleCreated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnHandleCreated%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2257" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2258" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleDestroyed" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleDestroyed" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnHandleDestroyed%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnHandleDestroyed%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2264" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HelpEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HelpEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2265" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HelpRequested" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HelpRequested" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnHelpRequested%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnHelpRequested%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2271" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2272" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ImeModeChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ImeModeChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnImeModeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnImeModeChanged%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是引发事件的方法时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="2278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> ，引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph>事件时<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>值发生更改 (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="2279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2283" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InvalidateEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InvalidateEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2284" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Invalidated" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Invalidated" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnInvalidated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnInvalidated%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2290" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2291" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyDown%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event to determine the type of character entered into the control.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>事件，以确定文本框控件中输入的字符的类型。</target>       </trans-unit>
        <trans-unit id="2297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2298" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyPressEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyPressEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2299" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyPress" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyPress" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyPress%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyPress%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event to prevent characters from entering the control.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph>事件，以防止从输入控件的字符。</target>       </trans-unit>
        <trans-unit id="2305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2306" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2307" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyUp%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyUp%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> event with the <ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph> class to display pop-up style help to the user.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph>事件和<ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph>类来显示给用户的弹出样式帮助。</target>       </trans-unit>
        <trans-unit id="2313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2314" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LayoutEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LayoutEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2315" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Layout" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Layout" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLayout%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLayout%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph> method so that registered delegates receive the event and for typical docking and anchoring functions to work.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /&gt;</ph>方法，以便已注册的委托对事件进行接收和为典型的停靠和锚定函数能够工作。</target>       </trans-unit>
        <trans-unit id="2321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>Derived classes should override this method to do any custom layout logic.</source>
          <target state="translated">派生的类应重写此方法以执行任何自定义的布局逻辑。</target>       </trans-unit>
        <trans-unit id="2322" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2323" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Leave" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Leave" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLeave%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph> event to reset a control to its former state.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>事件，以将控件重置为其以前的状态。</target>       </trans-unit>
        <trans-unit id="2329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2330" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2331" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LocationChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LocationChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLocationChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLocationChanged%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是引发事件的方法时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="2337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> ，引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph>事件时<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>值发生更改 (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="2338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2342" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2343" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LostFocus" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.LostFocus" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLostFocus%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnLostFocus%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2349" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2350" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MarginChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MarginChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMarginChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMarginChanged%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2356" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2357" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseCaptureChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseCaptureChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseCaptureChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseCaptureChanged%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2363" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2364" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseClick" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseClick" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseClick%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2370" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2371" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseDoubleClick" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseDoubleClick" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseDoubleClick%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2377" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2378" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseDown" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseDown" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseDown%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2384" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2385" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseEnter" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseEnter" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseEnter%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2391" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2392" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseHover" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseHover" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>The following code example demonstrates how to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A&gt;</ph> methods in a derived class.</source>
          <target state="translated">下面的代码示例演示如何重写<ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A&gt;</ph>派生类中的方法。</target>       </trans-unit>
        <trans-unit id="2398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>To run the example, paste the following code in a new form and paste this class, forming the same file, after the form.</source>
          <target state="translated">若要运行该示例，在新的窗体中粘贴以下代码并粘贴构成窗体的后面的同一文件中，此类。</target>       </trans-unit>
        <trans-unit id="2399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>Add a button of type <ph id="ph1">`FunButton`</ph> to the form.</source>
          <target state="translated">添加一个按钮类型<ph id="ph1">`FunButton`</ph>到窗体。</target>       </trans-unit>
        <trans-unit id="2400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2401" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2402" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseLeave" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseLeave" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseLeave%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2408" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2409" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseMove" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseMove" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>The following code example demonstrates how to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A&gt;</ph> methods in a derived class.</source>
          <target state="translated">下面的代码示例演示如何重写<ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A&gt;</ph>派生类中的方法。</target>       </trans-unit>
        <trans-unit id="2415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>To run the example, paste the following code in a new form and paste this class, forming the same file, after the form.</source>
          <target state="translated">若要运行该示例，在新的窗体中粘贴以下代码并粘贴构成窗体的后面的同一文件中，此类。</target>       </trans-unit>
        <trans-unit id="2416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>Add a button of type <ph id="ph1">`FunButton`</ph> to the form.</source>
          <target state="translated">添加一个按钮类型<ph id="ph1">`FunButton`</ph>到窗体。</target>       </trans-unit>
        <trans-unit id="2417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2418" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2419" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseUp" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseUp" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseUp%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseUp%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2425" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2426" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseWheel" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseWheel" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseWheel%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMouseWheel%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2432" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2433" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Move" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Move" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMove%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnMove%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Move&gt;</ph> event to display the location of the form in screen coordinates on the caption bar of the form.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Move&gt;</ph>事件以在窗体的标题栏上的屏幕坐标中显示的窗体的位置。</target>       </trans-unit>
        <trans-unit id="2439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2440" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> that represents the Windows message.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>，它表示 Windows 消息。</target>       </trans-unit>
        <trans-unit id="2441" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)">
          <source>Notifies the control of Windows messages.</source>
          <target state="translated">向控件通知 Windows 消息。</target>       </trans-unit>
        <trans-unit id="2442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnNotifyMessage%2A&gt;</ph> method is called if the control's <ph id="ph2">`EnableNotifyMessage`</ph> style bit is set in <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnNotifyMessage%2A&gt;</ph>方法调用如果控件的<ph id="ph2">`EnableNotifyMessage`</ph>中设置样式位时<ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)">
          <source>The <ph id="ph1">`EnableNotifyMessage`</ph> style in <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> enables the control to be notified when the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> method receives a Windows message.</source>
          <target state="translated"><ph id="ph1">`EnableNotifyMessage`</ph>设置中的样式<ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>使控件能够时获得通知<ph id="ph3">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph>方法接收 Windows 消息。</target>       </trans-unit>
        <trans-unit id="2444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)">
          <source>With this method, semi-trusted controls can listen for Windows messages without enabling them to modify the message.</source>
          <target state="translated">使用此方法，不完全受信任的控件可以但却不允许修改消息侦听的 Windows 消息。</target>       </trans-unit>
        <trans-unit id="2445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /&gt;</ph> in a derived class, calling the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /&gt;</ph> method is not necessary because there is no initial implementation.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /&gt;</ph>派生类中调用基类的<ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /&gt;</ph>方法不必要，因为没有初始实现。</target>       </trans-unit>
        <trans-unit id="2446" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2447" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.PaddingChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.PaddingChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaddingChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaddingChanged%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2453" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2454" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph>方法还允许派生的类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on which it is dropped.</source>
          <target state="translated">下面的代码示例使用户能够将图像或图像文件拖动到窗体，并将其显示在其删除的点。</target>       </trans-unit>
        <trans-unit id="2460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph>方法被重写来重绘图像绘制窗体时每次; 否则该映像将只持续到下一步重新绘制。</target>       </trans-unit>
        <trans-unit id="2461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph>事件处理方法确定要拖动到窗体中数据的类型，并提供适当的反馈。</target>       </trans-unit>
        <trans-unit id="2462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event-handling method displays the image on the form, if an <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> can be created from the data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph>事件处理方法在窗体上显示的图像，如果<ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>可以从数据创建。</target>       </trans-unit>
        <trans-unit id="2463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph> values are screen coordinates, the example uses the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph> method to convert them to client coordinates.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph>值屏幕坐标，该示例使用<ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph>方法来将它们转换成工作区坐标。</target>       </trans-unit>
        <trans-unit id="2464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2465" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains information about the control to paint.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph>，其中包含有关要绘制的控件的信息。</target>       </trans-unit>
        <trans-unit id="2466" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
          <source>Paints the background of the control.</source>
          <target state="translated">绘制控件的背景。</target>       </trans-unit>
        <trans-unit id="2467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph> method enables derived classes to handle Windows background erase requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph>方法允许派生的类进行处理 Windows 背景擦除请求。</target>       </trans-unit>
        <trans-unit id="2468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
          <source>Inheriting classes should override this method to handle the erase background request from windows.</source>
          <target state="translated">继承类应重写此方法以处理来自 windows 的擦除后台请求。</target>       </trans-unit>
        <trans-unit id="2469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> in a derived class it is not necessary to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /&gt;</ph>.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /&gt;</ph>派生类中它不需要调用基类的<ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2470" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2471" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackColorChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">当控件容器的 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackColorChanged" /&gt;</ph> 属性值更改时，将引发 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentBackColorChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentBackColorChanged%2A&gt;</ph>方法还允许派生的类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是引发事件的方法时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="2477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> ，引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph>事件时<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>值发生更改 (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="2478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2482" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2483" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">当控件容器的 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /&gt;</ph> 属性值更改时，将引发 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BackgroundImage" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentBackgroundImageChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentBackgroundImageChanged%2A&gt;</ph>方法还允许派生的类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是引发事件的方法时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="2489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> ，引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph>事件时<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>值发生更改 (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="2490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2494" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2495" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BindingContextChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">当控件容器的 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BindingContextChanged" /&gt;</ph> 属性值更改时，将引发 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.BindingContext" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentBindingContextChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentBindingContextChanged%2A&gt;</ph>方法还允许派生的类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是引发事件的方法时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="2501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> ，引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph>事件时<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>值发生更改 (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="2502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2506" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2507" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ParentChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ParentChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentChanged%2A&gt;</ph>方法还允许派生的类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是引发事件的方法时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="2513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> ，引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph>事件时<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>值发生更改 (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="2514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2518" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2519" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.CursorChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.CursorChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentCursorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentCursorChanged%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2525" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2526" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.EnabledChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Enabled" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">当控件容器的 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.EnabledChanged" /&gt;</ph> 属性值更改时，将引发 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Enabled" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentEnabledChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentEnabledChanged%2A&gt;</ph>方法还允许派生的类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是引发事件的方法时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="2532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> ，引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph>事件时<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>值发生更改 (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="2533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2537" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2538" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">当控件容器的 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> 属性值更改时，将引发 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentFontChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentFontChanged%2A&gt;</ph>方法还允许派生的类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是引发事件的方法时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="2544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> ，引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph>事件时<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>值发生更改 (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="2545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2549" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2550" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ForeColorChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">当控件容器的 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ForeColorChanged" /&gt;</ph> 属性值更改时，将引发 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentForeColorChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentForeColorChanged%2A&gt;</ph>方法还允许派生的类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是引发事件的方法时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="2556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> ，引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph>事件时<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>值发生更改 (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="2557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2561" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2562" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">当控件容器的 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /&gt;</ph> 属性值更改时，将引发 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentRightToLeftChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentRightToLeftChanged%2A&gt;</ph>方法还允许派生的类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是引发事件的方法时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="2568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> ，引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph>事件时<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>值发生更改 (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="2569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2573" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2574" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.VisibleChanged" /&gt;</ph> event when the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Visible" /&gt;</ph> property value of the control's container changes.</source>
          <target state="translated">当控件容器的 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.VisibleChanged" /&gt;</ph> 属性值更改时，将引发 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Visible" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentVisibleChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnParentVisibleChanged%2A&gt;</ph>方法还允许派生的类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是引发事件的方法时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="2580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> ，引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph>事件时<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>值发生更改 (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="2581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2585" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PreviewKeyDownEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PreviewKeyDownEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2586" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.PreviewKeyDown" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.PreviewKeyDown" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPreviewKeyDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPreviewKeyDown%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2592" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2593" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)">
          <source>If the <ph id="ph1">`UserPaint`</ph> bit of the <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> is set, you can override <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPrint%2A&gt;</ph> to do layered painting.</source>
          <target state="translated">如果<ph id="ph1">`UserPaint`</ph>位的<ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>设置，您可以重写<ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPrint%2A&gt;</ph>以进行分层的绘制。</target>       </trans-unit>
        <trans-unit id="2595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> for more information.</source>
          <target state="translated">有关更多信息，请参见<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2596" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;paramref name="e" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="e" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2597" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2598" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>After dragging has begun, this method is called repeatedly by the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> until the drag operation is either canceled or completed.</source>
          <target state="translated">拖动开始后，此方法会重复调用<ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>直到取消或完成拖动操作。</target>       </trans-unit>
        <trans-unit id="2600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>Override this method if you want to change the point at which dragging is canceled or at which a drop occurs.</source>
          <target state="translated">如果你想要更改在哪些拖动操作取消或放置操作发生的点，重写此方法。</target>       </trans-unit>
        <trans-unit id="2601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnQueryContinueDrag%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnQueryContinueDrag%2A&gt;</ph>方法还允许派生的类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2606" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2607" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.RegionChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.RegionChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnRegionChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnRegionChanged%2A&gt;</ph> 方法还允许派生类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2613" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2614" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Resize" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Resize" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnResize%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnResize%2A&gt;</ph>方法还允许派生的类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph> method can be called during construction, so if you override <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph> it can be called before the control constructor is called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph>方法可以调用在构造期间，因此，如果你重写<ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /&gt;</ph>它可以在调用之前调用控件构造函数。</target>       </trans-unit>
        <trans-unit id="2621" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2622" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnRightToLeftChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnRightToLeftChanged%2A&gt;</ph>方法还允许派生的类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是引发事件的方法时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="2628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> ，引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph>事件时<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>值发生更改 (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="2629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2633" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2634" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.SizeChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.SizeChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnSizeChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnSizeChanged%2A&gt;</ph>方法还允许派生的类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2640" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2641" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.StyleChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.StyleChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnStyleChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnStyleChanged%2A&gt;</ph>方法还允许派生的类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2647" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2648" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.SystemColorsChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.SystemColorsChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnSystemColorsChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnSystemColorsChanged%2A&gt;</ph>方法还允许派生的类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2654" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2655" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TabIndexChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TabIndexChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnTabIndexChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnTabIndexChanged%2A&gt;</ph>方法还允许派生的类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2661" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2662" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TabStopChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TabStopChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnTabStopChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnTabStopChanged%2A&gt;</ph>方法还允许派生的类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是引发事件的方法时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="2668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> ，引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph>事件时<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>值发生更改 (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="2669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2673" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2674" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TextChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TextChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnTextChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnTextChanged%2A&gt;</ph>方法还允许派生的类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2683" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2684" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validated" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validated" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnValidated%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnValidated%2A&gt;</ph>方法还允许派生的类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2690" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2691" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnValidating%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnValidating%2A&gt;</ph>方法还允许派生的类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2697" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2698" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.VisibleChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.VisibleChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="2700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnVisibleChanged%2A&gt;</ph> method also enables derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnVisibleChanged%2A&gt;</ph>方法还允许派生的类对事件进行处理而不必附加委托。</target>       </trans-unit>
        <trans-unit id="2702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">这是在派生类中处理事件的首选技术。</target>       </trans-unit>
        <trans-unit id="2703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>The following code example is an event-raising method that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是引发事件的方法时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="2704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <ph id="ph2">`On`</ph><bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph3">`Changed`</ph> that raise the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept><ph id="ph4">`Changed`</ph> event when the <bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> value changes (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<ph id="ph2">`On`</ph> <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph3">`Changed`</ph> ，引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> <ph id="ph4">`Changed`</ph>事件时<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>值发生更改 (<bpt id="p4">*</bpt>PropertyName<ept id="p4">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="2705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> derived class displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>派生显示货币数据的类。</target>       </trans-unit>
        <trans-unit id="2706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="2707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>This example requires that you have a class that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="2708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">在派生类中重写 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /&gt;</ph> 时，一定要调用基类的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /&gt;</ph> 方法，以便已注册的委托对事件进行接收。</target>       </trans-unit>
        <trans-unit id="2709" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Padding">
          <source>Gets or sets padding within the control.</source>
          <target state="translated">获取或设置控件内的空白。</target>       </trans-unit>
        <trans-unit id="2710" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> representing the control's internal spacing characteristics.</source>
          <target state="translated">表示控件的内部间距特征的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2711" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>For containers such as <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph> property gets or sets their respective <ph id="ph4">&lt;xref:System.Windows.Forms.Control.DisplayRectangle%2A&gt;</ph> properties.</source>
          <target state="translated">有关等容器<ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph>属性获取或设置其各自<ph id="ph4">&lt;xref:System.Windows.Forms.Control.DisplayRectangle%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="2712" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=nameWithType&gt;</ph> property is equal to its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Padding%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=nameWithType&gt;</ph>属性等同于其<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Padding%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="2713" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>Controls receive default values for <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph> that are reasonably close to Windows user interface guidelines.</source>
          <target state="translated">默认值时控件接收<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph>规范的合理即将 Windows 用户界面指南。</target>       </trans-unit>
        <trans-unit id="2714" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>Some adjustments might still be necessary for particular applications.</source>
          <target state="translated">一些调整可能仍有必要为特定应用程序。</target>       </trans-unit>
        <trans-unit id="2715" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>All controls that implement <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetPreferredSize%2A&gt;</ph> are enlarged by the amount in <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph> when <ph id="ph3">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph> is <ph id="ph4">`true`</ph>.</source>
          <target state="translated">实现的所有控件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GetPreferredSize%2A&gt;</ph>按数量在扩大<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph>时<ph id="ph3">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph>是<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="2716" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>The following controls do not use <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph>:</source>
          <target state="translated">以下控件不使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Padding%2A&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="2717" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>Controls that do not implement <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph> through <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetPreferredSize%2A&gt;</ph></source>
          <target state="translated">未实现的控件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph>通过 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetPreferredSize%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="2718" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Padding">
          <source>Custom controls that directly inherit from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph></source>
          <target state="translated">直接从继承的自定义控件 <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph></target>       </trans-unit>
        <trans-unit id="2719" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>Occurs when the control's padding changes.</source>
          <target state="translated">在控件空白区更改时发生。</target>       </trans-unit>
        <trans-unit id="2720" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2721" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="2722" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PaddingChanged&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Control.PaddingChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="2723" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="2724" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2725" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2726" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PaddingChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PaddingChanged&gt;</ph> event.</source>
          <target state="translated">然后将其命名实例<ph id="ph1">`Control1`</ph>并确保与事件处理程序<ph id="ph2">&lt;xref:System.Windows.Forms.Control.PaddingChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="2727" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Paint">
          <source>Occurs when the control is redrawn.</source>
          <target state="translated">在重绘控件时发生。</target>       </trans-unit>
        <trans-unit id="2728" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Paint">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event is raised when the control is redrawn.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>时在重绘控件将引发事件。</target>       </trans-unit>
        <trans-unit id="2729" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Paint">
          <source>It passes an instance of <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> to the method(s) that handles the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event.</source>
          <target state="translated">它将的一个实例传递<ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>到处理的方法<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="2730" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Paint">
          <source>When creating a new custom control or an inherited control with a different visual appearance, you must provide code to render the control by overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method.</source>
          <target state="translated">在创建新的自定义控件或继承的控件时具有不同的可视外观，你必须提供代码以通过重写呈现控件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="2731" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Paint">
          <source>For more information, see <bpt id="p1">[</bpt>Overriding the OnPaint Method<ept id="p1">](~/docs/framework/winforms/controls/overriding-the-onpaint-method.md)</ept> and <bpt id="p2">[</bpt>Custom Control Painting and Rendering<ept id="p2">](~/docs/framework/winforms/controls/custom-control-painting-and-rendering.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>重写 OnPaint 方法<ept id="p1">](~/docs/framework/winforms/controls/overriding-the-onpaint-method.md)</ept>和<bpt id="p2">[</bpt>自定义控件的绘制和呈现<ept id="p2">](~/docs/framework/winforms/controls/custom-control-painting-and-rendering.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2732" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Paint">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2733" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Paint">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> control on the form and uses the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event to draw to it.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph>控件在窗体和使用<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件要绘制到它。</target>       </trans-unit>
        <trans-unit id="2734" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Parent">
          <source>Gets or sets the parent container of the control.</source>
          <target state="translated">获取或设置控件的父容器。</target>       </trans-unit>
        <trans-unit id="2735" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Parent">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> that represents the parent or container control of the control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>，表示控件的父控件或容器控件。</target>       </trans-unit>
        <trans-unit id="2736" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Parent">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> property value to <ph id="ph2">`null`</ph> removes the control from the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> of its current parent control.</source>
          <target state="translated">设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph>属性值设置为<ph id="ph2">`null`</ph>中移除从控件<ph id="ph3">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>其当前的父控件。</target>       </trans-unit>
        <trans-unit id="2737" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Parent">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.FindForm%2A&gt;</ph> method to set properties on the parent control of a button and its form.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph>属性和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.FindForm%2A&gt;</ph>方法以在父控件的一个按钮和其窗体上设置属性。</target>       </trans-unit>
        <trans-unit id="2738" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Parent">
          <source>for all windows to get this property value.</source>
          <target state="translated">若要获取此属性的值的所有窗口。</target>       </trans-unit>
        <trans-unit id="2739" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Parent">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="2740" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.ParentChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Parent" /&gt;</ph> property value changes.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Parent" /&gt;</ph> 属性值更改时发生。</target>       </trans-unit>
        <trans-unit id="2741" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ParentChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">如果将引发此事件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Parent%2A&gt;</ph>通过以编程方式修改或用户交互更改属性。</target>       </trans-unit>
        <trans-unit id="2742" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.ParentChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2743" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Forces the control to apply layout logic to child controls.</source>
          <target state="translated">强制控件将布局逻辑应用于子控件。</target>       </trans-unit>
        <trans-unit id="2744" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>Forces the control to apply layout logic to all its child controls.</source>
          <target state="translated">强制控件将布局逻辑应用于其所有子控件。</target>       </trans-unit>
        <trans-unit id="2745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method was called before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is suppressed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph>方法调用，然后再调<ph id="ph2">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>方法，<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph>取消事件。</target>       </trans-unit>
        <trans-unit id="2746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.LayoutEventArgs&gt;</ph> created are set to <ph id="ph4">`null`</ph> if no values were provided when the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> method was called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Windows.Forms.LayoutEventArgs&gt;</ph>创建服务器被设置为<ph id="ph4">`null`</ph>如果未不提供任何值<ph id="ph5">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>调用了方法。</target>       </trans-unit>
        <trans-unit id="2747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> method.</source>
          <target state="translated">下面的代码示例演示如何使用 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>It also demonstrates ways in which the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is raised.</source>
          <target state="translated">它还演示了在哪些方面<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="2749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>In this example, the <ph id="ph1">`Click`</ph> event handler for <ph id="ph2">`Button1`</ph> explicitly calls <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>.</source>
          <target state="translated">在此示例中，<ph id="ph1">`Click`</ph>事件处理程序<ph id="ph2">`Button1`</ph>显式调用<ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>The <ph id="ph1">`Click`</ph> event handler for <ph id="ph2">`Button2`</ph> implicitly calls <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Click`</ph>事件处理程序<ph id="ph2">`Button2`</ph>隐式调用<ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> is also called when the form is loaded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> 此外加载窗体时调用。</target>       </trans-unit>
        <trans-unit id="2752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source><ph id="ph1">`Button3`</ph> returns the control to the state it was in when loaded.</source>
          <target state="translated"><ph id="ph1">`Button3`</ph> 控制权返回给加载时的状态。</target>       </trans-unit>
        <trans-unit id="2753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>In each case, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is raised.</source>
          <target state="translated">在每个情况下，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="2754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>This is a complete example.</source>
          <target state="translated">这是一个完整的示例。</target>       </trans-unit>
        <trans-unit id="2755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout">
          <source>To run the example, paste the following code in a blank form.</source>
          <target state="translated">若要运行该示例，请在空白的窗体中粘贴以下代码。</target>       </trans-unit>
        <trans-unit id="2756" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> that represents the most recently changed control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>，它表示最近更改的控件。</target>       </trans-unit>
        <trans-unit id="2757" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>The name of the most recently changed property on the control.</source>
          <target state="translated">此控件上最近更改的属性的名称。</target>       </trans-unit>
        <trans-unit id="2758" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>Forces the control to apply layout logic to all its child controls.</source>
          <target state="translated">强制控件将布局逻辑应用于其所有子控件。</target>       </trans-unit>
        <trans-unit id="2759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method was called before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is suppressed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph>方法调用，然后再调<ph id="ph2">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>方法，<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph>取消事件。</target>       </trans-unit>
        <trans-unit id="2760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>The <ph id="ph1">`affectedControl`</ph> and <ph id="ph2">`affectedProperty`</ph> parameters can both be set to <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`affectedControl`</ph>和<ph id="ph2">`affectedProperty`</ph>参数可以都设置为<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="2761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>Doing so causes the <ph id="ph1">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.LayoutEventArgs&gt;</ph> created to be set to <ph id="ph4">`null`</ph>.</source>
          <target state="translated">执行操作将导致<ph id="ph1">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Windows.Forms.LayoutEventArgs&gt;</ph>创建设置为<ph id="ph4">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="2762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> method.</source>
          <target state="translated">下面的代码示例演示如何使用 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>It also demonstrates ways in which the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is raised.</source>
          <target state="translated">它还演示了在哪些方面<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="2764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>In this example, the <ph id="ph1">`Click`</ph> event handler for <ph id="ph2">`Button1`</ph> explicitly calls <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>.</source>
          <target state="translated">在此示例中，<ph id="ph1">`Click`</ph>事件处理程序<ph id="ph2">`Button1`</ph>显式调用<ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>The <ph id="ph1">`Click`</ph> event handler for <ph id="ph2">`Button2`</ph> implicitly calls <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Click`</ph>事件处理程序<ph id="ph2">`Button2`</ph>隐式调用<ph id="ph3">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> is also called when the form is loaded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.PerformLayout%2A&gt;</ph> 此外加载窗体时调用。</target>       </trans-unit>
        <trans-unit id="2767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source><ph id="ph1">`Button3`</ph> returns the control to the state it was in when loaded.</source>
          <target state="translated"><ph id="ph1">`Button3`</ph> 控制权返回给加载时的状态。</target>       </trans-unit>
        <trans-unit id="2768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>In each case, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is raised.</source>
          <target state="translated">在每个情况下，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="2769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>This is a complete example.</source>
          <target state="translated">这是一个完整的示例。</target>       </trans-unit>
        <trans-unit id="2770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
          <source>To run the example, paste the following code in a blank form.</source>
          <target state="translated">若要运行该示例，请在空白的窗体中粘贴以下代码。</target>       </trans-unit>
        <trans-unit id="2771" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>The screen coordinate <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> to convert.</source>
          <target state="translated">要转换的屏幕坐标 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2772" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>Computes the location of the specified screen point into client coordinates.</source>
          <target state="translated">将指定屏幕点的位置计算成工作区坐标。</target>       </trans-unit>
        <trans-unit id="2773" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the converted <ph id="ph2">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>, <ph id="ph3">&lt;paramref name="p" /&gt;</ph>, in client coordinates.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>，表示转换后的 <ph id="ph2">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>、<ph id="ph3">&lt;paramref name="p" /&gt;</ph>（以工作区坐标表示）。</target>       </trans-unit>
        <trans-unit id="2774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped.</source>
          <target state="translated">下面的代码示例使用户将图像或图像文件拖动到窗体，并将其显示在上的点被删除。</target>       </trans-unit>
        <trans-unit id="2775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph>方法被重写来重绘图像绘制窗体时每次; 否则该映像将只持续到下一步重新绘制。</target>       </trans-unit>
        <trans-unit id="2776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph>事件处理方法确定要拖动到窗体中数据的类型，并提供适当的反馈。</target>       </trans-unit>
        <trans-unit id="2777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event-handling method displays the image on the form, if an <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> can be created from the data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph>事件处理方法在窗体上显示的图像，如果<ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>可以从数据创建。</target>       </trans-unit>
        <trans-unit id="2778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph> values are screen coordinates, the example uses the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph> method to convert them to client coordinates.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType&gt;</ph>值屏幕坐标，该示例使用<ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToClient%2A&gt;</ph>方法来将它们转换成工作区坐标。</target>       </trans-unit>
        <trans-unit id="2779" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)">
          <source>The client coordinate <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> to convert.</source>
          <target state="translated">要转换的客户端坐标 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2780" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)">
          <source>Computes the location of the specified client point into screen coordinates.</source>
          <target state="translated">将指定工作区点的位置计算成屏幕坐标。</target>       </trans-unit>
        <trans-unit id="2781" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the converted <ph id="ph2">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>, <ph id="ph3">&lt;paramref name="p" /&gt;</ph>, in screen coordinates.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>，表示转换后的 <ph id="ph2">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>、<ph id="ph3">&lt;paramref name="p" /&gt;</ph>（以屏幕坐标表示）。</target>       </trans-unit>
        <trans-unit id="2782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RectangleToScreen%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToScreen%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseButtons%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph6">&lt;xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType&gt;</ph> members.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RectangleToScreen%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToScreen%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseButtons%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType&gt;</ph>，和<ph id="ph6">&lt;xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType&gt;</ph>成员。</target>       </trans-unit>
        <trans-unit id="2783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)">
          <source>To run the example, paste the following code in a form called Form1 containing several controls.</source>
          <target state="translated">若要运行该示例，请将以下代码粘贴一种称为 form1 包含多个控件。</target>       </trans-unit>
        <trans-unit id="2784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> events are connected to the event handlers defined in the example.</source>
          <target state="translated">此示例需要<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>，和<ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>事件连接到示例中定义的事件处理程序。</target>       </trans-unit>
        <trans-unit id="2785" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.PreferredSize">
          <source>Gets the size of a rectangular area into which the control can fit.</source>
          <target state="translated">获取可以容纳控件的矩形区域的大小。</target>       </trans-unit>
        <trans-unit id="2786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.PreferredSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> containing the height and width, in pixels.</source>
          <target state="translated">包含高度和宽度的 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="2787" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> that represents the message to process.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>，表示要处理的消息。</target>       </trans-unit>
        <trans-unit id="2788" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)">
          <source>Preprocesses keyboard or input messages within the message loop before they are dispatched.</source>
          <target state="translated">在调度键盘或输入消息之前，在消息循环内对它们进行预处理。</target>       </trans-unit>
        <trans-unit id="2789" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PreProcessControlState" /&gt;</ph> values, depending on whether <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph> or <ph id="ph4">&lt;see langword="false" /&gt;</ph> and whether <ph id="ph5">&lt;see cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" /&gt;</ph> or <ph id="ph6">&lt;see cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" /&gt;</ph> are <ph id="ph7">&lt;see langword="true" /&gt;</ph> or <ph id="ph8">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.PreProcessControlState" /&gt;</ph> 值之一，具体取决于 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" /&gt;</ph> 是 <ph id="ph3">&lt;see langword="true" /&gt;</ph> 还是 <ph id="ph4">&lt;see langword="false" /&gt;</ph>，以及 <ph id="ph5">&lt;see cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" /&gt;</ph> 或 <ph id="ph6">&lt;see cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" /&gt;</ph> 是 <ph id="ph7">&lt;see langword="true" /&gt;</ph> 还是 <ph id="ph8">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2790" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the message to process.</source>
          <target state="translated">通过引用传递的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>，表示要处理的消息。</target>       </trans-unit>
        <trans-unit id="2791" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>The possible values are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.</source>
          <target state="translated">可能的值有 WM_KEYDOWN、WM_SYSKEYDOWN、WM_CHAR 和 WM_SYSCHAR。</target>       </trans-unit>
        <trans-unit id="2792" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>Preprocesses keyboard or input messages within the message loop before they are dispatched.</source>
          <target state="translated">在调度键盘或输入消息之前，在消息循环内对它们进行预处理。</target>       </trans-unit>
        <trans-unit id="2793" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果消息已由控件处理，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph> is called by the application's message loop to preprocess input messages before they are dispatched.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph> 由应用程序的消息循环，以预处理输入的消息之前对它们进行调用。</target>       </trans-unit>
        <trans-unit id="2795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>Possible values for the <ph id="ph1">`msg`</ph> parameter are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.</source>
          <target state="translated">可能的值有<ph id="ph1">`msg`</ph>参数是 WM_KEYDOWN、 WM_SYSKEYDOWN、 WM_CHAR 和 WM_SYSCHAR。</target>       </trans-unit>
        <trans-unit id="2796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>When overriding <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph>, a control should return <ph id="ph2">`true`</ph> to indicate that it has processed the message.</source>
          <target state="translated">在重写<ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph>，控件应返回<ph id="ph2">`true`</ph>以指示它已处理完该消息。</target>       </trans-unit>
        <trans-unit id="2797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>For messages that are not processed by the control, the result of <ph id="ph1">`base.PreProcessMessage`</ph> should be returned.</source>
          <target state="translated">不会处理由控件的结果的消息<ph id="ph1">`base.PreProcessMessage`</ph>应返回。</target>       </trans-unit>
        <trans-unit id="2798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>Controls will typically override one of the more specialized methods such as <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProcessCmdKey%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.ProcessDialogChar%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph> instead of overriding <ph id="ph6">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph>.</source>
          <target state="translated">控件通常将如替代更专用的方法之一<ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProcessCmdKey%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.ProcessDialogChar%2A&gt;</ph>，或<ph id="ph5">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph>而不是重写<ph id="ph6">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>for all windows for the immediate caller to call this method.</source>
          <target state="translated">允许直接调用方来调用此方法的所有窗口。</target>       </trans-unit>
        <trans-unit id="2800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph>值<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2801" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>Occurs before the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> event when a key is pressed while focus is on this control.</source>
          <target state="translated">在焦点位于此控件上的情况下，当有按键动作时发生（在 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> 事件之前发生）。</target>       </trans-unit>
        <trans-unit id="2802" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>Some key presses, such as the TAB, RETURN, ESC, and arrow keys, are typically ignored by some controls because they are not considered input key presses.</source>
          <target state="translated">通常由某些控件忽略某些按键操作，例如选项卡、 返回、 ESC、 和箭头键，因为它们被视为不输入键击。</target>       </trans-unit>
        <trans-unit id="2803" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>For example, by default, a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> control ignores the arrow keys.</source>
          <target state="translated">例如，默认情况下，<ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>控件将忽略箭头键。</target>       </trans-unit>
        <trans-unit id="2804" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>Pressing the arrow keys typically causes the focus to move to the previous or next control.</source>
          <target state="translated">通常按箭头键会导致焦点将移动到上一页或下一页控件。</target>       </trans-unit>
        <trans-unit id="2805" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>The arrow keys are considered navigation keys and pressing these keys typically do not raise the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event for a <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</source>
          <target state="translated">箭头键被视为导航键，然后按这些密钥通常不会引发<ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>事件<ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2806" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>However, pressing the arrow keys for a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> does raise the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event.</source>
          <target state="translated">但是，按箭头键<ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>会引发<ph id="ph2">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="2807" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>By handling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event for a <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> and setting the <ph id="ph3">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph> property to <ph id="ph4">`true`</ph>, you can raise the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event when the arrow keys are pressed.</source>
          <target state="translated">通过处理<ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph>事件<ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>和设置<ph id="ph3">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph>属性<ph id="ph4">`true`</ph>，你可以将提升<ph id="ph5">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>按箭头键时的事件。</target>       </trans-unit>
        <trans-unit id="2808" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>However, if you handle the arrow keys, the focus will no longer move to the previous or next control.</source>
          <target state="translated">但是，如果处理箭头键，则焦点将无法再移到上一页或下一页控件。</target>       </trans-unit>
        <trans-unit id="2809" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2810" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>The following code example demonstrates a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> that includes a <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>包括<ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2811" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> has the focus and you press the UP ARROW or DOWN ARROW keys, the <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph> appears.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>具有焦点并按向上箭头或向下箭头键中，<ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>显示。</target>       </trans-unit>
        <trans-unit id="2812" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event handler detects when the UP ARROW or DOWN ARROW keys are pressed and sets the <ph id="ph2">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph>事件处理程序检测到按向上键或向下箭头键时，并设置<ph id="ph2">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph>属性<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="2813" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>This raises the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event so that you can display the <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>.</source>
          <target state="translated">这就提高了<ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>事件，以便可以显示<ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2814" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>You should not put any logic in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph> event handler, other than to set the <ph id="ph2">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph> property.</source>
          <target state="translated">你不应该将任何逻辑置于<ph id="ph1">&lt;xref:System.Windows.Forms.Control.PreviewKeyDown&gt;</ph>事件处理程序中，除了要设置<ph id="ph2">&lt;xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="2815" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.PreviewKeyDown">
          <source>Instead, you should put your logic in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event handler.</source>
          <target state="translated">相反，你应该将你的逻辑置于<ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="2816" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the window message to process.</source>
          <target state="translated">通过引用传递的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>，表示要处理的窗口消息。</target>       </trans-unit>
        <trans-unit id="2817" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key to process.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 值之一，表示要处理的键。</target>       </trans-unit>
        <trans-unit id="2818" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Processes a command key.</source>
          <target state="translated">处理命令键。</target>       </trans-unit>
        <trans-unit id="2819" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果字符已由控件处理，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>This method is called during message preprocessing to handle command keys.</source>
          <target state="translated">在消息预处理以处理命令键过程中调用此方法。</target>       </trans-unit>
        <trans-unit id="2821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Command keys are keys that always take precedence over regular input keys.</source>
          <target state="translated">命令键是始终优先于常规输入键的键。</target>       </trans-unit>
        <trans-unit id="2822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Examples of command keys include accelerators and menu shortcuts.</source>
          <target state="translated">命令键的示例包括快捷键和菜单快捷方式。</target>       </trans-unit>
        <trans-unit id="2823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>The method must return <ph id="ph1">`true`</ph> to indicate that it has processed the command key, or <ph id="ph2">`false`</ph> to indicate that the key is not a command key.</source>
          <target state="translated">该方法必须返回<ph id="ph1">`true`</ph>以指示它已处理命令键，或<ph id="ph2">`false`</ph>以指示该密钥不是命令键。</target>       </trans-unit>
        <trans-unit id="2824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</source>
          <target state="translated">仅当控件承载在 Windows 窗体应用程序或作为 ActiveX 控件，才能调用此方法。</target>       </trans-unit>
        <trans-unit id="2825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessCmdKey%2A&gt;</ph> method first determines whether the control has a <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>, and if so, enables the <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> to process the command key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessCmdKey%2A&gt;</ph>方法首先确定控件是否有<ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>，如果是这样，启用和<ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>来处理命令键。</target>       </trans-unit>
        <trans-unit id="2826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>If the command key is not a menu shortcut and the control has a parent, the key is passed to the parent's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessCmdKey%2A&gt;</ph> method.</source>
          <target state="translated">如果命令键不是菜单快捷方式，且该控件有父级，该密钥将传递到父级的<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessCmdKey%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="2827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>The net effect is that command keys are "bubbled" up the control hierarchy.</source>
          <target state="translated">净效果是密钥上的控件层次结构"传"该命令。</target>       </trans-unit>
        <trans-unit id="2828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>In addition to the key the user pressed, the key data also indicates which, if any, modifier keys were pressed at the same time as the key.</source>
          <target state="translated">除了用户按下的键，密钥数据还指示哪些，如果有的话，同时按下修改键作为键的同一时间。</target>       </trans-unit>
        <trans-unit id="2829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Modifier keys include the SHIFT, CTRL, and ALT keys.</source>
          <target state="translated">修改键包括 SHIFT、 CTRL 和 ALT 键。</target>       </trans-unit>
        <trans-unit id="2830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>for the immediate caller and inheriting classes to call this method.</source>
          <target state="translated">直接调用方和继承类来调用此方法。</target>       </trans-unit>
        <trans-unit id="2831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">关联枚举：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /&gt;</ph> method in a derived class, a control should return <ph id="ph2">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the key.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /&gt;</ph>派生类中的方法，控件应返回<ph id="ph2">&lt;see langword="true" /&gt;</ph>以指示它已处理该键。</target>       </trans-unit>
        <trans-unit id="2833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>For keys that are not processed by the control, the result of calling the base class's <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /&gt;</ph> method should be returned.</source>
          <target state="translated">不会处理由控件调用基类的结果的密钥<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /&gt;</ph>方法应返回。</target>       </trans-unit>
        <trans-unit id="2834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Controls will seldom, if ever, need to override this method.</source>
          <target state="translated">控件将很少，如果有，需要重写此方法。</target>       </trans-unit>
        <trans-unit id="2835" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>The character to process.</source>
          <target state="translated">要处理的字符。</target>       </trans-unit>
        <trans-unit id="2836" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>Processes a dialog character.</source>
          <target state="translated">处理对话框字符。</target>       </trans-unit>
        <trans-unit id="2837" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果字符已由控件处理，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>This method is called during message preprocessing to handle dialog characters, such as control mnemonics.</source>
          <target state="translated">在预处理以处理对话框字符，例如控件的助记键的消息过程中调用此方法。</target>       </trans-unit>
        <trans-unit id="2839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>This method is called only if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> method indicates that the control is not processing the character.</source>
          <target state="translated">仅当调用此方法<ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph>方法指示控件未在处理字符。</target>       </trans-unit>
        <trans-unit id="2840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessDialogChar%2A&gt;</ph> method simply sends the character to the parent's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessDialogChar%2A&gt;</ph> method, or returns <ph id="ph3">`false`</ph> if the control has no parent.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessDialogChar%2A&gt;</ph>方法只需将字符发送到父级的<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessDialogChar%2A&gt;</ph>方法或返回<ph id="ph3">`false`</ph>如果控件具有没有父级。</target>       </trans-unit>
        <trans-unit id="2841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class overrides this method to perform actual processing of dialog characters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>类重写此方法以执行实际处理对话框字符。</target>       </trans-unit>
        <trans-unit id="2842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</source>
          <target state="translated">仅当控件承载在 Windows 窗体应用程序或作为 ActiveX 控件，才能调用此方法。</target>       </trans-unit>
        <trans-unit id="2843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">为用于继承类来调用此方法的所有窗口。</target>       </trans-unit>
        <trans-unit id="2844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph>值<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /&gt;</ph> method in a derived class, a control should return <ph id="ph2">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the character.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /&gt;</ph>派生类中的方法，控件应返回<ph id="ph2">&lt;see langword="true" /&gt;</ph>以指示它已处理字符。</target>       </trans-unit>
        <trans-unit id="2846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>For characters that are not processed by the control, the result of calling the base class's <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /&gt;</ph> method should be returned.</source>
          <target state="translated">不会处理由控件调用基类的结果的字符<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /&gt;</ph>方法应返回。</target>       </trans-unit>
        <trans-unit id="2847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
          <source>Controls will seldom, if ever, need to override this method.</source>
          <target state="translated">控件将很少，如果有，需要重写此方法。</target>       </trans-unit>
        <trans-unit id="2848" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key to process.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 值之一，表示要处理的键。</target>       </trans-unit>
        <trans-unit id="2849" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>Processes a dialog key.</source>
          <target state="translated">处理对话框键。</target>       </trans-unit>
        <trans-unit id="2850" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果键已由控件处理，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>This method is called during message preprocessing to handle dialog characters, such as TAB, RETURN, ESC, and arrow keys.</source>
          <target state="translated">消息以处理对话框字符，例如 TAB、 返回、 ESC、 键和箭头键在预处理期间调用此方法。</target>       </trans-unit>
        <trans-unit id="2852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>This method is called only if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method indicates that the control is not processing the key.</source>
          <target state="translated">仅当调用此方法<ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph>方法指示控件未在处理该键。</target>       </trans-unit>
        <trans-unit id="2853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph> simply sends the character to the parent's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph> method, or returns <ph id="ph3">`false`</ph> if the control has no parent.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph>只需将字符发送到父级的<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessDialogKey%2A&gt;</ph>方法或返回<ph id="ph3">`false`</ph>如果控件具有没有父级。</target>       </trans-unit>
        <trans-unit id="2854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class overrides this method to perform actual processing of dialog keys.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>类重写此方法以执行实际处理对话框键。</target>       </trans-unit>
        <trans-unit id="2855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</source>
          <target state="translated">仅当控件承载在 Windows 窗体应用程序或作为 ActiveX 控件，才能调用此方法。</target>       </trans-unit>
        <trans-unit id="2856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">为用于继承类来调用此方法的所有窗口。</target>       </trans-unit>
        <trans-unit id="2857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph>值<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" /&gt;</ph> method in a derived class, a control should return <ph id="ph2">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the key.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" /&gt;</ph>派生类中的方法，控件应返回<ph id="ph2">&lt;see langword="true" /&gt;</ph>以指示它已处理该键。</target>       </trans-unit>
        <trans-unit id="2859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>For keys that are not processed by the control, the result of calling the base class's <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /&gt;</ph> method should be returned.</source>
          <target state="translated">不会处理由控件调用基类的结果的密钥<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /&gt;</ph>方法应返回。</target>       </trans-unit>
        <trans-unit id="2860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>Controls will seldom, if ever, need to override this method.</source>
          <target state="translated">控件将很少，如果有，需要重写此方法。</target>       </trans-unit>
        <trans-unit id="2861" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the window message to process.</source>
          <target state="translated">通过引用传递的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>，表示要处理的窗口消息。</target>       </trans-unit>
        <trans-unit id="2862" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>Processes a key message and generates the appropriate control events.</source>
          <target state="translated">处理键消息并生成适当的控件事件。</target>       </trans-unit>
        <trans-unit id="2863" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果消息已由控件处理，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>This method is called when a control receives a keyboard message.</source>
          <target state="translated">当控件接收键盘消息时调用此方法。</target>       </trans-unit>
        <trans-unit id="2865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>The method is responsible for generating the appropriate key events for the message by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyPress%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnKeyDown%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnKeyUp%2A&gt;</ph> methods.</source>
          <target state="translated">方法负责通过调用生成的消息的相应密钥事件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnKeyPress%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Control.OnKeyDown%2A&gt;</ph>，或<ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnKeyUp%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="2866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">`m`</ph> parameter contains the window message that must be processed.</source>
          <target state="translated"><ph id="ph1">`m`</ph>参数包含必须处理的窗口消息。</target>       </trans-unit>
        <trans-unit id="2867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>Possible values for the <ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, WM_SYSKEYUP, and WM_IME_CHAR.</source>
          <target state="translated">可能的值有<ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph>属性是 WM_CHAR、 WM_KEYDOWN、 WM_SYSKEYDOWN、 WM_KEYUP、 WM_SYSKEYUP 和 WM_IME_CHAR。</target>       </trans-unit>
        <trans-unit id="2868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">为用于继承类来调用此方法的所有窗口。</target>       </trans-unit>
        <trans-unit id="2869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph>值<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">直接调用方调用非托管的代码。</target>       </trans-unit>
        <trans-unit id="2871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="2872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /&gt;</ph> method in a derived class, a control should return <ph id="ph2">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the key.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /&gt;</ph>派生类中的方法，控件应返回<ph id="ph2">&lt;see langword="true" /&gt;</ph>以指示它已处理该键。</target>       </trans-unit>
        <trans-unit id="2873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>For keys that are not processed by the control, the result of calling the base class's <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /&gt;</ph> method should be returned.</source>
          <target state="translated">不会处理由控件调用基类的结果的密钥<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /&gt;</ph>方法应返回。</target>       </trans-unit>
        <trans-unit id="2874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
          <source>Controls will seldom, if ever, need to override this method.</source>
          <target state="translated">控件将很少，如果有，需要重写此方法。</target>       </trans-unit>
        <trans-unit id="2875" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the window message to process.</source>
          <target state="translated">通过引用传递的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>，表示要处理的窗口消息。</target>       </trans-unit>
        <trans-unit id="2876" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>Processes a keyboard message.</source>
          <target state="translated">处理键盘消息。</target>       </trans-unit>
        <trans-unit id="2877" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果消息已由控件处理，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>This method is called when a control receives a keyboard message.</source>
          <target state="translated">当控件接收键盘消息时调用此方法。</target>       </trans-unit>
        <trans-unit id="2879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>The method first determines whether the control has a parent; if so, it calls the parent's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> method.</source>
          <target state="translated">该方法首先确定控件是否有父项;如果是，则调用父级<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="2880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>If the parent's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> method does not process the message then the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A&gt;</ph> method is called to generate the appropriate keyboard events.</source>
          <target state="translated">如果父级<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph>方法不会处理消息则<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A&gt;</ph>调用方法来生成相应的键盘事件。</target>       </trans-unit>
        <trans-unit id="2881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">`m`</ph> parameter contains the window message that must be processed.</source>
          <target state="translated"><ph id="ph1">`m`</ph>参数包含必须处理的窗口消息。</target>       </trans-unit>
        <trans-unit id="2882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>Possible values for the <ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP.</source>
          <target state="translated">可能的值有<ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph>属性是 WM_CHAR、 WM_KEYDOWN、 WM_SYSKEYDOWN、 WM_KEYUP 和 WM_SYSKEYUP。</target>       </trans-unit>
        <trans-unit id="2883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">为用于继承类来调用此方法的所有窗口。</target>       </trans-unit>
        <trans-unit id="2884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph>值<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" /&gt;</ph> method, a control should return <ph id="ph2">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the key.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" /&gt;</ph>方法，控件应返回<ph id="ph2">&lt;see langword="true" /&gt;</ph>以指示它已处理该键。</target>       </trans-unit>
        <trans-unit id="2886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>For keys that are not processed by the control, the result of the base class's <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /&gt;</ph> should be returned.</source>
          <target state="translated">不会处理由控件的基类的结果的密钥<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /&gt;</ph>应返回。</target>       </trans-unit>
        <trans-unit id="2887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
          <source>Controls will seldom, if ever, need to override this method.</source>
          <target state="translated">控件将很少，如果有，需要重写此方法。</target>       </trans-unit>
        <trans-unit id="2888" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the window message to process.</source>
          <target state="translated">通过引用传递的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>，表示要处理的窗口消息。</target>       </trans-unit>
        <trans-unit id="2889" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>Previews a keyboard message.</source>
          <target state="translated">预览键盘消息。</target>       </trans-unit>
        <trans-unit id="2890" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果消息已由控件处理，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>This method is called by a child control when the child control receives a keyboard message.</source>
          <target state="translated">当子控件接收键盘消息时，将由子控件调用此方法。</target>       </trans-unit>
        <trans-unit id="2892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>The child control calls this method before generating any keyboard events for the message.</source>
          <target state="translated">子控件生成消息的任何键盘事件前调用此方法。</target>       </trans-unit>
        <trans-unit id="2893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>If this method returns <ph id="ph1">`true`</ph>, the child control considers the message processed and does not generate any keyboard events.</source>
          <target state="translated">如果此方法返回<ph id="ph1">`true`</ph>，子控件会考虑处理消息并不会生成任何键盘事件。</target>       </trans-unit>
        <trans-unit id="2894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">`m`</ph> parameter contains the window message to preview.</source>
          <target state="translated"><ph id="ph1">`m`</ph>参数包含要预览的窗口消息。</target>       </trans-unit>
        <trans-unit id="2895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>Possible values for the <ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP.</source>
          <target state="translated">可能的值有<ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph>属性是 WM_CHAR、 WM_KEYDOWN、 WM_SYSKEYDOWN、 WM_KEYUP 和 WM_SYSKEYUP。</target>       </trans-unit>
        <trans-unit id="2896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> method simply sends the character to the parent's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph> method, or returns <ph id="ph3">`false`</ph> if the control has no parent.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph>方法只需将字符发送到父级的<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A&gt;</ph>方法或返回<ph id="ph3">`false`</ph>如果控件具有没有父级。</target>       </trans-unit>
        <trans-unit id="2897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class overrides this method to perform actual processing of dialog keys.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>类重写此方法以执行实际处理对话框键。</target>       </trans-unit>
        <trans-unit id="2898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">为用于继承类来调用此方法的所有窗口。</target>       </trans-unit>
        <trans-unit id="2899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph>值<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">直接调用方调用非托管的代码。</target>       </trans-unit>
        <trans-unit id="2901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="2902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /&gt;</ph> method in a derived class, a control should return <ph id="ph2">&lt;see langword="true" /&gt;</ph> to indicate that it has processed the key.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /&gt;</ph>派生类中的方法，控件应返回<ph id="ph2">&lt;see langword="true" /&gt;</ph>以指示它已处理该键。</target>       </trans-unit>
        <trans-unit id="2903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>For keys that are not processed by the control, the result of calling the base class's <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /&gt;</ph> method should be returned.</source>
          <target state="translated">不会处理由控件调用基类的结果的密钥<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /&gt;</ph>方法应返回。</target>       </trans-unit>
        <trans-unit id="2904" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>The character to process.</source>
          <target state="translated">要处理的字符。</target>       </trans-unit>
        <trans-unit id="2905" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>Processes a mnemonic character.</source>
          <target state="translated">处理助记键字符。</target>       </trans-unit>
        <trans-unit id="2906" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character was processed as a mnemonic by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果字符由控件作为助记键处理，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>This method is called to give a control the opportunity to process a mnemonic character.</source>
          <target state="translated">调用此方法以使控件有机会处理助记键字符。</target>       </trans-unit>
        <trans-unit id="2908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>The method should determine whether the control is in a state to process mnemonics and if whether the given character represents a mnemonic.</source>
          <target state="translated">方法应确定控件是否处于处理助记键的状态，以及是否给定的字符是否表示助记键。</target>       </trans-unit>
        <trans-unit id="2909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>If so, the method should perform the action associated with the mnemonic and return <ph id="ph1">`true`</ph>.</source>
          <target state="translated">如果通过因此，此方法应执行与助记键并返回关联的操作<ph id="ph1">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="2910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>If not, the method should return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果不是，该方法应返回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="2911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>Implementations of this method often use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsMnemonic%2A&gt;</ph> method to determine whether the given character matches a mnemonic in the control's text.</source>
          <target state="translated">通常使用此方法的实现<ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsMnemonic%2A&gt;</ph>方法来确定给定的字符是否与助记键在控件的文本相匹配。</target>       </trans-unit>
        <trans-unit id="2912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>For example:</source>
          <target state="translated">例如:</target>       </trans-unit>
        <trans-unit id="2913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>This default implementation of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessMnemonic%2A&gt;</ph> method simply returns <ph id="ph2">`false`</ph> to indicate that the control has no mnemonic.</source>
          <target state="translated">这种默认实现<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessMnemonic%2A&gt;</ph>方法只返回<ph id="ph2">`false`</ph>以指示该控件具有没有助记键。</target>       </trans-unit>
        <trans-unit id="2914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>The following code example demonstrates an extension of the button class that overrides the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessMnemonic%2A&gt;</ph> method to exhibit custom behavior.</source>
          <target state="translated">下面的代码示例演示的按钮类，并重写扩展<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessMnemonic%2A&gt;</ph>方法以显示自定义行为。</target>       </trans-unit>
        <trans-unit id="2915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>The example also demonstrates the use of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CanSelect%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsMnemonic%2A&gt;</ph> properties.</source>
          <target state="translated">该示例还演示了利用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CanSelect%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsMnemonic%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="2916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>To run this example paste the following code after a form class, in the same file.</source>
          <target state="translated">若要运行此示例，请粘贴窗体类，同一文件中后面的以下代码。</target>       </trans-unit>
        <trans-unit id="2917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>Add a button of type <ph id="ph1">`MnemonicButton`</ph> to the form.</source>
          <target state="translated">添加一个按钮类型<ph id="ph1">`MnemonicButton`</ph>到窗体。</target>       </trans-unit>
        <trans-unit id="2918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>for all windows for inheriting classes to call this method.</source>
          <target state="translated">为用于继承类来调用此方法的所有窗口。</target>       </trans-unit>
        <trans-unit id="2919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph>值<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2920" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ProductName">
          <source>Gets the product name of the assembly containing the control.</source>
          <target state="translated">获取包含控件的程序集的产品名称。</target>       </trans-unit>
        <trans-unit id="2921" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>The product name of the assembly containing the control.</source>
          <target state="translated">包含控件的程序集的产品名称。</target>       </trans-unit>
        <trans-unit id="2922" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> property is a read-only property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph>属性是只读的属性。</target>       </trans-unit>
        <trans-unit id="2923" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>To change the value of this property, set the <ph id="ph1">&lt;xref:System.Reflection.AssemblyProductAttribute.Product%2A&gt;</ph> property value of the <ph id="ph2">&lt;xref:System.Reflection.AssemblyProductAttribute&gt;</ph>.</source>
          <target state="translated">若要更改此属性的值，设置<ph id="ph1">&lt;xref:System.Reflection.AssemblyProductAttribute.Product%2A&gt;</ph>属性值<ph id="ph2">&lt;xref:System.Reflection.AssemblyProductAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2924" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>The following line of C# code sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> property.</source>
          <target state="translated">下面的 C# 代码集行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="2925" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>It is strongly recommended that you provide the company name, product name, and product version.</source>
          <target state="translated">强烈建议你提供公司名称、 产品名称和产品版本。</target>       </trans-unit>
        <trans-unit id="2926" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>Providing this information enables the use of Windows Forms features such as <ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType&gt;</ph> that make it easier to write applications that comply with the "Certified for Windows" program.</source>
          <target state="translated">提供此信息启用的 Windows 窗体功能的使用如<ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType&gt;</ph>，使其更轻松地写入应用程序符合"Certified for Windows"程序。</target>       </trans-unit>
        <trans-unit id="2927" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>For more information about the Certified for Windows program, see <ph id="ph1">http://msdn.microsoft.com/certification</ph>.</source>
          <target state="translated">Certified for Windows 程序的详细信息，请参阅<ph id="ph1">http://msdn.microsoft.com/certification</ph>。</target>       </trans-unit>
        <trans-unit id="2928" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>The following code example displays information about the application in a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> contained by a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">下面的代码示例显示有关中的应用程序的信息<ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph>包含<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2929" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductName">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> have been set.</source>
          <target state="translated">此示例需要<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph>，<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph>已设置。</target>       </trans-unit>
        <trans-unit id="2930" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>Gets the version of the assembly containing the control.</source>
          <target state="translated">获取包含控件的程序集的版本。</target>       </trans-unit>
        <trans-unit id="2931" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>The file version of the assembly containing the control.</source>
          <target state="translated">包含控件的程序集的文件版本。</target>       </trans-unit>
        <trans-unit id="2932" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> property is a read-only property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph>属性是只读的属性。</target>       </trans-unit>
        <trans-unit id="2933" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>To change the value of this property, set the <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute.Version%2A&gt;</ph> property value of the <ph id="ph2">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph>.</source>
          <target state="translated">若要更改此属性的值，设置<ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute.Version%2A&gt;</ph>属性值<ph id="ph2">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2934" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>The following line of C# code sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> property.</source>
          <target state="translated">下面的 C# 代码集行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="2935" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>It is strongly recommended that you provide the company name, product name, and product version.</source>
          <target state="translated">强烈建议你提供公司名称、 产品名称和产品版本。</target>       </trans-unit>
        <trans-unit id="2936" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>Providing this information enables the use of Windows Forms features such as <ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType&gt;</ph> that make it easier to write applications that comply with the "Certified for Windows" program.</source>
          <target state="translated">提供此信息启用的 Windows 窗体功能的使用如<ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType&gt;</ph>，使其更轻松地写入应用程序符合"Certified for Windows"程序。</target>       </trans-unit>
        <trans-unit id="2937" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>For more information about the Certified for Windows program, see <ph id="ph1">http://msdn.microsoft.com/certification</ph>.</source>
          <target state="translated">Certified for Windows 程序的详细信息，请参阅<ph id="ph1">http://msdn.microsoft.com/certification</ph>。</target>       </trans-unit>
        <trans-unit id="2938" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>The following code example displays information about the application in a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph> contained by a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">下面的代码示例显示有关中的应用程序的信息<ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph>包含<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2939" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ProductVersion">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph> have been set.</source>
          <target state="translated">此示例需要<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CompanyName%2A&gt;</ph>，<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ProductName%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Control.ProductVersion%2A&gt;</ph>已设置。</target>       </trans-unit>
        <trans-unit id="2940" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.PropagatingImeMode">
          <source>Gets an object that represents a propagating IME mode.</source>
          <target state="translated">获取一个表示传播 IME 模式的对象。</target>       </trans-unit>
        <trans-unit id="2941" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.PropagatingImeMode">
          <source>An object that represents a propagating IME mode.</source>
          <target state="translated">一个表示传播 IME 模式的对象。</target>       </trans-unit>
        <trans-unit id="2942" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>Occurs when <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> is providing help to accessibility applications.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> 为辅助功能应用程序提供帮助时发生。</target>       </trans-unit>
        <trans-unit id="2943" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>You should use the <ph id="ph1">&lt;xref:System.Windows.Forms.HelpProvider&gt;</ph> class to enable users to invoke help on your accessible object by pressing the F1 key.</source>
          <target state="translated">应使用<ph id="ph1">&lt;xref:System.Windows.Forms.HelpProvider&gt;</ph>类以使用户能够通过按 F1 键来调用你可访问的对象的帮助。</target>       </trans-unit>
        <trans-unit id="2944" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>Using the <ph id="ph1">&lt;xref:System.Windows.Forms.HelpProvider&gt;</ph> provides you with complete information in the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.HelpProvider&gt;</ph>中的完整信息为您提供<ph id="ph2">&lt;xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2945" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2946" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>The following code example demonstrates the creation of an accessibility-aware chart control, using the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph> classes to expose accessible information.</source>
          <target state="translated">下面的代码示例演示如何创建一个具有辅助功能的图表控件，并使用<ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlAccessibleObject&gt;</ph>类来公开可访问的信息。</target>       </trans-unit>
        <trans-unit id="2947" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>The control plots two curves along with a legend.</source>
          <target state="translated">该控件绘制图例以及两条曲线。</target>       </trans-unit>
        <trans-unit id="2948" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>The <ph id="ph1">`ChartControlAccessibleObject`</ph> class, which derives from <ph id="ph2">`ControlAccessibleObject`</ph>, is used in the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph> method to provide custom accessible information for the chart control.</source>
          <target state="translated"><ph id="ph1">`ChartControlAccessibleObject`</ph>类，该类派生自<ph id="ph2">`ControlAccessibleObject`</ph>，在使用<ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A&gt;</ph>方法以提供为图表控件的自定义可访问的信息。</target>       </trans-unit>
        <trans-unit id="2949" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>Since the chart legend is not an actual <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> -based control, but instead is drawn by the chart control, it does not any built-in accessible information.</source>
          <target state="translated">因为图表图例不是实际<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>-基于控制，但改为绘制图表控件中，通过它不提供任何内置的可访问信息。</target>       </trans-unit>
        <trans-unit id="2950" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>Because of this, the <ph id="ph1">`ChartControlAccessibleObject`</ph> class overrides the <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleObject.GetChild%2A&gt;</ph> method to return the <ph id="ph3">`CurveLegendAccessibleObject`</ph> that represents accessible information for each part of the legend.</source>
          <target state="translated">因此，<ph id="ph1">`ChartControlAccessibleObject`</ph>类重写<ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleObject.GetChild%2A&gt;</ph>方法以返回<ph id="ph3">`CurveLegendAccessibleObject`</ph>，表示将图例的每个部分的访问信息。</target>       </trans-unit>
        <trans-unit id="2951" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>When an accessible-aware application uses this control, the control can provide the necessary accessible information.</source>
          <target state="translated">当辅助功能的应用程序使用此控件时，该控件可以提供所需的可访问信息。</target>       </trans-unit>
        <trans-unit id="2952" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>This code excerpt demonstrates handling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryAccessibilityHelp&gt;</ph> event.</source>
          <target state="translated">此代码片段演示如何处理<ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryAccessibilityHelp&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="2953" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> class overview for the complete code example.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph>完整的代码示例的类概述。</target>       </trans-unit>
        <trans-unit id="2954" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</source>
          <target state="translated">在拖放操作期间发生，并且允许拖动源确定是否应取消拖放操作。</target>       </trans-unit>
        <trans-unit id="2955" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph>拖放操作期间键盘或鼠标按钮状态更改时引发事件。</target>       </trans-unit>
        <trans-unit id="2956" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph>事件允许拖动源确定是否应取消拖放操作。</target>       </trans-unit>
        <trans-unit id="2957" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The following describes how and when events related to drag-and-drop operations are raised.</source>
          <target state="translated">下面描述与拖放操作相关的事件的引发方式以及引发时间。</target>       </trans-unit>
        <trans-unit id="2958" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method determines the control under the current cursor location.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>方法确定当前光标位置下的控件。</target>       </trans-unit>
        <trans-unit id="2959" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>It then checks to see if the control is a valid drop target.</source>
          <target state="translated">然后检查以确定控件是否有效的放置目标。</target>       </trans-unit>
        <trans-unit id="2960" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the control is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
          <target state="translated">如果控件是有效的放置目标，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>产生指定的拖放效果引发事件。</target>       </trans-unit>
        <trans-unit id="2961" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">有关拖放效果的列表，请参见 <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> 枚举。</target>       </trans-unit>
        <trans-unit id="2962" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</source>
          <target state="translated">跟踪鼠标光标位置、键盘状态和鼠标按钮状态的更改。</target>       </trans-unit>
        <trans-unit id="2963" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">如果用户移出一个窗口，则引发 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2964" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the mouse enters another control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph> for that control is raised.</source>
          <target state="translated">如果鼠标进入另一个控件，则引发该控件的 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragEnter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2965" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the mouse moves but stays within the same control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised.</source>
          <target state="translated">如果鼠标移动但停留在同一个控件中，则引发 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="2966" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
          <target state="translated">如果键盘或鼠标按钮状态，更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph>事件引发，并确定是否继续拖动、 放置数据或取消该操作基于值<ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph>属性的事件的<ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2967" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Continue`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph>是<ph id="ph2">`Continue`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>引发事件以继续操作和<ph id="ph4">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>产生新效果引发事件，从而能够设置适当的视觉反馈。</target>       </trans-unit>
        <trans-unit id="2968" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
          <target state="translated">有关有效放置效果的列表，请参见 <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> 枚举。</target>       </trans-unit>
        <trans-unit id="2969" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>事件成对发生，以便当鼠标移到放置目标时，用户提供的最新反馈有关鼠标位置。</target>       </trans-unit>
        <trans-unit id="2970" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph>是<ph id="ph2">`Drop`</ph>、 向源返回放置效果值，以便源应用程序可以执行适当的操作的源数据; 例如，如果会剪切数据是移动操作。</target>       </trans-unit>
        <trans-unit id="2971" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Cancel`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph> event is raised.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph>是<ph id="ph2">`Cancel`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.DragLeave&gt;</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="2972" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>By default, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event sets <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> to <ph id="ph3">`Cancel`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> if the ESC key was pressed and sets <ph id="ph5">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> to <ph id="ph6">`Drop`</ph> in <ph id="ph7">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> if the left, middle, or right mouse button is pressed.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph>事件集<ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph>到<ph id="ph3">`Cancel`</ph>中<ph id="ph4">&lt;xref:System.Windows.Forms.DragAction&gt;</ph>曾按下 ESC 键，并设置<ph id="ph5">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph>到<ph id="ph6">`Drop`</ph>中<ph id="ph7">&lt;xref:System.Windows.Forms.DragAction&gt;</ph>如果按左、 中间，或向右鼠标按钮。</target>       </trans-unit>
        <trans-unit id="2973" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="2974" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The following code example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">下面的代码示例演示两个之间拖放操作<ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="2975" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">该示例通过调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>方法的拖放操作启动时。</target>       </trans-unit>
        <trans-unit id="2976" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">如果鼠标已移动的拖放操作启动多个<ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph>从期间的鼠标位置<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="2977" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph>方法用于确定要在将拖动的项的索引<ph id="ph2">`MouseDown`</ph>事件。</target>       </trans-unit>
        <trans-unit id="2978" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">该示例还演示如何使用自定义光标拖放操作。</target>       </trans-unit>
        <trans-unit id="2979" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The example requires that two cursor files,<ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">该示例需要两个光标文件<ph id="ph1">`3dwarro.cur`</ph>和<ph id="ph2">`3dwno.cur`</ph>、 存在于应用程序目录，用于自定义拖动和非放置光标，分别。</target>       </trans-unit>
        <trans-unit id="2980" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">如果将使用自定义光标<ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph>已选中。</target>       </trans-unit>
        <trans-unit id="2981" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">自定义光标设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="2982" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">键盘状态评估中<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>事件处理程序右侧<ph id="ph2">`ListBox`</ph>，以确定将哪些拖动操作基于 SHIFT、 CTRL、 ALT 和 CTRL + ALT 键的状态。</target>       </trans-unit>
        <trans-unit id="2983" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">中的位置<ph id="ph1">`ListBox`</ph>期间还确定将发生放置<ph id="ph2">`DragOver`</ph>事件。</target>       </trans-unit>
        <trans-unit id="2984" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">`None`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>.</source>
          <target state="translated">如果要删除的数据不是<ph id="ph1">`String`</ph>，则<ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph>设置为<ph id="ph3">`None`</ph>中<ph id="ph4">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2985" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">最后，下拉的状态将显示在<ph id="ph1">`DropLocationLabel`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2986" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">要为权限放置的数据<ph id="ph1">`ListBox`</ph>中确定<ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph>事件处理程序和<ph id="ph3">`String`</ph>值添加中的适当位置<ph id="ph4">`ListBox`</ph>。</target>       </trans-unit>
        <trans-unit id="2987" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">如果在拖动操作超出边界的窗体中，则采用取消拖放操作<ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="2988" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event.</source>
          <target state="translated">此代码片段演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="2989" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.QueryContinueDrag">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>完整的代码示例的方法。</target>       </trans-unit>
        <trans-unit id="2990" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)">
          <source>The event to raise.</source>
          <target state="translated">要引发的事件。</target>       </trans-unit>
        <trans-unit id="2991" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2992" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)">
          <source>Raises the appropriate drag event.</source>
          <target state="translated">引发适当的拖动事件。</target>       </trans-unit>
        <trans-unit id="2993" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)">
          <source>The event to raise.</source>
          <target state="translated">要引发的事件。</target>       </trans-unit>
        <trans-unit id="2994" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2995" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)">
          <source>Raises the appropriate key event.</source>
          <target state="translated">引发适当的键事件。</target>       </trans-unit>
        <trans-unit id="2996" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)">
          <source>The event to raise.</source>
          <target state="translated">要引发的事件。</target>       </trans-unit>
        <trans-unit id="2997" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2998" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)">
          <source>Raises the appropriate mouse event.</source>
          <target state="translated">引发适当的鼠标事件。</target>       </trans-unit>
        <trans-unit id="2999" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)">
          <source>The event to raise.</source>
          <target state="translated">要引发的事件。</target>       </trans-unit>
        <trans-unit id="3000" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3001" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)">
          <source>Raises the appropriate paint event.</source>
          <target state="translated">引发适当的绘画事件。</target>       </trans-unit>
        <trans-unit id="3002" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RecreateHandle">
          <source>Forces the re-creation of the handle for the control.</source>
          <target state="translated">强制为控件重新创建句柄。</target>       </trans-unit>
        <trans-unit id="3003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RecreateHandle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method is called whenever parameters are needed for a new control, but using a call from <ph id="ph2">&lt;xref:System.Windows.Forms.Control.UpdateStyles%2A&gt;</ph> to <ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> is insufficient.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph>每当参数都需要用于新控件，就会调用方法，但使用调用从<ph id="ph2">&lt;xref:System.Windows.Forms.Control.UpdateStyles%2A&gt;</ph>到<ph id="ph3">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph>是不够的。</target>       </trans-unit>
        <trans-unit id="3004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RecreateHandle">
          <source>This method also calls <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DestroyHandle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph> and sets <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreatingHandle%2A&gt;</ph> to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">此方法也会调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DestroyHandle%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.CreateHandle%2A&gt;</ph>和设置<ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreatingHandle%2A&gt;</ph>到<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="3005" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.RecreatingHandle">
          <source>Gets a value indicating whether the control is currently re-creating its handle.</source>
          <target state="translated">获取一个值，该值指示控件当前是否在重新创建其句柄。</target>       </trans-unit>
        <trans-unit id="3006" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RecreatingHandle">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control is currently re-creating its handle; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控件当前在重新创建其句柄，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3007" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RecreatingHandle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreatingHandle%2A&gt;</ph> property returns <ph id="ph2">`true`</ph> if the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method is still running on the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.RecreatingHandle%2A&gt;</ph>属性返回<ph id="ph2">`true`</ph>如果<ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph>方法仍在运行在控件上。</target>       </trans-unit>
        <trans-unit id="3008" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)">
          <source>The screen coordinate <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> to convert.</source>
          <target state="translated">要转换的屏幕坐标 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3009" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)">
          <source>Computes the size and location of the specified screen rectangle in client coordinates.</source>
          <target state="translated">计算指定屏幕矩形的大小和位置（以工作区坐标表示）。</target>       </trans-unit>
        <trans-unit id="3010" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the converted <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>, <ph id="ph3">&lt;paramref name="r" /&gt;</ph>, in client coordinates.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>，表示转换后的 <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>、<ph id="ph3">&lt;paramref name="r" /&gt;</ph>（以工作区坐标表示）。</target>       </trans-unit>
        <trans-unit id="3011" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)">
          <source>The client coordinate <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> to convert.</source>
          <target state="translated">要转换的客户端坐标 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3012" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)">
          <source>Computes the size and location of the specified client rectangle in screen coordinates.</source>
          <target state="translated">计算指定工作区矩形的大小和位置（以屏幕坐标表示）。</target>       </trans-unit>
        <trans-unit id="3013" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the converted <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>, <ph id="ph3">&lt;paramref name="p" /&gt;</ph>, in screen coordinates.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>，表示转换后的 <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>、<ph id="ph3">&lt;paramref name="p" /&gt;</ph>（以屏幕坐标表示）。</target>       </trans-unit>
        <trans-unit id="3014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RectangleToScreen%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToScreen%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseButtons%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph6">&lt;xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType&gt;</ph> members.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RectangleToScreen%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.PointToScreen%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.MouseButtons%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType&gt;</ph>，和<ph id="ph6">&lt;xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType&gt;</ph>成员。</target>       </trans-unit>
        <trans-unit id="3015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)">
          <source>To run the example, paste the following code in a form called <bpt id="p1">**</bpt>Form1<ept id="p1">**</ept> containing several controls.</source>
          <target state="translated">若要运行该示例，请将以下代码粘贴在窗体调用<bpt id="p1">**</bpt>Form1<ept id="p1">**</ept>包含多个控件。</target>       </trans-unit>
        <trans-unit id="3016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> events are connected to the event handlers defined in the example.</source>
          <target state="translated">此示例需要<ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph>，和<ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>事件连接到示例中定义的事件处理程序。</target>       </trans-unit>
        <trans-unit id="3017" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> representing the handle of the control to reflect the message to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> 表示要反射消息的控件句柄。</target>       </trans-unit>
        <trans-unit id="3018" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> representing the Windows message to reflect.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> 表示要反射的 Windows 消息。</target>       </trans-unit>
        <trans-unit id="3019" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>Reflects the specified message to the control that is bound to the specified handle.</source>
          <target state="translated">向绑定到指定句柄的控件反映指定消息。</target>       </trans-unit>
        <trans-unit id="3020" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was reflected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已反映消息，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ReflectMessage%2A&gt;</ph> method is an infrastructure method and typically should not be called from your code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.ReflectMessage%2A&gt;</ph>方法是一个基础结构方法，通常不应调用在代码中。</target>       </trans-unit>
        <trans-unit id="3022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>If the <ph id="ph1">`hWnd`</ph> parameter does not represent a valid control, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ReflectMessage%2A&gt;</ph> method returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`hWnd`</ph>参数不表示有效的控制，<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ReflectMessage%2A&gt;</ph>方法返回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="3023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>Because Windows messages are returned to the top-level window, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ReflectMessage%2A&gt;</ph> method is used to propagate the return message to the control that sent the message.</source>
          <target state="translated">因为 Windows 消息返回给顶级窗口，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ReflectMessage%2A&gt;</ph>方法用于传播到发送消息的控件返回的消息。</target>       </trans-unit>
        <trans-unit id="3024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>for all windows to call this method.</source>
          <target state="translated">为所有窗口，才能调用此方法。</target>       </trans-unit>
        <trans-unit id="3025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph>值<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3026" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Refresh">
          <source>Forces the control to invalidate its client area and immediately redraw itself and any child controls.</source>
          <target state="translated">强制控件使其工作区无效并立即重绘自己和任何子控件。</target>       </trans-unit>
        <trans-unit id="3027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Refresh">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.Refresh" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.Refresh" /&gt;</ph> method so the control and its child controls are invalidated and redrawn.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.Refresh" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.Refresh" /&gt;</ph>方法，以便失效并在重绘控件及其子控件。</target>       </trans-unit>
        <trans-unit id="3028" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Region">
          <source>Gets or sets the window region associated with the control.</source>
          <target state="translated">获取或设置与控件关联的窗口区域。</target>       </trans-unit>
        <trans-unit id="3029" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>The window <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> associated with the control.</source>
          <target state="translated">与控件关联的窗口 <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3030" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>The window region is a collection of pixels within the window where the operating system permits drawing.</source>
          <target state="translated">窗口区域是操作系统允许其中进行绘画的窗口中的像素为单位的集合。</target>       </trans-unit>
        <trans-unit id="3031" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>The operating system does not display any portion of a window that lies outside of the window region.</source>
          <target state="translated">操作系统不显示窗口位于外部的窗口区域的任何部分。</target>       </trans-unit>
        <trans-unit id="3032" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>The coordinates of a control's region are relative to the upper-left corner of the control, not the client area of the control.</source>
          <target state="translated">控件的坐标是区域的相对于控件不控件的客户端区域的左上角。</target>       </trans-unit>
        <trans-unit id="3033" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>The collection of pixels contained with the region can be noncontiguous.</source>
          <target state="translated">包含与区域的像素集合可以是不连续的。</target>       </trans-unit>
        <trans-unit id="3034" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Region%2A&gt;</ph> property by creating a round button.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Region%2A&gt;</ph>通过创建圆形按钮的属性。</target>       </trans-unit>
        <trans-unit id="3035" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>To run the example, paste the following code in a form containing a button called <ph id="ph1">`roundButton`</ph>.</source>
          <target state="translated">若要运行该示例，请将以下代码粘贴在窗体包含一个按钮称为<ph id="ph1">`roundButton`</ph>。</target>       </trans-unit>
        <trans-unit id="3036" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event is connected to the event handler defined in the example.</source>
          <target state="translated">此示例需要<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件连接到示例中定义的事件处理程序。</target>       </trans-unit>
        <trans-unit id="3037" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>for all windows to set this property value.</source>
          <target state="translated">若要设置此属性的值的所有窗口。</target>       </trans-unit>
        <trans-unit id="3038" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Region">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3039" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Region" /&gt;</ph> property changes.</source>
          <target state="translated">当 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Region" /&gt;</ph> 属性的值更改时发生。</target>       </trans-unit>
        <trans-unit id="3040" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="3041" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="3042" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RegionChanged&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Control.RegionChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="3043" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="3044" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3045" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3046" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RegionChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RegionChanged&gt;</ph> event.</source>
          <target state="translated">然后将其命名实例<ph id="ph1">`Control1`</ph>并确保与事件处理程序<ph id="ph2">&lt;xref:System.Windows.Forms.Control.RegionChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="3047" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.RenderRightToLeft">
          <source>This property is now obsolete.</source>
          <target state="translated">此属性现已过时。</target>       </trans-unit>
        <trans-unit id="3048" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RenderRightToLeft">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control is rendered from right to left; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控件从右向左呈现，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3049" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RenderRightToLeft">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3050" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)">
          <source>The DPI value prior to the change.</source>
          <target state="translated">更改前的 DPI 值。</target>       </trans-unit>
        <trans-unit id="3051" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)">
          <source>The DPI value after the change.</source>
          <target state="translated">更改后的 DPI 值。</target>       </trans-unit>
        <trans-unit id="3052" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)">
          <source>Provides constants for rescaling the control when a DPI change occurs.</source>
          <target state="translated">发生 DPI 更改时，提供用于重新缩放控件的常数。</target>       </trans-unit>
        <trans-unit id="3053" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetBackColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> property to its default value.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.BackColor" /&gt;</ph> 属性重置为其默认值。</target>       </trans-unit>
        <trans-unit id="3054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetBackColor">
          <source>This method is not relevant for this class.</source>
          <target state="translated">此方法与此类无关。</target>       </trans-unit>
        <trans-unit id="3055" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetBindings">
          <source>Causes a control bound to the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingSource" /&gt;</ph> to reread all the items in the list and refresh their displayed values.</source>
          <target state="translated">使绑定到 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingSource" /&gt;</ph> 的控件重新读取列表中的所有项，并刷新这些项的显示值。</target>       </trans-unit>
        <trans-unit id="3056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetBindings">
          <source>This method is not relevant for this class.</source>
          <target state="translated">此方法与此类无关。</target>       </trans-unit>
        <trans-unit id="3057" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetCursor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> property to its default value.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Cursor" /&gt;</ph> 属性重置为其默认值。</target>       </trans-unit>
        <trans-unit id="3058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetCursor">
          <source>This method is not relevant for this class.</source>
          <target state="translated">此方法与此类无关。</target>       </trans-unit>
        <trans-unit id="3059" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetFont">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> property to its default value.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Font" /&gt;</ph> 属性重置为其默认值。</target>       </trans-unit>
        <trans-unit id="3060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetFont">
          <source>This method is not relevant for this class.</source>
          <target state="translated">此方法与此类无关。</target>       </trans-unit>
        <trans-unit id="3061" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetForeColor">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> property to its default value.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ForeColor" /&gt;</ph> 属性重置为其默认值。</target>       </trans-unit>
        <trans-unit id="3062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetForeColor">
          <source>This method is not relevant for this class.</source>
          <target state="translated">此方法与此类无关。</target>       </trans-unit>
        <trans-unit id="3063" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetImeMode">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> property to its default value.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> 属性重置为其默认值。</target>       </trans-unit>
        <trans-unit id="3064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetImeMode">
          <source>This method is not relevant for this class.</source>
          <target state="translated">此方法与此类无关。</target>       </trans-unit>
        <trans-unit id="3065" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetMouseEventArgs">
          <source>Resets the control to handle the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseLeave" /&gt;</ph> event.</source>
          <target state="translated">重置控件以处理 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseLeave" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="3066" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetRightToLeft">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> property to its default value.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> 属性重置为其默认值。</target>       </trans-unit>
        <trans-unit id="3067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetRightToLeft">
          <source>This method is not relevant for this class.</source>
          <target state="translated">此方法与此类无关。</target>       </trans-unit>
        <trans-unit id="3068" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResetText">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> property to its default value (<ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>).</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> 属性重置为其默认值 (<ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="3069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResetText">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>.</source>
          <target state="translated">如果你创建的设计器通常使用此方法<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>或创建你自己的控件、 包含<ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3070" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Resize">
          <source>Occurs when the control is resized.</source>
          <target state="translated">在调整控件大小时发生。</target>       </trans-unit>
        <trans-unit id="3071" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Resize">
          <source>To determine the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the resized control, you can cast the <ph id="ph2">`sender`</ph> parameter of the registered <ph id="ph3">&lt;xref:System.Windows.Forms.ControlEventHandler&gt;</ph> method  to a <ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph> and get its <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property (or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> properties individually).</source>
          <target state="translated">若要确定<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>的调整大小的控件，可以强制转换<ph id="ph2">`sender`</ph>参数的已注册<ph id="ph3">&lt;xref:System.Windows.Forms.ControlEventHandler&gt;</ph>方法<ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph>并获取其<ph id="ph5">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>属性 (或<ph id="ph6">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>和<ph id="ph7">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>属性单独）。</target>       </trans-unit>
        <trans-unit id="3072" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Resize">
          <source>To handle custom layouts, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event instead of the Resize event.</source>
          <target state="translated">若要处理自定义布局，使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph>而不是调整大小事件的事件。</target>       </trans-unit>
        <trans-unit id="3073" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Resize">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is raised in response to a <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event, but also in response to other changes that affect the layout of the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph>在响应中引发事件<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph>事件，但还会在响应其他影响控件的布局更改。</target>       </trans-unit>
        <trans-unit id="3074" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Resize">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="3075" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Resize">
          <source>The following code example handles the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event of a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">下面的代码示例处理<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph>事件<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3076" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Resize">
          <source>When the form is resized, the event handler ensures that the form stays square (its <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> remain equal).</source>
          <target state="translated">调整窗体的大小时，事件处理程序可确保该窗体停留正方形 (其<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>保持相等)。</target>       </trans-unit>
        <trans-unit id="3077" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Resize">
          <source>To run this example, make sure and associate this event-handling method with the form’s <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event.</source>
          <target state="translated">若要运行此示例，请确保，并将此事件处理方法关联处理该窗体<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="3078" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ResizeRedraw">
          <source>Gets or sets a value indicating whether the control redraws itself when resized.</source>
          <target state="translated">获取或设置一个值，该值指示控件在调整大小时是否重绘自己。</target>       </trans-unit>
        <trans-unit id="3079" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ResizeRedraw">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control redraws itself when resized; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控件在调整大小时重绘自己，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3080" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ResizeRedraw">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResizeRedraw%2A&gt;</ph> property value is equivalent to the return value of the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetStyle%2A&gt;</ph> method when passing in the <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles.ResizeRedraw?displayProperty=nameWithType&gt;</ph> value as a parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResizeRedraw%2A&gt;</ph>属性值等于的返回值<ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetStyle%2A&gt;</ph>方法中传递时<ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles.ResizeRedraw?displayProperty=nameWithType&gt;</ph>作为参数的值。</target>       </trans-unit>
        <trans-unit id="3081" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Resumes the usual layout logic.</source>
          <target state="translated">恢复正常的布局逻辑。</target>       </trans-unit>
        <trans-unit id="3082" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResumeLayout">
          <source>Resumes usual layout logic.</source>
          <target state="translated">恢复正常的布局逻辑。</target>       </trans-unit>
        <trans-unit id="3083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method forces an immediate layout if there are any pending layout requests.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph>方法强制立即进行布局，如果有任何挂起的布局请求。</target>       </trans-unit>
        <trans-unit id="3084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> methods are used in tandem to suppress multiple <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> events while you adjust multiple attributes of the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph>方法相继配合使用以禁止显示多个<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph>事件时调整控件的多个属性。</target>       </trans-unit>
        <trans-unit id="3085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout">
          <source>For example, you would typically call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method, then set the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> properties of the control, and then call the <ph id="ph6">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method to enable the changes to take effect.</source>
          <target state="translated">例如，你通常应该调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph>方法，然后设置<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>，或<ph id="ph5">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph>属性的控件，，然后调用<ph id="ph6">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph>方法，以使更改生效。</target>       </trans-unit>
        <trans-unit id="3086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout">
          <source>There must be no pending calls to <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> for <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> to be successfully called.</source>
          <target state="translated">必须有没有挂起的调用到<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph>为<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph>成功调用。</target>       </trans-unit>
        <trans-unit id="3087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout">
          <source>The following code example adds two buttons to a form.</source>
          <target state="translated">下面的代码示例将两个按钮添加到窗体。</target>       </trans-unit>
        <trans-unit id="3088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout">
          <source>The example transactions the addition of the buttons by using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> methods.</source>
          <target state="translated">示例事务使用按钮添加<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="3089" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to execute pending layout requests; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要执行挂起的布局请求，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3090" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>Resumes usual layout logic, optionally forcing an immediate layout of pending layout requests.</source>
          <target state="translated">恢复正常的布局逻辑，可以选择强制对挂起的布局请求立即进行布局。</target>       </trans-unit>
        <trans-unit id="3091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method forces an immediate layout if there are any pending layout requests.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph>方法强制立即进行布局，如果有任何挂起的布局请求。</target>       </trans-unit>
        <trans-unit id="3092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>When the <ph id="ph1">`performLayout`</ph> parameter is set to <ph id="ph2">`true`</ph>, an immediate layout occurs if there are any pending layout requests.</source>
          <target state="translated">当<ph id="ph1">`performLayout`</ph>参数设置为<ph id="ph2">`true`</ph>，如果有任何挂起的布局请求，则会发生对立即进行布局。</target>       </trans-unit>
        <trans-unit id="3093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> methods are used in tandem to suppress multiple <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> events while you adjust multiple attributes of the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph>方法相继配合使用以禁止显示多个<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph>事件时调整控件的多个属性。</target>       </trans-unit>
        <trans-unit id="3094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>For example, you would typically call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method, then set the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> properties of the control, and then call the <ph id="ph6">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method to enable the changes to take effect.</source>
          <target state="translated">例如，你通常应该调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph>方法，然后设置<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>，或<ph id="ph5">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph>属性的控件，，然后调用<ph id="ph6">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph>方法，以使更改生效。</target>       </trans-unit>
        <trans-unit id="3095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>There must be no pending calls to <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> for <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> to be successfully called.</source>
          <target state="translated">必须有没有挂起的调用到<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph>为<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph>成功调用。</target>       </trans-unit>
        <trans-unit id="3096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>When adding several controls to a parent control, it is recommended that you call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method before initializing the controls to be added.</source>
          <target state="translated">在多个控件添加到父控件时，建议您调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph>方法之前初始化要添加的控件。</target>       </trans-unit>
        <trans-unit id="3097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>After adding the controls to the parent control, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method.</source>
          <target state="translated">在将控件添加到父控件之后, 调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="3098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
          <source>This will increase the performance of applications with many controls.</source>
          <target state="translated">这将增加有许多控件的应用程序的性能。</target>       </trans-unit>
        <trans-unit id="3099" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Right">
          <source>Gets the distance, in pixels, between the right edge of the control and the left edge of its container's client area.</source>
          <target state="translated">获取控件右边缘与其容器的工作区左边缘之间的距离（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="3100" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Right">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> representing the distance, in pixels, between the right edge of the control and the left edge of its container's client area.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 表示控件右边缘与其容器的工作区左边缘之间的距离（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="3101" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Right">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> property is equal to the sum of the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> property value and the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> property value.</source>
          <target state="translated">值<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph>属性等于的总和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>属性值和<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>属性值。</target>       </trans-unit>
        <trans-unit id="3102" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Right">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> property is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> 属性为只读。</target>       </trans-unit>
        <trans-unit id="3103" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Right">
          <source>You can change this property value indirectly by changing the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> properties or calling the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetBounds%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.UpdateBounds%2A&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> methods.</source>
          <target state="translated">你可以通过更改的值间接更改此属性的值<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>属性或调用<ph id="ph3">&lt;xref:System.Windows.Forms.Control.SetBounds%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Control.UpdateBounds%2A&gt;</ph>，或<ph id="ph6">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="3104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Right">
          <source>The following code example creates three <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls on a form and sets their size and location by using the various size-related and location-related properties.</source>
          <target state="translated">下面的代码示例创建三个<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>窗体上控件并通过使用各种大小相关以及与位置相关属性中设置其大小和位置。</target>       </trans-unit>
        <trans-unit id="3105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Right">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that has a width and height of at least 300 pixels.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>，其宽度和高度至少 300 像素。</target>       </trans-unit>
        <trans-unit id="3106" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.</source>
          <target state="translated">获取或设置一个值，该值指示是否将控件的元素对齐以支持使用从右向左的字体的区域设置。</target>       </trans-unit>
        <trans-unit id="3107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.RightToLeft" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.RightToLeft" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="3108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.RightToLeft.Inherit" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.RightToLeft.Inherit" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property is an ambient property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>属性是一个环境属性。</target>       </trans-unit>
        <trans-unit id="3110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>An ambient property is a control property that, if not set, is retrieved from the parent control.</source>
          <target state="translated">环境属性是控件属性，如果未设置，从父控件检索。</target>       </trans-unit>
        <trans-unit id="3111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>都不具有相同<ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>作为其父<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>默认情况下。</target>       </trans-unit>
        <trans-unit id="3112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>For more information about ambient properties, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.</source>
          <target state="translated">有关环境属性的详细信息，请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph>类或<ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>类概述。</target>       </trans-unit>
        <trans-unit id="3113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property is used for international applications where the language is written from right to left, such as Hebrew or Arabic.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>属性用于国际应用程序语言从右到左，例如希伯来语或阿拉伯语写入的位置。</target>       </trans-unit>
        <trans-unit id="3114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>When this property is set to <ph id="ph1">&lt;xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType&gt;</ph>, control elements that include text are displayed from right to left.</source>
          <target state="translated">当此属性设置为<ph id="ph1">&lt;xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType&gt;</ph>，从右到左显示包含文本的控件元素。</target>       </trans-unit>
        <trans-unit id="3115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>If the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property is changed at run time, only raw text without formatting is preserved.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>在运行时更改属性，仅对不带格式的原始文本时保留。</target>       </trans-unit>
        <trans-unit id="3116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>The following are a few examples of how control elements are affected by the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType&gt;</ph> :</source>
          <target state="translated">以下是一些示例的控件元素如何受<ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>属性值<ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="3117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>Vertical scroll bars are displayed on the left side rather than right side of scrollable controls (for example, <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph>, multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>).</source>
          <target state="translated">垂直滚动条显示在左边而不是可滚动控件的右侧 (例如， <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph>、 多行<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>，和<ph id="ph4">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="3118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>Horizontal scroll bars start with the scroll box (thumb) right-aligned.</source>
          <target state="translated">水平滚动条的初始滚动框 （缩略图） 右对齐。</target>       </trans-unit>
        <trans-unit id="3119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>The check box element alignment, controlled by the <ph id="ph1">`CheckAlign`</ph> property, is reversed for <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> controls.</source>
          <target state="translated">复选框元素对齐方式，由控制<ph id="ph1">`CheckAlign`</ph>属性，将反转以进行<ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="3120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>Items in list box, combo box, and up-down controls are right aligned.</source>
          <target state="translated">右对齐列表框、 组合框和 up-down 控件中的项。</target>       </trans-unit>
        <trans-unit id="3121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>Up and down buttons are left-aligned on <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DomainUpDown&gt;</ph> controls.</source>
          <target state="translated">向上和向下按钮为上的左对齐<ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.DomainUpDown&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="3122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>Menus (<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>) are displayed right-aligned.</source>
          <target state="translated">菜单 (<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>，和<ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>) 右对齐显示。</target>       </trans-unit>
        <trans-unit id="3123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>The alignment of toolbar buttons on a <ph id="ph1">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> control or the alignment of text on a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolBarButton&gt;</ph> is not affected by the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property.</source>
          <target state="translated">上的工具栏按钮的对齐方式<ph id="ph1">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph>控件或上文本的对齐方式<ph id="ph2">&lt;xref:System.Windows.Forms.ToolBarButton&gt;</ph>不受<ph id="ph3">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="3124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> supports right-to-left alignment; however, the effect on an ActiveX control depends on the extent to which the control author implemented support for right-to-left display.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> 支持从右到左对齐方式;但是，对 ActiveX 控件的影响取决于向其控件作者实现对从右到左显示支持的范围。</target>       </trans-unit>
        <trans-unit id="3125" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>The assigned value is not one of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.RightToLeft" /&gt;</ph> values.</source>
          <target state="translated">分配的值不是 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.RightToLeft" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="3126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph>属性在派生类中，使用基类的<ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph>属性来扩展的基实现。</target>       </trans-unit>
        <trans-unit id="3127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">否则，你必须提供所有实现。</target>       </trans-unit>
        <trans-unit id="3128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.RightToLeft">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">你无需重写二者，<ph id="ph1">&lt;see langword="get" /&gt;</ph>和<ph id="ph2">&lt;see langword="set" /&gt;</ph>访问器<ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph>属性; 你可以根据需要重写只有一个。</target>       </trans-unit>
        <trans-unit id="3129" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> property value changes.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.RightToLeft" /&gt;</ph> 属性值更改时发生。</target>       </trans-unit>
        <trans-unit id="3130" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">如果将引发此事件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>通过以编程方式修改或用户交互更改属性。</target>       </trans-unit>
        <trans-unit id="3131" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="3132" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>The following code example is an event handler that is executed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property value changes.</source>
          <target state="translated">下面的代码示例是一个事件处理程序时执行<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性值更改。</target>       </trans-unit>
        <trans-unit id="3133" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class has several methods with the name pattern <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph2">`Changed`</ph> that are raised when the corresponding <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> value changes (<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept> represents the name of the corresponding property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类的一些方法的名称模式具有<bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept> <ph id="ph2">`Changed`</ph>都时引发相应<bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept>值发生更改 (<bpt id="p3">*</bpt>PropertyName<ept id="p3">*</ept>表示对应的属性的名称)。</target>       </trans-unit>
        <trans-unit id="3134" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>显示货币数据。</target>       </trans-unit>
        <trans-unit id="3135" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="3136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.RightToLeftChanged">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>包含<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3137" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Converts the current alignment to the appropriate alignment to support right-to-left text.</source>
          <target state="translated">将当前对齐方式转换为适当的对齐方式以支持从右向左的文本。</target>       </trans-unit>
        <trans-unit id="3138" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="3139" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> to the appropriate <ph id="ph2">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> to support right-to-left text.</source>
          <target state="translated">将指定的 <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> 转换为相应的 <ph id="ph2">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> 以支持从右向左的文本。</target>       </trans-unit>
        <trans-unit id="3140" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="3141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id="ph3">`No`</ph>, the return value is equal to the <ph id="ph4">`align`</ph> parameter passed in.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph>设置为<ph id="ph3">`No`</ph>，返回的值是否等于<ph id="ph4">`align`</ph>参数中传递。</target>       </trans-unit>
        <trans-unit id="3142" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="3143" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> to the appropriate <ph id="ph2">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> to support right-to-left text.</source>
          <target state="translated">将指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> 转换为相应的 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> 以支持从右向左的文本。</target>       </trans-unit>
        <trans-unit id="3144" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="3145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id="ph3">`No`</ph>, the return value is equal to the <ph id="ph4">`align`</ph> parameter passed in.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph>设置为<ph id="ph3">`No`</ph>，返回的值是否等于<ph id="ph4">`align`</ph>参数中传递。</target>       </trans-unit>
        <trans-unit id="3146" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="3147" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> to the appropriate <ph id="ph2">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> to support right-to-left text.</source>
          <target state="translated">将指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> 转换为相应的 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> 以支持从右向左的文本。</target>       </trans-unit>
        <trans-unit id="3148" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="3149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id="ph3">`No`</ph>, the return value is equal to the <ph id="ph4">`align`</ph> parameter passed in.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph>设置为<ph id="ph3">`No`</ph>，返回的值是否等于<ph id="ph4">`align`</ph>参数中传递。</target>       </trans-unit>
        <trans-unit id="3150" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="3151" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> to the appropriate <ph id="ph2">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> to support right-to-left text.</source>
          <target state="translated">将指定的 <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> 转换为相应的 <ph id="ph2">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> 以支持从右向左的文本。</target>       </trans-unit>
        <trans-unit id="3152" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="3153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id="ph3">`No`</ph>, the return value is equal to the <ph id="ph4">`align`</ph> parameter passed in.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph>设置为<ph id="ph3">`No`</ph>，返回的值是否等于<ph id="ph4">`align`</ph>参数中传递。</target>       </trans-unit>
        <trans-unit id="3154" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="3155" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> to the appropriate <ph id="ph2">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> to support right-to-left text.</source>
          <target state="translated">将指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> 转换为相应的 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> 以支持从右向左的文本。</target>       </trans-unit>
        <trans-unit id="3156" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.HorizontalAlignment" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="3157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id="ph3">`No`</ph>, the return value is equal to the <ph id="ph4">`align`</ph> parameter passed in.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph>设置为<ph id="ph3">`No`</ph>，返回的值是否等于<ph id="ph4">`align`</ph>参数中传递。</target>       </trans-unit>
        <trans-unit id="3158" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="3159" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> to the appropriate <ph id="ph2">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> to support right-to-left text.</source>
          <target state="translated">将指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> 转换为相应的 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> 以支持从右向左的文本。</target>       </trans-unit>
        <trans-unit id="3160" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.LeftRightAlignment" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="3161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> is set to <ph id="ph3">`No`</ph>, the return value is equal to the <ph id="ph4">`align`</ph> parameter passed in.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph>设置为<ph id="ph3">`No`</ph>，返回的值是否等于<ph id="ph4">`align`</ph>参数中传递。</target>       </trans-unit>
        <trans-unit id="3162" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Scales the control and any child controls.</source>
          <target state="translated">缩放控件和任何子控件。</target>       </trans-unit>
        <trans-unit id="3163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> containing the horizontal and vertical scaling factors.</source>
          <target state="translated">一个包含水平和垂直比例因子的 <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3164" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)">
          <source>Scales the control and all child controls by the specified scaling factor.</source>
          <target state="translated">按指定的比例因子缩放控件和所有子控件。</target>       </trans-unit>
        <trans-unit id="3165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Scale%2A&gt;</ph> method scales the control by the specified scaling <ph id="ph2">`factor`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Scale%2A&gt;</ph>方法按指定的比例缩放控件<ph id="ph2">`factor`</ph>。</target>       </trans-unit>
        <trans-unit id="3166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)">
          <source>It also recursively scales all child controls if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">它还以递归方式将所有子控件，如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph>属性是<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="3167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)">
          <source>Internally, this method calls <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> to scale each control.</source>
          <target state="translated">此方法在内部调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph>缩放每个控件。</target>       </trans-unit>
        <trans-unit id="3168" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Scale(System.Single)">
          <source>The ratio to use for scaling.</source>
          <target state="translated">要用于缩放的比例。</target>       </trans-unit>
        <trans-unit id="3169" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Scale(System.Single)">
          <source>Scales the control and any child controls.</source>
          <target state="translated">缩放控件和任何子控件。</target>       </trans-unit>
        <trans-unit id="3170" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Scale(System.Single,System.Single)">
          <source>The horizontal scaling factor.</source>
          <target state="translated">水平比例因子。</target>       </trans-unit>
        <trans-unit id="3171" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Scale(System.Single,System.Single)">
          <source>The vertical scaling factor.</source>
          <target state="translated">垂直比例因子。</target>       </trans-unit>
        <trans-unit id="3172" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Scale(System.Single,System.Single)">
          <source>Scales the entire control and any child controls.</source>
          <target state="translated">缩放整个控件和任何子控件。</target>       </trans-unit>
        <trans-unit id="3173" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)">
          <source>The bitmap to scale.</source>
          <target state="translated">要缩放的位图。</target>       </trans-unit>
        <trans-unit id="3174" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)">
          <source>Scales a logical bitmap value to it's equivalent device unit value when a DPI change occurs.</source>
          <target state="translated">发生 DPI 更改时，可以将逻辑位图值缩放到其等效设备单元值。</target>       </trans-unit>
        <trans-unit id="3175" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ScaleChildren">
          <source>Gets a value that determines the scaling of child controls.</source>
          <target state="translated">获取一个值，该值确定子控件的缩放。</target>       </trans-unit>
        <trans-unit id="3176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ScaleChildren">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if child controls will be scaled when the <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.Scale(System.Single)" /&gt;</ph> method on this control is called; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果在调用该控件上的 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 方法时将缩放子控件，则为 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.Scale(System.Single)" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ScaleChildren">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ScaleChildren">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, then the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Scale%2A&gt;</ph> method will recursively call the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph> method of each of its child controls.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph>属性是<ph id="ph2">`true`</ph>，则<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Scale%2A&gt;</ph>方法将以递归方式调用<ph id="ph4">&lt;xref:System.Windows.Forms.Control.ScaleControl%2A&gt;</ph>的各个子控件的方法。</target>       </trans-unit>
        <trans-unit id="3179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ScaleChildren">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> always returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">默认实现<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph>始终返回<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="3180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ScaleChildren">
          <source>Derived classes can override <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph> to return <ph id="ph2">`false`</ph> to indicate that scaling should not be performed on their children.</source>
          <target state="translated">派生的类可以重写<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ScaleChildren%2A&gt;</ph>返回<ph id="ph2">`false`</ph>以指示，缩放不应执行在其子控件上。</target>       </trans-unit>
        <trans-unit id="3181" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>The factor by which the height and width of the control will be scaled.</source>
          <target state="translated">控件高度和宽度的缩放因子。</target>       </trans-unit>
        <trans-unit id="3182" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> value that specifies the bounds of the control to use when defining its size and position.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> 值，指定在定义控件的大小和位置时要使用的控件边界。</target>       </trans-unit>
        <trans-unit id="3183" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>Scales a control's location, size, padding and margin.</source>
          <target state="translated">缩放控件的位置、大小、空白和边距。</target>       </trans-unit>
        <trans-unit id="3184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>If the control is top level, this will not scale the control's location.</source>
          <target state="translated">如果控件为顶级，此操作将不缩放控件的位置。</target>       </trans-unit>
        <trans-unit id="3185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>This does not scale children or the size of automatically sized controls.</source>
          <target state="translated">这样做可伸缩性的子级或自动调整大小的控件的大小。</target>       </trans-unit>
        <trans-unit id="3186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>You can omit scaling in any direction by changing the value of the <ph id="ph1">`specified`</ph> parameter.</source>
          <target state="translated">你可以忽略任何方向的缩放通过更改的值<ph id="ph1">`specified`</ph>参数。</target>       </trans-unit>
        <trans-unit id="3187" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)">
          <source>The horizontal scaling factor.</source>
          <target state="translated">水平比例因子。</target>       </trans-unit>
        <trans-unit id="3188" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)">
          <source>The vertical scaling factor.</source>
          <target state="translated">垂直比例因子。</target>       </trans-unit>
        <trans-unit id="3189" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)">
          <source>This method is not relevant for this class.</source>
          <target state="translated">此方法与此类无关。</target>       </trans-unit>
        <trans-unit id="3190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)">
          <source>This method is not relevant for this class.</source>
          <target state="translated">此方法与此类无关。</target>       </trans-unit>
        <trans-unit id="3191" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Activates a control.</source>
          <target state="translated">激活控件。</target>       </trans-unit>
        <trans-unit id="3192" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Select">
          <source>Activates the control.</source>
          <target state="translated">激活控件。</target>       </trans-unit>
        <trans-unit id="3193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> method activates the control if the control's <ph id="ph2">`Selectable`</ph> style bit is set to <ph id="ph3">`true`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>, it is contained in another control, and all its parent controls are both visible and enabled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph>方法激活的控件，如果控件的<ph id="ph2">`Selectable`</ph>样式位设置为<ph id="ph3">`true`</ph>中<ph id="ph4">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>，该列包含在另一个控件中，并且所有其父控件是否可见且已启用。</target>       </trans-unit>
        <trans-unit id="3194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select">
          <source>The Windows Forms controls in the following list are not selectable.</source>
          <target state="translated">以下列表中的 Windows 窗体控件不是可选的。</target>       </trans-unit>
        <trans-unit id="3195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select">
          <source>Controls derived from controls in the list will also not be selectable.</source>
          <target state="translated">从列表中的控件派生的控件将还不能选择。</target>       </trans-unit>
        <trans-unit id="3196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (when there is no link present in the control)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> （当不存在控件中的链接）</target>       </trans-unit>
        <trans-unit id="3197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select">
          <source>The following code example selects the specified <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, if it is selectable.</source>
          <target state="translated">下面的代码示例选择指定<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如果它是可选择。</target>       </trans-unit>
        <trans-unit id="3198" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify the direction of the control to select; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定要选择的控件的方向，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3199" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to move forward in the tab order; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to move backward in the tab order.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 则在 Tab 键顺序中前移；如果为 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 则在 Tab 键顺序中后移。</target>       </trans-unit>
        <trans-unit id="3200" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>Activates a child control.</source>
          <target state="translated">激活子控件。</target>       </trans-unit>
        <trans-unit id="3201" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>Optionally specifies the direction in the tab order to select the control from.</source>
          <target state="translated">还可以指定从中选择控件的 Tab 键顺序的方向。</target>       </trans-unit>
        <trans-unit id="3202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">`directed`</ph> and <ph id="ph2">`forward`</ph> parameters are used by container-style controls.</source>
          <target state="translated"><ph id="ph1">`directed`</ph>和<ph id="ph2">`forward`</ph>参数由容器风格的控件。</target>       </trans-unit>
        <trans-unit id="3203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>When the <ph id="ph1">`directed`</ph> parameter is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">`forward`</ph> parameter is evaluated to determine which control to select.</source>
          <target state="translated">当<ph id="ph1">`directed`</ph>参数设置为<ph id="ph2">`true`</ph>、<ph id="ph3">`forward`</ph>参数进行计算以确定哪个控件进行选择。</target>       </trans-unit>
        <trans-unit id="3204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>When <ph id="ph1">`forward`</ph> is set to <ph id="ph2">`true`</ph>, the next control in the tab order is selected; when <ph id="ph3">`false`</ph>, the previous control in the tab order is selected.</source>
          <target state="translated">当<ph id="ph1">`forward`</ph>设置为<ph id="ph2">`true`</ph>，则在 tab 键顺序中的下一步控件被选定; 时<ph id="ph3">`false`</ph>，选择上一个控件的 tab 键顺序。</target>       </trans-unit>
        <trans-unit id="3205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> method activates the control if the control's <ph id="ph2">`Selectable`</ph> style bit is set to <ph id="ph3">`true`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>, it is contained in another control, and all its parent controls are both visible and enabled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph>方法激活的控件，如果控件的<ph id="ph2">`Selectable`</ph>样式位设置为<ph id="ph3">`true`</ph>中<ph id="ph4">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>，该列包含在另一个控件中，并且所有其父控件是否可见且已启用。</target>       </trans-unit>
        <trans-unit id="3206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>The Windows Forms controls in the following list are not selectable.</source>
          <target state="translated">以下列表中的 Windows 窗体控件不是可选的。</target>       </trans-unit>
        <trans-unit id="3207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source>Controls derived from controls in the list will also not be selectable.</source>
          <target state="translated">从列表中的控件派生的控件将还不能选择。</target>       </trans-unit>
        <trans-unit id="3208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (when there is no link present in the control)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> （当不存在控件中的链接）</target>       </trans-unit>
        <trans-unit id="3209" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> at which to start the search.</source>
          <target state="translated">从其上开始搜索的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3210" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to move forward in the tab order; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to move backward in the tab order.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 则在 Tab 键顺序中前移；如果为 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 则在 Tab 键顺序中后移。</target>       </trans-unit>
        <trans-unit id="3211" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the controls with the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.TabStop" /&gt;</ph> property set to <ph id="ph3">&lt;see langword="false" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示忽略 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.TabStop" /&gt;</ph> 属性设置为 <ph id="ph3">&lt;see langword="false" /&gt;</ph> 的控件；<ph id="ph4">&lt;see langword="false" /&gt;</ph> 表示不忽略。</target>       </trans-unit>
        <trans-unit id="3212" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include nested (children of child controls) child controls; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示包括嵌套子控件（子控件的子级）；<ph id="ph2">&lt;see langword="false" /&gt;</ph> 表示不包括。</target>       </trans-unit>
        <trans-unit id="3213" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to continue searching from the first control in the tab order after the last control has been reached; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示在到达最后一个控件之后从 Tab 键顺序中第一个控件开始继续搜索；<ph id="ph2">&lt;see langword="false" /&gt;</ph> 表示不继续搜索。</target>       </trans-unit>
        <trans-unit id="3214" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>Activates the next control.</source>
          <target state="translated">激活下一个控件。</target>       </trans-unit>
        <trans-unit id="3215" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a control was activated; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控件已激活，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> method activates the next control in the tab order if the control's <ph id="ph2">`Selectable`</ph> style bit is set to <ph id="ph3">`true`</ph> in <ph id="ph4">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>, it is contained in another control, and all its parent controls are both visible and enabled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph>方法激活的 tab 键顺序的下一个控件，如果控件的<ph id="ph2">`Selectable`</ph>样式位设置为<ph id="ph3">`true`</ph>中<ph id="ph4">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>，该列包含在另一个控件中，并且所有其父控件是否可见且已启用。</target>       </trans-unit>
        <trans-unit id="3217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>The Windows Forms controls in the following list are not selectable.</source>
          <target state="translated">以下列表中的 Windows 窗体控件不是可选的。</target>       </trans-unit>
        <trans-unit id="3218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>Controls derived from controls in the list will also not be selectable.</source>
          <target state="translated">从列表中的控件派生的控件将还不能选择。</target>       </trans-unit>
        <trans-unit id="3219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> (when there is no link present in the control)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.LinkLabel&gt;</ph> （当不存在控件中的链接）</target>       </trans-unit>
        <trans-unit id="3220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> property to the current form, focus events occur in the following order:</source>
          <target state="translated">当你通过使用键盘 （选项卡上，按 SHIFT + TAB 等），通过调用更改焦点<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph>方法，或通过设置<ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph>到当前窗体的属性，将按以下顺序发生焦点事件：</target>       </trans-unit>
        <trans-unit id="3221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph>属性设置为<ph id="ph2">`false`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>和<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph>事件将被抑制。</target>       </trans-unit>
        <trans-unit id="3222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>The following code exampleshows the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> method being used in a form that has some controls.</source>
          <target state="translated">下面的代码 exampleshows<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph>具有某些控件的窗体中正在使用的方法。</target>       </trans-unit>
        <trans-unit id="3223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>Each time that you click the form, the next control is activated.</source>
          <target state="translated">单击窗体中，每次激活下一个控件。</target>       </trans-unit>
        <trans-unit id="3224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> property gets the currently active control in the container control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph>属性获取容器控件中当前处于活动状态的控件。</target>       </trans-unit>
        <trans-unit id="3225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>The following code example shows the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> method being used in a form that has a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> and some other controls.</source>
          <target state="translated">下面的代码示例演示<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph>方法正在使用在窗体具有<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>和一些其他控件。</target>       </trans-unit>
        <trans-unit id="3226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>When you click the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>, the next control after the <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> is activated.</source>
          <target state="translated">当你单击<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>之后, 的下一个控件<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>激活。</target>       </trans-unit>
        <trans-unit id="3227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>Notice that you have to get the parent of the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control.</source>
          <target state="translated">注意到，您要获取其父类的<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="3228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <source>Since <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> is not a container, calling <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> directly on the <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> would not change the activation.</source>
          <target state="translated">由于<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>不是一个容器，调用<ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph>直接基于<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>可能不会更改激活。</target>       </trans-unit>
        <trans-unit id="3229" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SendToBack">
          <source>Sends the control to the back of the z-order.</source>
          <target state="translated">将控件发送到 Z 顺序的后面。</target>       </trans-unit>
        <trans-unit id="3230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SendToBack">
          <source>The control is moved to the back of the z-order.</source>
          <target state="translated">将控件移到 z 顺序的后面。</target>       </trans-unit>
        <trans-unit id="3231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SendToBack">
          <source>If the control is a child of another control, the child control is moved to the back of the z-order.</source>
          <target state="translated">如果控件是另一个控件的子级，移动子控件的 z 顺序的底层到。</target>       </trans-unit>
        <trans-unit id="3232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SendToBack">
          <source>If the control is a top-level control, this method will not work correctly unless the control is active.</source>
          <target state="translated">如果该控件为顶级控件，此方法将无法正常工作，除非该控件处于活动状态。</target>       </trans-unit>
        <trans-unit id="3233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SendToBack">
          <source>A top-level control is a control, such as a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, that is not a child of another control.</source>
          <target state="translated">顶级控件是一个控件，如<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>，即不子级的另一个控件。</target>       </trans-unit>
        <trans-unit id="3234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SendToBack">
          <source>An active control is a visible control that has input focus.</source>
          <target state="translated">活动控件是具有输入焦点一个可见控件。</target>       </trans-unit>
        <trans-unit id="3235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SendToBack">
          <source>To use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SendToBack%2A&gt;</ph> method with an inactive, top-level control, first call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> method on the control.</source>
          <target state="translated">若要使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SendToBack%2A&gt;</ph>方法包含活动的顶级控件，首先调用<ph id="ph2">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph>在控件上的方法。</target>       </trans-unit>
        <trans-unit id="3236" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="3237" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)">
          <source>Sets a value indicating how a control will behave when its <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.AutoSize" /&gt;</ph> property is enabled.</source>
          <target state="translated">设置一个值，该值指示当启用控件的 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.AutoSize" /&gt;</ph> 属性时控件的行为方式。</target>       </trans-unit>
        <trans-unit id="3238" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Sets the bounds of the control.</source>
          <target state="translated">设置控件的边界。</target>       </trans-unit>
        <trans-unit id="3239" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property value of the control.</source>
          <target state="translated">控件的新 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> 属性值。</target>       </trans-unit>
        <trans-unit id="3240" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property value of the control.</source>
          <target state="translated">控件的新 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> 属性值。</target>       </trans-unit>
        <trans-unit id="3241" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property value of the control.</source>
          <target state="translated">控件的新 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> 属性值。</target>       </trans-unit>
        <trans-unit id="3242" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> property value of the control.</source>
          <target state="translated">控件的新 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> 属性值。</target>       </trans-unit>
        <trans-unit id="3243" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Sets the bounds of the control to the specified location and size.</source>
          <target state="translated">将控件的边界设置为指定位置和大小。</target>       </trans-unit>
        <trans-unit id="3244" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property value of the control.</source>
          <target state="translated">控件的新 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> 属性值。</target>       </trans-unit>
        <trans-unit id="3245" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property value of the control.</source>
          <target state="translated">控件的新 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> 属性值。</target>       </trans-unit>
        <trans-unit id="3246" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property value of the control.</source>
          <target state="translated">控件的新 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> 属性值。</target>       </trans-unit>
        <trans-unit id="3247" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> property value of the control.</source>
          <target state="translated">控件的新 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> 属性值。</target>       </trans-unit>
        <trans-unit id="3248" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> 值的按位组合。</target>       </trans-unit>
        <trans-unit id="3249" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>For any parameter not specified, the current value will be used.</source>
          <target state="translated">对于任何未指定的参数，将使用当前值。</target>       </trans-unit>
        <trans-unit id="3250" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Sets the specified bounds of the control to the specified location and size.</source>
          <target state="translated">将控件的指定边界设置为指定位置和大小。</target>       </trans-unit>
        <trans-unit id="3251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The following code example centers a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> on the screen in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event.</source>
          <target state="translated">下面的代码示例中心<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>在的屏幕中<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="3252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>This will keep the form centered as the user resizes it.</source>
          <target state="translated">这将保留表单居中当用户调整其大小时。</target>       </trans-unit>
        <trans-unit id="3253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>This example requires that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> control.</source>
          <target state="translated">此示例需要你已创建了<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="3254" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property value of the control.</source>
          <target state="translated">控件的新 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> 属性值。</target>       </trans-unit>
        <trans-unit id="3255" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property value of the control.</source>
          <target state="translated">控件的新 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> 属性值。</target>       </trans-unit>
        <trans-unit id="3256" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property value of the control.</source>
          <target state="translated">控件的新 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> 属性值。</target>       </trans-unit>
        <trans-unit id="3257" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> property value of the control.</source>
          <target state="translated">控件的新 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> 属性值。</target>       </trans-unit>
        <trans-unit id="3258" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> 值的按位组合。</target>       </trans-unit>
        <trans-unit id="3259" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Performs the work of setting the specified bounds of this control.</source>
          <target state="translated">执行设置该控件的指定边界的工作。</target>       </trans-unit>
        <trans-unit id="3260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Typically, the parameters that correspond to the bounds not included in the <ph id="ph1">`specified`</ph> parameter are passed in with their current values.</source>
          <target state="translated">通常情况下，对应于中未包括的边界的参数<ph id="ph1">`specified`</ph>参数将传递使用其当前值。</target>       </trans-unit>
        <trans-unit id="3261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>For example, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>, or the <ph id="ph3">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> properties of the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property can be passed in with a reference to the current instance of the control.</source>
          <target state="translated">例如， <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>，或<ph id="ph3">&lt;xref:System.Drawing.Point.X%2A&gt;</ph>或<ph id="ph4">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph>属性<ph id="ph5">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>可以随对控件的当前实例的引用传递属性。</target>       </trans-unit>
        <trans-unit id="3262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>However all values passed in are honored and applied to the control.</source>
          <target state="translated">但是遵守并应用于控件中传递的所有值。</target>       </trans-unit>
        <trans-unit id="3263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The <ph id="ph1">`boundsSpecified`</ph> parameter represents the elements of the controls <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> changed by your application.</source>
          <target state="translated"><ph id="ph1">`boundsSpecified`</ph>参数表示元素的控件<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph>更改你的应用程序。</target>       </trans-unit>
        <trans-unit id="3264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>For example, if you change the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the control, the <ph id="ph2">`boundsSpecified`</ph> parameter value is the <ph id="ph3">`Size`</ph> value of <ph id="ph4">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>.</source>
          <target state="translated">例如，如果你更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>的控件，<ph id="ph2">`boundsSpecified`</ph>参数值是<ph id="ph3">`Size`</ph>值<ph id="ph4">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>However, if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> is adjusted in response to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> property being set, the <ph id="ph3">`boundsSpecified`</ph> parameter value is the <ph id="ph4">`None`</ph> value of <ph id="ph5">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>.</source>
          <target state="translated">但是，如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>在响应中调整<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph>要设置属性<ph id="ph3">`boundsSpecified`</ph>参数值是<ph id="ph4">`None`</ph>值<ph id="ph5">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>On Windows Server 2003 systems, the size of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> is restricted by the maximum pixel width and height of the monitor.</source>
          <target state="translated">在 Windows Server 2003 系统中的大小<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>受到的最大像素宽度和高度的监视器。</target>       </trans-unit>
        <trans-unit id="3267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The following code example overrides the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph> method to ensure that the control remains a fixed size.</source>
          <target state="translated">下面的代码示例替代<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A&gt;</ph>方法，以确保控件保持固定的大小。</target>       </trans-unit>
        <trans-unit id="3268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>This example requires that you have a class that is either directly or indirectly derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有直接或间接派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="3269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> method to force the bounds of the control to change.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph>方法，以强制要更改的控件的边界。</target>       </trans-unit>
        <trans-unit id="3270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Derived classes can add size restrictions to the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> method.</source>
          <target state="translated">派生的类可以添加到的大小限制<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="3271" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>The client area width, in pixels.</source>
          <target state="translated">工作区宽度（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="3272" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>The client area height, in pixels.</source>
          <target state="translated">工作区高度（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="3273" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>Sets the size of the client area of the control.</source>
          <target state="translated">设置控件的工作区的大小。</target>       </trans-unit>
        <trans-unit id="3274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>The client area starts at the (0, 0) location and extends to the (<ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>) location.</source>
          <target state="translated">工作区开始 （0，0） 位置和延伸到 (<ph id="ph1">`x`</ph>， <ph id="ph2">`y`</ph>) 位置。</target>       </trans-unit>
        <trans-unit id="3275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>Typically, you should not set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph> of the control.</source>
          <target state="translated">通常情况下，不应设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ClientSize%2A&gt;</ph>的控件。</target>       </trans-unit>
        <trans-unit id="3276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>The following code example overrides the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph> method to ensure that the control remains square.</source>
          <target state="translated">下面的代码示例替代<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetClientSizeCore%2A&gt;</ph>方法，以确保控件保持正方形。</target>       </trans-unit>
        <trans-unit id="3277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>This example requires that you have a class that is either directly or indirectly derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class.</source>
          <target state="translated">此示例要求你拥有直接或间接派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="3278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /&gt;</ph> method so that the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.ClientSize" /&gt;</ph> property is adjusted.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /&gt;</ph>方法，以便<ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.ClientSize" /&gt;</ph>调整属性。</target>       </trans-unit>
        <trans-unit id="3279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
          <source>For more information about drawing on controls, see <bpt id="p1">[</bpt>Rendering a Windows Forms Control<ept id="p1">](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)</ept>.</source>
          <target state="translated">在控件上绘制的详细信息，请参阅<bpt id="p1">[</bpt>呈现 Windows 窗体控件<ept id="p1">](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)</ept>。</target>       </trans-unit>
        <trans-unit id="3280" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> bit to set.</source>
          <target state="translated">要设置的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> 位。</target>       </trans-unit>
        <trans-unit id="3281" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to apply the specified style to the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示将指定的样式应用于控件；<ph id="ph2">&lt;see langword="false" /&gt;</ph> 表示不应用。</target>       </trans-unit>
        <trans-unit id="3282" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>Sets a specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> flag to either <ph id="ph2">&lt;see langword="true" /&gt;</ph> or <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">将指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ControlStyles" /&gt;</ph> 标志设置为 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 或 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>Control style bit flags are used to categorize supported behavior.</source>
          <target state="translated">控件样式位标志可用于进行分类支持的行为。</target>       </trans-unit>
        <trans-unit id="3284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>A control can enable a style by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method and passing in the appropriate <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit (or bits) and the Boolean value to set the bit(s) to.</source>
          <target state="translated">控件可以通过调用来启用一种样式<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph>方法并传入适当<ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>位 （或 bits） 和要设置该位的布尔值。</target>       </trans-unit>
        <trans-unit id="3285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>To determine the value assigned to a specified <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit, use the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetStyle%2A&gt;</ph> method and pass in the <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> member to evaluate.</source>
          <target state="translated">若要确定分配给指定的值<ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>位，请使用<ph id="ph2">&lt;xref:System.Windows.Forms.Control.GetStyle%2A&gt;</ph>方法并传入<ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>要计算的成员。</target>       </trans-unit>
        <trans-unit id="3286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>Setting the control style bits can substantially change the behavior of the control.</source>
          <target state="translated">设置控件样式位大体上可以更改控件的行为。</target>       </trans-unit>
        <trans-unit id="3287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>Review the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> enumeration documentation to understand the effects of changing the control style bits before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method.</source>
          <target state="translated">查看<ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>枚举文档以了解更改之前调用的控件样式位的效果<ph id="ph2">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="3288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
          <source>The following code example enables double-buffering on a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and updates the styles to reflect the changes.</source>
          <target state="translated">下面的代码示例启用双缓冲上<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>并更新以反映所做的更改的样式。</target>       </trans-unit>
        <trans-unit id="3289" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to set the control as the top-level control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示将控件设置为顶级控件；<ph id="ph2">&lt;see langword="false" /&gt;</ph> 表示不作此设置。</target>       </trans-unit>
        <trans-unit id="3290" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source>Sets the control as the top-level control.</source>
          <target state="translated">将控件设置为顶级控件。</target>       </trans-unit>
        <trans-unit id="3291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetTopLevel%2A&gt;</ph> method of a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> and pass in a value of <ph id="ph3">`false`</ph>, the form will not be visible until you call <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SetTopLevel%2A&gt;</ph> again, passing in a value of <ph id="ph5">`true`</ph>.</source>
          <target state="translated">如果调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SetTopLevel%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>和传入的值<ph id="ph3">`false`</ph>，窗体在您调用之前将不可见<ph id="ph4">&lt;xref:System.Windows.Forms.Control.SetTopLevel%2A&gt;</ph>再次，传递的值就是<ph id="ph5">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="3292" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph> and the control is an ActiveX control.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数被设置为 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 且控件是 ActiveX 控件。</target>       </trans-unit>
        <trans-unit id="3293" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.GetTopLevel" /&gt;</ph> return value is not equal to the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter and the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Parent" /&gt;</ph> property is not <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.GetTopLevel" /&gt;</ph> 返回值不等于 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 参数且 <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Parent" /&gt;</ph> 属性不为 <ph id="ph4">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source>to set the control as a top-level control if it is of any type other than <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>.</source>
          <target state="translated">若要将控件设置为顶级控件，如果它是任何类型，而不<ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source>This permission is only demanded if the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="true" /&gt;</ph> and the control is not an ActiveX control.</source>
          <target state="translated">如果仅需要此权限<ph id="ph1">&lt;paramref name="value" /&gt;</ph>参数是<ph id="ph2">&lt;see langword="true" /&gt;</ph>该控件不是 ActiveX 控件。</target>       </trans-unit>
        <trans-unit id="3296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>.</source>
          <target state="translated">关联的枚举：<ph id="ph1">&lt;see langword="AllWindows" /&gt;</ph>值<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3297" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to make the control visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示使控件可见；<ph id="ph2">&lt;see langword="false" /&gt;</ph> 表示使控件不可见。</target>       </trans-unit>
        <trans-unit id="3298" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)">
          <source>Sets the control to the specified visible state.</source>
          <target state="translated">将控件设置为指定的可见状态。</target>       </trans-unit>
        <trans-unit id="3299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)">
          <source>You would typically override this method to change the visibility behavior of the control.</source>
          <target state="translated">通常将重写此方法可以更改控件的可见性行为。</target>       </trans-unit>
        <trans-unit id="3300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /&gt;</ph> method to force the visibility of the control to change.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /&gt;</ph>方法，以强制要更改的控件的可见性。</target>       </trans-unit>
        <trans-unit id="3301" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Show">
          <source>Displays the control to the user.</source>
          <target state="translated">向用户显示控件。</target>       </trans-unit>
        <trans-unit id="3302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Show">
          <source>Showing the control is equivalent to setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">显示控件等效于设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph>属性<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="3303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Show">
          <source>After the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property returns a value of <ph id="ph3">`true`</ph> until the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> method is called.</source>
          <target state="translated">后<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph>调用方法时，<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph>属性返回的值<ph id="ph3">`true`</ph>直到<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph>调用方法。</target>       </trans-unit>
        <trans-unit id="3304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Show">
          <source>The following code example displays an about dialog box and temporarily draws a blue square on its surface.</source>
          <target state="translated">下面的代码示例显示有关对话框中和暂时其图面上绘制的蓝色正方形。</target>       </trans-unit>
        <trans-unit id="3305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Show">
          <source>This example requires that you have defined a class that derives from <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`AboutDialog`</ph>.</source>
          <target state="translated">此示例需要您已经定义了派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名为<ph id="ph2">`AboutDialog`</ph>。</target>       </trans-unit>
        <trans-unit id="3306" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ShowFocusCues">
          <source>Gets a value indicating whether the control should display focus rectangles.</source>
          <target state="translated">获取一个值，该值指示控件是否应显示聚焦框。</target>       </trans-unit>
        <trans-unit id="3307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ShowFocusCues">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control should display focus rectangles; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控件应显示聚焦框，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ShowFocusCues">
          <source>For more information about this feature, see the<bpt id="p1">[</bpt>WM_CHANGEUISTATE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx)</ept>,<bpt id="p2">[</bpt>WM_QUERYUISTATE<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx)</ept>, and the <bpt id="p3">[</bpt>WM_UPDATEUISTATE<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx)</ept>topics.</source>
          <target state="translated">有关此功能的详细信息，请参阅<bpt id="p1">[</bpt>WM_CHANGEUISTATE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx)</ept>，<bpt id="p2">[</bpt>WM_QUERYUISTATE<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx)</ept>，和<bpt id="p3">[</bpt>WM_UPDATEUISTATE<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx)</ept>主题。</target>       </trans-unit>
        <trans-unit id="3309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ShowFocusCues">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ShowFocusCues" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ShowFocusCues" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ShowFocusCues" /&gt;</ph>属性在派生类中，使用基类的<ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.ShowFocusCues" /&gt;</ph>属性来扩展的基实现。</target>       </trans-unit>
        <trans-unit id="3310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ShowFocusCues">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">否则，你必须提供所有实现。</target>       </trans-unit>
        <trans-unit id="3311" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.ShowKeyboardCues">
          <source>Gets a value indicating whether the user interface is in the appropriate state to show or hide keyboard accelerators.</source>
          <target state="translated">获取一个值，该值指示用户界面是否处于适当的状态以显示或隐藏键盘快捷键。</target>       </trans-unit>
        <trans-unit id="3312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ShowKeyboardCues">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the keyboard accelerators are visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果键盘快捷键可见，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ShowKeyboardCues">
          <source>In controls created in the Windows Forms designer, keyboard accelerators are visible by default.</source>
          <target state="translated">在 Windows 窗体设计器中创建的控件，键盘快捷键是默认情况下可见的。</target>       </trans-unit>
        <trans-unit id="3314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.ShowKeyboardCues">
          <source>For more information about this feature, see the<bpt id="p1">[</bpt>WM_CHANGEUISTATE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx)</ept>,<bpt id="p2">[</bpt>WM_QUERYUISTATE<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx)</ept>, and the <bpt id="p3">[</bpt>WM_UPDATEUISTATE<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx)</ept>topics.</source>
          <target state="translated">有关此功能的详细信息，请参阅<bpt id="p1">[</bpt>WM_CHANGEUISTATE<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx)</ept>，<bpt id="p2">[</bpt>WM_QUERYUISTATE<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx)</ept>，和<bpt id="p3">[</bpt>WM_UPDATEUISTATE<ept id="p3">](http://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx)</ept>主题。</target>       </trans-unit>
        <trans-unit id="3315" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Site">
          <source>Gets or sets the site of the control.</source>
          <target state="translated">获取或设置控件的站点。</target>       </trans-unit>
        <trans-unit id="3316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Site">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>, if any.</source>
          <target state="translated">与 <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> 关联的 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>（如果有）。</target>       </trans-unit>
        <trans-unit id="3317" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Size">
          <source>Gets or sets the height and width of the control.</source>
          <target state="translated">获取或设置控件的高度和宽度。</target>       </trans-unit>
        <trans-unit id="3318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the height and width of the control in pixels.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>，表示控件的高度和宽度（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="3319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>Because the <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> class is a value type (<ph id="ph2">`Structure`</ph> in Visual Basic, <ph id="ph3">`struct`</ph> in Visual C#), it is returned by value, meaning accessing the property returns a copy of the size of the control.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph>类是值类型 (<ph id="ph2">`Structure`</ph>在 Visual Basic 中， <ph id="ph3">`struct`</ph> Visual C# 中)，它返回的值，这意味着访问该属性返回的控件的大小副本。</target>       </trans-unit>
        <trans-unit id="3320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>So, adjusting the <ph id="ph1">&lt;xref:System.Drawing.Size.Width%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Drawing.Size.Height%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Drawing.Size&gt;</ph> returned from this property will not affect the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> of the control.</source>
          <target state="translated">因此，调整<ph id="ph1">&lt;xref:System.Drawing.Size.Width%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Drawing.Size.Height%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Drawing.Size&gt;</ph>返回此属性将不会影响<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>或<ph id="ph5">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>的控件。</target>       </trans-unit>
        <trans-unit id="3321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>To adjust the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> of the control, you must set the control's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> property, or set the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property with a new <ph id="ph6">&lt;xref:System.Drawing.Size&gt;</ph>.</source>
          <target state="translated">若要调整<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>的控件，你必须设置的控件的<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>或<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>属性或一组<ph id="ph5">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>为一个新的属性<ph id="ph6">&lt;xref:System.Drawing.Size&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>To maintain better performance, do not set the <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> of a control in its constructor.</source>
          <target state="translated">若要维护更好的性能，不要设置<ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph>处于其构造函数的控件。</target>       </trans-unit>
        <trans-unit id="3323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>The preferred method is to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph> property.</source>
          <target state="translated">首选的方法是重写<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DefaultSize%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="3324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>On Windows Server 2003 systems, the size of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> is restricted by the maximum pixel width and height of the monitor.</source>
          <target state="translated">在 Windows Server 2003 系统中的大小<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>受到的最大像素宽度和高度的监视器。</target>       </trans-unit>
        <trans-unit id="3325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>The following code example adds a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> to a form and sets some of its common properties.</source>
          <target state="translated">下面的代码示例将添加<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>到窗体并设置一些其通用的属性。</target>       </trans-unit>
        <trans-unit id="3326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</source>
          <target state="translated">因此它会保留其相对位置，调整窗体的大小时，该示例将在窗体右下角该按钮定位。</target>       </trans-unit>
        <trans-unit id="3327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>Next it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> and resizes the button to the same size as the <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">接下来，它将设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph>并调整其大小的按钮相同的大小为<ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>The example then sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> to <ph id="ph2">`true`</ph> and sets the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property.</source>
          <target state="translated">然后，示例设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph>到<ph id="ph2">`true`</ph>和设置<ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="3329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>Lastly, it adds an event handler to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event of the button.</source>
          <target state="translated">最后，它将添加事件处理程序来处理<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>该按钮的事件。</target>       </trans-unit>
        <trans-unit id="3330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Size">
          <source>This example requires that you have an <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> named <ph id="ph2">`imageList1`</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph>名为<ph id="ph2">`imageList1`</ph>。</target>       </trans-unit>
        <trans-unit id="3331" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Size" /&gt;</ph> property value changes.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Size" /&gt;</ph> 属性值更改时发生。</target>       </trans-unit>
        <trans-unit id="3332" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>It is preferable to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event to handle custom layouts.</source>
          <target state="translated">最好使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph>事件来处理自定义布局。</target>       </trans-unit>
        <trans-unit id="3333" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event is raised in response to <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> events, but also in other conditions when layout might need to be applied.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph>在响应中引发事件<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph>事件，也可以在时布局可能需要应用其他条件。</target>       </trans-unit>
        <trans-unit id="3334" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">如果将引发此事件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>通过以编程方式修改或用户交互更改属性。</target>       </trans-unit>
        <trans-unit id="3335" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="3336" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> event.</source>
          <target state="translated">下面的代码示例演示<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="3337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>An instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control has been provided that can be scaled both horizontally and vertically.</source>
          <target state="translated">实例<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>控件已经被提供的可以水平和垂直方向同时扩展。</target>       </trans-unit>
        <trans-unit id="3338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph> instance provides the horizontal and vertical scale value.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.NumericUpDown&gt;</ph>实例提供水平和垂直缩放值。</target>       </trans-unit>
        <trans-unit id="3339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> instance named <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> is used to set the scale values for the <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> control instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>实例名为<bpt id="p1">**</bpt>确定<ept id="p1">**</ept>用于设置的缩放值<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>控件实例。</target>       </trans-unit>
        <trans-unit id="3340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>Whenever the size of the control changes, the event handler associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> event of the control is called.</source>
          <target state="translated">每当控件的大小更改时，与关联的事件处理程序<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph>的控件的事件时调用。</target>       </trans-unit>
        <trans-unit id="3341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SizeChanged">
          <source>This event handler displays a message box indicating that the size of the control has changed.</source>
          <target state="translated">此事件处理程序会显示一个消息框中，该值指示控件的大小已更改。</target>       </trans-unit>
        <trans-unit id="3342" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> value representing the height and width of the control's client area.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> 值，表示控件工作区的高度和宽度。</target>       </trans-unit>
        <trans-unit id="3343" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)">
          <source>Determines the size of the entire control from the height and width of its client area.</source>
          <target state="translated">确定整个控件（从控件工作区的高度和宽度起计算）的大小。</target>       </trans-unit>
        <trans-unit id="3344" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> value representing the height and width of the entire control.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> 值，表示整个控件的高度和宽度。</target>       </trans-unit>
        <trans-unit id="3345" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>Occurs when the control style changes.</source>
          <target state="translated">在控件样式更改时发生。</target>       </trans-unit>
        <trans-unit id="3346" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph> event occurs when <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> flags have been added or changed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph>事件发生时<ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph>标志已添加或更改。</target>       </trans-unit>
        <trans-unit id="3347" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>This event is raised if the control style is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">如果在控件样式更改通过以编程方式修改或用户交互，引发此事件。</target>       </trans-unit>
        <trans-unit id="3348" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="3349" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="3350" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="3351" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="3352" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3353" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3354" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.StyleChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph> event.</source>
          <target state="translated">然后将其命名实例<ph id="ph1">`Control1`</ph>并确保与事件处理程序<ph id="ph2">&lt;xref:System.Windows.Forms.Control.StyleChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="3355" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>Temporarily suspends the layout logic for the control.</source>
          <target state="translated">临时挂起控件的布局逻辑。</target>       </trans-unit>
        <trans-unit id="3356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>The layout logic of the control is suspended until the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method is called.</source>
          <target state="translated">控件的布局逻辑被挂起，直到<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph>调用方法。</target>       </trans-unit>
        <trans-unit id="3357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> methods are used in tandem to suppress multiple <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> events while you adjust multiple attributes of the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph>方法相继配合使用以禁止显示多个<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph>事件时调整控件的多个属性。</target>       </trans-unit>
        <trans-unit id="3358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>For example, you would typically call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method, then set the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> properties of the control, and then call the <ph id="ph6">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method to enable the changes to take effect.</source>
          <target state="translated">例如，你通常应该调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph>方法，然后设置<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Anchor%2A&gt;</ph>，或<ph id="ph5">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph>属性的控件，，然后调用<ph id="ph6">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph>方法，以使更改生效。</target>       </trans-unit>
        <trans-unit id="3359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>There must be no pending calls to <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> for <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> to be successfully called.</source>
          <target state="translated">必须有没有挂起的调用到<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph>为<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph>成功调用。</target>       </trans-unit>
        <trans-unit id="3360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>When adding several controls to a parent control, it is recommended that you call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> method before initializing the controls to be added.</source>
          <target state="translated">在多个控件添加到父控件时，建议您调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph>方法之前初始化要添加的控件。</target>       </trans-unit>
        <trans-unit id="3361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>After adding the controls to the parent control, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> method.</source>
          <target state="translated">在将控件添加到父控件之后, 调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="3362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>This will increase the performance of applications with many controls.</source>
          <target state="translated">这将增加有许多控件的应用程序的性能。</target>       </trans-unit>
        <trans-unit id="3363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>The following code example adds two buttons to a form.</source>
          <target state="translated">下面的代码示例将两个按钮添加到窗体。</target>       </trans-unit>
        <trans-unit id="3364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.SuspendLayout">
          <source>The example transactions the addition of the buttons by using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph> methods.</source>
          <target state="translated">示例事务使用按钮添加<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SuspendLayout%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ResumeLayout%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="3365" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3366" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragDrop" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragDrop" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="3367" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3368" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragEnter" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragEnter" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="3369" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3370" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragLeave" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragLeave" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="3371" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3372" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragOver" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.DragOver" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="3373" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>Occurs when the system colors change.</source>
          <target state="translated">系统颜色更改时发生。</target>       </trans-unit>
        <trans-unit id="3374" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Drawing.SystemColors&gt;</ph> is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">如果将引发此事件<ph id="ph1">&lt;xref:System.Drawing.SystemColors&gt;</ph>更改通过以编程方式修改或用户交互。</target>       </trans-unit>
        <trans-unit id="3375" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="3376" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="3377" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.SystemColorsChanged&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Control.SystemColorsChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="3378" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="3379" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.SystemColorsChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SystemColorsChanged&gt;</ph> event.</source>
          <target state="translated">然后将其命名实例<ph id="ph1">`Control1`</ph>并确保与事件处理程序<ph id="ph2">&lt;xref:System.Windows.Forms.Control.SystemColorsChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="3382" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>Gets or sets the tab order of the control within its container.</source>
          <target state="translated">获取或设置控件在其容器内的 Tab 键顺序。</target>       </trans-unit>
        <trans-unit id="3383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>The index value of the control within the set of controls within its container.</source>
          <target state="translated">控件容器中控件集合内的控件的索引值。</target>       </trans-unit>
        <trans-unit id="3384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>The controls in the container are included in the tab order.</source>
          <target state="translated">容器中包括的控件以 Tab 键顺序排列。</target>       </trans-unit>
        <trans-unit id="3385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>A tab index can consist of any valid integer greater than or equal to zero, lower numbers being earlier in the tab order.</source>
          <target state="translated">选项卡索引可以包含的任何有效的整数大于或等于零，较低数字靠前的 tab 键顺序。</target>       </trans-unit>
        <trans-unit id="3386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>If more than one control on the same parent control has the same tab index, the z-order of the controls determines the order to cycle through the controls.</source>
          <target state="translated">如果在同一个父控件上的多个控件具有相同的选项卡索引，控件的 z 顺序确定的顺序控件循环。</target>       </trans-unit>
        <trans-unit id="3387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>For a control to be included in the tab order, its <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> property must be set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">控件的 tab 键顺序，包括其<ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph>属性必须设置为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="3388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>The following code example adds a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> to a form and sets some of its common properties.</source>
          <target state="translated">下面的代码示例将添加<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>到窗体并设置一些其通用的属性。</target>       </trans-unit>
        <trans-unit id="3389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</source>
          <target state="translated">因此它会保留其相对位置，调整窗体的大小时，该示例将在窗体右下角该按钮定位。</target>       </trans-unit>
        <trans-unit id="3390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>Next it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> and resizes the button to the same size as the <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">接下来，它将设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph>并调整其大小的按钮相同的大小为<ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>The example then sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> to <ph id="ph2">`true`</ph> and sets the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property.</source>
          <target state="translated">然后，示例设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph>到<ph id="ph2">`true`</ph>和设置<ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="3392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>Lastly, it adds an event handler to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event of the button.</source>
          <target state="translated">最后，它将添加事件处理程序来处理<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>该按钮的事件。</target>       </trans-unit>
        <trans-unit id="3393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabIndex">
          <source>This example requires that you have an <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> named <ph id="ph2">`imageList1`</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph>名为<ph id="ph2">`imageList1`</ph>。</target>       </trans-unit>
        <trans-unit id="3394" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.TabIndex" /&gt;</ph> property value changes.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.TabIndex" /&gt;</ph> 属性值更改时发生。</target>       </trans-unit>
        <trans-unit id="3395" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">如果将引发此事件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph>通过以编程方式修改或用户交互更改属性。</target>       </trans-unit>
        <trans-unit id="3396" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="3397" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="3398" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabIndexChanged&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabIndexChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="3399" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="3400" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3401" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3402" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabIndexChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.TabIndexChanged&gt;</ph> event.</source>
          <target state="translated">然后将其命名实例<ph id="ph1">`Control1`</ph>并确保与事件处理程序<ph id="ph2">&lt;xref:System.Windows.Forms.Control.TabIndexChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="3403" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.TabStop">
          <source>Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</source>
          <target state="translated">获取或设置一个值，该值指示用户能否使用 Tab 键将焦点放到该控件上。</target>       </trans-unit>
        <trans-unit id="3404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user can give the focus to the control using the TAB key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果用户可以用 Tab 键将焦点放到此控件上，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；反之，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>This property will always return <ph id="ph1">&lt;see langword="true" /&gt;</ph> for an instance of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> class.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 类的实例，该属性将始终返回 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>When the user presses the TAB key, the input focus is set to the next control in the tab order.</source>
          <target state="translated">当用户按 TAB 键时，则会将输入的焦点设置为下一个控件的 tab 键顺序。</target>       </trans-unit>
        <trans-unit id="3408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>Controls with the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> property value of <ph id="ph2">`false`</ph> are not included in the collection of controls in the tab order.</source>
          <target state="translated">控制与<ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph>属性值<ph id="ph2">`false`</ph>不包括在 tab 键顺序中的控件集合。</target>       </trans-unit>
        <trans-unit id="3409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>The tab order can be manipulated by setting the control's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property value.</source>
          <target state="translated">通过设置控件的可操作的 tab 键顺序<ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph>属性值。</target>       </trans-unit>
        <trans-unit id="3410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>The following code example adds a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> to a form and sets some of its common properties.</source>
          <target state="translated">下面的代码示例将添加<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>到窗体并设置一些其通用的属性。</target>       </trans-unit>
        <trans-unit id="3411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</source>
          <target state="translated">因此它会保留其相对位置，调整窗体的大小时，该示例将在窗体右下角该按钮定位。</target>       </trans-unit>
        <trans-unit id="3412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>Next it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> and resizes the button to the same size as the <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">接下来，它将设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph>并调整其大小的按钮相同的大小为<ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>The example then sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> to <ph id="ph2">`true`</ph> and sets the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph> property.</source>
          <target state="translated">然后，示例设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph>到<ph id="ph2">`true`</ph>和设置<ph id="ph3">&lt;xref:System.Windows.Forms.Control.TabIndex%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="3414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>Lastly, it adds an event handler to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event of the button.</source>
          <target state="translated">最后，它将添加事件处理程序来处理<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>该按钮的事件。</target>       </trans-unit>
        <trans-unit id="3415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TabStop">
          <source>This example requires that you have an <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> named <ph id="ph2">`imageList1`</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph>名为<ph id="ph2">`imageList1`</ph>。</target>       </trans-unit>
        <trans-unit id="3416" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.TabStop" /&gt;</ph> property value changes.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.TabStop" /&gt;</ph> 属性值更改时发生。</target>       </trans-unit>
        <trans-unit id="3417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">如果将引发此事件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStop%2A&gt;</ph>通过以编程方式修改或用户交互更改属性。</target>       </trans-unit>
        <trans-unit id="3418" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="3419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="3420" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStopChanged&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Control.TabStopChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="3421" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="3422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TabStopChanged">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.TabStopChanged&gt;</ph> event.</source>
          <target state="translated">然后将其命名实例<ph id="ph1">`Control1`</ph>并确保与事件处理程序<ph id="ph2">&lt;xref:System.Windows.Forms.Control.TabStopChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="3425" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Tag">
          <source>Gets or sets the object that contains data about the control.</source>
          <target state="translated">获取或设置包含有关控件的数据的对象。</target>       </trans-unit>
        <trans-unit id="3426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains data about the control.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>，其中包含有关控件的数据。</target>       </trans-unit>
        <trans-unit id="3427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>Any type derived from the <ph id="ph1">&lt;xref:System.Object&gt;</ph> class can be assigned to this property.</source>
          <target state="translated">从派生的任何类型<ph id="ph1">&lt;xref:System.Object&gt;</ph>类可以分配给此属性。</target>       </trans-unit>
        <trans-unit id="3429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> property is set through the Windows Forms designer, only text can be assigned.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph>通过 Windows 窗体设计器设置属性，可分配纯文本。</target>       </trans-unit>
        <trans-unit id="3430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>A common use for the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> property is to store data that is closely associated with the control.</source>
          <target state="translated">一个常见用途<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph>属性是用于存储与控件密切相关联的数据。</target>       </trans-unit>
        <trans-unit id="3431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>For example, if you have a control that displays information about a customer, you might store a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that contains the customer's order history in that control's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> property so the data can be accessed quickly.</source>
          <target state="translated">例如，如果你有一个控件，显示有关客户的信息，你可能会存储<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，其中包含该控件中的客户的订单历史记录<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph>属性，以便可以快速访问这些数据。</target>       </trans-unit>
        <trans-unit id="3432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>The following code example displays a form and stores a <ph id="ph1">`Customer`</ph> in its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph> property.</source>
          <target state="translated">下面的代码示例显示一个窗体，并将存储<ph id="ph1">`Customer`</ph>中其<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Tag%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="3433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Tag">
          <source>This example requires that you have defined a class that derives from <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`CustomerForm`</ph> and that you have defined a <ph id="ph3">`Customer`</ph>.</source>
          <target state="translated">此示例需要您已经定义了派生自的类<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名为<ph id="ph2">`CustomerForm`</ph>和已定义<ph id="ph3">`Customer`</ph>。</target>       </trans-unit>
        <trans-unit id="3434" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Text">
          <source>Gets or sets the text associated with this control.</source>
          <target state="translated">获取或设置与此控件关联的文本。</target>       </trans-unit>
        <trans-unit id="3435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>The text associated with this control.</source>
          <target state="translated">与该控件关联的文本。</target>       </trans-unit>
        <trans-unit id="3436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of the control is used differently by each derived class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>的每个派生类以不同方式使用的控件属性。</target>       </trans-unit>
        <trans-unit id="3437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>For example the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> is displayed in the title bar at the top of the form, is fairly small in character count, and usually displays the application or document name.</source>
          <target state="translated">例如<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>显示在窗体顶部的标题栏中，在字符计数中，很小，通常会显示的应用程序或文档的名称。</target>       </trans-unit>
        <trans-unit id="3438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>However, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> can be large and can include numerous nonvisual characters used to format the text.</source>
          <target state="translated">但是，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>可以很大，并且可以包含多个非可视字符用于设置文本格式。</target>       </trans-unit>
        <trans-unit id="3439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>For example, the text displayed in a <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> can be formatted by adjusting the <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph> properties, or by the addition of spaces or tab characters to align the text.</source>
          <target state="translated">例如，在显示的文本<ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>可通过调整格式设置<ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph>属性，或通过添加空格或制表符对齐文本。</target>       </trans-unit>
        <trans-unit id="3440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> and sets some of its common properties.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>并设置一些其通用的属性。</target>       </trans-unit>
        <trans-unit id="3441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and sets its <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> within the group box.</source>
          <target state="translated">该示例创建<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>并设置其<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>组框中。</target>       </trans-unit>
        <trans-unit id="3442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>Next, it sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of the group box, and docks the group box to the top of the form.</source>
          <target state="translated">接下来，它将设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>属性组框中，并停靠组框中的，到窗体顶部。</target>       </trans-unit>
        <trans-unit id="3443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>Lastly, it disables the group box by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>, which causes all controls contained within the group box to be disabled.</source>
          <target state="translated">最后，通过设置禁用分组框<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph>属性<ph id="ph2">`false`</ph>，这将导致产生包含在要禁用的组框内的所有控件。</target>       </trans-unit>
        <trans-unit id="3444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>When overriding the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> property in a derived class, use the base class's <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> property to extend the base implementation.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph>属性在派生类中，使用基类的<ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph>属性来扩展的基实现。</target>       </trans-unit>
        <trans-unit id="3445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>Otherwise, you must provide all the implementation.</source>
          <target state="translated">否则，你必须提供所有实现。</target>       </trans-unit>
        <trans-unit id="3446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Text">
          <source>You are not required to override both the <ph id="ph1">&lt;see langword="get" /&gt;</ph> and <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessors of the <ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> property; you can override only one if needed.</source>
          <target state="translated">你无需重写二者，<ph id="ph1">&lt;see langword="get" /&gt;</ph>和<ph id="ph2">&lt;see langword="set" /&gt;</ph>访问器<ph id="ph3">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph>属性; 你可以根据需要重写只有一个。</target>       </trans-unit>
        <trans-unit id="3447" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.TextChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> property value changes.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Text" /&gt;</ph> 属性值更改时发生。</target>       </trans-unit>
        <trans-unit id="3448" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TextChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">如果将引发此事件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>通过以编程方式修改或用户交互更改属性。</target>       </trans-unit>
        <trans-unit id="3449" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TextChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="3450" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TextChanged">
          <source>The following code example changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> displaying currency data.</source>
          <target state="translated">下面的代码示例更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>显示货币数据。</target>       </trans-unit>
        <trans-unit id="3451" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TextChanged">
          <source>The example converts the text to a decimal number and changes the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph> if the number is negative and to <ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph> if the number is positive.</source>
          <target state="translated">该示例将文本转换为十进制数和更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>到<ph id="ph2">&lt;xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType&gt;</ph>如果数字为负和<ph id="ph3">&lt;xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType&gt;</ph>如果数值为正。</target>       </trans-unit>
        <trans-unit id="3452" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.TextChanged">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>包含<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3453" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Top">
          <source>Gets or sets the distance, in pixels, between the top edge of the control and the top edge of its container's client area.</source>
          <target state="translated">获取或设置控件上边缘与其容器的工作区上边缘之间的距离（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="3454" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Top">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 表示控件下边缘与其容器的工作区上边缘之间的距离（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="3455" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Top">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> property value is equivalent to the <ph id="ph2">&lt;xref:System.Drawing.Point.Y%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property value of the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>属性值等于<ph id="ph2">&lt;xref:System.Drawing.Point.Y%2A?displayProperty=nameWithType&gt;</ph>属性<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>的控件属性值。</target>       </trans-unit>
        <trans-unit id="3456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Top">
          <source>Changes made to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph> property values cause the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property value of the control to change.</source>
          <target state="translated">对所做更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>属性值将导致<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph>要更改的控件的属性值。</target>       </trans-unit>
        <trans-unit id="3457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Top">
          <source>The following code example creates three <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls on a form and sets their size and location by using the various size-related and location-related properties.</source>
          <target state="translated">下面的代码示例创建三个<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>窗体上控件并通过使用各种大小相关以及与位置相关属性中设置其大小和位置。</target>       </trans-unit>
        <trans-unit id="3458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Top">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that has a width and height of at least 300 pixels.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>，其宽度和高度至少 300 像素。</target>       </trans-unit>
        <trans-unit id="3459" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>Gets the parent control that is not parented by another Windows Forms control.</source>
          <target state="translated">获取没有另一个 Windows 窗体控件作为其父级的父控件。</target>       </trans-unit>
        <trans-unit id="3460" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>Typically, this is the outermost <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that the control is contained in.</source>
          <target state="translated">通常，这是控件所在的最外面的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> that represents the top-level control that contains the current control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>，它表示包含当前控件的顶级控件。</target>       </trans-unit>
        <trans-unit id="3462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>The top-level control is defined as the parent control that is not parented by another Windows Forms control.</source>
          <target state="translated">顶级控件被指不是另一个 Windows 窗体控件的父控件。</target>       </trans-unit>
        <trans-unit id="3463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>Typically, this is the outermost <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that the control is contained in.</source>
          <target state="translated">通常，这是控件所在的最外面的 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>For example, if the control is contained on an MDI child <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, then the top-level control is the Multiple Document Interface (MDI) parent <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">例如，如果该控件包含 MDI 子窗体上<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>，顶级控件为多文档界面 (MDI) 父<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>If the control is not parented on a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>, this property will return <ph id="ph2">`null`</ph>.</source>
          <target state="translated">如果该控件没有父级上<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>，此属性将返回<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="3466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>for all windows to get this property value.</source>
          <target state="translated">若要获取此属性的值的所有窗口。</target>       </trans-unit>
        <trans-unit id="3467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.TopLevelControl">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3468" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.Update">
          <source>Causes the control to redraw the invalidated regions within its client area.</source>
          <target state="translated">使控件重绘其工作区内的无效区域。</target>       </trans-unit>
        <trans-unit id="3469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>Executes any pending requests for painting.</source>
          <target state="translated">执行绘制任何挂起的请求。</target>       </trans-unit>
        <trans-unit id="3470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>There are two ways to repaint a form and its contents:</source>
          <target state="translated">有两种方法来重绘窗体及其内容：</target>       </trans-unit>
        <trans-unit id="3471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>You can use one of the overloads of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method.</source>
          <target state="translated">你可以使用的重载之一<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>方法替换<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="3472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>You can call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Refresh%2A&gt;</ph> method, which forces the control to redraw itself and all its children.</source>
          <target state="translated">你可以调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Refresh%2A&gt;</ph>方法，这会强制控件重绘本身及其所有子级。</target>       </trans-unit>
        <trans-unit id="3473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>This is equivalent to setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method to <ph id="ph2">`true`</ph> and using it with <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph>.</source>
          <target state="translated">这相当于设置<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>方法<ph id="ph2">`true`</ph>并使用它与<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method governs what gets painted or repainted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>方法控制什么获取绘制或重新绘制。</target>       </trans-unit>
        <trans-unit id="3475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method governs when the painting or repainting occurs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph>方法控制何时进行绘制或重绘。</target>       </trans-unit>
        <trans-unit id="3476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>If you use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> methods together rather than calling <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Refresh%2A&gt;</ph>, what gets repainted depends on which overload of <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> you use.</source>
          <target state="translated">如果你使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph>方法一起使用，而不是调用<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Refresh%2A&gt;</ph>，绘制的内容取决于哪个重载的<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>你使用。</target>       </trans-unit>
        <trans-unit id="3477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method just forces the control to be painted immediately, but the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method governs what gets painted when you call the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph>方法只需强制立即，绘制控件但<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>方法控制所绘制在调用时<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Update%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="3478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.Update">
          <source>For more information, see the<bpt id="p1">[</bpt>WM_PAINT<ept id="p1">](http://msdn.microsoft.com/library/dd145213\(v=vs.85\).aspx)</ept>topic.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>WM_PAINT<ept id="p1">](http://msdn.microsoft.com/library/dd145213\(v=vs.85\).aspx)</ept>主题。</target>       </trans-unit>
        <trans-unit id="3479" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Control">
          <source>Updates the bounds of the control.</source>
          <target state="translated">更新控件的边界。</target>       </trans-unit>
        <trans-unit id="3480" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds">
          <source>Updates the bounds of the control with the current size and location.</source>
          <target state="translated">用当前大小和位置更新控件的边界。</target>       </trans-unit>
        <trans-unit id="3481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateBounds">
          <source>If the new <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the control is different from the previous <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> event is raised.</source>
          <target state="translated">如果新<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>控件是不同于以前<ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="3482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateBounds">
          <source>Likewise, if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> of the control changes, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> event is raised.</source>
          <target state="translated">同样，如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>控件更改，<ph id="ph2">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="3483" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> coordinate of the control.</source>
          <target state="translated">控件的 <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> 坐标。</target>       </trans-unit>
        <trans-unit id="3484" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> coordinate of the control.</source>
          <target state="translated">控件的 <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> 坐标。</target>       </trans-unit>
        <trans-unit id="3485" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Width" /&gt;</ph> of the control.</source>
          <target state="translated">控件的 <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Width" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3486" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Height" /&gt;</ph> of the control.</source>
          <target state="translated">控件的 <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Height" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3487" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Updates the bounds of the control with the specified size and location.</source>
          <target state="translated">用指定大小和位置更新控件的边界。</target>       </trans-unit>
        <trans-unit id="3488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If the new <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the control if different from the previous <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> event is raised.</source>
          <target state="translated">如果新<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>如果不同于上一个控件的<ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="3489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Likewise, is the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> of the control changes, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> event is raised.</source>
          <target state="translated">同样，<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>控件更改，<ph id="ph2">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="3490" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> coordinate of the control.</source>
          <target state="translated">控件的 <ph id="ph1">&lt;see cref="P:System.Drawing.Point.X" /&gt;</ph> 坐标。</target>       </trans-unit>
        <trans-unit id="3491" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> coordinate of the control.</source>
          <target state="translated">控件的 <ph id="ph1">&lt;see cref="P:System.Drawing.Point.Y" /&gt;</ph> 坐标。</target>       </trans-unit>
        <trans-unit id="3492" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Width" /&gt;</ph> of the control.</source>
          <target state="translated">控件的 <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Width" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3493" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Height" /&gt;</ph> of the control.</source>
          <target state="translated">控件的 <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Height" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3494" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The client <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Width" /&gt;</ph> of the control.</source>
          <target state="translated">控件的工作区的 <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Width" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3495" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The client <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Height" /&gt;</ph> of the control.</source>
          <target state="translated">控件的工作区的 <ph id="ph1">&lt;see cref="P:System.Drawing.Size.Height" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3496" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Updates the bounds of the control with the specified size, location, and client size.</source>
          <target state="translated">用指定大小、位置和工作区的大小更新控件的边界。</target>       </trans-unit>
        <trans-unit id="3497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If the new <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the control is different from the previous <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> event is raised.</source>
          <target state="translated">如果新<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>控件是不同于以前<ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="3498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Likewise, if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> of the control changes, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph> event is raised.</source>
          <target state="translated">同样，如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>控件更改，<ph id="ph2">&lt;xref:System.Windows.Forms.Control.LocationChanged&gt;</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="3499" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateStyles">
          <source>Forces the assigned styles to be reapplied to the control.</source>
          <target state="translated">强制将分配的样式重新应用到控件。</target>       </trans-unit>
        <trans-unit id="3500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateStyles">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> method to get the styles to apply.</source>
          <target state="translated">此方法调用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph>方法以获取要应用的样式。</target>       </trans-unit>
        <trans-unit id="3501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateStyles">
          <source>The styles assigned to the <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.Style%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ExStyle%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.CreateParams&gt;</ph> assigned to the control's <ph id="ph4">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph> property are reapplied.</source>
          <target state="translated">分配给样式<ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams.Style%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.CreateParams.ExStyle%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Windows.Forms.CreateParams&gt;</ph>分配给控件的<ph id="ph4">&lt;xref:System.Windows.Forms.Control.CreateParams%2A&gt;</ph>属性都将重新应用。</target>       </trans-unit>
        <trans-unit id="3502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateStyles">
          <source>The control is repainted to reflect the style changes if necessary.</source>
          <target state="translated">重新绘制控件以反映样式发生改变，如有必要。</target>       </trans-unit>
        <trans-unit id="3503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateStyles">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.UpdateStyles%2A&gt;</ph> method has no effect if the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph> property value is <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.UpdateStyles%2A&gt;</ph>方法不起如果<ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph>属性值是<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="3504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateStyles">
          <source>The following code example enables double-buffering on a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and updates the styles to reflect the changes.</source>
          <target state="translated">下面的代码示例启用双缓冲上<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>并更新以反映所做的更改的样式。</target>       </trans-unit>
        <trans-unit id="3505" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.UpdateZOrder">
          <source>Updates the control in its parent's z-order.</source>
          <target state="translated">按控件的父级的 Z 顺序更新控件。</target>       </trans-unit>
        <trans-unit id="3506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateZOrder">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.UpdateZOrder%2A&gt;</ph> method updates the position of the control in its parent control's z-order.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.UpdateZOrder%2A&gt;</ph>方法将更新其父控件的 z 顺序控件的位置。</target>       </trans-unit>
        <trans-unit id="3507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.UpdateZOrder">
          <source>For example, if this control is a newly created control that was added to a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>, the z-order is updated with the new control added to the back.</source>
          <target state="translated">例如，新创建的控制此控件是否已添加到<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph>，z 顺序更新与新控件添加到背面。</target>       </trans-unit>
        <trans-unit id="3508" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.UseWaitCursor">
          <source>Gets or sets a value indicating whether to use the wait cursor for the current control and all child controls.</source>
          <target state="translated">获取或设置一个值，该值指示是否将等待光标用于当前控件以及所有子控件。</target>       </trans-unit>
        <trans-unit id="3509" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.UseWaitCursor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use the wait cursor for the current control and all child controls; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要将等待光标用于当前控件以及所有子控件，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3510" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.UseWaitCursor">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3511" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.UseWaitCursor">
          <source>Use a wait cursor whenever you perform an operation that takes a noticeable amount of time.However, note that operations that block the UI thread will also block acursor change.Therefore, this property should only be used when performing time-consuming operations in another thread.</source>
          <target state="translated">每当执行需要耗费大量时间操作时，请使用等待光标。但是，请注意，阻塞 UI 线程的操作还将阻止 acursor 更改。因此，仅当在另一个线程中执行耗时的操作时，才应使用此属性。</target>       </trans-unit>
        <trans-unit id="3512" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.UseWaitCursor">
          <source>To change the cursor globally and immediately, seethe <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> property.</source>
          <target state="translated">若要在全局级别并立即更改光标，请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="3513" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Validated">
          <source>Occurs when the control is finished validating.</source>
          <target state="translated">在控件完成验证时发生。</target>       </trans-unit>
        <trans-unit id="3514" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> property to the current form, focus events occur in the following order:</source>
          <target state="translated">当你通过使用键盘 （选项卡上，按 SHIFT + TAB 等），通过调用更改焦点<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph>方法，或通过设置<ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph>到当前窗体的属性，将按以下顺序发生焦点事件：</target>       </trans-unit>
        <trans-unit id="3515" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>When you change the focus by using the mouse or by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:</source>
          <target state="translated">当你通过使用鼠标或通过调用更改焦点<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph>方法，焦点事件按下列顺序发生：</target>       </trans-unit>
        <trans-unit id="3516" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph>属性设置为<ph id="ph2">`false`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>和<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph>事件将被抑制。</target>       </trans-unit>
        <trans-unit id="3517" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>If the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> is set to <ph id="ph3">`true`</ph> in the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event delegate, all events that would usually occur after the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event are suppressed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph>设置为<ph id="ph3">`true`</ph>中<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>事件委托中，通常会发生后的所有事件<ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>事件将被抑制。</target>       </trans-unit>
        <trans-unit id="3518" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>Do not attempt to set focus from within the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.</source>
          <target state="translated">请不要尝试将焦点设置在<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>，或<ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="3519" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>Doing so can cause your application or the operating system to stop responding.</source>
          <target state="translated">这样做会导致你的应用程序或操作系统停止响应。</target>       </trans-unit>
        <trans-unit id="3520" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>For more information, see the<bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx)</ept>topic, and the "Message Deadlocks" section of the <bpt id="p2">[</bpt>About Messages and Message Queues<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx)</ept> topic.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>WM_KILLFOCUS<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx)</ept>主题和的"消息死锁"部分<bpt id="p2">[</bpt>关于消息和消息队列<ept id="p2">](http://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx)</ept>主题。</target>       </trans-unit>
        <trans-unit id="3521" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="3522" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>The following code example uses the derived class <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and validates an email address that the user enters.</source>
          <target state="translated">下面的代码示例使用派生的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>并验证用户输入的电子邮件地址。</target>       </trans-unit>
        <trans-unit id="3523" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>If the email address is not in the standard format (containing "<ph id="ph1">@" and "</ph>."), the validation fails, an <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> icon is displayed, and the event is canceled.</source>
          <target state="translated">如果电子邮件地址不是标准的格式 (包含"<ph id="ph1">@" and "</ph>。")，则验证将失败，<ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph>图标会显示，并且取消了该事件。</target>       </trans-unit>
        <trans-unit id="3524" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validated">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> control have been created on a form.</source>
          <target state="translated">此示例需要<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph>已在窗体上创建控件。</target>       </trans-unit>
        <trans-unit id="3525" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.Validating">
          <source>Occurs when the control is validating.</source>
          <target state="translated">在控件验证时发生。</target>       </trans-unit>
        <trans-unit id="3526" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph> methods, or by setting the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph> property to the current form, focus events occur in the following order:</source>
          <target state="translated">当你通过使用键盘 （选项卡上，按 SHIFT + TAB 等），通过调用更改焦点<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Control.SelectNextControl%2A&gt;</ph>方法，或通过设置<ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType&gt;</ph>到当前窗体的属性，将按以下顺序发生焦点事件：</target>       </trans-unit>
        <trans-unit id="3527" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>When you change the focus by using the mouse or by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> method, focus events occur in the following order:</source>
          <target state="translated">当你通过使用鼠标或通过调用更改焦点<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph>方法，焦点事件按下列顺序发生：</target>       </trans-unit>
        <trans-unit id="3528" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> events are suppressed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.CausesValidation%2A&gt;</ph>属性设置为<ph id="ph2">`false`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>和<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph>事件将被抑制。</target>       </trans-unit>
        <trans-unit id="3529" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>If the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> is set to <ph id="ph3">`true`</ph> in the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event delegate, all events that would usually occur after the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event are suppressed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph>设置为<ph id="ph3">`true`</ph>中<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>事件委托中，通常会发生后的所有事件<ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>事件将被抑制。</target>       </trans-unit>
        <trans-unit id="3530" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>Do not attempt to set focus from within the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event handlers.</source>
          <target state="translated">请不要尝试将焦点设置在<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enter&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Control.GotFocus&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Leave&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Control.LostFocus&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>，或<ph id="ph6">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="3531" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>Doing so can cause your application or the operating system to stop responding.</source>
          <target state="translated">这样做会导致你的应用程序或操作系统停止响应。</target>       </trans-unit>
        <trans-unit id="3532" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>For more information, see the <ph id="ph1">`WM_KILLFOCUS`</ph> topic in the "Keyboard Input Reference" section, and the "Message Deadlocks" section of the "About Messages and Message Queues" topic in the MSDN library at <ph id="ph2">http://msdn.microsoft.com/library</ph>.</source>
          <target state="translated">有关详细信息，请参阅<ph id="ph1">`WM_KILLFOCUS`</ph>"键盘输入引用"部分中和在 MSDN 库中的"有关消息队列和消息队列"主题的"消息死锁"部分中的主题<ph id="ph2">http://msdn.microsoft.com/library</ph>。</target>       </trans-unit>
        <trans-unit id="3533" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="3534" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>The following code example uses the derived class <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and validates an email address that the user enters.</source>
          <target state="translated">下面的代码示例使用派生的类<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>并验证用户输入的电子邮件地址。</target>       </trans-unit>
        <trans-unit id="3535" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>If the email address is not in the standard format (containing "<ph id="ph1">@" and "</ph>."), the validation fails, an <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> icon is displayed, and the event is canceled.</source>
          <target state="translated">如果电子邮件地址不是标准的格式 (包含"<ph id="ph1">@" and "</ph>。")，则验证将失败，<ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph>图标会显示，并且取消了该事件。</target>       </trans-unit>
        <trans-unit id="3536" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.Validating">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph> control have been created on a form.</source>
          <target state="translated">此示例需要<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.ErrorProvider&gt;</ph>已在窗体上创建控件。</target>       </trans-unit>
        <trans-unit id="3537" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Visible">
          <source>Gets or sets a value indicating whether the control and all its child controls are displayed.</source>
          <target state="translated">获取或设置一个值，该值指示是否显示该控件及其所有子控件。</target>       </trans-unit>
        <trans-unit id="3538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Visible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control and all its child controls are displayed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果显示该控件及其所有子控件，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Visible">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Visible">
          <source>Note that even if <ph id="ph1">`Visible`</ph> is set to <ph id="ph2">`true`</ph>, the control might not be visible to the user if it is obscured behind other controls.</source>
          <target state="translated">请注意，即使<ph id="ph1">`Visible`</ph>设置为<ph id="ph2">`true`</ph>，该控件可能不会显示给用户如果它被遮盖其他控件。</target>       </trans-unit>
        <trans-unit id="3541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Visible">
          <source>The following code example uses the derived classes <ph id="ph1">&lt;xref:System.Windows.Forms.VScrollBar&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HScrollBar&gt;</ph> and sets their <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property values, based on the size of an <ph id="ph4">&lt;xref:System.Drawing.Image&gt;</ph> being displayed in a <ph id="ph5">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> control.</source>
          <target state="translated">下面的代码示例使用派生的类<ph id="ph1">&lt;xref:System.Windows.Forms.VScrollBar&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.HScrollBar&gt;</ph>并设置其<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph>基于大小的属性值<ph id="ph4">&lt;xref:System.Drawing.Image&gt;</ph>显示在<ph id="ph5">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="3542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Visible">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> has been created on a form and that <ph id="ph2">&lt;xref:System.Windows.Forms.HScrollBar&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.VScrollBar&gt;</ph> controls have been created on the <ph id="ph4">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph>.</source>
          <target state="translated">此示例需要<ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph>已创建一个窗体和上<ph id="ph2">&lt;xref:System.Windows.Forms.HScrollBar&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.VScrollBar&gt;</ph>上已创建控件<ph id="ph4">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Visible">
          <source>This code should be called when the image is loaded into the picture box and by the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event of the form.</source>
          <target state="translated">此代码时应调用在图像加载到图片框和<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph>窗体的事件。</target>       </trans-unit>
        <trans-unit id="3544" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Control.VisibleChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Visible" /&gt;</ph> property value changes.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Visible" /&gt;</ph> 属性值更改时发生。</target>       </trans-unit>
        <trans-unit id="3545" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.VisibleChanged">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
          <target state="translated">如果将引发此事件<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph>通过以编程方式修改或用户交互更改属性。</target>       </trans-unit>
        <trans-unit id="3546" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.VisibleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关处理事件的详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="3547" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Control.VisibleChanged">
          <source>The following code example raises the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.VisibleChanged&gt;</ph> event when the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property value of the <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> control has changed.</source>
          <target state="translated">下面的代码示例引发<ph id="ph1">&lt;xref:System.Windows.Forms.Control.VisibleChanged&gt;</ph>事件时<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph>属性值<ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph>控制已更改。</target>       </trans-unit>
        <trans-unit id="3548" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.Width">
          <source>Gets or sets the width of the control.</source>
          <target state="translated">获取或设置控件的宽度。</target>       </trans-unit>
        <trans-unit id="3549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Width">
          <source>The width of the control in pixels.</source>
          <target state="translated">控件的宽度（以像素为单位）。</target>       </trans-unit>
        <trans-unit id="3550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Width">
          <source>Changes made to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph> property values cause the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph> property value of the control to change.</source>
          <target state="translated">对所做更改<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>属性值将导致<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph>要更改的控件的属性值。</target>       </trans-unit>
        <trans-unit id="3551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Width">
          <source>The following code example creates three <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls on a form and sets their size and location by using the various size-related and location-related properties.</source>
          <target state="translated">下面的代码示例创建三个<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>窗体上控件并通过使用各种大小相关以及与位置相关属性中设置其大小和位置。</target>       </trans-unit>
        <trans-unit id="3552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.Width">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that has a width and height of at least 300 pixels.</source>
          <target state="translated">此示例要求你拥有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>，其宽度和高度至少 300 像素。</target>       </trans-unit>
        <trans-unit id="3553" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Control.WindowTarget">
          <source>This property is not relevant for this class.</source>
          <target state="translated">此属性与此类无关。</target>       </trans-unit>
        <trans-unit id="3554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.WindowTarget">
          <source>The NativeWindow contained within the control.</source>
          <target state="translated">在控件中包含的 NativeWindow。</target>       </trans-unit>
        <trans-unit id="3555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Control.WindowTarget">
          <source>This property is not relevant for this class.</source>
          <target state="translated">此属性与此类无关。</target>       </trans-unit>
        <trans-unit id="3556" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>The Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> to process.</source>
          <target state="translated">要处理的 Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3557" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>Processes Windows messages.</source>
          <target state="translated">处理 Windows 消息。</target>       </trans-unit>
        <trans-unit id="3558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>All messages are sent to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> method after getting filtered through the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph> method.</source>
          <target state="translated">所有消息都发送到<ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph>方法通过进行筛选后的<ph id="ph2">&lt;xref:System.Windows.Forms.Control.PreProcessMessage%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="3559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> method corresponds exactly to the Windows <ph id="ph2">`WindowProc`</ph> function.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> 方法与 Windows <ph id="ph2">`WindowProc`</ph> 函数完全对应。</target>       </trans-unit>
        <trans-unit id="3560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>For more information about processing Windows messages, see the <bpt id="p1">[</bpt>WindowProc function<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=181565)</ept>.</source>
          <target state="translated">有关处理 Windows 消息的详细信息，请参阅<bpt id="p1">[</bpt>WindowProc 函数<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=181565)</ept>。</target>       </trans-unit>
        <trans-unit id="3561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>The following code example demonstrates overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph> method to handle operating system messages identified in the <ph id="ph2">&lt;xref:System.Windows.Forms.Message&gt;</ph> structure.</source>
          <target state="translated">下面的代码示例演示如何重写<ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A&gt;</ph>方法以处理操作系统消息中标识<ph id="ph2">&lt;xref:System.Windows.Forms.Message&gt;</ph>结构。</target>       </trans-unit>
        <trans-unit id="3562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>The<bpt id="p1">[</bpt>WM_ACTIVATEAPP<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx)</ept>operating system message is handled in this example to know when another application is becoming active.</source>
          <target state="translated"><bpt id="p1">[</bpt>WM_ACTIVATEAPP<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx)</ept>操作系统消息处理在此示例中要知道当另一个应用程序变为活动状态。</target>       </trans-unit>
        <trans-unit id="3563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>See the following topics to understand the available <ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType&gt;</ph> values.</source>
          <target state="translated">请参阅以下主题以了解可用<ph id="ph1">&lt;xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType&gt;</ph>，和<ph id="ph3">&lt;xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="3564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>Actual constant values can be found in the Windows.h header file.</source>
          <target state="translated">在 Windows.h 标头文件中找不到实际的常量值。</target>       </trans-unit>
        <trans-unit id="3565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">直接调用方调用非托管的代码。</target>       </trans-unit>
        <trans-unit id="3566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">关联枚举：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="3567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
          <source>Inheriting controls should call the base class's <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /&gt;</ph> method to process any messages that they do not handle.</source>
          <target state="translated">继承控件应调用基类的<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /&gt;</ph>方法来处理它们不处理任何消息。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>