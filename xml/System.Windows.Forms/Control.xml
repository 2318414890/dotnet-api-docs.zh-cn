<Type Name="Control" FullName="System.Windows.Forms.Control">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="995ed8d684fdc27d9210cf78e9188d8f336b1e81" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48612444" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Control : System.ComponentModel.Component, IDisposable, System.ComponentModel.ISynchronizeInvoke, System.Windows.Forms.IBindableComponent, System.Windows.Forms.IDropTarget, System.Windows.Forms.IWin32Window" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Control extends System.ComponentModel.Component implements class System.ComponentModel.IComponent, class System.ComponentModel.ISynchronizeInvoke, class System.IDisposable, class System.Windows.Forms.IBindableComponent, class System.Windows.Forms.IDropTarget, class System.Windows.Forms.IWin32Window" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Control" />
  <TypeSignature Language="VB.NET" Value="Public Class Control&#xA;Inherits Component&#xA;Implements IBindableComponent, IDisposable, IDropTarget, ISynchronizeInvoke, IWin32Window" />
  <TypeSignature Language="C++ CLI" Value="public ref class Control : System::ComponentModel::Component, IDisposable, System::ComponentModel::ISynchronizeInvoke, System::Windows::Forms::IBindableComponent, System::Windows::Forms::IDropTarget, System::Windows::Forms::IWin32Window" />
  <TypeSignature Language="F#" Value="type Control = class&#xA;    inherit Component&#xA;    interface IDropTarget&#xA;    interface ISynchronizeInvoke&#xA;    interface IWin32Window&#xA;    interface IComponent&#xA;    interface IDisposable&#xA;    interface IBindableComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISynchronizeInvoke</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IBindableComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IDropTarget</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IWin32Window</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.ControlCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.ControlCodeDomSerializer, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ControlDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.ControlCodeDomSerializer, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ControlDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3d62e-101">定义控件的基类，控件是带有可视化表示形式的组件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3d62e-101">Defines the base class for controls, which are components with visual representation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-102">若要创建你自己的控件类，继承自<xref:System.Windows.Forms.UserControl>，<xref:System.Windows.Forms.Control>类，或从其他 Windows 窗体提供的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-102">To create your own control class, inherit from the <xref:System.Windows.Forms.UserControl>, <xref:System.Windows.Forms.Control> classes, or from the other Windows Forms provided controls.</span></span> <span data-ttu-id="3d62e-103">有关创作自定义控件的详细信息，请参阅[开发自定义 Windows 窗体控件与.NET Framework](~/docs/framework/winforms/controls/developing-custom-windows-forms-controls.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-103">For more information about authoring custom controls, see [Developing Custom Windows Forms Controls with the .NET Framework](~/docs/framework/winforms/controls/developing-custom-windows-forms-controls.md).</span></span>  
  
 <span data-ttu-id="3d62e-104"><xref:System.Windows.Forms.Control>类实现的类向用户显示信息所需的最基本功能。</span><span class="sxs-lookup"><span data-stu-id="3d62e-104">The <xref:System.Windows.Forms.Control> class implements very basic functionality required by classes that display information to the user.</span></span> <span data-ttu-id="3d62e-105">它处理用户输入通过键盘和指针设备。</span><span class="sxs-lookup"><span data-stu-id="3d62e-105">It handles user input through the keyboard and pointing devices.</span></span> <span data-ttu-id="3d62e-106">它处理消息路由和安全性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-106">It handles message routing and security.</span></span> <span data-ttu-id="3d62e-107">尽管它不实现绘制，它定义控件 （其位置和大小） 的边界。</span><span class="sxs-lookup"><span data-stu-id="3d62e-107">It defines the bounds of a control (its position and size), although it does not implement painting.</span></span> <span data-ttu-id="3d62e-108">它提供窗口句柄 (`hWnd`)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-108">It provides a window handle (`hWnd`).</span></span>  
  
 <span data-ttu-id="3d62e-109">Windows 窗体控件使用环境属性，使子控件可以显示其周围环境一样。</span><span class="sxs-lookup"><span data-stu-id="3d62e-109">Windows Forms controls use ambient properties so child controls can appear like their surrounding environment.</span></span> <span data-ttu-id="3d62e-110">*环境属性*是控件的属性，如果未设置，检索从父控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-110">An *ambient property* is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="3d62e-111">如果控件不具有<xref:System.Windows.Forms.Control.Parent%2A>，并且未设置该属性，控制会尝试确定通过环境的属性的值<xref:System.Windows.Forms.Control.Site%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-111">If the control does not have a <xref:System.Windows.Forms.Control.Parent%2A>, and the property is not set, the control attempts to determine the value of the ambient property through the <xref:System.Windows.Forms.Control.Site%2A> property.</span></span> <span data-ttu-id="3d62e-112">如果该控件没有就位，如果站点不支持环境属性，或在未设置该属性<xref:System.Windows.Forms.AmbientProperties>，该控件使用其自己的默认值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-112">If the control is not sited, if the site does not support ambient properties, or if the property is not set on the <xref:System.Windows.Forms.AmbientProperties>, the control uses its own default values.</span></span> <span data-ttu-id="3d62e-113">通常情况下，环境属性表示的特征的一个控件，如<xref:System.Windows.Forms.Control.BackColor%2A>，即传递给子控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-113">Typically, an ambient property represents a characteristic of a control, such as <xref:System.Windows.Forms.Control.BackColor%2A>, that is communicated to a child control.</span></span> <span data-ttu-id="3d62e-114">例如，<xref:System.Windows.Forms.Button>具有相同<xref:System.Windows.Forms.Control.BackColor%2A>作为其父<xref:System.Windows.Forms.Form>默认情况下。</span><span class="sxs-lookup"><span data-stu-id="3d62e-114">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="3d62e-115">提供的环境属性<xref:System.Windows.Forms.Control>类包括： <xref:System.Windows.Forms.Control.Cursor%2A>， <xref:System.Windows.Forms.Control.Font%2A>， <xref:System.Windows.Forms.Control.BackColor%2A>， <xref:System.Windows.Forms.Control.ForeColor%2A>，并<xref:System.Windows.Forms.Control.RightToLeft%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-115">Ambient properties provided by the <xref:System.Windows.Forms.Control> class include: <xref:System.Windows.Forms.Control.Cursor%2A>, <xref:System.Windows.Forms.Control.Font%2A>, <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, and <xref:System.Windows.Forms.Control.RightToLeft%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-116">若要使 Windows 窗体的应用程序支持视觉样式，请务必设置<xref:System.Windows.Forms.FlatStyle>属性设置为`System`，包括具有可执行文件的清单。</span><span class="sxs-lookup"><span data-stu-id="3d62e-116">To make your Windows Forms application support visual styles, be sure to set the <xref:System.Windows.Forms.FlatStyle> property to `System` and include a manifest with your executable.</span></span> <span data-ttu-id="3d62e-117">清单是 XML 文件，包括应用程序可执行文件内的资源或者作为单独的文件驻留在可执行文件所在的同一目录中。</span><span class="sxs-lookup"><span data-stu-id="3d62e-117">A manifest is an XML file that is included either as a resource within your application executable or as a separate file that resides in the same directory as the executable file.</span></span> <span data-ttu-id="3d62e-118">有关清单的示例，请参阅示例部分<xref:System.Windows.Forms.FlatStyle>枚举。</span><span class="sxs-lookup"><span data-stu-id="3d62e-118">For an example of a manifest, see the Example section of the <xref:System.Windows.Forms.FlatStyle> enumeration.</span></span> <span data-ttu-id="3d62e-119">有关使用视觉样式的详细信息，请参阅[视觉样式](http://msdn.microsoft.com/library/windows/desktop/bb773187.aspx)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-119">For more information about using visual styles, see [Visual Styles](http://msdn.microsoft.com/library/windows/desktop/bb773187.aspx).</span></span>  
  
 <span data-ttu-id="3d62e-120">Windows 窗体具有辅助功能支持内置的并提供有关你的应用程序，使它能够与可访问性客户端应用程序，如屏幕放大器和审阅者实用工具一起使用，屏幕键盘，语音输入的实用信息备用输入的设备和键盘增强功能实用程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-120">Windows Forms has accessibility support built in, and provides information about your application that enables it to work with accessibility client applications such as screen enlarger and reviewer utilities, voice input utilities, on-screen keyboards, alternative input devices, and keyboard enhancement utilities.</span></span> <span data-ttu-id="3d62e-121">有时想要为辅助功能客户端应用程序提供附加信息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-121">Sometimes you will want to provide additional information to accessibility client applications.</span></span> <span data-ttu-id="3d62e-122">有两种方法来提供这些额外信息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-122">There are two ways of providing this additional information.</span></span> <span data-ttu-id="3d62e-123">可以设置<xref:System.Windows.Forms.Control.AccessibleName%2A>， <xref:System.Windows.Forms.Control.AccessibleDescription%2A>， <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A>，和<xref:System.Windows.Forms.Control.AccessibleRole%2A>属性值，将报告给辅助功能客户端应用程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-123">You can set the <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleDescription%2A>, <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A>, and <xref:System.Windows.Forms.Control.AccessibleRole%2A> property values, which will be reported to accessibility client applications.</span></span> <span data-ttu-id="3d62e-124">此方法通常用于提供现有控件的有限的辅助功能信息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-124">This method is typically used to provide limited accessibility information for existing controls.</span></span> <span data-ttu-id="3d62e-125">或者，可以编写您自己的类派生自<xref:System.Windows.Forms.AccessibleObject>或<xref:System.Windows.Forms.Control.ControlAccessibleObject>提供所需任意数量的辅助功能信息的类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-125">Alternatively, you can write your own class deriving from the <xref:System.Windows.Forms.AccessibleObject> or <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes, providing as much accessibility information as needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-126">若要维护更好的性能，不要在其构造函数中设置控件的大小。</span><span class="sxs-lookup"><span data-stu-id="3d62e-126">To maintain better performance, do not set the size of a control in its constructor.</span></span> <span data-ttu-id="3d62e-127">首选的方法是重写<xref:System.Windows.Forms.Control.DefaultSize%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-127">The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-128">不要将添加数据绑定<xref:System.Windows.Forms.Control>其构造函数中。</span><span class="sxs-lookup"><span data-stu-id="3d62e-128">Do not add data bindings for a <xref:System.Windows.Forms.Control> in its constructor.</span></span> <span data-ttu-id="3d62e-129">这样会导致生成代码过程中出现错误，并可能会导致意外的行为。</span><span class="sxs-lookup"><span data-stu-id="3d62e-129">Doing so will cause errors in code generation and can cause unwanted behavior.</span></span>  
  
 <span data-ttu-id="3d62e-130">中的控件的大多数<xref:System.Windows.Forms>命名空间使用基础 Windows 公共控件用作的基础上进行构建。</span><span class="sxs-lookup"><span data-stu-id="3d62e-130">The majority of the controls in the <xref:System.Windows.Forms> namespace use the underlying Windows common control as a base to build on.</span></span> <span data-ttu-id="3d62e-131">有关 Windows 公共控件的详细信息，请参阅[常规控件参考](http://msdn.microsoft.com/library/windows/desktop/bb775497.aspx)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-131">For more information about the Windows common controls, see [General Control Reference](http://msdn.microsoft.com/library/windows/desktop/bb775497.aspx).</span></span>  
  
 <span data-ttu-id="3d62e-132">若要确定 Windows 窗体控件从一个单独的进程，使用标准`SendMessage`调用即可传递 WM_GETCONTROLNAME 消息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-132">To identify Windows Forms controls from a separate process, use a standard `SendMessage` call to pass the WM_GETCONTROLNAME message.</span></span> <span data-ttu-id="3d62e-133">WM_GETCONTROLNAME 是独立于语言和 Windows 层次结构。</span><span class="sxs-lookup"><span data-stu-id="3d62e-133">WM_GETCONTROLNAME is independent of the language and Windows hierarchy.</span></span> <span data-ttu-id="3d62e-134">有关详细信息，请参阅中的"建议的解决方案为 Windows 窗体"主题[自动执行 Windows 窗体](http://msdn.microsoft.com/library/ms996405.aspx)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-134">For more information, see the "Recommended Solution for Windows Forms" topic in[Automating Windows Forms](http://msdn.microsoft.com/library/ms996405.aspx).</span></span>  
  
 <span data-ttu-id="3d62e-135">使用<xref:System.Windows.Forms.Control.InvokeRequired%2A>属性的访问进行同步到该控件从多个线程。</span><span class="sxs-lookup"><span data-stu-id="3d62e-135">Use the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property to synchronize access to the control from multiple threads.</span></span> <span data-ttu-id="3d62e-136">有关多线程 Windows 窗体控件的详细信息，请参阅[如何： 对 Windows 窗体控件进行线程安全调用](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)</span><span class="sxs-lookup"><span data-stu-id="3d62e-136">For more information about multithreaded Windows Forms controls, see [How to: Make Thread-Safe Calls to Windows Forms Controls](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="3d62e-137">仅是线程安全的下列成员： <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />， <see cref="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />， <see cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />， <see cref="P:System.Windows.Forms.Control.InvokeRequired" />，和<see cref="M:System.Windows.Forms.Control.CreateGraphics" />如果已创建控件的句柄。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3d62e-137">Only the following members are thread safe: <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />, <see cref="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />, <see cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />, <see cref="P:System.Windows.Forms.Control.InvokeRequired" />, and <see cref="M:System.Windows.Forms.Control.CreateGraphics" /> if the handle for the control has already been created.</span>
      </span>
      <span data-ttu-id="3d62e-138">调用<see cref="M:System.Windows.Forms.Control.CreateGraphics" />后台线程上创建控件的句柄之前可能会导致非法的跨线程调用。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3d62e-138">Calling <see cref="M:System.Windows.Forms.Control.CreateGraphics" /> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Windows.Forms.Form" />
    <altmember cref="T:System.Windows.Forms.ScrollableControl" />
    <altmember cref="T:System.Windows.Forms.ContainerControl" />
    <altmember cref="T:System.ComponentModel.Component" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-139">初始化 <see cref="T:System.Windows.Forms.Control" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-139">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-140">使用默认设置初始化 <see cref="T:System.Windows.Forms.Control" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-140">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class with default settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-141"><xref:System.Windows.Forms.Control>类是在 Windows 窗体应用程序中使用的所有控件的基类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-141">The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application.</span></span> <span data-ttu-id="3d62e-142">因为该类通常不用于创建类的实例，此构造函数通常不直接调用，但而通过派生类调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-142">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Control : string -&gt; System.Windows.Forms.Control" Usage="new System.Windows.Forms.Control text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="3d62e-143">控件显示的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-143">The text displayed by the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-144">用特定的文本初始化 <see cref="T:System.Windows.Forms.Control" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-144">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class with specific text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-145"><xref:System.Windows.Forms.Control>类是在 Windows 窗体应用程序中使用的所有控件的基类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-145">The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application.</span></span> <span data-ttu-id="3d62e-146">因为该类通常不用于创建类的实例，此构造函数通常不直接调用，但而通过派生类调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-146">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
 <span data-ttu-id="3d62e-147">此版本的<xref:System.Windows.Forms.Control.%23ctor%2A>构造函数设置初始<xref:System.Windows.Forms.Control.Text%2A>属性值设置为`text`参数值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-147">This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control (System.Windows.Forms.Control parent, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control parent, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As Control, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control(System::Windows::Forms::Control ^ parent, System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Control : System.Windows.Forms.Control * string -&gt; System.Windows.Forms.Control" Usage="new System.Windows.Forms.Control (parent, text)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.Windows.Forms.Control" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parent">
          <span data-ttu-id="3d62e-148">要成为该控件的父级的 <see cref="T:System.Windows.Forms.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-148">The <see cref="T:System.Windows.Forms.Control" /> to be the parent of the control.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="3d62e-149">控件显示的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-149">The text displayed by the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-150">用特定文本将 <see cref="T:System.Windows.Forms.Control" /> 类的新实例初始化为子控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-150">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class as a child control, with specific text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-151"><xref:System.Windows.Forms.Control>类是在 Windows 窗体应用程序中使用的所有控件的基类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-151">The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application.</span></span> <span data-ttu-id="3d62e-152">因为该类通常不用于创建类的实例，此构造函数通常不直接调用，但而通过派生类调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-152">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
 <span data-ttu-id="3d62e-153">此版本的<xref:System.Windows.Forms.Control.%23ctor%2A>构造函数设置初始<xref:System.Windows.Forms.Control.Text%2A>属性值设置为`text`参数值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-153">This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value.</span></span> <span data-ttu-id="3d62e-154">构造函数还将控件添加到父控件的<xref:System.Windows.Forms.Control.ControlCollection>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-154">The constructor also adds the control to the parent control's <xref:System.Windows.Forms.Control.ControlCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control (string text, int left, int top, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 left, int32 top, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, left As Integer, top As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control(System::String ^ text, int left, int top, int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Control : string * int * int * int * int -&gt; System.Windows.Forms.Control" Usage="new System.Windows.Forms.Control (text, left, top, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="3d62e-155">控件显示的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-155">The text displayed by the control.</span>
          </span>
        </param>
        <param name="left">
          <span data-ttu-id="3d62e-156">控件距其容器左边缘的 <see cref="P:System.Drawing.Point.X" /> 位置（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-156">The <see cref="P:System.Drawing.Point.X" /> position of the control, in pixels, from the left edge of the control's container.</span>
          </span>
          <span data-ttu-id="3d62e-157">该值被分配给 <see cref="P:System.Windows.Forms.Control.Left" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-157">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Left" /> property.</span>
          </span>
        </param>
        <param name="top">
          <span data-ttu-id="3d62e-158">控件距其容器上边缘的 <see cref="P:System.Drawing.Point.Y" /> 位置（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-158">The <see cref="P:System.Drawing.Point.Y" /> position of the control, in pixels, from the top edge of the control's container.</span>
          </span>
          <span data-ttu-id="3d62e-159">该值被分配给 <see cref="P:System.Windows.Forms.Control.Top" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-159">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Top" /> property.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="3d62e-160">控件的宽度（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-160">The width of the control, in pixels.</span>
          </span>
          <span data-ttu-id="3d62e-161">该值被分配给 <see cref="P:System.Windows.Forms.Control.Width" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-161">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Width" /> property.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="3d62e-162">控件的高度（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-162">The height of the control, in pixels.</span>
          </span>
          <span data-ttu-id="3d62e-163">该值被分配给 <see cref="P:System.Windows.Forms.Control.Height" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-163">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Height" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-164">用特定的文本、大小和位置初始化 <see cref="T:System.Windows.Forms.Control" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-164">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class with specific text, size, and location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-165"><xref:System.Windows.Forms.Control>类是在 Windows 窗体应用程序中使用的所有控件的基类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-165">The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application.</span></span> <span data-ttu-id="3d62e-166">因为该类通常不用于创建类的实例，此构造函数通常不直接调用，但而通过派生类调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-166">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
 <span data-ttu-id="3d62e-167">此版本的<xref:System.Windows.Forms.Control.%23ctor%2A>构造函数设置初始<xref:System.Windows.Forms.Control.Text%2A>属性值设置为`text`参数值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-167">This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value.</span></span> <span data-ttu-id="3d62e-168">初始<xref:System.Windows.Forms.Control.Size%2A>并<xref:System.Windows.Forms.Control.Location%2A>的控件由`left`， `top`，`width`和`height`参数值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-168">The initial <xref:System.Windows.Forms.Control.Size%2A> and <xref:System.Windows.Forms.Control.Location%2A> of the control are determined by the `left`, `top`, `width` and `height` parameter values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-169">若要维护更好的性能，不要在其构造函数中设置控件的大小。</span><span class="sxs-lookup"><span data-stu-id="3d62e-169">To maintain better performance, do not set the size of a control in its constructor.</span></span> <span data-ttu-id="3d62e-170">首选的方法是重写<xref:System.Windows.Forms.Control.DefaultSize%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-170">The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control (System.Windows.Forms.Control parent, string text, int left, int top, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control parent, string text, int32 left, int32 top, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As Control, text As String, left As Integer, top As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control(System::Windows::Forms::Control ^ parent, System::String ^ text, int left, int top, int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Control : System.Windows.Forms.Control * string * int * int * int * int -&gt; System.Windows.Forms.Control" Usage="new System.Windows.Forms.Control (parent, text, left, top, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.Windows.Forms.Control" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parent">
          <span data-ttu-id="3d62e-171">要成为该控件的父级的 <see cref="T:System.Windows.Forms.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-171">The <see cref="T:System.Windows.Forms.Control" /> to be the parent of the control.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="3d62e-172">控件显示的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-172">The text displayed by the control.</span>
          </span>
        </param>
        <param name="left">
          <span data-ttu-id="3d62e-173">控件距其容器左边缘的 <see cref="P:System.Drawing.Point.X" /> 位置（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-173">The <see cref="P:System.Drawing.Point.X" /> position of the control, in pixels, from the left edge of the control's container.</span>
          </span>
          <span data-ttu-id="3d62e-174">该值被分配给 <see cref="P:System.Windows.Forms.Control.Left" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-174">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Left" /> property.</span>
          </span>
        </param>
        <param name="top">
          <span data-ttu-id="3d62e-175">控件距其容器上边缘的 <see cref="P:System.Drawing.Point.Y" /> 位置（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-175">The <see cref="P:System.Drawing.Point.Y" /> position of the control, in pixels, from the top edge of the control's container.</span>
          </span>
          <span data-ttu-id="3d62e-176">该值被分配给 <see cref="P:System.Windows.Forms.Control.Top" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-176">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Top" /> property.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="3d62e-177">控件的宽度（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-177">The width of the control, in pixels.</span>
          </span>
          <span data-ttu-id="3d62e-178">该值被分配给 <see cref="P:System.Windows.Forms.Control.Width" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-178">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Width" /> property.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="3d62e-179">控件的高度（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-179">The height of the control, in pixels.</span>
          </span>
          <span data-ttu-id="3d62e-180">该值被分配给 <see cref="P:System.Windows.Forms.Control.Height" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-180">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Height" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-181">用特定的文本、大小和位置将 <see cref="T:System.Windows.Forms.Control" /> 类的新实例初始化为子控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-181">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class as a child control, with specific text, size, and location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-182"><xref:System.Windows.Forms.Control>类是在 Windows 窗体应用程序中使用的所有控件的基类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-182">The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application.</span></span> <span data-ttu-id="3d62e-183">因为该类通常不用于创建类的实例，此构造函数通常不直接调用，但而通过派生类调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-183">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
 <span data-ttu-id="3d62e-184">此版本的<xref:System.Windows.Forms.Control.%23ctor%2A>构造函数设置初始<xref:System.Windows.Forms.Control.Text%2A>属性值设置为`text`参数值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-184">This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value.</span></span> <span data-ttu-id="3d62e-185">构造函数还将控件添加到父控件的<xref:System.Windows.Forms.Control.ControlCollection>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-185">The constructor also adds the control to the parent control's <xref:System.Windows.Forms.Control.ControlCollection>.</span></span> <span data-ttu-id="3d62e-186">初始<xref:System.Windows.Forms.Control.Size%2A>并<xref:System.Windows.Forms.Control.Location%2A>的控件由`left`， `top`，`width`和`height`参数值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-186">The initial <xref:System.Windows.Forms.Control.Size%2A> and <xref:System.Windows.Forms.Control.Location%2A> of the control are determined by the `left`, `top`, `width` and `height` parameter values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-187">若要维护更好的性能，不要在其构造函数中设置控件的大小。</span><span class="sxs-lookup"><span data-stu-id="3d62e-187">To maintain better performance, do not set the size of a control in its constructor.</span></span> <span data-ttu-id="3d62e-188">首选的方法是重写<xref:System.Windows.Forms.Control.DefaultSize%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-188">The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AccessibilityNotifyClients">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-189">向具有辅助功能的客户端应用程序通知 <see cref="T:System.Windows.Forms.AccessibleEvents" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-189">Notifies the accessibility client applications of <see cref="T:System.Windows.Forms.AccessibleEvents" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AccessibilityNotifyClients">
      <MemberSignature Language="C#" Value="protected internal void AccessibilityNotifyClients (System.Windows.Forms.AccessibleEvents accEvent, int childID);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AccessibilityNotifyClients(valuetype System.Windows.Forms.AccessibleEvents accEvent, int32 childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AccessibilityNotifyClients (accEvent As AccessibleEvents, childID As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void AccessibilityNotifyClients(System::Windows::Forms::AccessibleEvents accEvent, int childID);" />
      <MemberSignature Language="F#" Value="member this.AccessibilityNotifyClients : System.Windows.Forms.AccessibleEvents * int -&gt; unit" Usage="control.AccessibilityNotifyClients (accEvent, childID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accEvent" Type="System.Windows.Forms.AccessibleEvents" />
        <Parameter Name="childID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="accEvent">
          <span data-ttu-id="3d62e-190">要将其通报给具有辅助功能的客户端应用程序的 <see cref="T:System.Windows.Forms.AccessibleEvents" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-190">The <see cref="T:System.Windows.Forms.AccessibleEvents" /> to notify the accessibility client applications of.</span>
          </span>
        </param>
        <param name="childID">
          <span data-ttu-id="3d62e-191">就该辅助性事件要通知的子 <see cref="T:System.Windows.Forms.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-191">The child <see cref="T:System.Windows.Forms.Control" /> to notify of the accessible event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-192">就指定子控件的指定 <see cref="T:System.Windows.Forms.AccessibleEvents" /> 通知辅助功能客户端应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-192">Notifies the accessibility client applications of the specified <see cref="T:System.Windows.Forms.AccessibleEvents" /> for the specified child control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-193">必须调用<xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=nameWithType>方法为每个<xref:System.Windows.Forms.AccessibleEvents>辅助功能客户端应用程序是接收的通知。</span><span class="sxs-lookup"><span data-stu-id="3d62e-193">You must call the <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=nameWithType> method for each <xref:System.Windows.Forms.AccessibleEvents> the accessibility client applications are to be notified of.</span></span> <span data-ttu-id="3d62e-194"><xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A>方法通常称为在将属性设置或在事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-194">The <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> method is typically called when a property is set or from within an event handler.</span></span> <span data-ttu-id="3d62e-195">例如，可能会调用<xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A>方法并传入<xref:System.Windows.Forms.AccessibleEvents>的值`Hide`从事件处理程序中<xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=nameWithType>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-195">For example, you might call the <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> method and pass in an <xref:System.Windows.Forms.AccessibleEvents> value of `Hide` from within the event handler for the <xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=nameWithType> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-196">下面的代码示例演示如何创建一个具有辅助功能的图表控件，并使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>类，以公开访问的信息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-196">The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="3d62e-197">控件绘制图例以及两条曲线。</span><span class="sxs-lookup"><span data-stu-id="3d62e-197">The control plots two curves along with a legend.</span></span> <span data-ttu-id="3d62e-198">`ChartControlAccessibleObject`类，该类派生自`ControlAccessibleObject`，在使用<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法以提供自定义访问图表控件的信息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-198">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="3d62e-199">因为不是实际图表图例<xref:System.Windows.Forms.Control>-基于控制，但改为绘制由图表控件，它不提供任何内置的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-199">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not any built-in accessible information.</span></span> <span data-ttu-id="3d62e-200">因此，`ChartControlAccessibleObject`类将重写<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法以返回`CurveLegendAccessibleObject`，它表示每个部分的图例可访问信息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-200">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="3d62e-201">当辅助功能的应用程序使用该控件时，该控件可以提供所需的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-201">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="3d62e-202">此代码片段演示如何调用<xref:System.Windows.Forms.Control.AccessibilityNotifyClients%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-202">This code excerpt demonstrates calling the <xref:System.Windows.Forms.Control.AccessibilityNotifyClients%2A> method.</span></span> <span data-ttu-id="3d62e-203">请参阅<xref:System.Windows.Forms.AccessibleObject>完整的代码示例的类概述。</span><span class="sxs-lookup"><span data-stu-id="3d62e-203">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#5)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#5)]
 [!code-vb[System.Windows.Forms.AccessibleObject#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleEvents" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="AccessibilityNotifyClients">
      <MemberSignature Language="C#" Value="protected void AccessibilityNotifyClients (System.Windows.Forms.AccessibleEvents accEvent, int objectID, int childID);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AccessibilityNotifyClients(valuetype System.Windows.Forms.AccessibleEvents accEvent, int32 objectID, int32 childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AccessibilityNotifyClients (accEvent As AccessibleEvents, objectID As Integer, childID As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AccessibilityNotifyClients(System::Windows::Forms::AccessibleEvents accEvent, int objectID, int childID);" />
      <MemberSignature Language="F#" Value="member this.AccessibilityNotifyClients : System.Windows.Forms.AccessibleEvents * int * int -&gt; unit" Usage="control.AccessibilityNotifyClients (accEvent, objectID, childID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accEvent" Type="System.Windows.Forms.AccessibleEvents" />
        <Parameter Name="objectID" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="accEvent">
          <span data-ttu-id="3d62e-204">要将其通报给具有辅助功能的客户端应用程序的 <see cref="T:System.Windows.Forms.AccessibleEvents" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-204">The <see cref="T:System.Windows.Forms.AccessibleEvents" /> to notify the accessibility client applications of.</span>
          </span>
        </param>
        <param name="objectID">
          <span data-ttu-id="3d62e-205">
            <see cref="T:System.Windows.Forms.AccessibleObject" /> 的标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-205">The identifier of the <see cref="T:System.Windows.Forms.AccessibleObject" />.</span>
          </span>
        </param>
        <param name="childID">
          <span data-ttu-id="3d62e-206">就该辅助性事件要通知的子 <see cref="T:System.Windows.Forms.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-206">The child <see cref="T:System.Windows.Forms.Control" /> to notify of the accessible event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-207">就指定子控件的指定 <see cref="T:System.Windows.Forms.AccessibleEvents" /> 通知辅助功能客户端应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-207">Notifies the accessibility client applications of the specified <see cref="T:System.Windows.Forms.AccessibleEvents" /> for the specified child control .</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessibilityObject : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.Control.AccessibilityObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-208">获取分配给该控件的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-208">Gets the <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-209">分配给控件的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-209">The <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-210">若要控制此方法返回的实例，请重写<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-210">To control the instance returned from this method, override the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method.</span></span>  
  
 <span data-ttu-id="3d62e-211">如果当前没有给控件分配 <xref:System.Windows.Forms.AccessibleObject>，则会创建后者的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="3d62e-211">If no <xref:System.Windows.Forms.AccessibleObject> is currently assigned to the control, a new instance of one is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-212">获取或设置<xref:System.Windows.Forms.Control.AccessibilityObject%2A>属性，必须添加对的引用`Accessibility`随一起安装的程序集[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="3d62e-212">To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>  
  
 <span data-ttu-id="3d62e-213">有关可访问对象的详细信息，请参阅[Active Accessibility](http://msdn.microsoft.com/library/windows/desktop/dd373592.aspx)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-213">For more information about accessible objects, see [Active Accessibility](http://msdn.microsoft.com/library/windows/desktop/dd373592.aspx).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
        <altmember cref="T:System.Windows.Forms.Control.ControlAccessibleObject" />
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleDefaultActionDescription">
      <MemberSignature Language="C#" Value="public string AccessibleDefaultActionDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibleDefaultActionDescription" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleDefaultActionDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessibleDefaultActionDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleDefaultActionDescription : string with get, set" Usage="System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-214">获取或设置控件的默认操作说明以供具有辅助功能的客户端应用程序使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-214">Gets or sets the default action description of the control for use by accessibility client applications.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-215">控件的默认操作说明，供辅助功能客户端应用程序使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-215">The default action description of the control for use by accessibility client applications.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-216">对象的<xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A>属性描述对象的主要操作从用户的角度来看方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-216">An object's <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A> property describes the object's primary method of manipulation from the user's viewpoint.</span></span> <span data-ttu-id="3d62e-217">此属性应为谓词或谓词短语。</span><span class="sxs-lookup"><span data-stu-id="3d62e-217">This property should be a verb or a short verb phrase.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-218">并非所有对象都有默认操作，而某些对象可能都具有与相关的默认操作其<xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=nameWithType>属性，例如如以下示例所示：</span><span class="sxs-lookup"><span data-stu-id="3d62e-218">Not all objects have default actions, and some objects might have a default action that is related to its <xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=nameWithType> property, such as in the following examples:</span></span>  
  
-   <span data-ttu-id="3d62e-219">选中的复选框，并且在"取消选中"默认操作的值为"选中。</span><span class="sxs-lookup"><span data-stu-id="3d62e-219">A selected check box has a default action of "Uncheck" and a value of "Checked."</span></span>  
  
-   <span data-ttu-id="3d62e-220">已清除的复选框将没有默认操作的"检查"，值为"未选中。</span><span class="sxs-lookup"><span data-stu-id="3d62e-220">A cleared check box has a default action of "Check" and a value of "Unchecked."</span></span>  
  
-   <span data-ttu-id="3d62e-221">标记为"打印"按钮不带有任何值具有"Press，"默认操作。</span><span class="sxs-lookup"><span data-stu-id="3d62e-221">A button labeled "Print" has a default action of "Press," with no value.</span></span>  
  
-   <span data-ttu-id="3d62e-222">标签或显示"打印机"的文本框控件没有默认操作，但是有值为"打印机。</span><span class="sxs-lookup"><span data-stu-id="3d62e-222">A label or a text box control that shows "Printer" has no default action, but would have a value of "Printer."</span></span>  
  
 <span data-ttu-id="3d62e-223">有关辅助性对象的属性的详细信息，请参阅[内容的描述性属性](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-223">For more information about properties of accessible objects, see [Content of Descriptive Properties](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.AccessibleName" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleRole" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDescription" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleDescription">
      <MemberSignature Language="C#" Value="public string AccessibleDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibleDescription" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AccessibleDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessibleDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleDescription : string with get, set" Usage="System.Windows.Forms.Control.AccessibleDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-224">获取或设置辅助功能客户端应用程序使用的控件说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-224">Gets or sets the description of the control used by accessibility client applications.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-225">辅助功能客户端应用程序使用的控件说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-225">The description of the control used by accessibility client applications.</span>
          </span>
          <span data-ttu-id="3d62e-226">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-226">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-227">对象的<xref:System.Windows.Forms.Control.AccessibleDescription%2A>属性提供了有关对象的可视外观的文本说明。</span><span class="sxs-lookup"><span data-stu-id="3d62e-227">An object's <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property provides a textual description about an object's visual appearance.</span></span> <span data-ttu-id="3d62e-228">描述主要用来为视力较差或盲人用户，提供更大的上下文，但也可以使用上下文搜索或其他应用程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-228">The description is primarily used to provide greater context for low-vision or blind users, but can also be used for context searching or other applications.</span></span>  
  
 <span data-ttu-id="3d62e-229"><xref:System.Windows.Forms.Control.AccessibleDescription%2A>需要在说明不明显，或如果它是冗余的基于对象的属性<xref:System.Windows.Forms.Control.AccessibleName%2A>， <xref:System.Windows.Forms.Control.AccessibleRole%2A>， <xref:System.Windows.Forms.AccessibleObject.State%2A>，和<xref:System.Windows.Forms.AccessibleObject.Value%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-229">The <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property is needed if the description is not obvious, or if it is redundant based on the object's <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleRole%2A>, <xref:System.Windows.Forms.AccessibleObject.State%2A>, and <xref:System.Windows.Forms.AccessibleObject.Value%2A> properties.</span></span> <span data-ttu-id="3d62e-230">例如，一个具有"确定"按钮不需要的其他信息，但显示了兰图片的按钮将。</span><span class="sxs-lookup"><span data-stu-id="3d62e-230">For example, a button with "OK" would not need additional information, but a button that shows a picture of a cactus would.</span></span> <span data-ttu-id="3d62e-231"><xref:System.Windows.Forms.Control.AccessibleName%2A>，并<xref:System.Windows.Forms.Control.AccessibleRole%2A>(但也可能<xref:System.Windows.Forms.AccessibleObject.Help%2A>) 兰按钮的属性描述其用途，但<xref:System.Windows.Forms.Control.AccessibleDescription%2A>属性传达信息不太明确，例如"显示图片兰的按钮。"</span><span class="sxs-lookup"><span data-stu-id="3d62e-231">The <xref:System.Windows.Forms.Control.AccessibleName%2A>, and <xref:System.Windows.Forms.Control.AccessibleRole%2A> (and perhaps <xref:System.Windows.Forms.AccessibleObject.Help%2A>) properties for the cactus button would describe its purpose, but the <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property would convey information that is less tangible, such as "A button that shows a picture of a cactus."</span></span>  
  
 <span data-ttu-id="3d62e-232">有关辅助性对象的属性的详细信息，请参阅[内容的描述性属性](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-232">For more information about properties of accessible objects, see [Content of Descriptive Properties](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-233">下面的代码示例创建的实例<xref:System.Windows.Forms.CheckBox>派生的类， `MyCheckBox`，将其分配<xref:System.Drawing.Image>到其<xref:System.Windows.Forms.ButtonBase.Image%2A>属性，并设置<xref:System.Windows.Forms.Control.AccessibleName%2A>并<xref:System.Windows.Forms.Control.AccessibleDescription%2A>属性，因为<xref:System.Windows.Forms.Control.Text%2A>属性是`null`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-233">The following code example creates an instance of a <xref:System.Windows.Forms.CheckBox> derived class, `MyCheckBox`, assigns it an <xref:System.Drawing.Image> to its <xref:System.Windows.Forms.ButtonBase.Image%2A> property and sets the <xref:System.Windows.Forms.Control.AccessibleName%2A> and <xref:System.Windows.Forms.Control.AccessibleDescription%2A> properties, because the <xref:System.Windows.Forms.Control.Text%2A> property is `null`.</span></span> <span data-ttu-id="3d62e-234">此示例要求具有<xref:System.Windows.Forms.Form>名为`MyForm`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-234">This example requires that you have a <xref:System.Windows.Forms.Form> named `MyForm`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/CPP/controlaccessibility.cpp#2)]
 [!code-csharp[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/CS/controlaccessibility.cs#2)]
 [!code-vb[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/VB/controlaccessibility.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.AccessibleName" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleRole" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleName">
      <MemberSignature Language="C#" Value="public string AccessibleName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibleName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AccessibleName" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessibleName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleName : string with get, set" Usage="System.Windows.Forms.Control.AccessibleName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-235">获取或设置辅助功能客户端应用程序所使用的控件名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-235">Gets or sets the name of the control used by accessibility client applications.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-236">辅助功能客户端应用程序所使用的控件名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-236">The name of the control used by accessibility client applications.</span>
          </span>
          <span data-ttu-id="3d62e-237">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-237">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-238"><xref:System.Windows.Forms.Control.AccessibleName%2A>属性是一个标签，简要介绍并标识其容器，例如中的文本中的对象<xref:System.Windows.Forms.Button>，则名称<xref:System.Windows.Forms.MenuItem>，或标签旁边显示<xref:System.Windows.Forms.TextBox>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-238">The <xref:System.Windows.Forms.Control.AccessibleName%2A> property is a label that briefly describes and identifies the object within its container, such as the text in a <xref:System.Windows.Forms.Button>, the name of a <xref:System.Windows.Forms.MenuItem>, or a label displayed next to a <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 <span data-ttu-id="3d62e-239">有关辅助性对象的属性的详细信息，请参阅"[内容的描述性属性](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-239">For more information about properties of accessible objects, see the "[Content of Descriptive Properties](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-240">下面的代码示例创建的实例<xref:System.Windows.Forms.CheckBox>派生的类， `MyCheckBox`，将其分配<xref:System.Drawing.Image>到其<xref:System.Windows.Forms.ButtonBase.Image%2A>属性，并设置<xref:System.Windows.Forms.Control.AccessibleName%2A>并<xref:System.Windows.Forms.Control.AccessibleDescription%2A>属性，因为<xref:System.Windows.Forms.Control.Text%2A>属性是`null`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-240">The following code example creates an instance of a <xref:System.Windows.Forms.CheckBox> derived class, `MyCheckBox`, assigns it an <xref:System.Drawing.Image> to its <xref:System.Windows.Forms.ButtonBase.Image%2A> property and sets the <xref:System.Windows.Forms.Control.AccessibleName%2A> and <xref:System.Windows.Forms.Control.AccessibleDescription%2A> properties since the <xref:System.Windows.Forms.Control.Text%2A> property is `null`.</span></span> <span data-ttu-id="3d62e-241">此示例要求具有<xref:System.Windows.Forms.Form>名为`MyForm`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-241">This example requires that you have a <xref:System.Windows.Forms.Form> named `MyForm`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/CPP/controlaccessibility.cpp#2)]
 [!code-csharp[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/CS/controlaccessibility.cs#2)]
 [!code-vb[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/VB/controlaccessibility.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDescription" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleRole" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleRole">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AccessibleRole AccessibleRole { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleRole AccessibleRole" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AccessibleRole" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleRole As AccessibleRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AccessibleRole AccessibleRole { System::Windows::Forms::AccessibleRole get(); void set(System::Windows::Forms::AccessibleRole value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleRole : System.Windows.Forms.AccessibleRole with get, set" Usage="System.Windows.Forms.Control.AccessibleRole" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-242">获取或设置控件的辅助性角色</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-242">Gets or sets the accessible role of the control</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-243">
            <see cref="T:System.Windows.Forms.AccessibleRole" /> 的值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-243">One of the values of <see cref="T:System.Windows.Forms.AccessibleRole" />.</span>
          </span>
          <span data-ttu-id="3d62e-244">默认值为 <see langword="Default" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-244">The default is <see langword="Default" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-245"><xref:System.Windows.Forms.Control.AccessibleRole%2A> 属性描述对象是哪一种用户界面元素。</span><span class="sxs-lookup"><span data-stu-id="3d62e-245">The <xref:System.Windows.Forms.Control.AccessibleRole%2A> property describes what kind of user interface element an object is.</span></span> <span data-ttu-id="3d62e-246">如果无法确定控件的角色，则 <xref:System.Windows.Forms.Control.AccessibleRole%2A> 属性将设置为 `Default`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-246">If the control's role cannot be determined, the <xref:System.Windows.Forms.Control.AccessibleRole%2A> property is set to `Default`.</span></span>  
  
 <span data-ttu-id="3d62e-247">有关辅助性对象的属性的详细信息，请参阅[内容的描述性属性](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-247">For more information about properties of accessible objects, see [Content of Descriptive Properties](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="3d62e-248">分配的值不是 <see cref="T:System.Windows.Forms.AccessibleRole" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-248">The value assigned is not one of the <see cref="T:System.Windows.Forms.AccessibleRole" /> values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.AccessibleRole" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDescription" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleName" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public virtual bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.Forms.Control.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-249">获取或设置一个值，该值指示控件是否可以接受用户拖放到它上面的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-249">Gets or sets a value indicating whether the control can accept data that the user drags onto it.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-250">如果控件允许拖放操作，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-250">
              <see langword="true" /> if drag-and-drop operations are allowed in the control; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3d62e-251">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-251">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3d62e-252">下面的代码示例启用删除用户后，将图像或图像文件拖到窗体，并将其显示在其上的点。</span><span class="sxs-lookup"><span data-stu-id="3d62e-252">The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped.</span></span> <span data-ttu-id="3d62e-253"><xref:System.Windows.Forms.Control.OnPaint%2A>方法被重写重绘每次绘制窗体的图像; 否则该映像将仅持续到下一步重新绘制。</span><span class="sxs-lookup"><span data-stu-id="3d62e-253">The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</span></span> <span data-ttu-id="3d62e-254"><xref:System.Windows.Forms.Control.DragEnter>事件处理方法确定要拖动到窗体数据的类型，并提供适当的反馈。</span><span class="sxs-lookup"><span data-stu-id="3d62e-254">The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</span></span> <span data-ttu-id="3d62e-255"><xref:System.Windows.Forms.Control.DragDrop>事件处理方法在窗体上显示图像，如果<xref:System.Drawing.Image>可以从数据创建。</span><span class="sxs-lookup"><span data-stu-id="3d62e-255">The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data.</span></span> <span data-ttu-id="3d62e-256">因为<xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType>并<xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType>的值为屏幕坐标，该示例使用<xref:System.Windows.Forms.Control.PointToClient%2A>方法来将它们转换为客户端坐标。</span><span class="sxs-lookup"><span data-stu-id="3d62e-256">Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CPP/imagedrag.cpp#1)]
 [!code-csharp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CS/imagedrag.cs#1)]
 [!code-vb[Windows.Forms.Control.DragOperations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/VB/imagedrag.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-257">不受限制的剪贴板访问，可将此属性设置为<see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-257">for unrestricted Clipboard access to set this property to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="3d62e-258">关联枚举：<see langword="AllClipboard" />的值 <see cref="T:System.Security.Permissions.UIPermissionClipboard" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-258">Associated enumeration: the <see langword="AllClipboard" /> value of <see cref="T:System.Security.Permissions.UIPermissionClipboard" /></span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-259">重写时<see cref="P:System.Windows.Forms.Control.AllowDrop" />属性在派生类中，使用基类的<see cref="P:System.Windows.Forms.Control.AllowDrop" />属性扩展的基实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-259">When overriding the <see cref="P:System.Windows.Forms.Control.AllowDrop" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.AllowDrop" /> property to extend the base implementation.</span>
            </span>
            <span data-ttu-id="3d62e-260">否则，必须提供所有的实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-260">Otherwise, you must provide all the implementation.</span>
            </span>
            <span data-ttu-id="3d62e-261">不需要重写二者<see langword="get" />并<see langword="set" />访问器<see cref="P:System.Windows.Forms.Control.AllowDrop" />属性; 您可以根据需要覆盖只有一个。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-261">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.AllowDrop" /> property; you can override only one if needed.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.Forms.DragEventArgs" />
        <altmember cref="E:System.Windows.Forms.Control.DragOver" />
        <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
        <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
        <altmember cref="E:System.Windows.Forms.Control.DragLeave" />
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
    <Member MemberName="Anchor">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AnchorStyles Anchor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AnchorStyles Anchor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Anchor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Anchor As AnchorStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AnchorStyles Anchor { System::Windows::Forms::AnchorStyles get(); void set(System::Windows::Forms::AnchorStyles value); };" />
      <MemberSignature Language="F#" Value="member this.Anchor : System.Windows.Forms.AnchorStyles with get, set" Usage="System.Windows.Forms.Control.Anchor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AnchorStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-262">获取或设置控件绑定到的容器的边缘并确定控件如何随其父级一起调整大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-262">Gets or sets the edges of the container to which a control is bound and determines how a control is resized with its parent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-263">
            <see cref="T:System.Windows.Forms.AnchorStyles" /> 值的按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-263">A bitwise combination of the <see cref="T:System.Windows.Forms.AnchorStyles" /> values.</span>
          </span>
          <span data-ttu-id="3d62e-264">默认值是 <see langword="Top" /> 和 <see langword="Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-264">The default is <see langword="Top" /> and <see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-265">使用<xref:System.Windows.Forms.Control.Anchor%2A>属性来定义如何控件自动调整大小调整其父控件的大小时。</span><span class="sxs-lookup"><span data-stu-id="3d62e-265">Use the <xref:System.Windows.Forms.Control.Anchor%2A> property to define how a control is automatically resized as its parent control is resized.</span></span> <span data-ttu-id="3d62e-266">锚定到其父控件的控件可确保父控件在调整大小时，定位的边缘也保留在相对于边缘的父控件相同的位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-266">Anchoring a control to its parent control ensures that the anchored edges remain in the same position relative to the edges of the parent control when the parent control is resized.</span></span>  
  
 <span data-ttu-id="3d62e-267">您可以定位到其容器的一个或多个边缘的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-267">You can anchor a control to one or more edges of its container.</span></span> <span data-ttu-id="3d62e-268">例如，如果你有<xref:System.Windows.Forms.Form>与<xref:System.Windows.Forms.Button>其<xref:System.Windows.Forms.Control.Anchor%2A>属性值设置为`Top`并`Bottom`，则<xref:System.Windows.Forms.Button>拉伸以维护到边缘和下边缘的锚定的距离<xref:System.Windows.Forms.Form>作为<xref:System.Windows.Forms.Control.Height%2A>的<xref:System.Windows.Forms.Form>增加。</span><span class="sxs-lookup"><span data-stu-id="3d62e-268">For example, if you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button> whose <xref:System.Windows.Forms.Control.Anchor%2A> property value is set to `Top` and `Bottom`, the <xref:System.Windows.Forms.Button> is stretched to maintain the anchored distance to the top and bottom edges of the <xref:System.Windows.Forms.Form> as the <xref:System.Windows.Forms.Control.Height%2A> of the <xref:System.Windows.Forms.Form> is increased.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-269"><xref:System.Windows.Forms.Control.Anchor%2A>和<xref:System.Windows.Forms.Control.Dock%2A>属性是互相排斥。</span><span class="sxs-lookup"><span data-stu-id="3d62e-269">The <xref:System.Windows.Forms.Control.Anchor%2A> and <xref:System.Windows.Forms.Control.Dock%2A> properties are mutually exclusive.</span></span> <span data-ttu-id="3d62e-270">只有一个可以设置一次和最后一个设置将优先。</span><span class="sxs-lookup"><span data-stu-id="3d62e-270">Only one can be set at a time, and the last one set takes precedence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-271">下面的代码示例添加<xref:System.Windows.Forms.Button>向窗体，并设置它的一些常见属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-271">The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties.</span></span> <span data-ttu-id="3d62e-272">示例定位到窗体右下角的按钮，以便在调整窗体大小时，它使其相对位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-272">The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</span></span> <span data-ttu-id="3d62e-273">接下来设置<xref:System.Windows.Forms.Control.BackgroundImage%2A>调整大小的按钮为具有相同的大小和<xref:System.Drawing.Image>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-273">Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="3d62e-274">该示例然后设置<xref:System.Windows.Forms.Control.TabStop%2A>到`true`，并设置<xref:System.Windows.Forms.Control.TabIndex%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-274">The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property.</span></span> <span data-ttu-id="3d62e-275">最后，它将添加一个事件处理程序以处理<xref:System.Windows.Forms.Control.Click>按钮的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-275">Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button.</span></span> <span data-ttu-id="3d62e-276">此示例要求具有<xref:System.Windows.Forms.ImageList>名为`imageList1`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-276">This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-277">重写时<see cref="P:System.Windows.Forms.Control.Anchor" />属性在派生类中，使用基类的<see cref="P:System.Windows.Forms.Control.Anchor" />属性扩展的基实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-277">When overriding the <see cref="P:System.Windows.Forms.Control.Anchor" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Anchor" /> property to extend the base implementation.</span>
            </span>
            <span data-ttu-id="3d62e-278">否则，必须提供所有的实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-278">Otherwise, you must provide all the implementation.</span>
            </span>
            <span data-ttu-id="3d62e-279">不需要重写二者<see langword="get" />并<see langword="set" />访问器<see cref="P:System.Windows.Forms.Control.Anchor" />属性; 您可以根据需要覆盖只有一个。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-279">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.Anchor" /> property; you can override only one if needed.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.Forms.AnchorStyles" />
        <altmember cref="P:System.Windows.Forms.Control.Dock" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="AutoScrollOffset">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Point AutoScrollOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point AutoScrollOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AutoScrollOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoScrollOffset As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Point AutoScrollOffset { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScrollOffset : System.Drawing.Point with get, set" Usage="System.Windows.Forms.Control.AutoScrollOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Point), "0, 0")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-280">获取或设置一个值，该值指示在 <see cref="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" /> 中将控件滚动到何处。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-280">Gets or sets where this control is scrolled to in <see cref="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-281">一个指定滚动位置的 <see cref="T:System.Drawing.Point" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-281">A <see cref="T:System.Drawing.Point" /> specifying the scroll location.</span>
          </span>
          <span data-ttu-id="3d62e-282">默认为控件的左上角。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-282">The default is the upper-left corner of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public virtual bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.Control.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-283">此属性与此类无关。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-283">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-284">如果已启用，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-284">
              <see langword="true" /> if enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-285">此属性与此类无关。</span><span class="sxs-lookup"><span data-stu-id="3d62e-285">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeChanged : EventHandler " Usage="member this.AutoSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-286">此事件与此类无关。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-286">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-287">此事件与此类无关。</span><span class="sxs-lookup"><span data-stu-id="3d62e-287">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.Control.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(-501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-288">获取或设置控件的背景色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-288">Gets or sets the background color for the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-289">表示控件背景色的 <see cref="T:System.Drawing.Color" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-289">A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.</span>
          </span>
          <span data-ttu-id="3d62e-290">默认为 <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> 属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-290">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-291"><xref:System.Windows.Forms.Control.BackColor%2A>属性不支持透明的颜色，除非`SupportsTransparentBackColor`的值<xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-291">The <xref:System.Windows.Forms.Control.BackColor%2A> property does not support transparent colors unless the `SupportsTransparentBackColor` value of <xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType> is set to `true`.</span></span>  
  
 <span data-ttu-id="3d62e-292"><xref:System.Windows.Forms.Control.BackColor%2A>属性是一个环境属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-292">The <xref:System.Windows.Forms.Control.BackColor%2A> property is an ambient property.</span></span> <span data-ttu-id="3d62e-293">环境属性是控件属性，如果未设置，检索从父控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-293">An ambient property is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="3d62e-294">例如，<xref:System.Windows.Forms.Button>具有相同<xref:System.Windows.Forms.Control.BackColor%2A>作为其父<xref:System.Windows.Forms.Form>默认情况下。</span><span class="sxs-lookup"><span data-stu-id="3d62e-294">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="3d62e-295">有关环境属性的详细信息，请参阅<xref:System.Windows.Forms.AmbientProperties>类或<xref:System.Windows.Forms.Control>类概述。</span><span class="sxs-lookup"><span data-stu-id="3d62e-295">For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-296">下面的代码示例设置<xref:System.Windows.Forms.Control.BackColor%2A>和<xref:System.Windows.Forms.Control.ForeColor%2A>的默认系统颜色的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-296">The following code example sets the <xref:System.Windows.Forms.Control.BackColor%2A> and <xref:System.Windows.Forms.Control.ForeColor%2A> of the controls to the default system colors.</span></span> <span data-ttu-id="3d62e-297">如果控件具有任何子控件，则代码以递归方式调用自身。</span><span class="sxs-lookup"><span data-stu-id="3d62e-297">The code recursively calls itself if the control has any child controls.</span></span> <span data-ttu-id="3d62e-298">此代码示例，则需要<xref:System.Windows.Forms.Form>与至少一个子控件; 但是，在子容器控件，如<xref:System.Windows.Forms.Panel>或<xref:System.Windows.Forms.GroupBox>，具有其自己的子控件包装会更好地演示递归。</span><span class="sxs-lookup"><span data-stu-id="3d62e-298">This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#1)]
 [!code-vb[Windows.Forms.Control Properties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-299">重写时<see cref="P:System.Windows.Forms.Control.BackColor" />属性在派生类中，使用基类的<see cref="P:System.Windows.Forms.Control.BackColor" />属性扩展的基实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-299">When overriding the <see cref="P:System.Windows.Forms.Control.BackColor" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.BackColor" /> property to extend the base implementation.</span>
            </span>
            <span data-ttu-id="3d62e-300">否则，必须提供所有的实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-300">Otherwise, you must provide all the implementation.</span>
            </span>
            <span data-ttu-id="3d62e-301">不需要重写二者<see langword="get" />并<see langword="set" />访问器<see cref="P:System.Windows.Forms.Control.BackColor" />属性; 您可以根据需要覆盖只有一个。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-301">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property; you can override only one if needed.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.Forms.AmbientProperties" />
        <altmember cref="E:System.Windows.Forms.Control.BackColorChanged" />
      </Docs>
    </Member>
    <Member MemberName="BackColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.BackColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackColorChanged;" />
      <MemberSignature Language="F#" Value="member this.BackColorChanged : EventHandler " Usage="member this.BackColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-302">当 <see cref="P:System.Windows.Forms.Control.BackColor" /> 属性的值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-302">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-303">如果引发此事件<xref:System.Windows.Forms.Control.BackColor%2A>属性更改通过以编程方式修改或用户交互。</span><span class="sxs-lookup"><span data-stu-id="3d62e-303">This event is raised if the <xref:System.Windows.Forms.Control.BackColor%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="3d62e-304">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-304">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-305">下面的代码示例是一个事件处理程序时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-305">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-306"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式*PropertyName* `Changed`的时引发的相应*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-306">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-307">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-307">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="3d62e-308">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-308">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-309">此示例要求具有<xref:System.Windows.Forms.Form>，其中包含<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-309">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" />
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.Control.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-310">获取或设置在控件中显示的背景图像。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-310">Gets or sets the background image displayed in the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-311">一个 <see cref="T:System.Drawing.Image" />，表示在控件背景中显示的图像。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-311">An <see cref="T:System.Drawing.Image" /> that represents the image to display in the background of the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="3d62e-312">使用<xref:System.Windows.Forms.Control.BackgroundImage%2A>属性放置到控件上的图形图像。</span><span class="sxs-lookup"><span data-stu-id="3d62e-312">Use the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property to place a graphic image onto a control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-313">使用透明或透明的颜色的图像不支持由 Windows 窗体控件作为背景图像。</span><span class="sxs-lookup"><span data-stu-id="3d62e-313">Images with translucent or transparent colors are not supported by Windows Forms controls as background images.</span></span>  
>   
>  <span data-ttu-id="3d62e-314">不支持此属性的子控件<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>属性是`true`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-314">This property is not supported on child controls whose <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-315">下面的代码示例添加<xref:System.Windows.Forms.Button>向窗体，并设置它的一些常见属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-315">The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties.</span></span> <span data-ttu-id="3d62e-316">示例定位到窗体右下角的按钮，以便在调整窗体大小时，它使其相对位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-316">The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</span></span> <span data-ttu-id="3d62e-317">接下来设置<xref:System.Windows.Forms.Control.BackgroundImage%2A>调整大小的按钮为具有相同的大小和<xref:System.Drawing.Image>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-317">Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="3d62e-318">该示例然后设置<xref:System.Windows.Forms.Control.TabStop%2A>到`true`，并设置<xref:System.Windows.Forms.Control.TabIndex%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-318">The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property.</span></span> <span data-ttu-id="3d62e-319">最后，它将添加一个事件处理程序以处理<xref:System.Windows.Forms.Control.Click>按钮的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-319">Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button.</span></span> <span data-ttu-id="3d62e-320">此示例要求具有<xref:System.Windows.Forms.ImageList>名为`imageList1`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-320">This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-321">重写时<see cref="P:System.Windows.Forms.Control.BackgroundImage" />属性在派生类中，使用基类的<see cref="P:System.Windows.Forms.Control.BackgroundImage" />属性扩展的基实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-321">When overriding the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property to extend the base implementation.</span>
            </span>
            <span data-ttu-id="3d62e-322">否则，必须提供所有的实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-322">Otherwise, you must provide all the implementation.</span>
            </span>
            <span data-ttu-id="3d62e-323">不需要重写二者<see langword="get" />并<see langword="set" />访问器<see cref="P:System.Windows.Forms.Control.BackgroundImage" />属性; 您可以根据需要覆盖只有一个。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-323">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property; you can override only one if needed.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-324">当 <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> 属性的值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-324">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-325">如果引发此事件<xref:System.Windows.Forms.Control.BackgroundImage%2A>属性更改通过以编程方式修改或用户交互。</span><span class="sxs-lookup"><span data-stu-id="3d62e-325">This event is raised if the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="3d62e-326">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-326">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-327">下面的代码示例是一个事件处理程序时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-327">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-328"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式*PropertyName* `Changed`的时引发的相应*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-328">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-329">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-329">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="3d62e-330">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-330">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-331">此示例要求具有<xref:System.Windows.Forms.Form>，其中包含<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-331">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImage" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
        <altmember cref="T:System.Drawing.Image" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.Control.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-332">获取或设置在 <see cref="T:System.Windows.Forms.ImageLayout" /> 枚举中定义的背景图像布局。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-332">Gets or sets the background image layout as defined in the <see cref="T:System.Windows.Forms.ImageLayout" /> enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-333">
            <see cref="T:System.Windows.Forms.ImageLayout" /> 的值（<see cref="F:System.Windows.Forms.ImageLayout.Center" />、<see cref="F:System.Windows.Forms.ImageLayout.None" />、<see cref="F:System.Windows.Forms.ImageLayout.Stretch" />、<see cref="F:System.Windows.Forms.ImageLayout.Tile" /> 或 <see cref="F:System.Windows.Forms.ImageLayout.Zoom" />）之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-333">One of the values of <see cref="T:System.Windows.Forms.ImageLayout" /> (<see cref="F:System.Windows.Forms.ImageLayout.Center" /> , <see cref="F:System.Windows.Forms.ImageLayout.None" />, <see cref="F:System.Windows.Forms.ImageLayout.Stretch" />, <see cref="F:System.Windows.Forms.ImageLayout.Tile" />, or <see cref="F:System.Windows.Forms.ImageLayout.Zoom" />).</span>
          </span>
          <span data-ttu-id="3d62e-334">默认值为 <see cref="F:System.Windows.Forms.ImageLayout.Tile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-334">
              <see cref="F:System.Windows.Forms.ImageLayout.Tile" /> is the default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-335">使用<xref:System.Windows.Forms.Control.BackgroundImageLayout%2A>属性指定的位置和已放置到控件上的图像的行为。</span><span class="sxs-lookup"><span data-stu-id="3d62e-335">Use the <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> property to specify the position and behavior of an image you have placed onto a control.</span></span> <span data-ttu-id="3d62e-336"><xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> 仅当将生效<xref:System.Windows.Forms.Control.BackgroundImage%2A>属性设置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-336"><xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> takes effect only if the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property is set.</span></span>  
  
 <span data-ttu-id="3d62e-337">如果您设置，可以提高大型图像的性能<xref:System.Windows.Forms.Control.BackgroundImageLayout%2A>到以外的其他<xref:System.Windows.Forms.ImageLayout.Tile>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-337">You can increase performance for large images if you set <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> to something other than <xref:System.Windows.Forms.ImageLayout.Tile>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="3d62e-338">指定的枚举值不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-338">The specified enumeration value does not exist.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImage" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-339">当 <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> 属性更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-339">Occurs when the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-340">如果引发此事件<xref:System.Windows.Forms.Control.BackgroundImageLayout%2A>属性发生更改以编程方式或由用户交互。</span><span class="sxs-lookup"><span data-stu-id="3d62e-340">This event is raised if the <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> property changes either programmatically or by user interaction.</span></span>  
  
 <span data-ttu-id="3d62e-341">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-341">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-342">下面的代码示例演示如何将此成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-342">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3d62e-343">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-343">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged> event.</span></span> <span data-ttu-id="3d62e-344">此报告可帮助您了解事件发生的并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="3d62e-344">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3d62e-345">若要报告或频繁发生的事件上多个事件，请考虑更换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或将消息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-345">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3d62e-346">若要运行此代码示例，请将其粘贴到包含继承的类型的实例的项目<xref:System.Windows.Forms.Control>，如<xref:System.Windows.Forms.Button>或<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-346">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="3d62e-347">然后该实例命名`Control1`，并确保事件处理程序相关联<xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-347">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#9)]
 [!code-vb[System.Windows.Forms.EventExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImage" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginInvoke">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-348">在创建控件的基础句柄所在线程上异步执行委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-348">Executes a delegate asynchronously on the thread that the control's underlying handle was created on.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginInvoke(class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginInvoke(Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : Delegate -&gt; IAsyncResult" Usage="control.BeginInvoke method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="3d62e-349">对不带参数的方法的委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-349">A delegate to a method that takes no parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-350">在创建控件的基础句柄所在线程上异步执行指定委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-350">Executes the specified delegate asynchronously on the thread that the control's underlying handle was created on.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-351">一个表示 <see cref="T:System.IAsyncResult" /> 操作的结果的 <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-351">An <see cref="T:System.IAsyncResult" /> that represents the result of the <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-352">以异步方式调用该委托，此方法将立即返回。</span><span class="sxs-lookup"><span data-stu-id="3d62e-352">The delegate is called asynchronously, and this method returns immediately.</span></span> <span data-ttu-id="3d62e-353">可以从任何线程，即使拥有控件的句柄的线程调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-353">You can call this method from any thread, even the thread that owns the control's handle.</span></span> <span data-ttu-id="3d62e-354">如果控件的句柄尚不存在，此方法搜索控件的父链，直到它找到的控件或窗体具有一个窗口句柄。</span><span class="sxs-lookup"><span data-stu-id="3d62e-354">If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.</span></span> <span data-ttu-id="3d62e-355">如果找不到任何合适的句柄，<xref:System.Windows.Forms.Control.BeginInvoke%2A>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="3d62e-355">If no appropriate handle can be found, <xref:System.Windows.Forms.Control.BeginInvoke%2A> will throw an exception.</span></span> <span data-ttu-id="3d62e-356">此委托方法中的异常被视为未，将发送到应用程序的未捕获的异常处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-356">Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.</span></span>  
  
 <span data-ttu-id="3d62e-357">您可以调用<xref:System.Windows.Forms.Control.EndInvoke%2A>来检索返回值的委托，如果必要，但这不是必需。</span><span class="sxs-lookup"><span data-stu-id="3d62e-357">You can call <xref:System.Windows.Forms.Control.EndInvoke%2A> to retrieve the return value from the delegate, if neccesary, but this is not required.</span></span> <span data-ttu-id="3d62e-358"><xref:System.Windows.Forms.Control.EndInvoke%2A> 将阻止，直到可以检索返回值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-358"><xref:System.Windows.Forms.Control.EndInvoke%2A> will block until the return value can be retrieved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-359">在控件上的大多数方法可以仅从调用线程已创建控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-359">Most methods on a control can only be called from the thread where the control was created.</span></span> <span data-ttu-id="3d62e-360">除了<xref:System.Windows.Forms.Control.InvokeRequired%2A>属性，在控件上都是线程安全的四种方法： <xref:System.Windows.Forms.Control.Invoke%2A>， <xref:System.Windows.Forms.Control.BeginInvoke%2A>， <xref:System.Windows.Forms.Control.EndInvoke%2A>，和<xref:System.Windows.Forms.Control.CreateGraphics%2A>如果已创建控件的句柄。</span><span class="sxs-lookup"><span data-stu-id="3d62e-360">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="3d62e-361">调用<xref:System.Windows.Forms.Control.CreateGraphics%2A>后台线程上创建控件的句柄之前可能会导致非法的跨线程调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-361">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="3d62e-362">对于所有其他方法调用，您应使用 invoke 方法之一来封送对控件的线程的调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-362">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span> <span data-ttu-id="3d62e-363">Invoke 方法始终调用控件的线程上其回调。</span><span class="sxs-lookup"><span data-stu-id="3d62e-363">The invoke methods always invoke their callbacks on the control's thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-364">如果应处理该消息的线程不再处于活动状态，可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="3d62e-364">An exception might be thrown if the thread that should process the message is no longer active.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-365">下面的代码示例演示如何使用<xref:System.Windows.Forms.Control.BeginInvoke%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-365">The following code example demonstrates a use of the <xref:System.Windows.Forms.Control.BeginInvoke%2A> method.</span></span>  
  
 [!code-cpp[Control_BeginInvoke#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_BeginInvoke/CPP/control_begininvoke.cpp#2)]
 [!code-csharp[Control_BeginInvoke#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_BeginInvoke/CS/control_begininvoke.cs#2)]
 [!code-vb[Control_BeginInvoke#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_BeginInvoke/VB/control_begininvoke.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3d62e-366">找不到适当的窗口句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-366">No appropriate window handle can be found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="3d62e-367">直接调用方调用非托管的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-367">for the immediate caller to call unmanaged code.</span>
          </span>
          <span data-ttu-id="3d62e-368">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-368">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />
        <altmember cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
        <altmember cref="M:System.Windows.Forms.Control.CreateGraphics" />
        <altmember cref="P:System.Windows.Forms.Control.InvokeRequired" />
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (Delegate method, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginInvoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, ParamArray args As Object()) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginInvoke(Delegate ^ method, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member BeginInvoke : Delegate * obj[] -&gt; IAsyncResult&#xA;override this.BeginInvoke : Delegate * obj[] -&gt; IAsyncResult" Usage="control.BeginInvoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="3d62e-369">一个方法委托，它采用的参数的数量和类型与 <c>args</c> 参数中所包含的相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-369">A delegate to a method that takes parameters of the same number and type that are contained in the <c>args</c> parameter.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="3d62e-370">作为给定方法的自变量传递的对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-370">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="3d62e-371">如果不需要参数，则可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-371">This can be <see langword="null" /> if no arguments are needed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-372">在创建控件的基础句柄所在线程上，用指定的自变量异步执行指定委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-372">Executes the specified delegate asynchronously with the specified arguments, on the thread that the control's underlying handle was created on.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-373">一个表示 <see cref="T:System.IAsyncResult" /> 操作的结果的 <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-373">An <see cref="T:System.IAsyncResult" /> that represents the result of the <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-374">以异步方式调用该委托，此方法将立即返回。</span><span class="sxs-lookup"><span data-stu-id="3d62e-374">The delegate is called asynchronously, and this method returns immediately.</span></span> <span data-ttu-id="3d62e-375">可以从任何线程，即使拥有控件的句柄的线程调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-375">You can call this method from any thread, even the thread that owns the control's handle.</span></span> <span data-ttu-id="3d62e-376">如果控件的句柄尚不存在，此方法搜索控件的父链，直到它找到的控件或窗体具有一个窗口句柄。</span><span class="sxs-lookup"><span data-stu-id="3d62e-376">If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.</span></span> <span data-ttu-id="3d62e-377">如果找不到任何合适的句柄，<xref:System.Windows.Forms.Control.BeginInvoke%2A>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="3d62e-377">If no appropriate handle can be found, <xref:System.Windows.Forms.Control.BeginInvoke%2A> will throw an exception.</span></span> <span data-ttu-id="3d62e-378">此委托方法中的异常被视为未，将发送到应用程序的未捕获的异常处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-378">Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.</span></span>  
  
 <span data-ttu-id="3d62e-379">您可以调用<xref:System.Windows.Forms.Control.EndInvoke%2A>来检索返回值的委托，如果必要，但这不是必需。</span><span class="sxs-lookup"><span data-stu-id="3d62e-379">You can call <xref:System.Windows.Forms.Control.EndInvoke%2A> to retrieve the return value from the delegate, if neccesary, but this is not required.</span></span> <span data-ttu-id="3d62e-380"><xref:System.Windows.Forms.Control.EndInvoke%2A> 将阻止，直到可以检索返回值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-380"><xref:System.Windows.Forms.Control.EndInvoke%2A> will block until the return value can be retrieved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-381">在控件上的大多数方法可以仅从调用线程已创建控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-381">Most methods on a control can only be called from the thread where the control was created.</span></span> <span data-ttu-id="3d62e-382">除了<xref:System.Windows.Forms.Control.InvokeRequired%2A>属性，在控件上都是线程安全的四种方法： <xref:System.Windows.Forms.Control.Invoke%2A>， <xref:System.Windows.Forms.Control.BeginInvoke%2A>， <xref:System.Windows.Forms.Control.EndInvoke%2A>，和<xref:System.Windows.Forms.Control.CreateGraphics%2A>如果已创建控件的句柄。</span><span class="sxs-lookup"><span data-stu-id="3d62e-382">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="3d62e-383">调用<xref:System.Windows.Forms.Control.CreateGraphics%2A>后台线程上创建控件的句柄之前可能会导致非法的跨线程调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-383">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="3d62e-384">对于所有其他方法调用，您应使用 invoke 方法之一来封送对控件的线程的调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-384">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span> <span data-ttu-id="3d62e-385">Invoke 方法始终调用控件的线程上其回调。</span><span class="sxs-lookup"><span data-stu-id="3d62e-385">The invoke methods always invoke their callbacks on the control's thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-386">如果应处理该消息的线程不再处于活动状态，可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="3d62e-386">An exception might be thrown if the thread that should process the message is no longer active.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-387">下面的代码示例演示如何使用<xref:System.Windows.Forms.Control.BeginInvoke%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-387">The following code example demonstrates a use of the <xref:System.Windows.Forms.Control.BeginInvoke%2A> method.</span></span>  
  
 [!code-cpp[Control_BeginInvoke#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_BeginInvoke/CPP/control_begininvoke.cpp#1)]
 [!code-csharp[Control_BeginInvoke#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_BeginInvoke/CS/control_begininvoke.cs#1)]
 [!code-vb[Control_BeginInvoke#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_BeginInvoke/VB/control_begininvoke.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3d62e-388">找不到适当的窗口句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-388">No appropriate window handle can be found.</span>
          </span>
        </exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />
        <altmember cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
        <altmember cref="M:System.Windows.Forms.Control.CreateGraphics" />
        <altmember cref="P:System.Windows.Forms.Control.InvokeRequired" />
      </Docs>
    </Member>
    <Member MemberName="BindingContext">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.BindingContext BindingContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingContext BindingContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.BindingContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BindingContext As BindingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::BindingContext ^ BindingContext { System::Windows::Forms::BindingContext ^ get(); void set(System::Windows::Forms::BindingContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindingContext : System.Windows.Forms.BindingContext with get, set" Usage="System.Windows.Forms.Control.BindingContext" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IBindableComponent.BindingContext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-389">获取或设置控件的 <see cref="T:System.Windows.Forms.BindingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-389">Gets or sets the <see cref="T:System.Windows.Forms.BindingContext" /> for the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-390">控件的 <see cref="T:System.Windows.Forms.BindingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-390">A <see cref="T:System.Windows.Forms.BindingContext" /> for the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-391"><xref:System.Windows.Forms.BindingContext>的<xref:System.Windows.Forms.Control>用于返回单个<xref:System.Windows.Forms.BindingManagerBase>包含的所有数据绑定控件<xref:System.Windows.Forms.Control>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-391">The <xref:System.Windows.Forms.BindingContext> of a <xref:System.Windows.Forms.Control> is used to return a single <xref:System.Windows.Forms.BindingManagerBase> for all data-bound controls contained by the <xref:System.Windows.Forms.Control>.</span></span> <span data-ttu-id="3d62e-392"><xref:System.Windows.Forms.BindingManagerBase>保留所有控件都绑定到同一数据源同步。</span><span class="sxs-lookup"><span data-stu-id="3d62e-392">The <xref:System.Windows.Forms.BindingManagerBase> keeps all controls that are bound to the same data source synchronized.</span></span> <span data-ttu-id="3d62e-393">例如，设置<xref:System.Windows.Forms.BindingManagerBase.Position%2A>属性的<xref:System.Windows.Forms.BindingManagerBase>所有数据绑定控件所都指向的基础列表中指定的项。</span><span class="sxs-lookup"><span data-stu-id="3d62e-393">For example, setting the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property of the <xref:System.Windows.Forms.BindingManagerBase> specifies the item in the underlying list that all data-bound controls point to.</span></span>  
  
 <span data-ttu-id="3d62e-394">有关创建一个新的详细信息<xref:System.Windows.Forms.BindingContext>并将其分配给<xref:System.Windows.Forms.Control.BindingContext%2A>属性，请参阅<xref:System.Windows.Forms.BindingContext.%23ctor%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-394">For more information about creating a new <xref:System.Windows.Forms.BindingContext> and assigning it to the <xref:System.Windows.Forms.Control.BindingContext%2A> property, see the <xref:System.Windows.Forms.BindingContext.%23ctor%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-395">下面的代码示例创建四个<xref:System.Windows.Forms.Binding>对象将五个控件绑定<xref:System.Windows.Forms.DateTimePicker>和四个<xref:System.Windows.Forms.TextBox>向多个数据源控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-395">The following code example creates four <xref:System.Windows.Forms.Binding> objects to bind five controls, a <xref:System.Windows.Forms.DateTimePicker> and four <xref:System.Windows.Forms.TextBox> controls, to several data sources.</span></span> <span data-ttu-id="3d62e-396"><xref:System.Windows.Forms.BindingContext>然后用于获取<xref:System.Windows.Forms.BindingManagerBase>每个数据源。</span><span class="sxs-lookup"><span data-stu-id="3d62e-396">The <xref:System.Windows.Forms.BindingContext> is then used to get the <xref:System.Windows.Forms.BindingManagerBase> for each data source.</span></span>  
  
 [!code-cpp[Classic BindingContext Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-397">重写时<see cref="P:System.Windows.Forms.Control.BindingContext" />属性在派生类中，使用基类的<see cref="P:System.Windows.Forms.Control.BindingContext" />属性扩展的基实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-397">When overriding the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.BindingContext" /> property to extend the base implementation.</span>
            </span>
            <span data-ttu-id="3d62e-398">否则，必须提供所有的实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-398">Otherwise, you must provide all the implementation.</span>
            </span>
            <span data-ttu-id="3d62e-399">不需要重写二者<see langword="get" />并<see langword="set" />访问器<see cref="P:System.Windows.Forms.Control.BindingContext" />属性; 您可以根据需要覆盖只有一个。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-399">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property; you can override only one if needed.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.BindingContextChanged" />
        <altmember cref="T:System.Windows.Forms.Binding" />
        <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
      </Docs>
    </Member>
    <Member MemberName="BindingContextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BindingContextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BindingContextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.BindingContextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingContextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BindingContextChanged;" />
      <MemberSignature Language="F#" Value="member this.BindingContextChanged : EventHandler " Usage="member this.BindingContextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-400">当 <see cref="T:System.Windows.Forms.BindingContext" /> 属性的值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-400">Occurs when the value of the <see cref="T:System.Windows.Forms.BindingContext" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-401">若要添加一个新<xref:System.Windows.Forms.BindingContext>到<xref:System.Windows.Forms.Control>通过<xref:System.Windows.Forms.Control.BindingContext%2A>属性，请参阅<xref:System.Windows.Forms.BindingContext.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-401">To add a new <xref:System.Windows.Forms.BindingContext> to the <xref:System.Windows.Forms.Control> through the <xref:System.Windows.Forms.Control.BindingContext%2A> property, see the <xref:System.Windows.Forms.BindingContext.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="3d62e-402">如果引发此事件<xref:System.Windows.Forms.Control.BindingContext%2A>更改属性以编程方式修改或用户交互更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-402">This event is raised if the <xref:System.Windows.Forms.Control.BindingContext%2A> property is changed is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="3d62e-403">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-403">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-404">下面的代码示例将添加<xref:System.EventHandler>委托给<xref:System.Windows.Forms.Control.BindingContextChanged>事件的<xref:System.Windows.Forms.TextBox>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-404">The following code example adds an <xref:System.EventHandler> delegate to the <xref:System.Windows.Forms.Control.BindingContextChanged> event of a <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic Control.BindingContextChanged Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Control.BindingContextChanged Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Control.BindingContextChanged Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Control.BindingContextChanged Example/CS/source.cs#1)]
 [!code-vb[Classic Control.BindingContextChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Control.BindingContextChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.BindingContext" />
        <altmember cref="T:System.Windows.Forms.Binding" />
        <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
        <altmember cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="public int Bottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Bottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Bottom" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bottom As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Bottom { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Bottom : int" Usage="System.Windows.Forms.Control.Bottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-405">获取控件下边缘与其容器的工作区上边缘之间的距离（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-405">Gets the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-406">
            <see cref="T:System.Int32" /> 表示控件下边缘与其容器的工作区上边缘之间的距离（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-406">An <see cref="T:System.Int32" /> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-407">此属性的值等于的总和<xref:System.Windows.Forms.Control.Top%2A>属性值和<xref:System.Windows.Forms.Control.Height%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-407">The value of this property is equal to the sum of the <xref:System.Windows.Forms.Control.Top%2A> property value, and the <xref:System.Windows.Forms.Control.Height%2A> property value.</span></span>  
  
 <span data-ttu-id="3d62e-408"><xref:System.Windows.Forms.Control.Bottom%2A>属性是只读的属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-408">The <xref:System.Windows.Forms.Control.Bottom%2A> property is a read-only property.</span></span> <span data-ttu-id="3d62e-409">您可以通过更改的值来操作此属性的值<xref:System.Windows.Forms.Control.Top%2A>或<xref:System.Windows.Forms.Control.Height%2A>属性或调用<xref:System.Windows.Forms.Control.SetBounds%2A>， <xref:System.Windows.Forms.Control.SetBoundsCore%2A>， <xref:System.Windows.Forms.Control.UpdateBounds%2A>，或<xref:System.Windows.Forms.Control.SetClientSizeCore%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-409">You can manipulate this property value by changing the value of the <xref:System.Windows.Forms.Control.Top%2A> or <xref:System.Windows.Forms.Control.Height%2A> properties or calling the <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, or <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-410">下面的代码示例使用<xref:System.Windows.Forms.Control.Bottom%2A>属性来定义的下限<xref:System.Windows.Forms.TextBox>相对于容器的客户端区域的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-410">The following code example uses the <xref:System.Windows.Forms.Control.Bottom%2A> property to define the lower limit of a <xref:System.Windows.Forms.TextBox> control relative to the client area of the container.</span></span>  
  
 [!code-cpp[Control.KeyUp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyUp/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyUp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyUp/CS/form1.cs#1)]
 [!code-vb[Control.KeyUp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyUp/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Top" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); void set(System::Drawing::Rectangle value); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle with get, set" Usage="System.Windows.Forms.Control.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-411">获取或设置控件（包括其非工作区元素）相对于其父控件的大小和位置（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-411">Gets or sets the size and location of the control including its nonclient elements, in pixels, relative to the parent control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-412">相对于父控件的 <see cref="T:System.Drawing.Rectangle" />，表示控件（包括其非工作区元素）的大小和位置（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-412">A <see cref="T:System.Drawing.Rectangle" /> in pixels relative to the parent control that represents the size and location of the control including its nonclient elements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-413">控件的边界包括如滚动条、 边框、 标题栏和菜单的非工作区元素。</span><span class="sxs-lookup"><span data-stu-id="3d62e-413">The bounds of the control include the nonclient elements such as scroll bars, borders, title bars, and menus.</span></span> <span data-ttu-id="3d62e-414"><xref:System.Windows.Forms.Control.SetBoundsCore%2A>方法调用来设置<xref:System.Windows.Forms.Control.Bounds%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-414">The <xref:System.Windows.Forms.Control.SetBoundsCore%2A> method is called to set the <xref:System.Windows.Forms.Control.Bounds%2A> property.</span></span> <span data-ttu-id="3d62e-415"><xref:System.Windows.Forms.Control.Bounds%2A>属性不会通过始终更改其`set`方法，以便应重写<xref:System.Windows.Forms.Control.SetBoundsCore%2A>方法，以确保你的代码执行时<xref:System.Windows.Forms.Control.Bounds%2A>属性设置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-415">The <xref:System.Windows.Forms.Control.Bounds%2A> property is not always changed through its `set` method so you should override the <xref:System.Windows.Forms.Control.SetBoundsCore%2A> method to ensure that your code is executed when the <xref:System.Windows.Forms.Control.Bounds%2A> property is set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-416">下面的代码示例创建三个<xref:System.Windows.Forms.Button>窗体上并使用各种大小相关以及与位置相关属性来设置其大小和位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-416">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="3d62e-417">此示例中，你需要具有<xref:System.Windows.Forms.Form>具有宽度和高度至少为 300 像素。</span><span class="sxs-lookup"><span data-stu-id="3d62e-417">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Top" />
        <altmember cref="P:System.Windows.Forms.Control.Left" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
        <altmember cref="P:System.Windows.Forms.Control.Width" />
      </Docs>
    </Member>
    <Member MemberName="BringToFront">
      <MemberSignature Language="C#" Value="public void BringToFront ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BringToFront() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.BringToFront" />
      <MemberSignature Language="VB.NET" Value="Public Sub BringToFront ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BringToFront();" />
      <MemberSignature Language="F#" Value="member this.BringToFront : unit -&gt; unit" Usage="control.BringToFront " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-418">将控件带到 Z 顺序的前面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-418">Brings the control to the front of the z-order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-419">将控件移到 z 顺序的前面。</span><span class="sxs-lookup"><span data-stu-id="3d62e-419">The control is moved to the front of the z-order.</span></span> <span data-ttu-id="3d62e-420">如果控件是另一个控件的子级，则移动子控件的 z 顺序的顶层。</span><span class="sxs-lookup"><span data-stu-id="3d62e-420">If the control is a child of another control, the child control is moved to the front of the z-order.</span></span> <span data-ttu-id="3d62e-421"><xref:System.Windows.Forms.Control.BringToFront%2A> 执行生成的控件为顶级控件，并且它不会引发<xref:System.Windows.Forms.Control.Paint>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-421"><xref:System.Windows.Forms.Control.BringToFront%2A> does not make a control a top-level control, and it does not raise the <xref:System.Windows.Forms.Control.Paint> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-422">下面的代码示例可确保<xref:System.Windows.Forms.Label>是可见通过调用其<xref:System.Windows.Forms.Control.BringToFront%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-422">The following code example ensures that a <xref:System.Windows.Forms.Label> is visible by calling its <xref:System.Windows.Forms.Control.BringToFront%2A> method.</span></span> <span data-ttu-id="3d62e-423">此示例要求具有<xref:System.Windows.Forms.Form>与<xref:System.Windows.Forms.Panel>名为`panel1`，和一个<xref:System.Windows.Forms.Label>名为`label1`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-423">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Panel> named `panel1`, and a <xref:System.Windows.Forms.Label> named `label1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#1)]
 [!code-csharp[Windows.Forms.Control Members4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#1)]
 [!code-vb[Windows.Forms.Control Members4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.SendToBack" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateZOrder" />
      </Docs>
    </Member>
    <Member MemberName="CanEnableIme">
      <MemberSignature Language="C#" Value="protected virtual bool CanEnableIme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEnableIme" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CanEnableIme" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CanEnableIme As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanEnableIme { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEnableIme : bool" Usage="System.Windows.Forms.Control.CanEnableIme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-424">获取一个用以指示是否可以将 <see cref="P:System.Windows.Forms.Control.ImeMode" /> 属性设置为活动值的值，以启用 IME 支持。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-424">Gets a value indicating whether the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property can be set to an active value, to enable IME support.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-425">在所有情况下均为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-425">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-426">派生的类可以重写此属性以返回`false`如果 IME 不受支持。</span><span class="sxs-lookup"><span data-stu-id="3d62e-426">Derived classes can override this property to return `false` if IME is not supported.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFocus">
      <MemberSignature Language="C#" Value="public bool CanFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CanFocus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanFocus : bool" Usage="System.Windows.Forms.Control.CanFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-427">获取一个值，该值指示控件是否可以接收焦点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-427">Gets a value indicating whether the control can receive focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-428">如果控件可以接收焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-428">
              <see langword="true" /> if the control can receive focus; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-429">为了使接收输入的焦点的控件，控件必须具有分配给它的句柄并<xref:System.Windows.Forms.Control.Visible%2A>并<xref:System.Windows.Forms.Control.Enabled%2A>属性必须同时设置为`true`控件和所有父控件和控件必须是一个窗体或控件的最外层父项必须是一个窗体。</span><span class="sxs-lookup"><span data-stu-id="3d62e-429">In order for a control to receive input focus, the control must have a handle assigned to it, and the <xref:System.Windows.Forms.Control.Visible%2A> and <xref:System.Windows.Forms.Control.Enabled%2A> properties must both be set to `true` for both the control and all its parent controls, and the control must be a form or the control's outermost parent must be a form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-430">下面的代码示例将焦点设置到指定<xref:System.Windows.Forms.Control>，如果它可以接收焦点。</span><span class="sxs-lookup"><span data-stu-id="3d62e-430">The following code example sets focus to the specified <xref:System.Windows.Forms.Control>, if it can receive focus.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#1)]
 [!code-csharp[Windows.Forms.ControlMembers6#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#1)]
 [!code-vb[Windows.Forms.ControlMembers6#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Enabled" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="P:System.Windows.Forms.Control.Focused" />
        <altmember cref="P:System.Windows.Forms.Control.CanSelect" />
      </Docs>
    </Member>
    <Member MemberName="CanRaiseEvents">
      <MemberSignature Language="C#" Value="protected override bool CanRaiseEvents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRaiseEvents" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CanRaiseEvents" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CanRaiseEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanRaiseEvents { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRaiseEvents : bool" Usage="System.Windows.Forms.Control.CanRaiseEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-431">确定是否可以在控件上引发事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-431">Determines if events can be raised on the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-432">如果控件是作为其事件未被冻结的 ActiveX 控件承载的，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-432">
              <see langword="true" /> if the control is hosted as an ActiveX control whose events are not frozen; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-433">如果要托管此控件为 ActiveX 控件，此属性将返回`false`如果 ActiveX 控件具有冻结其事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-433">If this control is being hosted as an ActiveX control, this property will return `false` if the ActiveX control has its events frozen.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSelect">
      <MemberSignature Language="C#" Value="public bool CanSelect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CanSelect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanSelect { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSelect : bool" Usage="System.Windows.Forms.Control.CanSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-434">获取一个值，该值指示是否可以选中控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-434">Gets a value indicating whether the control can be selected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-435">如果控件可以选中，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-435">
              <see langword="true" /> if the control can be selected; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-436">此属性返回`true`如果`Selectable`的值<xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType>设置为`true`，是包含在另一个控件，控件本身是可见且已启用，并且所有父控件都均可见且已启用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-436">This property returns `true` if the `Selectable` value of <xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType> is set to `true`, is contained in another control, the control itself is visible and enabled, and all its parent controls are visible and enabled.</span></span>  
  
 <span data-ttu-id="3d62e-437">以下列表中的 Windows 窗体控件不是可选择并将返回的值`false`为<xref:System.Windows.Forms.Control.CanSelect%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-437">The Windows Forms controls in the following list are not selectable and will return a value of `false` for the <xref:System.Windows.Forms.Control.CanSelect%2A> property.</span></span> <span data-ttu-id="3d62e-438">派生自这些控件的控件也是不可选的。</span><span class="sxs-lookup"><span data-stu-id="3d62e-438">Controls derived from these controls are also not selectable.</span></span>  
  
-   <xref:System.Windows.Forms.Panel>  
  
-   <xref:System.Windows.Forms.GroupBox>  
  
-   <xref:System.Windows.Forms.PictureBox>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.Splitter>  
  
-   <xref:System.Windows.Forms.Label>  
  
-   <span data-ttu-id="3d62e-439"><xref:System.Windows.Forms.LinkLabel> （如果没有控件中显示的链接）</span><span class="sxs-lookup"><span data-stu-id="3d62e-439"><xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-440">下面的代码示例选择指定<xref:System.Windows.Forms.Control>，则可选择。</span><span class="sxs-lookup"><span data-stu-id="3d62e-440">The following code example selects the specified <xref:System.Windows.Forms.Control>, if it is selectable.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#2)]
 [!code-csharp[Windows.Forms.ControlMembers6#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#2)]
 [!code-vb[Windows.Forms.ControlMembers6#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Select" />
        <altmember cref="P:System.Windows.Forms.Control.Enabled" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="P:System.Windows.Forms.Control.CanFocus" />
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Capture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Capture" />
      <MemberSignature Language="VB.NET" Value="Public Property Capture As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Capture { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Capture : bool with get, set" Usage="System.Windows.Forms.Control.Capture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-441">获取或设置一个值，该值指示控件是否已捕获鼠标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-441">Gets or sets a value indicating whether the control has captured the mouse.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-442">如果控件已捕获鼠标，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-442">
              <see langword="true" /> if the control has captured the mouse; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-443">当控件已捕获鼠标时，它接收鼠标输入，指示光标在其边框内。</span><span class="sxs-lookup"><span data-stu-id="3d62e-443">When a control has captured the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span> <span data-ttu-id="3d62e-444">在拖动操作期间通常仅捕获鼠标。</span><span class="sxs-lookup"><span data-stu-id="3d62e-444">The mouse is typically only captured during drag operations.</span></span>  
  
 <span data-ttu-id="3d62e-445">仅在前台窗口可以捕获鼠标。</span><span class="sxs-lookup"><span data-stu-id="3d62e-445">Only the foreground window can capture the mouse.</span></span> <span data-ttu-id="3d62e-446">当后台窗口尝试执行此操作时，窗口接收鼠标事件时鼠标光标位于窗口的可见部分发生的消息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-446">When a background window attempts to do so, the window receives messages only for mouse events that occur when the mouse cursor is within the visible portion of the window.</span></span> <span data-ttu-id="3d62e-447">此外，即使前景窗口已捕获鼠标，用户仍可以单击另一个窗口，将其带到前台。</span><span class="sxs-lookup"><span data-stu-id="3d62e-447">Also, even if the foreground window has captured the mouse, the user can still click another window, bringing it to the foreground.</span></span>  
  
 <span data-ttu-id="3d62e-448">时捕获鼠标、 键盘快捷方式应不起作用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-448">When the mouse is captured, shortcut keys should not work.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-449">下面的代码示例演示了<xref:System.Windows.Forms.Control.Capture%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-449">The following code example demonstrates the <xref:System.Windows.Forms.Control.Capture%2A> property.</span></span> <span data-ttu-id="3d62e-450">若要运行此示例，请粘贴下面的代码中，一个窗体，其中包含<xref:System.Windows.Forms.Label>label1 和两个名为<xref:System.Windows.Forms.ListBox>控件名为 listbox1 和 listbox2。</span><span class="sxs-lookup"><span data-stu-id="3d62e-450">To run this example paste the following code in a form containing a <xref:System.Windows.Forms.Label> named label1 and two <xref:System.Windows.Forms.ListBox> controls named listbox1 and listbox2.</span></span> <span data-ttu-id="3d62e-451">确保窗体和控件的<xref:System.Windows.Forms.Control.MouseDown>事件是与此示例中的方法相关联。</span><span class="sxs-lookup"><span data-stu-id="3d62e-451">Ensure the form and controls' <xref:System.Windows.Forms.Control.MouseDown> event is associated with the method in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlCapture#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlCapture/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlCapture#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlCapture/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlCapture#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlCapture/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-452">若要设置此属性的值的所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-452">for all windows to set this property value.</span>
          </span>
          <span data-ttu-id="3d62e-453">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-453">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Forms.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Windows.Forms.Control.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-454">获取或设置一个值，该值指示控件是否会引起在任何需要在接收焦点时执行验证的控件上执行验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-454">Gets or sets a value indicating whether the control causes validation to be performed on any controls that require validation when it receives focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-455">如果控件引起在任何需要在接收焦点时执行验证的控件上执行验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-455">
              <see langword="true" /> if the control causes validation to be performed on any controls requiring validation when it receives focus; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3d62e-456">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-456">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-457">如果<xref:System.Windows.Forms.Control.CausesValidation%2A>属性设置为`false`，则<xref:System.Windows.Forms.Control.Validating>和<xref:System.Windows.Forms.Control.Validated>所抑制的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-457">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
 <span data-ttu-id="3d62e-458"><xref:System.Windows.Forms.Control.CausesValidation%2A>属性值通常设置为`false`的控件，如帮助按钮。</span><span class="sxs-lookup"><span data-stu-id="3d62e-458">The <xref:System.Windows.Forms.Control.CausesValidation%2A> property value is typically set to `false` for controls such as a Help button.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-459">下面的代码示例使用派生的类<xref:System.Windows.Forms.TextBox>并验证用户输入的电子邮件地址。</span><span class="sxs-lookup"><span data-stu-id="3d62e-459">The following code example uses the derived class <xref:System.Windows.Forms.TextBox> and validates an email address that the user enters.</span></span> <span data-ttu-id="3d62e-460">如果电子邮件地址不是标准格式 (包含"@" and "。")，则验证将失败，<xref:System.Windows.Forms.ErrorProvider>图标会显示，并且取消了该事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-460">If the email address is not in the standard format (containing "@" and "."), the validation fails, an <xref:System.Windows.Forms.ErrorProvider> icon is displayed, and the event is canceled.</span></span> <span data-ttu-id="3d62e-461">一个窗体上的按钮具有其<xref:System.Windows.Forms.Control.CausesValidation%2A>属性设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-461">One of the buttons on the form has its <xref:System.Windows.Forms.Control.CausesValidation%2A> property set to `false`.</span></span> <span data-ttu-id="3d62e-462">单击或将焦点设置到此按钮不会触发验证。</span><span class="sxs-lookup"><span data-stu-id="3d62e-462">Clicking or setting focus to this button does not trigger validation.</span></span> <span data-ttu-id="3d62e-463">此示例需要<xref:System.Windows.Forms.TextBox>、 一个<xref:System.Windows.Forms.ErrorProvider>控件，和一个<xref:System.Windows.Forms.Button>在窗体上创建。</span><span class="sxs-lookup"><span data-stu-id="3d62e-463">This example requires that a <xref:System.Windows.Forms.TextBox>, an <xref:System.Windows.Forms.ErrorProvider> control, and a <xref:System.Windows.Forms.Button> have been created on a form.</span></span>  
  
 [!code-cpp[Control.Validating#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Validating/CPP/validating.cpp#2)]
 [!code-csharp[Control.Validating#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Validating/CS/validating.cs#2)]
 [!code-vb[Control.Validating#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Validating/VB/validating.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
        <altmember cref="E:System.Windows.Forms.Control.Validated" />
      </Docs>
    </Member>
    <Member MemberName="CausesValidationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CausesValidationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CausesValidationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.CausesValidationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CausesValidationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CausesValidationChanged;" />
      <MemberSignature Language="F#" Value="member this.CausesValidationChanged : EventHandler " Usage="member this.CausesValidationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-464">当 <see cref="P:System.Windows.Forms.Control.CausesValidation" /> 属性的值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-464">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-465">如果引发此事件<xref:System.Windows.Forms.Control.CausesValidation%2A>属性更改通过以编程方式修改或用户交互。</span><span class="sxs-lookup"><span data-stu-id="3d62e-465">This event is raised if the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="3d62e-466">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-466">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.CausesValidation" />
      </Docs>
    </Member>
    <Member MemberName="ChangeUICues">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.UICuesEventHandler ChangeUICues;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.UICuesEventHandler ChangeUICues" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ChangeUICues" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ChangeUICues As UICuesEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::UICuesEventHandler ^ ChangeUICues;" />
      <MemberSignature Language="F#" Value="member this.ChangeUICues : System.Windows.Forms.UICuesEventHandler " Usage="member this.ChangeUICues : System.Windows.Forms.UICuesEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UICuesEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-467">焦点或键盘用户界面 (UI) 提示更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-467">Occurs when the focus or keyboard user interface (UI) cues change.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-468">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-468">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-469">下面的代码示例演示如何将此成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-469">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3d62e-470">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Control.ChangeUICues>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-470">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.ChangeUICues> event.</span></span> <span data-ttu-id="3d62e-471">此报告可帮助您了解事件发生的并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="3d62e-471">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3d62e-472">若要报告或频繁发生的事件上多个事件，请考虑更换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或将消息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-472">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3d62e-473">若要运行此代码示例，请将其粘贴到包含继承的类型的实例的项目<xref:System.Windows.Forms.Control>，如<xref:System.Windows.Forms.Button>或<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-473">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="3d62e-474">然后该实例命名`Control1`，并确保事件处理程序相关联<xref:System.Windows.Forms.Control.ChangeUICues>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-474">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.ChangeUICues> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#67](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#67)]
 [!code-vb[System.Windows.Forms.EventExamples#67](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#67)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.UICues" />
        <altmember cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="CheckForIllegalCrossThreadCalls">
      <MemberSignature Language="C#" Value="public static bool CheckForIllegalCrossThreadCalls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CheckForIllegalCrossThreadCalls" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CheckForIllegalCrossThreadCalls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CheckForIllegalCrossThreadCalls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckForIllegalCrossThreadCalls : bool with get, set" Usage="System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-475">获取或设置一个值，该值指示是否捕获对错误线程的调用，这些调用在调试应用程序时访问控件的 <see cref="P:System.Windows.Forms.Control.Handle" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-475">Gets or sets a value indicating whether to catch calls on the wrong thread that access a control's <see cref="P:System.Windows.Forms.Control.Handle" /> property when an application is being debugged.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-476">如果捕获了对错误线程的调用，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-476">
              <see langword="true" /> if calls on the wrong thread are caught; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-477">当创建控件的线程以外的线程尝试访问该控件的方法或属性之一时，它通常会导致不可预知的结果。</span><span class="sxs-lookup"><span data-stu-id="3d62e-477">When a thread other than the creating thread of a control tries to access one of that control's methods or properties, it often leads to unpredictable results.</span></span> <span data-ttu-id="3d62e-478">通常，无效的线程活动是对错误线程访问控件的调用<xref:System.Windows.Forms.Control.Handle%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-478">A common invalid thread activity is a call on the wrong thread that accesses the control's <xref:System.Windows.Forms.Control.Handle%2A> property.</span></span> <span data-ttu-id="3d62e-479">设置<xref:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls%2A>到`true`来查找和调试时更轻松地诊断此线程活动。</span><span class="sxs-lookup"><span data-stu-id="3d62e-479">Set <xref:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls%2A> to `true` to find and diagnose this thread activity more easily while debugging.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-480">在单击控件时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-480">Occurs when the control is clicked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-481"><xref:System.Windows.Forms.Control.Click>事件将传递<xref:System.EventArgs>给其事件处理程序，因此它仅指示发生了单击操作。</span><span class="sxs-lookup"><span data-stu-id="3d62e-481">The <xref:System.Windows.Forms.Control.Click> event passes an <xref:System.EventArgs> to its event handler, so it only indicates that a click has occurred.</span></span> <span data-ttu-id="3d62e-482">如果需要更具体的鼠标信息 （按钮、 单击次数、 鼠标轮旋转或位置），使用<xref:System.Windows.Forms.Control.MouseClick>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-482">If you need more specific mouse information (button, number of clicks, wheel rotation, or location), use the <xref:System.Windows.Forms.Control.MouseClick> event.</span></span> <span data-ttu-id="3d62e-483">但是，<xref:System.Windows.Forms.Control.MouseClick>如果导致单击的操作不是鼠标，例如，按下 ENTER 键操作，将不会引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-483">However, the <xref:System.Windows.Forms.Control.MouseClick> event will not be raised if the click is caused by action other than that of the mouse, such as pressing the ENTER key.</span></span>  
  
 <span data-ttu-id="3d62e-484">由用户的操作系统的鼠标设置确定一次双击。</span><span class="sxs-lookup"><span data-stu-id="3d62e-484">A double-click is determined by the mouse settings of the user's operating system.</span></span> <span data-ttu-id="3d62e-485">用户可以设置两次单击鼠标按钮之间的时间以便将这两次单击认为是双击而不是两次单击。</span><span class="sxs-lookup"><span data-stu-id="3d62e-485">The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</span></span> <span data-ttu-id="3d62e-486"><xref:System.Windows.Forms.Control.Click>每次双击控件时引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-486">The <xref:System.Windows.Forms.Control.Click> event is raised every time a control is double-clicked.</span></span> <span data-ttu-id="3d62e-487">例如，如果有事件处理程序<xref:System.Windows.Forms.Control.Click>并<xref:System.Windows.Forms.Control.DoubleClick>的事件<xref:System.Windows.Forms.Form>，则<xref:System.Windows.Forms.Control.Click>和<xref:System.Windows.Forms.Control.DoubleClick>时双击窗体之后，并调用这两种方法将引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-487">For example, if you have event handlers for the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events of a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events are raised when the form is double-clicked and both methods are called.</span></span> <span data-ttu-id="3d62e-488">如果双击控件时，控件不支持<xref:System.Windows.Forms.Control.DoubleClick>事件，<xref:System.Windows.Forms.Control.Click>可能两次引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-488">If a control is double-clicked and that control does not support the <xref:System.Windows.Forms.Control.DoubleClick> event, the <xref:System.Windows.Forms.Control.Click> event might be raised twice.</span></span>  
  
 <span data-ttu-id="3d62e-489">必须设置`StandardClick`的值<xref:System.Windows.Forms.ControlStyles>到`true`引发此事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-489">You must set the `StandardClick` value of <xref:System.Windows.Forms.ControlStyles> to `true` for this event to be raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-490">不会引发以下事件<xref:System.Windows.Forms.TabControl>类，除非没有至少一个<xref:System.Windows.Forms.TabPage>中<xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType>集合： <xref:System.Windows.Forms.Control.Click>， <xref:System.Windows.Forms.Control.DoubleClick>， <xref:System.Windows.Forms.Control.MouseDown>， <xref:System.Windows.Forms.Control.MouseUp>， <xref:System.Windows.Forms.Control.MouseHover>， <xref:System.Windows.Forms.Control.MouseEnter>，<xref:System.Windows.Forms.Control.MouseLeave>和<xref:System.Windows.Forms.Control.MouseMove>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-490">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="3d62e-491">如果没有至少一个<xref:System.Windows.Forms.TabPage>在集合中，并在用户与选项卡控件的标头交互 (其中<xref:System.Windows.Forms.TabPage>名称显示)，则<xref:System.Windows.Forms.TabControl>引发相应事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-491">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="3d62e-492">但是，如果在工作区内的选项卡页上，为用户交互<xref:System.Windows.Forms.TabPage>引发相应事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-492">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="3d62e-493">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-493">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-494">下面的代码示例演示<xref:System.Windows.Forms.Control.Click>事件处理程序中的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-494">The following code example shows the <xref:System.Windows.Forms.Control.Click> event in an event handler.</span></span>  
  
 [!code-cpp[Control.FindForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.FindForm/CPP/form1.cpp#1)]
 [!code-csharp[Control.FindForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.FindForm/CS/form1.cs#1)]
 [!code-vb[Control.FindForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.FindForm/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-495">从标准 Windows 窗体控件继承并更改<see langword="StandardClick" />或<see langword="StandardDoubleClick" />的值<see cref="T:System.Windows.Forms.ControlStyles" />到<see langword="true" />会导致意外的行为或根本不起任何作用，如果该控件不支持<see cref="E:System.Windows.Forms.Control.Click" />或<see cref="E:System.Windows.Forms.Control.DoubleClick" />事件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-495">Inheriting from a standard Windows Forms control and changing the <see langword="StandardClick" /> or <see langword="StandardDoubleClick" /> values of <see cref="T:System.Windows.Forms.ControlStyles" /> to <see langword="true" /> can cause unexpected behavior or have no effect at all if the control does not support the <see cref="E:System.Windows.Forms.Control.Click" /> or <see cref="E:System.Windows.Forms.Control.DoubleClick" /> events.</span>
            </span>
            <span data-ttu-id="3d62e-496">下表列出了 Windows 窗体控件和哪个事件 (<see cref="E:System.Windows.Forms.Control.Click" />或<see cref="E:System.Windows.Forms.Control.DoubleClick" />) 到指定的鼠标操作的响应中引发。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-496">The following table lists Windows Forms controls and which event (<see cref="E:System.Windows.Forms.Control.Click" /> or <see cref="E:System.Windows.Forms.Control.DoubleClick" />) is raised in response to the mouse action specified.</span>
            </span>
            <list type="table">
              <listheader>
                <term>
                  <span data-ttu-id="3d62e-497">控件</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-497">Control</span>
                  </span>
                </term>
                <description>
                  <span data-ttu-id="3d62e-498">单击鼠标左键</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-498">Left Mouse Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-499">双击鼠标</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-499">Left Mouse Double Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-500">单击鼠标右键</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-500">Right Mouse Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-501">双击鼠标右键</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-501">Right Mouse Double Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-502">中间的鼠标单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-502">Middle Mouse Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-503">双击鼠标</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-503">Middle Mouse Double Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-504">XButton1 鼠标单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-504">XButton1 Mouse Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-505">双击 XButton1 鼠标</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-505">XButton1 Mouse Double-Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-506">XButton2 鼠标单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-506">XButton2 Mouse Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-507">XButton2 鼠标双击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-507">XButton2 Mouse Double-Click</span>
                  </span>
                </description>
              </listheader>
              <item>
                <term>
                  <span data-ttu-id="3d62e-508">
                    <see cref="T:System.Windows.Forms.MonthCalendar" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-508">
                      <see cref="T:System.Windows.Forms.MonthCalendar" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-509">
                    <see cref="T:System.Windows.Forms.DateTimePicker" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-509">
                      <see cref="T:System.Windows.Forms.DateTimePicker" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-510">
                    <see cref="T:System.Windows.Forms.HScrollBar" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-510">
                      <see cref="T:System.Windows.Forms.HScrollBar" />,</span>
                  </span>
                  <see cref="T:System.Windows.Forms.VScrollBar" />
                </term>
                <description>
                  <span data-ttu-id="3d62e-511">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-511">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-512">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-512">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-513">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-513">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-514">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-514">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-515">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-515">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-516">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-516">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-517">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-517">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-518">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-518">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-519">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-519">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-520">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-520">none</span>
                  </span>
                </description>
              </item>
              <item>
                <term>
                  <span data-ttu-id="3d62e-521">
                    <see cref="T:System.Windows.Forms.Button" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-521">
                      <see cref="T:System.Windows.Forms.Button" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-522">
                    <see cref="T:System.Windows.Forms.CheckBox" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-522">
                      <see cref="T:System.Windows.Forms.CheckBox" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-523">
                    <see cref="T:System.Windows.Forms.RichTextBox" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-523">
                      <see cref="T:System.Windows.Forms.RichTextBox" />,</span>
                  </span>
                  <see cref="T:System.Windows.Forms.RadioButton" />
                </term>
                <description>
                  <span data-ttu-id="3d62e-524">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-524">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-525">单击，然后单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-525">Click, Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-526">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-526">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-527">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-527">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-528">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-528">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-529">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-529">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-530">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-530">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-531">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-531">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-532">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-532">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-533">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-533">none</span>
                  </span>
                </description>
              </item>
              <item>
                <term>
                  <span data-ttu-id="3d62e-534">
                    <see cref="T:System.Windows.Forms.ListBox" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-534">
                      <see cref="T:System.Windows.Forms.ListBox" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-535">
                    <see cref="T:System.Windows.Forms.CheckedListBox" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-535">
                      <see cref="T:System.Windows.Forms.CheckedListBox" />,</span>
                  </span>
                  <see cref="T:System.Windows.Forms.ComboBox" />
                </term>
                <description>
                  <span data-ttu-id="3d62e-536">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-536">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-537">单击、 双击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-537">Click, DoubleClick</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-538">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-538">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-539">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-539">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-540">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-540">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-541">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-541">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-542">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-542">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-543">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-543">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-544">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-544">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-545">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-545">none</span>
                  </span>
                </description>
              </item>
              <item>
                <term>
                  <span data-ttu-id="3d62e-546">
                    <see cref="T:System.Windows.Forms.TextBox" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-546">
                      <see cref="T:System.Windows.Forms.TextBox" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-547">
                    <see cref="T:System.Windows.Forms.DomainUpDown" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-547">
                      <see cref="T:System.Windows.Forms.DomainUpDown" />,</span>
                  </span>
                  <see cref="T:System.Windows.Forms.NumericUpDown" />
                </term>
                <description>
                  <span data-ttu-id="3d62e-548">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-548">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-549">单击、 双击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-549">Click, DoubleClick</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-550">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-550">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-551">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-551">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-552">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-552">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-553">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-553">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-554">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-554">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-555">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-555">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-556">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-556">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-557">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-557">none</span>
                  </span>
                </description>
              </item>
              <item>
                <term>
                  <span data-ttu-id="3d62e-558">\* <see cref="T:System.Windows.Forms.TreeView" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-558">\* <see cref="T:System.Windows.Forms.TreeView" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-559">\* <see cref="T:System.Windows.Forms.ListView" /></span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-559">\* <see cref="T:System.Windows.Forms.ListView" /></span>
                  </span>
                </term>
                <description>
                  <span data-ttu-id="3d62e-560">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-560">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-561">单击、 双击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-561">Click, DoubleClick</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-562">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-562">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-563">单击、 双击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-563">Click, DoubleClick</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-564">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-564">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-565">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-565">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-566">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-566">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-567">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-567">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-568">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-568">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-569">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-569">none</span>
                  </span>
                </description>
              </item>
              <item>
                <term>
                  <span data-ttu-id="3d62e-570">
                    <see cref="T:System.Windows.Forms.ProgressBar" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-570">
                      <see cref="T:System.Windows.Forms.ProgressBar" />,</span>
                  </span>
                  <see cref="T:System.Windows.Forms.TrackBar" />
                </term>
                <description>
                  <span data-ttu-id="3d62e-571">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-571">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-572">单击，然后单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-572">Click, Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-573">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-573">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-574">单击，然后单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-574">Click, Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-575">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-575">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-576">单击，然后单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-576">Click, Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-577">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-577">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-578">单击，然后单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-578">Click, Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-579">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-579">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-580">单击，然后单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-580">Click, Click</span>
                  </span>
                </description>
              </item>
              <item>
                <term>
                  <span data-ttu-id="3d62e-581">
                    <see cref="T:System.Windows.Forms.Form" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-581">
                      <see cref="T:System.Windows.Forms.Form" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-582">
                    <see cref="T:System.Windows.Forms.DataGrid" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-582">
                      <see cref="T:System.Windows.Forms.DataGrid" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-583">
                    <see cref="T:System.Windows.Forms.Label" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-583">
                      <see cref="T:System.Windows.Forms.Label" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-584">
                    <see cref="T:System.Windows.Forms.LinkLabel" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-584">
                      <see cref="T:System.Windows.Forms.LinkLabel" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-585">
                    <see cref="T:System.Windows.Forms.Panel" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-585">
                      <see cref="T:System.Windows.Forms.Panel" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-586">
                    <see cref="T:System.Windows.Forms.GroupBox" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-586">
                      <see cref="T:System.Windows.Forms.GroupBox" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-587">
                    <see cref="T:System.Windows.Forms.PictureBox" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-587">
                      <see cref="T:System.Windows.Forms.PictureBox" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-588">
                    <see cref="T:System.Windows.Forms.Splitter" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-588">
                      <see cref="T:System.Windows.Forms.Splitter" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-589">
                    <see cref="T:System.Windows.Forms.StatusBar" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-589">
                      <see cref="T:System.Windows.Forms.StatusBar" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-590">
                    <see cref="T:System.Windows.Forms.ToolBar" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-590">
                      <see cref="T:System.Windows.Forms.ToolBar" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-591">
                    <see cref="T:System.Windows.Forms.TabPage" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-591">
                      <see cref="T:System.Windows.Forms.TabPage" />,</span>
                  </span> 
 ** <see cref="T:System.Windows.Forms.TabControl" /></term>
                <description>
                  <span data-ttu-id="3d62e-592">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-592">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-593">单击、 双击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-593">Click, DoubleClick</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-594">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-594">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-595">单击、 双击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-595">Click, DoubleClick</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-596">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-596">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-597">单击、 双击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-597">Click, DoubleClick</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-598">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-598">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-599">单击、 双击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-599">Click, DoubleClick</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-600">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-600">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-601">单击、 双击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-601">Click, DoubleClick</span>
                  </span>
                </description>
              </item>
            </list>
            <span data-ttu-id="3d62e-602">\* 鼠标指针必须位于一个子对象 (<see cref="T:System.Windows.Forms.TreeNode" />或<see cref="T:System.Windows.Forms.ListViewItem" />)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-602">\* The mouse pointer must be over a child object (<see cref="T:System.Windows.Forms.TreeNode" /> or <see cref="T:System.Windows.Forms.ListViewItem" />).</span>
            </span>
            <span data-ttu-id="3d62e-603">\* \*<see cref="T:System.Windows.Forms.TabControl" />必须至少一个<see cref="T:System.Windows.Forms.TabPage" />在其<see cref="P:System.Windows.Forms.TabControl.TabPages" />集合。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-603">\*\* The <see cref="T:System.Windows.Forms.TabControl" /> must have at least one <see cref="T:System.Windows.Forms.TabPage" /> in its <see cref="P:System.Windows.Forms.TabControl.TabPages" /> collection.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />
        <altmember cref="F:System.Windows.Forms.ControlStyles.StandardClick" />
        <altmember cref="E:System.Windows.Forms.Control.MouseClick" />
        <altmember cref="E:System.Windows.Forms.Control.DoubleClick" />
        <altmember cref="E:System.Windows.Forms.Control.MouseDoubleClick" />
      </Docs>
    </Member>
    <Member MemberName="ClientRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ClientRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ClientRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ClientRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle ClientRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.Control.ClientRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-604">获取表示控件的工作区的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-604">Gets the rectangle that represents the client area of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-605">
            <see cref="T:System.Drawing.Rectangle" />，它表示控件的工作区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-605">A <see cref="T:System.Drawing.Rectangle" /> that represents the client area of the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-606">控件的客户端区域是控件的减去的非工作区元素，如滚动条、 边框、 标题栏和菜单的边界。</span><span class="sxs-lookup"><span data-stu-id="3d62e-606">The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus.</span></span>  
  
 <span data-ttu-id="3d62e-607">由于客户端坐标是相对于控件的客户端区域的左上角，此属性返回的矩形的左上角的坐标为 (0，0)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-607">Because client coordinates are relative to the upper-left corner of the client area of the control, the coordinates of the upper-left corner of the rectangle returned by this property are (0,0).</span></span> <span data-ttu-id="3d62e-608">此属性可用于获取的大小和任务，例如在控件的表面上绘制的控件的客户端区域的坐标。</span><span class="sxs-lookup"><span data-stu-id="3d62e-608">You can use this property to obtain the size and coordinates of the client area of the control for tasks such as drawing on the surface of the control.</span></span>  
  
 <span data-ttu-id="3d62e-609">在控件上绘制的详细信息，请参阅[呈现 Windows 窗体控件](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-609">For more information about drawing on controls, see [Rendering a Windows Forms Control](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-610">下面的代码示例窗体的自动滚动、 调整窗体，并确保一个按钮在窗体调整后仍然保持可见。</span><span class="sxs-lookup"><span data-stu-id="3d62e-610">The following code example enables auto-scrolling for a form, resizes the form, and ensures that a button remains visible after the form is resized.</span></span> <span data-ttu-id="3d62e-611">此示例要求具有<xref:System.Windows.Forms.Form>与<xref:System.Windows.Forms.Button>名为`button2`上它。</span><span class="sxs-lookup"><span data-stu-id="3d62e-611">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button> named `button2` on it.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Member5#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CPP/controlmembers5.cpp#2)]
 [!code-csharp[Windows.Forms.Control Member5#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CS/controlmembers5.cs#2)]
 [!code-vb[Windows.Forms.Control Member5#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Member5/VB/controlmembers5.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ClientSize" />
        <altmember cref="T:System.Windows.Forms.DrawMode" />
      </Docs>
    </Member>
    <Member MemberName="ClientSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size ClientSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size ClientSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ClientSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size ClientSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.ClientSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Control.ClientSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-612">获取或设置控件的工作区的高度和宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-612">Gets or sets the height and width of the client area of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-613">
            <see cref="T:System.Drawing.Size" />，表示控件的工作区的维数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-613">A <see cref="T:System.Drawing.Size" /> that represents the dimensions of the client area of the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-614">控件的客户端区域是控件的减去的非工作区元素，如滚动条、 边框、 标题栏和菜单的边界。</span><span class="sxs-lookup"><span data-stu-id="3d62e-614">The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus.</span></span> <span data-ttu-id="3d62e-615"><xref:System.Windows.Forms.Control.SetClientSizeCore%2A>方法调用来设置<xref:System.Windows.Forms.Control.ClientSize%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-615">The <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> method is called to set the <xref:System.Windows.Forms.Control.ClientSize%2A> property.</span></span> <span data-ttu-id="3d62e-616"><xref:System.Windows.Forms.Control.ClientSize%2A>属性不会通过始终更改其`set`方法，以便应重写<xref:System.Windows.Forms.Control.SetClientSizeCore%2A>方法，以确保你的代码执行时<xref:System.Windows.Forms.Control.ClientSize%2A>属性设置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-616">The <xref:System.Windows.Forms.Control.ClientSize%2A> property is not always changed through its `set` method so you should override the <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> method to ensure that your code is executed when the <xref:System.Windows.Forms.Control.ClientSize%2A> property is set.</span></span>  
  
 <span data-ttu-id="3d62e-617"><xref:System.Drawing.Size.Width%2A?displayProperty=nameWithType>和<xref:System.Drawing.Size.Height%2A?displayProperty=nameWithType>属性表示的宽度和高度的控件的客户端区域。</span><span class="sxs-lookup"><span data-stu-id="3d62e-617">The <xref:System.Drawing.Size.Width%2A?displayProperty=nameWithType> and <xref:System.Drawing.Size.Height%2A?displayProperty=nameWithType> properties represent the width and height of the client area of the control.</span></span> <span data-ttu-id="3d62e-618">此属性可用于获取有关任务，例如在控件的表面上绘制控件的客户端区域的大小。</span><span class="sxs-lookup"><span data-stu-id="3d62e-618">You can use this property to obtain the size of the client area of the control for tasks such as drawing on the surface of the control.</span></span>  
  
 <span data-ttu-id="3d62e-619">在控件上绘制的详细信息，请参阅[呈现 Windows 窗体控件](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-619">For more information about drawing on controls, see [Rendering a Windows Forms Control](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-620">不能将应用程序设置绑定到此属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-620">You cannot bind application settings to this property.</span></span> <span data-ttu-id="3d62e-621">应用程序设置的详细信息，请参阅[应用程序设置概述](~/docs/framework/winforms/advanced/application-settings-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-621">For more information on application settings, see [Application Settings Overview](~/docs/framework/winforms/advanced/application-settings-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-622">下面的代码示例调整大小指定的控件，因此控件将容纳带格式的文本。</span><span class="sxs-lookup"><span data-stu-id="3d62e-622">The following code example resizes the specified control so the control will accommodate its formatted text.</span></span> <span data-ttu-id="3d62e-623">格式化文本<xref:System.Windows.Forms.Control.Text%2A>与该控件的属性的已分配<xref:System.Windows.Forms.Control.Font%2A>应用于的文本。</span><span class="sxs-lookup"><span data-stu-id="3d62e-623">The formatted text is the <xref:System.Windows.Forms.Control.Text%2A> property with the control's assigned <xref:System.Windows.Forms.Control.Font%2A> applied to the text.</span></span> <span data-ttu-id="3d62e-624">`AutoSizeControl`方法在此示例中还具有`textPadding`参数，它表示要应用于控件的所有边缘的填充量。</span><span class="sxs-lookup"><span data-stu-id="3d62e-624">The `AutoSizeControl` method in this example also has a `textPadding` parameter that represents the padding to apply to all edges of the control.</span></span> <span data-ttu-id="3d62e-625">若要使看起来相等的填充量，将文本与<xref:System.Drawing.ContentAlignment.MiddleCenter?displayProperty=nameWithType>值，如果控件支持它。</span><span class="sxs-lookup"><span data-stu-id="3d62e-625">To make the padding appear equal, align the text with the <xref:System.Drawing.ContentAlignment.MiddleCenter?displayProperty=nameWithType> value, if your control supports it.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Member5#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CPP/controlmembers5.cpp#1)]
 [!code-csharp[Windows.Forms.Control Member5#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CS/controlmembers5.cs#1)]
 [!code-vb[Windows.Forms.Control Member5#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Member5/VB/controlmembers5.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ClientRectangle" />
        <altmember cref="T:System.Windows.Forms.DrawMode" />
      </Docs>
    </Member>
    <Member MemberName="ClientSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ClientSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ClientSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ClientSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ClientSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ClientSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.ClientSizeChanged : EventHandler " Usage="member this.ClientSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-626">当 <see cref="P:System.Windows.Forms.Control.ClientSize" /> 属性的值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-626">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-627">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-627">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-628">下面的代码示例演示如何将此成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-628">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3d62e-629">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Control.ClientSizeChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-629">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.ClientSizeChanged> event.</span></span> <span data-ttu-id="3d62e-630">此报告可帮助您了解事件发生的并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="3d62e-630">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3d62e-631">若要报告或频繁发生的事件上多个事件，请考虑更换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或将消息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-631">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3d62e-632">若要运行此代码示例，请将其粘贴到包含继承的类型的实例的项目<xref:System.Windows.Forms.Control>，如<xref:System.Windows.Forms.Button>或<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-632">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="3d62e-633">然后该实例命名`Control1`，并确保事件处理程序相关联<xref:System.Windows.Forms.Control.ClientSizeChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-633">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.ClientSizeChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#12)]
 [!code-vb[System.Windows.Forms.EventExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompanyName">
      <MemberSignature Language="C#" Value="public string CompanyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompanyName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CompanyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompanyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CompanyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompanyName : string" Usage="System.Windows.Forms.Control.CompanyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Description("ControlCompanyNameDescr")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-634">获取包含控件的应用程序的公司名称或创建者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-634">Gets the name of the company or creator of the application containing the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-635">包含控件的应用程序的公司名称或创建者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-635">The company name or creator of the application containing the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-636"><xref:System.Windows.Forms.Control.CompanyName%2A>属性是只读的属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-636">The <xref:System.Windows.Forms.Control.CompanyName%2A> property is a read-only property.</span></span> <span data-ttu-id="3d62e-637">若要更改此属性的值，设置<xref:System.Reflection.AssemblyCompanyAttribute.Company%2A>属性值为<xref:System.Reflection.AssemblyCompanyAttribute>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-637">To change the value of this property, set the <xref:System.Reflection.AssemblyCompanyAttribute.Company%2A> property value of the <xref:System.Reflection.AssemblyCompanyAttribute>.</span></span> <span data-ttu-id="3d62e-638">下面的 C# 代码集行<xref:System.Windows.Forms.Control.CompanyName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-638">The following line of C# code sets the <xref:System.Windows.Forms.Control.CompanyName%2A> property.</span></span>  
  
```csharp  
[assembly: AssemblyCompany("Microsoft")]  
```  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-639">强烈建议为您的应用程序提供的公司名称、 产品名称和产品版本。</span><span class="sxs-lookup"><span data-stu-id="3d62e-639">It is strongly recommended that you provide the company name, product name, and product version for your app.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-640">下面的代码示例显示有关中的应用程序信息<xref:System.Windows.Forms.Label>所包含的<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-640">The following code example displays information about the application in a <xref:System.Windows.Forms.Label> contained by a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="3d62e-641">此示例需要<xref:System.Windows.Forms.Control.CompanyName%2A>，<xref:System.Windows.Forms.Control.ProductName%2A>和<xref:System.Windows.Forms.Control.ProductVersion%2A>已设置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-641">This example requires that the <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> and <xref:System.Windows.Forms.Control.ProductVersion%2A> have been set.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CPP/aboutdialog.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CS/aboutdialog.cs#1)]
 [!code-vb[Windows.Forms.Control Properties3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties3/VB/aboutdialog.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.AssemblyCompanyAttribute.Company" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.CompanyName" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.Control ctl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.Control ctl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (ctl As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::Control ^ ctl);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.Control -&gt; bool" Usage="control.Contains ctl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="ctl">
          <span data-ttu-id="3d62e-642">要计算的 <see cref="T:System.Windows.Forms.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-642">The <see cref="T:System.Windows.Forms.Control" /> to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-643">检索一个值，该值指示指定控件是否为一个控件的子控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-643">Retrieves a value indicating whether the specified control is a child of the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-644">如果指定控件是控件的子控件，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-644">
              <see langword="true" /> if the specified control is a child of the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3d62e-645">下面的代码示例可确保<xref:System.Windows.Forms.Label>是可见通过调用其<xref:System.Windows.Forms.Control.BringToFront%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-645">The following code example ensures that a <xref:System.Windows.Forms.Label> is visible by calling its <xref:System.Windows.Forms.Control.BringToFront%2A> method.</span></span> <span data-ttu-id="3d62e-646">此示例要求具有<xref:System.Windows.Forms.Form>与<xref:System.Windows.Forms.Panel>名为`panel1`，和一个<xref:System.Windows.Forms.Label>名为`label1`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-646">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Panel> named `panel1`, and a <xref:System.Windows.Forms.Label> named `label1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#1)]
 [!code-csharp[Windows.Forms.Control Members4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#1)]
 [!code-vb[Windows.Forms.Control Members4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Contains(System.Windows.Forms.Control)" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFocus">
      <MemberSignature Language="C#" Value="public bool ContainsFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContainsFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ContainsFocus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainsFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ContainsFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ContainsFocus : bool" Usage="System.Windows.Forms.Control.ContainsFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-647">获取一个值，该值指示控件或它的一个子控件当前是否有输入焦点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-647">Gets a value indicating whether the control, or one of its child controls, currently has the input focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-648">如果控件或它的一个子控件当前已经有输入焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-648">
              <see langword="true" /> if the control or one of its child controls currently has the input focus; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-649">此属性可用于确定控件或任何它所包含的控件是否具有输入的焦点。</span><span class="sxs-lookup"><span data-stu-id="3d62e-649">You can use this property to determine whether a control or any of the controls contained within it has the input focus.</span></span> <span data-ttu-id="3d62e-650">若要确定是否在控件有焦点，而不考虑任何子控件是否有焦点时，使用<xref:System.Windows.Forms.Control.Focused%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-650">To determine whether the control has focus, regardless of whether any of its child controls have focus, use the <xref:System.Windows.Forms.Control.Focused%2A> property.</span></span> <span data-ttu-id="3d62e-651">若要为控件提供输入的焦点，请使用<xref:System.Windows.Forms.Control.Focus%2A>或<xref:System.Windows.Forms.Control.Select%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-651">To give a control the input focus, use the <xref:System.Windows.Forms.Control.Focus%2A> or <xref:System.Windows.Forms.Control.Select%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.CanFocus" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="P:System.Windows.Forms.Control.Focused" />
        <altmember cref="P:System.Windows.Forms.Control.CanSelect" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenu ContextMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenu ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenu As ContextMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenu ^ ContextMenu { System::Windows::Forms::ContextMenu ^ get(); void set(System::Windows::Forms::ContextMenu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenu : System.Windows.Forms.ContextMenu with get, set" Usage="System.Windows.Forms.Control.ContextMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-652">获取或设置与控件关联的快捷菜单。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-652">Gets or sets the shortcut menu associated with the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-653">一个 <see cref="T:System.Windows.Forms.ContextMenu" />，表示与控件关联的快捷菜单。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-653">A <see cref="T:System.Windows.Forms.ContextMenu" /> that represents the shortcut menu associated with the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-654">使用快捷菜单时他们右键单击该控件向用户提供特定于上下文菜单选项。</span><span class="sxs-lookup"><span data-stu-id="3d62e-654">Use a shortcut menus to give context-specific menu options to users when they right-click on the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-655">下面的代码示例显示<xref:System.Windows.Forms.ContextMenu>分配给<xref:System.Windows.Forms.TreeView>时单击鼠标右键按钮和释放。</span><span class="sxs-lookup"><span data-stu-id="3d62e-655">The following code example displays the <xref:System.Windows.Forms.ContextMenu> assigned to a <xref:System.Windows.Forms.TreeView> when the right mouse button is clicked and released.</span></span> <span data-ttu-id="3d62e-656">此代码，则需要<xref:System.Windows.Forms.Form>与<xref:System.Windows.Forms.TreeView>上它。</span><span class="sxs-lookup"><span data-stu-id="3d62e-656">This code requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> on it.</span></span> <span data-ttu-id="3d62e-657">另外，也需要该<xref:System.Windows.Forms.TreeView>已<xref:System.Windows.Forms.ContextMenu>分配给其<xref:System.Windows.Forms.Control.ContextMenu%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-657">It is also required that the <xref:System.Windows.Forms.TreeView> has a <xref:System.Windows.Forms.ContextMenu> assigned to its <xref:System.Windows.Forms.Control.ContextMenu%2A> property.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties2#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CPP/misccontrolproperties.cpp#5)]
 [!code-csharp[Windows.Forms.Control Properties2#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CS/misccontrolproperties.cs#5)]
 [!code-vb[Windows.Forms.Control Properties2#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties2/VB/misccontrolproperties.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-658">重写时<see cref="P:System.Windows.Forms.Control.ContextMenu" />属性在派生类中，使用基类的<see cref="P:System.Windows.Forms.Control.ContextMenu" />属性扩展的基实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-658">When overriding the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property to extend the base implementation.</span>
            </span>
            <span data-ttu-id="3d62e-659">否则，必须提供所有的实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-659">Otherwise, you must provide all the implementation.</span>
            </span>
            <span data-ttu-id="3d62e-660">不需要重写二者<see langword="get" />并<see langword="set" />访问器<see cref="P:System.Windows.Forms.Control.ContextMenu" />属性; 您可以根据需要覆盖只有一个。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-660">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property; you can override only one if needed.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.Forms.ContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ContextMenuChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContextMenuChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ContextMenuChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextMenuChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ContextMenuChanged;" />
      <MemberSignature Language="F#" Value="member this.ContextMenuChanged : EventHandler " Usage="member this.ContextMenuChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-661">当 <see cref="P:System.Windows.Forms.Control.ContextMenu" /> 属性的值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-661">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-662">如果引发此事件<xref:System.Windows.Forms.Control.ContextMenu%2A>属性更改通过以编程方式修改或用户交互。</span><span class="sxs-lookup"><span data-stu-id="3d62e-662">This event is raised if the <xref:System.Windows.Forms.Control.ContextMenu%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="3d62e-663">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-663">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-664">下面的代码示例显示一条消息的快捷菜单发生更改时。</span><span class="sxs-lookup"><span data-stu-id="3d62e-664">The following code example displays a message when a change occurs to the shortcut menu.</span></span>  
  
 [!code-cpp[Control_ContextMenu_CreateGraphics#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_ContextMenu_CreateGraphics/CPP/control_contextmenu_creategraphics.cpp#2)]
 [!code-csharp[Control_ContextMenu_CreateGraphics#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_ContextMenu_CreateGraphics/CS/control_contextmenu_creategraphics.cs#2)]
 [!code-vb[Control_ContextMenu_CreateGraphics#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_ContextMenu_CreateGraphics/VB/control_contextmenu_creategraphics.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.ContextMenu" />
        <altmember cref="T:System.Windows.Forms.ContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStrip">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenuStrip ContextMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ContextMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenuStrip As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenuStrip ^ ContextMenuStrip { System::Windows::Forms::ContextMenuStrip ^ get(); void set(System::Windows::Forms::ContextMenuStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenuStrip : System.Windows.Forms.ContextMenuStrip with get, set" Usage="System.Windows.Forms.Control.ContextMenuStrip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-665">获取或设置与此控件关联的 <see cref="T:System.Windows.Forms.ContextMenuStrip" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-665">Gets or sets the <see cref="T:System.Windows.Forms.ContextMenuStrip" /> associated with this control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-666">该控件的 <see cref="T:System.Windows.Forms.ContextMenuStrip" />；如果没有 <see langword="null" />，则为 <see cref="T:System.Windows.Forms.ContextMenuStrip" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-666">The <see cref="T:System.Windows.Forms.ContextMenuStrip" /> for this control, or <see langword="null" /> if there is no <see cref="T:System.Windows.Forms.ContextMenuStrip" />.</span>
          </span>
          <span data-ttu-id="3d62e-667">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-667">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-668">如果<xref:System.Windows.Forms.ContextMenu>也已分配给该控件<xref:System.Windows.Forms.ContextMenu>优先于<xref:System.Windows.Forms.ContextMenuStrip>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-668">If a <xref:System.Windows.Forms.ContextMenu> has also been assigned to the control, the <xref:System.Windows.Forms.ContextMenu> takes precedence over the <xref:System.Windows.Forms.ContextMenuStrip>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-669">下面的代码示例演示如何添加三个<xref:System.Windows.Forms.ToolStripMenuItem>对象添加到<xref:System.Windows.Forms.ContextMenuStrip>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-669">The following code example demonstrates how to add three <xref:System.Windows.Forms.ToolStripMenuItem> objects to a <xref:System.Windows.Forms.ContextMenuStrip>.</span></span> <span data-ttu-id="3d62e-670">此外，它演示如何设置<xref:System.Windows.Forms.Control.ContextMenuStrip%2A>窗体的属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-670">In addition it demonstrates setting the <xref:System.Windows.Forms.Control.ContextMenuStrip%2A> property of the form.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.ContextMenuStrip#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.ContextMenuStrip/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.ContextMenuStrip#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.ContextMenuStrip/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStripChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ContextMenuStripChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContextMenuStripChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ContextMenuStripChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextMenuStripChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ContextMenuStripChanged;" />
      <MemberSignature Language="F#" Value="member this.ContextMenuStripChanged : EventHandler " Usage="member this.ContextMenuStripChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-671">当 <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> 属性的值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-671">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-672">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-672">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-673">下面的代码示例演示如何将此成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-673">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3d62e-674">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Control.ContextMenuStripChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-674">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.ContextMenuStripChanged> event.</span></span> <span data-ttu-id="3d62e-675">此报告可帮助您了解事件发生的并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="3d62e-675">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3d62e-676">若要报告或频繁发生的事件上多个事件，请考虑更换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或将消息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-676">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3d62e-677">若要运行此代码示例，请将其粘贴到包含继承的类型的实例的项目<xref:System.Windows.Forms.Control>，如<xref:System.Windows.Forms.Button>或<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-677">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="3d62e-678">然后该实例命名`Control1`，并确保事件处理程序相关联<xref:System.Windows.Forms.Control.ContextMenuStripChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-678">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.ContextMenuStripChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#14)]
 [!code-vb[System.Windows.Forms.EventExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlAdded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ControlEventHandler ControlAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ControlEventHandler ControlAdded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ControlAdded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ControlAdded As ControlEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ControlEventHandler ^ ControlAdded;" />
      <MemberSignature Language="F#" Value="member this.ControlAdded : System.Windows.Forms.ControlEventHandler " Usage="member this.ControlAdded : System.Windows.Forms.ControlEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-679">在将新控件添加到 <see cref="T:System.Windows.Forms.Control.ControlCollection" /> 时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-679">Occurs when a new control is added to the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-680">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-680">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-681">下面的代码示例使用<xref:System.Windows.Forms.Control.ControlAdded>控件添加到窗体和显示名称中添加的控件<xref:System.Windows.Forms.MessageBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-681">The following code example uses <xref:System.Windows.Forms.Control.ControlAdded> to add a control to a form and displays the name of the added control in a <xref:System.Windows.Forms.MessageBox>.</span></span>  
  
 [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]
 [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]
 [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="ControlRemoved">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ControlEventHandler ControlRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ControlEventHandler ControlRemoved" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ControlRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ControlRemoved As ControlEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ControlEventHandler ^ ControlRemoved;" />
      <MemberSignature Language="F#" Value="member this.ControlRemoved : System.Windows.Forms.ControlEventHandler " Usage="member this.ControlRemoved : System.Windows.Forms.ControlEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-682">在从 <see cref="T:System.Windows.Forms.Control.ControlCollection" /> 移除控件时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-682">Occurs when a control is removed from the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-683">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-683">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-684">下面的代码示例使用<xref:System.Windows.Forms.Control.ControlRemoved>若要从窗体中移除的控件，并显示中移除的控件名称<xref:System.Windows.Forms.MessageBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-684">The following code example uses <xref:System.Windows.Forms.Control.ControlRemoved> to remove a control from a form and displays the name of the removed control in a <xref:System.Windows.Forms.MessageBox>.</span></span>  
  
 [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]
 [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]
 [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control/ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Controls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Controls As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control::ControlCollection ^ Controls { System::Windows::Forms::Control::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Windows.Forms.Control.ControlCollection" Usage="System.Windows.Forms.Control.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-685">获取包含在控件内的控件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-685">Gets the collection of controls contained within the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-686">
            <see cref="T:System.Windows.Forms.Control.ControlCollection" />，它表示控件内包含的控件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-686">A <see cref="T:System.Windows.Forms.Control.ControlCollection" /> representing the collection of controls contained within the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-687">一个<xref:System.Windows.Forms.Control>可以充当控件的集合的父级。</span><span class="sxs-lookup"><span data-stu-id="3d62e-687">A <xref:System.Windows.Forms.Control> can act as a parent to a collection of controls.</span></span> <span data-ttu-id="3d62e-688">例如，当多个控件添加到<xref:System.Windows.Forms.Form>，每个控件所在<xref:System.Windows.Forms.Control.ControlCollection>分配给<xref:System.Windows.Forms.Control.Controls%2A>窗体派生自属性<xref:System.Windows.Forms.Control>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-688">For example, when several controls are added to a <xref:System.Windows.Forms.Form>, each of the controls is a member of the <xref:System.Windows.Forms.Control.ControlCollection> assigned to the <xref:System.Windows.Forms.Control.Controls%2A> property of the form, which is derived from the <xref:System.Windows.Forms.Control> class.</span></span>  
  
 <span data-ttu-id="3d62e-689">您可以操作中的控件<xref:System.Windows.Forms.Control.ControlCollection>分配给<xref:System.Windows.Forms.Control.Controls%2A>属性使用中提供的方法<xref:System.Windows.Forms.Control.ControlCollection>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-689">You can manipulate the controls in the <xref:System.Windows.Forms.Control.ControlCollection> assigned to the <xref:System.Windows.Forms.Control.Controls%2A> property by using the methods available in the <xref:System.Windows.Forms.Control.ControlCollection> class.</span></span>  
  
 <span data-ttu-id="3d62e-690">当将多个控件添加到父控件，建议您调用<xref:System.Windows.Forms.Control.SuspendLayout%2A>方法，然后再初始化要添加的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-690">When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added.</span></span> <span data-ttu-id="3d62e-691">将控件添加到父控件之后, 调用<xref:System.Windows.Forms.Control.ResumeLayout%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-691">After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method.</span></span> <span data-ttu-id="3d62e-692">这样将提高具有多个控件的应用程序的性能。</span><span class="sxs-lookup"><span data-stu-id="3d62e-692">Doing so will increase the performance of applications with many controls.</span></span>  
  
 <span data-ttu-id="3d62e-693">使用<xref:System.Windows.Forms.Control.Controls%2A>属性来循环访问所有控件的窗体，包括嵌套的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-693">Use the <xref:System.Windows.Forms.Control.Controls%2A> property to iterate through all controls of a form, including nested controls.</span></span> <span data-ttu-id="3d62e-694">使用<xref:System.Windows.Forms.Control.GetNextControl%2A>方法来检索上一个或下一个子控件的 tab 键顺序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-694">Use the <xref:System.Windows.Forms.Control.GetNextControl%2A> method to retrieve the previous or next child control in the tab order.</span></span> <span data-ttu-id="3d62e-695">使用<xref:System.Windows.Forms.ContainerControl.ActiveControl%2A>属性来获取或设置容器控件的活动控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-695">Use the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property to get or set the active control of a container control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-696">以下代码示例中删除<xref:System.Windows.Forms.Control>从<xref:System.Windows.Forms.Control.ControlCollection>派生的类的<xref:System.Windows.Forms.Panel>如果它是集合的成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-696">The following code example removes a <xref:System.Windows.Forms.Control> from the <xref:System.Windows.Forms.Control.ControlCollection> of the derived class <xref:System.Windows.Forms.Panel> if it is a member of the collection.</span></span> <span data-ttu-id="3d62e-697">该示例需要您已创建<xref:System.Windows.Forms.Panel>、 一个<xref:System.Windows.Forms.Button>，且至少一个<xref:System.Windows.Forms.RadioButton>上控制<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-697">The example requires that you have created a <xref:System.Windows.Forms.Panel>, a <xref:System.Windows.Forms.Button>, and at least one <xref:System.Windows.Forms.RadioButton> control on a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="3d62e-698"><xref:System.Windows.Forms.RadioButton>控件添加到<xref:System.Windows.Forms.Panel>控件，并<xref:System.Windows.Forms.Panel>控件添加到<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-698">The <xref:System.Windows.Forms.RadioButton> control(s) are added to the <xref:System.Windows.Forms.Panel> control, and the <xref:System.Windows.Forms.Panel> control added to the <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="3d62e-699">单击该按钮，将名为单选按钮`removeButton`已从<xref:System.Windows.Forms.Control.ControlCollection>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-699">When the button is clicked, the radio button named `removeButton` is removed from the <xref:System.Windows.Forms.Control.ControlCollection>.</span></span>  
  
 [!code-cpp[ControlCollection#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#4)]
 [!code-csharp[ControlCollection#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#4)]
 [!code-vb[ControlCollection#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
        <altmember cref="M:System.Windows.Forms.Control.CreateControlsInstance" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="control.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-700">为该控件创建一个新的辅助功能对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-700">Creates a new accessibility object for the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-701">控件的新 <see cref="T:System.Windows.Forms.AccessibleObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-701">A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-702">如果不显式调用 <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> 方法，则在引用 <xref:System.Windows.Forms.Control.AccessibilityObject%2A> 属性时将会调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-702">If you do not explicitly call the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method, it will be called when the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property is referenced.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-703">获取或设置<xref:System.Windows.Forms.Control.AccessibilityObject%2A>属性，必须添加对的引用`Accessibility`随一起安装的程序集[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="3d62e-703">To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-704">下面的代码示例演示如何创建一个具有辅助功能的图表控件，并使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>类，以公开访问的信息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-704">The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="3d62e-705">控件绘制图例以及两条曲线。</span><span class="sxs-lookup"><span data-stu-id="3d62e-705">The control plots two curves along with a legend.</span></span> <span data-ttu-id="3d62e-706">`ChartControlAccessibleObject`类，该类派生自`ControlAccessibleObject`，在使用<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法以提供自定义访问图表控件的信息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-706">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="3d62e-707">因为不是实际图表图例<xref:System.Windows.Forms.Control>-基于控制，但改为绘制由图表控件，它不提供任何内置的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-707">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not any built-in accessible information.</span></span> <span data-ttu-id="3d62e-708">因此，`ChartControlAccessibleObject`类将重写<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法以返回`CurveLegendAccessibleObject`，它表示每个部分的图例可访问信息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-708">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="3d62e-709">当辅助功能的应用程序使用该控件时，该控件可以提供所需的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-709">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="3d62e-710">此代码片段演示如何重写<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-710">This code excerpt demonstrates overriding the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method.</span></span> <span data-ttu-id="3d62e-711">请参阅<xref:System.Windows.Forms.AccessibleObject>完整的代码示例的类概述。</span><span class="sxs-lookup"><span data-stu-id="3d62e-711">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#2)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#2)]
 [!code-vb[System.Windows.Forms.AccessibleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-712">重写时<see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />在派生类中，请勿调用基类的<see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-712">When overriding <see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /> in a derived class, do not call the base class's <see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /> method.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.Forms.Control.ControlAccessibleObject" />
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="CreateControl">
      <MemberSignature Language="C#" Value="public void CreateControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.CreateControl" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateControl ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateControl();" />
      <MemberSignature Language="F#" Value="member this.CreateControl : unit -&gt; unit" Usage="control.CreateControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-713">强制创建可见控件，包括创建句柄和任何可见子控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-713">Forces the creation of the visible control, including the creation of the handle and any visible child controls.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-714"><xref:System.Windows.Forms.Control.CreateControl%2A>方法强制为控件及其子控件创建句柄。</span><span class="sxs-lookup"><span data-stu-id="3d62e-714">The <xref:System.Windows.Forms.Control.CreateControl%2A> method forces a handle to be created for the control and its child controls.</span></span> <span data-ttu-id="3d62e-715">当需要一个句柄立即处理的控件或其子项; 使用此方法只需调用控件的构造函数不会创建<xref:System.Windows.Forms.Control.Handle%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-715">This method is used when you need a handle immediately for manipulation of the control or its children; simply calling a control's constructor does not create the <xref:System.Windows.Forms.Control.Handle%2A>.</span></span>  
  
 <span data-ttu-id="3d62e-716"><xref:System.Windows.Forms.Control.CreateControl%2A> 如果未创建控件句柄的控件<xref:System.Windows.Forms.Control.Visible%2A>属性是`false`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-716"><xref:System.Windows.Forms.Control.CreateControl%2A> does not create a control handle if the control's <xref:System.Windows.Forms.Control.Visible%2A> property is `false`.</span></span> <span data-ttu-id="3d62e-717">可以通过调用<xref:System.Windows.Forms.Control.CreateHandle%2A>方法或访问<xref:System.Windows.Forms.Control.Handle%2A>属性来创建控件的处理而不考虑控件的可见性，但在这种情况下，为控件的子级创建句柄没有窗口。</span><span class="sxs-lookup"><span data-stu-id="3d62e-717">You can either call the <xref:System.Windows.Forms.Control.CreateHandle%2A> method or access the <xref:System.Windows.Forms.Control.Handle%2A> property to create the control's handle regardless of the control's visibility, but in this case, no window handles are created for the control's children.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlsInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.Control/ControlCollection CreateControlsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.CreateControlsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateControlsInstance () As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::Control::ControlCollection ^ CreateControlsInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateControlsInstance : unit -&gt; System.Windows.Forms.Control.ControlCollection&#xA;override this.CreateControlsInstance : unit -&gt; System.Windows.Forms.Control.ControlCollection" Usage="control.CreateControlsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-718">为控件创建控件集合的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-718">Creates a new instance of the control collection for the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-719">分配给控件的 <see cref="T:System.Windows.Forms.Control.ControlCollection" /> 的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-719">A new instance of <see cref="T:System.Windows.Forms.Control.ControlCollection" /> assigned to the control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-720">不应由派生类中调用此方法的基类版本。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-720">The base class version of this method should not be called by a derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="Created">
      <MemberSignature Language="C#" Value="public bool Created { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Created" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Created" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Created As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Created { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Created : bool" Usage="System.Windows.Forms.Control.Created" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-721">获取一个值，该值指示控件是否已经创建。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-721">Gets a value indicating whether the control has been created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-722">如果已创建控件，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-722">
              <see langword="true" /> if the control has been created; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-723"><xref:System.Windows.Forms.Control.Created%2A>属性返回`true`如果<xref:System.Windows.Forms.Control>即使控件的句柄可能尚未创建或尚未重新创建已成功创建。</span><span class="sxs-lookup"><span data-stu-id="3d62e-723">The <xref:System.Windows.Forms.Control.Created%2A> property returns `true` if the <xref:System.Windows.Forms.Control> was successfully created even though the control's handle might not have been created or recreated yet.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.OnCreateControl" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
      </Docs>
    </Member>
    <Member MemberName="CreateGraphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics CreateGraphics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Graphics CreateGraphics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.CreateGraphics" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateGraphics () As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Graphics ^ CreateGraphics();" />
      <MemberSignature Language="F#" Value="member this.CreateGraphics : unit -&gt; System.Drawing.Graphics" Usage="control.CreateGraphics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-724">为控件创建 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-724">Creates the <see cref="T:System.Drawing.Graphics" /> for the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-725">控件的 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-725">The <see cref="T:System.Drawing.Graphics" /> for the control.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-726"><xref:System.Drawing.Graphics>对象，它通过检索<xref:System.Windows.Forms.Control.CreateGraphics%2A>方法应不通常会保留当前的 Windows 消息处理后因为任何内容与该对象将被清除与下一个 WM_PAINT 消息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-726">The <xref:System.Drawing.Graphics> object that you retrieve through the <xref:System.Windows.Forms.Control.CreateGraphics%2A> method should not normally be retained after the current Windows message has been processed, because anything painted with that object will be erased with the next WM_PAINT message.</span></span> <span data-ttu-id="3d62e-727">因此您不能缓存<xref:System.Drawing.Graphics>对象以重用，除非要使用非可视方法，如<xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-727">Therefore you cannot cache the <xref:System.Drawing.Graphics> object for reuse, except to use non-visual methods like <xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3d62e-728">相反，您必须调用<xref:System.Windows.Forms.Control.CreateGraphics%2A>想要使用的每次<xref:System.Drawing.Graphics>对象，，然后调用<xref:System.Drawing.Graphics.Dispose%2A>完后使用它。</span><span class="sxs-lookup"><span data-stu-id="3d62e-728">Instead, you must call <xref:System.Windows.Forms.Control.CreateGraphics%2A> every time that you want to use the <xref:System.Drawing.Graphics> object, and then call <xref:System.Drawing.Graphics.Dispose%2A> when you are finished using it.</span></span> <span data-ttu-id="3d62e-729">有关 Windows 消息的详细信息，请参阅<xref:System.Windows.Forms.Control.WndProc%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-729">For more information about Windows messages, see <xref:System.Windows.Forms.Control.WndProc%2A>.</span></span>  
  
 <span data-ttu-id="3d62e-730">根据设计，<xref:System.Windows.Forms.Control.CreateGraphics%2A>将所有权设置为调用线程，并且如果在其他线程上调用将失败。</span><span class="sxs-lookup"><span data-stu-id="3d62e-730">By design, <xref:System.Windows.Forms.Control.CreateGraphics%2A> sets ownership to the calling thread, and fails if it is called on other threads.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-731">除了<xref:System.Windows.Forms.Control.InvokeRequired%2A>属性，在控件上都是线程安全的四种方法： <xref:System.Windows.Forms.Control.Invoke%2A>， <xref:System.Windows.Forms.Control.BeginInvoke%2A>， <xref:System.Windows.Forms.Control.EndInvoke%2A>，和<xref:System.Windows.Forms.Control.CreateGraphics%2A>如果已创建控件的句柄。</span><span class="sxs-lookup"><span data-stu-id="3d62e-731">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="3d62e-732">调用<xref:System.Windows.Forms.Control.CreateGraphics%2A>后台线程上创建控件的句柄之前可能会导致非法的跨线程调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-732">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="3d62e-733">对于所有其他方法调用，您应使用 invoke 方法之一来封送对控件的线程的调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-733">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-734">下面的代码示例调整大小指定的控件，因此控件将容纳带格式的文本。</span><span class="sxs-lookup"><span data-stu-id="3d62e-734">The following code example resizes the specified control so the control will accommodate its formatted text.</span></span> <span data-ttu-id="3d62e-735">格式化文本<xref:System.Windows.Forms.Control.Text%2A>与该控件的属性的已分配<xref:System.Windows.Forms.Control.Font%2A>应用于的文本。</span><span class="sxs-lookup"><span data-stu-id="3d62e-735">The formatted text is the <xref:System.Windows.Forms.Control.Text%2A> property with the control's assigned <xref:System.Windows.Forms.Control.Font%2A> applied to the text.</span></span> <span data-ttu-id="3d62e-736">`AutoSizeControl`方法在此示例中还具有`textPadding`参数，它表示要应用于控件的所有边缘的填充量。</span><span class="sxs-lookup"><span data-stu-id="3d62e-736">The `AutoSizeControl` method in this example also has a `textPadding` parameter that represents the padding to apply to all edges of the control.</span></span> <span data-ttu-id="3d62e-737">若要使看起来相等的填充量，将文本与`MiddleCenter`的值<xref:System.Drawing.ContentAlignment?displayProperty=nameWithType>如果控件支持它。</span><span class="sxs-lookup"><span data-stu-id="3d62e-737">To make the padding appear equal, align the text with the `MiddleCenter` value of <xref:System.Drawing.ContentAlignment?displayProperty=nameWithType> if your control supports it.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Member5#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CPP/controlmembers5.cpp#1)]
 [!code-csharp[Windows.Forms.Control Member5#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CS/controlmembers5.cs#1)]
 [!code-vb[Windows.Forms.Control Member5#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Member5/VB/controlmembers5.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-738">用于安全子窗口调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-738">for safe subwindows to call this method.</span>
          </span>
          <span data-ttu-id="3d62e-739">关联枚举：<see langword="SafeSubWindows" />的值<see cref="T:System.Security.Permissions.UIPermissionWindow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-739">Associated enumeration: <see langword="SafeSubWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected virtual void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CreateHandle();" />
      <MemberSignature Language="F#" Value="abstract member CreateHandle : unit -&gt; unit&#xA;override this.CreateHandle : unit -&gt; unit" Usage="control.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-740">为该控件创建句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-740">Creates a handle for the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-741">通常不应调用<xref:System.Windows.Forms.Control.CreateHandle%2A>直接方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-741">You typically should not call the <xref:System.Windows.Forms.Control.CreateHandle%2A> method directly.</span></span> <span data-ttu-id="3d62e-742">首选的方法是调用<xref:System.Windows.Forms.Control.CreateControl%2A>方法，这会强制创建控件时要创建的控件及其子控件的句柄。</span><span class="sxs-lookup"><span data-stu-id="3d62e-742">The preferred method is to call the <xref:System.Windows.Forms.Control.CreateControl%2A> method, which forces a handle to be created for the control and its child controls when the control is created.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3d62e-743">对象处于被释放状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-743">The object is in a disposed state.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-744">有关继承的类来调用此方法的所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-744">for all windows for inheriting classes to call this method.</span>
          </span>
          <span data-ttu-id="3d62e-745">关联枚举：<see langword="AllWindows" />的值<see cref="T:System.Security.Permissions.UIPermissionWindow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-745">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-746">重写时<see cref="M:System.Windows.Forms.Control.CreateHandle" />在派生类中，请务必调用基类的<see cref="M:System.Windows.Forms.Control.CreateHandle" />方法，以确保已创建了句柄。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-746">When overriding <see cref="M:System.Windows.Forms.Control.CreateHandle" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.CreateHandle" /> method to ensure that the handle is created.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.Control.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-747">获取创建控件句柄时所需要的创建参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-747">Gets the required creation parameters when the control handle is created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-748">
            <see cref="T:System.Windows.Forms.CreateParams" />，包含创建控件的句柄时所需的创建参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-748">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-749"><xref:System.Windows.Forms.Control.CreateParams%2A>属性不应重写，用于调整派生控件的属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-749">The <xref:System.Windows.Forms.Control.CreateParams%2A> property should not be overridden and used to adjust the properties of your derived control.</span></span> <span data-ttu-id="3d62e-750">属性，如<xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=nameWithType>， <xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=nameWithType>，并<xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=nameWithType>应设置在控件中的相应属性如<xref:System.Windows.Forms.Control.Text%2A?displayProperty=nameWithType>，<xref:System.Windows.Forms.Control.Width%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.Control.Height%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-750">Properties such as the <xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=nameWithType>, and <xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=nameWithType> should be set by the corresponding properties in your control such as <xref:System.Windows.Forms.Control.Text%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.Width%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.Height%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3d62e-751"><xref:System.Windows.Forms.CreateParams>包装标准 Windows 控件类，或若要设置样式不提供由 Windows 窗体的命名空间时应只扩展。</span><span class="sxs-lookup"><span data-stu-id="3d62e-751">The <xref:System.Windows.Forms.CreateParams> should only be extended when you are wrapping a standard Windows control class or to set styles not provided by the Windows Forms namespace.</span></span> <span data-ttu-id="3d62e-752">有关创建控制参数的详细信息，请参阅`CreateWindow`并`CreateWindowEx`函数和[CREATESTRUCT](http://msdn.microsoft.com/library/windows/desktop/ms632603.aspx)结构文档。</span><span class="sxs-lookup"><span data-stu-id="3d62e-752">For more information about creating control parameters, see the `CreateWindow` and `CreateWindowEx` functions and the [CREATESTRUCT](http://msdn.microsoft.com/library/windows/desktop/ms632603.aspx) structure documentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-753">下面的代码示例扩展了<xref:System.Windows.Forms.Control.CreateParams%2A>属性的<xref:System.Windows.Forms.Button>派生的类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-753">The following code example extends the <xref:System.Windows.Forms.Control.CreateParams%2A> property of a <xref:System.Windows.Forms.Button> derived class.</span></span> <span data-ttu-id="3d62e-754"><xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=nameWithType>更改属性时，这将导致按钮以显示<xref:System.Drawing.Icon>而不是<xref:System.Drawing.Image>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-754">The <xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=nameWithType> property is changed, which causes the button to display an <xref:System.Drawing.Icon> rather than an <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="3d62e-755">此示例需要您有一个类继承自<xref:System.Windows.Forms.Button>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-755">This example requires that you have a class that inherits from the <xref:System.Windows.Forms.Button> class.</span></span>  
  
 [!code-cpp[CreateParams#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CreateParams/CPP/createparams.cpp#3)]
 [!code-csharp[CreateParams#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CreateParams/CS/createparams.cs#3)]
 [!code-vb[CreateParams#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CreateParams/VB/createparams.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="3d62e-756">对于获取属性值时调用非托管的代码直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-756">for the immediate caller to call unmanaged code when getting the property value.</span>
          </span>
          <span data-ttu-id="3d62e-757">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-757">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-758">重写时<see cref="P:System.Windows.Forms.Control.CreateParams" />属性在派生类中，使用基类的<see cref="P:System.Windows.Forms.Control.CreateParams" />属性扩展的基实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-758">When overriding the <see cref="P:System.Windows.Forms.Control.CreateParams" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.CreateParams" /> property to extend the base implementation.</span>
            </span>
            <span data-ttu-id="3d62e-759">否则，必须提供所有的实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-759">Otherwise, you must provide all the implementation.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Cursor Cursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor Cursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Cursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Cursor ^ Cursor { System::Windows::Forms::Cursor ^ get(); void set(System::Windows::Forms::Cursor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cursor : System.Windows.Forms.Cursor with get, set" Usage="System.Windows.Forms.Control.Cursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-760">获取或设置当鼠标指针位于控件上时显示的光标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-760">Gets or sets the cursor that is displayed when the mouse pointer is over the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-761">一个 <see cref="T:System.Windows.Forms.Cursor" />，表示当鼠标指针位于控件上时显示的光标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-761">A <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor to display when the mouse pointer is over the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-762">将分配<xref:System.Windows.Forms.Cursor>到<xref:System.Windows.Forms.Control.Cursor%2A>要更改鼠标指针位于控件上方时显示的光标的控件的属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-762">Assign a <xref:System.Windows.Forms.Cursor> to the <xref:System.Windows.Forms.Control.Cursor%2A> property of the control to change the cursor displayed when the mouse pointer is over the control.</span></span> <span data-ttu-id="3d62e-763">若要暂时更改你的应用程序集上的所有控件的鼠标光标<xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-763">To temporarily change the mouse cursor for all controls on your application set the <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="3d62e-764">通常将设置<xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType>属性设置为等待游标时填充<xref:System.Windows.Forms.ComboBox>或保存或加载文件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-764">Typically you would set the <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType> property to a wait cursor when populating a <xref:System.Windows.Forms.ComboBox> or saving or loading a file.</span></span>  
  
 <span data-ttu-id="3d62e-765"><xref:System.Windows.Forms.Control.Cursor%2A>属性是一个环境属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-765">The <xref:System.Windows.Forms.Control.Cursor%2A> property is an ambient property.</span></span> <span data-ttu-id="3d62e-766">环境属性是控件属性，如果未设置，检索从父控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-766">An ambient property is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="3d62e-767">例如，<xref:System.Windows.Forms.Button>具有相同<xref:System.Windows.Forms.Control.BackColor%2A>作为其父<xref:System.Windows.Forms.Form>默认情况下。</span><span class="sxs-lookup"><span data-stu-id="3d62e-767">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="3d62e-768">有关环境属性的详细信息，请参阅<xref:System.Windows.Forms.AmbientProperties>类或<xref:System.Windows.Forms.Control>类概述。</span><span class="sxs-lookup"><span data-stu-id="3d62e-768">For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-769">以下代码示例填充<xref:System.Windows.Forms.ComboBox>与用户的可用的逻辑驱动器。</span><span class="sxs-lookup"><span data-stu-id="3d62e-769">The following code example fills a <xref:System.Windows.Forms.ComboBox> with the user's available logical drives.</span></span> <span data-ttu-id="3d62e-770">该示例还将组合框<xref:System.Windows.Forms.Cursor>属性以便<xref:System.Windows.Forms.Cursors.Hand%2A?displayProperty=nameWithType>鼠标指针位于下拉列表按钮上方时显示的光标。</span><span class="sxs-lookup"><span data-stu-id="3d62e-770">The example also sets the combo box's <xref:System.Windows.Forms.Cursor> property so the <xref:System.Windows.Forms.Cursors.Hand%2A?displayProperty=nameWithType> cursor is displayed when the mouse pointer is over the drop-down button.</span></span> <span data-ttu-id="3d62e-771">此代码，则需要<xref:System.Windows.Forms.Form>与<xref:System.Windows.Forms.ComboBox>上它。</span><span class="sxs-lookup"><span data-stu-id="3d62e-771">This code requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.ComboBox> on it.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CPP/misccontrolproperties.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CS/misccontrolproperties.cs#1)]
 [!code-vb[Windows.Forms.Control Properties2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties2/VB/misccontrolproperties.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-772">有关安全子窗口设置此属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-772">for safe subwindows to set this property value.</span>
          </span>
          <span data-ttu-id="3d62e-773">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-773">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-774">重写时<see cref="P:System.Windows.Forms.Control.Cursor" />属性在派生类中，使用基类的<see cref="P:System.Windows.Forms.Control.Cursor" />属性扩展的基实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-774">When overriding the <see cref="P:System.Windows.Forms.Control.Cursor" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Cursor" /> property to extend the base implementation.</span>
            </span>
            <span data-ttu-id="3d62e-775">否则，必须提供所有的实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-775">Otherwise, you must provide all the implementation.</span>
            </span>
            <span data-ttu-id="3d62e-776">不需要重写二者<see langword="get" />并<see langword="set" />方法的<see cref="P:System.Windows.Forms.Control.Cursor" />属性; 您可以根据需要覆盖只有一个。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-776">You are not required to override both the <see langword="get" /> and <see langword="set" /> methods of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property; you can override only one if needed.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.Forms.Cursor" />
        <altmember cref="T:System.Windows.Forms.Cursors" />
      </Docs>
    </Member>
    <Member MemberName="CursorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CursorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CursorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.CursorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CursorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CursorChanged;" />
      <MemberSignature Language="F#" Value="member this.CursorChanged : EventHandler " Usage="member this.CursorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-777">当 <see cref="P:System.Windows.Forms.Control.Cursor" /> 属性的值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-777">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-778">如果引发此事件<xref:System.Windows.Forms.Control.Cursor%2A>属性更改通过以编程方式修改或用户交互。</span><span class="sxs-lookup"><span data-stu-id="3d62e-778">This event is raised if the <xref:System.Windows.Forms.Control.Cursor%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="3d62e-779">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-779">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-780">下面的代码示例演示如何更改鼠标光标使用<xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType>属性，<xref:System.Windows.Forms.Cursor>类，和<xref:System.Windows.Forms.Cursors>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-780">The following code example demonstrates changing the mouse cursor using the <xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Forms.Cursor> class, and the <xref:System.Windows.Forms.Cursors> class.</span></span> <span data-ttu-id="3d62e-781">该示例创建一个包含窗体<xref:System.Windows.Forms.ComboBox>控件，<xref:System.Windows.Forms.Panel>控件，和一个<xref:System.Windows.Forms.ListView>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-781">The example creates a form that contains a <xref:System.Windows.Forms.ComboBox> control, a <xref:System.Windows.Forms.Panel> control, and a <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="3d62e-782"><xref:System.Windows.Forms.ComboBox>包含由提供的所有游标<xref:System.Windows.Forms.Cursors>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-782">The <xref:System.Windows.Forms.ComboBox> contains all cursors provided by the <xref:System.Windows.Forms.Cursors> class.</span></span> <span data-ttu-id="3d62e-783">当用户选择在鼠标光标<xref:System.Windows.Forms.ComboBox>，则<xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType>属性设置为更新的光标所选光标<xref:System.Windows.Forms.Panel>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-783">When the user selects a mouse cursor in the <xref:System.Windows.Forms.ComboBox>, the <xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType> property is set to the selected cursor, which updates the cursor for the <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="3d62e-784"><xref:System.Windows.Forms.ListView>每次更新<xref:System.Windows.Forms.Control.CursorChanged?displayProperty=nameWithType>事件发生。</span><span class="sxs-lookup"><span data-stu-id="3d62e-784">The <xref:System.Windows.Forms.ListView> is updated every time the <xref:System.Windows.Forms.Control.CursorChanged?displayProperty=nameWithType> event occurs.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursors#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursors/CPP/cursorexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.Cursors#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursors/CS/cursorexample.cs#1)]
 [!code-vb[System.Windows.Forms.Cursors#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursors/VB/cursorexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Cursor" />
        <altmember cref="T:System.Windows.Forms.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ControlBindingsCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ControlBindingsCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As ControlBindingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ControlBindingsCollection ^ DataBindings { System::Windows::Forms::ControlBindingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBindings : System.Windows.Forms.ControlBindingsCollection" Usage="System.Windows.Forms.Control.DataBindings" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IBindableComponent.DataBindings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlBindingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-785">为该控件获取数据绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-785">Gets the data bindings for the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-786">一个 <see cref="T:System.Windows.Forms.ControlBindingsCollection" />，其中包含该控件的 <see cref="T:System.Windows.Forms.Binding" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-786">A <see cref="T:System.Windows.Forms.ControlBindingsCollection" /> that contains the <see cref="T:System.Windows.Forms.Binding" /> objects for the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-787">使用<xref:System.Windows.Forms.Control.DataBindings%2A>属性来访问<xref:System.Windows.Forms.ControlBindingsCollection>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-787">Use the <xref:System.Windows.Forms.Control.DataBindings%2A> property to access the <xref:System.Windows.Forms.ControlBindingsCollection>.</span></span> <span data-ttu-id="3d62e-788">通过添加<xref:System.Windows.Forms.Binding>对象添加到集合中，可以将控件的任何属性绑定到对象的属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-788">By adding <xref:System.Windows.Forms.Binding> objects to the collection, you can bind any property of a control to the property of an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-789">下面的代码示例将添加<xref:System.Windows.Forms.Binding>对象添加到<xref:System.Windows.Forms.ControlBindingsCollection>的五个控件： 四个<xref:System.Windows.Forms.TextBox>控件和一个<xref:System.Windows.Forms.DateTimePicker>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-789">The following code example adds <xref:System.Windows.Forms.Binding> objects to the <xref:System.Windows.Forms.ControlBindingsCollection> of five controls: four <xref:System.Windows.Forms.TextBox> controls and a <xref:System.Windows.Forms.DateTimePicker> control.</span></span> <span data-ttu-id="3d62e-790">通过 <xref:System.Windows.Forms.ControlBindingsCollection> 类的 <xref:System.Windows.Forms.Control.DataBindings%2A> 属性来访问 <xref:System.Windows.Forms.Control>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-790">The <xref:System.Windows.Forms.ControlBindingsCollection> is accessed through the <xref:System.Windows.Forms.Control.DataBindings%2A> property of the <xref:System.Windows.Forms.Control> class.</span></span>  
  
 [!code-cpp[Classic Control.DataBindings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Control.DataBindings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Control.DataBindings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Control.DataBindings Example/CS/source.cs#1)]
 [!code-vb[Classic Control.DataBindings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Control.DataBindings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.BindingContext" />
        <altmember cref="T:System.Windows.Forms.Binding" />
        <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
      </Docs>
    </Member>
    <Member MemberName="DefaultBackColor">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color DefaultBackColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Drawing.Color DefaultBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Color DefaultBackColor { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultBackColor : System.Drawing.Color" Usage="System.Windows.Forms.Control.DefaultBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-791">获取控件的默认背景色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-791">Gets the default background color of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-792">控件的默认背景 <see cref="T:System.Drawing.Color" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-792">The default background <see cref="T:System.Drawing.Color" /> of the control.</span>
          </span>
          <span data-ttu-id="3d62e-793">默认值为 <see cref="P:System.Drawing.SystemColors.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-793">The default is <see cref="P:System.Drawing.SystemColors.Control" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-794">这是默认的<xref:System.Windows.Forms.Control.BackColor%2A>泛型的顶级控件的属性值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-794">This is the default <xref:System.Windows.Forms.Control.BackColor%2A> property value of a generic top-level control.</span></span> <span data-ttu-id="3d62e-795">派生的类可以具有不同的默认值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-795">Derived classes can have different defaults.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-796">下面的代码示例演示如何使用<xref:System.Windows.Forms.Control.DefaultBackColor%2A>， <xref:System.Windows.Forms.Control.DefaultFont%2A>，和<xref:System.Windows.Forms.Control.DefaultForeColor%2A>成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-796">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, and <xref:System.Windows.Forms.Control.DefaultForeColor%2A> members.</span></span> <span data-ttu-id="3d62e-797">若要运行该示例，请将以下代码粘贴在窗体包含<xref:System.Windows.Forms.ListBox>调用 ListBox1。</span><span class="sxs-lookup"><span data-stu-id="3d62e-797">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.ListBox> called ListBox1.</span></span> <span data-ttu-id="3d62e-798">调用`Populate_ListBox`窗体的构造函数中的方法或<xref:System.Windows.Forms.Form.Load>事件处理方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-798">Call the `Populate_ListBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.SystemColors" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCursor">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Cursor DefaultCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor DefaultCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Cursor ^ DefaultCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.Control.DefaultCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-799">获取或设置控件的默认光标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-799">Gets or sets the default cursor for the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-800">一个 <see cref="T:System.Windows.Forms.Cursor" /> 类型的对象，表示当前默认光标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-800">An object of type <see cref="T:System.Windows.Forms.Cursor" /> representing the current default cursor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-801">重写<xref:System.Windows.Forms.Control.DefaultCursor%2A>配置您的控件的默认游标。</span><span class="sxs-lookup"><span data-stu-id="3d62e-801">Override <xref:System.Windows.Forms.Control.DefaultCursor%2A> to configure a default cursor for your control.</span></span> <span data-ttu-id="3d62e-802">这比控件的构造函数中设置游标更有效，并为某些与游标相关的设计器函数提供的自动支持。</span><span class="sxs-lookup"><span data-stu-id="3d62e-802">This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFont">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font DefaultFont { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Font DefaultFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultFont" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Font ^ DefaultFont { System::Drawing::Font ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFont : System.Drawing.Font" Usage="System.Windows.Forms.Control.DefaultFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-803">获取控件的默认字体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-803">Gets the default font of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-804">控件的默认 <see cref="T:System.Drawing.Font" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-804">The default <see cref="T:System.Drawing.Font" /> of the control.</span>
          </span>
          <span data-ttu-id="3d62e-805">根据用户的操作系统以及系统的本地区域性设置的不同，返回的值也将不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-805">The value returned will vary depending on the user's operating system the local culture setting of their system.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-806">下表描述了返回的值<xref:System.Windows.Forms.Control.DefaultFont%2A>具体取决于操作系统和本地区域性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-806">The following table describes the value returned by <xref:System.Windows.Forms.Control.DefaultFont%2A> depending on the operating system and local culture.</span></span>  
  
|<span data-ttu-id="3d62e-807">系统 / 和或区域性</span><span class="sxs-lookup"><span data-stu-id="3d62e-807">System/and or Culture</span></span>|<span data-ttu-id="3d62e-808">字体</span><span class="sxs-lookup"><span data-stu-id="3d62e-808">Font</span></span>|  
|----------------------------|----------|  
|<span data-ttu-id="3d62e-809">X，日语版本的 Windows NT 4</span><span class="sxs-lookup"><span data-stu-id="3d62e-809">Windows NT 4x, Japanese version</span></span>|<span data-ttu-id="3d62e-810">MS UI Gothic，9 点。</span><span class="sxs-lookup"><span data-stu-id="3d62e-810">MS UI Gothic, 9 point.</span></span>|  
|<span data-ttu-id="3d62e-811">阿拉伯语 Windows</span><span class="sxs-lookup"><span data-stu-id="3d62e-811">Arabic Windows</span></span>|<span data-ttu-id="3d62e-812">宋体，8 磅。</span><span class="sxs-lookup"><span data-stu-id="3d62e-812">Tahoma, 8 point.</span></span>|  
|<span data-ttu-id="3d62e-813">其他操作系统/区域性</span><span class="sxs-lookup"><span data-stu-id="3d62e-813">Other operating system/culture</span></span>|<span data-ttu-id="3d62e-814">MS Shell Dlg 逻辑字体，通常 Microsoft San Serif 8 点。</span><span class="sxs-lookup"><span data-stu-id="3d62e-814">MS Shell Dlg logical font, typically Microsoft San Serif 8 point.</span></span>|  
  
 <span data-ttu-id="3d62e-815">MS Shell Dlg 将映射到系统注册表中设置的字体。</span><span class="sxs-lookup"><span data-stu-id="3d62e-815">MS Shell Dlg maps to a font set in the system registry.</span></span>  
  
 <span data-ttu-id="3d62e-816">如果未安装以前的字体，默认字体是宋体、 8 点。</span><span class="sxs-lookup"><span data-stu-id="3d62e-816">If the previous fonts are not installed, the default font is Tahoma, 8 point.</span></span> <span data-ttu-id="3d62e-817">如果未安装宋体、 8 点，<xref:System.Windows.Forms.Control.DefaultFont%2A>返回的值<xref:System.Drawing.FontFamily.GenericSansSerif%2A>属性</span><span class="sxs-lookup"><span data-stu-id="3d62e-817">If Tahoma, 8 point, is not installed, <xref:System.Windows.Forms.Control.DefaultFont%2A> returns the value of the <xref:System.Drawing.FontFamily.GenericSansSerif%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-818">下面的代码示例演示如何使用<xref:System.Windows.Forms.Control.DefaultBackColor%2A>， <xref:System.Windows.Forms.Control.DefaultFont%2A>，和<xref:System.Windows.Forms.Control.DefaultForeColor%2A>成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-818">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, and <xref:System.Windows.Forms.Control.DefaultForeColor%2A> members.</span></span> <span data-ttu-id="3d62e-819">若要运行该示例，请将以下代码粘贴在窗体包含<xref:System.Windows.Forms.ListBox>调用 ListBox1。</span><span class="sxs-lookup"><span data-stu-id="3d62e-819">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.ListBox> called ListBox1.</span></span> <span data-ttu-id="3d62e-820">调用`Populate_ListBox`窗体的构造函数中的方法或<xref:System.Windows.Forms.Form.Load>事件处理方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-820">Call the `Populate_ListBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3d62e-821">默认字体或地区可选字体未安装在客户计算机上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-821">The default font or the regional alternative fonts are not installed on the client computer.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Control.Font" />
        <altmember cref="T:System.Drawing.Font" />
      </Docs>
    </Member>
    <Member MemberName="DefaultForeColor">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color DefaultForeColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Drawing.Color DefaultForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Color DefaultForeColor { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultForeColor : System.Drawing.Color" Usage="System.Windows.Forms.Control.DefaultForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-822">获取控件的默认前景色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-822">Gets the default foreground color of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-823">控件的前景 <see cref="T:System.Drawing.Color" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-823">The default foreground <see cref="T:System.Drawing.Color" /> of the control.</span>
          </span>
          <span data-ttu-id="3d62e-824">默认值为 <see cref="P:System.Drawing.SystemColors.ControlText" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-824">The default is <see cref="P:System.Drawing.SystemColors.ControlText" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-825">这是默认的<xref:System.Windows.Forms.Control.ForeColor%2A>无父级控件的属性值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-825">This is the default <xref:System.Windows.Forms.Control.ForeColor%2A> property value of a nonparented control.</span></span> <span data-ttu-id="3d62e-826">派生的类可以具有不同的默认值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-826">Derived classes can have different defaults.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-827">下面的代码示例演示如何使用<xref:System.Windows.Forms.Control.DefaultBackColor%2A>， <xref:System.Windows.Forms.Control.DefaultFont%2A>，和<xref:System.Windows.Forms.Control.DefaultForeColor%2A>成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-827">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, and <xref:System.Windows.Forms.Control.DefaultForeColor%2A> members.</span></span> <span data-ttu-id="3d62e-828">若要运行该示例，请将以下代码粘贴在窗体包含<xref:System.Windows.Forms.ListBox>调用 ListBox1。</span><span class="sxs-lookup"><span data-stu-id="3d62e-828">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.ListBox> called ListBox1.</span></span> <span data-ttu-id="3d62e-829">调用`Populate_ListBox`窗体的构造函数中的方法或<xref:System.Windows.Forms.Form.Load>事件处理方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-829">Call the `Populate_ListBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ForeColor" />
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.SystemColors" />
      </Docs>
    </Member>
    <Member MemberName="DefaultImeMode">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.ImeMode DefaultImeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode DefaultImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultImeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode DefaultImeMode { System::Windows::Forms::ImeMode get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultImeMode : System.Windows.Forms.ImeMode" Usage="System.Windows.Forms.Control.DefaultImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-830">获取控件支持的默认输入法编辑器 (IME) 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-830">Gets the default Input Method Editor (IME) mode supported by the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-831">
            <see cref="T:System.Windows.Forms.ImeMode" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-831">One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-832">输入法编辑器 (IME) 是使用户能够使用标准键盘输入复杂字符和符号，如日本汉字字符的程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-832">An Input Method Editor (IME) is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.</span></span>  
  
 <span data-ttu-id="3d62e-833">在中实现<xref:System.Windows.Forms.Control>类，此属性始终返回<xref:System.Windows.Forms.ImeMode.Inherit?displayProperty=nameWithType>值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-833">As implemented in the <xref:System.Windows.Forms.Control> class, this property always returns the <xref:System.Windows.Forms.ImeMode.Inherit?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="3d62e-834"><xref:System.Windows.Forms.ImeMode.Inherit>值指定的 IME 模式从父控件继承。</span><span class="sxs-lookup"><span data-stu-id="3d62e-834">The <xref:System.Windows.Forms.ImeMode.Inherit> value specifies that the IME mode is inherited from the parent control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-835">下面的代码示例重写<xref:System.Windows.Forms.Control.DefaultImeMode%2A>属性，以打开输入法编辑器关闭。</span><span class="sxs-lookup"><span data-stu-id="3d62e-835">The following code example overrides the <xref:System.Windows.Forms.Control.DefaultImeMode%2A> property to turn off the Input Method Editor.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties2#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CPP/misccontrolproperties.cpp#4)]
 [!code-csharp[Windows.Forms.Control Properties2#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CS/misccontrolproperties.cs#4)]
 [!code-vb[Windows.Forms.Control Properties2#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties2/VB/misccontrolproperties.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-836">重写时<see cref="P:System.Windows.Forms.Control.DefaultImeMode" />属性在派生类中，使用基类的<see cref="P:System.Windows.Forms.Control.DefaultImeMode" />属性扩展的基实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-836">When overriding the <see cref="P:System.Windows.Forms.Control.DefaultImeMode" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.DefaultImeMode" /> property to extend the base implementation.</span>
            </span>
            <span data-ttu-id="3d62e-837">否则，必须提供所有的实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-837">Otherwise, you must provide all the implementation.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.Forms.ImeMode" />
        <altmember cref="P:System.Windows.Forms.Control.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMargin">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Padding DefaultMargin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultMargin" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultMargin As Padding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Padding DefaultMargin { System::Windows::Forms::Padding get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMargin : System.Windows.Forms.Padding" Usage="System.Windows.Forms.Control.DefaultMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-838">获取控件之间默认指定的间距（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-838">Gets the space, in pixels, that is specified by default between controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-839">表示控件之间默认间距的 <see cref="T:System.Windows.Forms.Padding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-839">A <see cref="T:System.Windows.Forms.Padding" /> that represents the default space between controls.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMaximumSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size DefaultMaximumSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultMaximumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultMaximumSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultMaximumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultMaximumSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMaximumSize : System.Drawing.Size" Usage="System.Windows.Forms.Control.DefaultMaximumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-840">获取以像素为单位的长度和高度，此长度和高度被指定为控件的默认最大大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-840">Gets the length and height, in pixels, that is specified as the default maximum size of a control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-841">一个表示控件大小的 <see cref="M:System.Drawing.Point.#ctor(System.Drawing.Size)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-841">A <see cref="M:System.Drawing.Point.#ctor(System.Drawing.Size)" /> representing the size of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMinimumSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size DefaultMinimumSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultMinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultMinimumSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultMinimumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultMinimumSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMinimumSize : System.Drawing.Size" Usage="System.Windows.Forms.Control.DefaultMinimumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-842">获取以像素为单位的长度和高度，此长度和高度被指定为控件的默认最小大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-842">Gets the length and height, in pixels, that is specified as the default minimum size of a control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-843">一个表示控件大小的 <see cref="T:System.Drawing.Size" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-843">A <see cref="T:System.Drawing.Size" /> representing the size of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPadding">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Padding DefaultPadding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultPadding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultPadding" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultPadding As Padding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Padding DefaultPadding { System::Windows::Forms::Padding get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPadding : System.Windows.Forms.Padding" Usage="System.Windows.Forms.Control.DefaultPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-844">获取控件内容的内部间距（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-844">Gets the internal spacing, in pixels, of the contents of a control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-845">表示控件内容内部间距的 <see cref="T:System.Windows.Forms.Padding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-845">A <see cref="T:System.Windows.Forms.Padding" /> that represents the internal spacing of the contents of a control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.Control.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-846">获取控件的默认大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-846">Gets the default size of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-847">控件的默认 <see cref="T:System.Drawing.Size" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-847">The default <see cref="T:System.Drawing.Size" /> of the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-848"><xref:System.Windows.Forms.Control.DefaultSize%2A>属性表示<xref:System.Drawing.Size>最初创建时的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-848">The <xref:System.Windows.Forms.Control.DefaultSize%2A> property represents the <xref:System.Drawing.Size> of the control when it is initially created.</span></span> <span data-ttu-id="3d62e-849">可以通过设置调整控件大小及其<xref:System.Windows.Forms.Control.Size%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-849">You can adjust the size of the control by setting its <xref:System.Windows.Forms.Control.Size%2A> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-850">若要维护更好的性能，不设置<xref:System.Drawing.Size>的其构造函数中的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-850">To maintain better performance, do not set the <xref:System.Drawing.Size> of a control in its constructor.</span></span> <span data-ttu-id="3d62e-851">首选的方法是重写<xref:System.Windows.Forms.Control.DefaultSize%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-851">The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-852">在 Windows Server 2003 系统的大小<xref:System.Windows.Forms.Form>受到限制，最大像素宽度和高度的监视器。</span><span class="sxs-lookup"><span data-stu-id="3d62e-852">On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-853">下面的代码示例重写<xref:System.Windows.Forms.Control.DefaultSize%2A>属性，并使窗体 500 像素正方形的默认大小。</span><span class="sxs-lookup"><span data-stu-id="3d62e-853">The following code example overrides the <xref:System.Windows.Forms.Control.DefaultSize%2A> property, and makes the default size of the form 500 pixels square.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties2#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CPP/misccontrolproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties2#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CS/misccontrolproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties2#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties2/VB/misccontrolproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-854">重写时<see cref="P:System.Windows.Forms.Control.DefaultSize" />派生类中的属性，它是更可取的方法返回<see cref="T:System.Drawing.Size" />与所需的维度，而不是重写的实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-854">When overriding the <see cref="P:System.Windows.Forms.Control.DefaultSize" /> property in a derived class, it is preferable to return a <see cref="T:System.Drawing.Size" /> with the desired dimensions rather than to override all the implementation.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="T:System.Drawing.Size" />
      </Docs>
    </Member>
    <Member MemberName="DefWndProc">
      <MemberSignature Language="C#" Value="protected virtual void DefWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DefWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DefWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DefWndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member DefWndProc :  -&gt; unit&#xA;override this.DefWndProc :  -&gt; unit" Usage="control.DefWndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="3d62e-855">要处理的 Windows <see cref="T:System.Windows.Forms.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-855">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-856">向默认窗口过程发送指定消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-856">Sends the specified message to the default window procedure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-857">有关处理 Windows 消息的详细信息，请参阅[WindowProc 函数](http://go.microsoft.com/fwlink/?LinkId=181565)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-857">For more information about processing Windows messages, see the [WindowProc function](http://go.microsoft.com/fwlink/?LinkId=181565).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="3d62e-858">直接调用方调用非托管的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-858">for the immediate caller to call unmanaged code.</span>
          </span>
          <span data-ttu-id="3d62e-859">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-859">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="DestroyHandle">
      <MemberSignature Language="C#" Value="protected virtual void DestroyHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DestroyHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.DestroyHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DestroyHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DestroyHandle();" />
      <MemberSignature Language="F#" Value="abstract member DestroyHandle : unit -&gt; unit&#xA;override this.DestroyHandle : unit -&gt; unit" Usage="control.DestroyHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-860">毁坏与该控件关联的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-860">Destroys the handle associated with the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="3d62e-861">直接调用方调用非托管的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-861">for the immediate caller to call unmanaged code.</span>
          </span>
          <span data-ttu-id="3d62e-862">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-862">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-863">重写时<see cref="M:System.Windows.Forms.Control.DestroyHandle" />在派生类中，请务必调用基类的<see cref="M:System.Windows.Forms.Control.DestroyHandle" />方法，以确保句柄被销毁。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-863">When overriding <see cref="M:System.Windows.Forms.Control.DestroyHandle" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.DestroyHandle" /> method to ensure that the handle is destroyed.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="DeviceDpi">
      <MemberSignature Language="C#" Value="public int DeviceDpi { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DeviceDpi" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DeviceDpi" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeviceDpi As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DeviceDpi { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DeviceDpi : int" Usage="System.Windows.Forms.Control.DeviceDpi" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-864">获取显示当前控件的显示设备的 DPI 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-864">Gets the DPI value for the display device where the control is currently being displayed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-865">显示设备的 DPI 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-865">The DPI value of the display device.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRectangle">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle DisplayRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle DisplayRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DisplayRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle DisplayRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.Control.DisplayRectangle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.Layout.IArrangedElement.DisplayRectangle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-866">获取表示控件的显示区域的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-866">Gets the rectangle that represents the display area of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-867">一个 <see cref="T:System.Drawing.Rectangle" />，它表示控件的显示区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-867">A <see cref="T:System.Drawing.Rectangle" /> that represents the display area of the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-868"><xref:System.Windows.Forms.Control.DisplayRectangle%2A>属性将返回该控件的显示区域的矩形工作区。</span><span class="sxs-lookup"><span data-stu-id="3d62e-868">The <xref:System.Windows.Forms.Control.DisplayRectangle%2A> property returns the client rectangle of the display area of the control.</span></span> <span data-ttu-id="3d62e-869">对于基控件类，这是与客户端矩形相等。</span><span class="sxs-lookup"><span data-stu-id="3d62e-869">For the base control class, this is equal to the client rectangle.</span></span> <span data-ttu-id="3d62e-870">但是，继承控件可能想要更改此如果从其显示区域不同，其客户端区域。</span><span class="sxs-lookup"><span data-stu-id="3d62e-870">However, inheriting controls might want to change this if their client area differs from their display area.</span></span> <span data-ttu-id="3d62e-871">显示矩形是最小<xref:System.Drawing.Rectangle>，包括控件，用于布局控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-871">The display rectangle is the smallest <xref:System.Drawing.Rectangle> that encloses a control and is used to lay out controls.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-872">重写时<see cref="P:System.Windows.Forms.Control.DisplayRectangle" />属性在派生类中，使用基类的<see cref="P:System.Windows.Forms.Control.DisplayRectangle" />属性扩展的基实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-872">When overriding the <see cref="P:System.Windows.Forms.Control.DisplayRectangle" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.DisplayRectangle" /> property to extend the base implementation.</span>
            </span>
            <span data-ttu-id="3d62e-873">或者，您必须提供所有的实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-873">Alternatively, you must provide all the implementation.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.Control.ClientRectangle" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="control.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="3d62e-874">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-874">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-875">释放由 <see cref="T:System.Windows.Forms.Control" /> 和它的子控件占用的非托管资源，另外还可以释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-875">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control" /> and its child controls and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-876">调用此方法由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。`Dispose()`</span><span class="sxs-lookup"><span data-stu-id="3d62e-876">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.`Dispose()`</span></span> <span data-ttu-id="3d62e-877">调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-877">invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="3d62e-878"><xref:System.Object.Finalize%2A> 调用`Dispose`与`disposing`设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-878"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="3d62e-879">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.Windows.Forms.Control> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="3d62e-879">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Control> references.</span></span> <span data-ttu-id="3d62e-880">此方法调用每个引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-880">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-881">
              <see langword="Dispose" /> 可以由其他对象多次调用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-881">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="3d62e-882">重写时<see langword="Dispose(Boolean)" />小心不要引用已经释放的早期调用中的对象<see langword="Dispose" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-882">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="3d62e-883">有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-883">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="3d62e-884">有关详细信息<see langword="Dispose" />并<see cref="M:System.Object.Finalize" />，请参阅[清理了非托管资源](~/docs/standard/garbage-collection/unmanaged.md)并[重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-884">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Disposing">
      <MemberSignature Language="C#" Value="public bool Disposing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Disposing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Disposing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Disposing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Disposing { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Disposing : bool" Usage="System.Windows.Forms.Control.Disposing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-885">获取一个值，该值指示 <see cref="T:System.Windows.Forms.Control" /> 基类是否在释放进程中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-885">Gets a value indicating whether the base <see cref="T:System.Windows.Forms.Control" /> class is in the process of disposing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-886">如果 <see cref="T:System.Windows.Forms.Control" /> 基类在释放进程中，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-886">
              <see langword="true" /> if the base <see cref="T:System.Windows.Forms.Control" /> class is in the process of disposing; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-887">当此属性返回`true`，基<xref:System.Windows.Forms.Control>类是在释放进程中。</span><span class="sxs-lookup"><span data-stu-id="3d62e-887">When this property returns `true`, the base <xref:System.Windows.Forms.Control> class is in the process of disposing.</span></span> <span data-ttu-id="3d62e-888">控件被释放后，不能再作为有效的 Windows 控件引用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-888">After the control is disposed of, it can no longer be referenced as a valid Windows control.</span></span> <span data-ttu-id="3d62e-889">即使控件的实例已释放，它仍将保留在内存中直到从通过垃圾回收的内存中删除。</span><span class="sxs-lookup"><span data-stu-id="3d62e-889">Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection.</span></span> <span data-ttu-id="3d62e-890">当控件被释放的时不能调用其<xref:System.Windows.Forms.Control.RecreateHandle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-890">When a control is disposed of, you cannot call its <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Dispose(System.Boolean)" />
        <altmember cref="T:System.GC" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
      </Docs>
    </Member>
    <Member MemberName="Dock">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DockStyle Dock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DockStyle Dock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Dock" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Dock As DockStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DockStyle Dock { System::Windows::Forms::DockStyle get(); void set(System::Windows::Forms::DockStyle value); };" />
      <MemberSignature Language="F#" Value="member this.Dock : System.Windows.Forms.DockStyle with get, set" Usage="System.Windows.Forms.Control.Dock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DockStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-891">获取或设置哪些控件边框停靠到其父控件并确定控件如何随其父级一起调整大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-891">Gets or sets which control borders are docked to its parent control and determines how a control is resized with its parent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-892">
            <see cref="T:System.Windows.Forms.DockStyle" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-892">One of the <see cref="T:System.Windows.Forms.DockStyle" /> values.</span>
          </span>
          <span data-ttu-id="3d62e-893">默认值为 <see cref="F:System.Windows.Forms.DockStyle.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-893">The default is <see cref="F:System.Windows.Forms.DockStyle.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-894">使用<xref:System.Windows.Forms.Control.Dock%2A>属性来定义如何控件自动调整大小调整其父控件的大小时。</span><span class="sxs-lookup"><span data-stu-id="3d62e-894">Use the <xref:System.Windows.Forms.Control.Dock%2A> property to define how a control is automatically resized as its parent control is resized.</span></span> <span data-ttu-id="3d62e-895">例如，设置<xref:System.Windows.Forms.Control.Dock%2A>到<xref:System.Windows.Forms.DockStyle.Left?displayProperty=nameWithType>导致的控件将其自身与其父控件的左边缘对齐，并根据调整父控件的大小调整的大小。</span><span class="sxs-lookup"><span data-stu-id="3d62e-895">For example, setting <xref:System.Windows.Forms.Control.Dock%2A> to <xref:System.Windows.Forms.DockStyle.Left?displayProperty=nameWithType> causes the control to align itself with the left edges of its parent control and to resize as the parent control is resized.</span></span> <span data-ttu-id="3d62e-896">控件停靠在其 Z 顺序，即沿窗体的 z 轴 （深度） 窗体上控件的可视化分层。</span><span class="sxs-lookup"><span data-stu-id="3d62e-896">Controls are docked in their Z-order, which is the visual layering of controls on a form along the form's Z-axis (depth).</span></span>  
  
 <span data-ttu-id="3d62e-897">控件可以停靠到其父容器的一个边缘或可停靠到所有边缘并填充父容器。</span><span class="sxs-lookup"><span data-stu-id="3d62e-897">A control can be docked to one edge of its parent container or can be docked to all edges and fill the parent container.</span></span>  
  
 <span data-ttu-id="3d62e-898">设置<xref:System.Windows.Forms.Control.Margin%2A>上停靠控件的属性不起该控件从其容器的边缘的距离。</span><span class="sxs-lookup"><span data-stu-id="3d62e-898">Setting the <xref:System.Windows.Forms.Control.Margin%2A> property on a docked control has no effect on the distance of the control from the edges of its container.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-899"><xref:System.Windows.Forms.Control.Anchor%2A>和<xref:System.Windows.Forms.Control.Dock%2A>属性是互相排斥。</span><span class="sxs-lookup"><span data-stu-id="3d62e-899">The <xref:System.Windows.Forms.Control.Anchor%2A> and <xref:System.Windows.Forms.Control.Dock%2A> properties are mutually exclusive.</span></span> <span data-ttu-id="3d62e-900">只有一个可以设置一次和最后一个设置将优先。</span><span class="sxs-lookup"><span data-stu-id="3d62e-900">Only one can be set at a time, and the last one set takes precedence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-901">下面的代码示例创建<xref:System.Windows.Forms.GroupBox>和设置的某些常见属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-901">The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties.</span></span> <span data-ttu-id="3d62e-902">此示例将创建<xref:System.Windows.Forms.TextBox>，并设置其<xref:System.Windows.Forms.Control.Location%2A>组框中。</span><span class="sxs-lookup"><span data-stu-id="3d62e-902">The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box.</span></span> <span data-ttu-id="3d62e-903">接下来，设置<xref:System.Windows.Forms.Control.Text%2A>停靠此分组框到窗体顶部的分组框的属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-903">Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form.</span></span> <span data-ttu-id="3d62e-904">最后，通过设置禁用分组框<xref:System.Windows.Forms.Control.Enabled%2A>属性设置为`false`，这将导致要禁用的组框中包含的所有控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-904">Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#2)]
 [!code-csharp[Windows.Forms.Control Properties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#2)]
 [!code-vb[Windows.Forms.Control Properties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="3d62e-905">分配的值不是 <see cref="T:System.Windows.Forms.DockStyle" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-905">The value assigned is not one of the <see cref="T:System.Windows.Forms.DockStyle" /> values.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-906">重写时<see cref="P:System.Windows.Forms.Control.Dock" />属性在派生类中，使用基类的<see cref="P:System.Windows.Forms.Control.Dock" />属性扩展的基实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-906">When overriding the <see cref="P:System.Windows.Forms.Control.Dock" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Dock" /> property to extend the base implementation.</span>
            </span>
            <span data-ttu-id="3d62e-907">否则，必须提供所有的实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-907">Otherwise, you must provide all the implementation.</span>
            </span>
            <span data-ttu-id="3d62e-908">不需要重写二者<see langword="get" />并<see langword="set" />方法的<see cref="P:System.Windows.Forms.Control.Dock" />属性; 您可以根据需要覆盖只有一个。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-908">You are not required to override both the <see langword="get" /> and <see langword="set" /> methods of the <see cref="P:System.Windows.Forms.Control.Dock" /> property; you can override only one if needed.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.Forms.DockStyle" />
        <altmember cref="P:System.Windows.Forms.Control.Anchor" />
        <altmember cref="T:System.Windows.Forms.ScrollableControl.DockPaddingEdges" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="DockChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DockChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DockChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DockChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DockChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DockChanged;" />
      <MemberSignature Language="F#" Value="member this.DockChanged : EventHandler " Usage="member this.DockChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-909">当 <see cref="P:System.Windows.Forms.Control.Dock" /> 属性的值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-909">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-910">如果引发此事件<xref:System.Windows.Forms.Control.Dock%2A>属性更改通过以编程方式修改或用户交互。</span><span class="sxs-lookup"><span data-stu-id="3d62e-910">This event is raised if the <xref:System.Windows.Forms.Control.Dock%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="3d62e-911">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-911">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-912">下面的代码示例是一个事件处理程序时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-912">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-913"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式*PropertyName* `Changed`的时引发的相应*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-913">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes(*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-914">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-914">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="3d62e-915">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-915">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-916">此示例要求具有<xref:System.Windows.Forms.Form>，其中包含<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-916">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Dock" />
        <altmember cref="T:System.Windows.Forms.DockStyle" />
      </Docs>
    </Member>
    <Member MemberName="DoDragDrop">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects DoDragDrop (object data, System.Windows.Forms.DragDropEffects allowedEffects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DragDropEffects DoDragDrop(object data, valuetype System.Windows.Forms.DragDropEffects allowedEffects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      <MemberSignature Language="VB.NET" Value="Public Function DoDragDrop (data As Object, allowedEffects As DragDropEffects) As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DragDropEffects DoDragDrop(System::Object ^ data, System::Windows::Forms::DragDropEffects allowedEffects);" />
      <MemberSignature Language="F#" Value="member this.DoDragDrop : obj * System.Windows.Forms.DragDropEffects -&gt; System.Windows.Forms.DragDropEffects" Usage="control.DoDragDrop (data, allowedEffects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="allowedEffects" Type="System.Windows.Forms.DragDropEffects" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="3d62e-917">要拖动的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-917">The data to drag.</span>
          </span>
        </param>
        <param name="allowedEffects">
          <span data-ttu-id="3d62e-918">
            <see cref="T:System.Windows.Forms.DragDropEffects" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-918">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-919">开始拖放操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-919">Begins a drag-and-drop operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-920">
            <see cref="T:System.Windows.Forms.DragDropEffects" /> 枚举的值，它表示在拖放操作期间执行的最终效果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-920">A value from the <see cref="T:System.Windows.Forms.DragDropEffects" /> enumeration that represents the final effect that was performed during the drag-and-drop operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-921">`allowedEffects`参数确定的拖动操作可以发生。</span><span class="sxs-lookup"><span data-stu-id="3d62e-921">The `allowedEffects` parameter determines which drag operations can occur.</span></span> <span data-ttu-id="3d62e-922">如果拖动操作需要与另一个进程中的应用程序进行互操作，数据应是基本的托管的类 (<xref:System.String>， <xref:System.Drawing.Bitmap>，或<xref:System.Drawing.Imaging.Metafile>)，或实现的对象<xref:System.Runtime.Serialization.ISerializable>或<xref:System.Windows.Forms.IDataObject>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-922">If the drag operation needs to interoperate with applications in another process, data should either be a base managed class (<xref:System.String>, <xref:System.Drawing.Bitmap>, or <xref:System.Drawing.Imaging.Metafile>), or an object that implements <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Windows.Forms.IDataObject>.</span></span>  
  
 <span data-ttu-id="3d62e-923">下面描述与拖放操作相关的事件的引发方式以及引发时间。</span><span class="sxs-lookup"><span data-stu-id="3d62e-923">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="3d62e-924"><xref:System.Windows.Forms.Control.DoDragDrop%2A>方法确定当前游标位置下的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-924">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="3d62e-925">然后检查以查看该控件是否有效的放置目标。</span><span class="sxs-lookup"><span data-stu-id="3d62e-925">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="3d62e-926">如果控件是有效的放置目标，<xref:System.Windows.Forms.Control.GiveFeedback>指定的拖放效果引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-926">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="3d62e-927">有关拖放效果的列表，请参见 <xref:System.Windows.Forms.DragDropEffects> 枚举。</span><span class="sxs-lookup"><span data-stu-id="3d62e-927">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="3d62e-928">跟踪鼠标光标位置、键盘状态和鼠标按钮状态的更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-928">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="3d62e-929">如果用户移出一个窗口，则引发 <xref:System.Windows.Forms.Control.DragLeave> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-929">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="3d62e-930">如果鼠标进入另一个控件，则引发该控件的 <xref:System.Windows.Forms.Control.DragEnter>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-930">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="3d62e-931">如果鼠标移动但停留在同一个控件中，则引发 <xref:System.Windows.Forms.Control.DragOver> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-931">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="3d62e-932">如果键盘或鼠标按钮状态，更改<xref:System.Windows.Forms.Control.QueryContinueDrag>事件引发，并确定是否继续拖动、 放置数据，或取消操作值的基础<xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>属性的事件的<xref:System.Windows.Forms.QueryContinueDragEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-932">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="3d62e-933">如果的值<xref:System.Windows.Forms.DragAction>是`Continue`，则<xref:System.Windows.Forms.Control.DragOver>引发事件以继续操作并<xref:System.Windows.Forms.Control.GiveFeedback>事件以产生新效果，从而可以设置适当的可视反馈。</span><span class="sxs-lookup"><span data-stu-id="3d62e-933">If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="3d62e-934">有关有效放置效果的列表，请参见 <xref:System.Windows.Forms.DragDropEffects> 枚举。</span><span class="sxs-lookup"><span data-stu-id="3d62e-934">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="3d62e-935"><xref:System.Windows.Forms.Control.DragOver>和<xref:System.Windows.Forms.Control.GiveFeedback>事件成对发生，以便当鼠标移到放置目标时，用户提供的最新反馈有关鼠标的位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-935">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="3d62e-936">如果的值<xref:System.Windows.Forms.DragAction>是`Drop`，则放置效果值将返回到源，以便源应用程序可以执行相应的操作对源数据中; 例如，如果则剪切数据是移动操作。</span><span class="sxs-lookup"><span data-stu-id="3d62e-936">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="3d62e-937">如果的值<xref:System.Windows.Forms.DragAction>是`Cancel`，则<xref:System.Windows.Forms.Control.DragLeave>引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-937">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-938"><xref:System.Windows.Forms.Control.DoDragDrop%2A>方法会捕获所有异常并重新引发以下安全或严重异常：</span><span class="sxs-lookup"><span data-stu-id="3d62e-938">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method catches all exceptions and rethrows only the following security or critical exceptions:</span></span>  
  
-   <span data-ttu-id="3d62e-939">SecurityException</span><span class="sxs-lookup"><span data-stu-id="3d62e-939">SecurityException</span></span>  
  
-   <span data-ttu-id="3d62e-940">NullReferenceException</span><span class="sxs-lookup"><span data-stu-id="3d62e-940">NullReferenceException</span></span>  
  
-   <span data-ttu-id="3d62e-941">StackOverflowException</span><span class="sxs-lookup"><span data-stu-id="3d62e-941">StackOverflowException</span></span>  
  
-   <span data-ttu-id="3d62e-942">OutOfMemoryException</span><span class="sxs-lookup"><span data-stu-id="3d62e-942">OutOfMemoryException</span></span>  
  
-   <span data-ttu-id="3d62e-943">ThreadAbortException</span><span class="sxs-lookup"><span data-stu-id="3d62e-943">ThreadAbortException</span></span>  
  
-   <span data-ttu-id="3d62e-944">ExecutionEngineException</span><span class="sxs-lookup"><span data-stu-id="3d62e-944">ExecutionEngineException</span></span>  
  
-   <span data-ttu-id="3d62e-945">IndexOutOfRangeException</span><span class="sxs-lookup"><span data-stu-id="3d62e-945">IndexOutOfRangeException</span></span>  
  
-   <span data-ttu-id="3d62e-946">AccessViolationException</span><span class="sxs-lookup"><span data-stu-id="3d62e-946">AccessViolationException</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-947">下面的代码示例演示了两个之间拖放操作<xref:System.Windows.Forms.ListBox>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-947">The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="3d62e-948">此示例调用<xref:System.Windows.Forms.Control.DoDragDrop%2A>当拖动操作开始时的方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-948">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="3d62e-949">如果已移动鼠标拖动操作启动多个<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>鼠标位置在从<xref:System.Windows.Forms.Control.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-949">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="3d62e-950"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定要在拖动的项的索引`MouseDown`事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-950">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="3d62e-951">示例还演示如何使用自定义光标拖放操作。</span><span class="sxs-lookup"><span data-stu-id="3d62e-951">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="3d62e-952">该示例需要两个光标文件`3dwarro.cur`和`3dwno.cur`、 存在于应用程序目录，用于自定义拖动和不可拖动光标，分别。</span><span class="sxs-lookup"><span data-stu-id="3d62e-952">The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="3d62e-953">如果将使用自定义光标`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>检查。</span><span class="sxs-lookup"><span data-stu-id="3d62e-953">The custom cursors will be used if the `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="3d62e-954">在中设置自定义光标<xref:System.Windows.Forms.Control.GiveFeedback>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-954">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="3d62e-955">键盘状态进行评估<xref:System.Windows.Forms.Control.DragOver>事件处理程序的权利`ListBox`，以确定拖动操作将为基于 SHIFT、 CTRL、 ALT 或 CTRL + ALT 键的状态。</span><span class="sxs-lookup"><span data-stu-id="3d62e-955">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="3d62e-956">中的位置`ListBox`期间还确定发生下拉`DragOver`事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-956">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="3d62e-957">如果要删除的数据不是`String`，则<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>设置为`None`中<xref:System.Windows.Forms.DragDropEffects>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-957">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>.</span></span> <span data-ttu-id="3d62e-958">最后，在显示状态的下拉`DropLocationLabel` <xref:System.Windows.Forms.Label>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-958">Finally, the status of the drop is displayed in the `DropLocationLabel` <xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="3d62e-959">若要删除的权利的数据`ListBox`在中确定<xref:System.Windows.Forms.Control.DragDrop>事件处理程序和`String`值中的适当位置添加`ListBox`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-959">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="3d62e-960">如果拖动操作移动边界以外的窗体，则在取消拖放操作<xref:System.Windows.Forms.Control.QueryContinueDrag>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-960">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#1)]  
  
 <span data-ttu-id="3d62e-961">下面的代码示例演示如何使用<xref:System.Windows.Forms.DragDropEffects>枚举来指定应如何拖放操作中的控件之间传输数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-961">The following code example shows how to use the <xref:System.Windows.Forms.DragDropEffects> enumeration to specify how data should be transferred between the controls involved in a drag-and-drop operation.</span></span> <span data-ttu-id="3d62e-962">此示例需要您的窗体，包括<xref:System.Windows.Forms.RichTextBox>控件和一个<xref:System.Windows.Forms.ListBox>控制且<xref:System.Windows.Forms.ListBox>使用有效的文件名称的列表填充控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-962">This example requires that your form includes a <xref:System.Windows.Forms.RichTextBox> control and a <xref:System.Windows.Forms.ListBox> control and that the <xref:System.Windows.Forms.ListBox> control is populated with a list of valid file names.</span></span> <span data-ttu-id="3d62e-963">当用户拖动到上的一个文件名<xref:System.Windows.Forms.RichTextBox>控件，该控件的<xref:System.Windows.Forms.Control.DragEnter>引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-963">When the user drags a file name onto the <xref:System.Windows.Forms.RichTextBox> control, the control's <xref:System.Windows.Forms.Control.DragEnter> event is raised.</span></span> <span data-ttu-id="3d62e-964">事件处理程序内<xref:System.Windows.Forms.DragEventArgs.Effect%2A>的属性<xref:System.Windows.Forms.DragEventArgs>初始化为<xref:System.Windows.Forms.DragDropEffects>以指示应将引用的文件路径的数据复制到<xref:System.Windows.Forms.RichTextBox>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-964">Within the event handler, the <xref:System.Windows.Forms.DragEventArgs.Effect%2A> property of the <xref:System.Windows.Forms.DragEventArgs> is initialized to <xref:System.Windows.Forms.DragDropEffects> to indicate that the data referenced by the file path should be copied to the <xref:System.Windows.Forms.RichTextBox> control.</span></span>  
  
 [!code-cpp[RichTextDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextDragDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextDragDrop/CS/form1.cs#1)]
 [!code-vb[RichTextDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextDragDrop/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.AllowDrop" />
        <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected virtual bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoubleBuffered : bool with get, set" Usage="System.Windows.Forms.Control.DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-965">获取或设置一个值，该值指示此控件是否应使用辅助缓冲区重绘其图面，以减少或避免闪烁。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-965">Gets or sets a value indicating whether this control should redraw its surface using a secondary buffer to reduce or prevent flicker.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-966">如果应使用双缓冲绘制控件的图面，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-966">
              <see langword="true" /> if the surface of the control should be drawn using double buffering; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-967">缓冲的图形可以减少或消除闪烁引起渐进式重绘的部分显示的图面。</span><span class="sxs-lookup"><span data-stu-id="3d62e-967">Buffered graphics can reduce or eliminate flicker that is caused by progressive redrawing of parts of a displayed surface.</span></span> <span data-ttu-id="3d62e-968">缓冲的图形需要更新的图形数据首先写入缓冲区。</span><span class="sxs-lookup"><span data-stu-id="3d62e-968">Buffered graphics require that the updated graphics data is first written to a buffer.</span></span> <span data-ttu-id="3d62e-969">图形缓冲区中的数据快速然后写入显示图面上的内存。</span><span class="sxs-lookup"><span data-stu-id="3d62e-969">The data in the graphics buffer is then quickly written to displayed surface memory.</span></span> <span data-ttu-id="3d62e-970">显示的图形内存的相对较快开关通常可减少闪烁才可以出现的。</span><span class="sxs-lookup"><span data-stu-id="3d62e-970">The relatively quick switch of the displayed graphics memory typically reduces the flicker that can otherwise occur.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-971"><xref:System.Windows.Forms.Control.DoubleBuffered%2A> 不是可绑定属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-971"><xref:System.Windows.Forms.Control.DoubleBuffered%2A> is not a bindable property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.Drawing.BufferedGraphicsContext" />
        <altmember cref="T:System.Drawing.BufferedGraphicsManager" />
        <altmember cref="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberSignature Language="F#" Value="member this.DoubleClick : EventHandler " Usage="member this.DoubleClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-972">在双击控件时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-972">Occurs when the control is double-clicked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-973">由用户的操作系统的鼠标设置确定一次双击。</span><span class="sxs-lookup"><span data-stu-id="3d62e-973">A double-click is determined by the mouse settings of the user's operating system.</span></span> <span data-ttu-id="3d62e-974">用户可以设置两次单击鼠标按钮之间的时间以便将这两次单击认为是双击而不是两次单击。</span><span class="sxs-lookup"><span data-stu-id="3d62e-974">The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</span></span> <span data-ttu-id="3d62e-975"><xref:System.Windows.Forms.Control.Click>每次双击控件时引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-975">The <xref:System.Windows.Forms.Control.Click> event is raised every time a control is double-clicked.</span></span> <span data-ttu-id="3d62e-976">例如，如果有事件处理程序<xref:System.Windows.Forms.Control.Click>并<xref:System.Windows.Forms.Control.DoubleClick>的事件<xref:System.Windows.Forms.Form>，则<xref:System.Windows.Forms.Control.Click>和<xref:System.Windows.Forms.Control.DoubleClick>时双击窗体之后，并调用这两种方法将引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-976">For example, if you have event handlers for the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events of a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events are raised when the form is double-clicked and both methods are called.</span></span> <span data-ttu-id="3d62e-977">如果双击控件时，控件不支持<xref:System.Windows.Forms.Control.DoubleClick>事件，<xref:System.Windows.Forms.Control.Click>可能两次引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-977">If a control is double-clicked and that control does not support the <xref:System.Windows.Forms.Control.DoubleClick> event, the <xref:System.Windows.Forms.Control.Click> event might be raised twice.</span></span>  
  
 <span data-ttu-id="3d62e-978">必须设置`StandardDoubleClick`并`StandardClick`的值<xref:System.Windows.Forms.ControlStyles>到`true`引发此事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-978">You must set the `StandardDoubleClick` and `StandardClick` values of <xref:System.Windows.Forms.ControlStyles> to `true` for this event to be raised.</span></span> <span data-ttu-id="3d62e-979">这些值可能已设置为`true`如果继承现有的 Windows 窗体控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-979">These values might already be set to `true` if you are inheriting from existing Windows Forms controls.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-980">不会引发以下事件<xref:System.Windows.Forms.TabControl>类，除非没有至少一个<xref:System.Windows.Forms.TabPage>中<xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType>集合： <xref:System.Windows.Forms.Control.Click>， <xref:System.Windows.Forms.Control.DoubleClick>， <xref:System.Windows.Forms.Control.MouseDown>， <xref:System.Windows.Forms.Control.MouseUp>， <xref:System.Windows.Forms.Control.MouseHover>， <xref:System.Windows.Forms.Control.MouseEnter>，<xref:System.Windows.Forms.Control.MouseLeave>和<xref:System.Windows.Forms.Control.MouseMove>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-980">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="3d62e-981">如果没有至少一个<xref:System.Windows.Forms.TabPage>在集合中，并在用户与选项卡控件的标头交互 (其中<xref:System.Windows.Forms.TabPage>名称显示)，则<xref:System.Windows.Forms.TabControl>引发相应事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-981">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="3d62e-982">但是，如果在工作区内的选项卡页上，为用户交互<xref:System.Windows.Forms.TabPage>引发相应事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-982">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="3d62e-983">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-983">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-984">下面的代码示例使用<xref:System.Windows.Forms.Control.DoubleClick>的事件<xref:System.Windows.Forms.ListBox>中列出的文本文件加载<xref:System.Windows.Forms.ListBox>到<xref:System.Windows.Forms.TextBox>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-984">The following code example uses the <xref:System.Windows.Forms.Control.DoubleClick> event of a <xref:System.Windows.Forms.ListBox> to load text files listed in the <xref:System.Windows.Forms.ListBox> into a <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Control.DoubleClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.DoubleClick/CPP/form1.cpp#1)]
 [!code-csharp[Control.DoubleClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.DoubleClick/CS/form1.cs#1)]
 [!code-vb[Control.DoubleClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.DoubleClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-985">从标准 Windows 窗体控件继承并更改<see langword="StandardClick" />或<see langword="StandardDoubleClick" />的值<see cref="T:System.Windows.Forms.ControlStyles" />到<see langword="true" />会导致意外的行为或根本不起任何作用，如果该控件不支持<see cref="E:System.Windows.Forms.Control.Click" />或<see cref="E:System.Windows.Forms.Control.DoubleClick" />事件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-985">Inheriting from a standard Windows Forms control and changing the <see langword="StandardClick" /> or <see langword="StandardDoubleClick" /> values of <see cref="T:System.Windows.Forms.ControlStyles" /> to <see langword="true" /> can cause unexpected behavior or have no effect at all if the control does not support the <see cref="E:System.Windows.Forms.Control.Click" /> or <see cref="E:System.Windows.Forms.Control.DoubleClick" /> events.</span>
            </span>
            <span data-ttu-id="3d62e-986">下表列出了 Windows 窗体控件和哪个事件 (<see cref="E:System.Windows.Forms.Control.Click" />或<see cref="E:System.Windows.Forms.Control.DoubleClick" />) 到指定的鼠标操作的响应中引发。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-986">The following table lists Windows Forms controls and which event (<see cref="E:System.Windows.Forms.Control.Click" /> or <see cref="E:System.Windows.Forms.Control.DoubleClick" />) is raised in response to the mouse action specified.</span>
            </span>
            <list type="table">
              <listheader>
                <term>
                  <span data-ttu-id="3d62e-987">控件</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-987">Control</span>
                  </span>
                </term>
                <description>
                  <span data-ttu-id="3d62e-988">单击鼠标左键</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-988">Left Mouse Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-989">双击鼠标</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-989">Left Mouse Double Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-990">单击鼠标右键</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-990">Right Mouse Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-991">双击鼠标右键</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-991">Right Mouse Double Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-992">中间的鼠标单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-992">Middle Mouse Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-993">双击鼠标</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-993">Middle Mouse Double Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-994">XButton1 鼠标单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-994">XButton1 Mouse Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-995">双击 XButton1 鼠标</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-995">XButton1 Mouse Double-Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-996">XButton2 鼠标单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-996">XButton2 Mouse Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-997">XButton2 鼠标双击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-997">XButton2 Mouse Double-Click</span>
                  </span>
                </description>
              </listheader>
              <item>
                <term>
                  <span data-ttu-id="3d62e-998">
                    <see cref="T:System.Windows.Forms.MonthCalendar" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-998">
                      <see cref="T:System.Windows.Forms.MonthCalendar" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-999">
                    <see cref="T:System.Windows.Forms.DateTimePicker" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-999">
                      <see cref="T:System.Windows.Forms.DateTimePicker" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-1000">
                    <see cref="T:System.Windows.Forms.RichTextBox" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1000">
                      <see cref="T:System.Windows.Forms.RichTextBox" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-1001">
                    <see cref="T:System.Windows.Forms.HScrollBar" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1001">
                      <see cref="T:System.Windows.Forms.HScrollBar" />,</span>
                  </span>
                  <see cref="T:System.Windows.Forms.VScrollBar" />
                </term>
                <description>
                  <span data-ttu-id="3d62e-1002">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1002">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1003">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1003">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1004">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1004">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1005">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1005">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1006">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1006">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1007">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1007">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1008">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1008">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1009">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1009">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1010">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1010">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1011">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1011">none</span>
                  </span>
                </description>
              </item>
              <item>
                <term>
                  <span data-ttu-id="3d62e-1012">
                    <see cref="T:System.Windows.Forms.Button" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1012">
                      <see cref="T:System.Windows.Forms.Button" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-1013">
                    <see cref="T:System.Windows.Forms.CheckBox" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1013">
                      <see cref="T:System.Windows.Forms.CheckBox" />,</span>
                  </span>
                  <see cref="T:System.Windows.Forms.RadioButton" />
                </term>
                <description>
                  <span data-ttu-id="3d62e-1014">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1014">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1015">单击，然后单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1015">Click, Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1016">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1016">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1017">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1017">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1018">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1018">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1019">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1019">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1020">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1020">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1021">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1021">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1022">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1022">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1023">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1023">none</span>
                  </span>
                </description>
              </item>
              <item>
                <term>
                  <span data-ttu-id="3d62e-1024">
                    <see cref="T:System.Windows.Forms.ListBox" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1024">
                      <see cref="T:System.Windows.Forms.ListBox" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-1025">
                    <see cref="T:System.Windows.Forms.CheckedListBox" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1025">
                      <see cref="T:System.Windows.Forms.CheckedListBox" />,</span>
                  </span>
                  <see cref="T:System.Windows.Forms.ComboBox" />
                </term>
                <description>
                  <span data-ttu-id="3d62e-1026">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1026">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1027">单击、 双击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1027">Click, DoubleClick</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1028">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1028">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1029">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1029">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1030">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1030">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1031">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1031">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1032">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1032">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1033">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1033">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1034">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1034">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1035">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1035">none</span>
                  </span>
                </description>
              </item>
              <item>
                <term>
                  <span data-ttu-id="3d62e-1036">
                    <see cref="T:System.Windows.Forms.TextBox" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1036">
                      <see cref="T:System.Windows.Forms.TextBox" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-1037">
                    <see cref="T:System.Windows.Forms.DomainUpDown" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1037">
                      <see cref="T:System.Windows.Forms.DomainUpDown" />,</span>
                  </span>
                  <see cref="T:System.Windows.Forms.NumericUpDown" />
                </term>
                <description>
                  <span data-ttu-id="3d62e-1038">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1038">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1039">单击、 双击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1039">Click, DoubleClick</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1040">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1040">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1041">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1041">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1042">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1042">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1043">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1043">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1044">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1044">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1045">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1045">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1046">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1046">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1047">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1047">none</span>
                  </span>
                </description>
              </item>
              <item>
                <term>
                  <span data-ttu-id="3d62e-1048">\* <see cref="T:System.Windows.Forms.TreeView" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1048">\* <see cref="T:System.Windows.Forms.TreeView" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-1049">\* <see cref="T:System.Windows.Forms.ListView" /></span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1049">\* <see cref="T:System.Windows.Forms.ListView" /></span>
                  </span>
                </term>
                <description>
                  <span data-ttu-id="3d62e-1050">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1050">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1051">单击、 双击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1051">Click, DoubleClick</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1052">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1052">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1053">单击、 双击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1053">Click, DoubleClick</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1054">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1054">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1055">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1055">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1056">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1056">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1057">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1057">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1058">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1058">none</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1059">无</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1059">none</span>
                  </span>
                </description>
              </item>
              <item>
                <term>
                  <span data-ttu-id="3d62e-1060">
                    <see cref="T:System.Windows.Forms.ProgressBar" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1060">
                      <see cref="T:System.Windows.Forms.ProgressBar" />,</span>
                  </span>
                  <see cref="T:System.Windows.Forms.TrackBar" />
                </term>
                <description>
                  <span data-ttu-id="3d62e-1061">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1061">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1062">单击，然后单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1062">Click, Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1063">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1063">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1064">单击，然后单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1064">Click, Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1065">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1065">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1066">单击，然后单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1066">Click, Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1067">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1067">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1068">单击，然后单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1068">Click, Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1069">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1069">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1070">单击，然后单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1070">Click, Click</span>
                  </span>
                </description>
              </item>
              <item>
                <term>
                  <span data-ttu-id="3d62e-1071">
                    <see cref="T:System.Windows.Forms.Form" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1071">
                      <see cref="T:System.Windows.Forms.Form" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-1072">
                    <see cref="T:System.Windows.Forms.DataGrid" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1072">
                      <see cref="T:System.Windows.Forms.DataGrid" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-1073">
                    <see cref="T:System.Windows.Forms.Label" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1073">
                      <see cref="T:System.Windows.Forms.Label" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-1074">
                    <see cref="T:System.Windows.Forms.LinkLabel" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1074">
                      <see cref="T:System.Windows.Forms.LinkLabel" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-1075">
                    <see cref="T:System.Windows.Forms.Panel" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1075">
                      <see cref="T:System.Windows.Forms.Panel" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-1076">
                    <see cref="T:System.Windows.Forms.GroupBox" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1076">
                      <see cref="T:System.Windows.Forms.GroupBox" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-1077">
                    <see cref="T:System.Windows.Forms.PictureBox" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1077">
                      <see cref="T:System.Windows.Forms.PictureBox" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-1078">
                    <see cref="T:System.Windows.Forms.Splitter" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1078">
                      <see cref="T:System.Windows.Forms.Splitter" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-1079">
                    <see cref="T:System.Windows.Forms.StatusBar" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1079">
                      <see cref="T:System.Windows.Forms.StatusBar" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-1080">
                    <see cref="T:System.Windows.Forms.ToolBar" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1080">
                      <see cref="T:System.Windows.Forms.ToolBar" />,</span>
                  </span>
                  <span data-ttu-id="3d62e-1081">
                    <see cref="T:System.Windows.Forms.TabPage" />,</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1081">
                      <see cref="T:System.Windows.Forms.TabPage" />,</span>
                  </span> 
 ** <see cref="T:System.Windows.Forms.TabControl" /></term>
                <description>
                  <span data-ttu-id="3d62e-1082">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1082">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1083">单击、 双击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1083">Click, DoubleClick</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1084">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1084">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1085">单击、 双击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1085">Click, DoubleClick</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1086">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1086">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1087">单击、 双击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1087">Click, DoubleClick</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1088">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1088">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1089">单击、 双击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1089">Click, DoubleClick</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1090">单击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1090">Click</span>
                  </span>
                </description>
                <description>
                  <span data-ttu-id="3d62e-1091">单击、 双击</span>
                  <span class="sxs-lookup">
                    <span data-stu-id="3d62e-1091">Click, DoubleClick</span>
                  </span>
                </description>
              </item>
            </list>
            <span data-ttu-id="3d62e-1092">\* 鼠标指针必须位于一个子对象 (<see cref="T:System.Windows.Forms.TreeNode" />或<see cref="T:System.Windows.Forms.ListViewItem" />)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-1092">\* The mouse pointer must be over a child object (<see cref="T:System.Windows.Forms.TreeNode" /> or <see cref="T:System.Windows.Forms.ListViewItem" />).</span>
            </span>
            <span data-ttu-id="3d62e-1093">\* \*<see cref="T:System.Windows.Forms.TabControl" />必须至少一个<see cref="T:System.Windows.Forms.TabPage" />在其<see cref="P:System.Windows.Forms.TabControl.TabPages" />集合。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-1093">\*\* The <see cref="T:System.Windows.Forms.TabControl" /> must have at least one <see cref="T:System.Windows.Forms.TabPage" /> in its <see cref="P:System.Windows.Forms.TabControl.TabPages" /> collection.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" />
        <altmember cref="F:System.Windows.Forms.ControlStyles.StandardClick" />
        <altmember cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.MouseClick" />
        <altmember cref="E:System.Windows.Forms.Control.MouseDoubleClick" />
      </Docs>
    </Member>
    <Member MemberName="DpiChangedAfterParent">
      <MemberSignature Language="C#" Value="public event EventHandler DpiChangedAfterParent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DpiChangedAfterParent" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DpiChangedAfterParent" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChangedAfterParent As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DpiChangedAfterParent;" />
      <MemberSignature Language="F#" Value="member this.DpiChangedAfterParent : EventHandler " Usage="member this.DpiChangedAfterParent : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1094">当父控件或窗体的 DPI 更改后，以编程方式更改控件的 DPI 设置时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1094">Occurs when the DPI setting for a control is changed programmatically after the DPI of it's parent control or form has changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DpiChangedBeforeParent">
      <MemberSignature Language="C#" Value="public event EventHandler DpiChangedBeforeParent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DpiChangedBeforeParent" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DpiChangedBeforeParent" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChangedBeforeParent As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DpiChangedBeforeParent;" />
      <MemberSignature Language="F#" Value="member this.DpiChangedBeforeParent : EventHandler " Usage="member this.DpiChangedBeforeParent : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1095">父控件或窗体的 DPI 更改事件发生前，以编程方式更改控件的 DPI 设置时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1095">Occurs when the DPI setting for a control is changed programmatically before a DPI change event for it's parent control or form has occurred.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DragDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragDrop;" />
      <MemberSignature Language="F#" Value="member this.DragDrop : System.Windows.Forms.DragEventHandler " Usage="member this.DragDrop : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1096">拖放操作完成时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1096">Occurs when a drag-and-drop operation is completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1097"><xref:System.Windows.Forms.DragEventArgs.X%2A>并<xref:System.Windows.Forms.DragEventArgs.Y%2A>的属性<xref:System.Windows.Forms.DragEventArgs>位于非客户端坐标的屏幕坐标表示。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1097">The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates.</span></span> <span data-ttu-id="3d62e-1098">Visual C# 代码的下一行将属性转换为客户端<xref:System.Drawing.Point>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1098">The following line of Visual C# code converts the properties to a client <xref:System.Drawing.Point>.</span></span>  
  
```  
Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));  
```  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1099">在版本早于[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]，如果您将放<xref:System.Windows.Forms.UserControl>与<xref:System.Windows.Forms.Control.DragEnter>和<xref:System.Windows.Forms.Control.DragDrop>Windows 窗体上的事件并拖放到上的内容<xref:System.Windows.Forms.UserControl>在设计时`DropDrop`和`DropEnter`事件引发。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1099">In versions earlier than [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], if you put a <xref:System.Windows.Forms.UserControl> with <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events on a Windows Form and drag and drop something onto the <xref:System.Windows.Forms.UserControl> at design time, the `DropDrop` and `DropEnter` events are raised.</span></span> <span data-ttu-id="3d62e-1100">但是，当关闭并重新打开该解决方案，<xref:System.Windows.Forms.Control.DragEnter>和<xref:System.Windows.Forms.Control.DragDrop>不会再次引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1100">However, when you close and reopen the solution, the <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events are not raised again.</span></span>  
  
 <span data-ttu-id="3d62e-1101">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1101">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1102">这段代码摘录演示了如何使用<xref:System.Windows.Forms.Control.DragDrop>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1102">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.DragDrop> event.</span></span> <span data-ttu-id="3d62e-1103">请参阅<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整的代码示例的方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1103">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
        <altmember cref="E:System.Windows.Forms.Control.DragLeave" />
        <altmember cref="E:System.Windows.Forms.Control.DragOver" />
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
        <altmember cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.Forms.DragEventHandler " Usage="member this.DragEnter : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1104">在将对象拖入控件的边界时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1104">Occurs when an object is dragged into the control's bounds.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1105"><xref:System.Windows.Forms.Control.DragEnter>用户拖放操作过程中首次将鼠标光标拖到控件上方时将引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1105">The <xref:System.Windows.Forms.Control.DragEnter> event is raised when the user first drags the mouse cursor over the control during a drag-and-drop operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1106">在版本早于[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]，如果您将放<xref:System.Windows.Forms.UserControl>与<xref:System.Windows.Forms.Control.DragEnter>和<xref:System.Windows.Forms.Control.DragDrop>Windows 窗体上的事件并拖放到上的内容<xref:System.Windows.Forms.UserControl>在设计时`DropDrop`和`DropEnter`事件引发。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1106">In versions earlier than [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], if you put a <xref:System.Windows.Forms.UserControl> with <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events on a Windows Form and drag and drop something onto the <xref:System.Windows.Forms.UserControl> at design time, the `DropDrop` and `DropEnter` events are raised.</span></span> <span data-ttu-id="3d62e-1107">但是，当关闭并重新打开该解决方案，<xref:System.Windows.Forms.Control.DragEnter>和<xref:System.Windows.Forms.Control.DragDrop>不会再次引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1107">However, when you close and reopen the solution, the <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events are not raised again.</span></span>  
  
 <span data-ttu-id="3d62e-1108">下面描述与拖放操作相关的事件的引发方式以及引发时间。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1108">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="3d62e-1109"><xref:System.Windows.Forms.Control.DoDragDrop%2A>方法确定当前游标位置下的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1109">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="3d62e-1110">然后检查以查看该控件是否有效的放置目标。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1110">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="3d62e-1111">如果控件是有效的放置目标，<xref:System.Windows.Forms.Control.GiveFeedback>指定的拖放效果引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1111">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="3d62e-1112">有关拖放效果的列表，请参见 <xref:System.Windows.Forms.DragDropEffects> 枚举。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1112">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="3d62e-1113">跟踪鼠标光标位置、键盘状态和鼠标按钮状态的更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1113">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="3d62e-1114">如果用户移出一个窗口，则引发 <xref:System.Windows.Forms.Control.DragLeave> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1114">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="3d62e-1115">如果鼠标进入另一个控件，则引发该控件的 <xref:System.Windows.Forms.Control.DragEnter>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1115">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="3d62e-1116">如果鼠标移动但停留在同一个控件中，则引发 <xref:System.Windows.Forms.Control.DragOver> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1116">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="3d62e-1117">如果键盘或鼠标按钮状态，更改<xref:System.Windows.Forms.Control.QueryContinueDrag>事件引发，并确定是否继续拖动、 放置数据，或取消操作值的基础<xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>属性的事件的<xref:System.Windows.Forms.QueryContinueDragEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1117">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="3d62e-1118">如果的值<xref:System.Windows.Forms.DragAction>是`Continue`，则<xref:System.Windows.Forms.Control.DragOver>引发事件以继续操作并<xref:System.Windows.Forms.Control.GiveFeedback>事件以产生新效果，从而可以设置适当的可视反馈。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1118">If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="3d62e-1119">有关有效放置效果的列表，请参见 <xref:System.Windows.Forms.DragDropEffects> 枚举。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1119">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="3d62e-1120"><xref:System.Windows.Forms.Control.DragOver>和<xref:System.Windows.Forms.Control.GiveFeedback>事件成对发生，以便当鼠标移到放置目标时，用户提供的最新反馈有关鼠标的位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1120">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="3d62e-1121">如果的值<xref:System.Windows.Forms.DragAction>是`Drop`，则放置效果值将返回到源，以便源应用程序可以执行相应的操作对源数据中; 例如，如果则剪切数据是移动操作。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1121">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="3d62e-1122">如果的值<xref:System.Windows.Forms.DragAction>是`Cancel`，则<xref:System.Windows.Forms.Control.DragLeave>引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1122">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="3d62e-1123"><xref:System.Windows.Forms.DragEventArgs.X%2A>并<xref:System.Windows.Forms.DragEventArgs.Y%2A>的属性<xref:System.Windows.Forms.DragEventArgs>位于非客户端坐标的屏幕坐标表示。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1123">The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates.</span></span> <span data-ttu-id="3d62e-1124">Visual C# 代码的下一行将属性转换为客户端<xref:System.Drawing.Point>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1124">The following line of Visual C# code converts the properties to a client <xref:System.Drawing.Point>.</span></span>  
  
    ```  
    Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));  
    ```  
  
 <span data-ttu-id="3d62e-1125">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1125">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1126">下面的代码示例演示了两个之间拖放操作<xref:System.Windows.Forms.ListBox>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1126">The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="3d62e-1127">此示例调用<xref:System.Windows.Forms.Control.DoDragDrop%2A>当拖动操作开始时的方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1127">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="3d62e-1128">如果已移动鼠标拖动操作启动多个<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>鼠标位置在从<xref:System.Windows.Forms.Control.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1128">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="3d62e-1129"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定要在拖动的项的索引`MouseDown`事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1129">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="3d62e-1130">示例还演示如何使用自定义光标拖放操作。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1130">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="3d62e-1131">该示例需要两个光标文件`3dwarro.cur`和`3dwno.cur`、 存在于应用程序目录，用于自定义拖动和不可拖动光标，分别。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1131">The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="3d62e-1132">如果将使用自定义光标`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>检查。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1132">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="3d62e-1133">在中设置自定义光标<xref:System.Windows.Forms.Control.GiveFeedback>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1133">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="3d62e-1134">键盘状态进行评估<xref:System.Windows.Forms.Control.DragOver>事件处理程序的权利`ListBox`，以确定拖动操作将为基于 SHIFT、 CTRL、 ALT 或 CTRL + ALT 键的状态。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1134">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="3d62e-1135">中的位置`ListBox`期间还确定发生下拉`DragOver`事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1135">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="3d62e-1136">如果要删除的数据不是`String`，则<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>设置为`None`中<xref:System.Windows.Forms.DragDropEffects>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1136">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>.</span></span> <span data-ttu-id="3d62e-1137">最后，在显示状态的下拉`DropLocationLabel` <xref:System.Windows.Forms.Label>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1137">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="3d62e-1138">若要删除的权利的数据`ListBox`在中确定<xref:System.Windows.Forms.Control.DragDrop>事件处理程序和`String`值中的适当位置添加`ListBox`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1138">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="3d62e-1139">如果拖动操作移动边界以外的窗体，则在取消拖放操作<xref:System.Windows.Forms.Control.QueryContinueDrag>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1139">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="3d62e-1140">这段代码摘录演示了如何使用<xref:System.Windows.Forms.Control.DragEnter>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1140">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.DragEnter> event.</span></span> <span data-ttu-id="3d62e-1141">请参阅<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整的代码示例的方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1141">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event EventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : EventHandler " Usage="member this.DragLeave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1142">将对象拖出控件的边界时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1142">Occurs when an object is dragged out of the control's bounds.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1143"><xref:System.Windows.Forms.Control.DragLeave>用户拖动控件超出游标或用户取消当前的拖放操作时引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1143">The <xref:System.Windows.Forms.Control.DragLeave> event is raised when the user drags the cursor out of the control or the user cancels the current drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="3d62e-1144">下面描述与拖放操作相关的事件的引发方式以及引发时间。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1144">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="3d62e-1145"><xref:System.Windows.Forms.Control.DoDragDrop%2A>方法确定当前游标位置下的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1145">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="3d62e-1146">然后检查以查看该控件是否有效的放置目标。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1146">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="3d62e-1147">如果控件是有效的放置目标，<xref:System.Windows.Forms.Control.GiveFeedback>指定的拖放效果引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1147">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="3d62e-1148">有关拖放效果的列表，请参见 <xref:System.Windows.Forms.DragDropEffects> 枚举。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1148">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="3d62e-1149">跟踪鼠标光标位置、键盘状态和鼠标按钮状态的更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1149">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="3d62e-1150">如果用户移出一个窗口，则引发 <xref:System.Windows.Forms.Control.DragLeave> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1150">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="3d62e-1151">如果鼠标进入另一个控件，则引发该控件的 <xref:System.Windows.Forms.Control.DragEnter>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1151">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="3d62e-1152">如果鼠标移动但停留在同一个控件中，则引发 <xref:System.Windows.Forms.Control.DragOver> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1152">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="3d62e-1153">如果键盘或鼠标按钮状态，更改<xref:System.Windows.Forms.Control.QueryContinueDrag>事件引发，并确定是否继续拖动、 放置数据，或取消操作值的基础<xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>属性的事件的<xref:System.Windows.Forms.QueryContinueDragEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1153">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="3d62e-1154">如果的值<xref:System.Windows.Forms.DragAction>是`Continue`，则<xref:System.Windows.Forms.Control.DragOver>引发事件以继续操作并<xref:System.Windows.Forms.Control.GiveFeedback>事件以产生新效果，从而可以设置适当的可视反馈。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1154">If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="3d62e-1155">有关有效放置效果的列表，请参见 <xref:System.Windows.Forms.DragDropEffects> 枚举。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1155">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="3d62e-1156"><xref:System.Windows.Forms.Control.DragOver>和<xref:System.Windows.Forms.Control.GiveFeedback>事件成对发生，以便当鼠标移到放置目标时，用户提供的最新反馈有关鼠标的位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1156">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="3d62e-1157">如果的值<xref:System.Windows.Forms.DragAction>是`Drop`，则放置效果值将返回到源，以便源应用程序可以执行相应的操作对源数据中; 例如，如果则剪切数据是移动操作。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1157">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="3d62e-1158">如果的值<xref:System.Windows.Forms.DragAction>是`Cancel`，则<xref:System.Windows.Forms.Control.DragLeave>引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1158">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
 <span data-ttu-id="3d62e-1159">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1159">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1160">下面的代码示例演示了两个之间拖放操作<xref:System.Windows.Forms.ListBox>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1160">The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="3d62e-1161">此示例调用<xref:System.Windows.Forms.Control.DoDragDrop%2A>当拖动操作开始时的方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1161">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="3d62e-1162">如果已移动鼠标拖动操作启动多个<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>鼠标位置在从<xref:System.Windows.Forms.Control.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1162">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="3d62e-1163"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定要在拖动的项的索引`MouseDown`事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1163">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="3d62e-1164">示例还演示如何使用自定义光标拖放操作。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1164">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="3d62e-1165">该示例需要两个光标文件`3dwarro.cur`和`3dwno.cur`、 存在于应用程序目录，用于自定义拖动和不可拖动光标，分别。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1165">The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="3d62e-1166">如果将使用自定义光标`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>检查。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1166">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="3d62e-1167">在中设置自定义光标<xref:System.Windows.Forms.Control.GiveFeedback>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1167">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="3d62e-1168">键盘状态进行评估<xref:System.Windows.Forms.Control.DragOver>事件处理程序的权利`ListBox`，以确定拖动操作将为基于 SHIFT、 CTRL、 ALT 或 CTRL + ALT 键的状态。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1168">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="3d62e-1169">中的位置`ListBox`期间还确定发生下拉`DragOver`事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1169">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="3d62e-1170">如果要删除的数据不是`String`，则<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>设置为`None`中<xref:System.Windows.Forms.DragDropEffects>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1170">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>.</span></span> <span data-ttu-id="3d62e-1171">最后，在显示状态的下拉`DropLocationLabel` <xref:System.Windows.Forms.Label>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1171">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="3d62e-1172">若要删除的权利的数据`ListBox`在中确定<xref:System.Windows.Forms.Control.DragDrop>事件处理程序和`String`值中的适当位置添加`ListBox`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1172">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="3d62e-1173">如果拖动操作移动边界以外的窗体，则在取消拖放操作<xref:System.Windows.Forms.Control.QueryContinueDrag>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1173">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="3d62e-1174">这段代码摘录演示了如何使用<xref:System.Windows.Forms.Control.DragLeave>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1174">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.DragLeave> event.</span></span> <span data-ttu-id="3d62e-1175">请参阅<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整的代码示例的方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1175">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.Forms.DragEventHandler " Usage="member this.DragOver : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1176">在将对象拖到控件的边界上发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1176">Occurs when an object is dragged over the control's bounds.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1177"><xref:System.Windows.Forms.Control.DragOver>鼠标光标拖放操作过程中控件的边界内移动时引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1177">The <xref:System.Windows.Forms.Control.DragOver> event is raised when the mouse cursor moves within the bounds of the control during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="3d62e-1178">下面描述与拖放操作相关的事件的引发方式以及引发时间。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1178">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="3d62e-1179"><xref:System.Windows.Forms.Control.DoDragDrop%2A>方法确定当前游标位置下的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1179">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="3d62e-1180">然后检查以查看该控件是否有效的放置目标。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1180">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="3d62e-1181">如果控件是有效的放置目标，<xref:System.Windows.Forms.Control.GiveFeedback>指定的拖放效果引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1181">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="3d62e-1182">有关拖放效果的列表，请参见 <xref:System.Windows.Forms.DragDropEffects> 枚举。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1182">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="3d62e-1183">跟踪鼠标光标位置、键盘状态和鼠标按钮状态的更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1183">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="3d62e-1184">如果用户移出一个窗口，则引发 <xref:System.Windows.Forms.Control.DragLeave> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1184">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="3d62e-1185">如果鼠标进入另一个控件，则引发该控件的 <xref:System.Windows.Forms.Control.DragEnter>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1185">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="3d62e-1186">如果鼠标移动但停留在同一个控件中，则引发 <xref:System.Windows.Forms.Control.DragOver> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1186">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="3d62e-1187">如果键盘或鼠标按钮状态，更改<xref:System.Windows.Forms.Control.QueryContinueDrag>事件引发，并确定是否继续拖动、 放置数据，或取消操作值的基础<xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>属性的事件的<xref:System.Windows.Forms.QueryContinueDragEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1187">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="3d62e-1188">如果的值<xref:System.Windows.Forms.DragAction>值是`Continue`，则<xref:System.Windows.Forms.Control.DragOver>引发事件以继续操作并<xref:System.Windows.Forms.Control.GiveFeedback>事件以产生新效果，从而可以设置适当的可视反馈。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1188">If the value of <xref:System.Windows.Forms.DragAction> value is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="3d62e-1189">有关有效放置效果的列表，请参见 <xref:System.Windows.Forms.DragDropEffects> 枚举。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1189">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="3d62e-1190"><xref:System.Windows.Forms.Control.DragOver>和<xref:System.Windows.Forms.Control.GiveFeedback>事件成对发生，以便当鼠标移到放置目标时，用户提供的最新反馈有关鼠标的位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1190">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="3d62e-1191">如果的值<xref:System.Windows.Forms.DragAction>是`Drop`，则放置效果值将返回到源，以便源应用程序可以执行相应的操作对源数据中; 例如，如果则剪切数据是移动操作。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1191">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="3d62e-1192">如果的值<xref:System.Windows.Forms.DragAction>是`Cancel`，则<xref:System.Windows.Forms.Control.DragLeave>引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1192">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="3d62e-1193"><xref:System.Windows.Forms.DragEventArgs.X%2A>并<xref:System.Windows.Forms.DragEventArgs.Y%2A>的属性<xref:System.Windows.Forms.DragEventArgs>位于非客户端坐标的屏幕坐标表示。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1193">The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates.</span></span> <span data-ttu-id="3d62e-1194">以下 C# 代码行将属性转换为客户端<xref:System.Drawing.Point>:</span><span class="sxs-lookup"><span data-stu-id="3d62e-1194">The following line of C# code converts the properties to a client <xref:System.Drawing.Point>:</span></span>  
    >   
    >  <span data-ttu-id="3d62e-1195">点 clientPoint = targetControl.PointToClient （新的点 (de。X，de。Y));</span><span class="sxs-lookup"><span data-stu-id="3d62e-1195">Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));</span></span>  
  
 <span data-ttu-id="3d62e-1196">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1196">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1197">下面的代码示例演示了两个之间拖放操作<xref:System.Windows.Forms.ListBox>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1197">The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="3d62e-1198">此示例调用<xref:System.Windows.Forms.Control.DoDragDrop%2A>当拖动操作开始时的方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1198">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="3d62e-1199">如果已移动鼠标拖动操作启动多个<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>鼠标位置在从<xref:System.Windows.Forms.Control.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1199">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="3d62e-1200"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定要在拖动的项的索引`MouseDown`事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1200">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="3d62e-1201">示例还演示如何使用自定义光标拖放操作。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1201">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="3d62e-1202">该示例需要两个光标文件`3dwarro.cur`和`3dwno.cur`、 存在于应用程序目录，用于自定义拖动和不可拖动光标，分别。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1202">The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="3d62e-1203">如果将使用自定义光标`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>检查。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1203">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="3d62e-1204">在中设置自定义光标<xref:System.Windows.Forms.Control.GiveFeedback>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1204">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="3d62e-1205">键盘状态进行评估<xref:System.Windows.Forms.Control.DragOver>事件处理程序的权利`ListBox`，以确定拖动操作将为基于 SHIFT、 CTRL、 ALT 或 CTRL + ALT 键的状态。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1205">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="3d62e-1206">中的位置`ListBox`期间还确定发生下拉`DragOver`事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1206">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="3d62e-1207">如果要删除的数据不是`String`，则<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>设置为`None`中<xref:System.Windows.Forms.DragDropEffects>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1207">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>.</span></span> <span data-ttu-id="3d62e-1208">最后，在显示状态的下拉`DropLocationLabel` <xref:System.Windows.Forms.Label>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1208">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="3d62e-1209">若要删除的权利的数据`ListBox`在中确定<xref:System.Windows.Forms.Control.DragDrop>事件处理程序和`String`值中的适当位置添加`ListBox`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1209">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="3d62e-1210">如果拖动操作移动边界以外的窗体，则在取消拖放操作<xref:System.Windows.Forms.Control.QueryContinueDrag>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1210">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="3d62e-1211">这段代码摘录演示了如何使用<xref:System.Windows.Forms.Control.DragOver>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1211">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.DragOver> event.</span></span> <span data-ttu-id="3d62e-1212">请参阅<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整的代码示例的方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1212">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DrawToBitmap">
      <MemberSignature Language="C#" Value="public void DrawToBitmap (System.Drawing.Bitmap bitmap, System.Drawing.Rectangle targetBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawToBitmap(class System.Drawing.Bitmap bitmap, valuetype System.Drawing.Rectangle targetBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawToBitmap(System::Drawing::Bitmap ^ bitmap, System::Drawing::Rectangle targetBounds);" />
      <MemberSignature Language="F#" Value="member this.DrawToBitmap : System.Drawing.Bitmap * System.Drawing.Rectangle -&gt; unit" Usage="control.DrawToBitmap (bitmap, targetBounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" />
        <Parameter Name="targetBounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="bitmap">
          <span data-ttu-id="3d62e-1213">要绘制到的位图。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1213">The bitmap to be drawn to.</span>
          </span>
        </param>
        <param name="targetBounds">
          <span data-ttu-id="3d62e-1214">呈现控件时的边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1214">The bounds within which the control is rendered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1215">支持对指定位图的呈现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1215">Supports rendering to the specified bitmap.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1216"><xref:System.Windows.Forms.Control.DrawToBitmap%2A>方法不支持 ActiveX 控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1216">The <xref:System.Windows.Forms.Control.DrawToBitmap%2A> method is not supported for ActiveX controls.</span></span> <span data-ttu-id="3d62e-1217">您可以重写<xref:System.Windows.Forms.Control.OnPrint%2A>事件，并根据需要提供自定义的打印逻辑。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1217">You can override the <xref:System.Windows.Forms.Control.OnPrint%2A> event and provide custom printing logic if required.</span></span>  
  
 <span data-ttu-id="3d62e-1218"><xref:System.Windows.Forms.Control.DrawToBitmap%2A>方法具有以下限制：</span><span class="sxs-lookup"><span data-stu-id="3d62e-1218">The <xref:System.Windows.Forms.Control.DrawToBitmap%2A> method has the following limitations:</span></span>  
  
-   <span data-ttu-id="3d62e-1219"><xref:System.ArgumentException>可能会引发针对大位图。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1219">An <xref:System.ArgumentException> might be thrown for large bitmaps.</span></span> <span data-ttu-id="3d62e-1220">因计算机而异的最大大小。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1220">The maximum allowable size varies by machine.</span></span>  
  
-   <span data-ttu-id="3d62e-1221"><xref:System.Windows.Forms.Control.DrawToBitmap%2A> 不支持`Ink`Windows XP Tablet PC Edition 2005 操作系统的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1221"><xref:System.Windows.Forms.Control.DrawToBitmap%2A> does not support the `Ink` controls for the Windows XP Tablet PC Edition 2005 operating system.</span></span>  
  
-   <span data-ttu-id="3d62e-1222"><xref:System.Windows.Forms.Control.DrawToBitmap%2A> 不绘制子级<xref:System.Windows.Forms.TextBox>如果<xref:System.Windows.Forms.Control.Visible%2A>的属性<xref:System.Windows.Forms.TextBox>设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1222"><xref:System.Windows.Forms.Control.DrawToBitmap%2A> does not draw a child <xref:System.Windows.Forms.TextBox> if the <xref:System.Windows.Forms.Control.Visible%2A> property of the <xref:System.Windows.Forms.TextBox> is set to `false`.</span></span>  
  
-   <span data-ttu-id="3d62e-1223">在容器内的控件将按相反的顺序呈现。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1223">Controls inside containers are rendered in reverse order.</span></span>  
  
-   <span data-ttu-id="3d62e-1224"><xref:System.Windows.Forms.Control.DrawToBitmap%2A> 不能正常工作的<xref:System.Windows.Forms.RichTextBox>; 仅绘制边框的位图。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1224"><xref:System.Windows.Forms.Control.DrawToBitmap%2A> is not fully functional for the <xref:System.Windows.Forms.RichTextBox>; only the border of a bitmap is drawn.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.Control.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(-514)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1225">获取或设置一个值，该值指示控件是否可以对用户交互作出响应。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1225">Gets or sets a value indicating whether the control can respond to user interaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1226">如果控件可以对用户交互作出响应，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1226">
              <see langword="true" /> if the control can respond to user interaction; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3d62e-1227">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1227">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1228">使用<xref:System.Windows.Forms.Control.Enabled%2A>属性，可以启用或禁用在运行时的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1228">With the <xref:System.Windows.Forms.Control.Enabled%2A> property, you can enable or disable controls at run time.</span></span> <span data-ttu-id="3d62e-1229">例如，可以禁用不适用于应用程序的当前状态的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1229">For example, you can disable controls that do not apply to the current state of the application.</span></span> <span data-ttu-id="3d62e-1230">此外可以禁用控件以限制其使用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1230">You can also disable a control to restrict its use.</span></span> <span data-ttu-id="3d62e-1231">例如，可以禁用按钮，以防止用户单击它。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1231">For example, a button can be disabled to prevent the user from clicking it.</span></span> <span data-ttu-id="3d62e-1232">如果控件处于禁用状态，无法选择它。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1232">If a control is disabled, it cannot be selected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3d62e-1233">设置<xref:System.Windows.Forms.Control.Enabled%2A>属性设置为`false`不禁用应用程序的控件框或阻止的应用程序窗口接收焦点。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1233">Setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false` does not disable the application's control box or prevent the application window from receiving the focus.</span></span>  
  
 <span data-ttu-id="3d62e-1234">当容器控件具有其 enabled 的属性设置为`false`，禁用其包含的所有控件，以及。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1234">When a container control has its enabled property set to `false`, all its contained controls are disabled, as well.</span></span> <span data-ttu-id="3d62e-1235">例如，如果用户单击的任何控件包含在已禁用<xref:System.Windows.Forms.GroupBox>控件，会引发任何事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1235">For example, if the user clicks on any of the controls contained in a disabled <xref:System.Windows.Forms.GroupBox> control, no events are raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1236">如果可滚动控件处于禁用状态，还将禁用滚动条。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1236">When a scrollable control is disabled, the scroll bars are also disabled.</span></span> <span data-ttu-id="3d62e-1237">例如，已禁用的多行文本框不能向下滚动以显示的文本的所有行。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1237">For example, a disabled multiline textbox is unable to scroll to display all the lines of text.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1238">下面的代码示例创建<xref:System.Windows.Forms.GroupBox>和设置的某些常见属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1238">The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties.</span></span> <span data-ttu-id="3d62e-1239">此示例将创建<xref:System.Windows.Forms.TextBox>，并设置其<xref:System.Windows.Forms.Control.Location%2A>组框中。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1239">The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box.</span></span> <span data-ttu-id="3d62e-1240">接下来，设置<xref:System.Windows.Forms.Control.Text%2A>停靠此分组框到窗体顶部的分组框的属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1240">Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form.</span></span> <span data-ttu-id="3d62e-1241">最后，通过设置禁用分组框<xref:System.Windows.Forms.Control.Enabled%2A>属性设置为`false`，这将导致要禁用的组框中包含的所有控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1241">Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#2)]
 [!code-csharp[Windows.Forms.Control Properties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#2)]
 [!code-vb[Windows.Forms.Control Properties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ScrollableControl" />
      </Docs>
    </Member>
    <Member MemberName="EnabledChanged">
      <MemberSignature Language="C#" Value="public event EventHandler EnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.EnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EnabledChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.EnabledChanged : EventHandler " Usage="member this.EnabledChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1242">在 <see cref="P:System.Windows.Forms.Control.Enabled" /> 属性值更改后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1242">Occurs when the <see cref="P:System.Windows.Forms.Control.Enabled" /> property value has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1243">如果引发此事件<xref:System.Windows.Forms.Control.Enabled%2A>属性更改通过以编程方式修改或用户交互。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1243">This event is raised if the <xref:System.Windows.Forms.Control.Enabled%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="3d62e-1244">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1244">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1245">下面的代码示例使用两个<xref:System.Windows.Forms.RadioButton>控件，以演示<xref:System.Windows.Forms.Control.EnabledChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1245">The following code example uses two <xref:System.Windows.Forms.RadioButton> controls to demonstrate the <xref:System.Windows.Forms.Control.EnabledChanged> event.</span></span> <span data-ttu-id="3d62e-1246">单击一个按钮将更改的值<xref:System.Windows.Forms.Control.Enabled%2A>属性的其他按钮`false`，并显示<xref:System.Windows.Forms.MessageBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1246">Clicking one button changes the value of the <xref:System.Windows.Forms.Control.Enabled%2A> property of the other button to `false` and displays a <xref:System.Windows.Forms.MessageBox>.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.EnabledChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.EnabledChanged/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.EnabledChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.EnabledChanged/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="public object EndInvoke (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndInvoke(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndInvoke (asyncResult As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ EndInvoke(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndInvoke : IAsyncResult -&gt; obj&#xA;override this.EndInvoke : IAsyncResult -&gt; obj" Usage="control.EndInvoke asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="3d62e-1247">
            <see cref="T:System.IAsyncResult" />，表示特定的调用异步操作，在调用 <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> 时返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1247">The <see cref="T:System.IAsyncResult" /> that represents a specific invoke asynchronous operation, returned when calling <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1248">检索由传递的 <see cref="T:System.IAsyncResult" /> 表示的异步操作的返回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1248">Retrieves the return value of the asynchronous operation represented by the <see cref="T:System.IAsyncResult" /> passed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-1249">由异步操作生成的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1249">The <see cref="T:System.Object" /> generated by the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1250">如果尚未完成异步操作，直到结果可用，将阻止此函数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1250">If the asynchronous operation has not been completed, this function will block until the result is available.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1251">除了<xref:System.Windows.Forms.Control.InvokeRequired%2A>属性，在控件上都是线程安全的四种方法： <xref:System.Windows.Forms.Control.Invoke%2A>， <xref:System.Windows.Forms.Control.BeginInvoke%2A>， <xref:System.Windows.Forms.Control.EndInvoke%2A>，和<xref:System.Windows.Forms.Control.CreateGraphics%2A>如果已创建控件的句柄。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1251">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="3d62e-1252">调用<xref:System.Windows.Forms.Control.CreateGraphics%2A>后台线程上创建控件的句柄之前可能会导致非法的跨线程调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1252">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="3d62e-1253">对于所有其他方法调用，您应使用 invoke 方法之一来封送对控件的线程的调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1253">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d62e-1254">
            <paramref name="asyncResult" /> 参数值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1254">The <paramref name="asyncResult" /> parameter value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3d62e-1255">
            <paramref name="asyncResult" /> 对象不是由同一控件中的 <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> 方法的前一个调用创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1255">The <paramref name="asyncResult" /> object was not created by a preceding call of the <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> method from the same control.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />
        <altmember cref="P:System.Windows.Forms.Control.InvokeRequired" />
        <altmember cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="Enter">
      <MemberSignature Language="C#" Value="public event EventHandler Enter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Enter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Enter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Enter As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Enter;" />
      <MemberSignature Language="F#" Value="member this.Enter : EventHandler " Usage="member this.Enter : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1256">进入控件时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1256">Occurs when the control is entered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1257">将焦点更改通过使用键盘 （TAB、 SHIFT + TAB，等），通过调用<xref:System.Windows.Forms.Control.Select%2A>或<xref:System.Windows.Forms.Control.SelectNextControl%2A>方法，或通过设置<xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType>到当前窗体的属性，将按以下顺序发生焦点事件：</span><span class="sxs-lookup"><span data-stu-id="3d62e-1257">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="3d62e-1258">当更改焦点，使用鼠标或通过调用<xref:System.Windows.Forms.Control.Focus%2A>方法时，按以下顺序执行的焦点事件：</span><span class="sxs-lookup"><span data-stu-id="3d62e-1258">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="3d62e-1259">如果<xref:System.Windows.Forms.Control.CausesValidation%2A>属性设置为`false`，则<xref:System.Windows.Forms.Control.Validating>和<xref:System.Windows.Forms.Control.Validated>所抑制的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1259">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1260"><xref:System.Windows.Forms.Control.Enter>并<xref:System.Windows.Forms.Control.Leave>事件所抑制的<xref:System.Windows.Forms.Form>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1260">The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are suppressed by the <xref:System.Windows.Forms.Form> class.</span></span> <span data-ttu-id="3d62e-1261">中的等效事件<xref:System.Windows.Forms.Form>类是<xref:System.Windows.Forms.Form.Activated>和<xref:System.Windows.Forms.Form.Deactivate>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1261">The equivalent events in the <xref:System.Windows.Forms.Form> class are the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events.</span></span> <span data-ttu-id="3d62e-1262"><xref:System.Windows.Forms.Control.Enter>和<xref:System.Windows.Forms.Control.Leave>事件层次结构，并将级联向上和向下父链直到达到相应的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1262">The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached.</span></span> <span data-ttu-id="3d62e-1263">例如，假设您有<xref:System.Windows.Forms.Form>具有两个<xref:System.Windows.Forms.GroupBox>控件，并且每个<xref:System.Windows.Forms.GroupBox>控件有一个<xref:System.Windows.Forms.TextBox>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1263">For example, assume you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.GroupBox> controls, and each <xref:System.Windows.Forms.GroupBox> control has one <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="3d62e-1264">当从一个移动插入符号<xref:System.Windows.Forms.TextBox>到其他<xref:System.Windows.Forms.Control.Leave>用于引发事件<xref:System.Windows.Forms.TextBox>和<xref:System.Windows.Forms.GroupBox>，并<xref:System.Windows.Forms.Control.Enter>其他引发事件<xref:System.Windows.Forms.GroupBox>和<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1264">When the caret is moved from one <xref:System.Windows.Forms.TextBox> to the other, the <xref:System.Windows.Forms.Control.Leave> event is raised for the <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.GroupBox>, and the <xref:System.Windows.Forms.Control.Enter> event is raised for the other <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TextBox>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3d62e-1265">不尝试将焦点设置在<xref:System.Windows.Forms.Control.Enter>， <xref:System.Windows.Forms.Control.GotFocus>， <xref:System.Windows.Forms.Control.Leave>， <xref:System.Windows.Forms.Control.LostFocus>， <xref:System.Windows.Forms.Control.Validating>，或<xref:System.Windows.Forms.Control.Validated>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1265">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="3d62e-1266">执行此操作可能会导致你的应用程序或操作系统停止响应。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1266">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="3d62e-1267">有关详细信息，请参阅`WM_KILLFOCUS`主题中的"消息死锁"部分和"键盘输入参考"部分[有关消息和消息队列](http://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx)主题。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1267">For more information, see the `WM_KILLFOCUS` topic in the "Keyboard Input Reference" section and the "Message Deadlocks" section of the [About Messages and Message Queues](http://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx) topic.</span></span>  
  
 <span data-ttu-id="3d62e-1268">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1268">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1269">下面的代码示例使用<xref:System.Windows.Forms.Control.Enter>事件以更改的前景色和背景颜色<xref:System.Windows.Forms.TextBox>在特定情况下。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1269">The following code example uses the <xref:System.Windows.Forms.Control.Enter> event to change the foreground and background colors of a <xref:System.Windows.Forms.TextBox> under particular conditions.</span></span>  
  
 [!code-cpp[Control.Enter#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Enter/CPP/form1.cpp#1)]
 [!code-csharp[Control.Enter#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Enter/CS/form1.cs#1)]
 [!code-vb[Control.Enter#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Enter/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="FindForm">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form FindForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Form FindForm() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.FindForm" />
      <MemberSignature Language="VB.NET" Value="Public Function FindForm () As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Form ^ FindForm();" />
      <MemberSignature Language="F#" Value="member this.FindForm : unit -&gt; System.Windows.Forms.Form" Usage="control.FindForm " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1270">检索控件所在的窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1270">Retrieves the form that the control is on.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-1271">控件所在的 <see cref="T:System.Windows.Forms.Form" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1271">The <see cref="T:System.Windows.Forms.Form" /> that the control is on.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1272">控件的<xref:System.Windows.Forms.Control.Parent%2A>属性值可能与相同<xref:System.Windows.Forms.Form>返回的<xref:System.Windows.Forms.Control.FindForm%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1272">The control's <xref:System.Windows.Forms.Control.Parent%2A> property value might not be the same as the <xref:System.Windows.Forms.Form> returned by <xref:System.Windows.Forms.Control.FindForm%2A> method.</span></span> <span data-ttu-id="3d62e-1273">例如，如果<xref:System.Windows.Forms.RadioButton>控件包含在<xref:System.Windows.Forms.GroupBox>控件，并<xref:System.Windows.Forms.GroupBox>位于<xref:System.Windows.Forms.Form>，则<xref:System.Windows.Forms.RadioButton>控件的<xref:System.Windows.Forms.Control.Parent%2A>是<xref:System.Windows.Forms.GroupBox>和<xref:System.Windows.Forms.GroupBox>控件<xref:System.Windows.Forms.Control.Parent%2A>是<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1273">For example, if a <xref:System.Windows.Forms.RadioButton> control is contained within a <xref:System.Windows.Forms.GroupBox> control, and the <xref:System.Windows.Forms.GroupBox> is on a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.RadioButton> control's <xref:System.Windows.Forms.Control.Parent%2A> is the <xref:System.Windows.Forms.GroupBox> and the <xref:System.Windows.Forms.GroupBox> control's <xref:System.Windows.Forms.Control.Parent%2A> is the <xref:System.Windows.Forms.Form>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1274">下面的代码示例查找包含指定的按钮的窗体。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1274">The following code example finds the form that contains the specified button.</span></span>  
  
 [!code-cpp[Control.FindForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.FindForm/CPP/form1.cpp#1)]
 [!code-csharp[Control.FindForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.FindForm/CS/form1.cs#1)]
 [!code-vb[Control.FindForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.FindForm/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-1275">若要调用此方法的所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1275">for all windows to call this method.</span>
          </span>
          <span data-ttu-id="3d62e-1276">关联枚举：<see langword="AllWindows" />的值<see cref="T:System.Security.Permissions.UIPermissionWindow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1276">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Forms.Control.GetTopLevel" />
        <altmember cref="T:System.Windows.Forms.Form" />
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Focus();" />
      <MemberSignature Language="F#" Value="member this.Focus : unit -&gt; bool" Usage="control.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1277">为控件设置输入焦点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1277">Sets input focus to the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-1278">如果输入焦点请求成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1278">
              <see langword="true" /> if the input focus request was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1279"><xref:System.Windows.Forms.Control.Focus%2A>方法将返回`true`如果控件已成功收到输入的焦点。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1279">The <xref:System.Windows.Forms.Control.Focus%2A> method returns `true` if the control successfully received input focus.</span></span> <span data-ttu-id="3d62e-1280">不显示有焦点的任何视觉提示时，控件可以具有输入的焦点。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1280">The control can have the input focus while not displaying any visual cues of having the focus.</span></span> <span data-ttu-id="3d62e-1281">主要由下面列出，不可选控件将出现此行为或任何控件派生自它们。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1281">This behavior is primarily observed by the nonselectable controls listed below, or any controls derived from them.</span></span>  
  
 <span data-ttu-id="3d62e-1282">一个控件接收输入的焦点，如果满足所有以下都条件，并可以选择：`Selectable`的值<xref:System.Windows.Forms.ControlStyles>设置为`true`、 包含在另一个控件和所有其父控件都均可见且已启用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1282">A control can be selected and receive input focus if all the following are true: the `Selectable` value of <xref:System.Windows.Forms.ControlStyles> is set to `true`, it is contained in another control, and all its parent controls are both visible and enabled.</span></span>  
  
 <span data-ttu-id="3d62e-1283">以下列表中的 Windows 窗体控件不可选择。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1283">The Windows Forms controls in the following list are not selectable.</span></span> <span data-ttu-id="3d62e-1284">派生自这些控件的控件也是不可选的。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1284">Controls derived from these controls are also not selectable.</span></span>  
  
-   <xref:System.Windows.Forms.Panel>  
  
-   <xref:System.Windows.Forms.GroupBox>  
  
-   <xref:System.Windows.Forms.PictureBox>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.Splitter>  
  
-   <xref:System.Windows.Forms.Label>  
  
-   <span data-ttu-id="3d62e-1285"><xref:System.Windows.Forms.LinkLabel> （如果没有控件中显示的链接）</span><span class="sxs-lookup"><span data-stu-id="3d62e-1285"><xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1286"><xref:System.Windows.Forms.Control.Focus%2A> 低级别方法主要适用于自定义控件创作者。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1286"><xref:System.Windows.Forms.Control.Focus%2A> is a low-level method intended primarily for custom control authors.</span></span> <span data-ttu-id="3d62e-1287">相反，应使用应用程序程序员<xref:System.Windows.Forms.Control.Select%2A>方法或<xref:System.Windows.Forms.ContainerControl.ActiveControl%2A>的子控件的属性或<xref:System.Windows.Forms.Form.Activate%2A>窗体的方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1287">Instead, application programmers should use the <xref:System.Windows.Forms.Control.Select%2A> method or the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property for child controls, or the <xref:System.Windows.Forms.Form.Activate%2A> method for forms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1288">下面的代码示例将焦点设置到指定<xref:System.Windows.Forms.Control>，如果它可以接收焦点。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1288">The following code example sets focus to the specified <xref:System.Windows.Forms.Control>, if it can receive focus.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#1)]
 [!code-csharp[Windows.Forms.ControlMembers6#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#1)]
 [!code-vb[Windows.Forms.ControlMembers6#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-1289">若要调用此方法的所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1289">for all windows to call this method.</span>
          </span>
          <span data-ttu-id="3d62e-1290">关联枚举：<see langword="AllWindows" />的值<see cref="T:System.Security.Permissions.UIPermissionWindow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1290">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Control.CanFocus" />
        <altmember cref="P:System.Windows.Forms.Control.ContainsFocus" />
        <altmember cref="P:System.Windows.Forms.Control.Focused" />
        <altmember cref="P:System.Windows.Forms.Control.CanSelect" />
        <altmember cref="M:System.Windows.Forms.Control.Select" />
        <altmember cref="P:System.Windows.Forms.ContainerControl.ActiveControl" />
        <altmember cref="M:System.Windows.Forms.Form.Activate" />
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public virtual bool Focused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Focused" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Focused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Focused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Focused : bool" Usage="System.Windows.Forms.Control.Focused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1291">获取一个值，该值指示控件是否有输入焦点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1291">Gets a value indicating whether the control has input focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1292">如果控件有焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1292">
              <see langword="true" /> if the control has focus; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3d62e-1293">以下代码示例禁用<xref:System.Windows.Forms.MenuItem>如果<xref:System.Windows.Forms.TextBox>不具有焦点。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1293">The following code example disables a <xref:System.Windows.Forms.MenuItem> if a <xref:System.Windows.Forms.TextBox> does not have focus.</span></span> <span data-ttu-id="3d62e-1294">此示例要求具有<xref:System.Windows.Forms.Form>与<xref:System.Windows.Forms.TextBox>名为`textBox1`并将两个<xref:System.Windows.Forms.MenuItem>对象命名`menuItemEdit`和`menuItemEditInsertCustomerInfo`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1294">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TextBox> named `textBox1` and two <xref:System.Windows.Forms.MenuItem> objects named `menuItemEdit` and `menuItemEditInsertCustomerInfo`.</span></span>  
  
 [!code-cpp[Windows.FOrms.Control Members2#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#4)]
 [!code-csharp[Windows.FOrms.Control Members2#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#4)]
 [!code-vb[Windows.FOrms.Control Members2#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-1295">重写时<see cref="P:System.Windows.Forms.Control.Focused" />属性在派生类中，使用基类的<see cref="P:System.Windows.Forms.Control.Focused" />属性扩展的基实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-1295">When overriding the <see cref="P:System.Windows.Forms.Control.Focused" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Focused" /> property to extend the base implementation.</span>
            </span>
            <span data-ttu-id="3d62e-1296">否则，必须提供所有的实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-1296">Otherwise, you must provide all the implementation.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.Control.CanFocus" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="P:System.Windows.Forms.Control.CanSelect" />
        <altmember cref="P:System.Windows.Forms.Control.ContainsFocus" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.Control.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(-512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1297">获取或设置控件显示的文字的字体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1297">Gets or sets the font of the text displayed by the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1298">要应用于由控件显示的文本的 <see cref="T:System.Drawing.Font" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1298">The <see cref="T:System.Drawing.Font" /> to apply to the text displayed by the control.</span>
          </span>
          <span data-ttu-id="3d62e-1299">默认为 <see cref="P:System.Windows.Forms.Control.DefaultFont" /> 属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1299">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1300"><xref:System.Windows.Forms.Control.Font%2A>属性是一个环境属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1300">The <xref:System.Windows.Forms.Control.Font%2A> property is an ambient property.</span></span> <span data-ttu-id="3d62e-1301">环境属性是控件属性，如果未设置，检索从父控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1301">An ambient property is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="3d62e-1302">例如，<xref:System.Windows.Forms.Button>具有相同<xref:System.Windows.Forms.Control.BackColor%2A>作为其父<xref:System.Windows.Forms.Form>默认情况下。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1302">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="3d62e-1303">有关环境属性的详细信息，请参阅<xref:System.Windows.Forms.AmbientProperties>类或<xref:System.Windows.Forms.Control>类概述。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1303">For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.</span></span>  
  
 <span data-ttu-id="3d62e-1304">因为<xref:System.Drawing.Font>是不可变的 （这意味着您不能调整其任何属性），您可以只分配<xref:System.Windows.Forms.Control.Font%2A>属性指定新<xref:System.Drawing.Font>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1304">Because the <xref:System.Drawing.Font> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <xref:System.Windows.Forms.Control.Font%2A> property a new <xref:System.Drawing.Font>.</span></span> <span data-ttu-id="3d62e-1305">但是，您可以基于现有字体中的新字体。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1305">However, you can base the new font on the existing font.</span></span>  
  
 <span data-ttu-id="3d62e-1306">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="3d62e-1306">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="3d62e-1307">以下是如何调整现有字体以粗体显示的示例：</span><span class="sxs-lookup"><span data-stu-id="3d62e-1307">The following is an example of how to adjust the existing font to make it bold:</span></span>  
  
```csharp  
myControl.Font = new Font(myControl.Font,   
    myControl.Font.Style | FontStyle.Bold);  
```  
  
```vb  
MyControl.Font = New Font(MyControl.Font, _   
    MyControl.Font.Style Or FontStyle.Bold)  
```  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1308">下面的代码示例显示<xref:System.Windows.Forms.FontDialog>给用户，并更改<xref:System.Drawing.Font>的<xref:System.Windows.Forms.DateTimePicker>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1308">The following code example displays a <xref:System.Windows.Forms.FontDialog> to the user and changes the <xref:System.Drawing.Font> of a <xref:System.Windows.Forms.DateTimePicker> control.</span></span> <span data-ttu-id="3d62e-1309">此示例要求具有<xref:System.Windows.Forms.Form>与<xref:System.Windows.Forms.Button>和一个<xref:System.Windows.Forms.DateTimePicker>上它。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1309">This example requires that you have a <xref:System.Windows.Forms.Form> with <xref:System.Windows.Forms.Button> and a <xref:System.Windows.Forms.DateTimePicker> on it.</span></span>  
  
 [!code-cpp[Control_Font#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_Font/CPP/control_font.cpp#1)]
 [!code-csharp[Control_Font#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_Font/CS/control_font.cs#1)]
 [!code-vb[Control_Font#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_Font/VB/control_font.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-1310">重写时<see cref="P:System.Windows.Forms.Control.Font" />属性在派生类中，使用基类的<see cref="P:System.Windows.Forms.Control.Font" />属性扩展的基实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-1310">When overriding the <see cref="P:System.Windows.Forms.Control.Font" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Font" /> property to extend the base implementation.</span>
            </span>
            <span data-ttu-id="3d62e-1311">否则，必须提供所有的实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-1311">Otherwise, you must provide all the implementation.</span>
            </span>
            <span data-ttu-id="3d62e-1312">不需要重写二者<see langword="get" />并<see langword="set" />访问器<see cref="P:System.Windows.Forms.Control.Font" />属性; 您可以根据需要覆盖只有一个。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-1312">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.Font" /> property; you can override only one if needed.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.FontChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
        <altmember cref="T:System.Drawing.Font" />
      </Docs>
    </Member>
    <Member MemberName="FontChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FontChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FontChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.FontChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FontChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FontChanged;" />
      <MemberSignature Language="F#" Value="member this.FontChanged : EventHandler " Usage="member this.FontChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1313">在 <see cref="P:System.Windows.Forms.Control.Font" /> 属性值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1313">Occurs when the <see cref="P:System.Windows.Forms.Control.Font" /> property value changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1314">如果引发此事件<xref:System.Windows.Forms.Control.Font%2A>通过以编程方式修改或通过交互更改属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1314">This event is raised if the <xref:System.Windows.Forms.Control.Font%2A> property is changed by either a programmatic modification or through interaction.</span></span>  
  
 <span data-ttu-id="3d62e-1315">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1315">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1316">下面的代码示例演示了<xref:System.Windows.Forms.Control.FontChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1316">The following code example demonstrates the <xref:System.Windows.Forms.Control.FontChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.FontChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.FontChanged/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.FontChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.FontChanged/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Font" />
        <altmember cref="T:System.Drawing.Font" />
      </Docs>
    </Member>
    <Member MemberName="FontHeight">
      <MemberSignature Language="C#" Value="protected int FontHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FontHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.FontHeight" />
      <MemberSignature Language="VB.NET" Value="Protected Property FontHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int FontHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.FontHeight : int with get, set" Usage="System.Windows.Forms.Control.FontHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1317">获取或设置控件的字体的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1317">Gets or sets the height of the font of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1318">控件的 <see cref="T:System.Drawing.Font" /> 的高度（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1318">The height of the <see cref="T:System.Drawing.Font" /> of the control in pixels.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1319"><xref:System.Windows.Forms.Control.FontHeight%2A>属性不应设置为控件的以外的任何值<xref:System.Drawing.Font.Height%2A?displayProperty=nameWithType>值，则为-1。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1319">The <xref:System.Windows.Forms.Control.FontHeight%2A> property should not be set to any value other than the control's <xref:System.Drawing.Font.Height%2A?displayProperty=nameWithType> value, or -1.</span></span> <span data-ttu-id="3d62e-1320">设置<xref:System.Windows.Forms.Control.FontHeight%2A>为-1 将会清除缓存的高度值和引用的属性下一次重新计算的值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1320">Setting <xref:System.Windows.Forms.Control.FontHeight%2A> to -1 has the effect of clearing the cached height value, and the value is recalculated the next time the property is referenced.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Font.Height" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.Control.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(-513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1321">获取或设置控件的前景色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1321">Gets or sets the foreground color of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1322">控件的前景 <see cref="T:System.Drawing.Color" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1322">The foreground <see cref="T:System.Drawing.Color" /> of the control.</span>
          </span>
          <span data-ttu-id="3d62e-1323">默认为 <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> 属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1323">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1324"><xref:System.Windows.Forms.Control.ForeColor%2A>属性是一个环境属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1324">The <xref:System.Windows.Forms.Control.ForeColor%2A> property is an ambient property.</span></span> <span data-ttu-id="3d62e-1325">环境属性是控件属性，如果未设置，检索从父控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1325">An ambient property is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="3d62e-1326">例如，<xref:System.Windows.Forms.Button>具有相同<xref:System.Windows.Forms.Control.BackColor%2A>作为其父<xref:System.Windows.Forms.Form>默认情况下。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1326">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="3d62e-1327">有关环境属性的详细信息，请参阅<xref:System.Windows.Forms.AmbientProperties>类或<xref:System.Windows.Forms.Control>类概述。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1327">For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1328">下面的代码示例设置<xref:System.Windows.Forms.Control.BackColor%2A>和<xref:System.Windows.Forms.Control.ForeColor%2A>的默认系统颜色的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1328">The following code example sets the <xref:System.Windows.Forms.Control.BackColor%2A> and <xref:System.Windows.Forms.Control.ForeColor%2A> of the controls to the default system colors.</span></span> <span data-ttu-id="3d62e-1329">如果控件具有任何子控件，则代码以递归方式调用自身。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1329">The code recursively calls itself if the control has any child controls.</span></span> <span data-ttu-id="3d62e-1330">此代码示例，则需要<xref:System.Windows.Forms.Form>与至少一个子控件; 但是，在子容器控件，如<xref:System.Windows.Forms.Panel>或<xref:System.Windows.Forms.GroupBox>，具有其自己的子控件包装会更好地演示递归。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1330">This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#1)]
 [!code-vb[Windows.Forms.Control Properties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-1331">重写时<see cref="P:System.Windows.Forms.Control.ForeColor" />属性在派生类中，使用基类的<see cref="P:System.Windows.Forms.Control.ForeColor" />属性扩展的基实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-1331">When overriding the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.ForeColor" /> property to extend the base implementation.</span>
            </span>
            <span data-ttu-id="3d62e-1332">否则，必须提供所有的实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-1332">Otherwise, you must provide all the implementation.</span>
            </span>
            <span data-ttu-id="3d62e-1333">不需要重写二者<see langword="get" />并<see langword="set" />访问器<see cref="P:System.Windows.Forms.Control.ForeColor" />属性; 您可以根据需要覆盖只有一个。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-1333">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property; you can override only one if needed.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.ForeColorChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="ForeColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ForeColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ForeColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ForeColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ForeColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ForeColorChanged;" />
      <MemberSignature Language="F#" Value="member this.ForeColorChanged : EventHandler " Usage="member this.ForeColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1334">在 <see cref="P:System.Windows.Forms.Control.ForeColor" /> 属性值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1334">Occurs when the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property value changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1335">如果引发此事件<xref:System.Windows.Forms.Control.ForeColor%2A>通过以编程方式修改或通过交互更改属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1335">This event is raised if the <xref:System.Windows.Forms.Control.ForeColor%2A> property is changed by either a programmatic modification or through interaction.</span></span>  
  
 <span data-ttu-id="3d62e-1336">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1336">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1337">下面的代码示例是一个事件处理程序时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1337">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-1338"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式*PropertyName* `Changed`的时引发的相应*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1338">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-1339">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1339">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="3d62e-1340">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1340">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-1341">此示例要求具有<xref:System.Windows.Forms.Form>，其中包含<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1341">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.ForeColor" />
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="FromChildHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Control FromChildHandle (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.Control FromChildHandle(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromChildHandle (handle As IntPtr) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::Control ^ FromChildHandle(IntPtr handle);" />
      <MemberSignature Language="F#" Value="static member FromChildHandle : nativeint -&gt; System.Windows.Forms.Control" Usage="System.Windows.Forms.Control.FromChildHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="3d62e-1342">要搜索的窗口句柄 (<see langword="HWND" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1342">The window handle (<see langword="HWND" />) to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1343">检索包含指定句柄的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1343">Retrieves the control that contains the specified handle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-1344">
            <see cref="T:System.Windows.Forms.Control" />，它表示与指定句柄关联的控件；如果找不到带有指定句柄的控件，就返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1344">The <see cref="T:System.Windows.Forms.Control" /> that represents the control associated with the specified handle; returns <see langword="null" /> if no control with the specified handle is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1345">此方法搜索窗口句柄父链，直到它找到与控件关联的句柄。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1345">This method searches up the window handle parent chain until it finds a handle that is associated with a control.</span></span> <span data-ttu-id="3d62e-1346">此方法是比更可靠<xref:System.Windows.Forms.Control.FromHandle%2A>方法，因为它将正确返回拥有多个句柄的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1346">This method is more reliable than the <xref:System.Windows.Forms.Control.FromHandle%2A> method, because it correctly returns controls that own more than one handle.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-1347">若要调用此方法的所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1347">for all windows to call this method.</span>
          </span>
          <span data-ttu-id="3d62e-1348">关联枚举：<see langword="AllWindows" />的值<see cref="T:System.Security.Permissions.UIPermissionWindow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1348">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Control FromHandle (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.Control FromHandle(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (handle As IntPtr) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::Control ^ FromHandle(IntPtr handle);" />
      <MemberSignature Language="F#" Value="static member FromHandle : nativeint -&gt; System.Windows.Forms.Control" Usage="System.Windows.Forms.Control.FromHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="3d62e-1349">要搜索的窗口句柄 (<see langword="HWND" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1349">The window handle (<see langword="HWND" />) to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1350">返回当前与指定句柄关联的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1350">Returns the control that is currently associated with the specified handle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-1351">
            <see cref="T:System.Windows.Forms.Control" />，它表示与指定句柄关联的控件；如果找不到带有指定句柄的控件，就返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1351">A <see cref="T:System.Windows.Forms.Control" /> that represents the control associated with the specified handle; returns <see langword="null" /> if no control with the specified handle is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1352">使用<xref:System.Windows.Forms.Control.FromChildHandle%2A>方法如果您需要返回拥有多个句柄的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1352">Use the <xref:System.Windows.Forms.Control.FromChildHandle%2A> method if you need to return controls that own more than one handle.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-1353">若要调用此方法的所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1353">for all windows to call this method.</span>
          </span>
          <span data-ttu-id="3d62e-1354">关联枚举：<see langword="AllWindows" />的值<see cref="T:System.Security.Permissions.UIPermissionWindow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1354">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
      </Docs>
    </Member>
    <Member MemberName="GetAccessibilityObjectById">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.AccessibleObject GetAccessibilityObjectById (int objectId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetAccessibilityObjectById(int32 objectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetAccessibilityObjectById (objectId As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetAccessibilityObjectById(int objectId);" />
      <MemberSignature Language="F#" Value="abstract member GetAccessibilityObjectById : int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetAccessibilityObjectById : int -&gt; System.Windows.Forms.AccessibleObject" Usage="control.GetAccessibilityObjectById objectId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="objectId">
          <span data-ttu-id="3d62e-1355">一个 <see langword="Int32" />，标识要检索的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1355">An <see langword="Int32" /> that identifies the <see cref="T:System.Windows.Forms.AccessibleObject" /> to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1356">检索指定的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1356">Retrieves the specified <see cref="T:System.Windows.Forms.AccessibleObject" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-1357">指定的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1357">The specified <see cref="T:System.Windows.Forms.AccessibleObject" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="GetAutoSizeMode">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.AutoSizeMode GetAutoSizeMode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Forms.AutoSizeMode GetAutoSizeMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetAutoSizeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAutoSizeMode () As AutoSizeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::AutoSizeMode GetAutoSizeMode();" />
      <MemberSignature Language="F#" Value="member this.GetAutoSizeMode : unit -&gt; System.Windows.Forms.AutoSizeMode" Usage="control.GetAutoSizeMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoSizeMode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1358">检索一个值，该值指示当启用控件的 <see cref="P:System.Windows.Forms.Control.AutoSize" /> 属性时控件的行为方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1358">Retrieves a value indicating how a control will behave when its <see cref="P:System.Windows.Forms.Control.AutoSize" /> property is enabled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-1359">
            <see cref="T:System.Windows.Forms.AutoSizeMode" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1359">One of the <see cref="T:System.Windows.Forms.AutoSizeMode" /> values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildAtPoint">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1360">检索指定位置的子控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1360">Retrieves the child control at a specified location.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildAtPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control GetChildAtPoint (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Control GetChildAtPoint(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildAtPoint (pt As Point) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Control ^ GetChildAtPoint(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="member this.GetChildAtPoint : System.Drawing.Point -&gt; System.Windows.Forms.Control" Usage="control.GetChildAtPoint pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="3d62e-1361">一个 <see cref="T:System.Drawing.Point" />，其中包含的坐标指定您要在何处查找控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1361">A <see cref="T:System.Drawing.Point" /> that contains the coordinates where you want to look for a control.</span>
          </span>
          <span data-ttu-id="3d62e-1362">坐标相对于控件的工作区的左上角来表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1362">Coordinates are expressed relative to the upper-left corner of the control's client area.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1363">检索位于指定坐标处的子控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1363">Retrieves the child control that is located at the specified coordinates.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-1364">
            <see cref="T:System.Windows.Forms.Control" />，它表示位于指定点处的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1364">A <see cref="T:System.Windows.Forms.Control" /> that represents the control that is located at the specified point.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1365">如果指定点处没有任何子控件<xref:System.Windows.Forms.Control.GetChildAtPoint%2A>方法将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1365">If there is no child control at the specified point, the <xref:System.Windows.Forms.Control.GetChildAtPoint%2A> method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-1366">针对所有窗口，如果该控件返回调用此方法不是控件的子级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1366">for all windows to call this method if the control returned is not a child of the control.</span>
          </span>
          <span data-ttu-id="3d62e-1367">关联枚举：<see langword="AllWindows" />的值<see cref="T:System.Security.Permissions.UIPermissionWindow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1367">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetChildAtPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control GetChildAtPoint (System.Drawing.Point pt, System.Windows.Forms.GetChildAtPointSkip skipValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Control GetChildAtPoint(valuetype System.Drawing.Point pt, valuetype System.Windows.Forms.GetChildAtPointSkip skipValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildAtPoint (pt As Point, skipValue As GetChildAtPointSkip) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Control ^ GetChildAtPoint(System::Drawing::Point pt, System::Windows::Forms::GetChildAtPointSkip skipValue);" />
      <MemberSignature Language="F#" Value="member this.GetChildAtPoint : System.Drawing.Point * System.Windows.Forms.GetChildAtPointSkip -&gt; System.Windows.Forms.Control" Usage="control.GetChildAtPoint (pt, skipValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="skipValue" Type="System.Windows.Forms.GetChildAtPointSkip" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="3d62e-1368">一个 <see cref="T:System.Drawing.Point" />，其中包含的坐标指定您要在何处查找控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1368">A <see cref="T:System.Drawing.Point" /> that contains the coordinates where you want to look for a control.</span>
          </span>
          <span data-ttu-id="3d62e-1369">坐标相对于控件的工作区的左上角来表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1369">Coordinates are expressed relative to the upper-left corner of the control's client area.</span>
          </span>
        </param>
        <param name="skipValue">
          <span data-ttu-id="3d62e-1370">
            <see cref="T:System.Windows.Forms.GetChildAtPointSkip" /> 值之一，确定是否忽略特定类型的子控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1370">One of the values of <see cref="T:System.Windows.Forms.GetChildAtPointSkip" />, determining whether to ignore child controls of a certain type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1371">检索位于指定坐标的子控件，并且指定是否忽略特定类型的子控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1371">Retrieves the child control that is located at the specified coordinates, specifying whether to ignore child controls of a certain type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-1372">指定坐标处的子 <see cref="T:System.Windows.Forms.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1372">The child <see cref="T:System.Windows.Forms.Control" /> at the specified coordinates.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IContainerControl GetContainerControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.IContainerControl GetContainerControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetContainerControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContainerControl () As IContainerControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::IContainerControl ^ GetContainerControl();" />
      <MemberSignature Language="F#" Value="member this.GetContainerControl : unit -&gt; System.Windows.Forms.IContainerControl" Usage="control.GetContainerControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IContainerControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1373">沿着控件的父控件链向上，返回下一个 <see cref="T:System.Windows.Forms.ContainerControl" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1373">Returns the next <see cref="T:System.Windows.Forms.ContainerControl" /> up the control's chain of parent controls.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-1374">
            <see cref="T:System.Windows.Forms.IContainerControl" />，表示 <see cref="T:System.Windows.Forms.Control" /> 的父级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1374">An <see cref="T:System.Windows.Forms.IContainerControl" />, that represents the parent of the <see cref="T:System.Windows.Forms.Control" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-1375">若要调用此方法的所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1375">for all windows to call this method.</span>
          </span>
          <span data-ttu-id="3d62e-1376">关联枚举：<see langword="AllWindows" />的值<see cref="T:System.Security.Permissions.UIPermissionWindow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1376">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
        <altmember cref="T:System.Windows.Forms.IContainerControl" />
      </Docs>
    </Member>
    <Member MemberName="GetNextControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control GetNextControl (System.Windows.Forms.Control ctl, bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Control GetNextControl(class System.Windows.Forms.Control ctl, bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextControl (ctl As Control, forward As Boolean) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Control ^ GetNextControl(System::Windows::Forms::Control ^ ctl, bool forward);" />
      <MemberSignature Language="F#" Value="member this.GetNextControl : System.Windows.Forms.Control * bool -&gt; System.Windows.Forms.Control" Usage="control.GetNextControl (ctl, forward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Windows.Forms.Control" />
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ctl">
          <span data-ttu-id="3d62e-1377">从其上开始搜索的 <see cref="T:System.Windows.Forms.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1377">The <see cref="T:System.Windows.Forms.Control" /> to start the search with.</span>
          </span>
        </param>
        <param name="forward">
          <span data-ttu-id="3d62e-1378">如果是 <see langword="true" />，则按 Tab 键顺序向前搜索；如果是 <see langword="false" /> 则向后搜索。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1378">
              <see langword="true" /> to search forward in the tab order; <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1379">按照子控件的 Tab 键顺序向前或向后检索下一个控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1379">Retrieves the next control forward or back in the tab order of child controls.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-1380">Tab 键顺序指定的下一个 <see cref="T:System.Windows.Forms.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1380">The next <see cref="T:System.Windows.Forms.Control" /> in the tab order.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1381"><xref:System.Windows.Forms.Control.GetNextControl%2A>方法是依赖于 tab 键顺序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1381">The <xref:System.Windows.Forms.Control.GetNextControl%2A> method is dependent on tab order.</span></span> <span data-ttu-id="3d62e-1382">若要循环访问所有控件的窗体，包括嵌套的控件，请使用<xref:System.Windows.Forms.Control.Controls%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1382">To iterate through all controls of a form, including nested controls, use the <xref:System.Windows.Forms.Control.Controls%2A> property.</span></span> <span data-ttu-id="3d62e-1383">若要获取或设置容器控件的活动控件，请使用<xref:System.Windows.Forms.ContainerControl.ActiveControl%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1383">To get or set the active control of a container control, use the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.TabIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size GetPreferredSize (System.Drawing.Size proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Size GetPreferredSize(valuetype System.Drawing.Size proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreferredSize (proposedSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Size GetPreferredSize(System::Drawing::Size proposedSize);" />
      <MemberSignature Language="F#" Value="abstract member GetPreferredSize : System.Drawing.Size -&gt; System.Drawing.Size&#xA;override this.GetPreferredSize : System.Drawing.Size -&gt; System.Drawing.Size" Usage="control.GetPreferredSize proposedSize" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.Layout.IArrangedElement.GetPreferredSize(System.Drawing.Size)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="proposedSize">
          <span data-ttu-id="3d62e-1384">控件的自定义大小的区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1384">The custom-sized area for a control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1385">检索适合控件的矩形区域的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1385">Retrieves the size of a rectangular area into which a control can be fitted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-1386">类型为 <see cref="T:System.Drawing.Size" /> 的有序对，表示矩形的宽度和高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1386">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1387">行为<xref:System.Windows.Forms.Control.GetPreferredSize%2A>控件上不同。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1387">The behavior of <xref:System.Windows.Forms.Control.GetPreferredSize%2A> differs by control.</span></span> <span data-ttu-id="3d62e-1388"><xref:System.Windows.Forms.Control.LayoutEngine%2A>可能无法分配给控件返回的大小。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1388">The <xref:System.Windows.Forms.Control.LayoutEngine%2A> might be unable to assign the returned size to the control.</span></span> <span data-ttu-id="3d62e-1389">返回的大小大于所示的约束`proposedSize`参数，但`proposedSize`应该随着约束的降低而降低。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1389">You can return a size larger than the constraints indicated in the `proposedSize` parameter, but `proposedSize` should decrease as the constraint decreases.</span></span> <span data-ttu-id="3d62e-1390">例如，`GetPreferredSize(new Size(100, 0))`不能多于`GetPreferredSize(new Size(200, 0))`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1390">For example, `GetPreferredSize(new Size(100, 0))` should not be wider than `GetPreferredSize(new Size(200, 0))`.</span></span> <span data-ttu-id="3d62e-1391">例外情况是`proposedSize`为 0 或`Size.Empty`，其定义为不受约束。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1391">The exception is a `proposedSize` of 0 or `Size.Empty`, which are defined as unconstrained.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScaledBounds">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Rectangle GetScaledBounds(valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetScaledBounds (bounds As Rectangle, factor As SizeF, specified As BoundsSpecified) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Rectangle GetScaledBounds(System::Drawing::Rectangle bounds, System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="abstract member GetScaledBounds : System.Drawing.Rectangle * System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; System.Drawing.Rectangle&#xA;override this.GetScaledBounds : System.Drawing.Rectangle * System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; System.Drawing.Rectangle" Usage="control.GetScaledBounds (bounds, factor, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="bounds">
          <span data-ttu-id="3d62e-1392">指定要在显示器边界中检索的区域的 <see cref="T:System.Drawing.Rectangle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1392">A <see cref="T:System.Drawing.Rectangle" /> that specifies the area for which to retrieve the display bounds.</span>
          </span>
        </param>
        <param name="factor">
          <span data-ttu-id="3d62e-1393">控件边界的高度和宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1393">The height and width of the control's bounds.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="3d62e-1394">
            <see cref="T:System.Windows.Forms.BoundsSpecified" /> 值之一，指定在定义控件大小和位置时要使用的控件边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1394">One of the values of <see cref="T:System.Windows.Forms.BoundsSpecified" /> that specifies the bounds of the control to use when defining its size and position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1395">检索缩放控件时的边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1395">Retrieves the bounds within which the control is scaled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-1396">一个表示控件缩放边界的 <see cref="T:System.Drawing.Rectangle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1396">A <see cref="T:System.Drawing.Rectangle" /> representing the bounds within which the control is scaled.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1397">这是由调用一个帮助器方法<xref:System.Windows.Forms.Control.ScaleControl%2A>检索缩放控件时的边界。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1397">This is a helper method that is called by <xref:System.Windows.Forms.Control.ScaleControl%2A> to retrieve the bounds within which the control is scaled.</span></span> <span data-ttu-id="3d62e-1398">可以重写此方法以重用<xref:System.Windows.Forms.Control.ScaleControl%2A>缩放逻辑，但您必须提供您自己的边界。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1398">You can override this method to reuse the <xref:System.Windows.Forms.Control.ScaleControl%2A> scaling logic, but you must supply your own bounds.</span></span> <span data-ttu-id="3d62e-1399">默认实现返回考虑采用的缩放的边界`specified`边界，控件是最高级别是否控件为固定宽度或自动调整大小，以及任何控件可能具有的修饰。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1399">The default implementation returns scaled bounds that take into account the `specified` bounds, whether the control is top level, whether the control is fixed width or auto size, and any adornments the control might have.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <altmember cref="M:System.Windows.Forms.Control.Scale(System.Single)" />
        <altmember cref="P:System.Windows.Forms.Control.ScaleChildren" />
      </Docs>
    </Member>
    <Member MemberName="GetStyle">
      <MemberSignature Language="C#" Value="protected bool GetStyle (System.Windows.Forms.ControlStyles flag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool GetStyle(valuetype System.Windows.Forms.ControlStyles flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyle (flag As ControlStyles) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool GetStyle(System::Windows::Forms::ControlStyles flag);" />
      <MemberSignature Language="F#" Value="member this.GetStyle : System.Windows.Forms.ControlStyles -&gt; bool" Usage="control.GetStyle flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Windows.Forms.ControlStyles" />
      </Parameters>
      <Docs>
        <param name="flag">
          <span data-ttu-id="3d62e-1400">从中返回值的 <see cref="T:System.Windows.Forms.ControlStyles" /> 位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1400">The <see cref="T:System.Windows.Forms.ControlStyles" /> bit to return the value from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1401">为控件检索指定控件样式位的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1401">Retrieves the value of the specified control style bit for the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-1402">如果指定控件样式位设置为 <see langword="true" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1402">
              <see langword="true" /> if the specified control style bit is set to <see langword="true" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1403">控件样式位标志用于将分类支持的行为。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1403">Control style bit flags are used to categorize supported behavior.</span></span> <span data-ttu-id="3d62e-1404">控件可以通过调用启用一种样式<xref:System.Windows.Forms.Control.SetStyle%2A>方法并传入相应<xref:System.Windows.Forms.ControlStyles>位中，要将位设置为的布尔值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1404">A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit and the Boolean value to set the bit to.</span></span> <span data-ttu-id="3d62e-1405">若要确定分配给指定的值<xref:System.Windows.Forms.ControlStyles>位，请使用<xref:System.Windows.Forms.Control.GetStyle%2A>方法并传入<xref:System.Windows.Forms.ControlStyles>成员来评估。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1405">To determine the value assigned to a specified <xref:System.Windows.Forms.ControlStyles> bit, use the <xref:System.Windows.Forms.Control.GetStyle%2A> method and pass in the <xref:System.Windows.Forms.ControlStyles> member to evaluate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1406">以下代码示例返回的值的双缓冲相关样式位<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1406">The following code example returns the value of the double-buffering related style bits for a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="3d62e-1407">此示例将返回`true`仅当所有样式位都设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1407">This example returns `true` only if all the style bits are set to `true`.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#4)]
 [!code-csharp[Windows.Forms.ControlMembers6#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#4)]
 [!code-vb[Windows.Forms.ControlMembers6#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.ControlStyles" />
      </Docs>
    </Member>
    <Member MemberName="GetTopLevel">
      <MemberSignature Language="C#" Value="protected bool GetTopLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool GetTopLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetTopLevel" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetTopLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool GetTopLevel();" />
      <MemberSignature Language="F#" Value="member this.GetTopLevel : unit -&gt; bool" Usage="control.GetTopLevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1408">确定控件是否是顶级控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1408">Determines if the control is a top-level control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-1409">如果该控件为顶级控件，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1409">
              <see langword="true" /> if the control is a top-level control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.Forms.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.Forms.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1410">在执行拖动操作期间发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1410">Occurs during a drag operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1411"><xref:System.Windows.Forms.Control.GiveFeedback>启动拖放操作时引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1411">The <xref:System.Windows.Forms.Control.GiveFeedback> event is raised when a drag-and-drop operation is started.</span></span> <span data-ttu-id="3d62e-1412">使用<xref:System.Windows.Forms.Control.GiveFeedback>事件，拖动事件的源可以修改鼠标指针的外观，以便在拖放操作过程中为提供用户可视反馈。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1412">With the <xref:System.Windows.Forms.Control.GiveFeedback> event, the source of a drag event can modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="3d62e-1413">下面描述与拖放操作相关的事件的引发方式以及引发时间。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1413">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="3d62e-1414"><xref:System.Windows.Forms.Control.DoDragDrop%2A>方法确定当前游标位置下的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1414">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="3d62e-1415">然后检查以查看该控件是否有效的放置目标。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1415">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="3d62e-1416">如果控件是有效的放置目标，<xref:System.Windows.Forms.Control.GiveFeedback>指定的拖放效果引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1416">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="3d62e-1417">有关拖放效果的列表，请参见 <xref:System.Windows.Forms.DragDropEffects> 枚举。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1417">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="3d62e-1418">跟踪鼠标光标位置、键盘状态和鼠标按钮状态的更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1418">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="3d62e-1419">如果用户移出一个窗口，则引发 <xref:System.Windows.Forms.Control.DragLeave> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1419">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="3d62e-1420">如果鼠标进入另一个控件，则引发该控件的 <xref:System.Windows.Forms.Control.DragEnter>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1420">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="3d62e-1421">如果鼠标移动但停留在同一个控件中，则引发 <xref:System.Windows.Forms.Control.DragOver> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1421">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="3d62e-1422">如果键盘或鼠标按钮状态，更改<xref:System.Windows.Forms.Control.QueryContinueDrag>事件引发，并确定是否继续拖动、 放置数据，或取消操作值的基础<xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>属性的事件的<xref:System.Windows.Forms.QueryContinueDragEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1422">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="3d62e-1423">如果的值<xref:System.Windows.Forms.DragAction>是`Continue`，则<xref:System.Windows.Forms.Control.DragOver>引发事件以继续操作并<xref:System.Windows.Forms.Control.GiveFeedback>事件以产生新效果，从而可以设置适当的可视反馈。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1423">If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="3d62e-1424">有关有效放置效果的列表，请参见 <xref:System.Windows.Forms.DragDropEffects> 枚举。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1424">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="3d62e-1425"><xref:System.Windows.Forms.Control.DragOver>和<xref:System.Windows.Forms.Control.GiveFeedback>事件成对发生，以便当鼠标移到放置目标时，用户提供的最新反馈有关鼠标的位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1425">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="3d62e-1426">如果的值<xref:System.Windows.Forms.DragAction>是`Drop`，则放置效果值将返回到源，以便源应用程序可以执行相应的操作对源数据中; 例如，如果则剪切数据是移动操作。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1426">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="3d62e-1427">如果的值<xref:System.Windows.Forms.DragAction>是`Cancel`，则<xref:System.Windows.Forms.Control.DragLeave>引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1427">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
 <span data-ttu-id="3d62e-1428">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1428">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1429">下面的代码示例演示了两个之间拖放操作<xref:System.Windows.Forms.ListBox>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1429">The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="3d62e-1430">此示例调用<xref:System.Windows.Forms.Control.DoDragDrop%2A>当拖动操作开始时的方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1430">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="3d62e-1431">如果已移动鼠标拖动操作启动多个<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>鼠标位置在从<xref:System.Windows.Forms.Control.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1431">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="3d62e-1432"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定要在拖动的项的索引`MouseDown`事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1432">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="3d62e-1433">示例还演示如何使用自定义光标拖放操作。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1433">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="3d62e-1434">该示例需要两个光标文件`3dwarro.cur`和`3dwno.cur`、 存在于应用程序目录，用于自定义拖动和不可拖动光标，分别。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1434">The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="3d62e-1435">如果将使用自定义光标`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>检查。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1435">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="3d62e-1436">在中设置自定义光标<xref:System.Windows.Forms.Control.GiveFeedback>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1436">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="3d62e-1437">键盘状态进行评估<xref:System.Windows.Forms.Control.DragOver>事件处理程序的权利`ListBox`，以确定拖动操作将为基于 SHIFT、 CTRL、 ALT 或 CTRL + ALT 键的状态。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1437">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="3d62e-1438">中的位置`ListBox`期间还确定发生下拉`DragOver`事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1438">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="3d62e-1439">如果要删除的数据不是`String`，则<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>设置为`None`中<xref:System.Windows.Forms.DragDropEffects>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1439">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>.</span></span> <span data-ttu-id="3d62e-1440">最后，在显示状态的下拉`DropLocationLabel` <xref:System.Windows.Forms.Label>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1440">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="3d62e-1441">若要删除的权利的数据`ListBox`在中确定<xref:System.Windows.Forms.Control.DragDrop>事件处理程序和`String`值中的适当位置添加`ListBox`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1441">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="3d62e-1442">如果拖动操作移动边界以外的窗体，则在取消拖放操作<xref:System.Windows.Forms.Control.QueryContinueDrag>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1442">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="3d62e-1443">这段代码摘录演示了如何使用<xref:System.Windows.Forms.Control.GiveFeedback>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1443">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.GiveFeedback> event.</span></span> <span data-ttu-id="3d62e-1444">请参阅<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整的代码示例的方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1444">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event EventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : EventHandler " Usage="member this.GotFocus : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1445">在控件接收焦点时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1445">Occurs when the control receives focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1446">将焦点更改通过使用键盘 （TAB、 SHIFT + TAB，等），通过调用<xref:System.Windows.Forms.Control.Select%2A>或<xref:System.Windows.Forms.Control.SelectNextControl%2A>方法，或通过设置<xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType>到当前窗体的属性，将按以下顺序发生焦点事件：</span><span class="sxs-lookup"><span data-stu-id="3d62e-1446">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="3d62e-1447">当更改焦点，使用鼠标或通过调用<xref:System.Windows.Forms.Control.Focus%2A>方法时，按以下顺序执行的焦点事件：</span><span class="sxs-lookup"><span data-stu-id="3d62e-1447">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="3d62e-1448">如果<xref:System.Windows.Forms.Control.CausesValidation%2A>属性设置为`false`，则<xref:System.Windows.Forms.Control.Validating>和<xref:System.Windows.Forms.Control.Validated>所抑制的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1448">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
 <span data-ttu-id="3d62e-1449">**请注意**<xref:System.Windows.Forms.Control.GotFocus>和<xref:System.Windows.Forms.Control.LostFocus>事件是绑定到的 WM_KILLFOCUS 和 WM_SETFOCUS Windows 消息的低级别的焦点事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1449">**Note** The <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages.</span></span> <span data-ttu-id="3d62e-1450">通常情况下，<xref:System.Windows.Forms.Control.GotFocus>并<xref:System.Windows.Forms.Control.LostFocus>更新时仅使用事件<xref:System.Windows.Forms.UICues>或编写自定义控件时。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1450">Typically, the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are only used when updating <xref:System.Windows.Forms.UICues> or when writing custom controls.</span></span> <span data-ttu-id="3d62e-1451">相反<xref:System.Windows.Forms.Control.Enter>和<xref:System.Windows.Forms.Control.Leave>事件应使用的所有控件除了<xref:System.Windows.Forms.Form>类，使用<xref:System.Windows.Forms.Form.Activated>和<xref:System.Windows.Forms.Form.Deactivate>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1451">Instead the <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events should be used for all controls except the <xref:System.Windows.Forms.Form> class, which uses the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events.</span></span> <span data-ttu-id="3d62e-1452">有关详细信息<xref:System.Windows.Forms.Control.GotFocus>并<xref:System.Windows.Forms.Control.LostFocus>事件，请参阅[WM_SETFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646283\(v=vs.85\).aspx)并[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)主题。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1452">For more information about the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events, see the [WM_SETFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646283\(v=vs.85\).aspx) and [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) topics.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3d62e-1453">不尝试将焦点设置在<xref:System.Windows.Forms.Control.Enter>， <xref:System.Windows.Forms.Control.GotFocus>， <xref:System.Windows.Forms.Control.Leave>， <xref:System.Windows.Forms.Control.LostFocus>， <xref:System.Windows.Forms.Control.Validating>，或<xref:System.Windows.Forms.Control.Validated>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1453">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="3d62e-1454">执行此操作可能会导致你的应用程序或操作系统停止响应。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1454">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="3d62e-1455">有关详细信息，请参阅[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)主题。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1455">For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) topic.</span></span>  
  
 <span data-ttu-id="3d62e-1456">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1456">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1457">下面的代码示例演示如何将此成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1457">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3d62e-1458">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Control.GotFocus>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1458">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.GotFocus> event.</span></span> <span data-ttu-id="3d62e-1459">此报告可帮助您了解事件发生的并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1459">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="3d62e-1460">若要运行此代码示例，请将其粘贴到包含继承的类型的实例的项目<xref:System.Windows.Forms.Control>，如<xref:System.Windows.Forms.Button>或<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1460">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="3d62e-1461">然后该实例命名`Control1`，并确保事件处理程序相关联<xref:System.Windows.Forms.Control.GotFocus>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1461">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.GotFocus> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#47](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#47)]
 [!code-vb[System.Windows.Forms.EventExamples#47](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#47)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.LostFocus" />
        <altmember cref="E:System.Windows.Forms.Control.Enter" />
        <altmember cref="E:System.Windows.Forms.Form.Activated" />
        <altmember cref="M:System.Windows.Forms.Form.Activate" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.Control.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IWin32Window.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(-515)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1462">获取控件绑定到的窗口句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1462">Gets the window handle that the control is bound to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1463">
            <see cref="T:System.IntPtr" />，包含控件的窗口句柄 (<see langword="HWND" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1463">An <see cref="T:System.IntPtr" /> that contains the window handle (<see langword="HWND" />) of the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1464">值<xref:System.Windows.Forms.Control.Handle%2A>属性是 Windows `HWND`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1464">The value of the <xref:System.Windows.Forms.Control.Handle%2A> property is a Windows `HWND`.</span></span> <span data-ttu-id="3d62e-1465">如果尚未创建句柄，则引用此属性将强制创建句柄。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1465">If the handle has not yet been created, referencing this property will force the handle to be created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1466">下面的代码示例演示了如何使用<xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A?displayProperty=nameWithType>和<xref:System.Windows.Forms.Control.Handle%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1466">The following code example demonstrates using the <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A?displayProperty=nameWithType> and the <xref:System.Windows.Forms.Control.Handle%2A> property.</span></span> <span data-ttu-id="3d62e-1467">若要运行示例窗体中粘贴以下代码。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1467">To run the example paste the following code in a form.</span></span> <span data-ttu-id="3d62e-1468">添加名为两个按钮`Button1`和`Button2`到窗体，并确保所有事件都连接到其事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1468">Add two buttons named `Button1` and `Button2` to the form and ensure all events are connected to their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="HandleCreated">
      <MemberSignature Language="C#" Value="public event EventHandler HandleCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HandleCreated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.HandleCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HandleCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HandleCreated;" />
      <MemberSignature Language="F#" Value="member this.HandleCreated : EventHandler " Usage="member this.HandleCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1469">在为控件创建句柄时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1469">Occurs when a handle is created for the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1470">当创建句柄<xref:System.Windows.Forms.Control>显示第一次。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1470">A handle is created when the <xref:System.Windows.Forms.Control> is displayed for the first time.</span></span> <span data-ttu-id="3d62e-1471">例如，如果<xref:System.Windows.Forms.Control>将创建一个具有<xref:System.Windows.Forms.Control.Visible%2A>设置为`false`，则<xref:System.Windows.Forms.Control.HandleCreated>之前将不会引发事件<xref:System.Windows.Forms.Control.Visible%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1471">For example, if a <xref:System.Windows.Forms.Control> is created that has <xref:System.Windows.Forms.Control.Visible%2A> set to `false`, the <xref:System.Windows.Forms.Control.HandleCreated> event will not be raised until <xref:System.Windows.Forms.Control.Visible%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="3d62e-1472">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1472">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1473">下面的代码示例演示如何将此成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1473">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3d62e-1474">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Control.HandleCreated>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1474">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.HandleCreated> event.</span></span> <span data-ttu-id="3d62e-1475">此报告可帮助您了解事件发生的并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1475">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3d62e-1476">若要报告或频繁发生的事件上多个事件，请考虑更换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或将消息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1476">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3d62e-1477">若要运行此代码示例，请将其粘贴到包含继承的类型的实例的项目<xref:System.Windows.Forms.Control>，如<xref:System.Windows.Forms.Button>或<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1477">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="3d62e-1478">然后该实例命名`Control1`，并确保事件处理程序相关联<xref:System.Windows.Forms.Control.HandleCreated>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1478">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.HandleCreated> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#37](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#37)]
 [!code-vb[System.Windows.Forms.EventExamples#37](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="HandleDestroyed">
      <MemberSignature Language="C#" Value="public event EventHandler HandleDestroyed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HandleDestroyed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.HandleDestroyed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HandleDestroyed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HandleDestroyed;" />
      <MemberSignature Language="F#" Value="member this.HandleDestroyed : EventHandler " Usage="member this.HandleDestroyed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1479">在控件的句柄处于销毁过程中时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1479">Occurs when the control's handle is in the process of being destroyed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1480">期间<xref:System.Windows.Forms.Control.HandleDestroyed>事件，该控件仍是有效的 Windows 控件和<xref:System.Windows.Forms.Control.Handle%2A>可以通过调用重新创建<xref:System.Windows.Forms.Control.RecreateHandle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1480">During the <xref:System.Windows.Forms.Control.HandleDestroyed> event, the control is still a valid Windows control and the <xref:System.Windows.Forms.Control.Handle%2A> can be recreated by calling the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.</span></span>  
  
 <span data-ttu-id="3d62e-1481">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1481">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1482">下面的代码示例演示如何将此成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1482">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3d62e-1483">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Control.HandleDestroyed>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1483">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.HandleDestroyed> event.</span></span> <span data-ttu-id="3d62e-1484">此报告可帮助您了解事件发生的并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1484">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3d62e-1485">若要报告或频繁发生的事件上多个事件，请考虑更换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或将消息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1485">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3d62e-1486">若要运行此代码示例，请将其粘贴到包含继承的类型的实例的项目<xref:System.Windows.Forms.Control>，如<xref:System.Windows.Forms.Button>或<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1486">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="3d62e-1487">然后该实例命名`Control1`，并确保事件处理程序相关联<xref:System.Windows.Forms.Control.HandleDestroyed>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1487">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.HandleDestroyed> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#38](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#38)]
 [!code-vb[System.Windows.Forms.EventExamples#38](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#38)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public bool HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.HasChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChildren As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChildren { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildren : bool" Usage="System.Windows.Forms.Control.HasChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1488">获取一个值，该值指示控件是否包含一个或多个子控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1488">Gets a value indicating whether the control contains one or more child controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1489">如果控件包含一个或多个子控件，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1489">
              <see langword="true" /> if the control contains one or more child controls; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1490">如果<xref:System.Windows.Forms.Control.Controls%2A>集合中存在<xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A>大于零，<xref:System.Windows.Forms.Control.HasChildren%2A>属性将返回`true`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1490">If the <xref:System.Windows.Forms.Control.Controls%2A> collection has a <xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A> greater than zero, the <xref:System.Windows.Forms.Control.HasChildren%2A> property will return `true`.</span></span> <span data-ttu-id="3d62e-1491">访问<xref:System.Windows.Forms.Control.HasChildren%2A>属性不会强制创建<xref:System.Windows.Forms.Control.ControlCollection>如果控件没有任何子级，因此引用此属性可以提高性能时提供的控件树的每个步骤。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1491">Accessing the <xref:System.Windows.Forms.Control.HasChildren%2A> property does not force the creation of a <xref:System.Windows.Forms.Control.ControlCollection> if the control has no children, so referencing this property can provide a performance benefit when walking a tree of controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1492">下面的代码示例设置<xref:System.Windows.Forms.Control.BackColor%2A>和<xref:System.Windows.Forms.Control.ForeColor%2A>的默认系统颜色的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1492">The following code example sets the <xref:System.Windows.Forms.Control.BackColor%2A> and <xref:System.Windows.Forms.Control.ForeColor%2A> of the controls to the default system colors.</span></span> <span data-ttu-id="3d62e-1493">如果控件具有任何子控件，则代码以递归方式调用自身。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1493">The code recursively calls itself if the control has any child controls.</span></span> <span data-ttu-id="3d62e-1494">此代码示例，则需要<xref:System.Windows.Forms.Form>与至少一个子控件; 但是，在子容器控件，如<xref:System.Windows.Forms.Panel>或<xref:System.Windows.Forms.GroupBox>，具有其自己的子控件包装会更好地演示递归。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1494">This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#1)]
 [!code-vb[Windows.Forms.Control Properties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Layout.ArrangedElementCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Height : int with get, set" Usage="System.Windows.Forms.Control.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1495">获取或设置控件的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1495">Gets or sets the height of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1496">控件的高度（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1496">The height of the control in pixels.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1497">对所做更改<xref:System.Windows.Forms.Control.Height%2A>并<xref:System.Windows.Forms.Control.Top%2A>属性值将导致<xref:System.Windows.Forms.Control.Bottom%2A>要更改的控件的属性值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1497">Changes made to the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Top%2A> property values cause the <xref:System.Windows.Forms.Control.Bottom%2A> property value of the control to change.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1498">派生的控件的最小高度<xref:System.Windows.Forms.Splitter>是一个像素。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1498">The minimum height for the derived control <xref:System.Windows.Forms.Splitter> is one pixel.</span></span> <span data-ttu-id="3d62e-1499">默认高度<xref:System.Windows.Forms.Splitter>控件是三个像素。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1499">The default height for the <xref:System.Windows.Forms.Splitter> control is three pixels.</span></span> <span data-ttu-id="3d62e-1500">高度设<xref:System.Windows.Forms.Splitter>控制对一个值，不会早于其中一个将属性值重置为默认高度。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1500">Setting the height of the <xref:System.Windows.Forms.Splitter> control to a value less than one will reset the property value to the default height.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1501">下面的代码示例创建三个<xref:System.Windows.Forms.Button>窗体上并使用各种大小相关以及与位置相关属性来设置其大小和位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1501">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="3d62e-1502">此示例中，你需要具有<xref:System.Windows.Forms.Form>具有宽度和高度至少为 300 像素。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1502">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
        <altmember cref="P:System.Windows.Forms.Control.Width" />
        <altmember cref="P:System.Drawing.Size.Height" />
      </Docs>
    </Member>
    <Member MemberName="HelpRequested">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HelpEventHandler HelpRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HelpEventHandler HelpRequested" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.HelpRequested" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HelpRequested As HelpEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HelpEventHandler ^ HelpRequested;" />
      <MemberSignature Language="F#" Value="member this.HelpRequested : System.Windows.Forms.HelpEventHandler " Usage="member this.HelpRequested : System.Windows.Forms.HelpEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HelpEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1503">用户请求控件帮助时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1503">Occurs when the user requests help for a control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1504"><xref:System.Windows.Forms.Control.HelpRequested>通常当用户按 F1 键或关联的上下文相关帮助按钮单击。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1504">The <xref:System.Windows.Forms.Control.HelpRequested> event is commonly raised when the user presses the F1 key or an associated context-sensitive help button is clicked.</span></span>  
  
 <span data-ttu-id="3d62e-1505">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1505">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1506">下面的代码示例演示了如何处理<xref:System.Windows.Forms.Control.HelpRequested>事件，以包含四个地址字段的窗体上显示自定义帮助内容。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1506">The following code example demonstrates handling the <xref:System.Windows.Forms.Control.HelpRequested> event to display custom Help content on a form containing four address fields.</span></span> <span data-ttu-id="3d62e-1507"><xref:System.Windows.Forms.Control.HelpRequested>通过按 F1 键中的地址字段中，选中或通过使用上下文相关帮助按钮并单击帮助光标地址字段上的引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1507">The <xref:System.Windows.Forms.Control.HelpRequested> event is raised either by pressing the F1 key with the focus in an address field, or by the using the context-sensitive Help button and clicking the Help cursor on an address field.</span></span> <span data-ttu-id="3d62e-1508"><xref:System.Windows.Forms.HelpEventArgs.Handled%2A>属性设置为 true 以指示`HelpRequested`处理事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1508">The <xref:System.Windows.Forms.HelpEventArgs.Handled%2A> property is set to true to indicate that the `HelpRequested` event is handled.</span></span> <span data-ttu-id="3d62e-1509">该示例还演示了存储中的帮助文本<xref:System.Windows.Forms.Control.Tag%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1509">The example also demonstrates storing the Help text in the <xref:System.Windows.Forms.Control.Tag%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[System.Windows.Forms.HelpEventHandler#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.HelpEventHandler/CPP/helpevent.cpp#1)]
 [!code-csharp[System.Windows.Forms.HelpEventHandler#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HelpEventHandler/CS/helpevent.cs#1)]
 [!code-vb[System.Windows.Forms.HelpEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HelpEventHandler/VB/helpevent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
        <altmember cref="T:System.Windows.Forms.HelpProvider" />
        <altmember cref="T:System.Windows.Forms.Help" />
      </Docs>
    </Member>
    <Member MemberName="Hide">
      <MemberSignature Language="C#" Value="public void Hide ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Hide() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Hide" />
      <MemberSignature Language="VB.NET" Value="Public Sub Hide ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Hide();" />
      <MemberSignature Language="F#" Value="member this.Hide : unit -&gt; unit" Usage="control.Hide " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1510">对用户隐藏控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1510">Conceals the control from the user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1511">隐藏控件等效于设置<xref:System.Windows.Forms.Control.Visible%2A>属性设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1511">Hiding the control is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `false`.</span></span> <span data-ttu-id="3d62e-1512">之后<xref:System.Windows.Forms.Control.Hide%2A>调用方法时，<xref:System.Windows.Forms.Control.Visible%2A>属性返回的值`false`直到<xref:System.Windows.Forms.Control.Show%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1512">After the <xref:System.Windows.Forms.Control.Hide%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `false` until the <xref:System.Windows.Forms.Control.Show%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1513">下面的代码示例会隐藏按钮，如果单击该按钮按下 CTRL 键。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1513">The following code example hides a button if the CTRL key is pressed when the button is clicked.</span></span> <span data-ttu-id="3d62e-1514">此示例要求具有<xref:System.Windows.Forms.Button>名为`button1`上<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1514">This example requires that you have a <xref:System.Windows.Forms.Button> named `button1` on a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#2)]
 [!code-csharp[Windows.Forms.Control Members4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#2)]
 [!code-vb[Windows.Forms.Control Members4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Show" />
      </Docs>
    </Member>
    <Member MemberName="ImeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImeMode ImeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ImeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImeMode ImeMode { System::Windows::Forms::ImeMode get(); void set(System::Windows::Forms::ImeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ImeMode : System.Windows.Forms.ImeMode with get, set" Usage="System.Windows.Forms.Control.ImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.AmbientValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1515">获取或设置控件的输入法编辑器 (IME) 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1515">Gets or sets the Input Method Editor (IME) mode of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1516">
            <see cref="T:System.Windows.Forms.ImeMode" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1516">One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</span>
          </span>
          <span data-ttu-id="3d62e-1517">默认值为 <see cref="F:System.Windows.Forms.ImeMode.Inherit" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1517">The default is <see cref="F:System.Windows.Forms.ImeMode.Inherit" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1518">IME 是一个程序，使用户能够输入复杂字符和符号，如日本汉字字符，使用标准键盘。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1518">An IME is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, using a standard keyboard.</span></span> <span data-ttu-id="3d62e-1519"><xref:System.Windows.Forms.Control.ImeMode%2A>属性通常设置为<xref:System.Windows.Forms.ImeMode.Off?displayProperty=nameWithType>为<xref:System.Windows.Forms.TextBox>旨在只输入数字值的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1519">The <xref:System.Windows.Forms.Control.ImeMode%2A> property is typically set to <xref:System.Windows.Forms.ImeMode.Off?displayProperty=nameWithType> for a <xref:System.Windows.Forms.TextBox> control that is intended to only enter numeric values.</span></span> <span data-ttu-id="3d62e-1520"><xref:System.Windows.Forms.Control.ImeMode%2A>属性值设置为<xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType>为<xref:System.Windows.Forms.Form>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1520">The <xref:System.Windows.Forms.Control.ImeMode%2A> property value is set to <xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType> for the <xref:System.Windows.Forms.Form> class.</span></span>  
  
 <span data-ttu-id="3d62e-1521">大多数类不能直接支持输入法编辑器，或允许直接从 IME，输入将设置此属性设置为值<xref:System.Windows.Forms.ImeMode.NoControl>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1521">Most classes that do not directly support Input Method Editors, or allow direct input from an IME, will set the value of this property to <xref:System.Windows.Forms.ImeMode.NoControl>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3d62e-1522">用户可以以交互方式更改<xref:System.Windows.Forms.Control.ImeMode%2A>除非已以编程方式设置<xref:System.Windows.Forms.ImeMode.Disable?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1522">The user can interactively change the <xref:System.Windows.Forms.Control.ImeMode%2A> unless it has been programmatically set to <xref:System.Windows.Forms.ImeMode.Disable?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3d62e-1523">在这种情况下，用户将无法再使用 IME。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1523">In this case, the user will not be able to use the IME.</span></span>  
>   
>  <span data-ttu-id="3d62e-1524"><xref:System.Windows.Forms.Control.ImeMode%2A>全局输入的模式，则将忽略在 Windows 8 上属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1524">The <xref:System.Windows.Forms.Control.ImeMode%2A> property is ignored on Windows 8 when the global input mode is in effect.</span></span> <span data-ttu-id="3d62e-1525">有关详细信息，请参阅[交换机文本输入从更改每个线程为每个用户](http://go.microsoft.com/fwlink/?LinkID=256509)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1525">For more info, see [Switch Text Input Changed from Per-Thread to Per-User](http://go.microsoft.com/fwlink/?LinkID=256509).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="3d62e-1526">所分配的值不是一个 <see cref="T:System.Windows.Forms.ImeMode" /> 枚举值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1526">The assigned value is not one of the <see cref="T:System.Windows.Forms.ImeMode" /> enumeration values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.ImeMode" />
        <altmember cref="P:System.Windows.Forms.Control.DefaultImeMode" />
      </Docs>
    </Member>
    <Member MemberName="ImeModeBase">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.ImeMode ImeModeBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeModeBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ImeModeBase" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property ImeModeBase As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode ImeModeBase { System::Windows::Forms::ImeMode get(); void set(System::Windows::Forms::ImeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ImeModeBase : System.Windows.Forms.ImeMode with get, set" Usage="System.Windows.Forms.Control.ImeModeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1527">获取或设置控件的 IME 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1527">Gets or sets the IME mode of a control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1528">控件的 IME 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1528">The IME mode of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImeModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ImeModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ImeModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ImeModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ImeModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ImeModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ImeModeChanged : EventHandler " Usage="member this.ImeModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1529">在 <see cref="P:System.Windows.Forms.Control.ImeMode" /> 属性更改后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1529">Occurs when the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1530">如果引发此事件<xref:System.Windows.Forms.Control.ImeMode%2A>通过以编程方式修改或通过交互更改属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1530">This event is raised if the <xref:System.Windows.Forms.Control.ImeMode%2A> property is changed by either a programmatic modification or through interaction.</span></span>  
  
 <span data-ttu-id="3d62e-1531">不支持输入法管理器的控件将永远不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1531">Controls that do not support Input Method Managers will never raise this event.</span></span>  
  
 <span data-ttu-id="3d62e-1532">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1532">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1533">下面的代码示例是一个事件处理程序时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1533">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-1534"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式*PropertyName* `Changed`的时引发的相应*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1534">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-1535">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1535">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="3d62e-1536">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1536">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-1537">此示例要求具有<xref:System.Windows.Forms.Form>，其中包含<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1537">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.ImeMode" />
        <altmember cref="T:System.Windows.Forms.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="InitLayout">
      <MemberSignature Language="C#" Value="protected virtual void InitLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InitLayout" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitLayout ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitLayout();" />
      <MemberSignature Language="F#" Value="abstract member InitLayout : unit -&gt; unit&#xA;override this.InitLayout : unit -&gt; unit" Usage="control.InitLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1538">在将控件添加到另一个容器之后调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1538">Called after the control has been added to another container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1539"><xref:System.Windows.Forms.Control.InitLayout%2A>将控件添加到容器后立即调用方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1539">The <xref:System.Windows.Forms.Control.InitLayout%2A> method is called immediately after adding a control to a container.</span></span> <span data-ttu-id="3d62e-1540"><xref:System.Windows.Forms.Control.InitLayout%2A>方法使控件基于其容器其布局状态初始化。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1540">The <xref:System.Windows.Forms.Control.InitLayout%2A> method enables a control to initialize its layout state based on its container.</span></span> <span data-ttu-id="3d62e-1541">例如，您通常会应用锚定和停靠到中的控件<xref:System.Windows.Forms.Control.InitLayout%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1541">For example, you would typically apply anchoring and docking to the control in the <xref:System.Windows.Forms.Control.InitLayout%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-1542">重写时<see cref="M:System.Windows.Forms.Control.InitLayout" />在派生类中，请务必调用基类的<see cref="M:System.Windows.Forms.Control.InitLayout" />方法，以便正确显示控件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-1542">When overriding <see cref="M:System.Windows.Forms.Control.InitLayout" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.InitLayout" /> method so that the control is displayed correctly.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.Control.Anchor" />
        <altmember cref="P:System.Windows.Forms.Control.Dock" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invalidate">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1543">使控件的特定区域无效并向控件发送绘制消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1543">Invalidates a specific region of the control and causes a paint message to be sent to the control.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; unit" Usage="control.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1544">使控件的整个图面无效并导致重绘控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1544">Invalidates the entire surface of the control and causes the control to be redrawn.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1545">调用<xref:System.Windows.Forms.Control.Invalidate%2A>方法不会强制同步画图; 若要强制执行同步画图，请调用<xref:System.Windows.Forms.Control.Update%2A>方法后调用<xref:System.Windows.Forms.Control.Invalidate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1545">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="3d62e-1546">不带任何参数调用此方法时，将整个客户端区域添加到更新区域。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1546">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1547">下面的代码示例启用删除用户后，将图像或图像文件拖到窗体，并将其显示在其上的点。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1547">The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped.</span></span> <span data-ttu-id="3d62e-1548"><xref:System.Windows.Forms.Control.OnPaint%2A>方法被重写重绘每次绘制窗体的图像; 否则该映像将仅持续到下一步重新绘制。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1548">The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</span></span> <span data-ttu-id="3d62e-1549"><xref:System.Windows.Forms.Control.DragEnter>事件处理方法确定要拖动到窗体数据的类型，并提供适当的反馈。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1549">The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</span></span> <span data-ttu-id="3d62e-1550"><xref:System.Windows.Forms.Control.DragDrop>事件处理方法在窗体上显示图像，如果<xref:System.Drawing.Image>可以从数据创建。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1550">The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data.</span></span> <span data-ttu-id="3d62e-1551">因为<xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType>并<xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType>的值为屏幕坐标，该示例使用<xref:System.Windows.Forms.Control.PointToClient%2A>方法来将它们转换为客户端坐标。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1551">Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CPP/imagedrag.cpp#1)]
 [!code-csharp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CS/imagedrag.cs#1)]
 [!code-vb[Windows.Forms.Control.DragOperations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/VB/imagedrag.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (bool invalidateChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(bool invalidateChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate (invalidateChildren As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(bool invalidateChildren);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : bool -&gt; unit" Usage="control.Invalidate invalidateChildren" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invalidateChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="invalidateChildren">
          <span data-ttu-id="3d62e-1552">若要使控件的子控件无效，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1552">
              <see langword="true" /> to invalidate the control's child controls; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1553">使控件的特定区域无效并向控件发送绘制消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1553">Invalidates a specific region of the control and causes a paint message to be sent to the control.</span>
          </span>
          <span data-ttu-id="3d62e-1554">还可以使分配给该控件的子控件无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1554">Optionally, invalidates the child controls assigned to the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1555">调用<xref:System.Windows.Forms.Control.Invalidate%2A>方法不会强制同步画图; 若要强制执行同步画图，请调用<xref:System.Windows.Forms.Control.Update%2A>方法后调用<xref:System.Windows.Forms.Control.Invalidate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1555">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="3d62e-1556">不带任何参数调用此方法时，将整个客户端区域添加到更新区域。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1556">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate (rc As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Rectangle rc);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Rectangle -&gt; unit" Usage="control.Invalidate rc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rc">
          <span data-ttu-id="3d62e-1557">一个 <see cref="T:System.Drawing.Rectangle" />，表示要使之无效的区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1557">A <see cref="T:System.Drawing.Rectangle" /> that represents the region to invalidate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1558">使控件的指定区域无效（将其添加到控件的更新区域，下次绘制操作时将重新绘制更新区域），并向控件发送绘制消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1558">Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1559">调用<xref:System.Windows.Forms.Control.Invalidate%2A>方法不会强制同步画图; 若要强制执行同步画图，请调用<xref:System.Windows.Forms.Control.Update%2A>方法后调用<xref:System.Windows.Forms.Control.Invalidate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1559">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="3d62e-1560">不带任何参数调用此方法时，将整个客户端区域添加到更新区域。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1560">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Region ^ region);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Region -&gt; unit" Usage="control.Invalidate region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region">
          <span data-ttu-id="3d62e-1561">要使之无效的 <see cref="T:System.Drawing.Region" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1561">The <see cref="T:System.Drawing.Region" /> to invalidate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1562">使控件的指定区域无效（将其添加到控件的更新区域，下次绘制操作时将重新绘制更新区域），并向控件发送绘制消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1562">Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1563">调用<xref:System.Windows.Forms.Control.Invalidate%2A>方法不会强制同步画图; 若要强制执行同步画图，请调用<xref:System.Windows.Forms.Control.Update%2A>方法后调用<xref:System.Windows.Forms.Control.Invalidate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1563">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="3d62e-1564">不带任何参数调用此方法时，将整个客户端区域添加到更新区域。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1564">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rc, bool invalidateChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rc, bool invalidateChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate (rc As Rectangle, invalidateChildren As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Rectangle rc, bool invalidateChildren);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Rectangle * bool -&gt; unit" Usage="control.Invalidate (rc, invalidateChildren)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="System.Drawing.Rectangle" />
        <Parameter Name="invalidateChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rc">
          <span data-ttu-id="3d62e-1565">一个 <see cref="T:System.Drawing.Rectangle" />，表示要使之无效的区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1565">A <see cref="T:System.Drawing.Rectangle" /> that represents the region to invalidate.</span>
          </span>
        </param>
        <param name="invalidateChildren">
          <span data-ttu-id="3d62e-1566">若要使控件的子控件无效，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1566">
              <see langword="true" /> to invalidate the control's child controls; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1567">使控件的指定区域无效（将其添加到控件的更新区域，下次绘制操作时将重新绘制更新区域），并向控件发送绘制消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1567">Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</span>
          </span>
          <span data-ttu-id="3d62e-1568">还可以使分配给该控件的子控件无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1568">Optionally, invalidates the child controls assigned to the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1569">调用<xref:System.Windows.Forms.Control.Invalidate%2A>方法不会强制同步画图; 若要强制执行同步画图，请调用<xref:System.Windows.Forms.Control.Update%2A>方法后调用<xref:System.Windows.Forms.Control.Invalidate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1569">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="3d62e-1570">不带任何参数调用此方法时，将整个客户端区域添加到更新区域。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1570">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Region region, bool invalidateChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(class System.Drawing.Region region, bool invalidateChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Region ^ region, bool invalidateChildren);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Region * bool -&gt; unit" Usage="control.Invalidate (region, invalidateChildren)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
        <Parameter Name="invalidateChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="region">
          <span data-ttu-id="3d62e-1571">要使之无效的 <see cref="T:System.Drawing.Region" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1571">The <see cref="T:System.Drawing.Region" /> to invalidate.</span>
          </span>
        </param>
        <param name="invalidateChildren">
          <span data-ttu-id="3d62e-1572">若要使控件的子控件无效，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1572">
              <see langword="true" /> to invalidate the control's child controls; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1573">使控件的指定区域无效（将其添加到控件的更新区域，下次绘制操作时将重新绘制更新区域），并向控件发送绘制消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1573">Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</span>
          </span>
          <span data-ttu-id="3d62e-1574">还可以使分配给该控件的子控件无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1574">Optionally, invalidates the child controls assigned to the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1575">调用<xref:System.Windows.Forms.Control.Invalidate%2A>方法不会强制同步画图; 若要强制执行同步画图，请调用<xref:System.Windows.Forms.Control.Update%2A>方法后调用<xref:System.Windows.Forms.Control.Invalidate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1575">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="3d62e-1576">不带任何参数调用此方法时，将整个客户端区域添加到更新区域。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1576">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidated">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.InvalidateEventHandler Invalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.InvalidateEventHandler Invalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Invalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Invalidated As InvalidateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::InvalidateEventHandler ^ Invalidated;" />
      <MemberSignature Language="F#" Value="member this.Invalidated : System.Windows.Forms.InvalidateEventHandler " Usage="member this.Invalidated : System.Windows.Forms.InvalidateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InvalidateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1577">控件的显示要求重新绘制时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1577">Occurs when a control's display requires redrawing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1578">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1578">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1579">下面的代码示例演示如何将此成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1579">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3d62e-1580">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Control.Invalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1580">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.Invalidated> event.</span></span> <span data-ttu-id="3d62e-1581">此报告可帮助您了解事件发生的并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1581">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3d62e-1582">若要报告或频繁发生的事件上多个事件，请考虑更换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或将消息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1582">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3d62e-1583">若要运行此代码示例，请将其粘贴到包含继承的类型的实例的项目<xref:System.Windows.Forms.Control>，如<xref:System.Windows.Forms.Button>或<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1583">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="3d62e-1584">然后该实例命名`Control1`，并确保事件处理程序相关联<xref:System.Windows.Forms.Control.Invalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1584">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.Invalidated> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#40)]
 [!code-vb[System.Windows.Forms.EventExamples#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#40)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1585">在拥有此控件的基础窗口句柄的线程上执行委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1585">Executes a delegate on the thread that owns the control's underlying window handle.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate -&gt; obj" Usage="control.Invoke method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="3d62e-1586">包含要在控件的线程上下文中调用的方法的委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1586">A delegate that contains a method to be called in the control's thread context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1587">在拥有此控件的基础窗口句柄的线程上执行指定的委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1587">Executes the specified delegate on the thread that owns the control's underlying window handle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-1588">正在被调用的委托的返回值，或者如果委托没有返回值，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1588">The return value from the delegate being invoked, or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1589">委托是类似于 C 或 c + + 语言中的函数指针。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1589">Delegates are similar to function pointers in C or C++ languages.</span></span> <span data-ttu-id="3d62e-1590">委托封装到委托对象中的方法的引用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1590">Delegates encapsulate a reference to a method inside a delegate object.</span></span> <span data-ttu-id="3d62e-1591">委托对象然后传递到调用所引用的方法的代码，并且要调用的方法可以在编译时未知。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1591">The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time.</span></span> <span data-ttu-id="3d62e-1592">与 C 或 c + + 中的函数指针，委托是面向对象的、 类型安全和更安全。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1592">Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.</span></span>  
  
 <span data-ttu-id="3d62e-1593"><xref:System.Windows.Forms.Control.Invoke%2A>方法搜索控件的父链，直到它找到的控件或窗体具有一个窗口处理如果尚不存在当前控件的基础窗口句柄。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1593">The <xref:System.Windows.Forms.Control.Invoke%2A> method searches up the control's parent chain until it finds a control or form that has a window handle if the current control's underlying window handle does not exist yet.</span></span> <span data-ttu-id="3d62e-1594">如果找不到任何合适的句柄，<xref:System.Windows.Forms.Control.Invoke%2A>方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1594">If no appropriate handle can be found, the <xref:System.Windows.Forms.Control.Invoke%2A> method will throw an exception.</span></span> <span data-ttu-id="3d62e-1595">在调用期间引发的异常将传播回调用方。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1595">Exceptions that are raised during the call will be propagated back to the caller.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1596">除了<xref:System.Windows.Forms.Control.InvokeRequired%2A>属性，在控件上都是线程安全的四种方法： <xref:System.Windows.Forms.Control.Invoke%2A>， <xref:System.Windows.Forms.Control.BeginInvoke%2A>， <xref:System.Windows.Forms.Control.EndInvoke%2A>，和<xref:System.Windows.Forms.Control.CreateGraphics%2A>如果已创建控件的句柄。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1596">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="3d62e-1597">调用<xref:System.Windows.Forms.Control.CreateGraphics%2A>后台线程上创建控件的句柄之前可能会导致非法的跨线程调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1597">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="3d62e-1598">对于所有其他方法调用，您应使用 invoke 方法之一来封送对控件的线程的调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1598">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span>  
  
 <span data-ttu-id="3d62e-1599">委托可以是实例<xref:System.EventHandler>，在这种情况下发件人参数将包含此控件和事件参数将包含<xref:System.EventArgs.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1599">The delegate can be an instance of <xref:System.EventHandler>, in which case the sender parameter will contain this control, and the event parameter will contain <xref:System.EventArgs.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3d62e-1600">委托还可以是实例<xref:System.Windows.Forms.MethodInvoker>，或任何其他 void 参数列表的委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1600">The delegate can also be an instance of <xref:System.Windows.Forms.MethodInvoker>, or any other delegate that takes a void parameter list.</span></span> <span data-ttu-id="3d62e-1601">调用<xref:System.EventHandler>或<xref:System.Windows.Forms.MethodInvoker>委托会比其他类型的委托调用更快。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1601">A call to an <xref:System.EventHandler> or <xref:System.Windows.Forms.MethodInvoker> delegate will be faster than a call to another type of delegate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1602">如果应处理该消息的线程不再处于活动状态，可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1602">An exception might be thrown if the thread that should process the message is no longer active.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1603">下面的代码示例显示了包含一个委托的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1603">The following code example shows controls that contain a delegate.</span></span> <span data-ttu-id="3d62e-1604">委托封装的方法将项添加到列表框中，并拥有的窗体的基础句柄的线程上执行此方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1604">The delegate encapsulates a method that adds items to the list box, and this method is executed on the thread that owns the underlying handle of the form.</span></span> <span data-ttu-id="3d62e-1605">当用户单击按钮，`Invoke`运行该委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1605">When the user clicks on the button, `Invoke` runs the delegate.</span></span>  
  
 [!code-cpp[Control_Invoke2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_Invoke2/CPP/control_invoke2.cpp#1)]
 [!code-csharp[Control_Invoke2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_Invoke2/CS/control_invoke2.cs#1)]
 [!code-vb[Control_Invoke2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_Invoke2/VB/control_invoke2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MethodInvoker" />
        <altmember cref="P:System.Windows.Forms.Control.InvokeRequired" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Invoke(Delegate ^ method, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : Delegate * obj[] -&gt; obj&#xA;override this.Invoke : Delegate * obj[] -&gt; obj" Usage="control.Invoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="3d62e-1606">一个方法委托，它采用的参数的数量和类型与 <c>args</c> 参数中所包含的相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1606">A delegate to a method that takes parameters of the same number and type that are contained in the <c>args</c> parameter.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="3d62e-1607">作为指定方法的参数传递的对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1607">An array of objects to pass as arguments to the specified method.</span>
          </span>
          <span data-ttu-id="3d62e-1608">如果此方法没有参数，该参数可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1608">This parameter can be <see langword="null" /> if the method takes no arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1609">在拥有控件的基础窗口句柄的线程上，用指定的自变量列表执行指定委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1609">Executes the specified delegate, on the thread that owns the control's underlying window handle, with the specified list of arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-1610">
            <see cref="T:System.Object" />，它包含正被调用的委托返回值；如果该委托没有返回值，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1610">An <see cref="T:System.Object" /> that contains the return value from the delegate being invoked, or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1611">委托是类似于 C 或 c + + 语言中的函数指针。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1611">Delegates are similar to function pointers in C or C++ languages.</span></span> <span data-ttu-id="3d62e-1612">委托封装到委托对象中的方法的引用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1612">Delegates encapsulate a reference to a method inside a delegate object.</span></span> <span data-ttu-id="3d62e-1613">委托对象然后传递到调用所引用的方法的代码，并且要调用的方法可以在编译时未知。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1613">The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time.</span></span> <span data-ttu-id="3d62e-1614">与 C 或 c + + 中的函数指针，委托是面向对象的、 类型安全和更安全。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1614">Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.</span></span>  
  
 <span data-ttu-id="3d62e-1615">如果控件的句柄尚不存在，此方法搜索控件的父链，直到它找到的控件或窗体具有一个窗口句柄。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1615">If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.</span></span> <span data-ttu-id="3d62e-1616">如果找不到任何合适的句柄，此方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1616">If no appropriate handle can be found, this method throws an exception.</span></span> <span data-ttu-id="3d62e-1617">在调用期间引发的异常将传播回调用方。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1617">Exceptions that are raised during the call will be propagated back to the caller.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1618">除了<xref:System.Windows.Forms.Control.InvokeRequired%2A>属性，在控件上都是线程安全的四种方法： <xref:System.Windows.Forms.Control.Invoke%2A>， <xref:System.Windows.Forms.Control.BeginInvoke%2A>， <xref:System.Windows.Forms.Control.EndInvoke%2A>，和<xref:System.Windows.Forms.Control.CreateGraphics%2A>如果已创建控件的句柄。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1618">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="3d62e-1619">调用<xref:System.Windows.Forms.Control.CreateGraphics%2A>后台线程上创建控件的句柄之前可能会导致非法的跨线程调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1619">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="3d62e-1620">对于所有其他方法调用，您应使用 invoke 方法之一来封送对控件的线程的调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1620">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span>  
  
 <span data-ttu-id="3d62e-1621">委托可以是实例<xref:System.EventHandler>，在这种情况下发件人参数将包含此控件和事件参数将包含<xref:System.EventArgs.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1621">The delegate can be an instance of <xref:System.EventHandler>, in which case the sender parameter will contain this control, and the event parameter will contain <xref:System.EventArgs.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3d62e-1622">委托还可以是实例<xref:System.Windows.Forms.MethodInvoker>，或任何其他 void 参数列表的委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1622">The delegate can also be an instance of <xref:System.Windows.Forms.MethodInvoker>, or any other delegate that takes a void parameter list.</span></span> <span data-ttu-id="3d62e-1623">调用<xref:System.EventHandler>或<xref:System.Windows.Forms.MethodInvoker>委托会比其他类型的委托调用更快。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1623">A call to an <xref:System.EventHandler> or <xref:System.Windows.Forms.MethodInvoker> delegate will be faster than a call to another type of delegate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1624">如果应处理该消息的线程不再处于活动状态，可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1624">An exception might be thrown if the thread that should process the message is no longer active.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1625">下面的代码示例显示了包含一个委托的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1625">The following code example shows controls that contain a delegate.</span></span> <span data-ttu-id="3d62e-1626">委托封装的方法将项添加到列表框中，并拥有的窗体中，使用指定的参数的基础句柄的线程上执行此方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1626">The delegate encapsulates a method that adds items to the list box, and this method is executed on the thread that owns the underlying handle of the form, using the specified arguments.</span></span> <span data-ttu-id="3d62e-1627">当用户单击按钮，`Invoke`运行该委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1627">When the user clicks on the button, `Invoke` runs the delegate.</span></span>  
  
 [!code-cpp[Control_Invoke1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_Invoke1/CPP/control_invoke1.cpp#1)]
 [!code-csharp[Control_Invoke1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_Invoke1/CS/control_invoke1.cs#1)]
 [!code-vb[Control_Invoke1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_Invoke1/VB/control_invoke1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MethodInvoker" />
        <altmember cref="P:System.Windows.Forms.Control.InvokeRequired" />
      </Docs>
    </Member>
    <Member MemberName="InvokeGotFocus">
      <MemberSignature Language="C#" Value="protected void InvokeGotFocus (System.Windows.Forms.Control toInvoke, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeGotFocus(class System.Windows.Forms.Control toInvoke, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeGotFocus (toInvoke As Control, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeGotFocus(System::Windows::Forms::Control ^ toInvoke, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.InvokeGotFocus : System.Windows.Forms.Control * EventArgs -&gt; unit" Usage="control.InvokeGotFocus (toInvoke, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toInvoke" Type="System.Windows.Forms.Control" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="toInvoke">
          <span data-ttu-id="3d62e-1628">要将事件分配到的 <see cref="T:System.Windows.Forms.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1628">The <see cref="T:System.Windows.Forms.Control" /> to assign the event to.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="3d62e-1629">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1629">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1630">为指定的控件引发 <see cref="E:System.Windows.Forms.Control.GotFocus" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1630">Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event for the specified control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.Control.GotFocus" />
        <altmember cref="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InvokeLostFocus">
      <MemberSignature Language="C#" Value="protected void InvokeLostFocus (System.Windows.Forms.Control toInvoke, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeLostFocus(class System.Windows.Forms.Control toInvoke, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeLostFocus (toInvoke As Control, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeLostFocus(System::Windows::Forms::Control ^ toInvoke, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.InvokeLostFocus : System.Windows.Forms.Control * EventArgs -&gt; unit" Usage="control.InvokeLostFocus (toInvoke, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toInvoke" Type="System.Windows.Forms.Control" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="toInvoke">
          <span data-ttu-id="3d62e-1631">要将事件分配到的 <see cref="T:System.Windows.Forms.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1631">The <see cref="T:System.Windows.Forms.Control" /> to assign the event to.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="3d62e-1632">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1632">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1633">为指定的控件引发 <see cref="E:System.Windows.Forms.Control.LostFocus" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1633">Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event for the specified control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.Control.LostFocus" />
        <altmember cref="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InvokeOnClick">
      <MemberSignature Language="C#" Value="protected void InvokeOnClick (System.Windows.Forms.Control toInvoke, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeOnClick(class System.Windows.Forms.Control toInvoke, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeOnClick (toInvoke As Control, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeOnClick(System::Windows::Forms::Control ^ toInvoke, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.InvokeOnClick : System.Windows.Forms.Control * EventArgs -&gt; unit" Usage="control.InvokeOnClick (toInvoke, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toInvoke" Type="System.Windows.Forms.Control" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="toInvoke">
          <span data-ttu-id="3d62e-1634">要为之分配 <see cref="T:System.Windows.Forms.Control" /> 事件的 <see cref="E:System.Windows.Forms.Control.Click" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1634">The <see cref="T:System.Windows.Forms.Control" /> to assign the <see cref="E:System.Windows.Forms.Control.Click" /> event to.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="3d62e-1635">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1635">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1636">为指定的控件引发 <see cref="E:System.Windows.Forms.Control.Click" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1636">Raises the <see cref="E:System.Windows.Forms.Control.Click" /> event for the specified control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokePaint">
      <MemberSignature Language="C#" Value="protected void InvokePaint (System.Windows.Forms.Control c, System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokePaint(class System.Windows.Forms.Control c, class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokePaint (c As Control, e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokePaint(System::Windows::Forms::Control ^ c, System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.InvokePaint : System.Windows.Forms.Control * System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.InvokePaint (c, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Windows.Forms.Control" />
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="3d62e-1637">要为之分配 <see cref="T:System.Windows.Forms.Control" /> 事件的 <see cref="E:System.Windows.Forms.Control.Paint" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1637">The <see cref="T:System.Windows.Forms.Control" /> to assign the <see cref="E:System.Windows.Forms.Control.Paint" /> event to.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="3d62e-1638">包含事件数据的 <see cref="T:System.Windows.Forms.PaintEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1638">An <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1639">为指定的控件引发 <see cref="E:System.Windows.Forms.Control.Paint" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1639">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event for the specified control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.Paint" />
      </Docs>
    </Member>
    <Member MemberName="InvokePaintBackground">
      <MemberSignature Language="C#" Value="protected void InvokePaintBackground (System.Windows.Forms.Control c, System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokePaintBackground(class System.Windows.Forms.Control c, class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokePaintBackground (c As Control, e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokePaintBackground(System::Windows::Forms::Control ^ c, System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.InvokePaintBackground : System.Windows.Forms.Control * System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.InvokePaintBackground (c, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Windows.Forms.Control" />
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="3d62e-1640">要为之分配 <see cref="T:System.Windows.Forms.Control" /> 事件的 <see cref="E:System.Windows.Forms.Control.Paint" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1640">The <see cref="T:System.Windows.Forms.Control" /> to assign the <see cref="E:System.Windows.Forms.Control.Paint" /> event to.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="3d62e-1641">包含事件数据的 <see cref="T:System.Windows.Forms.PaintEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1641">An <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1642">为指定的控件引发 <see langword="PaintBackground" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1642">Raises the <see langword="PaintBackground" /> event for the specified control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InvokeRequired">
      <MemberSignature Language="C#" Value="public bool InvokeRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeRequired" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.InvokeRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InvokeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvokeRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InvokeRequired : bool" Usage="System.Windows.Forms.Control.InvokeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1643">获取一个值，该值指示调用方在对控件进行方法调用时是否必须调用 Invoke 方法，因为调用方位于创建控件所在的线程以外的线程中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1643">Gets a value indicating whether the caller must call an invoke method when making method calls to the control because the caller is on a different thread than the one the control was created on.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1644">如果控件的 <see langword="true" /> 是在与调用线程不同的线程上创建的（说明您必须通过 Invoke 方法对控件进行调用），则为 <see cref="P:System.Windows.Forms.Control.Handle" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1644">
              <see langword="true" /> if the control's <see cref="P:System.Windows.Forms.Control.Handle" /> was created on a different thread than the calling thread (indicating that you must make calls to the control through an invoke method); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1645">在 Windows 窗体控件绑定到特定线程并不是线程安全。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1645">Controls in Windows Forms are bound to a specific thread and are not thread safe.</span></span> <span data-ttu-id="3d62e-1646">因此，如果你正在从另一个线程调用控件的方法，您必须使用其中一个控件的调用封送到正确的线程调用的方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1646">Therefore, if you are calling a control's method from a different thread, you must use one of the control's invoke methods to marshal the call to the proper thread.</span></span> <span data-ttu-id="3d62e-1647">此属性可以用于确定是否必须调用 invoke 方法，如果您不知道在哪个线程拥有一个控件可能很有用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1647">This property can be used to determine if you must call an invoke method, which can be useful if you do not know what thread owns a control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1648">除了<xref:System.Windows.Forms.Control.InvokeRequired%2A>属性，在控件上都是线程安全地调用的四种方法： <xref:System.Windows.Forms.Control.Invoke%2A>，<xref:System.Windows.Forms.Control.BeginInvoke%2A>，<xref:System.Windows.Forms.Control.EndInvoke%2A>和<xref:System.Windows.Forms.Control.CreateGraphics%2A>如果已创建控件的句柄。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1648">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe to call: <xref:System.Windows.Forms.Control.Invoke%2A>,<xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A> and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="3d62e-1649">调用<xref:System.Windows.Forms.Control.CreateGraphics%2A>后台线程上创建控件的句柄之前可能会导致非法的跨线程调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1649">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="3d62e-1650">对于所有其他方法调用，应使用其中一种从另一个线程调用时调用的方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1650">For all other method calls, you should use one of these invoke methods when calling from a different thread.</span></span>  
  
 <span data-ttu-id="3d62e-1651">如果控件的句柄尚不存在，<xref:System.Windows.Forms.Control.InvokeRequired%2A>搜索控件的父沿着链向上，直到它找到的控件或窗体具有一个窗口句柄。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1651">If the control's handle does not yet exist, <xref:System.Windows.Forms.Control.InvokeRequired%2A> searches up the control's parent chain until it finds a control or form that does have a window handle.</span></span> <span data-ttu-id="3d62e-1652">如果找不到任何合适的句柄，<xref:System.Windows.Forms.Control.InvokeRequired%2A>方法将返回`false`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1652">If no appropriate handle can be found, the <xref:System.Windows.Forms.Control.InvokeRequired%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="3d62e-1653">这意味着<xref:System.Windows.Forms.Control.InvokeRequired%2A>可以返回`false`如果<xref:System.Windows.Forms.Control.Invoke%2A>不是必需的 （调用发生在同一线程上），或如果在不同线程上创建该控件，但尚未创建控件的句柄。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1653">This means that <xref:System.Windows.Forms.Control.InvokeRequired%2A> can return `false` if <xref:System.Windows.Forms.Control.Invoke%2A> is not required (the call occurs on the same thread), or if the control was created on a different thread but the control's handle has not yet been created.</span></span>  
  
 <span data-ttu-id="3d62e-1654">在控件的句柄尚未创建的情况下，不应只需调用属性、 方法或事件在控件上。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1654">In the case where the control's handle has not yet been created, you should not simply call properties, methods, or events on the control.</span></span> <span data-ttu-id="3d62e-1655">这可能会导致在隔离没有消息泵线程上的控件并使应用程序不稳定的后台线程上创建控件的句柄。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1655">This might cause the control's handle to be created on the background thread, isolating the control on a thread without a message pump and making the application unstable.</span></span>  
  
 <span data-ttu-id="3d62e-1656">你可以抵御这种情况下通过还检查的值<xref:System.Windows.Forms.Control.IsHandleCreated%2A>时<xref:System.Windows.Forms.Control.InvokeRequired%2A>返回`false`后台线程上。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1656">You can protect against this case by also checking the value of <xref:System.Windows.Forms.Control.IsHandleCreated%2A> when <xref:System.Windows.Forms.Control.InvokeRequired%2A> returns `false` on a background thread.</span></span> <span data-ttu-id="3d62e-1657">如果尚未创建控件句柄，必须等待，直到已创建，然后再调<xref:System.Windows.Forms.Control.Invoke%2A>或<xref:System.Windows.Forms.Control.BeginInvoke%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1657">If the control handle has not yet been created, you must wait until it has been created before calling <xref:System.Windows.Forms.Control.Invoke%2A> or <xref:System.Windows.Forms.Control.BeginInvoke%2A>.</span></span> <span data-ttu-id="3d62e-1658">通常情况下，会发生此情况仅在应用程序的主窗体的构造函数中创建后台线程 (如`Application.Run(new MainForm())`，然后显示窗体或`Application.Run`已调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1658">Typically, this happens only if a background thread is created in the constructor of the primary form for the application (as in `Application.Run(new MainForm())`, before the form has been shown or `Application.Run` has been called.</span></span>  
  
 <span data-ttu-id="3d62e-1659">一种解决方案是等待，直到启动后台线程之前已创建窗体的句柄。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1659">One solution is to wait until the form's handle has been created before starting the background thread.</span></span> <span data-ttu-id="3d62e-1660">可以通过调用强制创建句柄<xref:System.Windows.Forms.Control.Handle%2A>属性，或者等待<xref:System.Windows.Forms.Form.Load>事件启动后台进程。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1660">Either force handle creation by calling the <xref:System.Windows.Forms.Control.Handle%2A> property, or wait until the <xref:System.Windows.Forms.Form.Load> event to start the background process.</span></span>  
  
 <span data-ttu-id="3d62e-1661">更好的解决方案是使用`SynchronizationContext`返回的<xref:System.Threading.SynchronizationContext>而不是用于跨线程封送处理的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1661">An even better solution is to use the `SynchronizationContext` returned by <xref:System.Threading.SynchronizationContext> rather than a control for cross-thread marshaling.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1662">如果应处理该消息的线程不再处于活动状态，可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1662">An exception might be thrown if the thread that should process the message is no longer active.</span></span>  
  
 <span data-ttu-id="3d62e-1663">有关多线程 Windows 窗体控件的详细信息，请参阅[如何： 使用后台线程搜索文件](~/docs/framework/winforms/controls/how-to-use-a-background-thread-to-search-for-files.md)并[如何： 对 Windows 窗体控件进行线程安全调用](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1663">For more information about multithreaded Windows Forms controls, see [How to: Use a Background Thread to Search for Files](~/docs/framework/winforms/controls/how-to-use-a-background-thread-to-search-for-files.md) and [How to: Make Thread-Safe Calls to Windows Forms Controls](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
        <altmember cref="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="IsAccessible">
      <MemberSignature Language="C#" Value="public bool IsAccessible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAccessible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.IsAccessible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAccessible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAccessible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsAccessible : bool with get, set" Usage="System.Windows.Forms.Control.IsAccessible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1664">获取或设置一个值，该值指示控件对辅助功能应用程序是否可见。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1664">Gets or sets a value indicating whether the control is visible to accessibility applications.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1665">如果控件对辅助功能应用程序可见，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1665">
              <see langword="true" /> if the control is visible to accessibility applications; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Windows.Forms.Control.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1666">获取一个值，该值指示控件是否已经被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1666">Gets a value indicating whether the control has been disposed of.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1667">如果控件已经被释放，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1667">
              <see langword="true" /> if the control has been disposed of; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1668">当此属性返回`true`，控件被释放，不能再作为有效的 Windows 控件被引用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1668">When this property returns `true`, the control is disposed of and can no longer be referenced as a valid Windows control.</span></span> <span data-ttu-id="3d62e-1669">即使控件的实例已释放，它仍将保留在内存中直到从通过垃圾回收的内存中删除。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1669">Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection.</span></span> <span data-ttu-id="3d62e-1670">当释放一个控件时，不能调用其<xref:System.Windows.Forms.Control.RecreateHandle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1670">When a control is disposed, you cannot call its <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Dispose(System.Boolean)" />
        <altmember cref="T:System.GC" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
      </Docs>
    </Member>
    <Member MemberName="IsHandleCreated">
      <MemberSignature Language="C#" Value="public bool IsHandleCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHandleCreated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.IsHandleCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHandleCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHandleCreated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHandleCreated : bool" Usage="System.Windows.Forms.Control.IsHandleCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1671">获取一个值，该值指示控件是否有与它关联的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1671">Gets a value indicating whether the control has a handle associated with it.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1672">如果已经为控件分配了句柄，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1672">
              <see langword="true" /> if a handle has been assigned to the control; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1673">使用<xref:System.Windows.Forms.Control.IsHandleCreated%2A>属性来确定是否<xref:System.Windows.Forms.Control.CreateHandle%2A>已调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1673">Use the <xref:System.Windows.Forms.Control.IsHandleCreated%2A> property to determine whether <xref:System.Windows.Forms.Control.CreateHandle%2A> has been called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="IsInputChar">
      <MemberSignature Language="C#" Value="protected virtual bool IsInputChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsInputChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsInputChar (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsInputChar(char charCode);" />
      <MemberSignature Language="F#" Value="abstract member IsInputChar : char -&gt; bool&#xA;override this.IsInputChar : char -&gt; bool" Usage="control.IsInputChar charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">
          <span data-ttu-id="3d62e-1674">要测试的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1674">The character to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1675">确定一个字符是否是控件可识别的输入字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1675">Determines if a character is an input character that the control recognizes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-1676">如果字符应直接发送到控件且不必经过预处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1676">
              <see langword="true" /> if the character should be sent directly to the control and not preprocessed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1677">调用<xref:System.Windows.Forms.Control.IsInputChar%2A>方法，以确定指定的字符`charCode`参数是控件需要的输入的字符。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1677">Call the <xref:System.Windows.Forms.Control.IsInputChar%2A> method to determine whether the character specified by the `charCode` parameter is an input character that the control wants.</span></span> <span data-ttu-id="3d62e-1678">在窗口消息预处理，以确定是否应经过预处理，或直接向控件发送指定的输入的字符期间调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1678">This method is called during window message preprocessing to determine whether the specified input character should be preprocessed or sent directly to the control.</span></span> <span data-ttu-id="3d62e-1679">如果<xref:System.Windows.Forms.Control.IsInputChar%2A>返回`true`，直接向控件发送指定的字符。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1679">If <xref:System.Windows.Forms.Control.IsInputChar%2A> returns `true`, the specified character is sent directly to the control.</span></span> <span data-ttu-id="3d62e-1680">如果<xref:System.Windows.Forms.Control.IsInputChar%2A>返回`false`，预处理过的和仅发送到控件，如果不使用时的预处理阶段指定的字符。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1680">If <xref:System.Windows.Forms.Control.IsInputChar%2A> returns `false`, the specified character is preprocessed and only sent to the control if it is not consumed by the preprocessing phase.</span></span> <span data-ttu-id="3d62e-1681">字符的预处理包括检查的字符是否另一个控件的助记键。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1681">The preprocessing of a character includes checking whether the character is a mnemonic of another control.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-1682">有关继承的类来调用此方法的所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1682">for all windows for inheriting classes to call this method.</span>
          </span>
          <span data-ttu-id="3d62e-1683">关联枚举：<see langword="AllWindows" />的值<see cref="T:System.Security.Permissions.UIPermissionWindow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1683">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected virtual bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="abstract member IsInputKey : System.Windows.Forms.Keys -&gt; bool&#xA;override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="control.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="3d62e-1684">
            <see cref="T:System.Windows.Forms.Keys" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1684">One of the <see cref="T:System.Windows.Forms.Keys" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1685">确定指定的键是常规输入键还是需要预处理的特殊键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1685">Determines whether the specified key is a regular input key or a special key that requires preprocessing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-1686">如果指定的键是常规输入键，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1686">
              <see langword="true" /> if the specified key is a regular input key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1687">调用<xref:System.Windows.Forms.Control.IsInputKey%2A>方法，以确定指定的键是否`keyData`参数是控件需要一个输入的密钥。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1687">Call the <xref:System.Windows.Forms.Control.IsInputKey%2A> method to determine whether the key specified by the `keyData` parameter is an input key that the control wants.</span></span> <span data-ttu-id="3d62e-1688">在窗口消息预处理，以确定是否应经过预处理，或直接向控件发送指定的输入的键期间调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1688">This method is called during window message preprocessing to determine whether the specified input key should be preprocessed or sent directly to the control.</span></span> <span data-ttu-id="3d62e-1689">如果<xref:System.Windows.Forms.Control.IsInputKey%2A>返回`true`，直接向控件发送指定的键。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1689">If <xref:System.Windows.Forms.Control.IsInputKey%2A> returns `true`, the specified key is sent directly to the control.</span></span> <span data-ttu-id="3d62e-1690">如果<xref:System.Windows.Forms.Control.IsInputKey%2A>返回`false`，指定的键是预处理过的如果不使用时的预处理阶段仅向控件发送。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1690">If <xref:System.Windows.Forms.Control.IsInputKey%2A> returns `false`, the specified key is preprocessed and only sent to the control if it is not consumed by the preprocessing phase.</span></span> <span data-ttu-id="3d62e-1691">将预处理过的键包括选项卡、 返回、 ESC，和向上键、 向下箭头、 向左键和向右箭头键。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1691">Keys that are preprocessed include the TAB, RETURN, ESC, and the UP ARROW, DOWN ARROW, LEFT ARROW, and RIGHT ARROW keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1692">下面的代码示例演示如何重写<xref:System.Windows.Forms.Control.IsInputKey%2A>方法<xref:System.Windows.Forms.TextBox>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1692">The following code example shows you how to override the <xref:System.Windows.Forms.Control.IsInputKey%2A> method for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="3d62e-1693">在此示例中，`TabTextBox`类处理 TAB 键。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1693">In this example, the `TabTextBox` class handles the TAB key.</span></span> <span data-ttu-id="3d62e-1694">当`TabTextBox`具有焦点并且用户按 TAB 键在文本插入点，添加四个空格替换为所选的任何文本。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1694">When the `TabTextBox` has the focus and the user presses the TAB key four spaces are added at the text insertion point, replacing any selected text.</span></span> <span data-ttu-id="3d62e-1695">默认情况下，<xref:System.Windows.Forms.TextBox>控件通过将输入的焦点移动到下一个控件来处理 TAB 键。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1695">By default, the <xref:System.Windows.Forms.TextBox> control handles the TAB key by moving the input focus to the next control.</span></span> <span data-ttu-id="3d62e-1696">在这种情况下，keypress 永远不会达到<xref:System.Windows.Forms.Control.OnKeyDown%2A>方法重写。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1696">In this case, the keypress never reaches the <xref:System.Windows.Forms.Control.OnKeyDown%2A> method override.</span></span> <span data-ttu-id="3d62e-1697">若要防止此默认行为，<xref:System.Windows.Forms.Control.IsInputKey%2A>方法重写返回`true`当用户按 TAB 键。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1697">To prevent this default behavior, the <xref:System.Windows.Forms.Control.IsInputKey%2A> method override returns `true` when the user presses the TAB key.</span></span> <span data-ttu-id="3d62e-1698">对于所有其他按键，<xref:System.Windows.Forms.Control.IsInputKey%2A>方法重写将返回调用基类版本的方法的结果。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1698">For all other keypresses, the <xref:System.Windows.Forms.Control.IsInputKey%2A> method override returns the result of calling the base-class version of the method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.IsInputKey#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.IsInputKey/cs/form1.cs#0)]
 [!code-vb[System.Windows.Forms.Control.IsInputKey#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.IsInputKey/vb/form1.vb#0)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-1699">有关继承的类来调用此方法的所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1699">for all windows for inheriting classes to call this method.</span>
          </span>
          <span data-ttu-id="3d62e-1700">关联枚举：<see langword="AllWindows" />的值<see cref="T:System.Security.Permissions.UIPermissionWindow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1700">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Forms.Keys" />
        <altmember cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
        <altmember cref="P:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyLocked">
      <MemberSignature Language="C#" Value="public static bool IsKeyLocked (System.Windows.Forms.Keys keyVal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyLocked(valuetype System.Windows.Forms.Keys keyVal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsKeyLocked (keyVal As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyLocked(System::Windows::Forms::Keys keyVal);" />
      <MemberSignature Language="F#" Value="static member IsKeyLocked : System.Windows.Forms.Keys -&gt; bool" Usage="System.Windows.Forms.Control.IsKeyLocked keyVal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyVal" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyVal">
          <span data-ttu-id="3d62e-1701">
            <see cref="T:System.Windows.Forms.Keys" /> 枚举的 Caps Lock、Num Lock 或 Scroll Lock 成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1701">The CAPS LOCK, NUM LOCK, or SCROLL LOCK member of the <see cref="T:System.Windows.Forms.Keys" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1702">确定 Caps Lock、Num Lock 或 Scroll Lock 键是否有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1702">Determines whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK key is in effect.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-1703">如果指定的一个或多个键有效，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1703">
              <see langword="true" /> if the specified key or keys are in effect; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1704">使用<xref:System.Windows.Forms.Control.IsKeyLocked%2A>属性来确定 CAPS LOCK、 NUM LOCK 或 SCROLL LOCK 键是否，是否单独或组合。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1704">Use the <xref:System.Windows.Forms.Control.IsKeyLocked%2A> property to determine whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK keys are on, whether individually or in combination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1705">下面的代码示例显示一个消息框，该值指示指定的键 （在本例中为 Caps Lock 键） 是否有效。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1705">The following code example displays a message box indicating whether the specified key (the Caps Lock key in this case) is in effect.</span></span>  
  
 [!code-cpp[ControlIsKeyLocked#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlIsKeyLocked/CPP/controliskeylocked.cpp#1)]
 [!code-csharp[ControlIsKeyLocked#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlIsKeyLocked/CS/controliskeylocked.cs#1)]
 [!code-vb[ControlIsKeyLocked#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlIsKeyLocked/VB/controliskeylocked.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3d62e-1706">
            <paramref name="keyVal" /> 参数指一个键，而不是 CAPS LOCK、NUM LOCK 或 SCROLL LOCK。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1706">The <paramref name="keyVal" /> parameter refers to a key other than the CAPS LOCK, NUM LOCK, or SCROLL LOCK key.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsMirrored">
      <MemberSignature Language="C#" Value="public bool IsMirrored { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMirrored" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.IsMirrored" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMirrored As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMirrored { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMirrored : bool" Usage="System.Windows.Forms.Control.IsMirrored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1707">获取一个值，该值指示此控件是否为镜像控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1707">Gets a value indicating whether the control is mirrored.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1708">如果该控件是镜像控件，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1708">
              <see langword="true" /> if the control is mirrored; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1709">镜像的控件显示布局和从右到左的文本。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1709">A mirrored control displays both layout and text from right to left.</span></span> <span data-ttu-id="3d62e-1710">有关详细信息，请参阅[如何： 创建镜像 Windows 窗体和控件](http://msdn.microsoft.com/library/7c5c4ecc-9bfb-4508-8383-753e306719b1)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1710">For more information, see [How to: Create Mirrored Windows Forms and Controls](http://msdn.microsoft.com/library/7c5c4ecc-9bfb-4508-8383-753e306719b1).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMnemonic">
      <MemberSignature Language="C#" Value="public static bool IsMnemonic (char charCode, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMnemonic(char charCode, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMnemonic (charCode As Char, text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMnemonic(char charCode, System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member IsMnemonic : char * string -&gt; bool" Usage="System.Windows.Forms.Control.IsMnemonic (charCode, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="charCode">
          <span data-ttu-id="3d62e-1711">要测试的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1711">The character to test.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="3d62e-1712">要搜索的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1712">The string to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1713">搜索指定的字符串，以确定指定字符是否是分配给此控件的助记键字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1713">Determines if the specified character is the mnemonic character assigned to the control in the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-1714">如果 <paramref name="charCode" /> 字符是分配给控件的助记键字符，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1714">
              <see langword="true" /> if the <paramref name="charCode" /> character is the mnemonic character assigned to the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1715">助记键字符是紧跟第一个实例中的"&"字符<xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1715">The mnemonic character is the character immediately following the first instance of "&" in a <xref:System.String>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1716">下面的代码示例演示如何重写 button 类的扩展<xref:System.Windows.Forms.Control.ProcessMnemonic%2A>方法以显示自定义行为。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1716">The following code example demonstrates an extension of the button class that overrides the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method to exhibit custom behavior.</span></span> <span data-ttu-id="3d62e-1717">该示例还演示如何使用<xref:System.Windows.Forms.Control.CanSelect%2A>和<xref:System.Windows.Forms.Control.IsMnemonic%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1717">The example also demonstrates the use of the <xref:System.Windows.Forms.Control.CanSelect%2A> and <xref:System.Windows.Forms.Control.IsMnemonic%2A> properties.</span></span> <span data-ttu-id="3d62e-1718">若要运行此示例中的窗体类，同一文件中后面粘贴以下代码。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1718">To run this example paste the following code after a form class, in the same file.</span></span> <span data-ttu-id="3d62e-1719">添加的按钮类型的`MnemonicButton`到窗体。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1719">Add a button of type `MnemonicButton` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-1720">有关继承的类来调用此方法的所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1720">for all windows for inheriting classes to call this method.</span>
          </span>
          <span data-ttu-id="3d62e-1721">关联枚举：<see langword="AllWindows" />的值<see cref="T:System.Security.Permissions.UIPermissionWindow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1721">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Forms.KeyEventHandler " Usage="member this.KeyDown : System.Windows.Forms.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1722">在控件有焦点的情况下按下键时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1722">Occurs when a key is pressed while the control has focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1723">按以下顺序发生键事件：</span><span class="sxs-lookup"><span data-stu-id="3d62e-1723">Key events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.KeyDown>  
  
2.  <xref:System.Windows.Forms.Control.KeyPress>  
  
3.  <xref:System.Windows.Forms.Control.KeyUp>  
  
 <span data-ttu-id="3d62e-1724">若要仅在窗体级别处理键盘事件，而不允许其他控件可以接收键盘事件，将设置<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType>在窗体中的属性<xref:System.Windows.Forms.Control.KeyPress>事件处理方法`true`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1724">To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`.</span></span> <span data-ttu-id="3d62e-1725">自动由控件处理某些项，例如选项卡、 返回、 ESC、 和箭头键。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1725">Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically.</span></span> <span data-ttu-id="3d62e-1726">若要使这些键引发<xref:System.Windows.Forms.Control.KeyDown>事件，必须重写<xref:System.Windows.Forms.Control.IsInputKey%2A>窗体上的每个控件中的方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1726">To have these keys raise the <xref:System.Windows.Forms.Control.KeyDown> event, you must override the <xref:System.Windows.Forms.Control.IsInputKey%2A> method in each control on your form.</span></span> <span data-ttu-id="3d62e-1727">重写的代码<xref:System.Windows.Forms.Control.IsInputKey%2A>需要确定按下了某个特殊键，并返回值为`true`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1727">The code for the override of the <xref:System.Windows.Forms.Control.IsInputKey%2A> would need to determine if one of the special keys is pressed and return a value of `true`.</span></span> <span data-ttu-id="3d62e-1728">而不是替代<xref:System.Windows.Forms.Control.IsInputKey%2A>方法，可以处理<xref:System.Windows.Forms.Control.PreviewKeyDown>事件并设置<xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1728">Instead of overriding the <xref:System.Windows.Forms.Control.IsInputKey%2A> method, you can handle the <xref:System.Windows.Forms.Control.PreviewKeyDown> event and set the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property to `true`.</span></span> <span data-ttu-id="3d62e-1729">有关代码示例，请参阅<xref:System.Windows.Forms.Control.PreviewKeyDown>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1729">For a code example, see the <xref:System.Windows.Forms.Control.PreviewKeyDown> event.</span></span>  
  
 <span data-ttu-id="3d62e-1730">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1730">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1731">下面的代码示例使用<xref:System.Windows.Forms.Control.KeyDown>事件来确定的字符输入到控件的类型。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1731">The following code example uses the <xref:System.Windows.Forms.Control.KeyDown> event to determine the type of character entered into the control.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
        <altmember cref="T:System.Windows.Forms.KeyEventHandler" />
        <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="E:System.Windows.Forms.Control.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyPress">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyPressEventHandler KeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyPressEventHandler KeyPress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.KeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyPress As KeyPressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyPressEventHandler ^ KeyPress;" />
      <MemberSignature Language="F#" Value="member this.KeyPress : System.Windows.Forms.KeyPressEventHandler " Usage="member this.KeyPress : System.Windows.Forms.KeyPressEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyPressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1732">在控件有焦点的情况下</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1732">Occurs when a character.</span>
          </span>
          <span data-ttu-id="3d62e-1733">字符、空格或退格键时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1733">space or backspace key is pressed while the control has focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1734">按以下顺序发生键事件：</span><span class="sxs-lookup"><span data-stu-id="3d62e-1734">Key events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.KeyDown>  
  
2.  <xref:System.Windows.Forms.Control.KeyPress>  
  
3.  <xref:System.Windows.Forms.Control.KeyUp>  
  
 <span data-ttu-id="3d62e-1735"><xref:System.Windows.Forms.Control.KeyPress>以外的空间和退格符的非字符键不会引发事件; 但是，不要引发非字符键<xref:System.Windows.Forms.Control.KeyDown>和<xref:System.Windows.Forms.Control.KeyUp>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1735">The <xref:System.Windows.Forms.Control.KeyPress> event is not raised by non-character keys other than space and backspace; however, the non-character keys do raise the <xref:System.Windows.Forms.Control.KeyDown> and <xref:System.Windows.Forms.Control.KeyUp> events.</span></span>  
  
 <span data-ttu-id="3d62e-1736">使用<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>属性设置为示例的键击在运行时和使用或修改常见击键的子集。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1736">Use the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to sample keystrokes at run time and to consume or modify a subset of common keystrokes.</span></span>  
  
 <span data-ttu-id="3d62e-1737">若要仅在窗体级别处理键盘事件，而不允许其他控件可以接收键盘事件，将设置<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType>在窗体中的属性<xref:System.Windows.Forms.Control.KeyPress>事件处理方法`true`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1737">To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`.</span></span>  
  
 <span data-ttu-id="3d62e-1738">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1738">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1739">下面的代码示例使用<xref:System.Windows.Forms.Control.KeyPress>事件，以防止字符从输入控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1739">The following code example uses the <xref:System.Windows.Forms.Control.KeyPress> event to prevent characters from entering the control.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyPressEventArgs.KeyChar" />
        <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Forms.KeyEventHandler " Usage="member this.KeyUp : System.Windows.Forms.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1740">在控件有焦点的情况下释放键时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1740">Occurs when a key is released while the control has focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1741">按以下顺序发生键事件：</span><span class="sxs-lookup"><span data-stu-id="3d62e-1741">Key events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.KeyDown>  
  
2.  <xref:System.Windows.Forms.Control.KeyPress>  
  
3.  <xref:System.Windows.Forms.Control.KeyUp>  
  
 <span data-ttu-id="3d62e-1742">若要仅在窗体级别处理键盘事件，而不允许其他控件可以接收键盘事件，将设置<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType>在窗体中的属性<xref:System.Windows.Forms.Control.KeyPress>事件处理方法`true`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1742">To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`.</span></span> <span data-ttu-id="3d62e-1743">自动由控件处理某些项，例如选项卡、 返回、 ESC、 和箭头键。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1743">Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically.</span></span> <span data-ttu-id="3d62e-1744">若要使这些键引发<xref:System.Windows.Forms.Control.KeyUp>事件，必须重写<xref:System.Windows.Forms.Control.IsInputKey%2A>窗体上的每个控件中的方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1744">To have these keys raise the <xref:System.Windows.Forms.Control.KeyUp> event, you must override the <xref:System.Windows.Forms.Control.IsInputKey%2A> method in each control on your form.</span></span> <span data-ttu-id="3d62e-1745">重写的代码<xref:System.Windows.Forms.Control.IsInputKey%2A>需要确定按下了某个特殊键，并返回值为`true`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1745">The code for the override of <xref:System.Windows.Forms.Control.IsInputKey%2A> would need to determine if one of the special keys is pressed and return a value of `true`.</span></span>  
  
 <span data-ttu-id="3d62e-1746">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1746">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1747">下面的代码示例使用<xref:System.Windows.Forms.Control.KeyUp>具有事件<xref:System.Windows.Forms.Help>类，以显示给用户的弹出样式帮助。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1747">The following code example uses the <xref:System.Windows.Forms.Control.KeyUp> event with the <xref:System.Windows.Forms.Help> class to display pop-up style help to the user.</span></span>  
  
 [!code-cpp[Control.KeyUp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyUp/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyUp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyUp/CS/form1.cs#1)]
 [!code-vb[Control.KeyUp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyUp/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LayoutEventHandler Layout;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LayoutEventHandler Layout" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Layout" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Layout As LayoutEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LayoutEventHandler ^ Layout;" />
      <MemberSignature Language="F#" Value="member this.Layout : System.Windows.Forms.LayoutEventHandler " Usage="member this.Layout : System.Windows.Forms.LayoutEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LayoutEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1748">在控件应重新定位其子控件时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1748">Occurs when a control should reposition its child controls.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1749"><xref:System.Windows.Forms.Control.Layout>事件发生时添加或删除，在指定边界内的控件更改和其他更改发生时可能会影响控件的布局时子控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1749">The <xref:System.Windows.Forms.Control.Layout> event occurs when child controls are added or removed, when the bounds of the control changes, and when other changes occur that can affect the layout of the control.</span></span> <span data-ttu-id="3d62e-1750">布局事件可以使用抑制<xref:System.Windows.Forms.Control.SuspendLayout%2A>和<xref:System.Windows.Forms.Control.ResumeLayout%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1750">The layout event can be suppressed using the <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods.</span></span> <span data-ttu-id="3d62e-1751">挂起的布局，可在控件上执行多个操作，而无需执行一次布局的每个更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1751">Suspending layout enables you to perform multiple actions on a control without having to perform a layout for each change.</span></span> <span data-ttu-id="3d62e-1752">例如，如果您重设大小，并将一个控件移动，每个操作都会引发<xref:System.Windows.Forms.Control.Layout>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1752">For example, if you resize and move a control, each operation would raise a <xref:System.Windows.Forms.Control.Layout> event.</span></span>  
  
 <span data-ttu-id="3d62e-1753">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1753">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1754">下面的代码示例中心<xref:System.Windows.Forms.Form>在屏幕上<xref:System.Windows.Forms.Control.Layout>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1754">The following code example centers a <xref:System.Windows.Forms.Form> on the screen in the <xref:System.Windows.Forms.Control.Layout> event.</span></span> <span data-ttu-id="3d62e-1755">这将避免表单居中当用户调整其大小时。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1755">This will keep the form centered as the user resizes it.</span></span> <span data-ttu-id="3d62e-1756">此示例要求您已创建<xref:System.Windows.Forms.Form>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1756">This example requires that you have created a <xref:System.Windows.Forms.Form> control.</span></span>  
  
 [!code-cpp[Control.Layout#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Layout/CPP/layout.cpp#1)]
 [!code-csharp[Control.Layout#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Layout/CS/layout.cs#1)]
 [!code-vb[Control.Layout#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Layout/VB/layout.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
      </Docs>
    </Member>
    <Member MemberName="LayoutEngine">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Layout.LayoutEngine LayoutEngine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Layout.LayoutEngine LayoutEngine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.LayoutEngine" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LayoutEngine As LayoutEngine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Layout::LayoutEngine ^ LayoutEngine { System::Windows::Forms::Layout::LayoutEngine ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LayoutEngine : System.Windows.Forms.Layout.LayoutEngine" Usage="System.Windows.Forms.Control.LayoutEngine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Layout.LayoutEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1757">获取控件的布局引擎的缓存实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1757">Gets a cached instance of the control's layout engine.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1758">控件内容的 <see cref="T:System.Windows.Forms.Layout.LayoutEngine" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1758">The <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> for the control's contents.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1759"><xref:System.Windows.Forms.Control.LayoutEngine%2A>属性获取布局引擎，该控件的子级，而不是控件本身。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1759">The <xref:System.Windows.Forms.Control.LayoutEngine%2A> property gets the layout engine for the control's children rather than for the control itself.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Layout.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="public event EventHandler Leave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Leave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Leave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Leave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Leave;" />
      <MemberSignature Language="F#" Value="member this.Leave : EventHandler " Usage="member this.Leave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1760">在输入焦点离开控件时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1760">Occurs when the input focus leaves the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1761">将焦点更改通过使用键盘 （TAB、 SHIFT + TAB，等），通过调用<xref:System.Windows.Forms.Control.Select%2A>或<xref:System.Windows.Forms.Control.SelectNextControl%2A>方法，或通过设置<xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType>到当前窗体的属性，将按以下顺序发生焦点事件：</span><span class="sxs-lookup"><span data-stu-id="3d62e-1761">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="3d62e-1762">当更改焦点，使用鼠标或通过调用<xref:System.Windows.Forms.Control.Focus%2A>方法时，按以下顺序执行的焦点事件：</span><span class="sxs-lookup"><span data-stu-id="3d62e-1762">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="3d62e-1763">如果<xref:System.Windows.Forms.Control.CausesValidation%2A>属性设置为`false`，则<xref:System.Windows.Forms.Control.Validating>和<xref:System.Windows.Forms.Control.Validated>所抑制的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1763">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1764"><xref:System.Windows.Forms.Control.Enter>并<xref:System.Windows.Forms.Control.Leave>事件所抑制的<xref:System.Windows.Forms.Form>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1764">The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are suppressed by the <xref:System.Windows.Forms.Form> class.</span></span> <span data-ttu-id="3d62e-1765">中的等效事件<xref:System.Windows.Forms.Form>类是<xref:System.Windows.Forms.Form.Activated>和<xref:System.Windows.Forms.Form.Deactivate>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1765">The equivalent events in the <xref:System.Windows.Forms.Form> class are the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events.</span></span> <span data-ttu-id="3d62e-1766"><xref:System.Windows.Forms.Control.Enter>和<xref:System.Windows.Forms.Control.Leave>事件层次结构，并将级联向上和向下父链直到达到相应的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1766">The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached.</span></span> <span data-ttu-id="3d62e-1767">例如，假设您有<xref:System.Windows.Forms.Form>具有两个<xref:System.Windows.Forms.GroupBox>控件，并且每个<xref:System.Windows.Forms.GroupBox>控件有一个<xref:System.Windows.Forms.TextBox>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1767">For example, assume you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.GroupBox> controls, and each <xref:System.Windows.Forms.GroupBox> control has one <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="3d62e-1768">当从一个移动插入符号<xref:System.Windows.Forms.TextBox>到其他<xref:System.Windows.Forms.Control.Leave>用于引发事件<xref:System.Windows.Forms.TextBox>和<xref:System.Windows.Forms.GroupBox>，并<xref:System.Windows.Forms.Control.Enter>其他引发事件<xref:System.Windows.Forms.GroupBox>和<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1768">When the caret is moved from one <xref:System.Windows.Forms.TextBox> to the other, the <xref:System.Windows.Forms.Control.Leave> event is raised for the <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.GroupBox>, and the <xref:System.Windows.Forms.Control.Enter> event is raised for the other <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TextBox>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3d62e-1769">不尝试将焦点设置在<xref:System.Windows.Forms.Control.Enter>， <xref:System.Windows.Forms.Control.GotFocus>， <xref:System.Windows.Forms.Control.Leave>， <xref:System.Windows.Forms.Control.LostFocus>， <xref:System.Windows.Forms.Control.Validating>，或<xref:System.Windows.Forms.Control.Validated>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1769">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="3d62e-1770">执行此操作可能会导致你的应用程序或操作系统停止响应。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1770">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="3d62e-1771">有关详细信息，请参阅[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)主题。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1771">For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) topic.</span></span>  
  
 <span data-ttu-id="3d62e-1772">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1772">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1773">下面的代码示例使用<xref:System.Windows.Forms.Control.Leave>事件以将控件重置为以前的状态。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1773">The following code example uses the <xref:System.Windows.Forms.Control.Leave> event to reset a control to its former state.</span></span>  
  
 [!code-cpp[Control.Enter#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Enter/CPP/form1.cpp#1)]
 [!code-csharp[Control.Enter#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Enter/CS/form1.cs#1)]
 [!code-vb[Control.Enter#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Enter/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.Enter" />
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public int Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Left" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Left { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Left : int with get, set" Usage="System.Windows.Forms.Control.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1774">获取或设置控件左边缘与其容器的工作区左边缘之间的距离（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1774">Gets or sets the distance, in pixels, between the left edge of the control and the left edge of its container's client area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1775">
            <see cref="T:System.Int32" /> 表示控件左边缘与其容器的工作区左边缘之间的距离（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1775">An <see cref="T:System.Int32" /> representing the distance, in pixels, between the left edge of the control and the left edge of its container's client area.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1776"><xref:System.Windows.Forms.Control.Left%2A>属性值等于<xref:System.Drawing.Point.X%2A?displayProperty=nameWithType>属性的<xref:System.Windows.Forms.Control.Location%2A>控件的属性值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1776">The <xref:System.Windows.Forms.Control.Left%2A> property value is equivalent to the <xref:System.Drawing.Point.X%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.Control.Location%2A> property value of the control.</span></span>  
  
 <span data-ttu-id="3d62e-1777">对所做更改<xref:System.Windows.Forms.Control.Width%2A>并<xref:System.Windows.Forms.Control.Left%2A>属性值将导致<xref:System.Windows.Forms.Control.Right%2A>要更改的控件的属性值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1777">Changes made to the <xref:System.Windows.Forms.Control.Width%2A> and <xref:System.Windows.Forms.Control.Left%2A> property values cause the <xref:System.Windows.Forms.Control.Right%2A> property value of the control to change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1778">下面的代码示例创建三个<xref:System.Windows.Forms.Button>窗体上并使用各种大小相关以及与位置相关属性来设置其大小和位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1778">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="3d62e-1779">此示例中，你需要具有<xref:System.Windows.Forms.Form>具有宽度和高度至少为 300 像素。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1779">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Point.X" />
        <altmember cref="P:System.Windows.Forms.Control.Right" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Drawing.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point Location { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Drawing.Point with get, set" Usage="System.Windows.Forms.Control.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1780">获取或设置该控件的左上角相对于其容器的左上角的坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1780">Gets or sets the coordinates of the upper-left corner of the control relative to the upper-left corner of its container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1781">
            <see cref="T:System.Drawing.Point" />，表示控件的左上角相对于其容器的左上角。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1781">The <see cref="T:System.Drawing.Point" /> that represents the upper-left corner of the control relative to the upper-left corner of its container.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1782">因为<xref:System.Drawing.Point>类是值类型 (`Structure`在 Visual Basic 中`struct`Visual C# 中)，它返回的值，这意味着访问的属性返回的控件的左上角点副本。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1782">Because the <xref:System.Drawing.Point> class is a value type (`Structure` in Visual Basic, `struct` in Visual C#), it is returned by value, meaning accessing the property returns a copy of the upper-left point of the control.</span></span> <span data-ttu-id="3d62e-1783">因此，调整<xref:System.Drawing.Point.X%2A>或<xref:System.Drawing.Point.Y%2A>的属性<xref:System.Drawing.Point>返回此属性将不会影响<xref:System.Windows.Forms.Control.Left%2A>， <xref:System.Windows.Forms.Control.Right%2A>， <xref:System.Windows.Forms.Control.Top%2A>，或<xref:System.Windows.Forms.Control.Bottom%2A>控件的属性值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1783">So, adjusting the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Drawing.Point> returned from this property will not affect the <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, or <xref:System.Windows.Forms.Control.Bottom%2A> property values of the control.</span></span> <span data-ttu-id="3d62e-1784">若要调整这些属性分别设置每个属性值，或设置<xref:System.Windows.Forms.Control.Location%2A>具有一个新属性<xref:System.Drawing.Point>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1784">To adjust these properties set each property value individually, or set the <xref:System.Windows.Forms.Control.Location%2A> property with a new <xref:System.Drawing.Point>.</span></span>  
  
 <span data-ttu-id="3d62e-1785">如果<xref:System.Windows.Forms.Control>是<xref:System.Windows.Forms.Form>，则<xref:System.Windows.Forms.Control.Location%2A>属性值表示的左上角<xref:System.Windows.Forms.Form>屏幕坐标中。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1785">If the <xref:System.Windows.Forms.Control> is a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Location%2A> property value represents the upper-left corner of the <xref:System.Windows.Forms.Form> in screen coordinates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1786">下面的代码示例创建<xref:System.Windows.Forms.GroupBox>和设置的某些常见属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1786">The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties.</span></span> <span data-ttu-id="3d62e-1787">此示例将创建<xref:System.Windows.Forms.TextBox>，并设置其<xref:System.Windows.Forms.Control.Location%2A>组框中。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1787">The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box.</span></span> <span data-ttu-id="3d62e-1788">接下来，设置<xref:System.Windows.Forms.Control.Text%2A>停靠此分组框到窗体顶部的分组框的属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1788">Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form.</span></span> <span data-ttu-id="3d62e-1789">最后，通过设置禁用分组框<xref:System.Windows.Forms.Control.Enabled%2A>属性设置为`false`，这将导致要禁用的组框中包含的所有控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1789">Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#2)]
 [!code-csharp[Windows.Forms.Control Properties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#2)]
 [!code-vb[Windows.Forms.Control Properties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
      </Docs>
    </Member>
    <Member MemberName="LocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler LocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LocationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.LocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LocationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LocationChanged;" />
      <MemberSignature Language="F#" Value="member this.LocationChanged : EventHandler " Usage="member this.LocationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1790">在 <see cref="P:System.Windows.Forms.Control.Location" /> 属性值更改后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1790">Occurs when the <see cref="P:System.Windows.Forms.Control.Location" /> property value has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1791">如果引发此事件<xref:System.Windows.Forms.Control.Location%2A>通过以编程方式修改或通过交互更改属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1791">This event is raised if the <xref:System.Windows.Forms.Control.Location%2A> property is changed by either a programmatic modification or through interaction.</span></span>  
  
 <span data-ttu-id="3d62e-1792">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1792">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1793">下面的代码示例将引发<xref:System.Windows.Forms.Control.LocationChanged>上的事件<xref:System.Windows.Forms.StatusStrip>调整窗体的大小。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1793">The following code example raises the <xref:System.Windows.Forms.Control.LocationChanged> event on a <xref:System.Windows.Forms.StatusStrip> when the form is resized.</span></span>  
  
 [!code-csharp[System.Windows.Forms.LocationChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LocationChanged/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.LocationChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LocationChanged/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
      </Docs>
    </Member>
    <Member MemberName="LogicalToDeviceUnits">
      <MemberSignature Language="C#" Value="public System.Drawing.Size LogicalToDeviceUnits (System.Drawing.Size value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Size LogicalToDeviceUnits(valuetype System.Drawing.Size value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogicalToDeviceUnits (value As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Size LogicalToDeviceUnits(System::Drawing::Size value);" />
      <MemberSignature Language="F#" Value="member this.LogicalToDeviceUnits : System.Drawing.Size -&gt; System.Drawing.Size" Usage="control.LogicalToDeviceUnits value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalToDeviceUnits">
      <MemberSignature Language="C#" Value="public int LogicalToDeviceUnits (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LogicalToDeviceUnits(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogicalToDeviceUnits (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LogicalToDeviceUnits(int value);" />
      <MemberSignature Language="F#" Value="member this.LogicalToDeviceUnits : int -&gt; int" Usage="control.LogicalToDeviceUnits value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3d62e-1794">要转换的逻辑值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1794">The Logical value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-1795">将逻辑 DPI 值转换为它的等效 DeviceUnit DPI 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1795">Converts a Logical DPI value to it's equivalent DeviceUnit DPI value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-1796">生成的 DeviceUnit 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1796">The resulting DeviceUnit value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event EventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : EventHandler " Usage="member this.LostFocus : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1797">在控件失去焦点时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1797">Occurs when the control loses focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1798">将焦点更改通过使用键盘 （TAB、 SHIFT + TAB，等），通过调用<xref:System.Windows.Forms.Control.Select%2A>或<xref:System.Windows.Forms.Control.SelectNextControl%2A>方法，或通过设置<xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType>到当前窗体的属性，将按以下顺序发生焦点事件：</span><span class="sxs-lookup"><span data-stu-id="3d62e-1798">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="3d62e-1799">当更改焦点，使用鼠标或通过调用<xref:System.Windows.Forms.Control.Focus%2A>方法时，按以下顺序执行的焦点事件：</span><span class="sxs-lookup"><span data-stu-id="3d62e-1799">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="3d62e-1800">如果<xref:System.Windows.Forms.Control.CausesValidation%2A>属性设置为`false`，则<xref:System.Windows.Forms.Control.Validating>和<xref:System.Windows.Forms.Control.Validated>所抑制的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1800">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
 <span data-ttu-id="3d62e-1801">如果<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>的属性<xref:System.ComponentModel.CancelEventArgs>设置为`true`中<xref:System.Windows.Forms.Control.Validating>事件委托，通常会发生后的所有事件<xref:System.Windows.Forms.Control.Validating>所抑制的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1801">If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1802"><xref:System.Windows.Forms.Control.GotFocus>和<xref:System.Windows.Forms.Control.LostFocus>事件是绑定到的 WM_KILLFOCUS 和 WM_SETFOCUS Windows 消息的低级别的焦点事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1802">The <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages.</span></span> <span data-ttu-id="3d62e-1803">通常情况下，<xref:System.Windows.Forms.Control.GotFocus>并<xref:System.Windows.Forms.Control.LostFocus>更新时仅使用事件<xref:System.Windows.Forms.UICues>或编写自定义控件时。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1803">Typically, the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are only used when updating <xref:System.Windows.Forms.UICues> or when writing custom controls.</span></span> <span data-ttu-id="3d62e-1804">相反<xref:System.Windows.Forms.Control.Enter>和<xref:System.Windows.Forms.Control.Leave>事件应使用的所有控件除了<xref:System.Windows.Forms.Form>类，使用<xref:System.Windows.Forms.Form.Activated>和<xref:System.Windows.Forms.Form.Deactivate>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1804">Instead the <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events should be used for all controls except the <xref:System.Windows.Forms.Form> class, which uses the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events.</span></span> <span data-ttu-id="3d62e-1805">有关详细信息<xref:System.Windows.Forms.Control.GotFocus>并<xref:System.Windows.Forms.Control.LostFocus>事件，请参阅[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)并[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)主题。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1805">For more information about the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) and [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) topics.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3d62e-1806">不尝试将焦点设置在<xref:System.Windows.Forms.Control.Enter>， <xref:System.Windows.Forms.Control.GotFocus>， <xref:System.Windows.Forms.Control.Leave>， <xref:System.Windows.Forms.Control.LostFocus>， <xref:System.Windows.Forms.Control.Validating>，或<xref:System.Windows.Forms.Control.Validated>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1806">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="3d62e-1807">执行此操作可能会导致你的应用程序或操作系统停止响应。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1807">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="3d62e-1808">有关详细信息，请参阅[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx)主题。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1808">For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) topic.</span></span>  
  
 <span data-ttu-id="3d62e-1809">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1809">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1810">下面的代码示例演示为 TextBox1 验证的文本。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1810">The following code example demonstrates validating the text for TextBox1.</span></span> <span data-ttu-id="3d62e-1811">它还演示了如何处理<xref:System.Windows.Forms.Control.LostFocus>通过设置事件<xref:System.Windows.Forms.FileDialog.InitialDirectory%2A?displayProperty=nameWithType>TextBox1 中的文本的属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1811">It also demonstrates handling the <xref:System.Windows.Forms.Control.LostFocus> event by setting the <xref:System.Windows.Forms.FileDialog.InitialDirectory%2A?displayProperty=nameWithType> property to the text in TextBox1.</span></span> <span data-ttu-id="3d62e-1812">使用的代码示例<xref:System.Windows.Forms.ErrorProvider.GetError%2A?displayProperty=nameWithType>方法来打开文件对话框之前检查错误。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1812">The code example used the <xref:System.Windows.Forms.ErrorProvider.GetError%2A?displayProperty=nameWithType> method to check for an error before opening the file dialog box.</span></span> <span data-ttu-id="3d62e-1813">若要运行此示例中，请将以下代码粘贴到窗体包含<xref:System.Windows.Forms.TextBox>名为`TextBox1`，则<xref:System.Windows.Forms.OpenFileDialog>名为`OpenFileDialog1`即<xref:System.Windows.Forms.Button>名为`Button1`，和一个<xref:System.Windows.Forms.ErrorProvider>名为`ErrorProvider1`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1813">To run this example, paste the following code into a form containing a <xref:System.Windows.Forms.TextBox> named `TextBox1`, an <xref:System.Windows.Forms.OpenFileDialog> named `OpenFileDialog1`, a <xref:System.Windows.Forms.Button> named `Button1`, and an <xref:System.Windows.Forms.ErrorProvider> named `ErrorProvider1`.</span></span> <span data-ttu-id="3d62e-1814">请确保所有事件都都具有其事件处理程序相关联。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1814">Ensure all events are associated with their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FileDialog#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CPP/filedialogform.cpp#2)]
 [!code-csharp[System.Windows.Forms.FileDialog#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CS/filedialogform.cs#2)]
 [!code-vb[System.Windows.Forms.FileDialog#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/VB/filedialogform.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.GotFocus" />
        <altmember cref="E:System.Windows.Forms.Control.Leave" />
        <altmember cref="E:System.Windows.Forms.Form.Deactivate" />
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Margin { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Margin : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.Control.Margin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1815">获取或设置控件之间的空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1815">Gets or sets the space between controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1816">表示控件之间的间距的 <see cref="T:System.Windows.Forms.Padding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1816">A <see cref="T:System.Windows.Forms.Padding" /> representing the space between controls.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1817">控件接收默认值为<xref:System.Windows.Forms.Control.Margin%2A>是合理地接近 Windows 用户界面指南。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1817">Controls receive default values for <xref:System.Windows.Forms.Control.Margin%2A> that are reasonably close to Windows user interface guidelines.</span></span> <span data-ttu-id="3d62e-1818">一些调整可能仍需要为特定应用程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1818">Some adjustments might still be necessary for particular applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1819">设置<xref:System.Windows.Forms.Control.Margin%2A>上停靠控件的属性不起该控件从其容器的边缘的距离。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1819">Setting the <xref:System.Windows.Forms.Control.Margin%2A> property on a docked control has no effect on the distance of the control from the edges of its container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarginChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MarginChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MarginChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MarginChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MarginChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MarginChanged;" />
      <MemberSignature Language="F#" Value="member this.MarginChanged : EventHandler " Usage="member this.MarginChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1820">在控件边距更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1820">Occurs when the control's margin changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1821">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1821">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1822">下面的代码示例演示如何将此成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1822">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3d62e-1823">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Control.MarginChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1823">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MarginChanged> event.</span></span> <span data-ttu-id="3d62e-1824">此报告可帮助您了解事件发生的并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1824">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3d62e-1825">若要报告或频繁发生的事件上多个事件，请考虑更换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或将消息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1825">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3d62e-1826">若要运行此代码示例，请将其粘贴到包含继承的类型的实例的项目<xref:System.Windows.Forms.Control>，如<xref:System.Windows.Forms.Button>或<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1826">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="3d62e-1827">然后该实例命名`Control1`，并确保事件处理程序相关联<xref:System.Windows.Forms.Control.MarginChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1827">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MarginChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#21)]
 [!code-vb[System.Windows.Forms.EventExamples#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size MaximumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.MaximumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MaximumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MaximumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Control.MaximumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.AmbientValue(typeof(System.Drawing.Size), "0, 0")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1828">获取或设置大小，该大小是 <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> 可以指定的上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1828">Gets or sets the size that is the upper limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> can specify.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1829">类型为 <see cref="T:System.Drawing.Size" /> 的有序对，表示矩形的宽度和高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1829">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size MinimumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.MinimumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MinimumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MinimumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Control.MinimumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1830">获取或设置大小，该大小是 <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> 可以指定的下限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1830">Gets or sets the size that is the lower limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> can specify.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1831">类型为 <see cref="T:System.Drawing.Size" /> 的有序对，表示矩形的宽度和高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1831">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifierKeys">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Keys ModifierKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Forms.Keys ModifierKeys" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ModifierKeys" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ModifierKeys As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::Keys ModifierKeys { System::Windows::Forms::Keys get(); };" />
      <MemberSignature Language="F#" Value="member this.ModifierKeys : System.Windows.Forms.Keys" Usage="System.Windows.Forms.Control.ModifierKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1832">获取一个表示哪个修改键（Shift、Ctrl 和 Alt）处于按下状态的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1832">Gets a value indicating which of the modifier keys (SHIFT, CTRL, and ALT) is in a pressed state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1833">
            <see cref="T:System.Windows.Forms.Keys" /> 值的按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1833">A bitwise combination of the <see cref="T:System.Windows.Forms.Keys" /> values.</span>
          </span>
          <span data-ttu-id="3d62e-1834">默认值为 <see cref="F:System.Windows.Forms.Keys.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1834">The default is <see cref="F:System.Windows.Forms.Keys.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3d62e-1835">单击该按钮按下 CTRL 键时，下面的代码示例将隐藏按钮。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1835">The following code example hides a button when the CTRL key is pressed while the button is clicked.</span></span> <span data-ttu-id="3d62e-1836">此示例要求具有<xref:System.Windows.Forms.Button>名为`button1`上<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1836">This example requires that you have a <xref:System.Windows.Forms.Button> named `button1` on a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#2)]
 [!code-csharp[Windows.Forms.Control Members4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#2)]
 [!code-vb[Windows.Forms.Control Members4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Keys" />
      </Docs>
    </Member>
    <Member MemberName="MouseButtons">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.MouseButtons MouseButtons { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Forms.MouseButtons MouseButtons" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.MouseButtons" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MouseButtons As MouseButtons" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::MouseButtons MouseButtons { System::Windows::Forms::MouseButtons get(); };" />
      <MemberSignature Language="F#" Value="member this.MouseButtons : System.Windows.Forms.MouseButtons" Usage="System.Windows.Forms.Control.MouseButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseButtons</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1837">获取一个指示哪个鼠标按钮处于按下状态的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1837">Gets a value indicating which of the mouse buttons is in a pressed state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1838">
            <see cref="T:System.Windows.Forms.MouseButtons" /> 枚举值的按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1838">A bitwise combination of the <see cref="T:System.Windows.Forms.MouseButtons" /> enumeration values.</span>
          </span>
          <span data-ttu-id="3d62e-1839">默认值为 <see cref="F:System.Windows.Forms.MouseButtons.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1839">The default is <see cref="F:System.Windows.Forms.MouseButtons.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3d62e-1840">下面的代码示例演示如何使用<xref:System.Windows.Forms.Control.BackColor%2A>， <xref:System.Windows.Forms.Control.RectangleToScreen%2A>， <xref:System.Windows.Forms.Control.PointToScreen%2A>， <xref:System.Windows.Forms.Control.MouseButtons%2A>， <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType>，并<xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType>成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1840">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType> members.</span></span> <span data-ttu-id="3d62e-1841">若要运行该示例，请将以下代码粘贴在名为 Form1 的表单中包含多个控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1841">To run the example, paste the following code in a form called Form1 containing several controls.</span></span> <span data-ttu-id="3d62e-1842">此示例需要<xref:System.Windows.Forms.Control.MouseDown>， <xref:System.Windows.Forms.Control.MouseMove>，和<xref:System.Windows.Forms.Control.MouseUp>事件连接到在示例中定义的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1842">This example requires that the <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, and <xref:System.Windows.Forms.Control.MouseUp> events are connected to the event handlers defined in the example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MouseButtons" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseCaptureChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MouseCaptureChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseCaptureChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseCaptureChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseCaptureChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseCaptureChanged;" />
      <MemberSignature Language="F#" Value="member this.MouseCaptureChanged : EventHandler " Usage="member this.MouseCaptureChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1843">当控件失去鼠标捕获时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1843">Occurs when the control loses mouse capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1844">在极少数情况下，可能需要检测意外的输入。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1844">In rare scenarios, you might need to detect unexpected input.</span></span> <span data-ttu-id="3d62e-1845">例如，考虑以下方案。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1845">For example, consider the following scenarios.</span></span>  
  
-   <span data-ttu-id="3d62e-1846">在鼠标操作中，用户通过按 Windows 键或 CTRL + ESC 打开开始菜单。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1846">During a mouse operation, the user opens the Start menu by pressing the Windows key or CTRL+ESC.</span></span>  
  
-   <span data-ttu-id="3d62e-1847">在鼠标操作中，用户切换到另一个程序通过按 ALT + TAB。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1847">During a mouse operation, the user switches to another program by pressing ALT+TAB.</span></span>  
  
-   <span data-ttu-id="3d62e-1848">在鼠标操作中，另一个程序显示一个窗口或一个消息框，焦点会离开当前应用程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1848">During a mouse operation, another program displays a window or a message box that takes focus away from the current application.</span></span>  
  
 <span data-ttu-id="3d62e-1849">鼠标操作可以包括单击并将鼠标放在窗体或控件，或执行鼠标拖动操作。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1849">Mouse operations can include clicking and holding the mouse on a form or a control, or performing a mouse drag operation.</span></span> <span data-ttu-id="3d62e-1850">如果您有用于检测何时窗体或控件失去鼠标捕获这些相关的意外情况下，您可以使用<xref:System.Windows.Forms.Control.MouseCaptureChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1850">If you have to detect when a form or a control loses mouse capture for these and related unexpected scenarios, you can use the <xref:System.Windows.Forms.Control.MouseCaptureChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1851">下面的代码示例演示<xref:System.Windows.Forms.Control.MouseCaptureChanged>事件<xref:System.Windows.Forms.Button>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1851">The following code example demonstrates the <xref:System.Windows.Forms.Control.MouseCaptureChanged> event for a <xref:System.Windows.Forms.Button> control.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.MouseCaptureChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.control.mousecapturechanged/cs/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.MouseCaptureChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.control.mousecapturechanged/vb/form1.vb#1)]  
  
 <span data-ttu-id="3d62e-1852">若要测试此示例中，它在调试器中按 F5 运行。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1852">To test this example, run it in the debugger by pressing F5.</span></span> <span data-ttu-id="3d62e-1853">打开**输出**Visual Studio 窗口中的，以便您可以看到当引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1853">Open the **Output** window in Visual Studio so that you can see when events are raised.</span></span> <span data-ttu-id="3d62e-1854">单击<xref:System.Windows.Forms.Button>并注意以下输出。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1854">Click the <xref:System.Windows.Forms.Button> and notice the following output.</span></span>  
  
 `button1_MouseDown`  
  
 `button1_MouseUp`  
  
 `button1_MouseCaptureChanged`  
  
 <span data-ttu-id="3d62e-1855">现在，单击并按住鼠标左键<xref:System.Windows.Forms.Button>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1855">Now, click and hold the left mouse button on the <xref:System.Windows.Forms.Button> control.</span></span> <span data-ttu-id="3d62e-1856">仍在单击鼠标，同时按 ALT + TAB 切换到另一个程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1856">While still clicking the mouse, press ALT+TAB to switch to another program.</span></span> <span data-ttu-id="3d62e-1857">请注意，<xref:System.Windows.Forms.Control.MouseCaptureChanged>使您能够处理这种情况可能会引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1857">Notice that the <xref:System.Windows.Forms.Control.MouseCaptureChanged> event is raised enabling you to potentially handle this scenario.</span></span> <span data-ttu-id="3d62e-1858">具体取决于你的操作，<xref:System.Windows.Forms.Control.MouseUp>可能不会引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1858">Depending on your actions, the <xref:System.Windows.Forms.Control.MouseUp> event might not be raised.</span></span> <span data-ttu-id="3d62e-1859">此外可以尝试此测试的 Windows 键或 CTRL + ESC。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1859">You can also try this test with the Windows key or CTRL+ESC.</span></span>  
  
 `button1_MouseDown`  
  
 `button1_MouseCaptureChanged`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseClick;" />
      <MemberSignature Language="F#" Value="member this.MouseClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1860">用鼠标单击控件时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1860">Occurs when the control is clicked by the mouse.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1861">当光标通常位于控件上方时如果释放鼠标按钮会引发以下一系列控件中的事件：</span><span class="sxs-lookup"><span data-stu-id="3d62e-1861">Depressing a mouse button when the cursor is over a control typically raises the following series of events from the control:</span></span>  
  
1.  <span data-ttu-id="3d62e-1862"><xref:System.Windows.Forms.Control.MouseDown> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1862"><xref:System.Windows.Forms.Control.MouseDown> event.</span></span>  
  
2.  <span data-ttu-id="3d62e-1863"><xref:System.Windows.Forms.Control.Click> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1863"><xref:System.Windows.Forms.Control.Click> event.</span></span>  
  
3.  <span data-ttu-id="3d62e-1864"><xref:System.Windows.Forms.Control.MouseClick> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1864"><xref:System.Windows.Forms.Control.MouseClick> event.</span></span>  
  
4.  <span data-ttu-id="3d62e-1865"><xref:System.Windows.Forms.Control.MouseUp> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1865"><xref:System.Windows.Forms.Control.MouseUp> event.</span></span>  
  
 <span data-ttu-id="3d62e-1866">为此，各种事件不能禁用控件的类中。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1866">For this to occur, the various events cannot be disabled in the control's class.</span></span>  
  
 <span data-ttu-id="3d62e-1867">两次单击足够时间，具体由用户的操作系统，鼠标设置确定将生成<xref:System.Windows.Forms.Control.MouseDoubleClick>事件而不是第二个<xref:System.Windows.Forms.Control.MouseClick>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1867">Two single clicks that occur close enough in time, as determined by the mouse settings of the user's operating system, will generate a <xref:System.Windows.Forms.Control.MouseDoubleClick> event instead of the second <xref:System.Windows.Forms.Control.MouseClick> event.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3d62e-1868"><xref:System.Windows.Forms.Control.Click> 事件是逻辑上控件的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1868"><xref:System.Windows.Forms.Control.Click> events are logically higher-level events of a control.</span></span> <span data-ttu-id="3d62e-1869">它们通常会引发其他操作，例如，在控件有焦点时按 ENTER 键。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1869">They are often raised by other actions, such as pressing the ENTER key when the control has focus.</span></span>  
  
 <span data-ttu-id="3d62e-1870">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1870">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1871">下面的代码示例演示如何将此成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1871">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3d62e-1872">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Control.MouseClick>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1872">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseClick> event.</span></span> <span data-ttu-id="3d62e-1873">此报告可帮助您了解事件发生的并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1873">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3d62e-1874">若要报告或频繁发生的事件上多个事件，请考虑更换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或将消息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1874">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3d62e-1875">若要运行此代码示例，请将其粘贴到包含继承的类型的实例的项目<xref:System.Windows.Forms.Control>，如<xref:System.Windows.Forms.Button>或<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1875">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="3d62e-1876">然后该实例命名`Control1`，并确保事件处理程序相关联<xref:System.Windows.Forms.Control.MouseClick>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1876">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#54)]
 [!code-vb[System.Windows.Forms.EventExamples#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseDoubleClick" />
        <altmember cref="E:System.Windows.Forms.Control.MouseDown" />
        <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.DoubleClick" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDoubleClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.MouseDoubleClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseDoubleClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1877">用鼠标双击控件时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1877">Occurs when the control is double clicked by the mouse.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1878"><xref:System.Windows.Forms.Control.MouseDoubleClick>时用户释放鼠标按钮两次连续快速地在光标位于控件上方时，发生事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1878">The <xref:System.Windows.Forms.Control.MouseDoubleClick> event occurs when the user depresses a mouse button twice in quick succession when the cursor is over the control.</span></span> <span data-ttu-id="3d62e-1879">将两次单击与双击分隔开来的时间间隔是由用户的操作系统的鼠标设置确定。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1879">The time interval that separates two single clicks from a double-click is determined by the mouse settings of the user's operating system.</span></span>  
  
 <span data-ttu-id="3d62e-1880">这样的用户操作发生时，将由该控件引发以下一系列事件：</span><span class="sxs-lookup"><span data-stu-id="3d62e-1880">The following series of events is raised by the control when such a user action takes place:</span></span>  
  
1.  <span data-ttu-id="3d62e-1881"><xref:System.Windows.Forms.Control.MouseDown> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1881"><xref:System.Windows.Forms.Control.MouseDown> event.</span></span>  
  
2.  <span data-ttu-id="3d62e-1882"><xref:System.Windows.Forms.Control.Click> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1882"><xref:System.Windows.Forms.Control.Click> event.</span></span>  
  
3.  <span data-ttu-id="3d62e-1883"><xref:System.Windows.Forms.Control.MouseClick> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1883"><xref:System.Windows.Forms.Control.MouseClick> event.</span></span>  
  
4.  <span data-ttu-id="3d62e-1884"><xref:System.Windows.Forms.Control.MouseUp> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1884"><xref:System.Windows.Forms.Control.MouseUp> event.</span></span>  
  
5.  <span data-ttu-id="3d62e-1885"><xref:System.Windows.Forms.Control.MouseDown> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1885"><xref:System.Windows.Forms.Control.MouseDown> event.</span></span>  
  
6.  <span data-ttu-id="3d62e-1886"><xref:System.Windows.Forms.Control.DoubleClick> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1886"><xref:System.Windows.Forms.Control.DoubleClick> event.</span></span>  
  
7.  <span data-ttu-id="3d62e-1887"><xref:System.Windows.Forms.Control.MouseDoubleClick> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1887"><xref:System.Windows.Forms.Control.MouseDoubleClick> event.</span></span>  
  
8.  <span data-ttu-id="3d62e-1888"><xref:System.Windows.Forms.Control.MouseUp> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1888"><xref:System.Windows.Forms.Control.MouseUp> event.</span></span>  
  
 <span data-ttu-id="3d62e-1889">为此，各种事件不能禁用控件的类中。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1889">For this to occur, the various events cannot be disabled in the control's class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3d62e-1890"><xref:System.Windows.Forms.Control.DoubleClick> 事件是逻辑上控件的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1890"><xref:System.Windows.Forms.Control.DoubleClick> events are logically higher-level events of a control.</span></span> <span data-ttu-id="3d62e-1891">它们可能会引发由其他用户操作，例如快捷键组合。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1891">They may be raised by other user actions, such as shortcut key combinations.</span></span>  
  
 <span data-ttu-id="3d62e-1892">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1892">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1893">下面的代码示例演示如何将此成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1893">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3d62e-1894">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Control.MouseDoubleClick>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1894">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseDoubleClick> event.</span></span> <span data-ttu-id="3d62e-1895">此报告可帮助您了解事件发生的并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1895">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3d62e-1896">若要报告或频繁发生的事件上多个事件，请考虑更换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或将消息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1896">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3d62e-1897">若要运行此代码示例，请将其粘贴到包含继承的类型的实例的项目<xref:System.Windows.Forms.Control>，如<xref:System.Windows.Forms.Button>或<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1897">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="3d62e-1898">然后该实例命名`Control1`，并确保事件处理程序相关联<xref:System.Windows.Forms.Control.MouseDoubleClick>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1898">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseDoubleClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#55](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#55)]
 [!code-vb[System.Windows.Forms.EventExamples#55](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#55)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseClick" />
        <altmember cref="E:System.Windows.Forms.Control.DoubleClick" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.MouseDoubleClick" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseDown : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1899">当鼠标指针位于控件上并按下鼠标键时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1899">Occurs when the mouse pointer is over the control and a mouse button is pressed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1900">鼠标事件按下列顺序发生：</span><span class="sxs-lookup"><span data-stu-id="3d62e-1900">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1901">不会引发以下事件<xref:System.Windows.Forms.TabControl>类，除非没有至少一个<xref:System.Windows.Forms.TabPage>中<xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType>集合： <xref:System.Windows.Forms.Control.Click>， <xref:System.Windows.Forms.Control.DoubleClick>， <xref:System.Windows.Forms.Control.MouseDown>， <xref:System.Windows.Forms.Control.MouseUp>， <xref:System.Windows.Forms.Control.MouseHover>， <xref:System.Windows.Forms.Control.MouseEnter>，<xref:System.Windows.Forms.Control.MouseLeave>和<xref:System.Windows.Forms.Control.MouseMove>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1901">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="3d62e-1902">如果没有至少一个<xref:System.Windows.Forms.TabPage>在集合中，并在用户与选项卡控件的标头交互 (其中<xref:System.Windows.Forms.TabPage>名称显示)，则<xref:System.Windows.Forms.TabControl>引发相应事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1902">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="3d62e-1903">但是，如果在工作区内的选项卡页上，为用户交互<xref:System.Windows.Forms.TabPage>引发相应事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1903">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="3d62e-1904">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1904">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1905">下面的代码示例演示了如何使用不同的鼠标事件上绘制的路径鼠标<xref:System.Windows.Forms.Panel>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1905">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="3d62e-1906">直线段添加到<xref:System.Drawing.Drawing2D.GraphicsPath>为每个<xref:System.Windows.Forms.Control.MouseMove>和<xref:System.Windows.Forms.Control.MouseDown>发生的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1906">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="3d62e-1907">要更新该图形<xref:System.Windows.Forms.Control.Invalidate%2A>的调用方法<xref:System.Windows.Forms.Panel>每个`MouseDown`和`MouseUp`事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1907">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="3d62e-1908">此外，向上或向下时滚动的图形路径<xref:System.Windows.Forms.Control.MouseWheel>事件发生。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1908">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="3d62e-1909">其他鼠标事件，例如<xref:System.Windows.Forms.Control.MouseHover>，屏幕上进行标识。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1909">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="3d62e-1910">此外在屏幕上显示为鼠标从有关的其他信息<xref:System.Windows.Forms.SystemInformation>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1910">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.MouseClick" />
        <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event EventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : EventHandler " Usage="member this.MouseEnter : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1911">在鼠标指针进入控件时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1911">Occurs when the mouse pointer enters the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1912">鼠标事件按下列顺序发生：</span><span class="sxs-lookup"><span data-stu-id="3d62e-1912">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1913">不会引发以下事件<xref:System.Windows.Forms.TabControl>类，除非没有至少一个<xref:System.Windows.Forms.TabPage>中<xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType>集合： <xref:System.Windows.Forms.Control.Click>， <xref:System.Windows.Forms.Control.DoubleClick>， <xref:System.Windows.Forms.Control.MouseDown>， <xref:System.Windows.Forms.Control.MouseUp>， <xref:System.Windows.Forms.Control.MouseHover>， <xref:System.Windows.Forms.Control.MouseEnter>，<xref:System.Windows.Forms.Control.MouseLeave>和<xref:System.Windows.Forms.Control.MouseMove>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1913">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="3d62e-1914">如果没有至少一个<xref:System.Windows.Forms.TabPage>在集合中，并在用户与选项卡控件的标头交互 (其中<xref:System.Windows.Forms.TabPage>名称显示)，则<xref:System.Windows.Forms.TabControl>引发相应事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1914">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="3d62e-1915">但是，如果在工作区内的选项卡页上，为用户交互<xref:System.Windows.Forms.TabPage>引发相应事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1915">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="3d62e-1916">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1916">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1917">下面的代码示例演示了如何使用不同的鼠标事件上绘制的路径鼠标<xref:System.Windows.Forms.Panel>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1917">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="3d62e-1918">直线段添加到<xref:System.Drawing.Drawing2D.GraphicsPath>为每个<xref:System.Windows.Forms.Control.MouseMove>和<xref:System.Windows.Forms.Control.MouseDown>发生的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1918">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="3d62e-1919">要更新该图形<xref:System.Windows.Forms.Control.Invalidate%2A>的调用方法<xref:System.Windows.Forms.Panel>每个`MouseDown`和`MouseUp`事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1919">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="3d62e-1920">此外，向上或向下时滚动的图形路径<xref:System.Windows.Forms.Control.MouseWheel>事件发生。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1920">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="3d62e-1921">其他鼠标事件，例如<xref:System.Windows.Forms.Control.MouseHover>，屏幕上进行标识。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1921">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="3d62e-1922">此外在屏幕上显示为鼠标从有关的其他信息<xref:System.Windows.Forms.SystemInformation>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1922">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.MouseLeave" />
        <altmember cref="E:System.Windows.Forms.Control.MouseHover" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseHover">
      <MemberSignature Language="C#" Value="public event EventHandler MouseHover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseHover" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseHover" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseHover As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseHover;" />
      <MemberSignature Language="F#" Value="member this.MouseHover : EventHandler " Usage="member this.MouseHover : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1923">在鼠标指针停放在控件上时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1923">Occurs when the mouse pointer rests on the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1924">一个典型用途<xref:System.Windows.Forms.Control.MouseHover>是当鼠标悬停在控件 （"悬停矩形"） 周围的指定区域内的控件上时显示工具提示。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1924">A typical use of <xref:System.Windows.Forms.Control.MouseHover> is to display a tool tip when the mouse pauses on a control within a specified area around the control (the "hover rectangle").</span></span> <span data-ttu-id="3d62e-1925">若要引发此事件所需的暂停指定以毫秒为单位的<xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1925">The pause required for this event to be raised is specified in milliseconds by the <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> property.</span></span>  
  
 <span data-ttu-id="3d62e-1926"><xref:System.Windows.Forms.Control.MouseHover>定义和与检测到事件<xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A>和<xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1926">The <xref:System.Windows.Forms.Control.MouseHover> event is defined and detected in connection with the <xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A> and <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> properties.</span></span>  
  
 <span data-ttu-id="3d62e-1927">鼠标事件按下列顺序发生：</span><span class="sxs-lookup"><span data-stu-id="3d62e-1927">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1928">不会引发以下事件<xref:System.Windows.Forms.TabControl>类，除非没有至少一个<xref:System.Windows.Forms.TabPage>中<xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType>集合： <xref:System.Windows.Forms.Control.Click>， <xref:System.Windows.Forms.Control.DoubleClick>， <xref:System.Windows.Forms.Control.MouseDown>， <xref:System.Windows.Forms.Control.MouseUp>， <xref:System.Windows.Forms.Control.MouseHover>， <xref:System.Windows.Forms.Control.MouseEnter>，<xref:System.Windows.Forms.Control.MouseLeave>和<xref:System.Windows.Forms.Control.MouseMove>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1928">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="3d62e-1929">如果没有至少一个<xref:System.Windows.Forms.TabPage>在集合中，并在用户与选项卡控件的标头交互 (其中<xref:System.Windows.Forms.TabPage>名称显示)，则<xref:System.Windows.Forms.TabControl>引发相应事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1929">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="3d62e-1930">但是，如果在工作区内的选项卡页上，为用户交互<xref:System.Windows.Forms.TabPage>引发相应事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1930">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="3d62e-1931">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1931">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1932">下面的代码示例演示了如何使用不同的鼠标事件上绘制的路径鼠标<xref:System.Windows.Forms.Panel>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1932">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="3d62e-1933">直线段添加到<xref:System.Drawing.Drawing2D.GraphicsPath>为每个<xref:System.Windows.Forms.Control.MouseMove>和<xref:System.Windows.Forms.Control.MouseDown>发生的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1933">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="3d62e-1934">要更新该图形<xref:System.Windows.Forms.Control.Invalidate%2A>的调用方法<xref:System.Windows.Forms.Panel>每个`MouseDown`和`MouseUp`事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1934">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="3d62e-1935">此外，向上或向下时滚动的图形路径<xref:System.Windows.Forms.Control.MouseWheel>事件发生。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1935">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="3d62e-1936">其他鼠标事件，例如<xref:System.Windows.Forms.Control.MouseHover>，屏幕上进行标识。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1936">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="3d62e-1937">此外在屏幕上显示为鼠标从有关的其他信息<xref:System.Windows.Forms.SystemInformation>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1937">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.SystemInformation.MouseHoverTime" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event EventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : EventHandler " Usage="member this.MouseLeave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1938">在鼠标指针离开控件时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1938">Occurs when the mouse pointer leaves the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1939">鼠标事件按下列顺序发生：</span><span class="sxs-lookup"><span data-stu-id="3d62e-1939">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1940">不会引发以下事件<xref:System.Windows.Forms.TabControl>类，除非没有至少一个<xref:System.Windows.Forms.TabPage>中<xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType>集合： <xref:System.Windows.Forms.Control.Click>， <xref:System.Windows.Forms.Control.DoubleClick>， <xref:System.Windows.Forms.Control.MouseDown>， <xref:System.Windows.Forms.Control.MouseUp>， <xref:System.Windows.Forms.Control.MouseHover>， <xref:System.Windows.Forms.Control.MouseEnter>，<xref:System.Windows.Forms.Control.MouseLeave>和<xref:System.Windows.Forms.Control.MouseMove>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1940">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="3d62e-1941">如果没有至少一个<xref:System.Windows.Forms.TabPage>在集合中，并在用户与选项卡控件的标头交互 (其中<xref:System.Windows.Forms.TabPage>名称显示)，则<xref:System.Windows.Forms.TabControl>引发相应事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1941">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="3d62e-1942">但是，如果在工作区内的选项卡页上，为用户交互<xref:System.Windows.Forms.TabPage>引发相应事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1942">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="3d62e-1943">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1943">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1944">下面的代码示例演示了如何使用不同的鼠标事件上绘制的路径鼠标<xref:System.Windows.Forms.Panel>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1944">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="3d62e-1945">直线段添加到<xref:System.Drawing.Drawing2D.GraphicsPath>为每个<xref:System.Windows.Forms.Control.MouseMove>和<xref:System.Windows.Forms.Control.MouseDown>发生的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1945">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="3d62e-1946">要更新该图形<xref:System.Windows.Forms.Control.Invalidate%2A>的调用方法<xref:System.Windows.Forms.Panel>每个`MouseDown`和`MouseUp`事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1946">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="3d62e-1947">此外，向上或向下时滚动的图形路径<xref:System.Windows.Forms.Control.MouseWheel>事件发生。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1947">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="3d62e-1948">其他鼠标事件，例如<xref:System.Windows.Forms.Control.MouseHover>，屏幕上进行标识。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1948">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="3d62e-1949">此外在屏幕上显示为鼠标从有关的其他信息<xref:System.Windows.Forms.SystemInformation>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1949">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1950">在鼠标指针移到控件上时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1950">Occurs when the mouse pointer is moved over the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1951">典型使用<xref:System.Windows.Forms.Control.MouseMove>若要更改控件的颜色，或要绘制控件周围以及一个凸出的矩形。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1951">Typical uses of <xref:System.Windows.Forms.Control.MouseMove> are to change the control's color or to paint a raised rectangle around the control.</span></span>  
  
 <span data-ttu-id="3d62e-1952">鼠标事件按下列顺序发生：</span><span class="sxs-lookup"><span data-stu-id="3d62e-1952">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1953">不会引发以下事件<xref:System.Windows.Forms.TabControl>类，除非没有至少一个<xref:System.Windows.Forms.TabPage>中<xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType>集合： <xref:System.Windows.Forms.Control.Click>， <xref:System.Windows.Forms.Control.DoubleClick>， <xref:System.Windows.Forms.Control.MouseDown>， <xref:System.Windows.Forms.Control.MouseUp>， <xref:System.Windows.Forms.Control.MouseHover>， <xref:System.Windows.Forms.Control.MouseEnter>，<xref:System.Windows.Forms.Control.MouseLeave>和<xref:System.Windows.Forms.Control.MouseMove>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1953">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="3d62e-1954">如果没有至少一个<xref:System.Windows.Forms.TabPage>在集合中，并在用户与选项卡控件的标头交互 (其中<xref:System.Windows.Forms.TabPage>名称显示)，则<xref:System.Windows.Forms.TabControl>引发相应事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1954">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="3d62e-1955">但是，如果在工作区内的选项卡页上，为用户交互<xref:System.Windows.Forms.TabPage>引发相应事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1955">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="3d62e-1956">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1956">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1957">下面的代码示例演示了如何使用不同的鼠标事件上绘制的路径鼠标<xref:System.Windows.Forms.Panel>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1957">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="3d62e-1958">直线段添加到<xref:System.Drawing.Drawing2D.GraphicsPath>为每个<xref:System.Windows.Forms.Control.MouseMove>和<xref:System.Windows.Forms.Control.MouseDown>发生的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1958">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="3d62e-1959">要更新该图形<xref:System.Windows.Forms.Control.Invalidate%2A>的调用方法<xref:System.Windows.Forms.Panel>每个`MouseDown`和`MouseUp`事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1959">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="3d62e-1960">此外，向上或向下时滚动的图形路径<xref:System.Windows.Forms.Control.MouseWheel>事件发生。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1960">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="3d62e-1961">其他鼠标事件，例如<xref:System.Windows.Forms.Control.MouseHover>，屏幕上进行标识。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1961">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="3d62e-1962">此外在屏幕上显示为鼠标从有关的其他信息<xref:System.Windows.Forms.SystemInformation>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1962">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MousePosition">
      <MemberSignature Language="C#" Value="public static System.Drawing.Point MousePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Drawing.Point MousePosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.MousePosition" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MousePosition As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Point MousePosition { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.MousePosition : System.Drawing.Point" Usage="System.Windows.Forms.Control.MousePosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1963">获取鼠标光标的位置（以屏幕坐标表示）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1963">Gets the position of the mouse cursor in screen coordinates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-1964">
            <see cref="T:System.Drawing.Point" />，它包含鼠标光标相对于屏幕左上角的坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1964">A <see cref="T:System.Drawing.Point" /> that contains the coordinates of the mouse cursor relative to the upper-left corner of the screen.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1965"><xref:System.Windows.Forms.Control.MousePosition%2A>属性返回<xref:System.Drawing.Point>在引用属性时的时间表示鼠标光标位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1965">The <xref:System.Windows.Forms.Control.MousePosition%2A> property returns a <xref:System.Drawing.Point> that represents the mouse cursor position at the time the property was referenced.</span></span> <span data-ttu-id="3d62e-1966">坐标指示的位置在屏幕上，不相对于控件，并且无论是否将光标悬停在控件返回。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1966">The coordinates indicate the position on the screen, not relative to the control, and are returned regardless of whether the cursor is positioned over the control.</span></span> <span data-ttu-id="3d62e-1967">在屏幕的左上角的坐标为 0，0。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1967">The coordinates of the upper-left corner of the screen are 0,0.</span></span>  
  
 <span data-ttu-id="3d62e-1968"><xref:System.Windows.Forms.Control.MousePosition%2A>属性等同于<xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1968">The <xref:System.Windows.Forms.Control.MousePosition%2A> property is identical to the <xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1969">下面的代码示例将<xref:System.Windows.Forms.TreeNode>到可编辑状态时在用户按 ALT + E，鼠标光标位于树节点标签。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1969">The following code example puts a <xref:System.Windows.Forms.TreeNode> label into an editable state when the user presses ALT+E while the mouse cursor is over the tree node.</span></span> <span data-ttu-id="3d62e-1970">用户完成操作后编辑标签，标签之前，无法编辑再次再次按下 ALT + E 键组合。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1970">After the user is done editing the label, the labels cannot be edited again until the ALT+E key combination is pressed again.</span></span> <span data-ttu-id="3d62e-1971">此示例要求具有<xref:System.Windows.Forms.TreeView>上<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1971">This example requires that you have a <xref:System.Windows.Forms.TreeView> on a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="3d62e-1972">在树视图还应具有至少一个<xref:System.Windows.Forms.TreeNode>在其<xref:System.Windows.Forms.TreeView.Nodes%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1972">The tree view should also have at least one <xref:System.Windows.Forms.TreeNode> in its <xref:System.Windows.Forms.TreeView.Nodes%2A> collection.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseUp : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1973">在鼠标指针在控件上并释放鼠标键时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1973">Occurs when the mouse pointer is over the control and a mouse button is released.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1974">鼠标事件按下列顺序发生：</span><span class="sxs-lookup"><span data-stu-id="3d62e-1974">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-1975">不会引发以下事件<xref:System.Windows.Forms.TabControl>类，除非没有至少一个<xref:System.Windows.Forms.TabPage>中<xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType>集合： <xref:System.Windows.Forms.Control.Click>， <xref:System.Windows.Forms.Control.DoubleClick>， <xref:System.Windows.Forms.Control.MouseDown>， <xref:System.Windows.Forms.Control.MouseUp>， <xref:System.Windows.Forms.Control.MouseHover>， <xref:System.Windows.Forms.Control.MouseEnter>，<xref:System.Windows.Forms.Control.MouseLeave>和<xref:System.Windows.Forms.Control.MouseMove>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1975">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="3d62e-1976">如果没有至少一个<xref:System.Windows.Forms.TabPage>在集合中，并在用户与选项卡控件的标头交互 (其中<xref:System.Windows.Forms.TabPage>名称显示)，则<xref:System.Windows.Forms.TabControl>引发相应事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1976">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="3d62e-1977">但是，如果在工作区内的选项卡页上，为用户交互<xref:System.Windows.Forms.TabPage>引发相应事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1977">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="3d62e-1978">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1978">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1979">下面的代码示例演示了如何使用不同的鼠标事件上绘制的路径鼠标<xref:System.Windows.Forms.Panel>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1979">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="3d62e-1980">直线段添加到<xref:System.Drawing.Drawing2D.GraphicsPath>为每个<xref:System.Windows.Forms.Control.MouseMove>和<xref:System.Windows.Forms.Control.MouseDown>发生的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1980">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="3d62e-1981">要更新该图形<xref:System.Windows.Forms.Control.Invalidate%2A>的调用方法<xref:System.Windows.Forms.Panel>每个`MouseDown`和`MouseUp`事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1981">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="3d62e-1982">此外，向上或向下时滚动的图形路径<xref:System.Windows.Forms.Control.MouseWheel>事件发生。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1982">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="3d62e-1983">其他鼠标事件，例如<xref:System.Windows.Forms.Control.MouseHover>，屏幕上进行标识。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1983">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="3d62e-1984">此外在屏幕上显示为鼠标从有关的其他信息<xref:System.Windows.Forms.SystemInformation>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1984">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseWheel;" />
      <MemberSignature Language="F#" Value="member this.MouseWheel : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseWheel : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-1985">在控件有焦点且鼠标轮移动时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-1985">Occurs when the mouse wheel moves while the control has focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-1986">在处理时<xref:System.Windows.Forms.Control.MouseWheel>务必遵循与鼠标滚轮相关联的用户界面 (UI) 标准的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1986">When handling the <xref:System.Windows.Forms.Control.MouseWheel> event it is important to follow the user interface (UI) standards associated with the mouse wheel.</span></span> <span data-ttu-id="3d62e-1987"><xref:System.Windows.Forms.MouseEventArgs.Delta%2A?displayProperty=nameWithType>属性值指示移动量鼠标滚轮。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1987">The <xref:System.Windows.Forms.MouseEventArgs.Delta%2A?displayProperty=nameWithType> property value indicates the amount the mouse wheel has been moved.</span></span> <span data-ttu-id="3d62e-1988">UI 应滚动时累积的增量是加上或减去 120。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1988">The UI should scroll when the accumulated delta is plus or minus 120.</span></span> <span data-ttu-id="3d62e-1989">UI 应滚动逻辑返回的行数<xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType>达到每个增量值的属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1989">The UI should scroll the number of logical lines returned by the <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType> property for every delta value reached.</span></span> <span data-ttu-id="3d62e-1990">您还可以滚动更方便地在较小 120 单位的增量，但是比率应保持不变，即<xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType>每轮移动的 120 增量单位滚动的行。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1990">You can also scroll more smoothly in smaller that 120 unit increments, however the ratio should remain constant, that is <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType> lines scrolled per 120 delta units of wheel movement.</span></span>  
  
 <span data-ttu-id="3d62e-1991">有关处理鼠标滚轮消息的详细信息，请参阅[对 wm_mousewheel 进行](http://msdn.microsoft.com/library/windows/desktop/ms645617\(v=vs.85\).aspx)主题。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1991">For more information about handling mouse wheel messages, see the [WM_MOUSEWHEEL](http://msdn.microsoft.com/library/windows/desktop/ms645617\(v=vs.85\).aspx) topic.</span></span>  
  
 <span data-ttu-id="3d62e-1992">鼠标事件按下列顺序发生：</span><span class="sxs-lookup"><span data-stu-id="3d62e-1992">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
 <span data-ttu-id="3d62e-1993">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1993">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-1994">下面的代码示例演示了如何使用不同的鼠标事件上绘制的路径鼠标<xref:System.Windows.Forms.Panel>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1994">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="3d62e-1995">直线段添加到<xref:System.Drawing.Drawing2D.GraphicsPath>为每个<xref:System.Windows.Forms.Control.MouseMove>和<xref:System.Windows.Forms.Control.MouseDown>发生的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1995">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="3d62e-1996">要更新该图形<xref:System.Windows.Forms.Control.Invalidate%2A>的调用方法<xref:System.Windows.Forms.Panel>每个`MouseDown`和`MouseUp`事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1996">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="3d62e-1997">此外，向上或向下时滚动的图形路径<xref:System.Windows.Forms.Control.MouseWheel>事件发生。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1997">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="3d62e-1998">其他鼠标事件，例如<xref:System.Windows.Forms.Control.MouseHover>，屏幕上进行标识。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1998">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="3d62e-1999">此外在屏幕上显示为鼠标从有关的其他信息<xref:System.Windows.Forms.SystemInformation>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-1999">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public event EventHandler Move;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Move" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Move" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Move As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Move;" />
      <MemberSignature Language="F#" Value="member this.Move : EventHandler " Usage="member this.Move : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-2000">在移动控件时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2000">Occurs when the control is moved.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2001">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2001">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2002">下面的代码示例使用<xref:System.Windows.Forms.Control.Move>事件，以显示窗体的标题栏上的屏幕坐标中的窗体的位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2002">The following code example uses the <xref:System.Windows.Forms.Control.Move> event to display the location of the form in screen coordinates on the caption bar of the form.</span></span>  
  
 [!code-cpp[Control.Move#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Move/CPP/form1.cpp#1)]
 [!code-csharp[Control.Move#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Move/CS/form1.cs#1)]
 [!code-vb[Control.Move#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Move/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.Control.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-2003">获取或设置控件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2003">Gets or sets the name of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-2004">控件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2004">The name of the control.</span>
          </span>
          <span data-ttu-id="3d62e-2005">默认值为空字符串("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2005">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2006"><xref:System.Windows.Forms.Control.Name%2A>属性可以用于在运行时计算对象的名称而不是类型和编程名称。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2006">The <xref:System.Windows.Forms.Control.Name%2A> property can be used at run time to evaluate the object by name rather than type and programmatic name.</span></span> <span data-ttu-id="3d62e-2007">因为<xref:System.Windows.Forms.Control.Name%2A>属性返回<xref:System.String>类型，可以在用例样式逻辑语句中对它进行评估 (`Select`在 Visual Basic 中的语句`switch`语句在 Visual C# 和[!INCLUDE[vcprvc](~/includes/vcprvc-md.md)])。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2007">Because the <xref:System.Windows.Forms.Control.Name%2A> property returns a <xref:System.String> type, it can be evaluated in case-style logic statements (`Select` statement in Visual Basic, `switch` statement in Visual C# and [!INCLUDE[vcprvc](~/includes/vcprvc-md.md)]).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2008">下面的代码示例显示<xref:System.Windows.Forms.Control.Name%2A>中的控件的<xref:System.Windows.Forms.MessageBox>添加或删除从窗体控件时。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2008">The following code example displays the <xref:System.Windows.Forms.Control.Name%2A> of a control in a <xref:System.Windows.Forms.MessageBox> when the control is added or removed from a form.</span></span>  
  
 [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]
 [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]
 [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.ISite.Name" />
      </Docs>
    </Member>
    <Member MemberName="NotifyInvalidate">
      <MemberSignature Language="C#" Value="protected virtual void NotifyInvalidate (System.Drawing.Rectangle invalidatedArea);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void NotifyInvalidate(valuetype System.Drawing.Rectangle invalidatedArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub NotifyInvalidate (invalidatedArea As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void NotifyInvalidate(System::Drawing::Rectangle invalidatedArea);" />
      <MemberSignature Language="F#" Value="abstract member NotifyInvalidate : System.Drawing.Rectangle -&gt; unit&#xA;override this.NotifyInvalidate : System.Drawing.Rectangle -&gt; unit" Usage="control.NotifyInvalidate invalidatedArea" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invalidatedArea" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="invalidatedArea">
          <span data-ttu-id="3d62e-2009">一个表示要使之无效的区域的 <see cref="T:System.Drawing.Rectangle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2009">A <see cref="T:System.Drawing.Rectangle" /> representing the area to invalidate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2010">引发 <see cref="E:System.Windows.Forms.Control.Invalidated" /> 事件，其中带有要使之无效的控件的指定区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2010">Raises the <see cref="E:System.Windows.Forms.Control.Invalidated" /> event with a specified region of the control to invalidate.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoSizeChanged : EventArgs -&gt; unit&#xA;override this.OnAutoSizeChanged : EventArgs -&gt; unit" Usage="control.OnAutoSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2011">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2011">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2012">引发 <see cref="E:System.Windows.Forms.Control.AutoSizeChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2012">Raises the <see cref="E:System.Windows.Forms.Control.AutoSizeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2013">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2013">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2014">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2014">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2015"><xref:System.Windows.Forms.Control.OnAutoSizeChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2015">The <xref:System.Windows.Forms.Control.OnAutoSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2016">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2016">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2017">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2017">When overriding <see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBackColorChanged : EventArgs -&gt; unit&#xA;override this.OnBackColorChanged : EventArgs -&gt; unit" Usage="control.OnBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2018">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2018">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2019">引发 <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2019">Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2020">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2020">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2021">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2021">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2022"><xref:System.Windows.Forms.Control.OnBackColorChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2022">The <xref:System.Windows.Forms.Control.OnBackColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2023">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2023">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2024">下面的代码示例是属于引发事件的方法时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2024">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-2025"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式`On` *PropertyName* `Changed`的引发相应*PropertyName* `Changed`事件时*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2025">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-2026">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2026">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2027">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2027">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2028">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2028">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2029">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2029">When overriding <see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.BackColorChanged" />
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBackgroundImageChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBackgroundImageChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBackgroundImageChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBackgroundImageChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBackgroundImageChanged : EventArgs -&gt; unit&#xA;override this.OnBackgroundImageChanged : EventArgs -&gt; unit" Usage="control.OnBackgroundImageChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2030">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2030">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2031">引发 <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2031">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2032">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2032">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2033">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2033">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2034"><xref:System.Windows.Forms.Control.OnBackgroundImageChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2034">The <xref:System.Windows.Forms.Control.OnBackgroundImageChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2035">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2035">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2036">下面的代码示例是属于引发事件的方法时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2036">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-2037"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式`On` *PropertyName* `Changed`的引发相应*PropertyName* `Changed`事件时*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2037">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-2038">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2038">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2039">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2039">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2040">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2040">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2041">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2041">When overriding <see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImage" />
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBackgroundImageLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBackgroundImageLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBackgroundImageLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBackgroundImageLayoutChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBackgroundImageLayoutChanged : EventArgs -&gt; unit&#xA;override this.OnBackgroundImageLayoutChanged : EventArgs -&gt; unit" Usage="control.OnBackgroundImageLayoutChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2042">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2042">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2043">引发 <see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2043">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2044">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2044">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2045">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2045">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2046"><xref:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2046">The <xref:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2047">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2047">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2048">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2048">When overriding <see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnBindingContextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBindingContextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBindingContextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBindingContextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBindingContextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBindingContextChanged : EventArgs -&gt; unit&#xA;override this.OnBindingContextChanged : EventArgs -&gt; unit" Usage="control.OnBindingContextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2049">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2049">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2050">引发 <see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2050">Raises the <see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2051">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2051">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2052">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2052">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2053"><xref:System.Windows.Forms.Control.OnBindingContextChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2053">The <xref:System.Windows.Forms.Control.OnBindingContextChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2054">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2054">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2055">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2055">When overriding <see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.BindingContextChanged" />
        <altmember cref="P:System.Windows.Forms.Control.BindingContext" />
      </Docs>
    </Member>
    <Member MemberName="OnCausesValidationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCausesValidationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCausesValidationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCausesValidationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCausesValidationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCausesValidationChanged : EventArgs -&gt; unit&#xA;override this.OnCausesValidationChanged : EventArgs -&gt; unit" Usage="control.OnCausesValidationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2056">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2056">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2057">引发 <see cref="E:System.Windows.Forms.Control.CausesValidationChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2057">Raises the <see cref="E:System.Windows.Forms.Control.CausesValidationChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2058">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2058">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2059">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2059">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2060"><xref:System.Windows.Forms.Control.OnCausesValidationChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2060">The <xref:System.Windows.Forms.Control.OnCausesValidationChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2061">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2061">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2062">下面的代码示例是属于引发事件的方法时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2062">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-2063"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式`On` *PropertyName* `Changed`的引发相应*PropertyName* `Changed`事件时*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2063">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-2064">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2064">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2065">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2065">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2066">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2066">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2067">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2067">When overriding <see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.CausesValidationChanged" />
        <altmember cref="P:System.Windows.Forms.Control.CausesValidation" />
      </Docs>
    </Member>
    <Member MemberName="OnChangeUICues">
      <MemberSignature Language="C#" Value="protected virtual void OnChangeUICues (System.Windows.Forms.UICuesEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChangeUICues(class System.Windows.Forms.UICuesEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChangeUICues (e As UICuesEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChangeUICues(System::Windows::Forms::UICuesEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnChangeUICues : System.Windows.Forms.UICuesEventArgs -&gt; unit&#xA;override this.OnChangeUICues : System.Windows.Forms.UICuesEventArgs -&gt; unit" Usage="control.OnChangeUICues e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.UICuesEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2068">包含事件数据的 <see cref="T:System.Windows.Forms.UICuesEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2068">A <see cref="T:System.Windows.Forms.UICuesEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2069">引发 <see cref="E:System.Windows.Forms.Control.ChangeUICues" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2069">Raises the <see cref="E:System.Windows.Forms.Control.ChangeUICues" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2070">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2070">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2071">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2071">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2072"><xref:System.Windows.Forms.Control.OnChangeUICues%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2072">The <xref:System.Windows.Forms.Control.OnChangeUICues%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2073">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2073">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2074">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2074">When overriding <see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.ChangeUICues" />
        <altmember cref="T:System.Windows.Forms.UICues" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : EventArgs -&gt; unit&#xA;override this.OnClick : EventArgs -&gt; unit" Usage="control.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2075">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2075">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2076">引发 <see cref="E:System.Windows.Forms.Control.Click" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2076">Raises the <see cref="E:System.Windows.Forms.Control.Click" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2077">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2077">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2078">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2078">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2079"><xref:System.Windows.Forms.Control.OnClick%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2079">The <xref:System.Windows.Forms.Control.OnClick%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2080">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2080">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2081">下面的代码示例演示如何重写<xref:System.Windows.Forms.Control.OnClick%2A>派生类中的方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2081">The following code example demonstrates overriding the <xref:System.Windows.Forms.Control.OnClick%2A> method in a derived class.</span></span> <span data-ttu-id="3d62e-2082">若要运行该示例，将窗体类，同一文件中后面粘贴以下代码。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2082">To run the example, paste the following code after a form class, in the same file.</span></span> <span data-ttu-id="3d62e-2083">将类型的 textbox 添加`SingleClickTextBox`到窗体。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2083">Add a textbox of type `SingleClickTextBox` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlOnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlOnClick/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlOnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlOnClick/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlOnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlOnClick/VB/form1.vb#1)]  
  
 <span data-ttu-id="3d62e-2084">下面的代码示例演示的很多用途之一<xref:System.Windows.Forms.Control.Click>事件和事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2084">The following code example shows one of the many uses of the <xref:System.Windows.Forms.Control.Click> event and event handler.</span></span>  
  
 [!code-cpp[Control.FindForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.FindForm/CPP/form1.cpp#1)]
 [!code-csharp[Control.FindForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.FindForm/CS/form1.cs#1)]
 [!code-vb[Control.FindForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.FindForm/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2085">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2085">When overriding <see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.Click" />
      </Docs>
    </Member>
    <Member MemberName="OnClientSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnClientSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClientSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClientSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClientSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClientSizeChanged : EventArgs -&gt; unit&#xA;override this.OnClientSizeChanged : EventArgs -&gt; unit" Usage="control.OnClientSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2086">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2086">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2087">引发 <see cref="E:System.Windows.Forms.Control.ClientSizeChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2087">Raises the <see cref="E:System.Windows.Forms.Control.ClientSizeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2088">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2088">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2089">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2089">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2090"><xref:System.Windows.Forms.Control.OnClientSizeChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2090">The <xref:System.Windows.Forms.Control.OnClientSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2091">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2091">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2092">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2092">When overriding <see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenuChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenuChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenuChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenuChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContextMenuChanged : EventArgs -&gt; unit&#xA;override this.OnContextMenuChanged : EventArgs -&gt; unit" Usage="control.OnContextMenuChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2093">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2093">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2094">引发 <see cref="E:System.Windows.Forms.Control.ContextMenuChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2094">Raises the <see cref="E:System.Windows.Forms.Control.ContextMenuChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2095">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2095">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2096">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2096">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2097"><xref:System.Windows.Forms.Control.OnContextMenuChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2097">The <xref:System.Windows.Forms.Control.OnContextMenuChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2098">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2098">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2099">下面的代码示例是属于引发事件的方法时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2099">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-2100"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式`On` *PropertyName* `Changed`的引发相应*PropertyName* `Changed`事件时*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2100">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-2101">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2101">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2102">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2102">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2103">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2103">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2104">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2104">When overriding <see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.ContextMenuChanged" />
        <altmember cref="P:System.Windows.Forms.Control.ContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuStripChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenuStripChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenuStripChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenuStripChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenuStripChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContextMenuStripChanged : EventArgs -&gt; unit&#xA;override this.OnContextMenuStripChanged : EventArgs -&gt; unit" Usage="control.OnContextMenuStripChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2105">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2105">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2106">引发 <see cref="E:System.Windows.Forms.Control.ContextMenuStripChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2106">Raises the <see cref="E:System.Windows.Forms.Control.ContextMenuStripChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2107">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2107">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2108">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2108">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2109"><xref:System.Windows.Forms.Control.OnContextMenuStripChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2109">The <xref:System.Windows.Forms.Control.OnContextMenuStripChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2110">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2110">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2111">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2111">When overriding <see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnControlAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnControlAdded (System.Windows.Forms.ControlEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnControlAdded(class System.Windows.Forms.ControlEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnControlAdded (e As ControlEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnControlAdded(System::Windows::Forms::ControlEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnControlAdded : System.Windows.Forms.ControlEventArgs -&gt; unit&#xA;override this.OnControlAdded : System.Windows.Forms.ControlEventArgs -&gt; unit" Usage="control.OnControlAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ControlEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2112">包含事件数据的 <see cref="T:System.Windows.Forms.ControlEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2112">A <see cref="T:System.Windows.Forms.ControlEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2113">引发 <see cref="E:System.Windows.Forms.Control.ControlAdded" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2113">Raises the <see cref="E:System.Windows.Forms.Control.ControlAdded" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2114">子控件添加到控件时调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2114">Called when a child control is added to the control.</span></span>  
  
 <span data-ttu-id="3d62e-2115">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2115">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2116">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2116">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2117"><xref:System.Windows.Forms.Control.OnControlAdded%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2117">The <xref:System.Windows.Forms.Control.OnControlAdded%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2118">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2118">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2119">下面的代码示例使用<xref:System.Windows.Forms.Control.ControlAdded>控件添加到窗体和显示名称中添加的控件<xref:System.Windows.Forms.MessageBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2119">The following code example uses <xref:System.Windows.Forms.Control.ControlAdded> to add a control to a form and displays the name of the added control in a <xref:System.Windows.Forms.MessageBox>.</span></span>  
  
 [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]
 [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]
 [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2120">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2120">When overriding <see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.ControlAdded" />
      </Docs>
    </Member>
    <Member MemberName="OnControlRemoved">
      <MemberSignature Language="C#" Value="protected virtual void OnControlRemoved (System.Windows.Forms.ControlEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnControlRemoved(class System.Windows.Forms.ControlEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnControlRemoved (e As ControlEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnControlRemoved(System::Windows::Forms::ControlEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnControlRemoved : System.Windows.Forms.ControlEventArgs -&gt; unit&#xA;override this.OnControlRemoved : System.Windows.Forms.ControlEventArgs -&gt; unit" Usage="control.OnControlRemoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ControlEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2121">包含事件数据的 <see cref="T:System.Windows.Forms.ControlEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2121">A <see cref="T:System.Windows.Forms.ControlEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2122">引发 <see cref="E:System.Windows.Forms.Control.ControlRemoved" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2122">Raises the <see cref="E:System.Windows.Forms.Control.ControlRemoved" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2123">当从控件中移除子控件时调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2123">Called when a child control is removed from the control.</span></span>  
  
 <span data-ttu-id="3d62e-2124">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2124">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2125">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2125">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2126"><xref:System.Windows.Forms.Control.OnControlRemoved%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2126">The <xref:System.Windows.Forms.Control.OnControlRemoved%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2127">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2127">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2128">下面的代码示例使用<xref:System.Windows.Forms.Control.ControlRemoved>若要从窗体中移除的控件，并显示中移除的控件名称<xref:System.Windows.Forms.MessageBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2128">The following code example uses <xref:System.Windows.Forms.Control.ControlRemoved> to remove a control from a form and displays the name of the removed control in a <xref:System.Windows.Forms.MessageBox>.</span></span>  
  
 [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]
 [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]
 [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2129">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2129">When overriding <see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.ControlRemoved" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateControl">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreateControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnCreateControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreateControl ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreateControl();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateControl : unit -&gt; unit&#xA;override this.OnCreateControl : unit -&gt; unit" Usage="control.OnCreateControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-2130">引发 <see cref="M:System.Windows.Forms.Control.CreateControl" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2130">Raises the <see cref="M:System.Windows.Forms.Control.CreateControl" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2131"><xref:System.Windows.Forms.Control.OnCreateControl%2A>首次创建控件时调用方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2131">The <xref:System.Windows.Forms.Control.OnCreateControl%2A> method is called when the control is first created.</span></span>  
  
 <span data-ttu-id="3d62e-2132"><xref:System.Windows.Forms.Control.OnCreateControl%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2132">The <xref:System.Windows.Forms.Control.OnCreateControl%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2133">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2133">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2134">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnCreateControl" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnCreateControl" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2134">When overriding <see cref="M:System.Windows.Forms.Control.OnCreateControl" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnCreateControl" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
      </Docs>
    </Member>
    <Member MemberName="OnCursorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCursorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCursorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCursorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCursorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCursorChanged : EventArgs -&gt; unit&#xA;override this.OnCursorChanged : EventArgs -&gt; unit" Usage="control.OnCursorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2135">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2135">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2136">引发 <see cref="E:System.Windows.Forms.Control.CursorChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2136">Raises the <see cref="E:System.Windows.Forms.Control.CursorChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2137">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2137">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2138">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2138">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2139"><xref:System.Windows.Forms.Control.OnCursorChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2139">The <xref:System.Windows.Forms.Control.OnCursorChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2140">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2140">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2141">下面的代码示例是属于引发事件的方法时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2141">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-2142"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式`On` *PropertyName* `Changed`的引发相应*PropertyName* `Changed`事件时*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2142">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-2143">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2143">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2144">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2144">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2145">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2145">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2146">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2146">When overriding <see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.CursorChanged" />
        <altmember cref="P:System.Windows.Forms.Control.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="OnDockChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDockChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDockChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDockChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDockChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDockChanged : EventArgs -&gt; unit&#xA;override this.OnDockChanged : EventArgs -&gt; unit" Usage="control.OnDockChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2147">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2147">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2148">引发 <see cref="E:System.Windows.Forms.Control.DockChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2148">Raises the <see cref="E:System.Windows.Forms.Control.DockChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2149">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2149">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2150">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2150">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2151"><xref:System.Windows.Forms.Control.OnDockChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2151">The <xref:System.Windows.Forms.Control.OnDockChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2152">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2152">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2153">下面的代码示例是属于引发事件的方法时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2153">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-2154"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式`On` *PropertyName* `Changed`的引发相应*PropertyName* `Changed`事件时*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2154">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-2155">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2155">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2156">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2156">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2157">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2157">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2158">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2158">When overriding <see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.DockChanged" />
        <altmember cref="P:System.Windows.Forms.Control.Dock" />
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnDoubleClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDoubleClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDoubleClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDoubleClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDoubleClick : EventArgs -&gt; unit&#xA;override this.OnDoubleClick : EventArgs -&gt; unit" Usage="control.OnDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2159">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2159">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2160">引发 <see cref="E:System.Windows.Forms.Control.DoubleClick" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2160">Raises the <see cref="E:System.Windows.Forms.Control.DoubleClick" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2161">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2161">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2162">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2162">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2163"><xref:System.Windows.Forms.Control.OnDoubleClick%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2163">The <xref:System.Windows.Forms.Control.OnDoubleClick%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2164">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2164">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2165">下面的代码示例使用<xref:System.Windows.Forms.Control.DoubleClick>的事件<xref:System.Windows.Forms.ListBox>中列出的文本文件加载<xref:System.Windows.Forms.ListBox>到<xref:System.Windows.Forms.TextBox>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2165">The following code example uses the <xref:System.Windows.Forms.Control.DoubleClick> event of a <xref:System.Windows.Forms.ListBox> to load text files listed in the <xref:System.Windows.Forms.ListBox> into a <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Control.DoubleClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.DoubleClick/CPP/form1.cpp#1)]
 [!code-csharp[Control.DoubleClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.DoubleClick/CS/form1.cs#1)]
 [!code-vb[Control.DoubleClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.DoubleClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2166">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2166">When overriding <see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.DoubleClick" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChangedAfterParent">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChangedAfterParent (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChangedAfterParent(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChangedAfterParent (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChangedAfterParent(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChangedAfterParent : EventArgs -&gt; unit&#xA;override this.OnDpiChangedAfterParent : EventArgs -&gt; unit" Usage="control.OnDpiChangedAfterParent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2167">包含事件数据的 <see cref="T:System.Windows.Forms.DpiChangedEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2167">An <see cref="T:System.Windows.Forms.DpiChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2168">引发 <see cref="E:System.Windows.Forms.Control.DpiChangedAfterParent" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2168">Raises the <see cref="E:System.Windows.Forms.Control.DpiChangedAfterParent" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDpiChangedBeforeParent">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChangedBeforeParent (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChangedBeforeParent(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChangedBeforeParent (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChangedBeforeParent(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChangedBeforeParent : EventArgs -&gt; unit&#xA;override this.OnDpiChangedBeforeParent : EventArgs -&gt; unit" Usage="control.OnDpiChangedBeforeParent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2169">包含事件数据的 <see cref="T:System.Windows.Forms.DpiChangedEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2169">An <see cref="T:System.Windows.Forms.DpiChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2170">引发 <see cref="E:System.Windows.Forms.Control.DpiChangedBeforeParent" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2170">Raises the <see cref="E:System.Windows.Forms.Control.DpiChangedBeforeParent" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDragDrop (System.Windows.Forms.DragEventArgs drgevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragDrop(class System.Windows.Forms.DragEventArgs drgevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragDrop (drgevent As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragDrop(System::Windows::Forms::DragEventArgs ^ drgevent);" />
      <MemberSignature Language="F#" Value="abstract member OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="control.OnDragDrop drgevent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragDrop(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgevent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="drgevent">
          <span data-ttu-id="3d62e-2171">包含事件数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2171">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2172">引发 <see cref="E:System.Windows.Forms.Control.DragDrop" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2172">Raises the <see cref="E:System.Windows.Forms.Control.DragDrop" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2173">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2173">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2174">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2174">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2175"><xref:System.Windows.Forms.Control.OnDragDrop%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2175">The <xref:System.Windows.Forms.Control.OnDragDrop%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2176">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2176">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2177">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2177">When overriding <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Windows.Forms.DragEventArgs drgevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.Forms.DragEventArgs drgevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragEnter (drgevent As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragEnter(System::Windows::Forms::DragEventArgs ^ drgevent);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="control.OnDragEnter drgevent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragEnter(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgevent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="drgevent">
          <span data-ttu-id="3d62e-2178">包含事件数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2178">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2179">引发 <see cref="E:System.Windows.Forms.Control.DragEnter" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2179">Raises the <see cref="E:System.Windows.Forms.Control.DragEnter" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2180">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2180">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2181">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2181">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2182"><xref:System.Windows.Forms.Control.OnDragEnter%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2182">The <xref:System.Windows.Forms.Control.OnDragEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2183">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2183">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2184">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2184">When overriding <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : EventArgs -&gt; unit&#xA;override this.OnDragLeave : EventArgs -&gt; unit" Usage="control.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragLeave(System.EventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2185">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2185">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2186">引发 <see cref="E:System.Windows.Forms.Control.DragLeave" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2186">Raises the <see cref="E:System.Windows.Forms.Control.DragLeave" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2187">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2187">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2188">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2188">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2189"><xref:System.Windows.Forms.Control.OnDragLeave%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2189">The <xref:System.Windows.Forms.Control.OnDragLeave%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2190">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2190">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2191">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2191">When overriding <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Windows.Forms.DragEventArgs drgevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Windows.Forms.DragEventArgs drgevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragOver (drgevent As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragOver(System::Windows::Forms::DragEventArgs ^ drgevent);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="control.OnDragOver drgevent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragOver(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgevent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="drgevent">
          <span data-ttu-id="3d62e-2192">包含事件数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2192">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2193">引发 <see cref="E:System.Windows.Forms.Control.DragOver" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2193">Raises the <see cref="E:System.Windows.Forms.Control.DragOver" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2194">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2194">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2195">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2195">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2196"><xref:System.Windows.Forms.Control.OnDragOver%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2196">The <xref:System.Windows.Forms.Control.OnDragOver%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2197">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2197">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2198">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2198">When overriding <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEnabledChanged : EventArgs -&gt; unit&#xA;override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="control.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2199">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2199">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2200">引发 <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2200">Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2201">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2201">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2202">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2202">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2203"><xref:System.Windows.Forms.Control.OnEnabledChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2203">The <xref:System.Windows.Forms.Control.OnEnabledChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2204">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2204">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2205">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2205">When overriding <see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.EnabledChanged" />
        <altmember cref="P:System.Windows.Forms.Control.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEnter : EventArgs -&gt; unit&#xA;override this.OnEnter : EventArgs -&gt; unit" Usage="control.OnEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2206">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2206">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2207">引发 <see cref="E:System.Windows.Forms.Control.Enter" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2207">Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2208">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2208">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2209">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2209">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2210"><xref:System.Windows.Forms.Control.OnEnter%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2210">The <xref:System.Windows.Forms.Control.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2211">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2211">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2212">下面的代码示例使用<xref:System.Windows.Forms.Control.Enter>事件以更改的前景色和背景颜色<xref:System.Windows.Forms.TextBox>在特定情况下。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2212">The following code example uses the <xref:System.Windows.Forms.Control.Enter> event to change the foreground and background colors of a <xref:System.Windows.Forms.TextBox> under particular conditions.</span></span>  
  
 [!code-cpp[Control.Enter#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Enter/CPP/form1.cpp#1)]
 [!code-csharp[Control.Enter#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Enter/CS/form1.cs#1)]
 [!code-vb[Control.Enter#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Enter/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2213">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2213">When overriding <see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.Enter" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFontChanged : EventArgs -&gt; unit&#xA;override this.OnFontChanged : EventArgs -&gt; unit" Usage="control.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2214">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2214">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2215">引发 <see cref="E:System.Windows.Forms.Control.FontChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2215">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2216">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2216">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2217">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2217">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2218"><xref:System.Windows.Forms.Control.OnFontChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2218">The <xref:System.Windows.Forms.Control.OnFontChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2219">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2219">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2220">下面的代码示例是属于引发事件的方法时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2220">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-2221"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式`On` *PropertyName* `Changed`的引发相应*PropertyName* `Changed`事件时*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2221">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-2222">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2222">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2223">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2223">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2224">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2224">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2225">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2225">When overriding <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.FontChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnForeColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnForeColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnForeColorChanged : EventArgs -&gt; unit&#xA;override this.OnForeColorChanged : EventArgs -&gt; unit" Usage="control.OnForeColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2226">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2226">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2227">引发 <see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2227">Raises the <see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2228">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2228">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2229">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2229">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2230"><xref:System.Windows.Forms.Control.OnForeColorChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2230">The <xref:System.Windows.Forms.Control.OnForeColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2231">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2231">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2232">下面的代码示例是属于引发事件的方法时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2232">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-2233"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式`On` *PropertyName* `Changed`的引发相应*PropertyName* `Changed`事件时*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2233">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-2234">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2234">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2235">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2235">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2236">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2236">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2237">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2237">When overriding <see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.ForeColorChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs gfbevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.Forms.GiveFeedbackEventArgs gfbevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGiveFeedback (gfbevent As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGiveFeedback(System::Windows::Forms::GiveFeedbackEventArgs ^ gfbevent);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit" Usage="control.OnGiveFeedback gfbevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gfbevent" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="gfbevent">
          <span data-ttu-id="3d62e-2238">包含事件数据的 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2238">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2239">引发 <see cref="E:System.Windows.Forms.Control.GiveFeedback" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2239">Raises the <see cref="E:System.Windows.Forms.Control.GiveFeedback" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2240">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2240">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2241">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2241">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2242"><xref:System.Windows.Forms.Control.OnGiveFeedback%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2242">The <xref:System.Windows.Forms.Control.OnGiveFeedback%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2243">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2243">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2244">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2244">When overriding <see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotFocus : EventArgs -&gt; unit&#xA;override this.OnGotFocus : EventArgs -&gt; unit" Usage="control.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2245">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2245">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2246">引发 <see cref="E:System.Windows.Forms.Control.GotFocus" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2246">Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2247">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2247">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2248">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2248">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2249"><xref:System.Windows.Forms.Control.OnGotFocus%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2249">The <xref:System.Windows.Forms.Control.OnGotFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2250">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2250">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2251">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2251">When overriding <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHandleCreated : EventArgs -&gt; unit&#xA;override this.OnHandleCreated : EventArgs -&gt; unit" Usage="control.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2252">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2252">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2253">引发 <see cref="E:System.Windows.Forms.Control.HandleCreated" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2253">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2254">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2254">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2255">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2255">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2256"><xref:System.Windows.Forms.Control.OnHandleCreated%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2256">The <xref:System.Windows.Forms.Control.OnHandleCreated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2257">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2257">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2258">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2258">When overriding <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.HandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected virtual void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHandleDestroyed : EventArgs -&gt; unit&#xA;override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="control.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2259">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2259">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2260">引发 <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2260">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2261">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2261">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2262">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2262">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2263"><xref:System.Windows.Forms.Control.OnHandleDestroyed%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2263">The <xref:System.Windows.Forms.Control.OnHandleDestroyed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2264">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2264">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2265">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2265">When overriding <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.HandleDestroyed" />
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="OnHelpRequested">
      <MemberSignature Language="C#" Value="protected virtual void OnHelpRequested (System.Windows.Forms.HelpEventArgs hevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHelpRequested(class System.Windows.Forms.HelpEventArgs hevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHelpRequested (hevent As HelpEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHelpRequested(System::Windows::Forms::HelpEventArgs ^ hevent);" />
      <MemberSignature Language="F#" Value="abstract member OnHelpRequested : System.Windows.Forms.HelpEventArgs -&gt; unit&#xA;override this.OnHelpRequested : System.Windows.Forms.HelpEventArgs -&gt; unit" Usage="control.OnHelpRequested hevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hevent" Type="System.Windows.Forms.HelpEventArgs" />
      </Parameters>
      <Docs>
        <param name="hevent">
          <span data-ttu-id="3d62e-2266">包含事件数据的 <see cref="T:System.Windows.Forms.HelpEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2266">A <see cref="T:System.Windows.Forms.HelpEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2267">引发 <see cref="E:System.Windows.Forms.Control.HelpRequested" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2267">Raises the <see cref="E:System.Windows.Forms.Control.HelpRequested" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2268">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2268">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2269">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2269">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2270"><xref:System.Windows.Forms.Control.OnHelpRequested%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2270">The <xref:System.Windows.Forms.Control.OnHelpRequested%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2271">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2271">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2272">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2272">When overriding <see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.HelpRequested" />
      </Docs>
    </Member>
    <Member MemberName="OnImeModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnImeModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnImeModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnImeModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnImeModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnImeModeChanged : EventArgs -&gt; unit&#xA;override this.OnImeModeChanged : EventArgs -&gt; unit" Usage="control.OnImeModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2273">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2273">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2274">引发 <see cref="E:System.Windows.Forms.Control.ImeModeChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2274">Raises the <see cref="E:System.Windows.Forms.Control.ImeModeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2275">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2275">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2276">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2276">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2277"><xref:System.Windows.Forms.Control.OnImeModeChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2277">The <xref:System.Windows.Forms.Control.OnImeModeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2278">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2278">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2279">下面的代码示例是属于引发事件的方法时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2279">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-2280"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式`On` *PropertyName* `Changed`的引发相应*PropertyName* `Changed`事件时*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2280">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-2281">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2281">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2282">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2282">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2283">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2283">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2284">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2284">When overriding <see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.ImeModeChanged" />
        <altmember cref="P:System.Windows.Forms.Control.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="OnInvalidated">
      <MemberSignature Language="C#" Value="protected virtual void OnInvalidated (System.Windows.Forms.InvalidateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInvalidated(class System.Windows.Forms.InvalidateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInvalidated (e As InvalidateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInvalidated(System::Windows::Forms::InvalidateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInvalidated : System.Windows.Forms.InvalidateEventArgs -&gt; unit&#xA;override this.OnInvalidated : System.Windows.Forms.InvalidateEventArgs -&gt; unit" Usage="control.OnInvalidated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.InvalidateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2285">包含事件数据的 <see cref="T:System.Windows.Forms.InvalidateEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2285">An <see cref="T:System.Windows.Forms.InvalidateEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2286">引发 <see cref="E:System.Windows.Forms.Control.Invalidated" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2286">Raises the <see cref="E:System.Windows.Forms.Control.Invalidated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2287">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2287">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2288">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2288">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2289"><xref:System.Windows.Forms.Control.OnInvalidated%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2289">The <xref:System.Windows.Forms.Control.OnInvalidated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2290">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2290">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2291">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2291">When overriding <see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.Invalidated" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="control.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2292">包含事件数据的 <see cref="T:System.Windows.Forms.KeyEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2292">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2293">引发 <see cref="E:System.Windows.Forms.Control.KeyDown" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2293">Raises the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2294">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2294">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2295">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2295">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2296"><xref:System.Windows.Forms.Control.OnKeyDown%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2296">The <xref:System.Windows.Forms.Control.OnKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2297">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2297">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2298">下面的代码示例使用<xref:System.Windows.Forms.Control.KeyDown>事件来确定的字符输入到控件的类型。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2298">The following code example uses the <xref:System.Windows.Forms.Control.KeyDown> event to determine the type of character entered into the control.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2299">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2299">When overriding <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyPress (e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyPress : System.Windows.Forms.KeyPressEventArgs -&gt; unit&#xA;override this.OnKeyPress : System.Windows.Forms.KeyPressEventArgs -&gt; unit" Usage="control.OnKeyPress e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2300">包含事件数据的 <see cref="T:System.Windows.Forms.KeyPressEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2300">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2301">引发 <see cref="E:System.Windows.Forms.Control.KeyPress" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2301">Raises the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2302">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2302">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2303">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2303">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2304"><xref:System.Windows.Forms.Control.OnKeyPress%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2304">The <xref:System.Windows.Forms.Control.OnKeyPress%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2305">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2305">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2306">下面的代码示例使用<xref:System.Windows.Forms.Control.KeyPress>事件，以防止字符从输入控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2306">The following code example uses the <xref:System.Windows.Forms.Control.KeyPress> event to prevent characters from entering the control.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2307">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2307">When overriding <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="control.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2308">包含事件数据的 <see cref="T:System.Windows.Forms.KeyEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2308">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2309">引发 <see cref="E:System.Windows.Forms.Control.KeyUp" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2309">Raises the <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2310">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2310">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2311">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2311">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2312"><xref:System.Windows.Forms.Control.OnKeyUp%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2312">The <xref:System.Windows.Forms.Control.OnKeyUp%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2313">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2313">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2314">下面的代码示例使用<xref:System.Windows.Forms.Control.KeyUp>具有事件<xref:System.Windows.Forms.Help>类，以显示给用户的弹出样式帮助。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2314">The following code example uses the <xref:System.Windows.Forms.Control.KeyUp> event with the <xref:System.Windows.Forms.Help> class to display pop-up style help to the user.</span></span>  
  
 [!code-cpp[Control.KeyUp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyUp/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyUp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyUp/CS/form1.cs#1)]
 [!code-vb[Control.KeyUp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyUp/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2315">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2315">When overriding <see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected virtual void OnLayout (System.Windows.Forms.LayoutEventArgs levent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs levent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLayout (levent As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLayout(System::Windows::Forms::LayoutEventArgs ^ levent);" />
      <MemberSignature Language="F#" Value="abstract member OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit&#xA;override this.OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit" Usage="control.OnLayout levent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="levent" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="levent">
          <span data-ttu-id="3d62e-2316">包含事件数据的 <see cref="T:System.Windows.Forms.LayoutEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2316">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2317">引发 <see cref="E:System.Windows.Forms.Control.Layout" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2317">Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2318">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2318">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2319">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2319">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2320"><xref:System.Windows.Forms.Control.OnLayout%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2320">The <xref:System.Windows.Forms.Control.OnLayout%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2321">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2321">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2322">重写时<see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" />在派生类中，请务必调用基类的<see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" />方法以便在已注册的委托接收事件并用于典型停靠和锚定函数来处理。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2322">When overriding <see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> method so that registered delegates receive the event and for typical docking and anchoring functions to work.</span>
            </span>
            <span data-ttu-id="3d62e-2323">派生的类应重写此方法以执行任何自定义布局逻辑。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2323">Derived classes should override this method to do any custom layout logic.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="OnLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLeave : EventArgs -&gt; unit&#xA;override this.OnLeave : EventArgs -&gt; unit" Usage="control.OnLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2324">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2324">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2325">引发 <see cref="E:System.Windows.Forms.Control.Leave" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2325">Raises the <see cref="E:System.Windows.Forms.Control.Leave" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2326">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2326">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2327">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2327">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2328"><xref:System.Windows.Forms.Control.OnLeave%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2328">The <xref:System.Windows.Forms.Control.OnLeave%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2329">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2329">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2330">下面的代码示例使用<xref:System.Windows.Forms.Control.Leave>事件以将控件重置为以前的状态。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2330">The following code example uses the <xref:System.Windows.Forms.Control.Leave> event to reset a control to its former state.</span></span>  
  
 [!code-cpp[Control.Enter#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Enter/CPP/form1.cpp#1)]
 [!code-csharp[Control.Enter#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Enter/CS/form1.cs#1)]
 [!code-vb[Control.Enter#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Enter/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2331">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2331">When overriding <see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.Leave" />
      </Docs>
    </Member>
    <Member MemberName="OnLocationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLocationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLocationChanged : EventArgs -&gt; unit&#xA;override this.OnLocationChanged : EventArgs -&gt; unit" Usage="control.OnLocationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2332">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2332">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2333">引发 <see cref="E:System.Windows.Forms.Control.LocationChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2333">Raises the <see cref="E:System.Windows.Forms.Control.LocationChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2334">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2334">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2335">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2335">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2336"><xref:System.Windows.Forms.Control.OnLocationChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2336">The <xref:System.Windows.Forms.Control.OnLocationChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2337">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2337">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2338">下面的代码示例是属于引发事件的方法时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2338">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-2339"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式`On` *PropertyName* `Changed`的引发相应*PropertyName* `Changed`事件时*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2339">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName* `Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-2340">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2340">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2341">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2341">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2342">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2342">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2343">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2343">When overriding <see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.LocationChanged" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostFocus : EventArgs -&gt; unit&#xA;override this.OnLostFocus : EventArgs -&gt; unit" Usage="control.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2344">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2344">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2345">引发 <see cref="E:System.Windows.Forms.Control.LostFocus" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2345">Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2346">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2346">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2347">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2347">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2348"><xref:System.Windows.Forms.Control.OnLostFocus%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2348">The <xref:System.Windows.Forms.Control.OnLostFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2349">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2349">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2350">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2350">When overriding <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnMarginChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMarginChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMarginChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMarginChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMarginChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMarginChanged : EventArgs -&gt; unit&#xA;override this.OnMarginChanged : EventArgs -&gt; unit" Usage="control.OnMarginChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2351">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2351">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2352">引发 <see cref="E:System.Windows.Forms.Control.MarginChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2352">Raises the <see cref="E:System.Windows.Forms.Control.MarginChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2353">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2353">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2354">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2354">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2355"><xref:System.Windows.Forms.Control.OnMarginChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2355">The <xref:System.Windows.Forms.Control.OnMarginChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2356">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2356">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2357">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2357">When overriding <see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseCaptureChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseCaptureChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseCaptureChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseCaptureChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseCaptureChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseCaptureChanged : EventArgs -&gt; unit&#xA;override this.OnMouseCaptureChanged : EventArgs -&gt; unit" Usage="control.OnMouseCaptureChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2358">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2358">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2359">引发 <see cref="E:System.Windows.Forms.Control.MouseCaptureChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2359">Raises the <see cref="E:System.Windows.Forms.Control.MouseCaptureChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2360">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2360">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2361">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2361">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2362"><xref:System.Windows.Forms.Control.OnMouseCaptureChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2362">The <xref:System.Windows.Forms.Control.OnMouseCaptureChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2363">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2363">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2364">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2364">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseClick (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseClick(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseClick : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseClick : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2365">包含事件数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2365">An <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2366">引发 <see cref="E:System.Windows.Forms.Control.MouseClick" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2366">Raises the <see cref="E:System.Windows.Forms.Control.MouseClick" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2367">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2367">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2368">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2368">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2369"><xref:System.Windows.Forms.Control.OnMouseClick%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2369">The <xref:System.Windows.Forms.Control.OnMouseClick%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2370">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2370">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2371">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2371">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDoubleClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDoubleClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDoubleClick (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDoubleClick(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDoubleClick : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseDoubleClick : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2372">包含事件数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2372">An <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2373">引发 <see cref="E:System.Windows.Forms.Control.MouseDoubleClick" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2373">Raises the <see cref="E:System.Windows.Forms.Control.MouseDoubleClick" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2374">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2374">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2375">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2375">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2376"><xref:System.Windows.Forms.Control.OnMouseDoubleClick%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2376">The <xref:System.Windows.Forms.Control.OnMouseDoubleClick%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2377">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2377">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2378">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2378">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2379">包含事件数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2379">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2380">引发 <see cref="E:System.Windows.Forms.Control.MouseDown" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2380">Raises the <see cref="E:System.Windows.Forms.Control.MouseDown" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2381">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2381">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2382">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2382">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2383"><xref:System.Windows.Forms.Control.OnMouseDown%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2383">The <xref:System.Windows.Forms.Control.OnMouseDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2384">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2384">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2385">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2385">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.MouseDown" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : EventArgs -&gt; unit&#xA;override this.OnMouseEnter : EventArgs -&gt; unit" Usage="control.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2386">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2386">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2387">引发 <see cref="E:System.Windows.Forms.Control.MouseEnter" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2387">Raises the <see cref="E:System.Windows.Forms.Control.MouseEnter" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2388">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2388">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2389">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2389">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2390"><xref:System.Windows.Forms.Control.OnMouseEnter%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2390">The <xref:System.Windows.Forms.Control.OnMouseEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2391">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2391">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2392">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2392">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.MouseEnter" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseHover (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseHover(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseHover (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseHover(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseHover : EventArgs -&gt; unit&#xA;override this.OnMouseHover : EventArgs -&gt; unit" Usage="control.OnMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2393">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2393">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2394">引发 <see cref="E:System.Windows.Forms.Control.MouseHover" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2394">Raises the <see cref="E:System.Windows.Forms.Control.MouseHover" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2395">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2395">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2396">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2396">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2397"><xref:System.Windows.Forms.Control.OnMouseHover%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2397">The <xref:System.Windows.Forms.Control.OnMouseHover%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2398">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2398">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2399">下面的代码示例演示如何重写<xref:System.Windows.Forms.Control.OnMouseHover%2A>和<xref:System.Windows.Forms.Control.OnMouseMove%2A>派生类中的方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2399">The following code example demonstrates how to override the <xref:System.Windows.Forms.Control.OnMouseHover%2A> and <xref:System.Windows.Forms.Control.OnMouseMove%2A> methods in a derived class.</span></span> <span data-ttu-id="3d62e-2400">若要运行该示例，以下代码粘贴到新窗体中并将此类，形成同一文件中，窗体的后面。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2400">To run the example, paste the following code in a new form and paste this class, forming the same file, after the form.</span></span> <span data-ttu-id="3d62e-2401">添加的按钮类型的`FunButton`到窗体。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2401">Add a button of type `FunButton` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2402">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2402">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.MouseHover" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : EventArgs -&gt; unit&#xA;override this.OnMouseLeave : EventArgs -&gt; unit" Usage="control.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2403">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2403">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2404">引发 <see cref="E:System.Windows.Forms.Control.MouseLeave" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2404">Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2405">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2405">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2406">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2406">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2407"><xref:System.Windows.Forms.Control.OnMouseLeave%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2407">The <xref:System.Windows.Forms.Control.OnMouseLeave%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2408">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2408">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2409">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2409">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.MouseLeave" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2410">包含事件数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2410">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2411">引发 <see cref="E:System.Windows.Forms.Control.MouseMove" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2411">Raises the <see cref="E:System.Windows.Forms.Control.MouseMove" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2412">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2412">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2413">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2413">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2414"><xref:System.Windows.Forms.Control.OnMouseMove%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2414">The <xref:System.Windows.Forms.Control.OnMouseMove%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2415">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2415">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2416">下面的代码示例演示如何重写<xref:System.Windows.Forms.Control.OnMouseHover%2A>和<xref:System.Windows.Forms.Control.OnMouseMove%2A>派生类中的方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2416">The following code example demonstrates how to override the <xref:System.Windows.Forms.Control.OnMouseHover%2A> and <xref:System.Windows.Forms.Control.OnMouseMove%2A> methods in a derived class.</span></span> <span data-ttu-id="3d62e-2417">若要运行该示例，以下代码粘贴到新窗体中并将此类，形成同一文件中，窗体的后面。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2417">To run the example, paste the following code in a new form and paste this class, forming the same file, after the form.</span></span> <span data-ttu-id="3d62e-2418">添加的按钮类型的`FunButton`到窗体。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2418">Add a button of type `FunButton` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2419">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2419">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.MouseMove" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2420">包含事件数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2420">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2421">引发 <see cref="E:System.Windows.Forms.Control.MouseUp" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2421">Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2422">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2422">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2423">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2423">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2424"><xref:System.Windows.Forms.Control.OnMouseUp%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2424">The <xref:System.Windows.Forms.Control.OnMouseUp%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2425">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2425">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2426">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2426">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseWheel (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseWheel (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseWheel(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseWheel : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseWheel : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2427">包含事件数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2427">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2428">引发 <see cref="E:System.Windows.Forms.Control.MouseWheel" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2428">Raises the <see cref="E:System.Windows.Forms.Control.MouseWheel" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2429">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2429">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2430">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2430">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2431"><xref:System.Windows.Forms.Control.OnMouseWheel%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2431">The <xref:System.Windows.Forms.Control.OnMouseWheel%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2432">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2432">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2433">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2433">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.MouseWheel" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMove (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMove(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMove (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMove(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMove : EventArgs -&gt; unit&#xA;override this.OnMove : EventArgs -&gt; unit" Usage="control.OnMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2434">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2434">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2435">引发 <see cref="E:System.Windows.Forms.Control.Move" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2435">Raises the <see cref="E:System.Windows.Forms.Control.Move" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2436">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2436">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2437">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2437">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2438"><xref:System.Windows.Forms.Control.OnMove%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2438">The <xref:System.Windows.Forms.Control.OnMove%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2439">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2439">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2440">下面的代码示例使用<xref:System.Windows.Forms.Control.Move>事件，以显示窗体的标题栏上的屏幕坐标中的窗体的位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2440">The following code example uses the <xref:System.Windows.Forms.Control.Move> event to display the location of the form in screen coordinates on the caption bar of the form.</span></span>  
  
 [!code-cpp[Control.Move#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Move/CPP/form1.cpp#1)]
 [!code-csharp[Control.Move#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Move/CS/form1.cs#1)]
 [!code-vb[Control.Move#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Move/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2441">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2441">When overriding <see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.Move" />
      </Docs>
    </Member>
    <Member MemberName="OnNotifyMessage">
      <MemberSignature Language="C#" Value="protected virtual void OnNotifyMessage (System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNotifyMessage(valuetype System.Windows.Forms.Message m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNotifyMessage (m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNotifyMessage(System::Windows::Forms::Message m);" />
      <MemberSignature Language="F#" Value="abstract member OnNotifyMessage : System.Windows.Forms.Message -&gt; unit&#xA;override this.OnNotifyMessage : System.Windows.Forms.Message -&gt; unit" Usage="control.OnNotifyMessage m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="3d62e-2442">一个 <see cref="T:System.Windows.Forms.Message" />，它表示 Windows 消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2442">A <see cref="T:System.Windows.Forms.Message" /> that represents the Windows message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2443">向控件通知 Windows 消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2443">Notifies the control of Windows messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2444"><xref:System.Windows.Forms.Control.OnNotifyMessage%2A>仅当调用方法的控件`EnableNotifyMessage`中设置样式位<xref:System.Windows.Forms.ControlStyles>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2444">The <xref:System.Windows.Forms.Control.OnNotifyMessage%2A> method is called if the control's `EnableNotifyMessage` style bit is set in <xref:System.Windows.Forms.ControlStyles>.</span></span> <span data-ttu-id="3d62e-2445">`EnableNotifyMessage`设置中的样式<xref:System.Windows.Forms.ControlStyles>使得控件可以时得到通知<xref:System.Windows.Forms.Control.WndProc%2A>方法接收 Windows 消息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2445">The `EnableNotifyMessage` style in <xref:System.Windows.Forms.ControlStyles> enables the control to be notified when the <xref:System.Windows.Forms.Control.WndProc%2A> method receives a Windows message.</span></span> <span data-ttu-id="3d62e-2446">使用此方法，可以侦听的 Windows 消息而无需使其能够修改消息不完全受信任的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2446">With this method, semi-trusted controls can listen for Windows messages without enabling them to modify the message.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2447">重写时<see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" />派生类中调用基类的<see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" />方法不必要，因为没有初始实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2447">When overriding <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> in a derived class, calling the base class's <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> method is not necessary because there is no initial implementation.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPaddingChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPaddingChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaddingChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaddingChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaddingChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPaddingChanged : EventArgs -&gt; unit&#xA;override this.OnPaddingChanged : EventArgs -&gt; unit" Usage="control.OnPaddingChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2448">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2448">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2449">引发 <see cref="E:System.Windows.Forms.Control.PaddingChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2449">Raises the <see cref="E:System.Windows.Forms.Control.PaddingChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2450">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2450">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2451">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2451">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2452"><xref:System.Windows.Forms.Control.OnPaddingChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2452">The <xref:System.Windows.Forms.Control.OnPaddingChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2453">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2453">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2454">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2454">When overriding <see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit&#xA;override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2455">包含事件数据的 <see cref="T:System.Windows.Forms.PaintEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2455">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2456">引发 <see cref="E:System.Windows.Forms.Control.Paint" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2456">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2457">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2457">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2458">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2458">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2459"><xref:System.Windows.Forms.Control.OnPaint%2A>方法还可使派生的类处理事件，而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2459">The <xref:System.Windows.Forms.Control.OnPaint%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2460">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2460">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2461">下面的代码示例使用户将图像或图像文件拖到窗体，并将其显示在其删除的点。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2461">The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on which it is dropped.</span></span> <span data-ttu-id="3d62e-2462"><xref:System.Windows.Forms.Control.OnPaint%2A>方法被重写重绘每次绘制窗体的图像; 否则该映像将仅持续到下一步重新绘制。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2462">The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</span></span> <span data-ttu-id="3d62e-2463"><xref:System.Windows.Forms.Control.DragEnter>事件处理方法确定要拖动到窗体数据的类型，并提供适当的反馈。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2463">The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</span></span> <span data-ttu-id="3d62e-2464"><xref:System.Windows.Forms.Control.DragDrop>事件处理方法在窗体上显示图像，如果<xref:System.Drawing.Image>可以从数据创建。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2464">The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data.</span></span> <span data-ttu-id="3d62e-2465">因为<xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType>并<xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType>的值为屏幕坐标，该示例使用<xref:System.Windows.Forms.Control.PointToClient%2A>方法来将它们转换为客户端坐标。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2465">Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CPP/imagedrag.cpp#1)]
 [!code-csharp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CS/imagedrag.cs#1)]
 [!code-vb[Windows.Forms.Control.DragOperations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/VB/imagedrag.vb#1)]  
  
 [!code-cpp[Control.Paint#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Paint/CPP/form1.cpp#1)]
 [!code-csharp[Control.Paint#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Paint/CS/form1.cs#1)]
 [!code-vb[Control.Paint#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Paint/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2466">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2466">When overriding <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.Paint" />
      </Docs>
    </Member>
    <Member MemberName="OnPaintBackground">
      <MemberSignature Language="C#" Value="protected virtual void OnPaintBackground (System.Windows.Forms.PaintEventArgs pevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaintBackground(class System.Windows.Forms.PaintEventArgs pevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaintBackground (pevent As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaintBackground(System::Windows::Forms::PaintEventArgs ^ pevent);" />
      <MemberSignature Language="F#" Value="abstract member OnPaintBackground : System.Windows.Forms.PaintEventArgs -&gt; unit&#xA;override this.OnPaintBackground : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.OnPaintBackground pevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pevent" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="pevent">
          <span data-ttu-id="3d62e-2467">一个 <see cref="T:System.Windows.Forms.PaintEventArgs" />，其中包含有关要绘制的控件的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2467">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains information about the control to paint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2468">绘制控件的背景。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2468">Paints the background of the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2469"><xref:System.Windows.Forms.Control.OnPaintBackground%2A>方法启用派生的类来处理 Windows 背景擦除请求。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2469">The <xref:System.Windows.Forms.Control.OnPaintBackground%2A> method enables derived classes to handle Windows background erase requests.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2470">继承类应重写此方法以处理来自 windows 的擦除后台请求。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2470">Inheriting classes should override this method to handle the erase background request from windows.</span>
            </span>
            <span data-ttu-id="3d62e-2471">重写时<see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />派生类中它不需要调用基类的<see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2471">When overriding <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /> in a derived class it is not necessary to call the base class's <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnParentBackColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentBackColorChanged : EventArgs -&gt; unit&#xA;override this.OnParentBackColorChanged : EventArgs -&gt; unit" Usage="control.OnParentBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2472">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2472">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2473">当控件容器的 <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> 属性值更改时，将引发 <see cref="P:System.Windows.Forms.Control.BackColor" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2473">Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event when the <see cref="P:System.Windows.Forms.Control.BackColor" /> property value of the control's container changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2474">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2474">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2475">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2475">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2476"><xref:System.Windows.Forms.Control.OnParentBackColorChanged%2A>方法还可使派生的类处理事件，而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2476">The <xref:System.Windows.Forms.Control.OnParentBackColorChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2477">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2477">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2478">下面的代码示例是属于引发事件的方法时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2478">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-2479"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式`On` *PropertyName* `Changed`的引发相应*PropertyName* `Changed`事件时*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2479">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-2480">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2480">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2481">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2481">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2482">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2482">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2483">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2483">When overriding <see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.BackColorChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentBackgroundImageChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentBackgroundImageChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentBackgroundImageChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentBackgroundImageChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentBackgroundImageChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentBackgroundImageChanged : EventArgs -&gt; unit&#xA;override this.OnParentBackgroundImageChanged : EventArgs -&gt; unit" Usage="control.OnParentBackgroundImageChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2484">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2484">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2485">当控件容器的 <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> 属性值更改时，将引发 <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2485">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> event when the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property value of the control's container changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2486">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2486">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2487">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2487">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2488"><xref:System.Windows.Forms.Control.OnParentBackgroundImageChanged%2A>方法还可使派生的类处理事件，而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2488">The <xref:System.Windows.Forms.Control.OnParentBackgroundImageChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2489">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2489">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2490">下面的代码示例是属于引发事件的方法时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2490">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-2491"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式`On` *PropertyName* `Changed`的引发相应*PropertyName* `Changed`事件时*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2491">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-2492">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2492">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2493">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2493">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2494">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2494">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2495">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2495">When overriding <see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentBindingContextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentBindingContextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentBindingContextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentBindingContextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentBindingContextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentBindingContextChanged : EventArgs -&gt; unit&#xA;override this.OnParentBindingContextChanged : EventArgs -&gt; unit" Usage="control.OnParentBindingContextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2496">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2496">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2497">当控件容器的 <see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> 属性值更改时，将引发 <see cref="P:System.Windows.Forms.Control.BindingContext" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2497">Raises the <see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> event when the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property value of the control's container changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2498">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2498">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2499">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2499">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2500"><xref:System.Windows.Forms.Control.OnParentBindingContextChanged%2A>方法还可使派生的类处理事件，而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2500">The <xref:System.Windows.Forms.Control.OnParentBindingContextChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2501">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2501">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2502">下面的代码示例是属于引发事件的方法时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2502">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-2503"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式`On` *PropertyName* `Changed`的引发相应*PropertyName* `Changed`事件时*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2503">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-2504">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2504">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2505">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2505">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2506">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2506">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2507">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2507">When overriding <see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.BindingContextChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentChanged : EventArgs -&gt; unit&#xA;override this.OnParentChanged : EventArgs -&gt; unit" Usage="control.OnParentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2508">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2508">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2509">引发 <see cref="E:System.Windows.Forms.Control.ParentChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2509">Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2510">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2510">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2511">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2511">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2512"><xref:System.Windows.Forms.Control.OnParentChanged%2A>方法还可使派生的类处理事件，而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2512">The <xref:System.Windows.Forms.Control.OnParentChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2513">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2513">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2514">下面的代码示例是属于引发事件的方法时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2514">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-2515"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式`On` *PropertyName* `Changed`的引发相应*PropertyName* `Changed`事件时*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2515">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-2516">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2516">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2517">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2517">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2518">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2518">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2519">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2519">When overriding <see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.ParentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentCursorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentCursorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentCursorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentCursorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentCursorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentCursorChanged : EventArgs -&gt; unit&#xA;override this.OnParentCursorChanged : EventArgs -&gt; unit" Usage="control.OnParentCursorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2520">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2520">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2521">引发 <see cref="E:System.Windows.Forms.Control.CursorChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2521">Raises the <see cref="E:System.Windows.Forms.Control.CursorChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2522">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2522">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2523">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2523">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2524"><xref:System.Windows.Forms.Control.OnParentCursorChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2524">The <xref:System.Windows.Forms.Control.OnParentCursorChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2525">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2525">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2526">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2526">When overriding <see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnParentEnabledChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentEnabledChanged : EventArgs -&gt; unit&#xA;override this.OnParentEnabledChanged : EventArgs -&gt; unit" Usage="control.OnParentEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2527">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2527">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2528">当控件容器的 <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> 属性值更改时，将引发 <see cref="P:System.Windows.Forms.Control.Enabled" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2528">Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event when the <see cref="P:System.Windows.Forms.Control.Enabled" /> property value of the control's container changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2529">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2529">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2530">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2530">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2531"><xref:System.Windows.Forms.Control.OnParentEnabledChanged%2A>方法还可使派生的类处理事件，而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2531">The <xref:System.Windows.Forms.Control.OnParentEnabledChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2532">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2532">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2533">下面的代码示例是属于引发事件的方法时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2533">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-2534"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式`On` *PropertyName* `Changed`的引发相应*PropertyName* `Changed`事件时*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2534">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-2535">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2535">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2536">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2536">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2537">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2537">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2538">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2538">When overriding <see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.EnabledChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentFontChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentFontChanged : EventArgs -&gt; unit&#xA;override this.OnParentFontChanged : EventArgs -&gt; unit" Usage="control.OnParentFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2539">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2539">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2540">当控件容器的 <see cref="E:System.Windows.Forms.Control.FontChanged" /> 属性值更改时，将引发 <see cref="P:System.Windows.Forms.Control.Font" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2540">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event when the <see cref="P:System.Windows.Forms.Control.Font" /> property value of the control's container changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2541">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2541">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2542">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2542">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2543"><xref:System.Windows.Forms.Control.OnParentFontChanged%2A>方法还可使派生的类处理事件，而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2543">The <xref:System.Windows.Forms.Control.OnParentFontChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2544">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2544">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2545">下面的代码示例是属于引发事件的方法时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2545">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-2546"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式`On` *PropertyName* `Changed`的引发相应*PropertyName* `Changed`事件时*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2546">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-2547">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2547">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2548">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2548">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2549">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2549">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2550">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2550">When overriding <see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.FontChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentForeColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentForeColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentForeColorChanged : EventArgs -&gt; unit&#xA;override this.OnParentForeColorChanged : EventArgs -&gt; unit" Usage="control.OnParentForeColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2551">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2551">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2552">当控件容器的 <see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> 属性值更改时，将引发 <see cref="P:System.Windows.Forms.Control.ForeColor" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2552">Raises the <see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> event when the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property value of the control's container changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2553">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2553">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2554">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2554">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2555"><xref:System.Windows.Forms.Control.OnParentForeColorChanged%2A>方法还可使派生的类处理事件，而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2555">The <xref:System.Windows.Forms.Control.OnParentForeColorChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2556">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2556">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2557">下面的代码示例是属于引发事件的方法时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2557">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-2558"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式`On` *PropertyName* `Changed`的引发相应*PropertyName* `Changed`事件时*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2558">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-2559">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2559">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2560">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2560">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2561">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2561">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2562">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2562">When overriding <see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.ForeColorChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentRightToLeftChanged : EventArgs -&gt; unit&#xA;override this.OnParentRightToLeftChanged : EventArgs -&gt; unit" Usage="control.OnParentRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2563">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2563">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2564">当控件容器的 <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /> 属性值更改时，将引发 <see cref="P:System.Windows.Forms.Control.RightToLeft" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2564">Raises the <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /> event when the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property value of the control's container changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2565">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2565">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2566">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2566">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2567"><xref:System.Windows.Forms.Control.OnParentRightToLeftChanged%2A>方法还可使派生的类处理事件，而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2567">The <xref:System.Windows.Forms.Control.OnParentRightToLeftChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2568">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2568">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2569">下面的代码示例是属于引发事件的方法时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2569">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-2570"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式`On` *PropertyName* `Changed`的引发相应*PropertyName* `Changed`事件时*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2570">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-2571">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2571">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2572">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2572">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2573">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2573">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2574">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2574">When overriding <see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.RightToLeftChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentVisibleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentVisibleChanged : EventArgs -&gt; unit&#xA;override this.OnParentVisibleChanged : EventArgs -&gt; unit" Usage="control.OnParentVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2575">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2575">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2576">当控件容器的 <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> 属性值更改时，将引发 <see cref="P:System.Windows.Forms.Control.Visible" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2576">Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value of the control's container changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2577">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2577">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2578">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2578">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2579"><xref:System.Windows.Forms.Control.OnParentVisibleChanged%2A>方法还可使派生的类处理事件，而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2579">The <xref:System.Windows.Forms.Control.OnParentVisibleChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2580">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2580">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2581">下面的代码示例是属于引发事件的方法时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2581">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-2582"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式`On` *PropertyName* `Changed`的引发相应*PropertyName* `Changed`事件时*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2582">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-2583">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2583">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2584">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2584">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2585">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2585">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2586">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2586">When overriding <see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.VisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewKeyDown (System.Windows.Forms.PreviewKeyDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Forms.PreviewKeyDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewKeyDown (e As PreviewKeyDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewKeyDown(System::Windows::Forms::PreviewKeyDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyDown : System.Windows.Forms.PreviewKeyDownEventArgs -&gt; unit&#xA;override this.OnPreviewKeyDown : System.Windows.Forms.PreviewKeyDownEventArgs -&gt; unit" Usage="control.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PreviewKeyDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2587">包含事件数据的 <see cref="T:System.Windows.Forms.PreviewKeyDownEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2587">A <see cref="T:System.Windows.Forms.PreviewKeyDownEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2588">引发 <see cref="E:System.Windows.Forms.Control.PreviewKeyDown" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2588">Raises the <see cref="E:System.Windows.Forms.Control.PreviewKeyDown" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2589">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2589">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2590">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2590">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2591"><xref:System.Windows.Forms.Control.OnPreviewKeyDown%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2591">The <xref:System.Windows.Forms.Control.OnPreviewKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2592">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2592">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2593">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2593">When overriding <see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPrint">
      <MemberSignature Language="C#" Value="protected virtual void OnPrint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPrint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPrint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPrint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPrint : System.Windows.Forms.PaintEventArgs -&gt; unit&#xA;override this.OnPrint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.OnPrint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2594">包含事件数据的 <see cref="T:System.Windows.Forms.PaintEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2594">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2595">引发 <see cref="E:System.Windows.Forms.Control.Paint" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2595">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2596">如果`UserPaint`位<xref:System.Windows.Forms.ControlStyles>，则可以重写<xref:System.Windows.Forms.Control.OnPrint%2A>以进行分层的绘制。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2596">If the `UserPaint` bit of the <xref:System.Windows.Forms.ControlStyles> is set, you can override <xref:System.Windows.Forms.Control.OnPrint%2A> to do layered painting.</span></span> <span data-ttu-id="3d62e-2597">有关更多信息，请参见<xref:System.Windows.Forms.Control.SetStyle%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2597">See <xref:System.Windows.Forms.Control.SetStyle%2A> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d62e-2598">
            <paramref name="e" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2598">The <paramref name="e" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryContinueDrag (System.Windows.Forms.QueryContinueDragEventArgs qcdevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.Forms.QueryContinueDragEventArgs qcdevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryContinueDrag (qcdevent As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryContinueDrag(System::Windows::Forms::QueryContinueDragEventArgs ^ qcdevent);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit" Usage="control.OnQueryContinueDrag qcdevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qcdevent" Type="System.Windows.Forms.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="qcdevent">
          <span data-ttu-id="3d62e-2599">包含事件数据的 <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2599">A <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2600">引发 <see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2600">Raises the <see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2601">拖动开始后，通过反复调用此方法[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]直到取消或完成拖动操作。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2601">After dragging has begun, this method is called repeatedly by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] until the drag operation is either canceled or completed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-2602">如果你想要更改的点在哪个拖动操作取消或发生放置，重写此方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2602">Override this method if you want to change the point at which dragging is canceled or at which a drop occurs.</span></span>  
  
 <span data-ttu-id="3d62e-2603">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2603">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2604">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2604">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2605"><xref:System.Windows.Forms.Control.OnQueryContinueDrag%2A>方法还可使派生的类处理事件，而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2605">The <xref:System.Windows.Forms.Control.OnQueryContinueDrag%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2606">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2606">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2607">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2607">When overriding <see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnRegionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRegionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRegionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRegionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRegionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRegionChanged : EventArgs -&gt; unit&#xA;override this.OnRegionChanged : EventArgs -&gt; unit" Usage="control.OnRegionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2608">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2608">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2609">引发 <see cref="E:System.Windows.Forms.Control.RegionChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2609">Raises the <see cref="E:System.Windows.Forms.Control.RegionChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2610">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2610">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2611">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2611">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2612"><xref:System.Windows.Forms.Control.OnRegionChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2612">The <xref:System.Windows.Forms.Control.OnRegionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2613">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2613">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2614">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2614">When overriding <see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected virtual void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResize : EventArgs -&gt; unit&#xA;override this.OnResize : EventArgs -&gt; unit" Usage="control.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2615">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2615">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2616">引发 <see cref="E:System.Windows.Forms.Control.Resize" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2616">Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2617">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2617">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2618">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2618">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2619"><xref:System.Windows.Forms.Control.OnResize%2A>方法还可使派生的类处理事件，而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2619">The <xref:System.Windows.Forms.Control.OnResize%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2620">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2620">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2621">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2621">When overriding <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
            <span data-ttu-id="3d62e-2622">
              <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" />方法可以调用在构造期间，因此，如果您重写<see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" />控件构造函数调用之前，可以调用它。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2622">The <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> method can be called during construction, so if you override <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> it can be called before the control constructor is called.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.Resize" />
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRightToLeftChanged : EventArgs -&gt; unit&#xA;override this.OnRightToLeftChanged : EventArgs -&gt; unit" Usage="control.OnRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2623">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2623">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2624">引发 <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2624">Raises the <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2625">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2625">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2626">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2626">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2627"><xref:System.Windows.Forms.Control.OnRightToLeftChanged%2A>方法还可使派生的类处理事件，而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2627">The <xref:System.Windows.Forms.Control.OnRightToLeftChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2628">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2628">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2629">下面的代码示例是属于引发事件的方法时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2629">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-2630"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式`On` *PropertyName* `Changed`的引发相应*PropertyName* `Changed`事件时*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2630">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-2631">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2631">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2632">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2632">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2633">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2633">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2634">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2634">When overriding <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.RightToLeftChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSizeChanged : EventArgs -&gt; unit&#xA;override this.OnSizeChanged : EventArgs -&gt; unit" Usage="control.OnSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2635">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2635">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2636">引发 <see cref="E:System.Windows.Forms.Control.SizeChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2636">Raises the <see cref="E:System.Windows.Forms.Control.SizeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2637">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2637">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2638">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2638">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2639"><xref:System.Windows.Forms.Control.OnSizeChanged%2A>方法还可使派生的类处理事件，而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2639">The <xref:System.Windows.Forms.Control.OnSizeChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2640">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2640">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2641">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2641">When overriding <see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.SizeChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStyleChanged : EventArgs -&gt; unit&#xA;override this.OnStyleChanged : EventArgs -&gt; unit" Usage="control.OnStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2642">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2642">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2643">引发 <see cref="E:System.Windows.Forms.Control.StyleChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2643">Raises the <see cref="E:System.Windows.Forms.Control.StyleChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2644">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2644">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2645">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2645">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2646"><xref:System.Windows.Forms.Control.OnStyleChanged%2A>方法还可使派生的类处理事件，而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2646">The <xref:System.Windows.Forms.Control.OnStyleChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2647">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2647">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2648">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2648">When overriding <see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.StyleChanged" />
        <altmember cref="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
        <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.ControlStyles" />
      </Docs>
    </Member>
    <Member MemberName="OnSystemColorsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSystemColorsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSystemColorsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSystemColorsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSystemColorsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSystemColorsChanged : EventArgs -&gt; unit&#xA;override this.OnSystemColorsChanged : EventArgs -&gt; unit" Usage="control.OnSystemColorsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2649">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2649">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2650">引发 <see cref="E:System.Windows.Forms.Control.SystemColorsChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2650">Raises the <see cref="E:System.Windows.Forms.Control.SystemColorsChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2651">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2651">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2652">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2652">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2653"><xref:System.Windows.Forms.Control.OnSystemColorsChanged%2A>方法还可使派生的类处理事件，而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2653">The <xref:System.Windows.Forms.Control.OnSystemColorsChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2654">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2654">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2655">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2655">When overriding <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.SystemColorsChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTabIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTabIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTabIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTabIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTabIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTabIndexChanged : EventArgs -&gt; unit&#xA;override this.OnTabIndexChanged : EventArgs -&gt; unit" Usage="control.OnTabIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2656">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2656">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2657">引发 <see cref="E:System.Windows.Forms.Control.TabIndexChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2657">Raises the <see cref="E:System.Windows.Forms.Control.TabIndexChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2658">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2658">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2659">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2659">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2660"><xref:System.Windows.Forms.Control.OnTabIndexChanged%2A>方法还可使派生的类处理事件，而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2660">The <xref:System.Windows.Forms.Control.OnTabIndexChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2661">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2661">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2662">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2662">When overriding <see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.TabIndexChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTabStopChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTabStopChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTabStopChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTabStopChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTabStopChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTabStopChanged : EventArgs -&gt; unit&#xA;override this.OnTabStopChanged : EventArgs -&gt; unit" Usage="control.OnTabStopChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2663">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2663">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2664">引发 <see cref="E:System.Windows.Forms.Control.TabStopChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2664">Raises the <see cref="E:System.Windows.Forms.Control.TabStopChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2665">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2665">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2666">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2666">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2667"><xref:System.Windows.Forms.Control.OnTabStopChanged%2A>方法还可使派生的类处理事件，而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2667">The <xref:System.Windows.Forms.Control.OnTabStopChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2668">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2668">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2669">下面的代码示例是属于引发事件的方法时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2669">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-2670"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式`On` *PropertyName* `Changed`的引发相应*PropertyName* `Changed`事件时*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2670">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-2671">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2671">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2672">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2672">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2673">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2673">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2674">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2674">When overriding <see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.TabStopChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextChanged : EventArgs -&gt; unit&#xA;override this.OnTextChanged : EventArgs -&gt; unit" Usage="control.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2675">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2675">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2676">引发 <see cref="E:System.Windows.Forms.Control.TextChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2676">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2677">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2677">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2678">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2678">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2679"><xref:System.Windows.Forms.Control.OnTextChanged%2A>方法还可使派生的类处理事件，而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2679">The <xref:System.Windows.Forms.Control.OnTextChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2680">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2680">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2681">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2681">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2682">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2682">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2683">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2683">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2684">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2684">When overriding <see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.TextChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnValidated">
      <MemberSignature Language="C#" Value="protected virtual void OnValidated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnValidated : EventArgs -&gt; unit&#xA;override this.OnValidated : EventArgs -&gt; unit" Usage="control.OnValidated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2685">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2685">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2686">引发 <see cref="E:System.Windows.Forms.Control.Validated" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2686">Raises the <see cref="E:System.Windows.Forms.Control.Validated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2687">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2687">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2688">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2688">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2689"><xref:System.Windows.Forms.Control.OnValidated%2A>方法还可使派生的类处理事件，而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2689">The <xref:System.Windows.Forms.Control.OnValidated%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2690">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2690">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2691">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2691">When overriding <see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.Validated" />
      </Docs>
    </Member>
    <Member MemberName="OnValidating">
      <MemberSignature Language="C#" Value="protected virtual void OnValidating (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidating(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidating (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidating(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnValidating : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnValidating : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="control.OnValidating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2692">包含事件数据的 <see cref="T:System.ComponentModel.CancelEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2692">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2693">引发 <see cref="E:System.Windows.Forms.Control.Validating" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2693">Raises the <see cref="E:System.Windows.Forms.Control.Validating" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2694">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2694">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2695">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2695">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2696"><xref:System.Windows.Forms.Control.OnValidating%2A>方法还可使派生的类处理事件，而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2696">The <xref:System.Windows.Forms.Control.OnValidating%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2697">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2697">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2698">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2698">When overriding <see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
      </Docs>
    </Member>
    <Member MemberName="OnVisibleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnVisibleChanged : EventArgs -&gt; unit&#xA;override this.OnVisibleChanged : EventArgs -&gt; unit" Usage="control.OnVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-2699">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2699">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2700">引发 <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2700">Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2701">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2701">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3d62e-2702">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2702">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="3d62e-2703"><xref:System.Windows.Forms.Control.OnVisibleChanged%2A>方法还可使派生的类处理事件，而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2703">The <xref:System.Windows.Forms.Control.OnVisibleChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3d62e-2704">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2704">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2705">下面的代码示例是属于引发事件的方法时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2705">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-2706"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式`On` *PropertyName* `Changed`的引发相应*PropertyName* `Changed`事件时*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2706">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-2707">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>派生的类显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2707">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="3d62e-2708">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2708">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-2709">此示例需要您有派生一个类<xref:System.Windows.Forms.TextBox>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2709">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2710">在派生类中重写 <see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2710">When overriding <see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.VisibleChanged" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Show" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.Control.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-2711">获取或设置控件内的空白。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2711">Gets or sets padding within the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-2712">表示控件的内部间距特征的 <see cref="T:System.Windows.Forms.Padding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2712">A <see cref="T:System.Windows.Forms.Padding" /> representing the control's internal spacing characteristics.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2713">用于如容器<xref:System.Windows.Forms.GroupBox>并<xref:System.Windows.Forms.TabControl>，则<xref:System.Windows.Forms.Control.Padding%2A>属性获取或设置其各自<xref:System.Windows.Forms.Control.DisplayRectangle%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2713">For containers such as <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TabControl>, the <xref:System.Windows.Forms.Control.Padding%2A> property gets or sets their respective <xref:System.Windows.Forms.Control.DisplayRectangle%2A> properties.</span></span> <span data-ttu-id="3d62e-2714"><xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=nameWithType>属性等于其<xref:System.Windows.Forms.Control.Padding%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2714">The <xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=nameWithType> property is equal to its <xref:System.Windows.Forms.Control.Padding%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3d62e-2715">控件接收默认值为<xref:System.Windows.Forms.Control.Padding%2A>是合理地接近 Windows 用户界面指南。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2715">Controls receive default values for <xref:System.Windows.Forms.Control.Padding%2A> that are reasonably close to Windows user interface guidelines.</span></span> <span data-ttu-id="3d62e-2716">一些调整可能仍需要为特定应用程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2716">Some adjustments might still be necessary for particular applications.</span></span>  
  
 <span data-ttu-id="3d62e-2717">实现的所有控件<xref:System.Windows.Forms.Control.GetPreferredSize%2A>的量以放大<xref:System.Windows.Forms.Control.Padding%2A>时<xref:System.Windows.Forms.Control.AutoSize%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2717">All controls that implement <xref:System.Windows.Forms.Control.GetPreferredSize%2A> are enlarged by the amount in <xref:System.Windows.Forms.Control.Padding%2A> when <xref:System.Windows.Forms.Control.AutoSize%2A> is `true`.</span></span>  
  
 <span data-ttu-id="3d62e-2718">以下控件不使用<xref:System.Windows.Forms.Control.Padding%2A>:</span><span class="sxs-lookup"><span data-stu-id="3d62e-2718">The following controls do not use <xref:System.Windows.Forms.Control.Padding%2A>:</span></span>  
  
-   <span data-ttu-id="3d62e-2719">控件不实现<xref:System.Windows.Forms.Control.AutoSize%2A>通过 <xref:System.Windows.Forms.Control.GetPreferredSize%2A></span><span class="sxs-lookup"><span data-stu-id="3d62e-2719">Controls that do not implement <xref:System.Windows.Forms.Control.AutoSize%2A> through <xref:System.Windows.Forms.Control.GetPreferredSize%2A></span></span>  
  
-   <span data-ttu-id="3d62e-2720">直接从继承的自定义控件 <xref:System.Windows.Forms.Control></span><span class="sxs-lookup"><span data-stu-id="3d62e-2720">Custom controls that directly inherit from <xref:System.Windows.Forms.Control></span></span>  
  
-   <xref:System.Windows.Forms.AxHost>  
  
-   <xref:System.Windows.Forms.ComboBox>  
  
-   <xref:System.Windows.Forms.DataGridView>  
  
-   <xref:System.Windows.Forms.DateTimePicker>  
  
-   <xref:System.Windows.Forms.HScrollBar>  
  
-   <xref:System.Windows.Forms.ListView>  
  
-   <xref:System.Windows.Forms.MaskedTextBox>  
  
-   <xref:System.Windows.Forms.MonthCalendar>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.PropertyGrid>  
  
-   <xref:System.Windows.Forms.RichTextBox>  
  
-   <xref:System.Windows.Forms.SplitContainer>  
  
-   <xref:System.Windows.Forms.TextBox>  
  
-   <xref:System.Windows.Forms.TextBoxBase>  
  
-   <xref:System.Windows.Forms.TreeView>  
  
-   <xref:System.Windows.Forms.VScrollBar>  
  
-   <xref:System.Windows.Forms.WebBrowser>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-2721">在控件空白区更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2721">Occurs when the control's padding changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2722">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2722">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2723">下面的代码示例演示如何将此成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2723">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3d62e-2724">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Control.PaddingChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2724">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.PaddingChanged> event.</span></span> <span data-ttu-id="3d62e-2725">此报告可帮助您了解事件发生的并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2725">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3d62e-2726">若要报告或频繁发生的事件上多个事件，请考虑更换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或将消息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2726">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3d62e-2727">若要运行此代码示例，请将其粘贴到包含继承的类型的实例的项目<xref:System.Windows.Forms.Control>，如<xref:System.Windows.Forms.Button>或<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2727">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="3d62e-2728">然后该实例命名`Control1`，并确保事件处理程序相关联<xref:System.Windows.Forms.Control.PaddingChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2728">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.PaddingChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#41](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#41)]
 [!code-vb[System.Windows.Forms.EventExamples#41](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-2729">在重绘控件时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2729">Occurs when the control is redrawn.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2730"><xref:System.Windows.Forms.Control.Paint>重绘该控件时引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2730">The <xref:System.Windows.Forms.Control.Paint> event is raised when the control is redrawn.</span></span> <span data-ttu-id="3d62e-2731">它将传递的实例<xref:System.Windows.Forms.PaintEventArgs>处理的方法为<xref:System.Windows.Forms.Control.Paint>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2731">It passes an instance of <xref:System.Windows.Forms.PaintEventArgs> to the method(s) that handles the <xref:System.Windows.Forms.Control.Paint> event.</span></span>  
  
 <span data-ttu-id="3d62e-2732">创建新的自定义控件或继承的控件具有不同的可视外观时, 必须提供代码来呈现控件通过重写<xref:System.Windows.Forms.Control.OnPaint%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2732">When creating a new custom control or an inherited control with a different visual appearance, you must provide code to render the control by overriding the <xref:System.Windows.Forms.Control.OnPaint%2A> method.</span></span> <span data-ttu-id="3d62e-2733">有关详细信息，请参阅[重写 OnPaint 方法](~/docs/framework/winforms/controls/overriding-the-onpaint-method.md)并[自定义控件的绘制和呈现](~/docs/framework/winforms/controls/custom-control-painting-and-rendering.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2733">For more information, see [Overriding the OnPaint Method](~/docs/framework/winforms/controls/overriding-the-onpaint-method.md) and [Custom Control Painting and Rendering](~/docs/framework/winforms/controls/custom-control-painting-and-rendering.md).</span></span>  
  
 <span data-ttu-id="3d62e-2734">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2734">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2735">下面的代码示例将创建<xref:System.Windows.Forms.PictureBox>控件在窗体和使用<xref:System.Windows.Forms.Control.Paint>事件以绘制到它。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2735">The following code example creates a <xref:System.Windows.Forms.PictureBox> control on the form and uses the <xref:System.Windows.Forms.Control.Paint> event to draw to it.</span></span>  
  
 [!code-cpp[Control.Paint#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Paint/CPP/form1.cpp#1)]
 [!code-csharp[Control.Paint#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Paint/CS/form1.cs#1)]
 [!code-vb[Control.Paint#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Paint/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control Parent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Property Parent As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ Parent { System::Windows::Forms::Control ^ get(); void set(System::Windows::Forms::Control ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.Control with get, set" Usage="System.Windows.Forms.Control.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-2736">获取或设置控件的父容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2736">Gets or sets the parent container of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-2737">
            <see cref="T:System.Windows.Forms.Control" />，表示控件的父控件或容器控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2737">A <see cref="T:System.Windows.Forms.Control" /> that represents the parent or container control of the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2738">设置<xref:System.Windows.Forms.Control.Parent%2A>属性值设置为`null`移除从控件<xref:System.Windows.Forms.Control.ControlCollection>其当前的父控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2738">Setting the <xref:System.Windows.Forms.Control.Parent%2A> property value to `null` removes the control from the <xref:System.Windows.Forms.Control.ControlCollection> of its current parent control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2739">下面的代码示例使用<xref:System.Windows.Forms.Control.Parent%2A>属性和<xref:System.Windows.Forms.Control.FindForm%2A>方法来设置一个按钮和其窗体的父控件的属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2739">The following code example uses the <xref:System.Windows.Forms.Control.Parent%2A> property and the <xref:System.Windows.Forms.Control.FindForm%2A> method to set properties on the parent control of a button and its form.</span></span>  
  
 [!code-cpp[Control.FindForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.FindForm/CPP/form1.cpp#1)]
 [!code-csharp[Control.FindForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.FindForm/CS/form1.cs#1)]
 [!code-vb[Control.FindForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.FindForm/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-2740">若要获取此属性的值的所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2740">for all windows to get this property value.</span>
          </span>
          <span data-ttu-id="3d62e-2741">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2741">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="ParentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ParentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ParentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ParentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ParentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ParentChanged;" />
      <MemberSignature Language="F#" Value="member this.ParentChanged : EventHandler " Usage="member this.ParentChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-2742">在 <see cref="P:System.Windows.Forms.Control.Parent" /> 属性值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2742">Occurs when the <see cref="P:System.Windows.Forms.Control.Parent" /> property value changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2743">如果引发此事件<xref:System.Windows.Forms.Control.Parent%2A>属性更改通过以编程方式修改或用户交互。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2743">This event is raised if the <xref:System.Windows.Forms.Control.Parent%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="3d62e-2744">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2744">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PerformLayout">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-2745">强制控件将布局逻辑应用于子控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2745">Forces the control to apply layout logic to child controls.</span>
          </span>
        </summary>
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
      </Docs>
    </MemberGroup>
    <Member MemberName="PerformLayout">
      <MemberSignature Language="C#" Value="public void PerformLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PerformLayout" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformLayout();" />
      <MemberSignature Language="F#" Value="member this.PerformLayout : unit -&gt; unit" Usage="control.PerformLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-2746">强制控件将布局逻辑应用于其所有子控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2746">Forces the control to apply layout logic to all its child controls.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2747">如果<xref:System.Windows.Forms.Control.SuspendLayout%2A>方法调用之前，先<xref:System.Windows.Forms.Control.PerformLayout%2A>方法，<xref:System.Windows.Forms.Control.Layout>禁用的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2747">If the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method was called before calling the <xref:System.Windows.Forms.Control.PerformLayout%2A> method, the <xref:System.Windows.Forms.Control.Layout> event is suppressed.</span></span>  
  
 <span data-ttu-id="3d62e-2748"><xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A>并<xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A>的属性<xref:System.Windows.Forms.LayoutEventArgs>创建服务器被设置为`null`如果未不提供任何值<xref:System.Windows.Forms.Control.PerformLayout%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2748">The <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> and <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> properties of the <xref:System.Windows.Forms.LayoutEventArgs> created are set to `null` if no values were provided when the <xref:System.Windows.Forms.Control.PerformLayout%2A> method was called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2749">下面的代码示例演示如何使用 <xref:System.Windows.Forms.Control.PerformLayout%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2749">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.PerformLayout%2A> method.</span></span> <span data-ttu-id="3d62e-2750">它还演示了中的方法<xref:System.Windows.Forms.Control.Layout>引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2750">It also demonstrates ways in which the <xref:System.Windows.Forms.Control.Layout> event is raised.</span></span> <span data-ttu-id="3d62e-2751">在此示例中，`Click`事件处理程序`Button1`显式调用<xref:System.Windows.Forms.Control.PerformLayout%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2751">In this example, the `Click` event handler for `Button1` explicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span></span> <span data-ttu-id="3d62e-2752">`Click`事件处理程序`Button2`隐式调用<xref:System.Windows.Forms.Control.PerformLayout%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2752">The `Click` event handler for `Button2` implicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span></span> <span data-ttu-id="3d62e-2753"><xref:System.Windows.Forms.Control.PerformLayout%2A> 此外加载窗体时调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2753"><xref:System.Windows.Forms.Control.PerformLayout%2A> is also called when the form is loaded.</span></span> <span data-ttu-id="3d62e-2754">`Button3` 返回到加载时的状态的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2754">`Button3` returns the control to the state it was in when loaded.</span></span> <span data-ttu-id="3d62e-2755">每种情况下，<xref:System.Windows.Forms.Control.Layout>引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2755">In each case, the <xref:System.Windows.Forms.Control.Layout> event is raised.</span></span>  
  
 <span data-ttu-id="3d62e-2756">这是一个完整的示例。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2756">This is a complete example.</span></span> <span data-ttu-id="3d62e-2757">若要运行该示例，请在空白的窗体中粘贴以下代码。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2757">To run the example, paste the following code in a blank form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
      </Docs>
    </Member>
    <Member MemberName="PerformLayout">
      <MemberSignature Language="C#" Value="public void PerformLayout (System.Windows.Forms.Control affectedControl, string affectedProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformLayout(class System.Windows.Forms.Control affectedControl, string affectedProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformLayout (affectedControl As Control, affectedProperty As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformLayout(System::Windows::Forms::Control ^ affectedControl, System::String ^ affectedProperty);" />
      <MemberSignature Language="F#" Value="member this.PerformLayout : System.Windows.Forms.Control * string -&gt; unit" Usage="control.PerformLayout (affectedControl, affectedProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="affectedControl" Type="System.Windows.Forms.Control" />
        <Parameter Name="affectedProperty" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="affectedControl">
          <span data-ttu-id="3d62e-2758">
            <see cref="T:System.Windows.Forms.Control" />，它表示最近更改的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2758">A <see cref="T:System.Windows.Forms.Control" /> that represents the most recently changed control.</span>
          </span>
        </param>
        <param name="affectedProperty">
          <span data-ttu-id="3d62e-2759">此控件上最近更改的属性的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2759">The name of the most recently changed property on the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2760">强制控件将布局逻辑应用于其所有子控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2760">Forces the control to apply layout logic to all its child controls.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2761">如果<xref:System.Windows.Forms.Control.SuspendLayout%2A>方法调用之前，先<xref:System.Windows.Forms.Control.PerformLayout%2A>方法，<xref:System.Windows.Forms.Control.Layout>禁用的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2761">If the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method was called before calling the <xref:System.Windows.Forms.Control.PerformLayout%2A> method, the <xref:System.Windows.Forms.Control.Layout> event is suppressed.</span></span>  
  
 <span data-ttu-id="3d62e-2762">`affectedControl`并`affectedProperty`参数可以同时设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2762">The `affectedControl` and `affectedProperty` parameters can both be set to `null`.</span></span> <span data-ttu-id="3d62e-2763">执行操作会导致<xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A>并<xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A>的属性<xref:System.Windows.Forms.LayoutEventArgs>创建设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2763">Doing so causes the <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> and <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> properties of the <xref:System.Windows.Forms.LayoutEventArgs> created to be set to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2764">下面的代码示例演示如何使用 <xref:System.Windows.Forms.Control.PerformLayout%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2764">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.PerformLayout%2A> method.</span></span> <span data-ttu-id="3d62e-2765">它还演示了中的方法<xref:System.Windows.Forms.Control.Layout>引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2765">It also demonstrates ways in which the <xref:System.Windows.Forms.Control.Layout> event is raised.</span></span> <span data-ttu-id="3d62e-2766">在此示例中，`Click`事件处理程序`Button1`显式调用<xref:System.Windows.Forms.Control.PerformLayout%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2766">In this example, the `Click` event handler for `Button1` explicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span></span> <span data-ttu-id="3d62e-2767">`Click`事件处理程序`Button2`隐式调用<xref:System.Windows.Forms.Control.PerformLayout%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2767">The `Click` event handler for `Button2` implicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span></span> <span data-ttu-id="3d62e-2768"><xref:System.Windows.Forms.Control.PerformLayout%2A> 此外加载窗体时调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2768"><xref:System.Windows.Forms.Control.PerformLayout%2A> is also called when the form is loaded.</span></span> <span data-ttu-id="3d62e-2769">`Button3` 返回到加载时的状态的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2769">`Button3` returns the control to the state it was in when loaded.</span></span> <span data-ttu-id="3d62e-2770">每种情况下，<xref:System.Windows.Forms.Control.Layout>引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2770">In each case, the <xref:System.Windows.Forms.Control.Layout> event is raised.</span></span>  
  
 <span data-ttu-id="3d62e-2771">这是一个完整的示例。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2771">This is a complete example.</span></span> <span data-ttu-id="3d62e-2772">若要运行该示例，请在空白的窗体中粘贴以下代码。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2772">To run the example, paste the following code in a blank form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
      </Docs>
    </Member>
    <Member MemberName="PointToClient">
      <MemberSignature Language="C#" Value="public System.Drawing.Point PointToClient (System.Drawing.Point p);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point PointToClient(valuetype System.Drawing.Point p) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function PointToClient (p As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point PointToClient(System::Drawing::Point p);" />
      <MemberSignature Language="F#" Value="member this.PointToClient : System.Drawing.Point -&gt; System.Drawing.Point" Usage="control.PointToClient p" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="p">
          <span data-ttu-id="3d62e-2773">要转换的屏幕坐标 <see cref="T:System.Drawing.Point" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2773">The screen coordinate <see cref="T:System.Drawing.Point" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2774">将指定屏幕点的位置计算成工作区坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2774">Computes the location of the specified screen point into client coordinates.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-2775">一个 <see cref="T:System.Drawing.Point" />，表示转换后的 <see cref="T:System.Drawing.Point" />、<paramref name="p" />（以工作区坐标表示）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2775">A <see cref="T:System.Drawing.Point" /> that represents the converted <see cref="T:System.Drawing.Point" />, <paramref name="p" />, in client coordinates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3d62e-2776">下面的代码示例启用删除用户后，将图像或图像文件拖到窗体，并将其显示在其上的点。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2776">The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped.</span></span> <span data-ttu-id="3d62e-2777"><xref:System.Windows.Forms.Control.OnPaint%2A>方法被重写重绘每次绘制窗体的图像; 否则该映像将仅持续到下一步重新绘制。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2777">The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</span></span> <span data-ttu-id="3d62e-2778"><xref:System.Windows.Forms.Control.DragEnter>事件处理方法确定要拖动到窗体数据的类型，并提供适当的反馈。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2778">The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</span></span> <span data-ttu-id="3d62e-2779"><xref:System.Windows.Forms.Control.DragDrop>事件处理方法在窗体上显示图像，如果<xref:System.Drawing.Image>可以从数据创建。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2779">The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data.</span></span> <span data-ttu-id="3d62e-2780">因为<xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType>并<xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType>的值为屏幕坐标，该示例使用<xref:System.Windows.Forms.Control.PointToClient%2A>方法来将它们转换为客户端坐标。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2780">Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CPP/imagedrag.cpp#1)]
 [!code-csharp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CS/imagedrag.cs#1)]
 [!code-vb[Windows.Forms.Control.DragOperations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/VB/imagedrag.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
        <altmember cref="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="PointToScreen">
      <MemberSignature Language="C#" Value="public System.Drawing.Point PointToScreen (System.Drawing.Point p);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point PointToScreen(valuetype System.Drawing.Point p) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function PointToScreen (p As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point PointToScreen(System::Drawing::Point p);" />
      <MemberSignature Language="F#" Value="member this.PointToScreen : System.Drawing.Point -&gt; System.Drawing.Point" Usage="control.PointToScreen p" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="p">
          <span data-ttu-id="3d62e-2781">要转换的客户端坐标 <see cref="T:System.Drawing.Point" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2781">The client coordinate <see cref="T:System.Drawing.Point" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2782">将指定工作区点的位置计算成屏幕坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2782">Computes the location of the specified client point into screen coordinates.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-2783">一个 <see cref="T:System.Drawing.Point" />，表示转换后的 <see cref="T:System.Drawing.Point" />、<paramref name="p" />（以屏幕坐标表示）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2783">A <see cref="T:System.Drawing.Point" /> that represents the converted <see cref="T:System.Drawing.Point" />, <paramref name="p" />, in screen coordinates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3d62e-2784">下面的代码示例演示如何使用<xref:System.Windows.Forms.Control.BackColor%2A>， <xref:System.Windows.Forms.Control.RectangleToScreen%2A>， <xref:System.Windows.Forms.Control.PointToScreen%2A>， <xref:System.Windows.Forms.Control.MouseButtons%2A>， <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType>，并<xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType>成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2784">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType> members.</span></span> <span data-ttu-id="3d62e-2785">若要运行该示例，请将以下代码粘贴在名为 Form1 的表单中包含多个控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2785">To run the example, paste the following code in a form called Form1 containing several controls.</span></span> <span data-ttu-id="3d62e-2786">此示例需要<xref:System.Windows.Forms.Control.MouseDown>， <xref:System.Windows.Forms.Control.MouseMove>，和<xref:System.Windows.Forms.Control.MouseUp>事件连接到在示例中定义的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2786">This example requires that the <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, and <xref:System.Windows.Forms.Control.MouseUp> events are connected to the event handlers defined in the example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
        <altmember cref="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="PreferredSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size PreferredSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size PreferredSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.PreferredSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size PreferredSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredSize : System.Drawing.Size" Usage="System.Windows.Forms.Control.PreferredSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-2787">获取可以容纳控件的矩形区域的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2787">Gets the size of a rectangular area into which the control can fit.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-2788">包含高度和宽度的 <see cref="T:System.Drawing.Size" />（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2788">A <see cref="T:System.Drawing.Size" /> containing the height and width, in pixels.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreProcessControlMessage">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.PreProcessControlState PreProcessControlMessage (ref System.Windows.Forms.Message msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.PreProcessControlState PreProcessControlMessage(valuetype System.Windows.Forms.Message&amp; msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Function PreProcessControlMessage (ByRef msg As Message) As PreProcessControlState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::PreProcessControlState PreProcessControlMessage(System::Windows::Forms::Message % msg);" />
      <MemberSignature Language="F#" Value="member this.PreProcessControlMessage :  -&gt; System.Windows.Forms.PreProcessControlState" Usage="control.PreProcessControlMessage msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PreProcessControlState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="3d62e-2789">一个 <see cref="T:System.Windows.Forms.Message" />，表示要处理的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2789">A <see cref="T:System.Windows.Forms.Message" /> that represents the message to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2790">在调度键盘或输入消息之前，在消息循环内对它们进行预处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2790">Preprocesses keyboard or input messages within the message loop before they are dispatched.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-2791">
            <see cref="T:System.Windows.Forms.PreProcessControlState" /> 值之一，具体取决于 <see cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" /> 是 <see langword="true" /> 还是 <see langword="false" />，以及 <see cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" /> 或 <see cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" /> 是 <see langword="true" /> 还是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2791">One of the <see cref="T:System.Windows.Forms.PreProcessControlState" /> values, depending on whether <see cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" /> is <see langword="true" /> or <see langword="false" /> and whether <see cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" /> or <see cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" /> are <see langword="true" /> or <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreProcessMessage">
      <MemberSignature Language="C#" Value="public virtual bool PreProcessMessage (ref System.Windows.Forms.Message msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PreProcessMessage(valuetype System.Windows.Forms.Message&amp; msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PreProcessMessage (ByRef msg As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PreProcessMessage(System::Windows::Forms::Message % msg);" />
      <MemberSignature Language="F#" Value="abstract member PreProcessMessage :  -&gt; bool&#xA;override this.PreProcessMessage :  -&gt; bool" Usage="control.PreProcessMessage msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="3d62e-2792">通过引用传递的 <see cref="T:System.Windows.Forms.Message" />，表示要处理的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2792">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the message to process.</span>
          </span>
          <span data-ttu-id="3d62e-2793">可能的值有 WM_KEYDOWN、WM_SYSKEYDOWN、WM_CHAR 和 WM_SYSCHAR。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2793">The possible values are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2794">在调度键盘或输入消息之前，在消息循环内对它们进行预处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2794">Preprocesses keyboard or input messages within the message loop before they are dispatched.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-2795">如果消息已由控件处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2795">
              <see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2796"><xref:System.Windows.Forms.Control.PreProcessMessage%2A> 由应用程序的消息循环进行预处理输入的消息之前对它们调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2796"><xref:System.Windows.Forms.Control.PreProcessMessage%2A> is called by the application's message loop to preprocess input messages before they are dispatched.</span></span> <span data-ttu-id="3d62e-2797">可能值为`msg`参数是 WM_KEYDOWN、 WM_SYSKEYDOWN、 WM_CHAR 和 WM_SYSCHAR。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2797">Possible values for the `msg` parameter are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.</span></span>  
  
 <span data-ttu-id="3d62e-2798">重写时<xref:System.Windows.Forms.Control.PreProcessMessage%2A>，控制应返回`true`以指示它已处理该消息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2798">When overriding <xref:System.Windows.Forms.Control.PreProcessMessage%2A>, a control should return `true` to indicate that it has processed the message.</span></span> <span data-ttu-id="3d62e-2799">对于不处理由控件的结果消息，`base.PreProcessMessage`应返回。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2799">For messages that are not processed by the control, the result of `base.PreProcessMessage` should be returned.</span></span> <span data-ttu-id="3d62e-2800">控件通常将如覆盖更专用的方法之一<xref:System.Windows.Forms.Control.IsInputChar%2A>， <xref:System.Windows.Forms.Control.IsInputKey%2A>， <xref:System.Windows.Forms.Control.ProcessCmdKey%2A>， <xref:System.Windows.Forms.Control.ProcessDialogChar%2A>，或<xref:System.Windows.Forms.Control.ProcessDialogKey%2A>而不是替代<xref:System.Windows.Forms.Control.PreProcessMessage%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2800">Controls will typically override one of the more specialized methods such as <xref:System.Windows.Forms.Control.IsInputChar%2A>, <xref:System.Windows.Forms.Control.IsInputKey%2A>, <xref:System.Windows.Forms.Control.ProcessCmdKey%2A>, <xref:System.Windows.Forms.Control.ProcessDialogChar%2A>, or <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> instead of overriding <xref:System.Windows.Forms.Control.PreProcessMessage%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-2801">对于直接调用方调用此方法的所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2801">for all windows for the immediate caller to call this method.</span>
          </span>
          <span data-ttu-id="3d62e-2802">关联枚举：<see langword="AllWindows" />的值<see cref="T:System.Security.Permissions.UIPermissionWindow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2802">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PreviewKeyDownEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PreviewKeyDownEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As PreviewKeyDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PreviewKeyDownEventHandler ^ PreviewKeyDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyDown : System.Windows.Forms.PreviewKeyDownEventHandler " Usage="member this.PreviewKeyDown : System.Windows.Forms.PreviewKeyDownEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PreviewKeyDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-2803">在焦点位于此控件上的情况下，当有按键动作时发生（在 <see cref="E:System.Windows.Forms.Control.KeyDown" /> 事件之前发生）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2803">Occurs before the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event when a key is pressed while focus is on this control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2804">因为它们不会被视为输入的按键，某些控件通常会忽略某些按键，例如选项卡、 返回、 ESC、 和箭头键。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2804">Some key presses, such as the TAB, RETURN, ESC, and arrow keys, are typically ignored by some controls because they are not considered input key presses.</span></span> <span data-ttu-id="3d62e-2805">例如，默认情况下，<xref:System.Windows.Controls.Button>控件忽略箭头键。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2805">For example, by default, a <xref:System.Windows.Controls.Button> control ignores the arrow keys.</span></span> <span data-ttu-id="3d62e-2806">通常按箭头键将导致焦点移动到上一个或下一个控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2806">Pressing the arrow keys typically causes the focus to move to the previous or next control.</span></span> <span data-ttu-id="3d62e-2807">箭头键导航键并按这些键通常不会引发被视为<xref:System.Windows.Forms.Control.KeyDown>事件<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2807">The arrow keys are considered navigation keys and pressing these keys typically do not raise the <xref:System.Windows.Forms.Control.KeyDown> event for a <xref:System.Windows.Controls.Button>.</span></span> <span data-ttu-id="3d62e-2808">但是，按箭头键<xref:System.Windows.Controls.Button>会引发<xref:System.Windows.Forms.Control.PreviewKeyDown>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2808">However, pressing the arrow keys for a <xref:System.Windows.Controls.Button> does raise the <xref:System.Windows.Forms.Control.PreviewKeyDown> event.</span></span> <span data-ttu-id="3d62e-2809">通过处理<xref:System.Windows.Forms.Control.PreviewKeyDown>事件<xref:System.Windows.Controls.Button>并设置<xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A>属性设置为`true`，你可以将提升<xref:System.Windows.Forms.Control.KeyDown>事件按箭头键时。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2809">By handling the <xref:System.Windows.Forms.Control.PreviewKeyDown> event for a <xref:System.Windows.Controls.Button> and setting the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property to `true`, you can raise the <xref:System.Windows.Forms.Control.KeyDown> event when the arrow keys are pressed.</span></span> <span data-ttu-id="3d62e-2810">但是，如果处理箭头键，焦点将无法再移动到上一个或下一个控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2810">However, if you handle the arrow keys, the focus will no longer move to the previous or next control.</span></span>  
  
 <span data-ttu-id="3d62e-2811">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2811">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2812">下面的代码示例演示<xref:System.Windows.Forms.Button>，其中包含<xref:System.Windows.Forms.ContextMenuStrip>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2812">The following code example demonstrates a <xref:System.Windows.Forms.Button> that includes a <xref:System.Windows.Forms.ContextMenuStrip>.</span></span> <span data-ttu-id="3d62e-2813">当<xref:System.Windows.Forms.Button>具有焦点并按向上键或向下箭头键，<xref:System.Windows.Forms.ContextMenuStrip>出现。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2813">When the <xref:System.Windows.Forms.Button> has the focus and you press the UP ARROW or DOWN ARROW keys, the <xref:System.Windows.Forms.ContextMenuStrip> appears.</span></span> <span data-ttu-id="3d62e-2814"><xref:System.Windows.Forms.Control.PreviewKeyDown>事件处理程序检测到按向上键或向下箭头键时，并设置<xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2814">The <xref:System.Windows.Forms.Control.PreviewKeyDown> event handler detects when the UP ARROW or DOWN ARROW keys are pressed and sets the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property to `true`.</span></span> <span data-ttu-id="3d62e-2815">这将引发<xref:System.Windows.Forms.Control.KeyDown>事件，以便可以显示<xref:System.Windows.Forms.ContextMenuStrip>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2815">This raises the <xref:System.Windows.Forms.Control.KeyDown> event so that you can display the <xref:System.Windows.Forms.ContextMenuStrip>.</span></span> <span data-ttu-id="3d62e-2816">您不应该将任何逻辑置于<xref:System.Windows.Forms.Control.PreviewKeyDown>事件处理程序中，除了要设置<xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2816">You should not put any logic in the <xref:System.Windows.Forms.Control.PreviewKeyDown> event handler, other than to set the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property.</span></span> <span data-ttu-id="3d62e-2817">相反，应将你的逻辑放<xref:System.Windows.Forms.Control.KeyDown>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2817">Instead, you should put your logic in the <xref:System.Windows.Forms.Control.KeyDown> event handler.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.PreviewKeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.control.previewkeydown/cs/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.PreviewKeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.control.previewkeydown/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool&#xA;override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="control.ProcessCmdKey (msg, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="3d62e-2818">通过引用传递的 <see cref="T:System.Windows.Forms.Message" />，表示要处理的窗口消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2818">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span>
          </span>
        </param>
        <param name="keyData">
          <span data-ttu-id="3d62e-2819">
            <see cref="T:System.Windows.Forms.Keys" /> 值之一，表示要处理的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2819">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2820">处理命令键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2820">Processes a command key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-2821">如果字符已由控件处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2821">
              <see langword="true" /> if the character was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2822">在消息处理命令键的预处理过程中调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2822">This method is called during message preprocessing to handle command keys.</span></span> <span data-ttu-id="3d62e-2823">命令键是始终优先于常规输入键的键。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2823">Command keys are keys that always take precedence over regular input keys.</span></span> <span data-ttu-id="3d62e-2824">命令键的示例包括加速器和菜单快捷方式。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2824">Examples of command keys include accelerators and menu shortcuts.</span></span> <span data-ttu-id="3d62e-2825">该方法必须返回`true`以指示它已处理命令键，或`false`以指示密钥不是命令键。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2825">The method must return `true` to indicate that it has processed the command key, or `false` to indicate that the key is not a command key.</span></span> <span data-ttu-id="3d62e-2826">当控件承载在 Windows 窗体应用程序或作为 ActiveX 控件时，只能调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2826">This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</span></span>  
  
 <span data-ttu-id="3d62e-2827"><xref:System.Windows.Forms.Control.ProcessCmdKey%2A>方法首先确定控件是否有<xref:System.Windows.Forms.ContextMenu>，以及如果是这样，启用<xref:System.Windows.Forms.ContextMenu>来处理命令键。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2827">The <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> method first determines whether the control has a <xref:System.Windows.Forms.ContextMenu>, and if so, enables the <xref:System.Windows.Forms.ContextMenu> to process the command key.</span></span> <span data-ttu-id="3d62e-2828">如果命令键不为菜单快捷方式，该控件具有一个父级，该密钥传递给父级的<xref:System.Windows.Forms.Control.ProcessCmdKey%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2828">If the command key is not a menu shortcut and the control has a parent, the key is passed to the parent's <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> method.</span></span> <span data-ttu-id="3d62e-2829">实际效果是该密钥"弹出"的控件层次结构的命令。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2829">The net effect is that command keys are "bubbled" up the control hierarchy.</span></span> <span data-ttu-id="3d62e-2830">用户按下的键，除了密钥数据还指示哪些，如果有，同时按下修改键作为键相同的时间。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2830">In addition to the key the user pressed, the key data also indicates which, if any, modifier keys were pressed at the same time as the key.</span></span> <span data-ttu-id="3d62e-2831">修改键包括 SHIFT、 CTRL 和 ALT 键。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2831">Modifier keys include the SHIFT, CTRL, and ALT keys.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="3d62e-2832">适用于直接调用方和继承的类来调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2832">for the immediate caller and inheriting classes to call this method.</span>
          </span>
          <span data-ttu-id="3d62e-2833">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2833">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2834">重写时<see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />派生类中的方法，控件应返回<see langword="true" />以指示它已处理该键。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2834">When overriding the <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> method in a derived class, a control should return <see langword="true" /> to indicate that it has processed the key.</span>
            </span>
            <span data-ttu-id="3d62e-2835">不会处理由控件调用的基类的结果的密钥<see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />方法应返回。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2835">For keys that are not processed by the control, the result of calling the base class's <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> method should be returned.</span>
            </span>
            <span data-ttu-id="3d62e-2836">控件将很少，如果有过，需要重写此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2836">Controls will seldom, if ever, need to override this method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogChar">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessDialogChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessDialogChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessDialogChar (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessDialogChar(char charCode);" />
      <MemberSignature Language="F#" Value="abstract member ProcessDialogChar : char -&gt; bool&#xA;override this.ProcessDialogChar : char -&gt; bool" Usage="control.ProcessDialogChar charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">
          <span data-ttu-id="3d62e-2837">要处理的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2837">The character to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2838">处理对话框字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2838">Processes a dialog character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-2839">如果字符已由控件处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2839">
              <see langword="true" /> if the character was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2840">邮件预处理以处理对话框字符，如控件的助记键时调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2840">This method is called during message preprocessing to handle dialog characters, such as control mnemonics.</span></span> <span data-ttu-id="3d62e-2841">仅当调用此方法<xref:System.Windows.Forms.Control.IsInputChar%2A>方法指示该控件不处理该字符。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2841">This method is called only if the <xref:System.Windows.Forms.Control.IsInputChar%2A> method indicates that the control is not processing the character.</span></span> <span data-ttu-id="3d62e-2842"><xref:System.Windows.Forms.Control.ProcessDialogChar%2A>方法只需将该字符发送到的父<xref:System.Windows.Forms.Control.ProcessDialogChar%2A>方法或返回`false`如果控件具有没有父级。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2842">The <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> method simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> method, or returns `false` if the control has no parent.</span></span> <span data-ttu-id="3d62e-2843"><xref:System.Windows.Forms.Form>类重写此方法以执行实际处理对话框字符。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2843">The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog characters.</span></span> <span data-ttu-id="3d62e-2844">当控件承载在 Windows 窗体应用程序或作为 ActiveX 控件时，只能调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2844">This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-2845">有关继承的类来调用此方法的所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2845">for all windows for inheriting classes to call this method.</span>
          </span>
          <span data-ttu-id="3d62e-2846">关联枚举：<see langword="AllWindows" />的值<see cref="T:System.Security.Permissions.UIPermissionWindow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2846">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2847">重写时<see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" />派生类中的方法，控件应返回<see langword="true" />以指示它已处理的字符。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2847">When overriding the <see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /> method in a derived class, a control should return <see langword="true" /> to indicate that it has processed the character.</span>
            </span>
            <span data-ttu-id="3d62e-2848">不会处理由控件调用的基类的结果的字符<see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" />方法应返回。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2848">For characters that are not processed by the control, the result of calling the base class's <see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /> method should be returned.</span>
            </span>
            <span data-ttu-id="3d62e-2849">控件将很少，如果有过，需要重写此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2849">Controls will seldom, if ever, need to override this method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="abstract member ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool&#xA;override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="control.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="3d62e-2850">
            <see cref="T:System.Windows.Forms.Keys" /> 值之一，表示要处理的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2850">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2851">处理对话框键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2851">Processes a dialog key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-2852">如果键已由控件处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2852">
              <see langword="true" /> if the key was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2853">消息处理对话框字符，如选项卡中，返回、 ESC、 和箭头键在预处理过程中调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2853">This method is called during message preprocessing to handle dialog characters, such as TAB, RETURN, ESC, and arrow keys.</span></span> <span data-ttu-id="3d62e-2854">仅当调用此方法<xref:System.Windows.Forms.Control.IsInputKey%2A>方法指示该控件未在处理该键。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2854">This method is called only if the <xref:System.Windows.Forms.Control.IsInputKey%2A> method indicates that the control is not processing the key.</span></span> <span data-ttu-id="3d62e-2855"><xref:System.Windows.Forms.Control.ProcessDialogKey%2A>只需将字符发送到的父<xref:System.Windows.Forms.Control.ProcessDialogKey%2A>方法或返回`false`如果控件具有没有父级。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2855">The <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> method, or returns `false` if the control has no parent.</span></span> <span data-ttu-id="3d62e-2856"><xref:System.Windows.Forms.Form>类重写此方法以执行实际处理对话框键。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2856">The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog keys.</span></span> <span data-ttu-id="3d62e-2857">当控件承载在 Windows 窗体应用程序或作为 ActiveX 控件时，只能调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2857">This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-2858">有关继承的类来调用此方法的所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2858">for all windows for inheriting classes to call this method.</span>
          </span>
          <span data-ttu-id="3d62e-2859">关联枚举：<see langword="AllWindows" />的值<see cref="T:System.Security.Permissions.UIPermissionWindow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2859">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2860">重写时<see cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" />派生类中的方法，控件应返回<see langword="true" />以指示它已处理该键。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2860">When overriding the <see cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" /> method in a derived class, a control should return <see langword="true" /> to indicate that it has processed the key.</span>
            </span>
            <span data-ttu-id="3d62e-2861">不会处理由控件调用的基类的结果的密钥<see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" />方法应返回。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2861">For keys that are not processed by the control, the result of calling the base class's <see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /> method should be returned.</span>
            </span>
            <span data-ttu-id="3d62e-2862">控件将很少，如果有过，需要重写此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2862">Controls will seldom, if ever, need to override this method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyEventArgs">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessKeyEventArgs (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessKeyEventArgs(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessKeyEventArgs (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessKeyEventArgs(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member ProcessKeyEventArgs :  -&gt; bool&#xA;override this.ProcessKeyEventArgs :  -&gt; bool" Usage="control.ProcessKeyEventArgs m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="3d62e-2863">通过引用传递的 <see cref="T:System.Windows.Forms.Message" />，表示要处理的窗口消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2863">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2864">处理键消息并生成适当的控件事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2864">Processes a key message and generates the appropriate control events.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-2865">如果消息已由控件处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2865">
              <see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2866">当一个控件接收键盘消息时，调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2866">This method is called when a control receives a keyboard message.</span></span> <span data-ttu-id="3d62e-2867">该方法负责生成合适的关键事件的消息通过调用<xref:System.Windows.Forms.Control.OnKeyPress%2A>， <xref:System.Windows.Forms.Control.OnKeyDown%2A>，或<xref:System.Windows.Forms.Control.OnKeyUp%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2867">The method is responsible for generating the appropriate key events for the message by calling the <xref:System.Windows.Forms.Control.OnKeyPress%2A>, <xref:System.Windows.Forms.Control.OnKeyDown%2A>, or <xref:System.Windows.Forms.Control.OnKeyUp%2A> methods.</span></span> <span data-ttu-id="3d62e-2868">`m`参数包含必须处理的窗口消息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2868">The `m` parameter contains the window message that must be processed.</span></span> <span data-ttu-id="3d62e-2869">可能值为<xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType>属性是 WM_CHAR、 WM_KEYDOWN、 WM_SYSKEYDOWN、 WM_KEYUP、 WM_SYSKEYUP 和 WM_IME_CHAR。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2869">Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, WM_SYSKEYUP, and WM_IME_CHAR.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-2870">有关继承的类来调用此方法的所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2870">for all windows for inheriting classes to call this method.</span>
          </span>
          <span data-ttu-id="3d62e-2871">关联枚举：<see langword="AllWindows" />的值<see cref="T:System.Security.Permissions.UIPermissionWindow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2871">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="3d62e-2872">直接调用方调用非托管的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2872">for the immediate caller to call unmanaged code.</span>
          </span>
          <span data-ttu-id="3d62e-2873">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2873">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2874">重写时<see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />派生类中的方法，控件应返回<see langword="true" />以指示它已处理该键。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2874">When overriding the <see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /> method in a derived class, a control should return <see langword="true" /> to indicate that it has processed the key.</span>
            </span>
            <span data-ttu-id="3d62e-2875">不会处理由控件调用的基类的结果的密钥<see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />方法应返回。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2875">For keys that are not processed by the control, the result of calling the base class's <see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /> method should be returned.</span>
            </span>
            <span data-ttu-id="3d62e-2876">控件将很少，如果有过，需要重写此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2876">Controls will seldom, if ever, need to override this method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyMessage">
      <MemberSignature Language="C#" Value="protected internal virtual bool ProcessKeyMessage (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessKeyMessage(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ProcessKeyMessage (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ProcessKeyMessage(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member ProcessKeyMessage :  -&gt; bool&#xA;override this.ProcessKeyMessage :  -&gt; bool" Usage="control.ProcessKeyMessage m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="3d62e-2877">通过引用传递的 <see cref="T:System.Windows.Forms.Message" />，表示要处理的窗口消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2877">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2878">处理键盘消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2878">Processes a keyboard message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-2879">如果消息已由控件处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2879">
              <see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2880">当一个控件接收键盘消息时，调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2880">This method is called when a control receives a keyboard message.</span></span> <span data-ttu-id="3d62e-2881">该方法首先确定控件是否具有一个父级;如果是，则调用父<xref:System.Windows.Forms.Control.ProcessKeyPreview%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2881">The method first determines whether the control has a parent; if so, it calls the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method.</span></span> <span data-ttu-id="3d62e-2882">如果父<xref:System.Windows.Forms.Control.ProcessKeyPreview%2A>方法不会处理该消息则<xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A>调用方法来生成相应的键盘事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2882">If the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method does not process the message then the <xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A> method is called to generate the appropriate keyboard events.</span></span> <span data-ttu-id="3d62e-2883">`m`参数包含必须处理的窗口消息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2883">The `m` parameter contains the window message that must be processed.</span></span> <span data-ttu-id="3d62e-2884">可能值为<xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType>属性是 WM_CHAR、 WM_KEYDOWN、 WM_SYSKEYDOWN、 WM_KEYUP 和 WM_SYSKEYUP。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2884">Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-2885">有关继承的类来调用此方法的所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2885">for all windows for inheriting classes to call this method.</span>
          </span>
          <span data-ttu-id="3d62e-2886">关联枚举：<see langword="AllWindows" />的值<see cref="T:System.Security.Permissions.UIPermissionWindow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2886">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2887">重写时<see cref="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" />方法，控件应返回<see langword="true" />以指示它已处理该键。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2887">When overriding the <see cref="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" /> method, a control should return <see langword="true" /> to indicate that it has processed the key.</span>
            </span>
            <span data-ttu-id="3d62e-2888">不会处理由控件的基类的结果的密钥<see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />应返回。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2888">For keys that are not processed by the control, the result of the base class's <see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /> should be returned.</span>
            </span>
            <span data-ttu-id="3d62e-2889">控件将很少，如果有过，需要重写此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2889">Controls will seldom, if ever, need to override this method.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyPreview">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessKeyPreview (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessKeyPreview(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessKeyPreview (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessKeyPreview(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member ProcessKeyPreview :  -&gt; bool&#xA;override this.ProcessKeyPreview :  -&gt; bool" Usage="control.ProcessKeyPreview m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="3d62e-2890">通过引用传递的 <see cref="T:System.Windows.Forms.Message" />，表示要处理的窗口消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2890">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2891">预览键盘消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2891">Previews a keyboard message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-2892">如果消息已由控件处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2892">
              <see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2893">当子控件接收键盘消息时，子控件通过调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2893">This method is called by a child control when the child control receives a keyboard message.</span></span> <span data-ttu-id="3d62e-2894">子控件生成的消息的任何键盘事件之前调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2894">The child control calls this method before generating any keyboard events for the message.</span></span> <span data-ttu-id="3d62e-2895">如果此方法返回`true`，子控件将处理的消息，它不生成任何键盘事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2895">If this method returns `true`, the child control considers the message processed and does not generate any keyboard events.</span></span> <span data-ttu-id="3d62e-2896">`m`参数包含要预览的窗口消息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2896">The `m` parameter contains the window message to preview.</span></span> <span data-ttu-id="3d62e-2897">可能值为<xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType>属性是 WM_CHAR、 WM_KEYDOWN、 WM_SYSKEYDOWN、 WM_KEYUP 和 WM_SYSKEYUP。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2897">Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP.</span></span> <span data-ttu-id="3d62e-2898"><xref:System.Windows.Forms.Control.ProcessKeyPreview%2A>方法只需将该字符发送到的父<xref:System.Windows.Forms.Control.ProcessKeyPreview%2A>方法或返回`false`如果控件具有没有父级。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2898">The <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method, or returns `false` if the control has no parent.</span></span> <span data-ttu-id="3d62e-2899"><xref:System.Windows.Forms.Form>类重写此方法以执行实际处理对话框键。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2899">The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog keys.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-2900">有关继承的类来调用此方法的所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2900">for all windows for inheriting classes to call this method.</span>
          </span>
          <span data-ttu-id="3d62e-2901">关联枚举：<see langword="AllWindows" />的值<see cref="T:System.Security.Permissions.UIPermissionWindow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2901">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="3d62e-2902">直接调用方调用非托管的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2902">for the immediate caller to call unmanaged code.</span>
          </span>
          <span data-ttu-id="3d62e-2903">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2903">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-2904">重写时<see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" />派生类中的方法，控件应返回<see langword="true" />以指示它已处理该键。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2904">When overriding the <see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /> method in a derived class, a control should return <see langword="true" /> to indicate that it has processed the key.</span>
            </span>
            <span data-ttu-id="3d62e-2905">不会处理由控件调用的基类的结果的密钥<see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" />方法应返回。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-2905">For keys that are not processed by the control, the result of calling the base class's <see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /> method should be returned.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal virtual bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ProcessMnemonic(char charCode);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMnemonic : char -&gt; bool&#xA;override this.ProcessMnemonic : char -&gt; bool" Usage="control.ProcessMnemonic charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">
          <span data-ttu-id="3d62e-2906">要处理的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2906">The character to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2907">处理助记键字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2907">Processes a mnemonic character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-2908">如果字符由控件作为助记键处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2908">
              <see langword="true" /> if the character was processed as a mnemonic by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2909">调用此方法以便为控件提供机会处理助记键字符。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2909">This method is called to give a control the opportunity to process a mnemonic character.</span></span> <span data-ttu-id="3d62e-2910">该方法应确定是否在控件处于处理助记键的状态，是否给定的字符是否表示助记键。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2910">The method should determine whether the control is in a state to process mnemonics and if whether the given character represents a mnemonic.</span></span> <span data-ttu-id="3d62e-2911">如果通过因此，此方法应执行与助记键并返回关联的操作`true`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2911">If so, the method should perform the action associated with the mnemonic and return `true`.</span></span> <span data-ttu-id="3d62e-2912">如果不是，该方法应返回`false`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2912">If not, the method should return `false`.</span></span> <span data-ttu-id="3d62e-2913">此方法的实现通常使用<xref:System.Windows.Forms.Control.IsMnemonic%2A>方法，以确定给定的字符是否匹配控件的文本中的助记键。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2913">Implementations of this method often use the <xref:System.Windows.Forms.Control.IsMnemonic%2A> method to determine whether the given character matches a mnemonic in the control's text.</span></span>  
  
 <span data-ttu-id="3d62e-2914">例如:</span><span class="sxs-lookup"><span data-stu-id="3d62e-2914">For example:</span></span>  
  
```csharp  
if (CanSelect && IsMnemonic(charCode, MyControl.Text) {  
      // Perform action associated with mnemonic.  
       }  
```  
  
 <span data-ttu-id="3d62e-2915">此默认实现<xref:System.Windows.Forms.Control.ProcessMnemonic%2A>方法仅返回`false`以指示该控件具有没有助记键。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2915">This default implementation of the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method simply returns `false` to indicate that the control has no mnemonic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2916">下面的代码示例演示如何重写 button 类的扩展<xref:System.Windows.Forms.Control.ProcessMnemonic%2A>方法以显示自定义行为。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2916">The following code example demonstrates an extension of the button class that overrides the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method to exhibit custom behavior.</span></span> <span data-ttu-id="3d62e-2917">该示例还演示如何使用<xref:System.Windows.Forms.Control.CanSelect%2A>和<xref:System.Windows.Forms.Control.IsMnemonic%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2917">The example also demonstrates the use of the <xref:System.Windows.Forms.Control.CanSelect%2A> and <xref:System.Windows.Forms.Control.IsMnemonic%2A> properties.</span></span> <span data-ttu-id="3d62e-2918">若要运行此示例中的窗体类，同一文件中后面粘贴以下代码。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2918">To run this example paste the following code after a form class, in the same file.</span></span> <span data-ttu-id="3d62e-2919">添加的按钮类型的`MnemonicButton`到窗体。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2919">Add a button of type `MnemonicButton` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-2920">有关继承的类来调用此方法的所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2920">for all windows for inheriting classes to call this method.</span>
          </span>
          <span data-ttu-id="3d62e-2921">关联枚举：<see langword="AllWindows" />的值<see cref="T:System.Security.Permissions.UIPermissionWindow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2921">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)" />
        <altmember cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="ProductName">
      <MemberSignature Language="C#" Value="public string ProductName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ProductName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductName : string" Usage="System.Windows.Forms.Control.ProductName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-2922">获取包含控件的程序集的产品名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2922">Gets the product name of the assembly containing the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-2923">包含控件的程序集的产品名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2923">The product name of the assembly containing the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2924"><xref:System.Windows.Forms.Control.ProductName%2A>属性是只读的属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2924">The <xref:System.Windows.Forms.Control.ProductName%2A> property is a read-only property.</span></span> <span data-ttu-id="3d62e-2925">若要更改此属性的值，设置<xref:System.Reflection.AssemblyProductAttribute.Product%2A>属性值为<xref:System.Reflection.AssemblyProductAttribute>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2925">To change the value of this property, set the <xref:System.Reflection.AssemblyProductAttribute.Product%2A> property value of the <xref:System.Reflection.AssemblyProductAttribute>.</span></span> <span data-ttu-id="3d62e-2926">下面的 C# 代码集行<xref:System.Windows.Forms.Control.ProductName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2926">The following line of C# code sets the <xref:System.Windows.Forms.Control.ProductName%2A> property.</span></span>  
  
```  
[assembly: AssemblyProduct("MyApplication")]  
```  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-2927">强烈建议你提供公司名称、 产品名称和产品版本。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2927">It is strongly recommended that you provide the company name, product name, and product version.</span></span> <span data-ttu-id="3d62e-2928">提供此信息使 Windows 窗体功能的使用，如<xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType>，使其能够更轻松地编写符合"Certified Windows"程序的应用程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2928">Providing this information enables the use of Windows Forms features such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType> that make it easier to write applications that comply with the "Certified for Windows" program.</span></span> <span data-ttu-id="3d62e-2929">有关为 Windows 认证计划的详细信息，请参阅http://msdn.microsoft.com/certification。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2929">For more information about the Certified for Windows program, see http://msdn.microsoft.com/certification.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2930">下面的代码示例显示有关中的应用程序信息<xref:System.Windows.Forms.Label>所包含的<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2930">The following code example displays information about the application in a <xref:System.Windows.Forms.Label> contained by a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="3d62e-2931">此示例需要<xref:System.Windows.Forms.Control.CompanyName%2A>，<xref:System.Windows.Forms.Control.ProductName%2A>和<xref:System.Windows.Forms.Control.ProductVersion%2A>已设置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2931">This example requires that the <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> and <xref:System.Windows.Forms.Control.ProductVersion%2A> have been set.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CPP/aboutdialog.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CS/aboutdialog.cs#1)]
 [!code-vb[Windows.Forms.Control Properties3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties3/VB/aboutdialog.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.AssemblyProductAttribute.Product" />
      </Docs>
    </Member>
    <Member MemberName="ProductVersion">
      <MemberSignature Language="C#" Value="public string ProductVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductVersion" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ProductVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductVersion : string" Usage="System.Windows.Forms.Control.ProductVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-2932">获取包含控件的程序集的版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2932">Gets the version of the assembly containing the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-2933">包含控件的程序集的文件版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2933">The file version of the assembly containing the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2934"><xref:System.Windows.Forms.Control.ProductVersion%2A>属性是只读的属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2934">The <xref:System.Windows.Forms.Control.ProductVersion%2A> property is a read-only property.</span></span> <span data-ttu-id="3d62e-2935">若要更改此属性的值，设置<xref:System.Reflection.AssemblyVersionAttribute.Version%2A>属性值为<xref:System.Reflection.AssemblyVersionAttribute>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2935">To change the value of this property, set the <xref:System.Reflection.AssemblyVersionAttribute.Version%2A> property value of the <xref:System.Reflection.AssemblyVersionAttribute>.</span></span> <span data-ttu-id="3d62e-2936">下面的 C# 代码集行<xref:System.Windows.Forms.Control.ProductVersion%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2936">The following line of C# code sets the <xref:System.Windows.Forms.Control.ProductVersion%2A> property.</span></span>  
  
```  
[assembly: AssemblyVersion("1.0.1")]  
```  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-2937">强烈建议你提供公司名称、 产品名称和产品版本。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2937">It is strongly recommended that you provide the company name, product name, and product version.</span></span> <span data-ttu-id="3d62e-2938">提供此信息使 Windows 窗体功能的使用，如<xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType>，使其能够更轻松地编写符合"Certified Windows"程序的应用程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2938">Providing this information enables the use of Windows Forms features such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType> that make it easier to write applications that comply with the "Certified for Windows" program.</span></span> <span data-ttu-id="3d62e-2939">有关为 Windows 认证计划的详细信息，请参阅http://msdn.microsoft.com/certification。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2939">For more information about the Certified for Windows program, see http://msdn.microsoft.com/certification.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2940">下面的代码示例显示有关中的应用程序信息<xref:System.Windows.Forms.Label>所包含的<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2940">The following code example displays information about the application in a <xref:System.Windows.Forms.Label> contained by a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="3d62e-2941">此示例需要<xref:System.Windows.Forms.Control.CompanyName%2A>，<xref:System.Windows.Forms.Control.ProductName%2A>和<xref:System.Windows.Forms.Control.ProductVersion%2A>已设置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2941">This example requires that the <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> and <xref:System.Windows.Forms.Control.ProductVersion%2A> have been set.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CPP/aboutdialog.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CS/aboutdialog.cs#1)]
 [!code-vb[Windows.Forms.Control Properties3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties3/VB/aboutdialog.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.AssemblyVersionAttribute.Version" />
      </Docs>
    </Member>
    <Member MemberName="PropagatingImeMode">
      <MemberSignature Language="C#" Value="protected static System.Windows.Forms.ImeMode PropagatingImeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Forms.ImeMode PropagatingImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.PropagatingImeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property PropagatingImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Windows::Forms::ImeMode PropagatingImeMode { System::Windows::Forms::ImeMode get(); };" />
      <MemberSignature Language="F#" Value="member this.PropagatingImeMode : System.Windows.Forms.ImeMode" Usage="System.Windows.Forms.Control.PropagatingImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-2942">获取一个表示传播 IME 模式的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2942">Gets an object that represents a propagating IME mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-2943">一个表示传播 IME 模式的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2943">An object that represents a propagating IME mode.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryAccessibilityHelp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QueryAccessibilityHelpEventHandler QueryAccessibilityHelp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QueryAccessibilityHelpEventHandler QueryAccessibilityHelp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.QueryAccessibilityHelp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryAccessibilityHelp As QueryAccessibilityHelpEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QueryAccessibilityHelpEventHandler ^ QueryAccessibilityHelp;" />
      <MemberSignature Language="F#" Value="member this.QueryAccessibilityHelp : System.Windows.Forms.QueryAccessibilityHelpEventHandler " Usage="member this.QueryAccessibilityHelp : System.Windows.Forms.QueryAccessibilityHelpEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QueryAccessibilityHelpEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-2944">在 <see cref="T:System.Windows.Forms.AccessibleObject" /> 为辅助功能应用程序提供帮助时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2944">Occurs when <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing help to accessibility applications.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2945">应使用<xref:System.Windows.Forms.HelpProvider>类，以使用户能够通过按 F1 键来调用可访问对象的帮助。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2945">You should use the <xref:System.Windows.Forms.HelpProvider> class to enable users to invoke help on your accessible object by pressing the F1 key.</span></span> <span data-ttu-id="3d62e-2946">使用<xref:System.Windows.Forms.HelpProvider>中的完整信息为您提供<xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2946">Using the <xref:System.Windows.Forms.HelpProvider> provides you with complete information in the <xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs>.</span></span> <span data-ttu-id="3d62e-2947">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2947">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2948">下面的代码示例演示如何创建一个具有辅助功能的图表控件，并使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>类，以公开访问的信息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2948">The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="3d62e-2949">控件绘制图例以及两条曲线。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2949">The control plots two curves along with a legend.</span></span> <span data-ttu-id="3d62e-2950">`ChartControlAccessibleObject`类，该类派生自`ControlAccessibleObject`，在使用<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法以提供自定义访问图表控件的信息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2950">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="3d62e-2951">因为不是实际图表图例<xref:System.Windows.Forms.Control>-基于控制，但改为绘制由图表控件，它不提供任何内置的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2951">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not any built-in accessible information.</span></span> <span data-ttu-id="3d62e-2952">因此，`ChartControlAccessibleObject`类将重写<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法以返回`CurveLegendAccessibleObject`，它表示每个部分的图例可访问信息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2952">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="3d62e-2953">当辅助功能的应用程序使用该控件时，该控件可以提供所需的可访问信息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2953">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="3d62e-2954">这段代码摘录演示了如何处理<xref:System.Windows.Forms.Control.QueryAccessibilityHelp>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2954">This code excerpt demonstrates handling the <xref:System.Windows.Forms.Control.QueryAccessibilityHelp> event.</span></span> <span data-ttu-id="3d62e-2955">请参阅<xref:System.Windows.Forms.AccessibleObject>完整的代码示例的类概述。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2955">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#3)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#3)]
 [!code-vb[System.Windows.Forms.AccessibleObject#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.Forms.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.Forms.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-2956">在拖放操作期间发生，并且允许拖动源确定是否应取消拖放操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2956">Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-2957"><xref:System.Windows.Forms.Control.QueryContinueDrag>拖放操作期间键盘或鼠标按钮状态更改时引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2957">The <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span> <span data-ttu-id="3d62e-2958"><xref:System.Windows.Forms.Control.QueryContinueDrag>事件允许拖动源确定是否应取消拖放操作。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2958">The <xref:System.Windows.Forms.Control.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="3d62e-2959">下面描述与拖放操作相关的事件的引发方式以及引发时间。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2959">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="3d62e-2960"><xref:System.Windows.Forms.Control.DoDragDrop%2A>方法确定当前游标位置下的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2960">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="3d62e-2961">然后检查以查看该控件是否有效的放置目标。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2961">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="3d62e-2962">如果控件是有效的放置目标，<xref:System.Windows.Forms.Control.GiveFeedback>指定的拖放效果引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2962">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="3d62e-2963">有关拖放效果的列表，请参见 <xref:System.Windows.Forms.DragDropEffects> 枚举。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2963">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="3d62e-2964">跟踪鼠标光标位置、键盘状态和鼠标按钮状态的更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2964">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="3d62e-2965">如果用户移出一个窗口，则引发 <xref:System.Windows.Forms.Control.DragLeave> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2965">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="3d62e-2966">如果鼠标进入另一个控件，则引发该控件的 <xref:System.Windows.Forms.Control.DragEnter>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2966">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="3d62e-2967">如果鼠标移动但停留在同一个控件中，则引发 <xref:System.Windows.Forms.Control.DragOver> 事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2967">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="3d62e-2968">如果键盘或鼠标按钮状态，更改<xref:System.Windows.Forms.Control.QueryContinueDrag>事件引发，并确定是否继续拖动、 放置数据，或取消操作值的基础<xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>属性的事件的<xref:System.Windows.Forms.QueryContinueDragEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2968">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="3d62e-2969">如果的值<xref:System.Windows.Forms.DragAction>是`Continue`，则<xref:System.Windows.Forms.Control.DragOver>引发事件以继续操作并<xref:System.Windows.Forms.Control.GiveFeedback>事件以产生新效果，从而可以设置适当的可视反馈。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2969">If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="3d62e-2970">有关有效放置效果的列表，请参见 <xref:System.Windows.Forms.DragDropEffects> 枚举。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2970">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="3d62e-2971"><xref:System.Windows.Forms.Control.DragOver>和<xref:System.Windows.Forms.Control.GiveFeedback>事件成对发生，以便当鼠标移到放置目标时，用户提供的最新反馈有关鼠标的位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2971">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="3d62e-2972">如果的值<xref:System.Windows.Forms.DragAction>是`Drop`，则放置效果值将返回到源，以便源应用程序可以执行相应的操作对源数据中; 例如，如果则剪切数据是移动操作。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2972">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="3d62e-2973">如果的值<xref:System.Windows.Forms.DragAction>是`Cancel`，则<xref:System.Windows.Forms.Control.DragLeave>引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2973">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
 <span data-ttu-id="3d62e-2974">默认情况下<xref:System.Windows.Forms.Control.QueryContinueDrag>事件将设置<xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>到`Cancel`中<xref:System.Windows.Forms.DragAction>如果按下了 ESC 键，并设置<xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>到`Drop`中<xref:System.Windows.Forms.DragAction>如果按下鼠标左键、 中间名或右按钮。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2974">By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to `Cancel` in <xref:System.Windows.Forms.DragAction> if the ESC key was pressed and sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to `Drop` in <xref:System.Windows.Forms.DragAction> if the left, middle, or right mouse button is pressed.</span></span>  
  
 <span data-ttu-id="3d62e-2975">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2975">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-2976">下面的代码示例演示了两个之间拖放操作<xref:System.Windows.Forms.ListBox>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2976">The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="3d62e-2977">此示例调用<xref:System.Windows.Forms.Control.DoDragDrop%2A>当拖动操作开始时的方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2977">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="3d62e-2978">如果已移动鼠标拖动操作启动多个<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>鼠标位置在从<xref:System.Windows.Forms.Control.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2978">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="3d62e-2979"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定要在拖动的项的索引`MouseDown`事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2979">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="3d62e-2980">示例还演示如何使用自定义光标拖放操作。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2980">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="3d62e-2981">该示例需要两个光标文件`3dwarro.cur`和`3dwno.cur`、 存在于应用程序目录，用于自定义拖动和不可拖动光标，分别。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2981">The example requires that two cursor files,`3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="3d62e-2982">如果将使用自定义光标`UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>检查。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2982">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="3d62e-2983">在中设置自定义光标<xref:System.Windows.Forms.Control.GiveFeedback>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2983">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="3d62e-2984">键盘状态进行评估<xref:System.Windows.Forms.Control.DragOver>事件处理程序的权利`ListBox`，以确定拖动操作将为基于 SHIFT、 CTRL、 ALT 或 CTRL + ALT 键的状态。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2984">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="3d62e-2985">中的位置`ListBox`期间还确定发生下拉`DragOver`事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2985">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="3d62e-2986">如果要删除的数据不是`String`，则<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>设置为`None`中<xref:System.Windows.Forms.DragDropEffects>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2986">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>.</span></span> <span data-ttu-id="3d62e-2987">最后，在显示状态的下拉`DropLocationLabel` <xref:System.Windows.Forms.Label>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2987">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="3d62e-2988">若要删除的权利的数据`ListBox`在中确定<xref:System.Windows.Forms.Control.DragDrop>事件处理程序和`String`值中的适当位置添加`ListBox`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2988">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="3d62e-2989">如果拖动操作移动边界以外的窗体，则在取消拖放操作<xref:System.Windows.Forms.Control.QueryContinueDrag>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2989">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="3d62e-2990">这段代码摘录演示了如何使用<xref:System.Windows.Forms.Control.QueryContinueDrag>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2990">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.QueryContinueDrag> event.</span></span> <span data-ttu-id="3d62e-2991">请参阅<xref:System.Windows.Forms.Control.DoDragDrop%2A>完整的代码示例的方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-2991">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaiseDragEvent">
      <MemberSignature Language="C#" Value="protected void RaiseDragEvent (object key, System.Windows.Forms.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseDragEvent(object key, class System.Windows.Forms.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseDragEvent (key As Object, e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseDragEvent(System::Object ^ key, System::Windows::Forms::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.RaiseDragEvent : obj * System.Windows.Forms.DragEventArgs -&gt; unit" Usage="control.RaiseDragEvent (key, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="3d62e-2992">要引发的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2992">The event to raise.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="3d62e-2993">包含事件数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2993">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2994">引发适当的拖动事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2994">Raises the appropriate drag event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaiseKeyEvent">
      <MemberSignature Language="C#" Value="protected void RaiseKeyEvent (object key, System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseKeyEvent(object key, class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseKeyEvent (key As Object, e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseKeyEvent(System::Object ^ key, System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.RaiseKeyEvent : obj * System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="control.RaiseKeyEvent (key, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="3d62e-2995">要引发的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2995">The event to raise.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="3d62e-2996">包含事件数据的 <see cref="T:System.Windows.Forms.KeyEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2996">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-2997">引发适当的键事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2997">Raises the appropriate key event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaiseMouseEvent">
      <MemberSignature Language="C#" Value="protected void RaiseMouseEvent (object key, System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseMouseEvent(object key, class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseMouseEvent (key As Object, e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseMouseEvent(System::Object ^ key, System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.RaiseMouseEvent : obj * System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.RaiseMouseEvent (key, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="3d62e-2998">要引发的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2998">The event to raise.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="3d62e-2999">包含事件数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-2999">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3000">引发适当的鼠标事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3000">Raises the appropriate mouse event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePaintEvent">
      <MemberSignature Language="C#" Value="protected void RaisePaintEvent (object key, System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaisePaintEvent(object key, class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaisePaintEvent (key As Object, e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaisePaintEvent(System::Object ^ key, System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.RaisePaintEvent : obj * System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.RaisePaintEvent (key, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="3d62e-3001">要引发的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3001">The event to raise.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="3d62e-3002">包含事件数据的 <see cref="T:System.Windows.Forms.PaintEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3002">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3003">引发适当的绘画事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3003">Raises the appropriate paint event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RecreateHandle">
      <MemberSignature Language="C#" Value="protected void RecreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RecreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RecreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RecreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RecreateHandle();" />
      <MemberSignature Language="F#" Value="member this.RecreateHandle : unit -&gt; unit" Usage="control.RecreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3004">强制为控件重新创建句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3004">Forces the re-creation of the handle for the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3005"><xref:System.Windows.Forms.Control.RecreateHandle%2A>只要参数所需的一个新控件，调用方法使用从调用，但<xref:System.Windows.Forms.Control.UpdateStyles%2A>到<xref:System.Windows.Forms.Control.CreateParams%2A>是不够的。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3005">The <xref:System.Windows.Forms.Control.RecreateHandle%2A> method is called whenever parameters are needed for a new control, but using a call from <xref:System.Windows.Forms.Control.UpdateStyles%2A> to <xref:System.Windows.Forms.Control.CreateParams%2A> is insufficient.</span></span> <span data-ttu-id="3d62e-3006">此方法也会调用<xref:System.Windows.Forms.Control.DestroyHandle%2A>并<xref:System.Windows.Forms.Control.CreateHandle%2A>，并设置<xref:System.Windows.Forms.Control.RecreatingHandle%2A>到`true`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3006">This method also calls <xref:System.Windows.Forms.Control.DestroyHandle%2A> and <xref:System.Windows.Forms.Control.CreateHandle%2A> and sets <xref:System.Windows.Forms.Control.RecreatingHandle%2A> to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="RecreatingHandle">
      <MemberSignature Language="C#" Value="public bool RecreatingHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecreatingHandle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.RecreatingHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecreatingHandle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecreatingHandle { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RecreatingHandle : bool" Usage="System.Windows.Forms.Control.RecreatingHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3007">获取一个值，该值指示控件当前是否在重新创建其句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3007">Gets a value indicating whether the control is currently re-creating its handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-3008">如果控件当前在重新创建其句柄，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3008">
              <see langword="true" /> if the control is currently re-creating its handle; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3009"><xref:System.Windows.Forms.Control.RecreatingHandle%2A>属性返回`true`如果<xref:System.Windows.Forms.Control.RecreateHandle%2A>方法仍在运行控件上。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3009">The <xref:System.Windows.Forms.Control.RecreatingHandle%2A> property returns `true` if the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method is still running on the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="RectangleToClient">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle RectangleToClient (System.Drawing.Rectangle r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle RectangleToClient(valuetype System.Drawing.Rectangle r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function RectangleToClient (r As Rectangle) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle RectangleToClient(System::Drawing::Rectangle r);" />
      <MemberSignature Language="F#" Value="member this.RectangleToClient : System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="control.RectangleToClient r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="r">
          <span data-ttu-id="3d62e-3010">要转换的屏幕坐标 <see cref="T:System.Drawing.Rectangle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3010">The screen coordinate <see cref="T:System.Drawing.Rectangle" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3011">计算指定屏幕矩形的大小和位置（以工作区坐标表示）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3011">Computes the size and location of the specified screen rectangle in client coordinates.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-3012">一个 <see cref="T:System.Drawing.Rectangle" />，表示转换后的 <see cref="T:System.Drawing.Rectangle" />、<paramref name="r" />（以工作区坐标表示）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3012">A <see cref="T:System.Drawing.Rectangle" /> that represents the converted <see cref="T:System.Drawing.Rectangle" />, <paramref name="r" />, in client coordinates.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="RectangleToScreen">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle RectangleToScreen (System.Drawing.Rectangle r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle RectangleToScreen(valuetype System.Drawing.Rectangle r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function RectangleToScreen (r As Rectangle) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle RectangleToScreen(System::Drawing::Rectangle r);" />
      <MemberSignature Language="F#" Value="member this.RectangleToScreen : System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="control.RectangleToScreen r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="r">
          <span data-ttu-id="3d62e-3013">要转换的客户端坐标 <see cref="T:System.Drawing.Rectangle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3013">The client coordinate <see cref="T:System.Drawing.Rectangle" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3014">计算指定工作区矩形的大小和位置（以屏幕坐标表示）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3014">Computes the size and location of the specified client rectangle in screen coordinates.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-3015">一个 <see cref="T:System.Drawing.Rectangle" />，表示转换后的 <see cref="T:System.Drawing.Rectangle" />、<paramref name="p" />（以屏幕坐标表示）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3015">A <see cref="T:System.Drawing.Rectangle" /> that represents the converted <see cref="T:System.Drawing.Rectangle" />, <paramref name="p" />, in screen coordinates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3d62e-3016">下面的代码示例演示如何使用<xref:System.Windows.Forms.Control.BackColor%2A>， <xref:System.Windows.Forms.Control.RectangleToScreen%2A>， <xref:System.Windows.Forms.Control.PointToScreen%2A>， <xref:System.Windows.Forms.Control.MouseButtons%2A>， <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType>，并<xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType>成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3016">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType> members.</span></span> <span data-ttu-id="3d62e-3017">若要运行该示例，请将以下代码粘贴在一个称为窗体**Form1**包含多个控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3017">To run the example, paste the following code in a form called **Form1** containing several controls.</span></span> <span data-ttu-id="3d62e-3018">此示例需要<xref:System.Windows.Forms.Control.MouseDown>， <xref:System.Windows.Forms.Control.MouseMove>，和<xref:System.Windows.Forms.Control.MouseUp>事件连接到在示例中定义的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3018">This example requires that the <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, and <xref:System.Windows.Forms.Control.MouseUp> events are connected to the event handlers defined in the example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="ReflectMessage">
      <MemberSignature Language="C#" Value="protected static bool ReflectMessage (IntPtr hWnd, ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool ReflectMessage(native int hWnd, valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function ReflectMessage (hWnd As IntPtr, ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool ReflectMessage(IntPtr hWnd, System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="static member ReflectMessage : nativeint *  -&gt; bool" Usage="System.Windows.Forms.Control.ReflectMessage (hWnd, m)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWnd" Type="System.IntPtr" />
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="hWnd">
          <span data-ttu-id="3d62e-3019">
            <see cref="T:System.IntPtr" /> 表示要反射消息的控件句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3019">An <see cref="T:System.IntPtr" /> representing the handle of the control to reflect the message to.</span>
          </span>
        </param>
        <param name="m">
          <span data-ttu-id="3d62e-3020">
            <see cref="T:System.Windows.Forms.Message" /> 表示要反射的 Windows 消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3020">A <see cref="T:System.Windows.Forms.Message" /> representing the Windows message to reflect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3021">向绑定到指定句柄的控件反映指定消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3021">Reflects the specified message to the control that is bound to the specified handle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-3022">如果已反映消息，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3022">
              <see langword="true" /> if the message was reflected; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3023"><xref:System.Windows.Forms.Control.ReflectMessage%2A>方法是一种基础结构方法，并通常不应调用在代码中。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3023">The <xref:System.Windows.Forms.Control.ReflectMessage%2A> method is an infrastructure method and typically should not be called from your code.</span></span>  
  
 <span data-ttu-id="3d62e-3024">如果`hWnd`参数不表示有效控件<xref:System.Windows.Forms.Control.ReflectMessage%2A>方法将返回`false`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3024">If the `hWnd` parameter does not represent a valid control, the <xref:System.Windows.Forms.Control.ReflectMessage%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="3d62e-3025">Windows 消息返回到顶级窗口中，因为<xref:System.Windows.Forms.Control.ReflectMessage%2A>方法用于传播到控件发送该消息返回的消息。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3025">Because Windows messages are returned to the top-level window, the <xref:System.Windows.Forms.Control.ReflectMessage%2A> method is used to propagate the return message to the control that sent the message.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-3026">若要调用此方法的所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3026">for all windows to call this method.</span>
          </span>
          <span data-ttu-id="3d62e-3027">关联枚举：<see langword="AllWindows" />的值<see cref="T:System.Security.Permissions.UIPermissionWindow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3027">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public virtual void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Refresh();" />
      <MemberSignature Language="F#" Value="abstract member Refresh : unit -&gt; unit&#xA;override this.Refresh : unit -&gt; unit" Usage="control.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3028">强制控件使其工作区无效并立即重绘自己和任何子控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3028">Forces the control to invalidate its client area and immediately redraw itself and any child controls.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-3029">重写时<see cref="M:System.Windows.Forms.Control.Refresh" />在派生类中，请务必调用基类的<see cref="M:System.Windows.Forms.Control.Refresh" />方法，以便该控件及其子控件无效并重绘它们。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-3029">When overriding <see cref="M:System.Windows.Forms.Control.Refresh" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.Refresh" /> method so the control and its child controls are invalidated and redrawn.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.Control.Update" />
        <altmember cref="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
      </Docs>
    </Member>
    <Member MemberName="Region">
      <MemberSignature Language="C#" Value="public System.Drawing.Region Region { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Region Region" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Region" />
      <MemberSignature Language="VB.NET" Value="Public Property Region As Region" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Region ^ Region { System::Drawing::Region ^ get(); void set(System::Drawing::Region ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Region : System.Drawing.Region with get, set" Usage="System.Windows.Forms.Control.Region" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Region</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3030">获取或设置与控件关联的窗口区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3030">Gets or sets the window region associated with the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-3031">与控件关联的窗口 <see cref="T:System.Drawing.Region" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3031">The window <see cref="T:System.Drawing.Region" /> associated with the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3032">窗口区域是在其中操作系统允许绘图窗口内的像素为单位的集合。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3032">The window region is a collection of pixels within the window where the operating system permits drawing.</span></span> <span data-ttu-id="3d62e-3033">操作系统不显示窗口的窗口区域之外的任何部分。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3033">The operating system does not display any portion of a window that lies outside of the window region.</span></span> <span data-ttu-id="3d62e-3034">控件的坐标是区域的相对于控件不在控件的客户端区域的左上角。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3034">The coordinates of a control's region are relative to the upper-left corner of the control, not the client area of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-3035">包含与区域的像素集合可以是不连续。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3035">The collection of pixels contained with the region can be noncontiguous.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3036">下面的代码示例演示如何使用<xref:System.Windows.Forms.Control.Region%2A>通过创建圆形按钮的属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3036">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.Region%2A> property by creating a round button.</span></span> <span data-ttu-id="3d62e-3037">若要运行该示例，请将以下代码粘贴在包含名为的按钮的窗体`roundButton`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3037">To run the example, paste the following code in a form containing a button called `roundButton`.</span></span> <span data-ttu-id="3d62e-3038">此示例需要<xref:System.Windows.Forms.Control.Paint>事件连接到在示例中定义的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3038">This example requires that the <xref:System.Windows.Forms.Control.Paint> event is connected to the event handler defined in the example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.Region#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.Region/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.Region#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.Region/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.Region#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.Region/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-3039">若要设置此属性的值的所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3039">for all windows to set this property value.</span>
          </span>
          <span data-ttu-id="3d62e-3040">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3040">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Control.ClientRectangle" />
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="RegionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RegionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RegionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.RegionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RegionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RegionChanged;" />
      <MemberSignature Language="F#" Value="member this.RegionChanged : EventHandler " Usage="member this.RegionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3041">当 <see cref="P:System.Windows.Forms.Control.Region" /> 属性的值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3041">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3042">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3042">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3043">下面的代码示例演示如何将此成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3043">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3d62e-3044">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Control.RegionChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3044">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.RegionChanged> event.</span></span> <span data-ttu-id="3d62e-3045">此报告可帮助您了解事件发生的并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3045">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3d62e-3046">若要报告或频繁发生的事件上多个事件，请考虑更换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或将消息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3046">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3d62e-3047">若要运行此代码示例，请将其粘贴到包含继承的类型的实例的项目<xref:System.Windows.Forms.Control>，如<xref:System.Windows.Forms.Button>或<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3047">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="3d62e-3048">然后该实例命名`Control1`，并确保事件处理程序相关联<xref:System.Windows.Forms.Control.RegionChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3048">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.RegionChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#22)]
 [!code-vb[System.Windows.Forms.EventExamples#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderRightToLeft">
      <MemberSignature Language="C#" Value="protected internal bool RenderRightToLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderRightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.RenderRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property RenderRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool RenderRightToLeft { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RenderRightToLeft : bool" Usage="System.Windows.Forms.Control.RenderRightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This property has been deprecated. Please use RightToLeft instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3049">此属性现已过时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3049">This property is now obsolete.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-3050">如果控件从右向左呈现，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3050">
              <see langword="true" /> if the control is rendered from right to left; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3d62e-3051">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3051">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RescaleConstantsForDpi">
      <MemberSignature Language="C#" Value="protected virtual void RescaleConstantsForDpi (int deviceDpiOld, int deviceDpiNew);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RescaleConstantsForDpi(int32 deviceDpiOld, int32 deviceDpiNew) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RescaleConstantsForDpi (deviceDpiOld As Integer, deviceDpiNew As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RescaleConstantsForDpi(int deviceDpiOld, int deviceDpiNew);" />
      <MemberSignature Language="F#" Value="abstract member RescaleConstantsForDpi : int * int -&gt; unit&#xA;override this.RescaleConstantsForDpi : int * int -&gt; unit" Usage="control.RescaleConstantsForDpi (deviceDpiOld, deviceDpiNew)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceDpiOld" Type="System.Int32" />
        <Parameter Name="deviceDpiNew" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="deviceDpiOld">
          <span data-ttu-id="3d62e-3052">更改前的 DPI 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3052">The DPI value prior to the change.</span>
          </span>
        </param>
        <param name="deviceDpiNew">
          <span data-ttu-id="3d62e-3053">更改后的 DPI 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3053">The DPI value after the change.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3054">发生 DPI 更改时，提供用于重新缩放控件的常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3054">Provides constants for rescaling the control when a DPI change occurs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetBackColor">
      <MemberSignature Language="C#" Value="public virtual void ResetBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetBackColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetBackColor();" />
      <MemberSignature Language="F#" Value="abstract member ResetBackColor : unit -&gt; unit&#xA;override this.ResetBackColor : unit -&gt; unit" Usage="control.ResetBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3055">将 <see cref="P:System.Windows.Forms.Control.BackColor" /> 属性重置为其默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3055">Resets the <see cref="P:System.Windows.Forms.Control.BackColor" /> property to its default value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3056">此方法与此类无关。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3056">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetBindings">
      <MemberSignature Language="C#" Value="public void ResetBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetBindings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetBindings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetBindings();" />
      <MemberSignature Language="F#" Value="member this.ResetBindings : unit -&gt; unit" Usage="control.ResetBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3057">使绑定到 <see cref="T:System.Windows.Forms.BindingSource" /> 的控件重新读取列表中的所有项，并刷新这些项的显示值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3057">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread all the items in the list and refresh their displayed values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3058">此方法与此类无关。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3058">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.DataBindings" />
      </Docs>
    </Member>
    <Member MemberName="ResetCursor">
      <MemberSignature Language="C#" Value="public virtual void ResetCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetCursor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetCursor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetCursor();" />
      <MemberSignature Language="F#" Value="abstract member ResetCursor : unit -&gt; unit&#xA;override this.ResetCursor : unit -&gt; unit" Usage="control.ResetCursor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3059">将 <see cref="P:System.Windows.Forms.Control.Cursor" /> 属性重置为其默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3059">Resets the <see cref="P:System.Windows.Forms.Control.Cursor" /> property to its default value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3060">此方法与此类无关。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3060">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetFont">
      <MemberSignature Language="C#" Value="public virtual void ResetFont ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetFont() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetFont" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetFont ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetFont();" />
      <MemberSignature Language="F#" Value="abstract member ResetFont : unit -&gt; unit&#xA;override this.ResetFont : unit -&gt; unit" Usage="control.ResetFont " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3061">将 <see cref="P:System.Windows.Forms.Control.Font" /> 属性重置为其默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3061">Resets the <see cref="P:System.Windows.Forms.Control.Font" /> property to its default value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3062">此方法与此类无关。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3062">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetForeColor">
      <MemberSignature Language="C#" Value="public virtual void ResetForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetForeColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetForeColor();" />
      <MemberSignature Language="F#" Value="abstract member ResetForeColor : unit -&gt; unit&#xA;override this.ResetForeColor : unit -&gt; unit" Usage="control.ResetForeColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3063">将 <see cref="P:System.Windows.Forms.Control.ForeColor" /> 属性重置为其默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3063">Resets the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property to its default value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3064">此方法与此类无关。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3064">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetImeMode">
      <MemberSignature Language="C#" Value="public void ResetImeMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetImeMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetImeMode" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetImeMode ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetImeMode();" />
      <MemberSignature Language="F#" Value="member this.ResetImeMode : unit -&gt; unit" Usage="control.ResetImeMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3065">将 <see cref="P:System.Windows.Forms.Control.ImeMode" /> 属性重置为其默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3065">Resets the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property to its default value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3066">此方法与此类无关。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3066">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetMouseEventArgs">
      <MemberSignature Language="C#" Value="protected void ResetMouseEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResetMouseEventArgs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetMouseEventArgs" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ResetMouseEventArgs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ResetMouseEventArgs();" />
      <MemberSignature Language="F#" Value="member this.ResetMouseEventArgs : unit -&gt; unit" Usage="control.ResetMouseEventArgs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3067">重置控件以处理 <see cref="E:System.Windows.Forms.Control.MouseLeave" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3067">Resets the control to handle the <see cref="E:System.Windows.Forms.Control.MouseLeave" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetRightToLeft">
      <MemberSignature Language="C#" Value="public virtual void ResetRightToLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetRightToLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetRightToLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetRightToLeft();" />
      <MemberSignature Language="F#" Value="abstract member ResetRightToLeft : unit -&gt; unit&#xA;override this.ResetRightToLeft : unit -&gt; unit" Usage="control.ResetRightToLeft " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3068">将 <see cref="P:System.Windows.Forms.Control.RightToLeft" /> 属性重置为其默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3068">Resets the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property to its default value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3069">此方法与此类无关。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3069">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetText">
      <MemberSignature Language="C#" Value="public virtual void ResetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetText();" />
      <MemberSignature Language="F#" Value="abstract member ResetText : unit -&gt; unit&#xA;override this.ResetText : unit -&gt; unit" Usage="control.ResetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3070">将 <see cref="P:System.Windows.Forms.Control.Text" /> 属性重置为其默认值 (<see cref="F:System.String.Empty" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3070">Resets the <see cref="P:System.Windows.Forms.Control.Text" /> property to its default value (<see cref="F:System.String.Empty" />).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3071">如果创建的设计器通常使用此方法<xref:System.Windows.Forms.Control>或创建你自己的控件、 包含<xref:System.Windows.Forms.Control>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3071">You typically use this method if you are either creating a designer for the <xref:System.Windows.Forms.Control> or creating your own control incorporating the <xref:System.Windows.Forms.Control>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Text" />
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public event EventHandler Resize;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Resize" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Resize" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Resize As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Resize;" />
      <MemberSignature Language="F#" Value="member this.Resize : EventHandler " Usage="member this.Resize : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3072">在调整控件大小时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3072">Occurs when the control is resized.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3073">若要确定<xref:System.Windows.Forms.Control.Size%2A>调整大小后的控件，可以强制转换`sender`的已注册的参数<xref:System.Windows.Forms.ControlEventHandler>方法<xref:System.Windows.Forms.Control>并获取其<xref:System.Windows.Forms.Control.Size%2A>属性 (或<xref:System.Windows.Forms.Control.Height%2A>和<xref:System.Windows.Forms.Control.Width%2A>属性单独）。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3073">To determine the <xref:System.Windows.Forms.Control.Size%2A> of the resized control, you can cast the `sender` parameter of the registered <xref:System.Windows.Forms.ControlEventHandler> method  to a <xref:System.Windows.Forms.Control> and get its <xref:System.Windows.Forms.Control.Size%2A> property (or <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> properties individually).</span></span>  
  
 <span data-ttu-id="3d62e-3074">若要处理自定义布局，请使用<xref:System.Windows.Forms.Control.Layout>而不是调整大小事件的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3074">To handle custom layouts, use the <xref:System.Windows.Forms.Control.Layout> event instead of the Resize event.</span></span> <span data-ttu-id="3d62e-3075"><xref:System.Windows.Forms.Control.Layout>在响应中引发事件<xref:System.Windows.Forms.Control.Resize>事件，也可以在响应会影响控件的布局的其他更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3075">The <xref:System.Windows.Forms.Control.Layout> event is raised in response to a <xref:System.Windows.Forms.Control.Resize> event, but also in response to other changes that affect the layout of the control.</span></span>  
  
 <span data-ttu-id="3d62e-3076">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3076">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3077">下面的代码示例中处理<xref:System.Windows.Forms.Control.Resize>事件的<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3077">The following code example handles the <xref:System.Windows.Forms.Control.Resize> event of a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="3d62e-3078">在窗体的大小调整，事件处理程序将确保窗体仍方形 (其<xref:System.Windows.Forms.Control.Height%2A>和<xref:System.Windows.Forms.Control.Width%2A>保持相等)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3078">When the form is resized, the event handler ensures that the form stays square (its <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> remain equal).</span></span> <span data-ttu-id="3d62e-3079">若要运行此示例，请确保并将此事件处理方法与窗体的<xref:System.Windows.Forms.Control.Resize>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3079">To run this example, make sure and associate this event-handling method with the form’s <xref:System.Windows.Forms.Control.Resize> event.</span></span>  
  
 [!code-cpp[WinForms.Control.Resize#1](~/samples/snippets/cpp/VS_Snippets_Winforms/WinForms.Control.Resize/CPP/form1.cpp#1)]
 [!code-csharp[WinForms.Control.Resize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/WinForms.Control.Resize/CS/form1.cs#1)]
 [!code-vb[WinForms.Control.Resize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WinForms.Control.Resize/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="ResizeRedraw">
      <MemberSignature Language="C#" Value="protected bool ResizeRedraw { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResizeRedraw" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ResizeRedraw" />
      <MemberSignature Language="VB.NET" Value="Protected Property ResizeRedraw As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool ResizeRedraw { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResizeRedraw : bool with get, set" Usage="System.Windows.Forms.Control.ResizeRedraw" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3080">获取或设置一个值，该值指示控件在调整大小时是否重绘自己。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3080">Gets or sets a value indicating whether the control redraws itself when resized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-3081">如果控件在调整大小时重绘自己，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3081">
              <see langword="true" /> if the control redraws itself when resized; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3082"><xref:System.Windows.Forms.Control.ResizeRedraw%2A>属性值的返回值的等效<xref:System.Windows.Forms.Control.GetStyle%2A>方法中传递时<xref:System.Windows.Forms.ControlStyles.ResizeRedraw?displayProperty=nameWithType>作为参数的值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3082">The <xref:System.Windows.Forms.Control.ResizeRedraw%2A> property value is equivalent to the return value of the <xref:System.Windows.Forms.Control.GetStyle%2A> method when passing in the <xref:System.Windows.Forms.ControlStyles.ResizeRedraw?displayProperty=nameWithType> value as a parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
        <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <altmember cref="F:System.Windows.Forms.ControlStyles.ResizeRedraw" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ResumeLayout">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3083">恢复正常的布局逻辑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3083">Resumes the usual layout logic.</span>
          </span>
        </summary>
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ResumeLayout">
      <MemberSignature Language="C#" Value="public void ResumeLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResumeLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResumeLayout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResumeLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResumeLayout();" />
      <MemberSignature Language="F#" Value="member this.ResumeLayout : unit -&gt; unit" Usage="control.ResumeLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3084">恢复正常的布局逻辑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3084">Resumes usual layout logic.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3085">调用<xref:System.Windows.Forms.Control.ResumeLayout%2A>方法强制立即进行布局，如果存在任何挂起的布局请求。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3085">Calling the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method forces an immediate layout if there are any pending layout requests.</span></span>  
  
 <span data-ttu-id="3d62e-3086"><xref:System.Windows.Forms.Control.SuspendLayout%2A>并<xref:System.Windows.Forms.Control.ResumeLayout%2A>方法将相继配合使用来禁止显示多个<xref:System.Windows.Forms.Control.Layout>事件时调整控件的多个属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3086">The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control.</span></span> <span data-ttu-id="3d62e-3087">例如，通常会调用<xref:System.Windows.Forms.Control.SuspendLayout%2A>方法，然后设置<xref:System.Windows.Forms.Control.Size%2A>， <xref:System.Windows.Forms.Control.Location%2A>， <xref:System.Windows.Forms.Control.Anchor%2A>，或<xref:System.Windows.Forms.Control.Dock%2A>的控件，然后调用属性<xref:System.Windows.Forms.Control.ResumeLayout%2A>方法，以使更改生效。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3087">For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.</span></span>  
  
 <span data-ttu-id="3d62e-3088">必须有未挂起调用<xref:System.Windows.Forms.Control.SuspendLayout%2A>为<xref:System.Windows.Forms.Control.ResumeLayout%2A>成功调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3088">There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3089">下面的代码示例将两个按钮添加到窗体。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3089">The following code example adds two buttons to a form.</span></span> <span data-ttu-id="3d62e-3090">示例事务使用的按钮添加<xref:System.Windows.Forms.Control.SuspendLayout%2A>和<xref:System.Windows.Forms.Control.ResumeLayout%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3090">The example transactions the addition of the buttons by using the <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#2)]
 [!code-csharp[Windows.Forms.Control Members2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#2)]
 [!code-vb[Windows.Forms.Control Members2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
      </Docs>
    </Member>
    <Member MemberName="ResumeLayout">
      <MemberSignature Language="C#" Value="public void ResumeLayout (bool performLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResumeLayout(bool performLayout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResumeLayout (performLayout As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResumeLayout(bool performLayout);" />
      <MemberSignature Language="F#" Value="member this.ResumeLayout : bool -&gt; unit" Usage="control.ResumeLayout performLayout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="performLayout" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="performLayout">
          <span data-ttu-id="3d62e-3091">若要执行挂起的布局请求，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3091">
              <see langword="true" /> to execute pending layout requests; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3092">恢复正常的布局逻辑，可以选择强制对挂起的布局请求立即进行布局。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3092">Resumes usual layout logic, optionally forcing an immediate layout of pending layout requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3093">调用<xref:System.Windows.Forms.Control.ResumeLayout%2A>方法强制立即进行布局，如果存在任何挂起的布局请求。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3093">Calling the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method forces an immediate layout if there are any pending layout requests.</span></span> <span data-ttu-id="3d62e-3094">当`performLayout`参数设置为`true`，如果有任何挂起的布局请求，会发生对立即进行布局。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3094">When the `performLayout` parameter is set to `true`, an immediate layout occurs if there are any pending layout requests.</span></span>  
  
 <span data-ttu-id="3d62e-3095"><xref:System.Windows.Forms.Control.SuspendLayout%2A>并<xref:System.Windows.Forms.Control.ResumeLayout%2A>方法将相继配合使用来禁止显示多个<xref:System.Windows.Forms.Control.Layout>事件时调整控件的多个属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3095">The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control.</span></span> <span data-ttu-id="3d62e-3096">例如，通常会调用<xref:System.Windows.Forms.Control.SuspendLayout%2A>方法，然后设置<xref:System.Windows.Forms.Control.Size%2A>， <xref:System.Windows.Forms.Control.Location%2A>， <xref:System.Windows.Forms.Control.Anchor%2A>，或<xref:System.Windows.Forms.Control.Dock%2A>的控件，然后调用属性<xref:System.Windows.Forms.Control.ResumeLayout%2A>方法，以使更改生效。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3096">For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.</span></span>  
  
 <span data-ttu-id="3d62e-3097">必须有未挂起调用<xref:System.Windows.Forms.Control.SuspendLayout%2A>为<xref:System.Windows.Forms.Control.ResumeLayout%2A>成功调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3097">There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-3098">当将多个控件添加到父控件，建议您调用<xref:System.Windows.Forms.Control.SuspendLayout%2A>方法，然后再初始化要添加的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3098">When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added.</span></span> <span data-ttu-id="3d62e-3099">将控件添加到父控件之后, 调用<xref:System.Windows.Forms.Control.ResumeLayout%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3099">After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method.</span></span> <span data-ttu-id="3d62e-3100">这将提高具有多个控件的应用程序的性能。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3100">This will increase the performance of applications with many controls.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public int Right { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Right" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Right" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Right As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Right { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Right : int" Usage="System.Windows.Forms.Control.Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3101">获取控件右边缘与其容器的工作区左边缘之间的距离（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3101">Gets the distance, in pixels, between the right edge of the control and the left edge of its container's client area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-3102">
            <see cref="T:System.Int32" /> 表示控件右边缘与其容器的工作区左边缘之间的距离（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3102">An <see cref="T:System.Int32" /> representing the distance, in pixels, between the right edge of the control and the left edge of its container's client area.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3103">值<xref:System.Windows.Forms.Control.Right%2A>属性等于的总和<xref:System.Windows.Forms.Control.Left%2A>属性值和<xref:System.Windows.Forms.Control.Width%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3103">The value of the <xref:System.Windows.Forms.Control.Right%2A> property is equal to the sum of the <xref:System.Windows.Forms.Control.Left%2A> property value and the <xref:System.Windows.Forms.Control.Width%2A> property value.</span></span>  
  
 <span data-ttu-id="3d62e-3104"><xref:System.Windows.Forms.Control.Right%2A> 属性为只读。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3104">The <xref:System.Windows.Forms.Control.Right%2A> property is read-only.</span></span> <span data-ttu-id="3d62e-3105">您可以通过更改的值间接更改此属性的值<xref:System.Windows.Forms.Control.Left%2A>或<xref:System.Windows.Forms.Control.Width%2A>属性或调用<xref:System.Windows.Forms.Control.SetBounds%2A>， <xref:System.Windows.Forms.Control.SetBoundsCore%2A>， <xref:System.Windows.Forms.Control.UpdateBounds%2A>，或<xref:System.Windows.Forms.Control.SetClientSizeCore%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3105">You can change this property value indirectly by changing the value of the <xref:System.Windows.Forms.Control.Left%2A> or <xref:System.Windows.Forms.Control.Width%2A> properties or calling the <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, or <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3106">下面的代码示例创建三个<xref:System.Windows.Forms.Button>窗体上并使用各种大小相关以及与位置相关属性来设置其大小和位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3106">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="3d62e-3107">此示例中，你需要具有<xref:System.Windows.Forms.Form>具有宽度和高度至少为 300 像素。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3107">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 [!code-cpp[Control.KeyUp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyUp/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyUp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyUp/CS/form1.cs#1)]
 [!code-vb[Control.KeyUp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyUp/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Right" />
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.RightToLeft RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RightToLeft RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeft As RightToLeft" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::RightToLeft RightToLeft { System::Windows::Forms::RightToLeft get(); void set(System::Windows::Forms::RightToLeft value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeft : System.Windows.Forms.RightToLeft with get, set" Usage="System.Windows.Forms.Control.RightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.AmbientValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3108">获取或设置一个值，该值指示是否将控件的元素对齐以支持使用从右向左的字体的区域设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3108">Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-3109">
            <see cref="T:System.Windows.Forms.RightToLeft" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3109">One of the <see cref="T:System.Windows.Forms.RightToLeft" /> values.</span>
          </span>
          <span data-ttu-id="3d62e-3110">默认值为 <see cref="F:System.Windows.Forms.RightToLeft.Inherit" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3110">The default is <see cref="F:System.Windows.Forms.RightToLeft.Inherit" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3111"><xref:System.Windows.Forms.Control.RightToLeft%2A>属性是一个环境属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3111">The <xref:System.Windows.Forms.Control.RightToLeft%2A> property is an ambient property.</span></span> <span data-ttu-id="3d62e-3112">环境属性是控件属性，如果未设置，检索从父控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3112">An ambient property is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="3d62e-3113">例如，<xref:System.Windows.Forms.Button>具有相同<xref:System.Windows.Forms.Control.BackColor%2A>作为其父<xref:System.Windows.Forms.Form>默认情况下。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3113">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="3d62e-3114">有关环境属性的详细信息，请参阅<xref:System.Windows.Forms.AmbientProperties>类或<xref:System.Windows.Forms.Control>类概述。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3114">For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.</span></span>  
  
 <span data-ttu-id="3d62e-3115"><xref:System.Windows.Forms.Control.RightToLeft%2A>属性用于国际应用程序语言从右到左，例如希伯来语或阿拉伯语的写入位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3115">The <xref:System.Windows.Forms.Control.RightToLeft%2A> property is used for international applications where the language is written from right to left, such as Hebrew or Arabic.</span></span> <span data-ttu-id="3d62e-3116">当此属性设置为<xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>，从右到左显示包含文本的控件元素。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3116">When this property is set to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>, control elements that include text are displayed from right to left.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-3117">如果的值<xref:System.Windows.Forms.Control.RightToLeft%2A>在运行时更改属性，仅对不带格式的原始文本时保留。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3117">If the value of the <xref:System.Windows.Forms.Control.RightToLeft%2A> property is changed at run time, only raw text without formatting is preserved.</span></span>  
  
 <span data-ttu-id="3d62e-3118">以下是几个示例的控件元素如何受<xref:System.Windows.Forms.Control.RightToLeft%2A>属性值为<xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="3d62e-3118">The following are a few examples of how control elements are affected by the <xref:System.Windows.Forms.Control.RightToLeft%2A> property value of <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> :</span></span>  
  
-   <span data-ttu-id="3d62e-3119">在左侧而不是可滚动控件的右侧显示垂直滚动条 (例如， <xref:System.Windows.Forms.Form>，<xref:System.Windows.Forms.Panel>多行<xref:System.Windows.Forms.TextBox>，和<xref:System.Windows.Forms.RichTextBox>)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3119">Vertical scroll bars are displayed on the left side rather than right side of scrollable controls (for example, <xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.Panel>, multiline <xref:System.Windows.Forms.TextBox>, and <xref:System.Windows.Forms.RichTextBox>).</span></span>  
  
-   <span data-ttu-id="3d62e-3120">水平滚动条开始右对齐的滚动框 （滚动块）。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3120">Horizontal scroll bars start with the scroll box (thumb) right-aligned.</span></span>  
  
-   <span data-ttu-id="3d62e-3121">复选框元素对齐方式，受`CheckAlign`属性，已逆转<xref:System.Windows.Forms.CheckBox>和<xref:System.Windows.Forms.RadioButton>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3121">The check box element alignment, controlled by the `CheckAlign` property, is reversed for <xref:System.Windows.Forms.CheckBox> and <xref:System.Windows.Forms.RadioButton> controls.</span></span>  
  
-   <span data-ttu-id="3d62e-3122">右对齐列表框、 组合框和 up-down 控件中的项。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3122">Items in list box, combo box, and up-down controls are right aligned.</span></span>  
  
-   <span data-ttu-id="3d62e-3123">向上和向下按钮为上的左对齐<xref:System.Windows.Forms.NumericUpDown>和<xref:System.Windows.Forms.DomainUpDown>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3123">Up and down buttons are left-aligned on <xref:System.Windows.Forms.NumericUpDown> and <xref:System.Windows.Forms.DomainUpDown> controls.</span></span>  
  
-   <span data-ttu-id="3d62e-3124">菜单 (<xref:System.Windows.Forms.MainMenu>， <xref:System.Windows.Forms.MenuItem>，和<xref:System.Windows.Forms.ContextMenu>) 右对齐显示。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3124">Menus (<xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.MenuItem>, and <xref:System.Windows.Forms.ContextMenu>) are displayed right-aligned.</span></span>  
  
-   <span data-ttu-id="3d62e-3125">上的工具栏按钮的对齐<xref:System.Windows.Forms.ToolBar>控件或上文本的对齐方式<xref:System.Windows.Forms.ToolBarButton>不会影响<xref:System.Windows.Forms.Control.RightToLeft%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3125">The alignment of toolbar buttons on a <xref:System.Windows.Forms.ToolBar> control or the alignment of text on a <xref:System.Windows.Forms.ToolBarButton> is not affected by the <xref:System.Windows.Forms.Control.RightToLeft%2A> property.</span></span>  
  
-   <span data-ttu-id="3d62e-3126"><xref:System.Windows.Forms.AxHost> 支持从右到左对齐方式;但是，ActiveX 控件上的效果取决于向其控件作者实现对从右到左显示支持的范围。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3126"><xref:System.Windows.Forms.AxHost> supports right-to-left alignment; however, the effect on an ActiveX control depends on the extent to which the control author implemented support for right-to-left display.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="3d62e-3127">分配的值不是 <see cref="T:System.Windows.Forms.RightToLeft" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3127">The assigned value is not one of the <see cref="T:System.Windows.Forms.RightToLeft" /> values.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-3128">重写时<see cref="P:System.Windows.Forms.Control.RightToLeft" />属性在派生类中，使用基类的<see cref="P:System.Windows.Forms.Control.RightToLeft" />属性扩展的基实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-3128">When overriding the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property to extend the base implementation.</span>
            </span>
            <span data-ttu-id="3d62e-3129">否则，必须提供所有的实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-3129">Otherwise, you must provide all the implementation.</span>
            </span>
            <span data-ttu-id="3d62e-3130">不需要重写二者<see langword="get" />并<see langword="set" />访问器<see cref="P:System.Windows.Forms.Control.RightToLeft" />属性; 您可以根据需要覆盖只有一个。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-3130">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property; you can override only one if needed.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.Forms.RightToLeft" />
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RightToLeftChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.RightToLeftChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftChanged;" />
      <MemberSignature Language="F#" Value="member this.RightToLeftChanged : EventHandler " Usage="member this.RightToLeftChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3131">在 <see cref="P:System.Windows.Forms.Control.RightToLeft" /> 属性值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3131">Occurs when the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property value changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3132">如果引发此事件<xref:System.Windows.Forms.Control.RightToLeft%2A>属性更改通过以编程方式修改或用户交互。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3132">This event is raised if the <xref:System.Windows.Forms.Control.RightToLeft%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="3d62e-3133">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3133">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3134">下面的代码示例是一个事件处理程序时执行<xref:System.Windows.Forms.Control.Text%2A>属性值发生更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3134">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="3d62e-3135"><xref:System.Windows.Forms.Control>类的一些方法具有名称模式*PropertyName* `Changed`的时引发的相应*PropertyName*值发生更改 (*PropertyName*表示相应的属性的名称)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3135">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="3d62e-3136">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3136">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="3d62e-3137">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3137">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-3138">此示例要求具有<xref:System.Windows.Forms.Form>，其中包含<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3138">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RtlTranslateAlignment">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3139">将当前对齐方式转换为适当的对齐方式以支持从右向左的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3139">Converts the current alignment to the appropriate alignment to support right-to-left text.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RtlTranslateAlignment">
      <MemberSignature Language="C#" Value="protected System.Drawing.ContentAlignment RtlTranslateAlignment (System.Drawing.ContentAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Drawing.ContentAlignment RtlTranslateAlignment(valuetype System.Drawing.ContentAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RtlTranslateAlignment (align As ContentAlignment) As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Drawing::ContentAlignment RtlTranslateAlignment(System::Drawing::ContentAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateAlignment : System.Drawing.ContentAlignment -&gt; System.Drawing.ContentAlignment" Usage="control.RtlTranslateAlignment align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Drawing.ContentAlignment" />
      </Parameters>
      <Docs>
        <param name="align">
          <span data-ttu-id="3d62e-3140">
            <see cref="T:System.Drawing.ContentAlignment" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3140">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3141">将指定的 <see cref="T:System.Drawing.ContentAlignment" /> 转换为相应的 <see cref="T:System.Drawing.ContentAlignment" /> 以支持从右向左的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3141">Converts the specified <see cref="T:System.Drawing.ContentAlignment" /> to the appropriate <see cref="T:System.Drawing.ContentAlignment" /> to support right-to-left text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-3142">
            <see cref="T:System.Drawing.ContentAlignment" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3142">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3143">如果<xref:System.Windows.Forms.Control.RightToLeft%2A>的属性<xref:System.Windows.Forms.RightToLeft>设置为`No`，则返回值是否等于`align`传入参数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3143">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Drawing.ContentAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RtlTranslateAlignment">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.HorizontalAlignment RtlTranslateAlignment (System.Windows.Forms.HorizontalAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Forms.HorizontalAlignment RtlTranslateAlignment(valuetype System.Windows.Forms.HorizontalAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RtlTranslateAlignment (align As HorizontalAlignment) As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::HorizontalAlignment RtlTranslateAlignment(System::Windows::Forms::HorizontalAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateAlignment : System.Windows.Forms.HorizontalAlignment -&gt; System.Windows.Forms.HorizontalAlignment" Usage="control.RtlTranslateAlignment align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Windows.Forms.HorizontalAlignment" />
      </Parameters>
      <Docs>
        <param name="align">
          <span data-ttu-id="3d62e-3144">
            <see cref="T:System.Windows.Forms.HorizontalAlignment" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3144">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3145">将指定的 <see cref="T:System.Windows.Forms.HorizontalAlignment" /> 转换为相应的 <see cref="T:System.Windows.Forms.HorizontalAlignment" /> 以支持从右向左的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3145">Converts the specified <see cref="T:System.Windows.Forms.HorizontalAlignment" /> to the appropriate <see cref="T:System.Windows.Forms.HorizontalAlignment" /> to support right-to-left text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-3146">
            <see cref="T:System.Windows.Forms.HorizontalAlignment" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3146">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3147">如果<xref:System.Windows.Forms.Control.RightToLeft%2A>的属性<xref:System.Windows.Forms.RightToLeft>设置为`No`，则返回值是否等于`align`传入参数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3147">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RtlTranslateAlignment">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.LeftRightAlignment RtlTranslateAlignment (System.Windows.Forms.LeftRightAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Forms.LeftRightAlignment RtlTranslateAlignment(valuetype System.Windows.Forms.LeftRightAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RtlTranslateAlignment (align As LeftRightAlignment) As LeftRightAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::LeftRightAlignment RtlTranslateAlignment(System::Windows::Forms::LeftRightAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateAlignment : System.Windows.Forms.LeftRightAlignment -&gt; System.Windows.Forms.LeftRightAlignment" Usage="control.RtlTranslateAlignment align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LeftRightAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Windows.Forms.LeftRightAlignment" />
      </Parameters>
      <Docs>
        <param name="align">
          <span data-ttu-id="3d62e-3148">
            <see cref="T:System.Windows.Forms.LeftRightAlignment" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3148">One of the <see cref="T:System.Windows.Forms.LeftRightAlignment" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3149">将指定的 <see cref="T:System.Windows.Forms.LeftRightAlignment" /> 转换为相应的 <see cref="T:System.Windows.Forms.LeftRightAlignment" /> 以支持从右向左的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3149">Converts the specified <see cref="T:System.Windows.Forms.LeftRightAlignment" /> to the appropriate <see cref="T:System.Windows.Forms.LeftRightAlignment" /> to support right-to-left text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-3150">
            <see cref="T:System.Windows.Forms.LeftRightAlignment" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3150">One of the <see cref="T:System.Windows.Forms.LeftRightAlignment" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3151">如果<xref:System.Windows.Forms.Control.RightToLeft%2A>的属性<xref:System.Windows.Forms.RightToLeft>设置为`No`，则返回值是否等于`align`传入参数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3151">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Windows.Forms.LeftRightAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RtlTranslateContent">
      <MemberSignature Language="C#" Value="protected internal System.Drawing.ContentAlignment RtlTranslateContent (System.Drawing.ContentAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance valuetype System.Drawing.ContentAlignment RtlTranslateContent(valuetype System.Drawing.ContentAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function RtlTranslateContent (align As ContentAlignment) As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Drawing::ContentAlignment RtlTranslateContent(System::Drawing::ContentAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateContent : System.Drawing.ContentAlignment -&gt; System.Drawing.ContentAlignment" Usage="control.RtlTranslateContent align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Drawing.ContentAlignment" />
      </Parameters>
      <Docs>
        <param name="align">
          <span data-ttu-id="3d62e-3152">
            <see cref="T:System.Drawing.ContentAlignment" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3152">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3153">将指定的 <see cref="T:System.Drawing.ContentAlignment" /> 转换为相应的 <see cref="T:System.Drawing.ContentAlignment" /> 以支持从右向左的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3153">Converts the specified <see cref="T:System.Drawing.ContentAlignment" /> to the appropriate <see cref="T:System.Drawing.ContentAlignment" /> to support right-to-left text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-3154">
            <see cref="T:System.Drawing.ContentAlignment" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3154">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3155">如果<xref:System.Windows.Forms.Control.RightToLeft%2A>的属性<xref:System.Windows.Forms.RightToLeft>设置为`No`，则返回值是否等于`align`传入参数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3155">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Drawing.ContentAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RtlTranslateHorizontal">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.HorizontalAlignment RtlTranslateHorizontal (System.Windows.Forms.HorizontalAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Forms.HorizontalAlignment RtlTranslateHorizontal(valuetype System.Windows.Forms.HorizontalAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RtlTranslateHorizontal (align As HorizontalAlignment) As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::HorizontalAlignment RtlTranslateHorizontal(System::Windows::Forms::HorizontalAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateHorizontal : System.Windows.Forms.HorizontalAlignment -&gt; System.Windows.Forms.HorizontalAlignment" Usage="control.RtlTranslateHorizontal align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Windows.Forms.HorizontalAlignment" />
      </Parameters>
      <Docs>
        <param name="align">
          <span data-ttu-id="3d62e-3156">
            <see cref="T:System.Windows.Forms.HorizontalAlignment" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3156">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3157">将指定的 <see cref="T:System.Windows.Forms.HorizontalAlignment" /> 转换为相应的 <see cref="T:System.Windows.Forms.HorizontalAlignment" /> 以支持从右向左的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3157">Converts the specified <see cref="T:System.Windows.Forms.HorizontalAlignment" /> to the appropriate <see cref="T:System.Windows.Forms.HorizontalAlignment" /> to support right-to-left text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-3158">
            <see cref="T:System.Windows.Forms.HorizontalAlignment" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3158">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3159">如果<xref:System.Windows.Forms.Control.RightToLeft%2A>的属性<xref:System.Windows.Forms.RightToLeft>设置为`No`，则返回值是否等于`align`传入参数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3159">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RtlTranslateLeftRight">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.LeftRightAlignment RtlTranslateLeftRight (System.Windows.Forms.LeftRightAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Forms.LeftRightAlignment RtlTranslateLeftRight(valuetype System.Windows.Forms.LeftRightAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RtlTranslateLeftRight (align As LeftRightAlignment) As LeftRightAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::LeftRightAlignment RtlTranslateLeftRight(System::Windows::Forms::LeftRightAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateLeftRight : System.Windows.Forms.LeftRightAlignment -&gt; System.Windows.Forms.LeftRightAlignment" Usage="control.RtlTranslateLeftRight align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LeftRightAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Windows.Forms.LeftRightAlignment" />
      </Parameters>
      <Docs>
        <param name="align">
          <span data-ttu-id="3d62e-3160">
            <see cref="T:System.Windows.Forms.LeftRightAlignment" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3160">One of the <see cref="T:System.Windows.Forms.LeftRightAlignment" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3161">将指定的 <see cref="T:System.Windows.Forms.LeftRightAlignment" /> 转换为相应的 <see cref="T:System.Windows.Forms.LeftRightAlignment" /> 以支持从右向左的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3161">Converts the specified <see cref="T:System.Windows.Forms.LeftRightAlignment" /> to the appropriate <see cref="T:System.Windows.Forms.LeftRightAlignment" /> to support right-to-left text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-3162">
            <see cref="T:System.Windows.Forms.LeftRightAlignment" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3162">One of the <see cref="T:System.Windows.Forms.LeftRightAlignment" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3163">如果<xref:System.Windows.Forms.Control.RightToLeft%2A>的属性<xref:System.Windows.Forms.RightToLeft>设置为`No`，则返回值是否等于`align`传入参数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3163">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Windows.Forms.LeftRightAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Scale">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3164">缩放控件和任何子控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3164">Scales the control and any child controls.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (System.Drawing.SizeF factor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(valuetype System.Drawing.SizeF factor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (factor As SizeF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(System::Drawing::SizeF factor);" />
      <MemberSignature Language="F#" Value="member this.Scale : System.Drawing.SizeF -&gt; unit" Usage="control.Scale factor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
      </Parameters>
      <Docs>
        <param name="factor">
          <span data-ttu-id="3d62e-3165">一个包含水平和垂直比例因子的 <see cref="T:System.Drawing.SizeF" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3165">A <see cref="T:System.Drawing.SizeF" /> containing the horizontal and vertical scaling factors.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3166">按指定的比例因子缩放控件和所有子控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3166">Scales the control and all child controls by the specified scaling factor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3167"><xref:System.Windows.Forms.Control.Scale%2A>方法通过指定缩放来缩放控件`factor`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3167">The <xref:System.Windows.Forms.Control.Scale%2A> method scales the control by the specified scaling `factor`.</span></span> <span data-ttu-id="3d62e-3168">它还以递归方式将所有子控件，如果<xref:System.Windows.Forms.Control.ScaleChildren%2A>属性是`true`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3168">It also recursively scales all child controls if the <xref:System.Windows.Forms.Control.ScaleChildren%2A> property is `true`.</span></span> <span data-ttu-id="3d62e-3169">在内部，此方法调用<xref:System.Windows.Forms.Control.ScaleControl%2A>缩放每个控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3169">Internally, this method calls <xref:System.Windows.Forms.Control.ScaleControl%2A> to scale each control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ScaleChildren" />
        <altmember cref="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <altmember cref="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float ratio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 ratio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Scale(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (ratio As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float ratio);" />
      <MemberSignature Language="F#" Value="member this.Scale : single -&gt; unit" Usage="control.Scale ratio" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method has been deprecated. Use the Scale(SizeF ratio) method instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ratio" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="ratio">
          <span data-ttu-id="3d62e-3170">要用于缩放的比例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3170">The ratio to use for scaling.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3171">缩放控件和任何子控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3171">Scales the control and any child controls.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Scale(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float dx, float dy);" />
      <MemberSignature Language="F#" Value="member this.Scale : single * single -&gt; unit" Usage="control.Scale (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method has been deprecated. Use the Scale(SizeF ratio) method instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">
          <span data-ttu-id="3d62e-3172">水平比例因子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3172">The horizontal scaling factor.</span>
          </span>
        </param>
        <param name="dy">
          <span data-ttu-id="3d62e-3173">垂直比例因子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3173">The vertical scaling factor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3174">缩放整个控件和任何子控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3174">Scales the entire control and any child controls.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleBitmapLogicalToDevice">
      <MemberSignature Language="C#" Value="public void ScaleBitmapLogicalToDevice (ref System.Drawing.Bitmap logicalBitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleBitmapLogicalToDevice(class System.Drawing.Bitmap&amp; logicalBitmap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleBitmapLogicalToDevice (ByRef logicalBitmap As Bitmap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleBitmapLogicalToDevice(System::Drawing::Bitmap ^ % logicalBitmap);" />
      <MemberSignature Language="F#" Value="member this.ScaleBitmapLogicalToDevice :  -&gt; unit" Usage="control.ScaleBitmapLogicalToDevice logicalBitmap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalBitmap" Type="System.Drawing.Bitmap" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="logicalBitmap">
          <span data-ttu-id="3d62e-3175">要缩放的位图。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3175">The bitmap to scale.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3176">发生 DPI 更改时，可以将逻辑位图值缩放到其等效设备单元值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3176">Scales a logical bitmap value to it's equivalent device unit value when a DPI change occurs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleChildren">
      <MemberSignature Language="C#" Value="protected virtual bool ScaleChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScaleChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ScaleChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ScaleChildren As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ScaleChildren { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ScaleChildren : bool" Usage="System.Windows.Forms.Control.ScaleChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3177">获取一个值，该值确定子控件的缩放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3177">Gets a value that determines the scaling of child controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-3178">如果在调用该控件上的 <see langword="true" /> 方法时将缩放子控件，则为 <see cref="M:System.Windows.Forms.Control.Scale(System.Single)" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3178">
              <see langword="true" /> if child controls will be scaled when the <see cref="M:System.Windows.Forms.Control.Scale(System.Single)" /> method on this control is called; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3d62e-3179">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3179">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3180">如果<xref:System.Windows.Forms.Control.ScaleChildren%2A>属性是`true`，然后<xref:System.Windows.Forms.Control.Scale%2A>方法将以递归方式调用<xref:System.Windows.Forms.Control.ScaleControl%2A>的子控件的每个方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3180">If the <xref:System.Windows.Forms.Control.ScaleChildren%2A> property is `true`, then the <xref:System.Windows.Forms.Control.Scale%2A> method will recursively call the <xref:System.Windows.Forms.Control.ScaleControl%2A> method of each of its child controls.</span></span>  
  
 <span data-ttu-id="3d62e-3181">默认实现<xref:System.Windows.Forms.Control.ScaleChildren%2A>始终返回`true`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3181">The default implementation of <xref:System.Windows.Forms.Control.ScaleChildren%2A> always returns `true`.</span></span> <span data-ttu-id="3d62e-3182">派生的类可以重写<xref:System.Windows.Forms.Control.ScaleChildren%2A>以返回`false`以指示，缩放应不会对执行其子级。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3182">Derived classes can override <xref:System.Windows.Forms.Control.ScaleChildren%2A> to return `false` to indicate that scaling should not be performed on their children.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Scale(System.Single)" />
        <altmember cref="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <altmember cref="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleControl">
      <MemberSignature Language="C#" Value="protected virtual void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ScaleControl(valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ScaleControl (factor As SizeF, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ScaleControl(System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="abstract member ScaleControl : System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; unit&#xA;override this.ScaleControl : System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="control.ScaleControl (factor, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="factor">
          <span data-ttu-id="3d62e-3183">控件高度和宽度的缩放因子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3183">The factor by which the height and width of the control will be scaled.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="3d62e-3184">一个 <see cref="T:System.Windows.Forms.BoundsSpecified" /> 值，指定在定义控件的大小和位置时要使用的控件边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3184">A <see cref="T:System.Windows.Forms.BoundsSpecified" /> value that specifies the bounds of the control to use when defining its size and position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3185">缩放控件的位置、大小、空白和边距。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3185">Scales a control's location, size, padding and margin.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3186">如果控件是最高级别，将不会缩放控件的位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3186">If the control is top level, this will not scale the control's location.</span></span> <span data-ttu-id="3d62e-3187">这不会缩放子控件或自动调整大小的控件的大小。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3187">This does not scale children or the size of automatically sized controls.</span></span> <span data-ttu-id="3d62e-3188">可以省略任何方向的缩放方法是更改的值`specified`参数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3188">You can omit scaling in any direction by changing the value of the `specified` parameter.</span></span>  
  
   
  
## Examples  
 <xref:System.Windows.Forms.BoundsSpecified>  
  
 <xref:System.Windows.Forms.Control.Scale%2A>  
  
 <xref:System.Windows.Forms.Control.GetScaledBounds%2A>  
  
 <xref:System.Windows.Forms.Control.SetBoundsCore%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleCore">
      <MemberSignature Language="C#" Value="protected virtual void ScaleCore (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ScaleCore(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ScaleCore (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ScaleCore(float dx, float dy);" />
      <MemberSignature Language="F#" Value="abstract member ScaleCore : single * single -&gt; unit&#xA;override this.ScaleCore : single * single -&gt; unit" Usage="control.ScaleCore (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">
          <span data-ttu-id="3d62e-3189">水平比例因子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3189">The horizontal scaling factor.</span>
          </span>
        </param>
        <param name="dy">
          <span data-ttu-id="3d62e-3190">垂直比例因子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3190">The vertical scaling factor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3191">此方法与此类无关。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3191">This method is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3192">此方法与此类无关。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3192">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3193">激活控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3193">Activates a control.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; unit" Usage="control.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3194">激活控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3194">Activates the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3195"><xref:System.Windows.Forms.Control.Select%2A>方法激活的控件，如果控件的`Selectable`样式位设置为`true`中<xref:System.Windows.Forms.ControlStyles>、 包含在另一个控件和所有其父控件均可见且已启用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3195">The <xref:System.Windows.Forms.Control.Select%2A> method activates the control if the control's `Selectable` style bit is set to `true` in <xref:System.Windows.Forms.ControlStyles>, it is contained in another control, and all its parent controls are both visible and enabled.</span></span>  
  
 <span data-ttu-id="3d62e-3196">以下列表中的 Windows 窗体控件不可选择。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3196">The Windows Forms controls in the following list are not selectable.</span></span> <span data-ttu-id="3d62e-3197">从列表中的控件派生的控件也不会选择。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3197">Controls derived from controls in the list will also not be selectable.</span></span>  
  
-   <xref:System.Windows.Forms.Label>  
  
-   <xref:System.Windows.Forms.Panel>  
  
-   <xref:System.Windows.Forms.GroupBox>  
  
-   <xref:System.Windows.Forms.PictureBox>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.Splitter>  
  
-   <span data-ttu-id="3d62e-3198"><xref:System.Windows.Forms.LinkLabel> （如果没有控件中显示的链接）</span><span class="sxs-lookup"><span data-stu-id="3d62e-3198"><xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3199">下面的代码示例选择指定<xref:System.Windows.Forms.Control>，则可选择。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3199">The following code example selects the specified <xref:System.Windows.Forms.Control>, if it is selectable.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#2)]
 [!code-csharp[Windows.Forms.ControlMembers6#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#2)]
 [!code-vb[Windows.Forms.ControlMembers6#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="protected virtual void Select (bool directed, bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Select(bool directed, bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Select (directed As Boolean, forward As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Select(bool directed, bool forward);" />
      <MemberSignature Language="F#" Value="abstract member Select : bool * bool -&gt; unit&#xA;override this.Select : bool * bool -&gt; unit" Usage="control.Select (directed, forward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directed" Type="System.Boolean" />
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="directed">
          <span data-ttu-id="3d62e-3200">如果指定要选择的控件的方向，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3200">
              <see langword="true" /> to specify the direction of the control to select; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="forward">
          <span data-ttu-id="3d62e-3201">如果为 <see langword="true" /> 则在 Tab 键顺序中前移；如果为 <see langword="false" /> 则在 Tab 键顺序中后移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3201">
              <see langword="true" /> to move forward in the tab order; <see langword="false" /> to move backward in the tab order.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3202">激活子控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3202">Activates a child control.</span>
          </span>
          <span data-ttu-id="3d62e-3203">还可以指定从中选择控件的 Tab 键顺序的方向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3203">Optionally specifies the direction in the tab order to select the control from.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3204">`directed`和`forward`参数由容器样式的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3204">The `directed` and `forward` parameters are used by container-style controls.</span></span> <span data-ttu-id="3d62e-3205">当`directed`参数设置为`true`，则`forward`参数的计算结果来确定哪个控件进行选择。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3205">When the `directed` parameter is set to `true`, the `forward` parameter is evaluated to determine which control to select.</span></span> <span data-ttu-id="3d62e-3206">时`forward`设置为`true`，在 tab 键顺序中的下一个控件处于选中状态，当`false`，选择上一个控件的 tab 键顺序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3206">When `forward` is set to `true`, the next control in the tab order is selected; when `false`, the previous control in the tab order is selected.</span></span>  
  
 <span data-ttu-id="3d62e-3207"><xref:System.Windows.Forms.Control.Select%2A>方法激活的控件，如果控件的`Selectable`样式位设置为`true`中<xref:System.Windows.Forms.ControlStyles>、 包含在另一个控件和所有其父控件均可见且已启用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3207">The <xref:System.Windows.Forms.Control.Select%2A> method activates the control if the control's `Selectable` style bit is set to `true` in <xref:System.Windows.Forms.ControlStyles>, it is contained in another control, and all its parent controls are both visible and enabled.</span></span>  
  
 <span data-ttu-id="3d62e-3208">以下列表中的 Windows 窗体控件不可选择。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3208">The Windows Forms controls in the following list are not selectable.</span></span> <span data-ttu-id="3d62e-3209">从列表中的控件派生的控件也不会选择。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3209">Controls derived from controls in the list will also not be selectable.</span></span>  
  
-   <xref:System.Windows.Forms.Label>  
  
-   <xref:System.Windows.Forms.Panel>  
  
-   <xref:System.Windows.Forms.GroupBox>  
  
-   <xref:System.Windows.Forms.PictureBox>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.Splitter>  
  
-   <span data-ttu-id="3d62e-3210"><xref:System.Windows.Forms.LinkLabel> （如果没有控件中显示的链接）</span><span class="sxs-lookup"><span data-stu-id="3d62e-3210"><xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
        <altmember cref="M:System.Windows.Forms.Control.Select" />
      </Docs>
    </Member>
    <Member MemberName="SelectNextControl">
      <MemberSignature Language="C#" Value="public bool SelectNextControl (System.Windows.Forms.Control ctl, bool forward, bool tabStopOnly, bool nested, bool wrap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SelectNextControl(class System.Windows.Forms.Control ctl, bool forward, bool tabStopOnly, bool nested, bool wrap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectNextControl (ctl As Control, forward As Boolean, tabStopOnly As Boolean, nested As Boolean, wrap As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SelectNextControl(System::Windows::Forms::Control ^ ctl, bool forward, bool tabStopOnly, bool nested, bool wrap);" />
      <MemberSignature Language="F#" Value="member this.SelectNextControl : System.Windows.Forms.Control * bool * bool * bool * bool -&gt; bool" Usage="control.SelectNextControl (ctl, forward, tabStopOnly, nested, wrap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Windows.Forms.Control" />
        <Parameter Name="forward" Type="System.Boolean" />
        <Parameter Name="tabStopOnly" Type="System.Boolean" />
        <Parameter Name="nested" Type="System.Boolean" />
        <Parameter Name="wrap" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ctl">
          <span data-ttu-id="3d62e-3211">从其上开始搜索的 <see cref="T:System.Windows.Forms.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3211">The <see cref="T:System.Windows.Forms.Control" /> at which to start the search.</span>
          </span>
        </param>
        <param name="forward">
          <span data-ttu-id="3d62e-3212">如果为 <see langword="true" /> 则在 Tab 键顺序中前移；如果为 <see langword="false" /> 则在 Tab 键顺序中后移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3212">
              <see langword="true" /> to move forward in the tab order; <see langword="false" /> to move backward in the tab order.</span>
          </span>
        </param>
        <param name="tabStopOnly">
          <span data-ttu-id="3d62e-3213">
            <see langword="true" /> 表示忽略 <see cref="P:System.Windows.Forms.Control.TabStop" /> 属性设置为 <see langword="false" /> 的控件；<see langword="false" /> 表示不忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3213">
              <see langword="true" /> to ignore the controls with the <see cref="P:System.Windows.Forms.Control.TabStop" /> property set to <see langword="false" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="nested">
          <span data-ttu-id="3d62e-3214">
            <see langword="true" /> 表示包括嵌套子控件（子控件的子级）；<see langword="false" /> 表示不包括。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3214">
              <see langword="true" /> to include nested (children of child controls) child controls; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="wrap">
          <span data-ttu-id="3d62e-3215">
            <see langword="true" /> 表示在到达最后一个控件之后从 Tab 键顺序中第一个控件开始继续搜索；<see langword="false" /> 表示不继续搜索。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3215">
              <see langword="true" /> to continue searching from the first control in the tab order after the last control has been reached; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3216">激活下一个控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3216">Activates the next control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-3217">如果控件已激活，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3217">
              <see langword="true" /> if a control was activated; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3218"><xref:System.Windows.Forms.Control.SelectNextControl%2A>方法激活的 tab 键顺序的下一个控件，如果控件的`Selectable`样式位设置为`true`中<xref:System.Windows.Forms.ControlStyles>、 包含在另一个控件和所有其父控件均可见且已启用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3218">The <xref:System.Windows.Forms.Control.SelectNextControl%2A> method activates the next control in the tab order if the control's `Selectable` style bit is set to `true` in <xref:System.Windows.Forms.ControlStyles>, it is contained in another control, and all its parent controls are both visible and enabled.</span></span>  
  
 <span data-ttu-id="3d62e-3219">以下列表中的 Windows 窗体控件不可选择。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3219">The Windows Forms controls in the following list are not selectable.</span></span> <span data-ttu-id="3d62e-3220">从列表中的控件派生的控件也不会选择。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3220">Controls derived from controls in the list will also not be selectable.</span></span>  
  
-   <xref:System.Windows.Forms.Label>  
  
-   <xref:System.Windows.Forms.Panel>  
  
-   <xref:System.Windows.Forms.GroupBox>  
  
-   <xref:System.Windows.Forms.PictureBox>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.Splitter>  
  
-   <span data-ttu-id="3d62e-3221"><xref:System.Windows.Forms.LinkLabel> （如果没有控件中显示的链接）</span><span class="sxs-lookup"><span data-stu-id="3d62e-3221"><xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)</span></span>  
  
 <span data-ttu-id="3d62e-3222">将焦点更改通过使用键盘 （TAB、 SHIFT + TAB，等），通过调用<xref:System.Windows.Forms.Control.Select%2A>或<xref:System.Windows.Forms.Control.SelectNextControl%2A>方法，或通过设置<xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType>到当前窗体的属性，将按以下顺序发生焦点事件：</span><span class="sxs-lookup"><span data-stu-id="3d62e-3222">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="3d62e-3223">如果<xref:System.Windows.Forms.Control.CausesValidation%2A>属性设置为`false`，则<xref:System.Windows.Forms.Control.Validating>和<xref:System.Windows.Forms.Control.Validated>所抑制的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3223">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3224">下面的代码 exampleshows<xref:System.Windows.Forms.Control.SelectNextControl%2A>中有一些控件的窗体正在使用的方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3224">The following code exampleshows the <xref:System.Windows.Forms.Control.SelectNextControl%2A> method being used in a form that has some controls.</span></span> <span data-ttu-id="3d62e-3225">每次单击窗体，而下一个控件被激活。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3225">Each time that you click the form, the next control is activated.</span></span> <span data-ttu-id="3d62e-3226"><xref:System.Windows.Forms.ContainerControl.ActiveControl%2A>属性获取容器控件中当前处于活动状态的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3226">The <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property gets the currently active control in the container control.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.SelectNextControl#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.control.selectnextcontrol/cs/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.SelectNextControl#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.control.selectnextcontrol/vb/form1.vb#1)]  
  
 <span data-ttu-id="3d62e-3227">下面的代码示例演示<xref:System.Windows.Forms.Control.SelectNextControl%2A>方法中具有的窗体正在使用<xref:System.Windows.Forms.Button>和一些其他控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3227">The following code example shows the <xref:System.Windows.Forms.Control.SelectNextControl%2A> method being used in a form that has a <xref:System.Windows.Forms.Button> and some other controls.</span></span> <span data-ttu-id="3d62e-3228">当您单击<xref:System.Windows.Forms.Button>之后, 的下一个控件<xref:System.Windows.Forms.Button>激活。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3228">When you click the <xref:System.Windows.Forms.Button>, the next control after the <xref:System.Windows.Forms.Button> is activated.</span></span> <span data-ttu-id="3d62e-3229">请注意，需要获取的父<xref:System.Windows.Forms.Button>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3229">Notice that you have to get the parent of the <xref:System.Windows.Forms.Button> control.</span></span> <span data-ttu-id="3d62e-3230">由于<xref:System.Windows.Forms.Button>不是容器，调用<xref:System.Windows.Forms.Control.SelectNextControl%2A>是直接在<xref:System.Windows.Forms.Button>可能不会更改激活。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3230">Since <xref:System.Windows.Forms.Button> is not a container, calling <xref:System.Windows.Forms.Control.SelectNextControl%2A> directly on the <xref:System.Windows.Forms.Button> would not change the activation.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.SelectNextControl#2](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.control.selectnextcontrol/cs/form1.cs#2)]
 [!code-vb[System.Windows.Forms.Control.SelectNextControl#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.control.selectnextcontrol/vb/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Select" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="SendToBack">
      <MemberSignature Language="C#" Value="public void SendToBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendToBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SendToBack" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendToBack ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendToBack();" />
      <MemberSignature Language="F#" Value="member this.SendToBack : unit -&gt; unit" Usage="control.SendToBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3231">将控件发送到 Z 顺序的后面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3231">Sends the control to the back of the z-order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3232">将控件移到 z 顺序的后面。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3232">The control is moved to the back of the z-order.</span></span> <span data-ttu-id="3d62e-3233">如果该控件，另一个控件的子级子控件移到 z 顺序的后面。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3233">If the control is a child of another control, the child control is moved to the back of the z-order.</span></span> <span data-ttu-id="3d62e-3234">如果该控件为顶级控件，此方法将无法正常工作，除非该控件处于活动状态。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3234">If the control is a top-level control, this method will not work correctly unless the control is active.</span></span> <span data-ttu-id="3d62e-3235">顶级控件是控件，如<xref:System.Windows.Forms.Form>，即不是子级的另一个控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3235">A top-level control is a control, such as a <xref:System.Windows.Forms.Form>, that is not a child of another control.</span></span> <span data-ttu-id="3d62e-3236">活动控件是一个具有输入焦点的可见控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3236">An active control is a visible control that has input focus.</span></span> <span data-ttu-id="3d62e-3237">若要使用<xref:System.Windows.Forms.Control.SendToBack%2A>方法使用活动的顶级控件，首先调用<xref:System.Windows.Forms.Control.BringToFront%2A>在控件上的方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3237">To use the <xref:System.Windows.Forms.Control.SendToBack%2A> method with an inactive, top-level control, first call the <xref:System.Windows.Forms.Control.BringToFront%2A> method on the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.BringToFront" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateZOrder" />
      </Docs>
    </Member>
    <Member MemberName="SetAutoSizeMode">
      <MemberSignature Language="C#" Value="protected void SetAutoSizeMode (System.Windows.Forms.AutoSizeMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetAutoSizeMode(valuetype System.Windows.Forms.AutoSizeMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetAutoSizeMode (mode As AutoSizeMode)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetAutoSizeMode(System::Windows::Forms::AutoSizeMode mode);" />
      <MemberSignature Language="F#" Value="member this.SetAutoSizeMode : System.Windows.Forms.AutoSizeMode -&gt; unit" Usage="control.SetAutoSizeMode mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Windows.Forms.AutoSizeMode" />
      </Parameters>
      <Docs>
        <param name="mode">
          <span data-ttu-id="3d62e-3238">
            <see cref="T:System.Windows.Forms.AutoSizeMode" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3238">One of the <see cref="T:System.Windows.Forms.AutoSizeMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3239">设置一个值，该值指示当启用控件的 <see cref="P:System.Windows.Forms.Control.AutoSize" /> 属性时控件的行为方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3239">Sets a value indicating how a control will behave when its <see cref="P:System.Windows.Forms.Control.AutoSize" /> property is enabled.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBounds">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3240">设置控件的边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3240">Sets the bounds of the control.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBounds">
      <MemberSignature Language="C#" Value="public void SetBounds (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBounds(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBounds (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBounds(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.SetBounds : int * int * int * int -&gt; unit" Usage="control.SetBounds (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="3d62e-3241">控件的新 <see cref="P:System.Windows.Forms.Control.Left" /> 属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3241">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="3d62e-3242">控件的新 <see cref="P:System.Windows.Forms.Control.Top" /> 属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3242">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="3d62e-3243">控件的新 <see cref="P:System.Windows.Forms.Control.Width" /> 属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3243">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="3d62e-3244">控件的新 <see cref="P:System.Windows.Forms.Control.Height" /> 属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3244">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3245">将控件的边界设置为指定位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3245">Sets the bounds of the control to the specified location and size.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
        <altmember cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="SetBounds">
      <MemberSignature Language="C#" Value="public void SetBounds (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBounds(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBounds (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBounds(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="member this.SetBounds : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="control.SetBounds (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="3d62e-3246">控件的新 <see cref="P:System.Windows.Forms.Control.Left" /> 属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3246">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="3d62e-3247">控件的新 <see cref="P:System.Windows.Forms.Control.Top" /> 属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3247">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="3d62e-3248">控件的新 <see cref="P:System.Windows.Forms.Control.Width" /> 属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3248">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="3d62e-3249">控件的新 <see cref="P:System.Windows.Forms.Control.Height" /> 属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3249">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="3d62e-3250">
            <see cref="T:System.Windows.Forms.BoundsSpecified" /> 值的按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3250">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span>
          </span>
          <span data-ttu-id="3d62e-3251">对于任何未指定的参数，将使用当前值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3251">For any parameter not specified, the current value will be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3252">将控件的指定边界设置为指定位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3252">Sets the specified bounds of the control to the specified location and size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3d62e-3253">下面的代码示例中心<xref:System.Windows.Forms.Form>在屏幕上<xref:System.Windows.Forms.Control.Layout>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3253">The following code example centers a <xref:System.Windows.Forms.Form> on the screen in the <xref:System.Windows.Forms.Control.Layout> event.</span></span> <span data-ttu-id="3d62e-3254">这将避免表单居中当用户调整其大小时。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3254">This will keep the form centered as the user resizes it.</span></span> <span data-ttu-id="3d62e-3255">此示例要求您已创建<xref:System.Windows.Forms.Form>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3255">This example requires that you have created a <xref:System.Windows.Forms.Form> control.</span></span>  
  
 [!code-cpp[Control.Layout#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Layout/CPP/layout.cpp#1)]
 [!code-csharp[Control.Layout#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Layout/CS/layout.cs#1)]
 [!code-vb[Control.Layout#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Layout/VB/layout.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
        <altmember cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected virtual void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="abstract member SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit&#xA;override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="control.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="3d62e-3256">控件的新 <see cref="P:System.Windows.Forms.Control.Left" /> 属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3256">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="3d62e-3257">控件的新 <see cref="P:System.Windows.Forms.Control.Top" /> 属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3257">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="3d62e-3258">控件的新 <see cref="P:System.Windows.Forms.Control.Width" /> 属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3258">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="3d62e-3259">控件的新 <see cref="P:System.Windows.Forms.Control.Height" /> 属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3259">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="3d62e-3260">
            <see cref="T:System.Windows.Forms.BoundsSpecified" /> 值的按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3260">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3261">执行设置该控件的指定边界的工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3261">Performs the work of setting the specified bounds of this control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3262">通常情况下，对应于不包含在边界参数`specified`使用其当前值传递参数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3262">Typically, the parameters that correspond to the bounds not included in the `specified` parameter are passed in with their current values.</span></span> <span data-ttu-id="3d62e-3263">例如， <xref:System.Windows.Forms.Control.Height%2A>， <xref:System.Windows.Forms.Control.Width%2A>，或<xref:System.Drawing.Point.X%2A>或<xref:System.Drawing.Point.Y%2A>的属性<xref:System.Windows.Forms.Control.Location%2A>属性可以使用对该控件的当前实例的引用传递。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3263">For example, the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, or the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control.</span></span> <span data-ttu-id="3d62e-3264">但是遵守并应用于控件中传递的所有值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3264">However all values passed in are honored and applied to the control.</span></span>  
  
 <span data-ttu-id="3d62e-3265">`boundsSpecified`参数表示的控件元素<xref:System.Windows.Forms.Control.Bounds%2A>更改您的应用程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3265">The `boundsSpecified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application.</span></span> <span data-ttu-id="3d62e-3266">例如，如果您更改<xref:System.Windows.Forms.Control.Size%2A>的控件`boundsSpecified`参数值是`Size`的值<xref:System.Windows.Forms.BoundsSpecified>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3266">For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `boundsSpecified` parameter value is the `Size` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span> <span data-ttu-id="3d62e-3267">但是，如果<xref:System.Windows.Forms.Control.Size%2A>在响应中调整<xref:System.Windows.Forms.Control.Dock%2A>属性设置，`boundsSpecified`参数值是`None`的值<xref:System.Windows.Forms.BoundsSpecified>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3267">However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `boundsSpecified` parameter value is the `None` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-3268">在 Windows Server 2003 系统的大小<xref:System.Windows.Forms.Form>受到限制，最大像素宽度和高度的监视器。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3268">On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3269">下面的代码示例重写<xref:System.Windows.Forms.Control.SetBoundsCore%2A>方法，以确保控件保持固定的大小。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3269">The following code example overrides the <xref:System.Windows.Forms.Control.SetBoundsCore%2A> method to ensure that the control remains a fixed size.</span></span> <span data-ttu-id="3d62e-3270">此示例要求有直接或间接派生自的类<xref:System.Windows.Forms.Control>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3270">This example requires that you have a class that is either directly or indirectly derived from the <xref:System.Windows.Forms.Control> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_Methods#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_Methods/CPP/controlmethods.cpp#1)]
 [!code-csharp[Windows.Forms.Control_Methods#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_Methods/CS/controlmethods.cs#1)]
 [!code-vb[Windows.Forms.Control_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_Methods/VB/controlmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-3271">重写时<see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />在派生类中，请务必调用基类的<see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />方法来强制执行要更改的控件边界。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-3271">When overriding <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method to force the bounds of the control to change.</span>
            </span>
            <span data-ttu-id="3d62e-3272">派生的类可以添加到的大小限制<see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-3272">Derived classes can add size restrictions to the <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="SetClientSizeCore">
      <MemberSignature Language="C#" Value="protected virtual void SetClientSizeCore (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetClientSizeCore(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetClientSizeCore (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetClientSizeCore(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member SetClientSizeCore : int * int -&gt; unit&#xA;override this.SetClientSizeCore : int * int -&gt; unit" Usage="control.SetClientSizeCore (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="3d62e-3273">工作区宽度（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3273">The client area width, in pixels.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="3d62e-3274">工作区高度（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3274">The client area height, in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3275">设置控件的工作区的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3275">Sets the size of the client area of the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3276">工作区开始 （0，0） 位置并延伸到 (`x`， `y`) 位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3276">The client area starts at the (0, 0) location and extends to the (`x`, `y`) location.</span></span>  
  
 <span data-ttu-id="3d62e-3277">通常情况下，不应设置<xref:System.Windows.Forms.Control.ClientSize%2A>的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3277">Typically, you should not set the <xref:System.Windows.Forms.Control.ClientSize%2A> of the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3278">下面的代码示例重写<xref:System.Windows.Forms.Control.SetClientSizeCore%2A>方法，以确保控件保持方形。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3278">The following code example overrides the <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> method to ensure that the control remains square.</span></span> <span data-ttu-id="3d62e-3279">此示例要求有直接或间接派生自的类<xref:System.Windows.Forms.Control>类。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3279">This example requires that you have a class that is either directly or indirectly derived from the <xref:System.Windows.Forms.Control> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_Methods#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_Methods/CPP/controlmethods.cpp#2)]
 [!code-csharp[Windows.Forms.Control_Methods#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_Methods/CS/controlmethods.cs#2)]
 [!code-vb[Windows.Forms.Control_Methods#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_Methods/VB/controlmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-3280">重写时<see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" />在派生类中，请务必调用基类的<see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" />方法，以便<see cref="P:System.Windows.Forms.Control.ClientSize" />调整属性。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-3280">When overriding <see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /> method so that the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property is adjusted.</span>
            </span>
            <span data-ttu-id="3d62e-3281">在控件上绘制的详细信息，请参阅[呈现 Windows 窗体控件](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-3281">For more information about drawing on controls, see [Rendering a Windows Forms Control](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.Control.ClientSize" />
      </Docs>
    </Member>
    <Member MemberName="SetStyle">
      <MemberSignature Language="C#" Value="protected void SetStyle (System.Windows.Forms.ControlStyles flag, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetStyle(valuetype System.Windows.Forms.ControlStyles flag, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetStyle (flag As ControlStyles, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetStyle(System::Windows::Forms::ControlStyles flag, bool value);" />
      <MemberSignature Language="F#" Value="member this.SetStyle : System.Windows.Forms.ControlStyles * bool -&gt; unit" Usage="control.SetStyle (flag, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Windows.Forms.ControlStyles" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flag">
          <span data-ttu-id="3d62e-3282">要设置的 <see cref="T:System.Windows.Forms.ControlStyles" /> 位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3282">The <see cref="T:System.Windows.Forms.ControlStyles" /> bit to set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="3d62e-3283">
            <see langword="true" /> 表示将指定的样式应用于控件；<see langword="false" /> 表示不应用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3283">
              <see langword="true" /> to apply the specified style to the control; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3284">将指定的 <see cref="T:System.Windows.Forms.ControlStyles" /> 标志设置为 <see langword="true" /> 或 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3284">Sets a specified <see cref="T:System.Windows.Forms.ControlStyles" /> flag to either <see langword="true" /> or <see langword="false" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3285">控件样式位标志用于将分类支持的行为。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3285">Control style bit flags are used to categorize supported behavior.</span></span> <span data-ttu-id="3d62e-3286">控件可以通过调用启用一种样式<xref:System.Windows.Forms.Control.SetStyle%2A>方法并传入相应<xref:System.Windows.Forms.ControlStyles>位 （或 bits） 和要设置该位的布尔值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3286">A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit (or bits) and the Boolean value to set the bit(s) to.</span></span> <span data-ttu-id="3d62e-3287">若要确定分配给指定的值<xref:System.Windows.Forms.ControlStyles>位，请使用<xref:System.Windows.Forms.Control.GetStyle%2A>方法并传入<xref:System.Windows.Forms.ControlStyles>成员来评估。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3287">To determine the value assigned to a specified <xref:System.Windows.Forms.ControlStyles> bit, use the <xref:System.Windows.Forms.Control.GetStyle%2A> method and pass in the <xref:System.Windows.Forms.ControlStyles> member to evaluate.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3d62e-3288">设置控件样式位，可以从根本上改变控件的行为。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3288">Setting the control style bits can substantially change the behavior of the control.</span></span> <span data-ttu-id="3d62e-3289">审阅<xref:System.Windows.Forms.ControlStyles>枚举文档以了解更改之前调用的控件样式位的效果<xref:System.Windows.Forms.Control.SetStyle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3289">Review the <xref:System.Windows.Forms.ControlStyles> enumeration documentation to understand the effects of changing the control style bits before calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3290">下面的代码示例启用双缓冲上<xref:System.Windows.Forms.Form>并更新以反映所做的更改的样式。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3290">The following code example enables double-buffering on a <xref:System.Windows.Forms.Form> and updates the styles to reflect the changes.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#3)]
 [!code-csharp[Windows.Forms.ControlMembers6#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#3)]
 [!code-vb[Windows.Forms.ControlMembers6#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
        <altmember cref="T:System.Windows.Forms.ControlStyles" />
      </Docs>
    </Member>
    <Member MemberName="SetTopLevel">
      <MemberSignature Language="C#" Value="protected void SetTopLevel (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetTopLevel(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetTopLevel (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetTopLevel(bool value);" />
      <MemberSignature Language="F#" Value="member this.SetTopLevel : bool -&gt; unit" Usage="control.SetTopLevel value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3d62e-3291">
            <see langword="true" /> 表示将控件设置为顶级控件；<see langword="false" /> 表示不作此设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3291">
              <see langword="true" /> to set the control as the top-level control; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3292">将控件设置为顶级控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3292">Sets the control as the top-level control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3293">如果调用<xref:System.Windows.Forms.Control.SetTopLevel%2A>方法<xref:System.Windows.Forms.Form>中的一个值，然后传入`false`，窗体在您调用之前将不可见<xref:System.Windows.Forms.Control.SetTopLevel%2A>再次，传递的值中`true`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3293">If you call the <xref:System.Windows.Forms.Control.SetTopLevel%2A> method of a <xref:System.Windows.Forms.Form> and pass in a value of `false`, the form will not be visible until you call <xref:System.Windows.Forms.Control.SetTopLevel%2A> again, passing in a value of `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3d62e-3294">
            <paramref name="value" /> 参数被设置为 <see langword="true" /> 且控件是 ActiveX 控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3294">The <paramref name="value" /> parameter is set to <see langword="true" /> and the control is an ActiveX control.</span>
          </span>
        </exception>
        <exception cref="T:System.Exception">
          <span data-ttu-id="3d62e-3295">
            <see cref="M:System.Windows.Forms.Control.GetTopLevel" /> 返回值不等于 <paramref name="value" /> 参数且 <see cref="P:System.Windows.Forms.Control.Parent" /> 属性不为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3295">The <see cref="M:System.Windows.Forms.Control.GetTopLevel" /> return value is not equal to the <paramref name="value" /> parameter and the <see cref="P:System.Windows.Forms.Control.Parent" /> property is not <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-3296">若要将控件设置为顶级控件，如果它不是任何类型的<see cref="T:System.Windows.Forms.Form" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3296">to set the control as a top-level control if it is of any type other than <see cref="T:System.Windows.Forms.Form" />.</span>
          </span>
          <span data-ttu-id="3d62e-3297">如果仅需要此权限<paramref name="value" />参数是<see langword="true" />和控件不是 ActiveX 控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3297">This permission is only demanded if the <paramref name="value" /> parameter is <see langword="true" /> and the control is not an ActiveX control.</span>
          </span>
          <span data-ttu-id="3d62e-3298">关联枚举：<see langword="AllWindows" />的值<see cref="T:System.Security.Permissions.UIPermissionWindow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3298">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Forms.Control.GetTopLevel" />
      </Docs>
    </Member>
    <Member MemberName="SetVisibleCore">
      <MemberSignature Language="C#" Value="protected virtual void SetVisibleCore (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetVisibleCore(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetVisibleCore (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetVisibleCore(bool value);" />
      <MemberSignature Language="F#" Value="abstract member SetVisibleCore : bool -&gt; unit&#xA;override this.SetVisibleCore : bool -&gt; unit" Usage="control.SetVisibleCore value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3d62e-3299">
            <see langword="true" /> 表示使控件可见；<see langword="false" /> 表示使控件不可见。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3299">
              <see langword="true" /> to make the control visible; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3300">将控件设置为指定的可见状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3300">Sets the control to the specified visible state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3301">通常，将会替代此方法可以更改该控件的可见性行为。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3301">You would typically override this method to change the visibility behavior of the control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-3302">重写时<see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" />在派生类中，请务必调用基类的<see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" />方法来强制执行要更改的控件的可见性。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-3302">When overriding <see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /> method to force the visibility of the control to change.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Show" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show();" />
      <MemberSignature Language="F#" Value="member this.Show : unit -&gt; unit" Usage="control.Show " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3303">向用户显示控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3303">Displays the control to the user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3304">显示控件等效于设置<xref:System.Windows.Forms.Control.Visible%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3304">Showing the control is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `true`.</span></span> <span data-ttu-id="3d62e-3305">之后<xref:System.Windows.Forms.Control.Show%2A>调用方法时，<xref:System.Windows.Forms.Control.Visible%2A>属性返回的值`true`直到<xref:System.Windows.Forms.Control.Hide%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3305">After the <xref:System.Windows.Forms.Control.Show%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `true` until the <xref:System.Windows.Forms.Control.Hide%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3306">下面的代码示例显示关于对话框和暂时其图面上绘制一个蓝色正方形。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3306">The following code example displays an about dialog box and temporarily draws a blue square on its surface.</span></span> <span data-ttu-id="3d62e-3307">此示例需要您定义了派生的类<xref:System.Windows.Forms.Form>名为`AboutDialog`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3307">This example requires that you have defined a class that derives from <xref:System.Windows.Forms.Form> named `AboutDialog`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#1)]
 [!code-csharp[Windows.Forms.Control Members2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#1)]
 [!code-vb[Windows.Forms.Control Members2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
      </Docs>
    </Member>
    <Member MemberName="ShowFocusCues">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShowFocusCues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFocusCues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ShowFocusCues" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property ShowFocusCues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool ShowFocusCues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowFocusCues : bool" Usage="System.Windows.Forms.Control.ShowFocusCues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3308">获取一个值，该值指示控件是否应显示聚焦框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3308">Gets a value indicating whether the control should display focus rectangles.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-3309">如果控件应显示聚焦框，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3309">
              <see langword="true" /> if the control should display focus rectangles; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3310">有关此功能的详细信息，请参阅[WM_CHANGEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx)， [WM_QUERYUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx)，并[WM_UPDATEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx)主题。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3310">For more information about this feature, see the [WM_CHANGEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx), [WM_QUERYUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx), and the [WM_UPDATEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx) topics.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-3311">重写时<see cref="P:System.Windows.Forms.Control.ShowFocusCues" />属性在派生类中，使用基类的<see cref="P:System.Windows.Forms.Control.ShowFocusCues" />属性扩展的基实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-3311">When overriding the <see cref="P:System.Windows.Forms.Control.ShowFocusCues" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.ShowFocusCues" /> property to extend the base implementation.</span>
            </span>
            <span data-ttu-id="3d62e-3312">否则，必须提供所有的实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-3312">Otherwise, you must provide all the implementation.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.Forms.UICues" />
        <altmember cref="E:System.Windows.Forms.Control.ChangeUICues" />
        <altmember cref="P:System.Windows.Forms.Control.ShowKeyboardCues" />
      </Docs>
    </Member>
    <Member MemberName="ShowKeyboardCues">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShowKeyboardCues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowKeyboardCues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ShowKeyboardCues" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property ShowKeyboardCues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool ShowKeyboardCues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowKeyboardCues : bool" Usage="System.Windows.Forms.Control.ShowKeyboardCues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3313">获取一个值，该值指示用户界面是否处于适当的状态以显示或隐藏键盘快捷键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3313">Gets a value indicating whether the user interface is in the appropriate state to show or hide keyboard accelerators.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-3314">如果键盘快捷键可见，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3314">
              <see langword="true" /> if the keyboard accelerators are visible; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3315">在 Windows 窗体设计器中创建的控件中，键盘加速器是默认情况下可见。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3315">In controls created in the Windows Forms designer, keyboard accelerators are visible by default.</span></span>  
  
 <span data-ttu-id="3d62e-3316">有关此功能的详细信息，请参阅[WM_CHANGEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx)， [WM_QUERYUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx)，并[WM_UPDATEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx)主题。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3316">For more information about this feature, see the [WM_CHANGEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx), [WM_QUERYUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx), and the [WM_UPDATEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx) topics.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.UICues" />
        <altmember cref="P:System.Windows.Forms.Control.ShowFocusCues" />
        <altmember cref="E:System.Windows.Forms.Control.ChangeUICues" />
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.Windows.Forms.Control.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3317">获取或设置控件的站点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3317">Gets or sets the site of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-3318">与 <see cref="T:System.ComponentModel.ISite" /> 关联的 <see cref="T:System.Windows.Forms.Control" />（如果有）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3318">The <see cref="T:System.ComponentModel.ISite" /> associated with the <see cref="T:System.Windows.Forms.Control" />, if any.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.ISite" />
        <altmember cref="P:System.ComponentModel.IComponent.Site" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Control.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3319">获取或设置控件的高度和宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3319">Gets or sets the height and width of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-3320">
            <see cref="T:System.Drawing.Size" />，表示控件的高度和宽度（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3320">The <see cref="T:System.Drawing.Size" /> that represents the height and width of the control in pixels.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3321">因为<xref:System.Drawing.Size>类是值类型 (`Structure`在 Visual Basic 中`struct`Visual C# 中)，它返回的值，这意味着访问的属性返回的控件大小的副本。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3321">Because the <xref:System.Drawing.Size> class is a value type (`Structure` in Visual Basic, `struct` in Visual C#), it is returned by value, meaning accessing the property returns a copy of the size of the control.</span></span> <span data-ttu-id="3d62e-3322">因此，调整<xref:System.Drawing.Size.Width%2A>或<xref:System.Drawing.Size.Height%2A>的属性<xref:System.Drawing.Size>返回此属性将不会影响<xref:System.Windows.Forms.Control.Width%2A>或<xref:System.Windows.Forms.Control.Height%2A>的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3322">So, adjusting the <xref:System.Drawing.Size.Width%2A> or <xref:System.Drawing.Size.Height%2A> properties of the <xref:System.Drawing.Size> returned from this property will not affect the <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> of the control.</span></span> <span data-ttu-id="3d62e-3323">若要调整<xref:System.Windows.Forms.Control.Width%2A>或<xref:System.Windows.Forms.Control.Height%2A>控件，必须设置控件的<xref:System.Windows.Forms.Control.Width%2A>或<xref:System.Windows.Forms.Control.Height%2A>属性或一组<xref:System.Windows.Forms.Control.Size%2A>具有一个新属性<xref:System.Drawing.Size>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3323">To adjust the <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> of the control, you must set the control's <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> property, or set the <xref:System.Windows.Forms.Control.Size%2A> property with a new <xref:System.Drawing.Size>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-3324">若要维护更好的性能，不设置<xref:System.Drawing.Size>的其构造函数中的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3324">To maintain better performance, do not set the <xref:System.Drawing.Size> of a control in its constructor.</span></span> <span data-ttu-id="3d62e-3325">首选的方法是重写<xref:System.Windows.Forms.Control.DefaultSize%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3325">The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-3326">在 Windows Server 2003 系统的大小<xref:System.Windows.Forms.Form>受到限制，最大像素宽度和高度的监视器。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3326">On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3327">下面的代码示例添加<xref:System.Windows.Forms.Button>向窗体，并设置它的一些常见属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3327">The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties.</span></span> <span data-ttu-id="3d62e-3328">示例定位到窗体右下角的按钮，以便在调整窗体大小时，它使其相对位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3328">The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</span></span> <span data-ttu-id="3d62e-3329">接下来设置<xref:System.Windows.Forms.Control.BackgroundImage%2A>调整大小的按钮为具有相同的大小和<xref:System.Drawing.Image>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3329">Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="3d62e-3330">该示例然后设置<xref:System.Windows.Forms.Control.TabStop%2A>到`true`，并设置<xref:System.Windows.Forms.Control.TabIndex%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3330">The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property.</span></span> <span data-ttu-id="3d62e-3331">最后，它将添加一个事件处理程序以处理<xref:System.Windows.Forms.Control.Click>按钮的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3331">Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button.</span></span> <span data-ttu-id="3d62e-3332">此示例要求具有<xref:System.Windows.Forms.ImageList>名为`imageList1`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3332">This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.SizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SizeChanged;" />
      <MemberSignature Language="F#" Value="member this.SizeChanged : EventHandler " Usage="member this.SizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3333">在 <see cref="P:System.Windows.Forms.Control.Size" /> 属性值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3333">Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3334">最好使用<xref:System.Windows.Forms.Control.Layout>事件来处理自定义布局。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3334">It is preferable to use the <xref:System.Windows.Forms.Control.Layout> event to handle custom layouts.</span></span> <span data-ttu-id="3d62e-3335"><xref:System.Windows.Forms.Control.Layout>在响应中引发事件<xref:System.Windows.Forms.Control.Resize>事件，而且还在其他情况时可能需要应用布局。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3335">The <xref:System.Windows.Forms.Control.Layout> event is raised in response to <xref:System.Windows.Forms.Control.Resize> events, but also in other conditions when layout might need to be applied.</span></span>  
  
 <span data-ttu-id="3d62e-3336">如果引发此事件<xref:System.Windows.Forms.Control.Size%2A>属性更改通过以编程方式修改或用户交互。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3336">This event is raised if the <xref:System.Windows.Forms.Control.Size%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="3d62e-3337">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3337">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3338">下面的代码示例演示了<xref:System.Windows.Forms.Control.SizeChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3338">The following code example demonstrates the <xref:System.Windows.Forms.Control.SizeChanged> event.</span></span> <span data-ttu-id="3d62e-3339">实例<xref:System.Windows.Forms.Button>控件已经被提供的水平和垂直两个可以进行缩放。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3339">An instance of a <xref:System.Windows.Forms.Button> control has been provided that can be scaled both horizontally and vertically.</span></span> <span data-ttu-id="3d62e-3340">一个<xref:System.Windows.Forms.NumericUpDown>实例提供了水平和垂直缩放值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3340">A <xref:System.Windows.Forms.NumericUpDown> instance provides the horizontal and vertical scale value.</span></span> <span data-ttu-id="3d62e-3341"><xref:System.Windows.Forms.Button>名为实例**确定**用于设置的缩放值<xref:System.Windows.Forms.Button>控件实例。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3341">The <xref:System.Windows.Forms.Button> instance named **OK** is used to set the scale values for the <xref:System.Windows.Forms.Button> control instance.</span></span> <span data-ttu-id="3d62e-3342">每当控件的大小更改时，与关联的事件处理程序<xref:System.Windows.Forms.Control.SizeChanged>调用控件的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3342">Whenever the size of the control changes, the event handler associated with the <xref:System.Windows.Forms.Control.SizeChanged> event of the control is called.</span></span> <span data-ttu-id="3d62e-3343">此事件处理程序会显示一个消息框，表明该控件的大小已更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3343">This event handler displays a message box indicating that the size of the control has changed.</span></span>  
  
 [!code-cpp[Control_Scale1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_Scale1/CPP/control_scale1.cpp#2)]
 [!code-csharp[Control_Scale1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_Scale1/CS/control_scale1.cs#2)]
 [!code-vb[Control_Scale1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_Scale1/VB/control_scale1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="E:System.Windows.Forms.Control.Resize" />
      </Docs>
    </Member>
    <Member MemberName="SizeFromClientSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size SizeFromClientSize (System.Drawing.Size clientSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Size SizeFromClientSize(valuetype System.Drawing.Size clientSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SizeFromClientSize (clientSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Size SizeFromClientSize(System::Drawing::Size clientSize);" />
      <MemberSignature Language="F#" Value="abstract member SizeFromClientSize : System.Drawing.Size -&gt; System.Drawing.Size&#xA;override this.SizeFromClientSize : System.Drawing.Size -&gt; System.Drawing.Size" Usage="control.SizeFromClientSize clientSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="clientSize">
          <span data-ttu-id="3d62e-3344">一个 <see cref="T:System.Drawing.Size" /> 值，表示控件工作区的高度和宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3344">A <see cref="T:System.Drawing.Size" /> value representing the height and width of the control's client area.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3345">确定整个控件（从控件工作区的高度和宽度起计算）的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3345">Determines the size of the entire control from the height and width of its client area.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d62e-3346">一个 <see cref="T:System.Drawing.Size" /> 值，表示整个控件的高度和宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3346">A <see cref="T:System.Drawing.Size" /> value representing the height and width of the entire control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.StyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StyleChanged;" />
      <MemberSignature Language="F#" Value="member this.StyleChanged : EventHandler " Usage="member this.StyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3347">在控件样式更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3347">Occurs when the control style changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3348"><xref:System.Windows.Forms.Control.StyleChanged>事件发生时<xref:System.Windows.Forms.ControlStyles>标志已添加或更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3348">The <xref:System.Windows.Forms.Control.StyleChanged> event occurs when <xref:System.Windows.Forms.ControlStyles> flags have been added or changed.</span></span>  
  
 <span data-ttu-id="3d62e-3349">如果控件样式更改通过以编程方式修改或用户交互，引发此事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3349">This event is raised if the control style is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="3d62e-3350">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3350">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3351">下面的代码示例演示如何将此成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3351">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3d62e-3352">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Control.StyleChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3352">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.StyleChanged> event.</span></span> <span data-ttu-id="3d62e-3353">此报告可帮助您了解事件发生的并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3353">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3d62e-3354">若要报告或频繁发生的事件上多个事件，请考虑更换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或将消息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3354">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3d62e-3355">若要运行此代码示例，请将其粘贴到包含继承的类型的实例的项目<xref:System.Windows.Forms.Control>，如<xref:System.Windows.Forms.Button>或<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3355">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="3d62e-3356">然后该实例命名`Control1`，并确保事件处理程序相关联<xref:System.Windows.Forms.Control.StyleChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3356">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.StyleChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#68](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#68)]
 [!code-vb[System.Windows.Forms.EventExamples#68](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#68)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.ControlStyles" />
      </Docs>
    </Member>
    <Member MemberName="SuspendLayout">
      <MemberSignature Language="C#" Value="public void SuspendLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuspendLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SuspendLayout" />
      <MemberSignature Language="VB.NET" Value="Public Sub SuspendLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SuspendLayout();" />
      <MemberSignature Language="F#" Value="member this.SuspendLayout : unit -&gt; unit" Usage="control.SuspendLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3357">临时挂起控件的布局逻辑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3357">Temporarily suspends the layout logic for the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3358">控件的布局逻辑被挂起，直到<xref:System.Windows.Forms.Control.ResumeLayout%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3358">The layout logic of the control is suspended until the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method is called.</span></span>  
  
 <span data-ttu-id="3d62e-3359"><xref:System.Windows.Forms.Control.SuspendLayout%2A>并<xref:System.Windows.Forms.Control.ResumeLayout%2A>方法将相继配合使用来禁止显示多个<xref:System.Windows.Forms.Control.Layout>事件时调整控件的多个属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3359">The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control.</span></span> <span data-ttu-id="3d62e-3360">例如，通常会调用<xref:System.Windows.Forms.Control.SuspendLayout%2A>方法，然后设置<xref:System.Windows.Forms.Control.Size%2A>， <xref:System.Windows.Forms.Control.Location%2A>， <xref:System.Windows.Forms.Control.Anchor%2A>，或<xref:System.Windows.Forms.Control.Dock%2A>的控件，然后调用属性<xref:System.Windows.Forms.Control.ResumeLayout%2A>方法，以使更改生效。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3360">For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.</span></span>  
  
 <span data-ttu-id="3d62e-3361">必须有未挂起调用<xref:System.Windows.Forms.Control.SuspendLayout%2A>为<xref:System.Windows.Forms.Control.ResumeLayout%2A>成功调用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3361">There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d62e-3362">当将多个控件添加到父控件，建议您调用<xref:System.Windows.Forms.Control.SuspendLayout%2A>方法，然后再初始化要添加的控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3362">When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added.</span></span> <span data-ttu-id="3d62e-3363">将控件添加到父控件之后, 调用<xref:System.Windows.Forms.Control.ResumeLayout%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3363">After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method.</span></span> <span data-ttu-id="3d62e-3364">这将提高具有多个控件的应用程序的性能。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3364">This will increase the performance of applications with many controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3365">下面的代码示例将两个按钮添加到窗体。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3365">The following code example adds two buttons to a form.</span></span> <span data-ttu-id="3d62e-3366">示例事务使用的按钮添加<xref:System.Windows.Forms.Control.SuspendLayout%2A>和<xref:System.Windows.Forms.Control.ResumeLayout%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3366">The example transactions the addition of the buttons by using the <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#2)]
 [!code-csharp[Windows.Forms.Control Members2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#2)]
 [!code-vb[Windows.Forms.Control Members2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragDrop">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragDrop (System.Windows.Forms.DragEventArgs drgEvent);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragDrop(class System.Windows.Forms.DragEventArgs drgEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragDrop (drgEvent As DragEventArgs) Implements IDropTarget.OnDragDrop" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragDrop(System::Windows::Forms::DragEventArgs ^ drgEvent) = System::Windows::Forms::IDropTarget::OnDragDrop;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragDrop(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgEvent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="drgEvent">
          <span data-ttu-id="3d62e-3367">包含事件数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3367">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3368">引发 <see cref="E:System.Windows.Forms.Control.DragDrop" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3368">Raises the <see cref="E:System.Windows.Forms.Control.DragDrop" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragEnter">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragEnter (System.Windows.Forms.DragEventArgs drgEvent);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragEnter(class System.Windows.Forms.DragEventArgs drgEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragEnter (drgEvent As DragEventArgs) Implements IDropTarget.OnDragEnter" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragEnter(System::Windows::Forms::DragEventArgs ^ drgEvent) = System::Windows::Forms::IDropTarget::OnDragEnter;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragEnter(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgEvent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="drgEvent">
          <span data-ttu-id="3d62e-3369">包含事件数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3369">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3370">引发 <see cref="E:System.Windows.Forms.Control.DragEnter" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3370">Raises the <see cref="E:System.Windows.Forms.Control.DragEnter" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragLeave">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragLeave (e As EventArgs) Implements IDropTarget.OnDragLeave" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragLeave(EventArgs ^ e) = System::Windows::Forms::IDropTarget::OnDragLeave;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragLeave(System.EventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d62e-3371">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3371">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3372">引发 <see cref="E:System.Windows.Forms.Control.DragLeave" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3372">Raises the <see cref="E:System.Windows.Forms.Control.DragLeave" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragOver">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragOver (System.Windows.Forms.DragEventArgs drgEvent);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragOver(class System.Windows.Forms.DragEventArgs drgEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragOver (drgEvent As DragEventArgs) Implements IDropTarget.OnDragOver" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragOver(System::Windows::Forms::DragEventArgs ^ drgEvent) = System::Windows::Forms::IDropTarget::OnDragOver;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragOver(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgEvent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="drgEvent">
          <span data-ttu-id="3d62e-3373">包含事件数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3373">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3374">引发 <see cref="E:System.Windows.Forms.Control.DragOver" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3374">Raises the <see cref="E:System.Windows.Forms.Control.DragOver" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemColorsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SystemColorsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SystemColorsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.SystemColorsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SystemColorsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SystemColorsChanged;" />
      <MemberSignature Language="F#" Value="member this.SystemColorsChanged : EventHandler " Usage="member this.SystemColorsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3375">系统颜色更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3375">Occurs when the system colors change.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3376">如果引发此事件<xref:System.Drawing.SystemColors>更改通过以编程方式修改或用户交互。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3376">This event is raised if the <xref:System.Drawing.SystemColors> is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="3d62e-3377">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3377">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3378">下面的代码示例演示如何将此成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3378">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3d62e-3379">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Control.SystemColorsChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3379">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.SystemColorsChanged> event.</span></span> <span data-ttu-id="3d62e-3380">此报告可帮助您了解事件发生的并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3380">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3d62e-3381">若要报告或频繁发生的事件上多个事件，请考虑更换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或将消息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3381">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3d62e-3382">若要运行此代码示例，请将其粘贴到包含继承的类型的实例的项目<xref:System.Windows.Forms.Control>，如<xref:System.Windows.Forms.Button>或<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3382">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="3d62e-3383">然后该实例命名`Control1`，并确保事件处理程序相关联<xref:System.Windows.Forms.Control.SystemColorsChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3383">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.SystemColorsChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#69](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#69)]
 [!code-vb[System.Windows.Forms.EventExamples#69](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#69)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" />
        <altmember cref="T:System.Drawing.SystemColors" />
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public int TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property TabIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TabIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TabIndex : int with get, set" Usage="System.Windows.Forms.Control.TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3384">获取或设置控件在其容器内的 Tab 键顺序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3384">Gets or sets the tab order of the control within its container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-3385">控件容器中控件集合内的控件的索引值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3385">The index value of the control within the set of controls within its container.</span>
          </span>
          <span data-ttu-id="3d62e-3386">容器中包括的控件以 Tab 键顺序排列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3386">The controls in the container are included in the tab order.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3387">选项卡索引可以包含任何有效的整数大于或等于零，较低的数字前的 tab 键顺序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3387">A tab index can consist of any valid integer greater than or equal to zero, lower numbers being earlier in the tab order.</span></span> <span data-ttu-id="3d62e-3388">如果在同一个父控件上的多个控件具有相同的选项卡索引，控件的 z 顺序确定在控件间循环切换顺序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3388">If more than one control on the same parent control has the same tab index, the z-order of the controls determines the order to cycle through the controls.</span></span>  
  
 <span data-ttu-id="3d62e-3389">要包含在 tab 键顺序中的控件及其<xref:System.Windows.Forms.Control.TabStop%2A>属性必须设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3389">For a control to be included in the tab order, its <xref:System.Windows.Forms.Control.TabStop%2A> property must be set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3390">下面的代码示例添加<xref:System.Windows.Forms.Button>向窗体，并设置它的一些常见属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3390">The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties.</span></span> <span data-ttu-id="3d62e-3391">示例定位到窗体右下角的按钮，以便在调整窗体大小时，它使其相对位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3391">The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</span></span> <span data-ttu-id="3d62e-3392">接下来设置<xref:System.Windows.Forms.Control.BackgroundImage%2A>调整大小的按钮为具有相同的大小和<xref:System.Drawing.Image>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3392">Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="3d62e-3393">该示例然后设置<xref:System.Windows.Forms.Control.TabStop%2A>到`true`，并设置<xref:System.Windows.Forms.Control.TabIndex%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3393">The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property.</span></span> <span data-ttu-id="3d62e-3394">最后，它将添加一个事件处理程序以处理<xref:System.Windows.Forms.Control.Click>按钮的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3394">Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button.</span></span> <span data-ttu-id="3d62e-3395">此示例要求具有<xref:System.Windows.Forms.ImageList>名为`imageList1`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3395">This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.UpdateZOrder" />
        <altmember cref="P:System.Windows.Forms.Control.TabStop" />
      </Docs>
    </Member>
    <Member MemberName="TabIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.TabIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.TabIndexChanged : EventHandler " Usage="member this.TabIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3396">在 <see cref="P:System.Windows.Forms.Control.TabIndex" /> 属性值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3396">Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3397">如果引发此事件<xref:System.Windows.Forms.Control.TabIndex%2A>属性更改通过以编程方式修改或用户交互。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3397">This event is raised if the <xref:System.Windows.Forms.Control.TabIndex%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="3d62e-3398">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3398">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3399">下面的代码示例演示如何将此成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3399">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3d62e-3400">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Control.TabIndexChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3400">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.TabIndexChanged> event.</span></span> <span data-ttu-id="3d62e-3401">此报告可帮助您了解事件发生的并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3401">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3d62e-3402">若要报告或频繁发生的事件上多个事件，请考虑更换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或将消息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3402">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3d62e-3403">若要运行此代码示例，请将其粘贴到包含继承的类型的实例的项目<xref:System.Windows.Forms.Control>，如<xref:System.Windows.Forms.Button>或<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3403">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="3d62e-3404">然后该实例命名`Control1`，并确保事件处理程序相关联<xref:System.Windows.Forms.Control.TabIndexChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3404">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.TabIndexChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#25)]
 [!code-vb[System.Windows.Forms.EventExamples#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.TabIndex" />
      </Docs>
    </Member>
    <Member MemberName="TabStop">
      <MemberSignature Language="C#" Value="public bool TabStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TabStop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.TabStop" />
      <MemberSignature Language="VB.NET" Value="Public Property TabStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TabStop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TabStop : bool with get, set" Usage="System.Windows.Forms.Control.TabStop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(-516)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3405">获取或设置一个值，该值指示用户能否使用 Tab 键将焦点放到该控件上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3405">Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-3406">如果用户可以用 Tab 键将焦点放到此控件上，则为 <see langword="true" />；反之，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3406">
              <see langword="true" /> if the user can give the focus to the control using the TAB key; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3d62e-3407">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3407">The default is <see langword="true" />.</span>
          </span>
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="3d62e-3408">对于 <see langword="true" /> 类的实例，该属性将始终返回 <see cref="T:System.Windows.Forms.Form" />。</span>
              <span class="sxs-lookup">
                <span data-stu-id="3d62e-3408">This property will always return <see langword="true" /> for an instance of the <see cref="T:System.Windows.Forms.Form" /> class.</span>
              </span>
            </para>
          </block>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3409">当用户按 TAB 键时，输入的焦点设置到 tab 键顺序中下一个控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3409">When the user presses the TAB key, the input focus is set to the next control in the tab order.</span></span> <span data-ttu-id="3d62e-3410">控件<xref:System.Windows.Forms.Control.TabStop%2A>属性值为`false`不包括在 tab 键顺序中的控件的集合。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3410">Controls with the <xref:System.Windows.Forms.Control.TabStop%2A> property value of `false` are not included in the collection of controls in the tab order.</span></span> <span data-ttu-id="3d62e-3411">可以通过设置控件的操作的 tab 键顺序<xref:System.Windows.Forms.Control.TabIndex%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3411">The tab order can be manipulated by setting the control's <xref:System.Windows.Forms.Control.TabIndex%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3412">下面的代码示例添加<xref:System.Windows.Forms.Button>向窗体，并设置它的一些常见属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3412">The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties.</span></span> <span data-ttu-id="3d62e-3413">示例定位到窗体右下角的按钮，以便在调整窗体大小时，它使其相对位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3413">The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</span></span> <span data-ttu-id="3d62e-3414">接下来设置<xref:System.Windows.Forms.Control.BackgroundImage%2A>调整大小的按钮为具有相同的大小和<xref:System.Drawing.Image>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3414">Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="3d62e-3415">该示例然后设置<xref:System.Windows.Forms.Control.TabStop%2A>到`true`，并设置<xref:System.Windows.Forms.Control.TabIndex%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3415">The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property.</span></span> <span data-ttu-id="3d62e-3416">最后，它将添加一个事件处理程序以处理<xref:System.Windows.Forms.Control.Click>按钮的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3416">Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button.</span></span> <span data-ttu-id="3d62e-3417">此示例要求具有<xref:System.Windows.Forms.ImageList>名为`imageList1`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3417">This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.TabIndex" />
      </Docs>
    </Member>
    <Member MemberName="TabStopChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabStopChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabStopChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.TabStopChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabStopChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabStopChanged;" />
      <MemberSignature Language="F#" Value="member this.TabStopChanged : EventHandler " Usage="member this.TabStopChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3418">在 <see cref="P:System.Windows.Forms.Control.TabStop" /> 属性值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3418">Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3419">如果引发此事件<xref:System.Windows.Forms.Control.TabStop%2A>属性更改通过以编程方式修改或用户交互。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3419">This event is raised if the <xref:System.Windows.Forms.Control.TabStop%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="3d62e-3420">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3420">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3421">下面的代码示例演示如何将此成员。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3421">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3d62e-3422">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Control.TabStopChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3422">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.TabStopChanged> event.</span></span> <span data-ttu-id="3d62e-3423">此报告可帮助您了解事件发生的并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3423">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3d62e-3424">若要报告或频繁发生的事件上多个事件，请考虑更换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或将消息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3424">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3d62e-3425">若要运行此代码示例，请将其粘贴到包含继承的类型的实例的项目<xref:System.Windows.Forms.Control>，如<xref:System.Windows.Forms.Button>或<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3425">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="3d62e-3426">然后该实例命名`Control1`，并确保事件处理程序相关联<xref:System.Windows.Forms.Control.TabStopChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3426">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.TabStopChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#26](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#26)]
 [!code-vb[System.Windows.Forms.EventExamples#26](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#26)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.TabStop" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.Control.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3427">获取或设置包含有关控件的数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3427">Gets or sets the object that contains data about the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-3428">一个 <see cref="T:System.Object" />，其中包含有关控件的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3428">An <see cref="T:System.Object" /> that contains data about the control.</span>
          </span>
          <span data-ttu-id="3d62e-3429">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3429">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3430">从派生的任何类型<xref:System.Object>类可以分配给此属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3430">Any type derived from the <xref:System.Object> class can be assigned to this property.</span></span> <span data-ttu-id="3d62e-3431">如果<xref:System.Windows.Forms.Control.Tag%2A>通过 Windows 窗体设计器设置属性，可分配纯文本。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3431">If the <xref:System.Windows.Forms.Control.Tag%2A> property is set through the Windows Forms designer, only text can be assigned.</span></span>  
  
 <span data-ttu-id="3d62e-3432">一个常见用途<xref:System.Windows.Forms.Control.Tag%2A>属性是与该控件密切相关联的数据存储。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3432">A common use for the <xref:System.Windows.Forms.Control.Tag%2A> property is to store data that is closely associated with the control.</span></span> <span data-ttu-id="3d62e-3433">例如，如果您有一个控件，显示有关客户的信息，你可能会存储<xref:System.Data.DataSet>，其中包含该控件中的客户的订单历史记录<xref:System.Windows.Forms.Control.Tag%2A>属性，以便可以快速访问这些数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3433">For example, if you have a control that displays information about a customer, you might store a <xref:System.Data.DataSet> that contains the customer's order history in that control's <xref:System.Windows.Forms.Control.Tag%2A> property so the data can be accessed quickly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3434">下面的代码示例显示一个窗体，并将存储`Customer`在其<xref:System.Windows.Forms.Control.Tag%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3434">The following code example displays a form and stores a `Customer` in its <xref:System.Windows.Forms.Control.Tag%2A> property.</span></span> <span data-ttu-id="3d62e-3435">此示例需要您定义了派生的类<xref:System.Windows.Forms.Form>名为`CustomerForm`和已定义的`Customer`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3435">This example requires that you have defined a class that derives from <xref:System.Windows.Forms.Form> named `CustomerForm` and that you have defined a `Customer`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members2#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members2#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#3)]
 [!code-vb[Windows.Forms.Control Members2#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.Control.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(-517)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3436">获取或设置与此控件关联的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3436">Gets or sets the text associated with this control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-3437">与该控件关联的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3437">The text associated with this control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3438"><xref:System.Windows.Forms.Control.Text%2A>每个派生类以不同的方式使用该控件的属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3438">The <xref:System.Windows.Forms.Control.Text%2A> property of the control is used differently by each derived class.</span></span> <span data-ttu-id="3d62e-3439">例如<xref:System.Windows.Forms.Control.Text%2A>属性的<xref:System.Windows.Forms.Form>显示在窗体顶部的标题栏中，字符数，在很小，通常显示的应用程序或文档的名称。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3439">For example the <xref:System.Windows.Forms.Control.Text%2A> property of a <xref:System.Windows.Forms.Form> is displayed in the title bar at the top of the form, is fairly small in character count, and usually displays the application or document name.</span></span> <span data-ttu-id="3d62e-3440">但是，<xref:System.Windows.Forms.Control.Text%2A>属性的<xref:System.Windows.Forms.RichTextBox>可以很大，并且可以包含大量用于设置文本格式的不可见字符。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3440">However, the <xref:System.Windows.Forms.Control.Text%2A> property of a <xref:System.Windows.Forms.RichTextBox> can be large and can include numerous nonvisual characters used to format the text.</span></span> <span data-ttu-id="3d62e-3441">例如，在显示的文本<xref:System.Windows.Forms.RichTextBox>可通过调整格式设置<xref:System.Drawing.Font>属性，或通过添加空格或制表符来对齐文本。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3441">For example, the text displayed in a <xref:System.Windows.Forms.RichTextBox> can be formatted by adjusting the <xref:System.Drawing.Font> properties, or by the addition of spaces or tab characters to align the text.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3442">下面的代码示例创建<xref:System.Windows.Forms.GroupBox>和设置的某些常见属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3442">The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties.</span></span> <span data-ttu-id="3d62e-3443">此示例将创建<xref:System.Windows.Forms.TextBox>，并设置其<xref:System.Windows.Forms.Control.Location%2A>组框中。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3443">The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box.</span></span> <span data-ttu-id="3d62e-3444">接下来，设置<xref:System.Windows.Forms.Control.Text%2A>停靠此分组框到窗体顶部的分组框的属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3444">Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form.</span></span> <span data-ttu-id="3d62e-3445">最后，通过设置禁用分组框<xref:System.Windows.Forms.Control.Enabled%2A>属性设置为`false`，这将导致要禁用的组框中包含的所有控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3445">Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#2)]
 [!code-csharp[Windows.Forms.Control Properties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#2)]
 [!code-vb[Windows.Forms.Control Properties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-3446">重写时<see cref="P:System.Windows.Forms.Control.Text" />属性在派生类中，使用基类的<see cref="P:System.Windows.Forms.Control.Text" />属性扩展的基实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-3446">When overriding the <see cref="P:System.Windows.Forms.Control.Text" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Text" /> property to extend the base implementation.</span>
            </span>
            <span data-ttu-id="3d62e-3447">否则，必须提供所有的实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-3447">Otherwise, you must provide all the implementation.</span>
            </span>
            <span data-ttu-id="3d62e-3448">不需要重写二者<see langword="get" />并<see langword="set" />访问器<see cref="P:System.Windows.Forms.Control.Text" />属性; 您可以根据需要覆盖只有一个。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-3448">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.Text" /> property; you can override only one if needed.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.TextLength" />
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3449">在 <see cref="P:System.Windows.Forms.Control.Text" /> 属性值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3449">Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3450">如果引发此事件<xref:System.Windows.Forms.Control.Text%2A>属性更改通过以编程方式修改或用户交互。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3450">This event is raised if the <xref:System.Windows.Forms.Control.Text%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="3d62e-3451">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3451">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3452">下面的代码示例中更改<xref:System.Windows.Forms.Control.ForeColor%2A>的<xref:System.Windows.Forms.TextBox>显示货币数据。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3452">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="3d62e-3453">此示例将文本转换为十进制数字，并更改<xref:System.Windows.Forms.Control.ForeColor%2A>到<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>如果数字为负数和<xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType>如果数字为正数。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3453">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="3d62e-3454">此示例要求具有<xref:System.Windows.Forms.Form>，其中包含<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3454">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Text" />
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public int Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Top" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Top { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Top : int with get, set" Usage="System.Windows.Forms.Control.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3455">获取或设置控件上边缘与其容器的工作区上边缘之间的距离（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3455">Gets or sets the distance, in pixels, between the top edge of the control and the top edge of its container's client area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-3456">
            <see cref="T:System.Int32" /> 表示控件下边缘与其容器的工作区上边缘之间的距离（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3456">An <see cref="T:System.Int32" /> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3457"><xref:System.Windows.Forms.Control.Top%2A>属性值等于<xref:System.Drawing.Point.Y%2A?displayProperty=nameWithType>属性的<xref:System.Windows.Forms.Control.Location%2A>控件的属性值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3457">The <xref:System.Windows.Forms.Control.Top%2A> property value is equivalent to the <xref:System.Drawing.Point.Y%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.Control.Location%2A> property value of the control.</span></span>  
  
 <span data-ttu-id="3d62e-3458">对所做更改<xref:System.Windows.Forms.Control.Height%2A>并<xref:System.Windows.Forms.Control.Top%2A>属性值将导致<xref:System.Windows.Forms.Control.Bottom%2A>要更改的控件的属性值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3458">Changes made to the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Top%2A> property values cause the <xref:System.Windows.Forms.Control.Bottom%2A> property value of the control to change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3459">下面的代码示例创建三个<xref:System.Windows.Forms.Button>窗体上并使用各种大小相关以及与位置相关属性来设置其大小和位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3459">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="3d62e-3460">此示例中，你需要具有<xref:System.Windows.Forms.Form>具有宽度和高度至少为 300 像素。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3460">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Point.Y" />
        <altmember cref="P:System.Windows.Forms.Control.Bottom" />
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="TopLevelControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control TopLevelControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control TopLevelControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.TopLevelControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopLevelControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ TopLevelControl { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TopLevelControl : System.Windows.Forms.Control" Usage="System.Windows.Forms.Control.TopLevelControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3461">获取没有另一个 Windows 窗体控件作为其父级的父控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3461">Gets the parent control that is not parented by another Windows Forms control.</span>
          </span>
          <span data-ttu-id="3d62e-3462">通常，这是控件所在的最外面的 <see cref="T:System.Windows.Forms.Form" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3462">Typically, this is the outermost <see cref="T:System.Windows.Forms.Form" /> that the control is contained in.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-3463">
            <see cref="T:System.Windows.Forms.Control" />，它表示包含当前控件的顶级控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3463">The <see cref="T:System.Windows.Forms.Control" /> that represents the top-level control that contains the current control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3464">顶级控件被指不由另一个 Windows 窗体控件父级的父控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3464">The top-level control is defined as the parent control that is not parented by another Windows Forms control.</span></span> <span data-ttu-id="3d62e-3465">通常，这是控件所在的最外面的 <xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3465">Typically, this is the outermost <xref:System.Windows.Forms.Form> that the control is contained in.</span></span> <span data-ttu-id="3d62e-3466">例如，如果该控件包含在 MDI 子窗体上<xref:System.Windows.Forms.Form>，则顶级控件为多文档界面 (MDI) 父<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3466">For example, if the control is contained on an MDI child <xref:System.Windows.Forms.Form>, then the top-level control is the Multiple Document Interface (MDI) parent <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="3d62e-3467">如果控件不在父级<xref:System.Windows.Forms.Form>，此属性将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3467">If the control is not parented on a <xref:System.Windows.Forms.Form>, this property will return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3d62e-3468">若要获取此属性的值的所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3468">for all windows to get this property value.</span>
          </span>
          <span data-ttu-id="3d62e-3469">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3469">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Forms.Form" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="control.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3470">使控件重绘其工作区内的无效区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3470">Causes the control to redraw the invalidated regions within its client area.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3471">执行用于绘制任何挂起的请求。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3471">Executes any pending requests for painting.</span></span>  
  
 <span data-ttu-id="3d62e-3472">有两种方法重新绘制窗体及其内容：</span><span class="sxs-lookup"><span data-stu-id="3d62e-3472">There are two ways to repaint a form and its contents:</span></span>  
  
-   <span data-ttu-id="3d62e-3473">可以使用的重载之一<xref:System.Windows.Forms.Control.Invalidate%2A>方法替换<xref:System.Windows.Forms.Control.Update%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3473">You can use one of the overloads of the <xref:System.Windows.Forms.Control.Invalidate%2A> method with the <xref:System.Windows.Forms.Control.Update%2A> method.</span></span>  
  
-   <span data-ttu-id="3d62e-3474">您可以调用<xref:System.Windows.Forms.Control.Refresh%2A>方法，这会强制控件重绘本身及其所有子级。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3474">You can call the <xref:System.Windows.Forms.Control.Refresh%2A> method, which forces the control to redraw itself and all its children.</span></span> <span data-ttu-id="3d62e-3475">这相当于设置<xref:System.Windows.Forms.Control.Invalidate%2A>方法`true`并将其与<xref:System.Windows.Forms.Control.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3475">This is equivalent to setting the <xref:System.Windows.Forms.Control.Invalidate%2A> method to `true` and using it with <xref:System.Windows.Forms.Control.Update%2A>.</span></span>  
  
 <span data-ttu-id="3d62e-3476"><xref:System.Windows.Forms.Control.Invalidate%2A>方法控制什么获取绘制或重新绘制。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3476">The <xref:System.Windows.Forms.Control.Invalidate%2A> method governs what gets painted or repainted.</span></span> <span data-ttu-id="3d62e-3477"><xref:System.Windows.Forms.Control.Update%2A>方法控制何时进行绘制或重绘。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3477">The <xref:System.Windows.Forms.Control.Update%2A> method governs when the painting or repainting occurs.</span></span> <span data-ttu-id="3d62e-3478">如果您使用<xref:System.Windows.Forms.Control.Invalidate%2A>并<xref:System.Windows.Forms.Control.Update%2A>方法一起使用，而不是调用<xref:System.Windows.Forms.Control.Refresh%2A>，绘制的内容取决于哪个重载<xref:System.Windows.Forms.Control.Invalidate%2A>你使用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3478">If you use the <xref:System.Windows.Forms.Control.Invalidate%2A> and <xref:System.Windows.Forms.Control.Update%2A> methods together rather than calling <xref:System.Windows.Forms.Control.Refresh%2A>, what gets repainted depends on which overload of <xref:System.Windows.Forms.Control.Invalidate%2A> you use.</span></span> <span data-ttu-id="3d62e-3479"><xref:System.Windows.Forms.Control.Update%2A>方法只强制执行立即要绘制的控件，但<xref:System.Windows.Forms.Control.Invalidate%2A>方法控制所绘制的调用时<xref:System.Windows.Forms.Control.Update%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3479">The <xref:System.Windows.Forms.Control.Update%2A> method just forces the control to be painted immediately, but the <xref:System.Windows.Forms.Control.Invalidate%2A> method governs what gets painted when you call the <xref:System.Windows.Forms.Control.Update%2A> method.</span></span>  
  
 <span data-ttu-id="3d62e-3480">有关详细信息，请参阅[WM_PAINT](http://msdn.microsoft.com/library/dd145213\(v=vs.85\).aspx)主题。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3480">For more information, see the [WM_PAINT](http://msdn.microsoft.com/library/dd145213\(v=vs.85\).aspx) topic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ClientRectangle" />
        <altmember cref="P:System.Windows.Forms.Control.ClientSize" />
        <altmember cref="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateBounds">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3481">更新控件的边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3481">Updates the bounds of the control.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateBounds">
      <MemberSignature Language="C#" Value="protected internal void UpdateBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void UpdateBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.UpdateBounds" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub UpdateBounds ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void UpdateBounds();" />
      <MemberSignature Language="F#" Value="member this.UpdateBounds : unit -&gt; unit" Usage="control.UpdateBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3482">用当前大小和位置更新控件的边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3482">Updates the bounds of the control with the current size and location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3483">如果新<xref:System.Windows.Forms.Control.Size%2A>控件的是不同于以前<xref:System.Drawing.Size>，则<xref:System.Windows.Forms.Control.SizeChanged>引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3483">If the new <xref:System.Windows.Forms.Control.Size%2A> of the control is different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised.</span></span> <span data-ttu-id="3d62e-3484">同样，如果<xref:System.Windows.Forms.Control.Location%2A>的控件更改<xref:System.Windows.Forms.Control.LocationChanged>引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3484">Likewise, if the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
      </Docs>
    </Member>
    <Member MemberName="UpdateBounds">
      <MemberSignature Language="C#" Value="protected void UpdateBounds (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateBounds(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateBounds (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateBounds(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.UpdateBounds : int * int * int * int -&gt; unit" Usage="control.UpdateBounds (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="3d62e-3485">控件的 <see cref="P:System.Drawing.Point.X" /> 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3485">The <see cref="P:System.Drawing.Point.X" /> coordinate of the control.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="3d62e-3486">控件的 <see cref="P:System.Drawing.Point.Y" /> 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3486">The <see cref="P:System.Drawing.Point.Y" /> coordinate of the control.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="3d62e-3487">控件的 <see cref="P:System.Drawing.Size.Width" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3487">The <see cref="P:System.Drawing.Size.Width" /> of the control.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="3d62e-3488">控件的 <see cref="P:System.Drawing.Size.Height" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3488">The <see cref="P:System.Drawing.Size.Height" /> of the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3489">用指定大小和位置更新控件的边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3489">Updates the bounds of the control with the specified size and location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3490">如果新<xref:System.Windows.Forms.Control.Size%2A>如果不同于以前的控件<xref:System.Drawing.Size>，则<xref:System.Windows.Forms.Control.SizeChanged>引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3490">If the new <xref:System.Windows.Forms.Control.Size%2A> of the control if different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised.</span></span> <span data-ttu-id="3d62e-3491">同样，也<xref:System.Windows.Forms.Control.Location%2A>的控件更改<xref:System.Windows.Forms.Control.LocationChanged>引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3491">Likewise, is the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
      </Docs>
    </Member>
    <Member MemberName="UpdateBounds">
      <MemberSignature Language="C#" Value="protected void UpdateBounds (int x, int y, int width, int height, int clientWidth, int clientHeight);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateBounds(int32 x, int32 y, int32 width, int32 height, int32 clientWidth, int32 clientHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateBounds (x As Integer, y As Integer, width As Integer, height As Integer, clientWidth As Integer, clientHeight As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateBounds(int x, int y, int width, int height, int clientWidth, int clientHeight);" />
      <MemberSignature Language="F#" Value="member this.UpdateBounds : int * int * int * int * int * int -&gt; unit" Usage="control.UpdateBounds (x, y, width, height, clientWidth, clientHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="clientWidth" Type="System.Int32" />
        <Parameter Name="clientHeight" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="3d62e-3492">控件的 <see cref="P:System.Drawing.Point.X" /> 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3492">The <see cref="P:System.Drawing.Point.X" /> coordinate of the control.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="3d62e-3493">控件的 <see cref="P:System.Drawing.Point.Y" /> 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3493">The <see cref="P:System.Drawing.Point.Y" /> coordinate of the control.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="3d62e-3494">控件的 <see cref="P:System.Drawing.Size.Width" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3494">The <see cref="P:System.Drawing.Size.Width" /> of the control.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="3d62e-3495">控件的 <see cref="P:System.Drawing.Size.Height" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3495">The <see cref="P:System.Drawing.Size.Height" /> of the control.</span>
          </span>
        </param>
        <param name="clientWidth">
          <span data-ttu-id="3d62e-3496">控件的工作区的 <see cref="P:System.Drawing.Size.Width" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3496">The client <see cref="P:System.Drawing.Size.Width" /> of the control.</span>
          </span>
        </param>
        <param name="clientHeight">
          <span data-ttu-id="3d62e-3497">控件的工作区的 <see cref="P:System.Drawing.Size.Height" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3497">The client <see cref="P:System.Drawing.Size.Height" /> of the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3498">用指定大小、位置和工作区的大小更新控件的边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3498">Updates the bounds of the control with the specified size, location, and client size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3499">如果新<xref:System.Windows.Forms.Control.Size%2A>控件的是不同于以前<xref:System.Drawing.Size>，则<xref:System.Windows.Forms.Control.SizeChanged>引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3499">If the new <xref:System.Windows.Forms.Control.Size%2A> of the control is different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised.</span></span> <span data-ttu-id="3d62e-3500">同样，如果<xref:System.Windows.Forms.Control.Location%2A>的控件更改<xref:System.Windows.Forms.Control.LocationChanged>引发事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3500">Likewise, if the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
        <altmember cref="P:System.Windows.Forms.Control.ClientRectangle" />
      </Docs>
    </Member>
    <Member MemberName="UpdateStyles">
      <MemberSignature Language="C#" Value="protected void UpdateStyles ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateStyles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.UpdateStyles" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateStyles ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateStyles();" />
      <MemberSignature Language="F#" Value="member this.UpdateStyles : unit -&gt; unit" Usage="control.UpdateStyles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3501">强制将分配的样式重新应用到控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3501">Forces the assigned styles to be reapplied to the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3502">此方法调用<xref:System.Windows.Forms.Control.CreateParams%2A>方法以获取要应用的样式。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3502">This method calls the <xref:System.Windows.Forms.Control.CreateParams%2A> method to get the styles to apply.</span></span> <span data-ttu-id="3d62e-3503">分配给样式<xref:System.Windows.Forms.CreateParams.Style%2A>并<xref:System.Windows.Forms.CreateParams.ExStyle%2A>的属性<xref:System.Windows.Forms.CreateParams>分配给控件的<xref:System.Windows.Forms.Control.CreateParams%2A>属性都将重新应用。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3503">The styles assigned to the <xref:System.Windows.Forms.CreateParams.Style%2A> and <xref:System.Windows.Forms.CreateParams.ExStyle%2A> properties of the <xref:System.Windows.Forms.CreateParams> assigned to the control's <xref:System.Windows.Forms.Control.CreateParams%2A> property are reapplied.</span></span> <span data-ttu-id="3d62e-3504">重新绘制控件以反映样式发生改变，如有必要。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3504">The control is repainted to reflect the style changes if necessary.</span></span>  
  
 <span data-ttu-id="3d62e-3505"><xref:System.Windows.Forms.Control.UpdateStyles%2A>方法不起如果<xref:System.Windows.Forms.Control.IsHandleCreated%2A>属性值是`false`。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3505">The <xref:System.Windows.Forms.Control.UpdateStyles%2A> method has no effect if the <xref:System.Windows.Forms.Control.IsHandleCreated%2A> property value is `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3506">下面的代码示例启用双缓冲上<xref:System.Windows.Forms.Form>并更新以反映所做的更改的样式。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3506">The following code example enables double-buffering on a <xref:System.Windows.Forms.Form> and updates the styles to reflect the changes.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#3)]
 [!code-csharp[Windows.Forms.ControlMembers6#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#3)]
 [!code-vb[Windows.Forms.ControlMembers6#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="UpdateZOrder">
      <MemberSignature Language="C#" Value="protected void UpdateZOrder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateZOrder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.UpdateZOrder" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateZOrder ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateZOrder();" />
      <MemberSignature Language="F#" Value="member this.UpdateZOrder : unit -&gt; unit" Usage="control.UpdateZOrder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3507">按控件的父级的 Z 顺序更新控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3507">Updates the control in its parent's z-order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3508"><xref:System.Windows.Forms.Control.UpdateZOrder%2A>方法会更新其父控件的 z 顺序中控件的位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3508">The <xref:System.Windows.Forms.Control.UpdateZOrder%2A> method updates the position of the control in its parent control's z-order.</span></span> <span data-ttu-id="3d62e-3509">例如，如果此控件是新创建的控件已添加到<xref:System.Windows.Forms.Control.ControlCollection>，z 顺序更新与新控件添加到背面。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3509">For example, if this control is a newly created control that was added to a <xref:System.Windows.Forms.Control.ControlCollection>, the z-order is updated with the new control added to the back.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="UseWaitCursor">
      <MemberSignature Language="C#" Value="public bool UseWaitCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseWaitCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.UseWaitCursor" />
      <MemberSignature Language="VB.NET" Value="Public Property UseWaitCursor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseWaitCursor { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseWaitCursor : bool with get, set" Usage="System.Windows.Forms.Control.UseWaitCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3510">获取或设置一个值，该值指示是否将等待光标用于当前控件以及所有子控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3510">Gets or sets a value indicating whether to use the wait cursor for the current control and all child controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-3511">若要将等待光标用于当前控件以及所有子控件，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3511">
              <see langword="true" /> to use the wait cursor for the current control and all child controls; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3d62e-3512">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3512">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3513">只要执行的操作所花费的时间明显长，请使用等待光标。但请注意阻塞 UI 线程的操作也会阻止 acursor 更改。因此，仅应在另一个线程中执行耗时的操作时使用此属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3513">Use a wait cursor whenever you perform an operation that takes a noticeable amount of time.However, note that operations that block the UI thread will also block acursor change.Therefore, this property should only be used when performing time-consuming operations in another thread.</span></span> <span data-ttu-id="3d62e-3514">若要在全局级别并立即更改光标，请参阅<xref:System.Windows.Forms.Cursor.Current%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3514">To change the cursor globally and immediately, seethe <xref:System.Windows.Forms.Cursor.Current%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validated">
      <MemberSignature Language="C#" Value="public event EventHandler Validated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Validated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Validated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Validated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Validated;" />
      <MemberSignature Language="F#" Value="member this.Validated : EventHandler " Usage="member this.Validated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3515">在控件完成验证时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3515">Occurs when the control is finished validating.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3516">将焦点更改通过使用键盘 （TAB、 SHIFT + TAB，等），通过调用<xref:System.Windows.Forms.Control.Select%2A>或<xref:System.Windows.Forms.Control.SelectNextControl%2A>方法，或通过设置<xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType>到当前窗体的属性，将按以下顺序发生焦点事件：</span><span class="sxs-lookup"><span data-stu-id="3d62e-3516">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="3d62e-3517">当更改焦点，使用鼠标或通过调用<xref:System.Windows.Forms.Control.Focus%2A>方法时，按以下顺序执行的焦点事件：</span><span class="sxs-lookup"><span data-stu-id="3d62e-3517">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="3d62e-3518">如果<xref:System.Windows.Forms.Control.CausesValidation%2A>属性设置为`false`，则<xref:System.Windows.Forms.Control.Validating>和<xref:System.Windows.Forms.Control.Validated>所抑制的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3518">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
 <span data-ttu-id="3d62e-3519">如果<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>的属性<xref:System.ComponentModel.CancelEventArgs>设置为`true`中<xref:System.Windows.Forms.Control.Validating>事件委托，通常会发生后的所有事件<xref:System.Windows.Forms.Control.Validating>所抑制的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3519">If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3d62e-3520">不尝试将焦点设置在<xref:System.Windows.Forms.Control.Enter>， <xref:System.Windows.Forms.Control.GotFocus>， <xref:System.Windows.Forms.Control.Leave>， <xref:System.Windows.Forms.Control.LostFocus>， <xref:System.Windows.Forms.Control.Validating>，或<xref:System.Windows.Forms.Control.Validated>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3520">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="3d62e-3521">执行此操作可能会导致你的应用程序或操作系统停止响应。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3521">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="3d62e-3522">有关详细信息，请参阅[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx)主题中和的"消息死锁"一节[有关消息和消息队列](http://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx)主题。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3522">For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx) topic, and the "Message Deadlocks" section of the [About Messages and Message Queues](http://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx) topic.</span></span>  
  
 <span data-ttu-id="3d62e-3523">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3523">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3524">下面的代码示例使用派生的类<xref:System.Windows.Forms.TextBox>并验证用户输入的电子邮件地址。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3524">The following code example uses the derived class <xref:System.Windows.Forms.TextBox> and validates an email address that the user enters.</span></span> <span data-ttu-id="3d62e-3525">如果电子邮件地址不是标准格式 (包含"@" and "。")，则验证将失败，<xref:System.Windows.Forms.ErrorProvider>图标会显示，并且取消了该事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3525">If the email address is not in the standard format (containing "@" and "."), the validation fails, an <xref:System.Windows.Forms.ErrorProvider> icon is displayed, and the event is canceled.</span></span> <span data-ttu-id="3d62e-3526">此示例需要<xref:System.Windows.Forms.TextBox>和<xref:System.Windows.Forms.ErrorProvider>已在窗体上创建控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3526">This example requires that a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ErrorProvider> control have been created on a form.</span></span>  
  
 [!code-cpp[Control.Validating#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Validating/CPP/validating.cpp#1)]
 [!code-csharp[Control.Validating#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Validating/CS/validating.cs#1)]
 [!code-vb[Control.Validating#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Validating/VB/validating.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.CausesValidation" />
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
      </Docs>
    </Member>
    <Member MemberName="Validating">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler Validating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler Validating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Validating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Validating As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ Validating;" />
      <MemberSignature Language="F#" Value="member this.Validating : System.ComponentModel.CancelEventHandler " Usage="member this.Validating : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3527">在控件验证时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3527">Occurs when the control is validating.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3528">将焦点更改通过使用键盘 （TAB、 SHIFT + TAB，等），通过调用<xref:System.Windows.Forms.Control.Select%2A>或<xref:System.Windows.Forms.Control.SelectNextControl%2A>方法，或通过设置<xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType>到当前窗体的属性，将按以下顺序发生焦点事件：</span><span class="sxs-lookup"><span data-stu-id="3d62e-3528">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="3d62e-3529">当更改焦点，使用鼠标或通过调用<xref:System.Windows.Forms.Control.Focus%2A>方法时，按以下顺序执行的焦点事件：</span><span class="sxs-lookup"><span data-stu-id="3d62e-3529">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="3d62e-3530">如果<xref:System.Windows.Forms.Control.CausesValidation%2A>属性设置为`false`，则<xref:System.Windows.Forms.Control.Validating>和<xref:System.Windows.Forms.Control.Validated>所抑制的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3530">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
 <span data-ttu-id="3d62e-3531">如果<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>的属性<xref:System.ComponentModel.CancelEventArgs>设置为`true`中<xref:System.Windows.Forms.Control.Validating>事件委托，通常会发生后的所有事件<xref:System.Windows.Forms.Control.Validating>所抑制的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3531">If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3d62e-3532">不尝试将焦点设置在<xref:System.Windows.Forms.Control.Enter>， <xref:System.Windows.Forms.Control.GotFocus>， <xref:System.Windows.Forms.Control.Leave>， <xref:System.Windows.Forms.Control.LostFocus>， <xref:System.Windows.Forms.Control.Validating>，或<xref:System.Windows.Forms.Control.Validated>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3532">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="3d62e-3533">执行此操作可能会导致你的应用程序或操作系统停止响应。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3533">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="3d62e-3534">有关详细信息，请参阅`WM_KILLFOCUS`"键盘输入参考"部分中，和上的 MSDN library 中的"有关的消息和消息队列"主题的"消息死锁"部分中的主题http://msdn.microsoft.com/library。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3534">For more information, see the `WM_KILLFOCUS` topic in the "Keyboard Input Reference" section, and the "Message Deadlocks" section of the "About Messages and Message Queues" topic in the MSDN library at http://msdn.microsoft.com/library.</span></span>  
  
 <span data-ttu-id="3d62e-3535">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3535">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3536">下面的代码示例使用派生的类<xref:System.Windows.Forms.TextBox>并验证用户输入的电子邮件地址。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3536">The following code example uses the derived class <xref:System.Windows.Forms.TextBox> and validates an email address that the user enters.</span></span> <span data-ttu-id="3d62e-3537">如果电子邮件地址不是标准格式 (包含"@" and "。")，则验证将失败，<xref:System.Windows.Forms.ErrorProvider>图标会显示，并且取消了该事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3537">If the email address is not in the standard format (containing "@" and "."), the validation fails, an <xref:System.Windows.Forms.ErrorProvider> icon is displayed, and the event is canceled.</span></span> <span data-ttu-id="3d62e-3538">此示例需要<xref:System.Windows.Forms.TextBox>和<xref:System.Windows.Forms.ErrorProvider>已在窗体上创建控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3538">This example requires that a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ErrorProvider> control have been created on a form.</span></span>  
  
 [!code-cpp[Control.Validating#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Validating/CPP/validating.cpp#1)]
 [!code-csharp[Control.Validating#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Validating/CS/validating.cs#1)]
 [!code-vb[Control.Validating#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Validating/VB/validating.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.CausesValidation" />
        <altmember cref="E:System.Windows.Forms.Control.Validated" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Windows.Forms.Control.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3539">获取或设置一个值，该值指示是否显示该控件及其所有子控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3539">Gets or sets a value indicating whether the control and all its child controls are displayed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-3540">如果显示该控件及其所有子控件，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3540">
              <see langword="true" /> if the control and all its child controls are displayed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3d62e-3541">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3541">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3542">请注意，即使`Visible`设置为`true`，控件可能不会显示给用户如果它是其他控件遮盖。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3542">Note that even if `Visible` is set to `true`, the control might not be visible to the user if it is obscured behind other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3543">下面的代码示例使用派生的类<xref:System.Windows.Forms.VScrollBar>并<xref:System.Windows.Forms.HScrollBar>，并设置其<xref:System.Windows.Forms.Control.Visible%2A>属性值，根据大小<xref:System.Drawing.Image>显示在<xref:System.Windows.Forms.PictureBox>控件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3543">The following code example uses the derived classes <xref:System.Windows.Forms.VScrollBar> and <xref:System.Windows.Forms.HScrollBar> and sets their <xref:System.Windows.Forms.Control.Visible%2A> property values, based on the size of an <xref:System.Drawing.Image> being displayed in a <xref:System.Windows.Forms.PictureBox> control.</span></span> <span data-ttu-id="3d62e-3544">此示例需要<xref:System.Windows.Forms.PictureBox>是否已创建一个窗体，在<xref:System.Windows.Forms.HScrollBar>并<xref:System.Windows.Forms.VScrollBar>上已创建控件<xref:System.Windows.Forms.PictureBox>。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3544">This example requires that a <xref:System.Windows.Forms.PictureBox> has been created on a form and that <xref:System.Windows.Forms.HScrollBar> and <xref:System.Windows.Forms.VScrollBar> controls have been created on the <xref:System.Windows.Forms.PictureBox>.</span></span> <span data-ttu-id="3d62e-3545">此代码时，应调用该映像加载到图片框和<xref:System.Windows.Forms.Control.Resize>窗体的事件。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3545">This code should be called when the image is loaded into the picture box and by the <xref:System.Windows.Forms.Control.Resize> event of the form.</span></span>  
  
 [!code-cpp[Classic Control.Visible Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Control.Visible Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Control.Visible Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Control.Visible Example/CS/source.cs#1)]
 [!code-vb[Classic Control.Visible Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Control.Visible Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Enabled" />
        <altmember cref="P:System.Windows.Forms.Control.CanFocus" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" />
        <altmember cref="E:System.Windows.Forms.Control.VisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="VisibleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler VisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler VisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.VisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VisibleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ VisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.VisibleChanged : EventHandler " Usage="member this.VisibleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3546">在 <see cref="P:System.Windows.Forms.Control.Visible" /> 属性值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3546">Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3547">如果引发此事件<xref:System.Windows.Forms.Control.Visible%2A>属性更改通过以编程方式修改或用户交互。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3547">This event is raised if the <xref:System.Windows.Forms.Control.Visible%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="3d62e-3548">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3548">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3549">下面的代码示例将引发<xref:System.Windows.Forms.Control.VisibleChanged>事件时<xref:System.Windows.Forms.Control.Visible%2A>属性值为<xref:System.Windows.Forms.Label>控制已更改。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3549">The following code example raises the <xref:System.Windows.Forms.Control.VisibleChanged> event when the <xref:System.Windows.Forms.Control.Visible%2A> property value of the <xref:System.Windows.Forms.Label> control has changed.</span></span>  
  
 [!code-cpp[Control_VisibleChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_VisibleChanged/CPP/control_visiblechanged.cpp#1)]
 [!code-csharp[Control_VisibleChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_VisibleChanged/CS/control_visiblechanged.cs#1)]
 [!code-vb[Control_VisibleChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_VisibleChanged/VB/control_visiblechanged.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Width : int with get, set" Usage="System.Windows.Forms.Control.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3550">获取或设置控件的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3550">Gets or sets the width of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-3551">控件的宽度（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3551">The width of the control in pixels.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3552">对所做更改<xref:System.Windows.Forms.Control.Width%2A>并<xref:System.Windows.Forms.Control.Left%2A>属性值将导致<xref:System.Windows.Forms.Control.Right%2A>要更改的控件的属性值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3552">Changes made to the <xref:System.Windows.Forms.Control.Width%2A> and <xref:System.Windows.Forms.Control.Left%2A> property values cause the <xref:System.Windows.Forms.Control.Right%2A> property value of the control to change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3553">下面的代码示例创建三个<xref:System.Windows.Forms.Button>窗体上并使用各种大小相关以及与位置相关属性来设置其大小和位置。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3553">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="3d62e-3554">此示例中，你需要具有<xref:System.Windows.Forms.Form>具有宽度和高度至少为 300 像素。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3554">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
        <altmember cref="P:System.Drawing.Size.Width" />
        <altmember cref="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WindowTarget">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IWindowTarget WindowTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IWindowTarget WindowTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.WindowTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowTarget As IWindowTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IWindowTarget ^ WindowTarget { System::Windows::Forms::IWindowTarget ^ get(); void set(System::Windows::Forms::IWindowTarget ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WindowTarget : System.Windows.Forms.IWindowTarget with get, set" Usage="System.Windows.Forms.Control.WindowTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IWindowTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d62e-3555">此属性与此类无关。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3555">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d62e-3556">在控件中包含的 NativeWindow。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3556">The NativeWindow contained within the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3557">此属性与此类无关。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3557">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected virtual void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member WndProc :  -&gt; unit&#xA;override this.WndProc :  -&gt; unit" Usage="control.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="3d62e-3558">要处理的 Windows <see cref="T:System.Windows.Forms.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3558">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d62e-3559">处理 Windows 消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3559">Processes Windows messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d62e-3560">所有消息都发送到<xref:System.Windows.Forms.Control.WndProc%2A>方法通过进行筛选后的<xref:System.Windows.Forms.Control.PreProcessMessage%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3560">All messages are sent to the <xref:System.Windows.Forms.Control.WndProc%2A> method after getting filtered through the <xref:System.Windows.Forms.Control.PreProcessMessage%2A> method.</span></span>  
  
 <span data-ttu-id="3d62e-3561"><xref:System.Windows.Forms.Control.WndProc%2A> 方法与 Windows `WindowProc` 函数完全对应。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3561">The <xref:System.Windows.Forms.Control.WndProc%2A> method corresponds exactly to the Windows `WindowProc` function.</span></span> <span data-ttu-id="3d62e-3562">有关处理 Windows 消息的详细信息，请参阅[WindowProc 函数](http://go.microsoft.com/fwlink/?LinkId=181565)。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3562">For more information about processing Windows messages, see the [WindowProc function](http://go.microsoft.com/fwlink/?LinkId=181565).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d62e-3563">下面的代码示例演示如何重写<xref:System.Windows.Forms.Control.WndProc%2A>方法以处理操作系统消息中标识<xref:System.Windows.Forms.Message>结构。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3563">The following code example demonstrates overriding the <xref:System.Windows.Forms.Control.WndProc%2A> method to handle operating system messages identified in the <xref:System.Windows.Forms.Message> structure.</span></span> <span data-ttu-id="3d62e-3564">[WM_ACTIVATEAPP](http://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx)操作系统消息处理在此示例中了解当另一个应用程序将变为活动状态。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3564">The [WM_ACTIVATEAPP](http://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx) operating system message is handled in this example to know when another application is becoming active.</span></span> <span data-ttu-id="3d62e-3565">请参阅以下主题以了解可用<xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType>， <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType>，和<xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType>值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3565">See the following topics to understand the available <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType>, and <xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType> values.</span></span> <span data-ttu-id="3d62e-3566">可以在 Windows.h 标头文件中找到实际的常量值。</span><span class="sxs-lookup"><span data-stu-id="3d62e-3566">Actual constant values can be found in the Windows.h header file.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="3d62e-3567">直接调用方调用非托管的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3567">for the immediate caller to call unmanaged code.</span>
          </span>
          <span data-ttu-id="3d62e-3568">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d62e-3568">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3d62e-3569">继承控件应调用基类的<see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />方法以处理它们不处理任何消息。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3d62e-3569">Inheriting controls should call the base class's <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> method to process any messages that they do not handle.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>