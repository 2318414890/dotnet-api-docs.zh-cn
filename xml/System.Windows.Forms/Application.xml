<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Application.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac523cf5709c7b9981a55cf02267bf0f36cec7fa6ac.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23cf5709c7b9981a55cf02267bf0f36cec7fa6ac</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Application">
          <source>Provides <ph id="ph1">&lt;see langword="static" /&gt;</ph> methods and properties to manage an application, such as methods to start and stop an application, to process Windows messages, and properties to get information about an application.</source>
          <target state="translated">提供 <ph id="ph1">&lt;see langword="static" /&gt;</ph> 方法和属性以管理应用程序，例如启动和停止应用程序、处理 Windows 消息的方法和获取应用程序信息的属性。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Application">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application&gt;</ph> class has methods to start and stop applications and threads, and to process Windows messages, as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application&gt;</ph>类具有方法用于启动和停止应用程序和线程，并处理 Windows 消息，如下所示：</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> starts an application message loop on the current thread and, optionally, makes a form visible.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> 在当前线程上启动应用程序消息循环和 （可选） 使窗体可见。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph> stops a message loop.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> 或<ph id="ph2">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph>停止消息循环。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> processes messages while your program is in a loop.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> 你的程序时在循环中处理消息。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.AddMessageFilter%2A&gt;</ph> adds a message filter to the application message pump to monitor Windows messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.AddMessageFilter%2A&gt;</ph> 将消息筛选器添加到应用程序消息泵来监视 Windows 消息。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.IMessageFilter&gt;</ph> lets you stop an event from being raised or perform special operations before invoking an event handler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.IMessageFilter&gt;</ph> 允许您停止来自引发的事件或在调用事件处理程序之前执行特殊操作。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>This class has <ph id="ph1">&lt;xref:System.Windows.Forms.Application.CurrentCulture%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Application.CurrentInputLanguage%2A&gt;</ph> properties to get or set culture information for the current thread.</source>
          <target state="translated">此类具有<ph id="ph1">&lt;xref:System.Windows.Forms.Application.CurrentCulture%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Application.CurrentInputLanguage%2A&gt;</ph>属性要获取或设置区域性当前线程的信息。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>You cannot create an instance of this class.</source>
          <target state="translated">无法创建此类的实例。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>The following code example lists numbers in a list box on a form.</source>
          <target state="translated">下面的代码示例列出窗体上一个列表框中的数字。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>Each time you click <ph id="ph1">`button1`</ph>, the application adds another number to the list.</source>
          <target state="translated">每次你单击<ph id="ph1">`button1`</ph>，应用程序列表中添加另一个数。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>The <ph id="ph1">`Main`</ph> method calls <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> to start the application, which creates the form, <ph id="ph3">`listBox1`</ph> and <ph id="ph4">`button1`</ph>.</source>
          <target state="translated"><ph id="ph1">`Main`</ph>方法调用<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph>启动该应用程序，这将创建窗体，<ph id="ph3">`listBox1`</ph>和<ph id="ph4">`button1`</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>When the user clicks <ph id="ph1">`button1`</ph>, the <ph id="ph2">`button1_Click`</ph> method displays a <ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">当用户单击<ph id="ph1">`button1`</ph>、<ph id="ph2">`button1_Click`</ph>方法显示<ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>If the user clicks <ph id="ph1">`No`</ph> on the <ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>, the <ph id="ph3">`button1_Click`</ph> method adds a number to the list.</source>
          <target state="translated">如果用户单击<ph id="ph1">`No`</ph>上<ph id="ph2">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>、<ph id="ph3">`button1_Click`</ph>方法向列表添加一个数字。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>If the user clicks <ph id="ph1">`Yes`</ph>, the application calls <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> to process all remaining messages in the queue and then to quit.</source>
          <target state="translated">如果用户单击<ph id="ph1">`Yes`</ph>，应用程序调用<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>来处理队列中的所有剩余消息，然后退出。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>The call to <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> will fail in partial trust.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>在部分信任环境中将失败。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>The implementation of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IMessageFilter" /&gt;</ph> interface you want to install.</source>
          <target state="translated">要安装的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IMessageFilter" /&gt;</ph> 接口的实现。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Adds a message filter to monitor Windows messages as they are routed to their destinations.</source>
          <target state="translated">添加消息筛选器以便在向目标传送 Windows 消息时监视这些消息。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Use a message filter to prevent specific events from being raised or to perform special operations for an event before it is passed to an event handler.</source>
          <target state="translated">若要防止引发特定事件或执行特殊操作事件传递到事件处理程序前，请使用消息筛选器。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Message filters are unique to a specific thread.</source>
          <target state="translated">消息筛选器是唯一的特定线程。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>To prevent a message from being dispatched, the <ph id="ph1">`value`</ph> parameter instance that you pass to this method must override the <ph id="ph2">&lt;xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A&gt;</ph> method with the code to handle the message.</source>
          <target state="translated">若要防止消息被调度，<ph id="ph1">`value`</ph>将传递给此方法的参数实例必须重写<ph id="ph2">&lt;xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A&gt;</ph>方法替换为代码来处理该消息。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>The method must return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">该方法必须返回 <ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Adding message filters to the message pump for an application can degrade performance.</source>
          <target state="translated">将消息筛选器添加到应用程序的消息泵会降低性能。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>The following code example creates a message filter called <ph id="ph1">`TestMessageFilter`</ph>.</source>
          <target state="translated">下面的代码示例创建消息筛选器调用<ph id="ph1">`TestMessageFilter`</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>This filter blocks all messages relating to the left mouse button.</source>
          <target state="translated">此筛选器会阻止与鼠标左键相关的所有消息。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Before you can use a message filter, you must provide an implementation for the <ph id="ph1">&lt;xref:System.Windows.Forms.IMessageFilter&gt;</ph> interface.</source>
          <target state="translated">你可以使用消息筛选器之前，必须提供的实现<ph id="ph1">&lt;xref:System.Windows.Forms.IMessageFilter&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">直接调用方调用非托管的代码。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.AllowQuit">
          <source>Gets a value indicating whether the caller can quit this application.</source>
          <target state="translated">获取指示调用方能否退出该应用程序的值。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.AllowQuit">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the caller can quit this application; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果调用方能够退出该应用程序，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.AllowQuit">
          <source>This property returns <ph id="ph1">`false`</ph> if it is called from a <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> being hosted within a Web browser.</source>
          <target state="translated">此属性返回<ph id="ph1">`false`</ph>如果从调用<ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph>在 Web 浏览器内承载。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.AllowQuit">
          <source>Thus, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> cannot quit the <ph id="ph2">&lt;xref:System.Windows.Forms.Application&gt;</ph>.</source>
          <target state="translated">因此，<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>无法退出<ph id="ph2">&lt;xref:System.Windows.Forms.Application&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>Occurs when the application is about to shut down.</source>
          <target state="translated">在应用程序即将关闭时发生。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>You must attach the event handlers to the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> event to perform unhandled, required tasks before the application stops running.</source>
          <target state="translated">必须将附加到的事件处理程序<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>事件以执行未经处理，所需任务的应用程序停止运行前。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>You can close files opened by this application, or dispose of objects that garbage collection did not reclaim.</source>
          <target state="translated">你可以关闭打开的此应用程序或释放的垃圾回收未回收的对象文件。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>Because this is a static event, you must detach any event handlers attached to this event in the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ApplicationExit&gt;</ph> event handler itself.</source>
          <target state="translated">由于这是一个静态事件，则必须分离附加到此事件中任何事件处理程序<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ApplicationExit&gt;</ph>本身的事件处理程序。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>If you do not detach these handlers, they will remain attached to the event and continue to consume memory.</source>
          <target state="translated">如果未分离这些处理程序，它们将保留附加在该事件，继续占用的内存。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>The following code example displays two forms and exits the application when both forms are closed.</source>
          <target state="translated">下面的代码示例显示两个窗体，并退出应用程序，这两个窗体关闭时。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>When the application starts and exits, the position of each form is remembered.</source>
          <target state="translated">当应用程序启动和退出时，将记住每个窗体的位置。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>This example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ApplicationExit&gt;</ph> event to know when the form positions should be persisted to the file, and when the <ph id="ph2">`FileStream`</ph> should be closed.</source>
          <target state="translated">此示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ApplicationExit&gt;</ph>事件，以了解在窗体位置应保存到文件，以及时<ph id="ph2">`FileStream`</ph>应关闭。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>The class <ph id="ph1">`MyApplicationContext`</ph> inherits from <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> and keeps track of when each form is closed, and exits the current thread when they both are.</source>
          <target state="translated">类<ph id="ph1">`MyApplicationContext`</ph>继承自<ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>和跟踪时每个窗体已关闭，并在它们都时退出当前线程。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>The class remembers the position of each form when it is closed.</source>
          <target state="translated">关闭时，该类会记住每个窗体的位置。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ApplicationExit&gt;</ph> event occurs, the class writes the positions of each for the user to the file.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ApplicationExit&gt;</ph>事件发生时，类将写入文件的每个用户的位置。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>The form position data is stored in a file titled <ph id="ph1">`appdata.txt`</ph> that is created in the location determined by <ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>.</source>
          <target state="translated">窗体位置数据存储在文件标题为<ph id="ph1">`appdata.txt`</ph>，它在由位置创建<ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>The <ph id="ph1">`Main`</ph> method calls <ph id="ph2">`Application.Run(context)`</ph> to start the application given the <ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Main`</ph>方法调用<ph id="ph2">`Application.Run(context)`</ph>启动应用程序提供<ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>This code is an excerpt from the example shown in the <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> class overview.</source>
          <target state="translated">此代码摘自中所示的示例<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>类概述。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ApplicationExit">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> for the whole code listing.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>为完整的代码清单。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source>Gets the path for the application data that is shared among all users.</source>
          <target state="translated">获取所有用户共享的应用程序数据的路径。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source>The path for the application data that is shared among all users.</source>
          <target state="translated">所有用户共享的应用程序数据的路径。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source>If a path does not exist, one is created in the following format:</source>
          <target state="translated">如果路径不存在，将创建一个采用以下格式：</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source><bpt id="p1">*</bpt>Base Path<ept id="p1">*</ept><ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></source>
          <target state="translated"><bpt id="p1">*</bpt>基路径<ept id="p1">*</ept><ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> first looks to see if the assembly containing the main executable has the <ph id="ph2">`AssemblyInformationalVersion`</ph> attribute on it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> 第一个如下所示，以查看是否有包含主可执行文件的程序集<ph id="ph2">`AssemblyInformationalVersion`</ph>在其上的属性。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source>If this attribute exists, it is used for both <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Application.CommonAppDataPath%2A&gt;</ph>.</source>
          <target state="translated">如果存在此属性，它同时用于<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Application.CommonAppDataPath%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source>If this attribute does not exist, both properties use the version of the executable file instead.</source>
          <target state="translated">如果此属性不存在，这两个属性使用的可执行文件的版本。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source>The path will be different depending on whether the Windows Forms application is deployed using <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.</source>
          <target state="translated">则路径将会不同，具体取决于是否使用部署 Windows 窗体应用程序<ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> applications are stored in a per-user application cache in the C:\Documents and Settings<ph id="ph2">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept> directory.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> 应用程序存储在每个用户应用程序缓存中 C:\Documents and Settings<ph id="ph2">\\</ph><bpt id="p1">*</bpt>用户名<ept id="p1">*</ept>目录。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataPath">
          <source>For more information, see <bpt id="p1">[</bpt>Accessing Local and Remote Data in ClickOnce Applications<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>访问本地数据和 ClickOnce 应用程序中的远程数据<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.CommonAppDataRegistry">
          <source>Gets the registry key for the application data that is shared among all users.</source>
          <target state="translated">获取所有用户共享的应用程序数据的注册表项。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataRegistry">
          <source>A <ph id="ph1">&lt;see cref="T:Microsoft.Win32.RegistryKey" /&gt;</ph> representing the registry key of the application data that is shared among all users.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:Microsoft.Win32.RegistryKey" /&gt;</ph>，它表示所有用户共享的应用程序数据的注册表项。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataRegistry">
          <source>If the key does not exist, it is created in the following format:</source>
          <target state="translated">如果不存在该键，则将它创建采用以下格式：</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CommonAppDataRegistry">
          <source>LocalMachine\Software<ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></source>
          <target state="translated">LocalMachine\Software<ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.CompanyName">
          <source>Gets the company name associated with the application.</source>
          <target state="translated">获取与该应用程序关联的公司名称。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CompanyName">
          <source>The company name.</source>
          <target state="translated">公司名称。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CompanyName">
          <source>The following code example gets this property and displays its value in a text box.</source>
          <target state="translated">下面的代码示例获取此属性，并在文本框中显示其值。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CompanyName">
          <source>The example requires that <ph id="ph1">`textBox1`</ph> has been placed on a form.</source>
          <target state="translated">该示例需要<ph id="ph1">`textBox1`</ph>已放在窗体上。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.CurrentCulture">
          <source>Gets or sets the culture information for the current thread.</source>
          <target state="translated">获取或设置当前线程的区域性信息。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentCulture">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> representing the culture information for the current thread.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>，它代表当前线程的区域性信息。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentCulture">
          <source>The following code example gets this property and displays its value in a text box.</source>
          <target state="translated">下面的代码示例获取此属性，并在文本框中显示其值。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentCulture">
          <source>The example requires that <ph id="ph1">`textBox1`</ph> has been placed on a form.</source>
          <target state="translated">该示例需要<ph id="ph1">`textBox1`</ph>已放在窗体上。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentCulture">
          <source>for all windows to set this property.</source>
          <target state="translated">若要将此属性设置的所有窗口。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentCulture">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.CurrentInputLanguage">
          <source>Gets or sets the current input language for the current thread.</source>
          <target state="translated">获取或设置当前线程的当前输入语言。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentInputLanguage">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InputLanguage" /&gt;</ph> representing the current input language for the current thread.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InputLanguage" /&gt;</ph>，它代表当前线程的当前输入语言。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentInputLanguage">
          <source>The following code example gets this property and displays its value in a text box.</source>
          <target state="translated">下面的代码示例获取此属性，并在文本框中显示其值。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentInputLanguage">
          <source>The example requires that <ph id="ph1">`textBox1`</ph> has been placed on a form.</source>
          <target state="translated">该示例需要<ph id="ph1">`textBox1`</ph>已放在窗体上。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentInputLanguage">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">直接调用方调用非托管的代码。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.CurrentInputLanguage">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>Processes all Windows messages currently in the message queue.</source>
          <target state="translated">处理当前在消息队列中的所有 Windows 消息。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>When you run a Windows Form, it creates the new form, which then waits for events to handle.</source>
          <target state="translated">运行 Windows 窗体时，它会创建新的表单，然后等待事件处理。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>Each time the form handles an event, it processes all the code associated with that event.</source>
          <target state="translated">在每次窗体处理事件，它将处理所有与该事件关联的代码。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>All other events wait in the queue.</source>
          <target state="translated">在队列中等待所有其他事件。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>While your code handles the event, your application does not respond.</source>
          <target state="translated">而你的代码来处理该事件，你的应用程序未响应。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>For example, the window does not repaint if another window is dragged on top.</source>
          <target state="translated">例如，如果另一个窗口拖到顶部，也无法重新绘制窗口。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>If you call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> in your code, your application can handle the other events.</source>
          <target state="translated">如果调用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph>在代码中，你的应用程序可以处理其他事件。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>For example, if you have a form that adds data to a <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> and add <ph id="ph2">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> to your code, your form repaints when another window is dragged over it.</source>
          <target state="translated">例如，如果你拥有将数据添加到窗体<ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>并添加<ph id="ph2">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph>到代码中，你的窗体可重新绘制在另一个窗口拖到它。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>If you remove <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> from your code, your form will not repaint until the click event handler of the button is finished executing.</source>
          <target state="translated">如果你删除<ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph>从代码中，你的窗体不会重新绘制按钮的 click 事件处理程序完成之前执行。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>For more information on messaging, see <bpt id="p1">[</bpt>User Input in Windows Forms<ept id="p1">](~/docs/framework/winforms/user-input-in-windows-forms.md)</ept>.</source>
          <target state="translated">有关消息传送的详细信息，请参阅<bpt id="p1">[</bpt>Windows 窗体中的用户输入<ept id="p1">](~/docs/framework/winforms/user-input-in-windows-forms.md)</ept>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>Unlike Visual Basic 6.0, the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> method does not call the <ph id="ph2">&lt;xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">与 Visual Basic 6.0 中，不同<ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph>未调用<ph id="ph2">&lt;xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>Typically, you use this method in a loop to process messages.</source>
          <target state="translated">通常情况下，在处理消息循环中使用此方法。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>Calling this method causes the current thread to be suspended while all waiting window messages are processed.</source>
          <target state="translated">调用此方法会导致在处理所有等待窗口消息时要挂起当前线程。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>If a message causes an event to be triggered, then other areas of your application code may execute.</source>
          <target state="translated">如果消息导致要触发的事件，可能执行应用程序代码的其他方面。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>This can cause your application to exhibit unexpected behaviors that are difficult to debug.</source>
          <target state="translated">这会导致你的应用程序来展示难以调试的意外的行为。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>If you perform operations or computations that take a long time, it is often preferable to perform those operations on a new thread.</source>
          <target state="translated">通常，如果你执行的操作或需要较长时间的计算，则更可取的方法执行新线程上的那些操作。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>For more information about asynchronous programming, see <bpt id="p1">[</bpt>Asynchronous Programming Model (APM)<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)</ept>.</source>
          <target state="translated">有关异步编程的详细信息，请参阅<bpt id="p1">[</bpt>异步编程模型 (APM)<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md)</ept>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> method.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>When the example runs, a user can select graphics files from an <ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>.</source>
          <target state="translated">该示例运行时，用户可选择从图形文件<ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>The selected files are displayed in the form.</source>
          <target state="translated">所选的文件将显示在窗体中。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph> method forces a repaint of the form for each graphics file opened.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A&gt;</ph>方法会强行重绘的每个图形文件在打开的窗体。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>To run this example, paste the following code in a form containing a <ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> named <ph id="ph2">`PictureBox1`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> named <ph id="ph4">`OpenFileDialog1`</ph>, and a button named <ph id="ph5">`fileButton`</ph>.</source>
          <target state="translated">若要运行此示例中，粘贴以下代码中一个窗体包含<ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph>名为<ph id="ph2">`PictureBox1`</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>名为<ph id="ph4">`OpenFileDialog1`</ph>，和一个名为的按钮<ph id="ph5">`fileButton`</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>Call the <ph id="ph1">`InitializePictureBox`</ph> and <ph id="ph2">`InitializeOpenFileDialog`</ph> methods from the form's constructor or <ph id="ph3">`Load`</ph> method.</source>
          <target state="translated">调用<ph id="ph1">`InitializePictureBox`</ph>和<ph id="ph2">`InitializeOpenFileDialog`</ph>从窗体的构造函数的方法或<ph id="ph3">`Load`</ph>方法。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>In <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>, if you add an <ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> to your form by using a drag operation, you will have to modify the following <ph id="ph3">`InitializeOpenFileDialog`</ph> method by removing the line that creates a new instance of <ph id="ph4">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>，如果你添加<ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>到窗体中通过拖动操作，则将需要修改以下<ph id="ph3">`InitializeOpenFileDialog`</ph>通过删除创建的新实例的行的方法<ph id="ph4">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>The example also requires that the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> control and the <ph id="ph3">&lt;xref:System.Windows.Forms.FileDialog.FileOk&gt;</ph> event of the <ph id="ph4">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> are connected to the event handlers defined in the example.</source>
          <target state="translated">该示例还要求<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType&gt;</ph>事件<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>控件和<ph id="ph3">&lt;xref:System.Windows.Forms.FileDialog.FileOk&gt;</ph>事件<ph id="ph4">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>连接到示例中定义的事件处理程序。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.DoEvents">
          <source>When the example is running, display the dialog box by clicking the button.</source>
          <target state="translated">当运行示例时，显示对话框中单击的按钮。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>Enables visual styles for the application.</source>
          <target state="translated">启用应用程序的可视样式。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>This method enables visual styles for the application.</source>
          <target state="translated">此方法使应用程序的可视样式。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>Visual styles are the colors, fonts, and other visual elements that form an operating system theme.</source>
          <target state="translated">了可视样式的颜色、 字体和窗体操作系统主题其他可视元素。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>Controls will draw with visual styles if the control and the operating system support it.</source>
          <target state="translated">如果控件和操作系统支持，将以视觉样式绘制控件。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>To have an effect, <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph> must be called before creating any controls in the application; typically, <ph id="ph2">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph> is the first line in the <ph id="ph3">`Main`</ph> function.</source>
          <target state="translated">产生任何影响，<ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph>必须在创建应用程序; 中的任何控件之前调用通常情况下，<ph id="ph2">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph>是中的第一个行<ph id="ph3">`Main`</ph>函数。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>A separate manifest is not required to enable visual styles when calling <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph>.</source>
          <target state="translated">启用视觉样式，在调用时不需要单独清单<ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>Prior to the .NET Framework 2.0, the <ph id="ph1">`FlatStyle`</ph> property of some controls, such as controls that derive from <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase&gt;</ph>, had to be set to <ph id="ph3">&lt;xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType&gt;</ph> in order for the controls to be drawn with visual styles.</source>
          <target state="translated">在.NET Framework 2.0 中之前,<ph id="ph1">`FlatStyle`</ph>的某些控件，例如派生的控件的属性<ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase&gt;</ph>，必须设置为<ph id="ph3">&lt;xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType&gt;</ph>顺序以视觉样式绘制的控件。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>In applications written with the .NET Framework 2.0, this is no longer necessary.</source>
          <target state="translated">在使用.NET Framework 2.0 编写的应用程序，这是不再有必要。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>This method will have no effect for controls hosted in Internet Explorer.</source>
          <target state="translated">此方法不起作用的 Internet Explorer 中承载的控件。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.EnableVisualStyles">
          <source>The following code example demonstrates calling <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A&gt;</ph> in the <ph id="ph2">`Main`</ph> function to enable visual styles for the application.</source>
          <target state="translated">下面的代码示例演示如何调用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A&gt;</ph>中<ph id="ph2">`Main`</ph>函数，以使应用程序的可视样式。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>Occurs when the application is about to enter a modal state.</source>
          <target state="translated">当应用程序即将进入模式状态时发生。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
          <target state="translated">由于这是一个静态事件，则必须在你的应用程序将被释放，或会导致内存泄漏时分离事件处理程序。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnterThreadModal&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnterThreadModal&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>To run the example code, paste it into a Windows Forms and ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnterThreadModal&gt;</ph> event.</source>
          <target state="translated">要运行此代码示例，将其粘贴到 Windows 窗体，并确保与事件处理程序<ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnterThreadModal&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.EnterThreadModal">
          <source>Requires <ph id="ph1">&lt;see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /&gt;</ph> permission to listen to the event.</source>
          <target state="translated">需要<ph id="ph1">&lt;see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /&gt;</ph>侦听事件的权限。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.ExecutablePath">
          <source>Gets the path for the executable file that started the application, including the executable name.</source>
          <target state="translated">获取启动了应用程序的可执行文件的路径，包括可执行文件的名称。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ExecutablePath">
          <source>The path and executable name for the executable file that started the application.</source>
          <target state="translated">启动了应用程序的可执行文件的路径和可执行文件的名称。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ExecutablePath">
          <source>This path will be different depending on whether the Windows Forms application is deployed using <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.</source>
          <target state="translated">取决于是否使用 <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> 部署 Windows 窗体应用程序，此路径将会不同。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ExecutablePath">
          <source><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> applications are stored in a per-user application cache in the C:\Documents and Settings<ph id="ph2">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept> directory.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> 应用程序存储在每个用户应用程序缓存中 C:\Documents and Settings<ph id="ph2">\\</ph><bpt id="p1">*</bpt>用户名<ept id="p1">*</ept>目录。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ExecutablePath">
          <source>For more information, see <bpt id="p1">[</bpt>Accessing Local and Remote Data in ClickOnce Applications<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>访问本地数据和 ClickOnce 应用程序中的远程数据<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ExecutablePath">
          <source>for getting the path.</source>
          <target state="translated">用于获取路径。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ExecutablePath">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Application">
          <source>Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.</source>
          <target state="translated">通知所有消息泵必须终止，并且在处理了消息以后关闭所有应用程序窗口。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Exit">
          <source>Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.</source>
          <target state="translated">通知所有消息泵必须终止，并且在处理了消息以后关闭所有应用程序窗口。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method stops all running message loops on all threads and closes all windows of the application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>方法所有线程上停止所有正在运行消息循环，并关闭应用程序的所有窗口。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>This method does not necessarily force the application to exit.</source>
          <target state="translated">此方法不一定强制退出该应用程序。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method is typically called from within a message loop, and forces <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> to return.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>方法通常从调用中使用消息循环，并强制<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph>返回。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>To exit a message loop for the current thread only, call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph>.</source>
          <target state="translated">若要退出当前线程的消息循环，请调用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> raises the following events and performs the associated conditional actions:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> 可引发以下事件并执行关联的条件操作：</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event is raised for every form represented by the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.OpenForms%2A&gt;</ph> property.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph>为表示由每个窗体中引发事件<ph id="ph2">&lt;xref:System.Windows.Forms.Application.OpenForms%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>This event can be canceled by setting the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of their <ph id="ph2">&lt;xref:System.Windows.Forms.FormClosingEventArgs&gt;</ph> parameter to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">此事件可取消通过设置<ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>属性其<ph id="ph2">&lt;xref:System.Windows.Forms.FormClosingEventArgs&gt;</ph>参数<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>If one of more of the handlers cancels the event, then <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> returns without further action.</source>
          <target state="translated">如果一个或多个处理程序将取消该事件，然后<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>返回而无需进一步操作。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>Otherwise, a <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event is raised for every open form, then all running message loops and forms are closed.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph>对于每个打开的窗体，将引发事件，然后关闭所有正在运行的消息循环和窗体。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method does not raise the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> events, which are obsolete as of <ph id="ph4">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>方法不会引发<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>起已过时的事件<ph id="ph4">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>The following code example lists numbers in a list box on a form.</source>
          <target state="translated">下面的代码示例列出窗体上一个列表框中的数字。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>Each time you click <ph id="ph1">`button1`</ph>, the application adds another number to the list.</source>
          <target state="translated">每次你单击<ph id="ph1">`button1`</ph>，应用程序列表中添加另一个数。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>The <ph id="ph1">`Main`</ph> method calls <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> to start the application, which creates the form, <ph id="ph3">`listBox1`</ph>, and <ph id="ph4">`button1`</ph>.</source>
          <target state="translated"><ph id="ph1">`Main`</ph>方法调用<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph>启动该应用程序，这将创建窗体， <ph id="ph3">`listBox1`</ph>，和<ph id="ph4">`button1`</ph>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>When the user clicks <ph id="ph1">`button1`</ph>, the <ph id="ph2">`button1_Click`</ph> method adds numbers one to three to the list box, and displays a <ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">当用户单击<ph id="ph1">`button1`</ph>、<ph id="ph2">`button1_Click`</ph>方法添加到列表框中，一到三个数字并显示<ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>If the user clicks <bpt id="p1">**</bpt>No<ept id="p1">**</ept> on the <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>, the <ph id="ph2">`button1_Click`</ph> method adds another number to the list.</source>
          <target state="translated">如果用户单击<bpt id="p1">**</bpt>否<ept id="p1">**</ept>上<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>、<ph id="ph2">`button1_Click`</ph>方法向列表添加另一个数。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>If the user clicks <bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>, the application calls <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>, to process all remaining messages in the queue and then to quit.</source>
          <target state="translated">如果用户单击<bpt id="p1">**</bpt>是<ept id="p1">**</ept>，应用程序调用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>，来处理队列中的所有剩余消息，然后退出。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>The example requires that <ph id="ph1">`listBox1`</ph> and <ph id="ph2">`button1`</ph> have been instantiated and placed on a form.</source>
          <target state="translated">该示例需要<ph id="ph1">`listBox1`</ph>和<ph id="ph2">`button1`</ph>已实例化并已放置在窗体上。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">直接调用方调用非托管的代码。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Exit(System.ComponentModel.CancelEventArgs)">
          <source>Returns whether any <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> within the application cancelled the exit.</source>
          <target state="translated">返回应用程序中的任何 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> 是否已取消退出。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Exit(System.ComponentModel.CancelEventArgs)">
          <source>Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.</source>
          <target state="translated">通知所有消息泵必须终止，并且在处理了消息以后关闭所有应用程序窗口。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit(System.ComponentModel.CancelEventArgs)">
          <source>For permission to terminate a running application thread.</source>
          <target state="translated">提供许可以终止正在运行的应用程序线程。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Exit(System.ComponentModel.CancelEventArgs)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.ExitThread">
          <source>Exits the message loop on the current thread and closes all windows on the thread.</source>
          <target state="translated">退出当前线程上的消息循环，并关闭该线程上的所有窗口。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.ExitThread">
          <source>Use this method to exit the message loop of the current thread.</source>
          <target state="translated">使用此方法退出当前线程的消息循环。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.ExitThread">
          <source>This method causes the call to <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> for the current thread to return.</source>
          <target state="translated">此方法会导致调用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph>当前线程在可以返回。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.ExitThread">
          <source>To exit the entire application, call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>.</source>
          <target state="translated">若要退出整个应用程序，请调用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.ExitThread">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">直接调用方调用非托管的代码。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.ExitThread">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.FilterMessage(System.Windows.Forms.Message@)">
          <source>The Windows event message to filter.</source>
          <target state="translated">要筛选的 Windows 事件消息。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.FilterMessage(System.Windows.Forms.Message@)">
          <source>Runs any filters against a window message, and returns a copy of the modified message.</source>
          <target state="translated">对窗口消息运行任何筛选器，并返回修改后的消息的副本。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.FilterMessage(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if the filters were processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已处理筛选，则为 <ph id="ph1">&lt;see langword="True" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Application.Idle">
          <source>Occurs when the application finishes processing and is about to enter the idle state.</source>
          <target state="translated">当应用程序完成处理并即将进入空闲状态时发生。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.Idle">
          <source>If you have tasks that you must perform before the thread becomes idle, attach them to this event.</source>
          <target state="translated">如果你有必须执行的任务的线程进入空闲状态之前，将它们附加到此事件。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.Idle">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
          <target state="translated">由于这是一个静态事件，则必须在你的应用程序将被释放，或会导致内存泄漏时分离事件处理程序。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.Idle">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.Idle">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Idle&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Idle&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.Idle">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.Idle">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.Idle">
          <source>To run the example code, paste it into a Windows Form and make sure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Idle&gt;</ph> event.</source>
          <target state="translated">若要运行此代码示例，将其粘贴到 Windows 窗体，并确保该事件处理程序与关联<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Idle&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Application.LeaveThreadModal">
          <source>Occurs when the application is about to leave a modal state.</source>
          <target state="translated">当应用程序即将退出模式状态时发生。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.LeaveThreadModal">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
          <target state="translated">由于这是一个静态事件，则必须在你的应用程序将被释放，或会导致内存泄漏时分离事件处理程序。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.LeaveThreadModal">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.LeaveThreadModal">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.LeaveThreadModal&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Application.LeaveThreadModal&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.LeaveThreadModal">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.LeaveThreadModal">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.LeaveThreadModal">
          <source>To run the example code, paste it into a Windows Forms and ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.LeaveThreadModal&gt;</ph> event.</source>
          <target state="translated">要运行此代码示例，将其粘贴到 Windows 窗体，并确保与事件处理程序<ph id="ph1">&lt;xref:System.Windows.Forms.Application.LeaveThreadModal&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>Gets the path for the application data of a local, non-roaming user.</source>
          <target state="translated">获取本地、非漫游用户的应用程序数据的路径。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>The path for the application data of a local, non-roaming user.</source>
          <target state="translated">本地、非漫游用户的应用程序数据的路径。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>A local user is one whose user profile is stored on the system on which the user logged on.</source>
          <target state="translated">本地用户是指其用户配置文件存储在用户登录的系统上。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>If a path does not exist, one is created in the following format:</source>
          <target state="translated">如果路径不存在，将创建一个采用以下格式：</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source><bpt id="p1">*</bpt>Base Path<ept id="p1">*</ept><ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></source>
          <target state="translated"><bpt id="p1">*</bpt>基路径<ept id="p1">*</ept><ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>A typical base path is C:\Documents and Settings<ph id="ph1">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept>\Local Settings\Application Data.</source>
          <target state="translated">典型的基路径是 C:\Documents and Settings<ph id="ph1">\\</ph><bpt id="p1">*</bpt>用户名<ept id="p1">*</ept>settings\application Data。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>This path will be different, however, if the Windows Forms application is deployed by using <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.</source>
          <target state="translated">此路径将会不同，但是，如果通过使用部署 Windows 窗体应用程序<ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> creates its own application data directory that is isolated from all other applications.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> 创建其自己独立于所有其他应用程序的应用程序数据目录。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>For more information, see <bpt id="p1">[</bpt>Accessing Local and Remote Data in ClickOnce Applications<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>访问本地数据和 ClickOnce 应用程序中的远程数据<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>The following code example displays two forms and exits the application when both forms are closed.</source>
          <target state="translated">下面的代码示例显示两个窗体，并退出应用程序，这两个窗体关闭时。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>When the application starts and exits, the position of each form is remembered.</source>
          <target state="translated">当应用程序启动和退出时，将记住每个窗体的位置。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>Although this example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph> property to store application data for the user, the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A&gt;</ph> can be used instead.</source>
          <target state="translated">虽然此示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>属性来存储应用程序数据的用户，<ph id="ph2">&lt;xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A&gt;</ph>可以改为使用。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>The <ph id="ph1">`MyApplicationContext`</ph> class inherits from <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> and keeps track when each form is closed, and exits the current thread when they both are.</source>
          <target state="translated"><ph id="ph1">`MyApplicationContext`</ph>类继承自<ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>每个窗体已关闭，并在它们都时退出当前线程时保持跟踪。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>The class stores the positions of each form for the user.</source>
          <target state="translated">该类存储了用户的每个窗体的位置。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>The form position data is stored in a file titled <ph id="ph1">`Appdata.txt`</ph> that is created in the location determined by <ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>.</source>
          <target state="translated">窗体位置数据存储在文件标题为<ph id="ph1">`Appdata.txt`</ph>，它在由位置创建<ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>The <ph id="ph1">`Main`</ph> method calls <ph id="ph2">`Application.Run(context)`</ph> to start the application given the <ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Main`</ph>方法调用<ph id="ph2">`Application.Run(context)`</ph>启动应用程序提供<ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>This code is an excerpt from the example shown in the <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> class overview.</source>
          <target state="translated">此代码摘自中所示的示例<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>类概述。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>Some code is not shown for the purpose of brevity.</source>
          <target state="translated">为了简洁起见，不显示某些代码。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.LocalUserAppDataPath">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> for the whole code listing.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>为完整的代码清单。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.MessageLoop">
          <source>Gets a value indicating whether a message loop exists on this thread.</source>
          <target state="translated">获取指示该线程上是否存在消息循环的值。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.MessageLoop">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a message loop exists; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果存在消息循环，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.MessageLoop">
          <source>When hosting Windows Forms in other environments, such as unmanaged applications, this property will always return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">此属性在其他环境，如非托管应用程序中承载 Windows 窗体时将始终返回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.MessageLoop">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.Application.RegisterMessageLoop%2A&gt;</ph> to instruct Windows Forms if the hosting environment still has an active message loop.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.RegisterMessageLoop%2A&gt;</ph>以指示 Windows 窗体的宿主环境如果仍有活动的消息循环。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.OleRequired">
          <source>Initializes OLE on the current thread.</source>
          <target state="translated">初始化当前线程上的 OLE。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.OleRequired">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Threading.ApartmentState" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.ApartmentState" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OleRequired">
          <source>Call this method before calling any <ph id="ph1">`Microsoft.Win32`</ph> method that requires OLE.</source>
          <target state="translated">在调用任何之前调用此方法<ph id="ph1">`Microsoft.Win32`</ph>需要 OLE 的方法。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OleRequired">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.OleRequired%2A&gt;</ph> first checks to see if OLE has been initialized on the current thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.OleRequired%2A&gt;</ph> 首先检查是否已在当前线程上初始化 OLE。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OleRequired">
          <source>If not, it initializes the thread for OLE.</source>
          <target state="translated">如果没有，则初始化线程的 OLE。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OleRequired">
          <source>Unless a thread calls OLE methods directly, you do not need to call this method.</source>
          <target state="translated">除非线程直接调用 OLE 方法，你不需要调用此方法。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that represents the exception that was thrown.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>，它代表所引发的异常。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Application.ThreadException" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Application.ThreadException" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph> to raise an exception that will halt processing of the application.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph>以引发异常，处理的应用程序，则将暂停。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application&gt;</ph> class has a <ph id="ph2">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application&gt;</ph>类具有<ph id="ph2">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source>You can attach an event handler to this event to do whatever custom processing you need for unhandled exceptions.</source>
          <target state="translated">可以将事件处理程序附加到此事件来执行的未处理异常所需的任何自定义处理。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source>If you do not attach an event handler, <ph id="ph1">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph> will execute the default behavior, which involves displaying a dialog box to inform the user that there has been an error.</source>
          <target state="translated">如果你不会附加一个事件处理程序即<ph id="ph1">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph>将执行默认行为，其中包括显示一个对话框，通知用户已被错误。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph> only implements default exception behavior for unhandled exceptions that occur on threads owned by Windows Forms.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.OnThreadException%2A&gt;</ph> 仅在线程拥有的 Windows 窗体上实现默认的发生的未经处理异常的异常行为。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
          <source>Unhandled exceptions on other threads are handled by the <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event.</source>
          <target state="translated">由其他线程上未经处理的异常处理<ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.OpenForms">
          <source>Gets a collection of open forms owned by the application.</source>
          <target state="translated">获取为应用程序所有的已打开窗体的集合。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.OpenForms">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormCollection" /&gt;</ph> containing all the currently open forms owned by this application.</source>
          <target state="translated">包含属于此应用程序的所有当前打开窗体的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.OpenForms">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application.OpenForms%2A&gt;</ph> property represents a read-only collection of forms owned by the application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.OpenForms%2A&gt;</ph>属性表示拥有的应用程序的窗体的只读集合。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.OpenForms">
          <source>This collection can be searched by index position or by the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">可以搜索此集合，按索引位置或通过<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.OpenForms">
          <source>Caller must have permission to access all windows, as defined by the <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph> value of the <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph> enumeration.</source>
          <target state="translated">按照定义，调用方必须有权访问所有窗口，<ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>值<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionWindow" /&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.ProductName">
          <source>Gets the product name associated with this application.</source>
          <target state="translated">获取与该应用程序关联的产品名称。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductName">
          <source>The product name.</source>
          <target state="translated">产品名称。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductName">
          <source><ph id="ph1">`ProductName`</ph> is taken from the metadata of the assembly containing the main form of the current application.</source>
          <target state="translated"><ph id="ph1">`ProductName`</ph> 将取自于包含当前应用程序的主窗体的程序集的元数据。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductName">
          <source>You can set it by setting <ph id="ph1">&lt;xref:System.Reflection.AssemblyProductAttribute&gt;</ph> inside of your assembly manifest.</source>
          <target state="translated">你可以将其设置通过设置<ph id="ph1">&lt;xref:System.Reflection.AssemblyProductAttribute&gt;</ph>内程序集清单。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductName">
          <source>For more information, see <bpt id="p1">[</bpt>Assembly Manifest<ept id="p1">](~/docs/framework/app-domains/assembly-manifest.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>程序集清单<ept id="p1">](~/docs/framework/app-domains/assembly-manifest.md)</ept>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductName">
          <source>The following code example gets this property and displays its value in a text box.</source>
          <target state="translated">下面的代码示例获取此属性，并在文本框中显示其值。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductName">
          <source>The example requires that <ph id="ph1">`textBox1`</ph> has been placed on a form.</source>
          <target state="translated">该示例需要<ph id="ph1">`textBox1`</ph>已放在窗体上。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>Gets the product version associated with this application.</source>
          <target state="translated">获取与该应用程序关联的产品版本。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>The product version.</source>
          <target state="translated">产品版本。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>Typically, a version number displays as <bpt id="p1">*</bpt>major number<ept id="p1">*</ept>.<bpt id="p2">*</bpt>minor number<ept id="p2">*</ept>.<bpt id="p3">*</bpt>build number<ept id="p3">*</ept>.<bpt id="p4">*</bpt>private part number<ept id="p4">*</ept>.</source>
          <target state="translated">通常情况下，版本号将显示为<bpt id="p1">*</bpt>主要数<ept id="p1">*</ept>。<bpt id="p2">*</bpt>版本号<ept id="p2">*</ept>。<bpt id="p3">*</bpt>内部版本号<ept id="p3">*</ept>。<bpt id="p4">*</bpt>专用部件号<ept id="p4">*</ept>。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>You can set it explicitly by setting the assembly version within your assembly manifest.</source>
          <target state="translated">通过设置你的程序集清单中的程序集版本可以显式将其设置。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>For more information, see <bpt id="p1">[</bpt>Assembly Manifest<ept id="p1">](~/docs/framework/app-domains/assembly-manifest.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>程序集清单<ept id="p1">](~/docs/framework/app-domains/assembly-manifest.md)</ept>。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> first looks to see if the assembly containing the main executable has the <ph id="ph2">`AssemblyInformationalVersion`</ph> attribute on it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> 第一个如下所示，以查看是否有包含主可执行文件的程序集<ph id="ph2">`AssemblyInformationalVersion`</ph>在其上的属性。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>If this attribute exists, it is used for both <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Application.CommonAppDataPath%2A&gt;</ph>.</source>
          <target state="translated">如果存在此属性，它同时用于<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Application.CommonAppDataPath%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>If this attribute does not exist, both properties use the version of the executable file instead.</source>
          <target state="translated">如果此属性不存在，这两个属性使用的可执行文件的版本。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>The following code example gets this property and displays its value in a text box.</source>
          <target state="translated">下面的代码示例获取此属性，并在文本框中显示其值。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.ProductVersion">
          <source>The example requires that <ph id="ph1">`textBox1`</ph> has been placed on a form.</source>
          <target state="translated">该示例需要<ph id="ph1">`textBox1`</ph>已放在窗体上。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.RaiseIdle(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> objects to pass to the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Application.Idle" /&gt;</ph> event.</source>
          <target state="translated">要传递给 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> 事件的 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Application.Idle" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.RaiseIdle(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Application.Idle" /&gt;</ph> event in hosted scenarios.</source>
          <target state="translated">在宿主方案中引发 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Application.Idle" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RaiseIdle(System.EventArgs)">
          <source>This method is used when hosting Windows Forms in another environment, such as an unmanaged application.</source>
          <target state="translated">在另一个环境，如非托管应用程序中承载 Windows 窗体时使用此方法。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RaiseIdle(System.EventArgs)">
          <source>You should call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.RaiseIdle%2A&gt;</ph> when the hosting application enters an idle state.</source>
          <target state="translated">应调用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.RaiseIdle%2A&gt;</ph>在宿主应用程序进入空闲状态。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RaiseIdle(System.EventArgs)">
          <source>This enables some Windows Forms controls and components to do important background work while the user is not interacting with the application.</source>
          <target state="translated">这样，某些 Windows 窗体控件和组件进行重要后台工作时用户未与应用程序交互。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)">
          <source>The method to call when Windows Forms needs to check if the hosting environment is still sending messages.</source>
          <target state="translated">当 Windows 窗体需要检查宿主环境是否仍在发送消息时，所要调用的方法。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)">
          <source>Registers a callback for checking whether the message loop is running in hosted environments.</source>
          <target state="translated">注册一个回调以检查消息循环是否正在宿主环境中运行。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)">
          <source>This method is used when hosting Windows Forms in another environment, such as an unmanaged application.</source>
          <target state="translated">在另一个环境，如非托管应用程序中承载 Windows 窗体时使用此方法。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)">
          <source>In hosted environments, the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.MessageLoop%2A&gt;</ph> property will always return false if Windows Forms is not processing messages.</source>
          <target state="translated">在托管环境中，<ph id="ph1">&lt;xref:System.Windows.Forms.Application.MessageLoop%2A&gt;</ph>属性将始终返回 false，如果 Windows 窗体不处理消息。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)">
          <source>Use this callback to tell Windows Forms if the hosting environment is still processing messages.</source>
          <target state="translated">使用此回调来告诉 Windows 窗体的宿主环境仍在处理消息。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>The implementation of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IMessageFilter" /&gt;</ph> to remove from the application.</source>
          <target state="translated">要从应用程序移除的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IMessageFilter" /&gt;</ph> 的实现。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Removes a message filter from the message pump of the application.</source>
          <target state="translated">从应用程序的消息泵移除一个消息筛选器。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>You can remove a message filter when you no longer want to capture Windows messages before they are dispatched.</source>
          <target state="translated">当你不再想要捕获 Windows 消息之前被发送时，你可以删除消息筛选器。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>Before you can use a message filter, you must provide an implementation for the <ph id="ph1">&lt;xref:System.Windows.Forms.IMessageFilter&gt;</ph> interface.</source>
          <target state="translated">你可以使用消息筛选器之前，必须提供的实现<ph id="ph1">&lt;xref:System.Windows.Forms.IMessageFilter&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>The following class creates a message filter called <ph id="ph1">`TestMessageFilter`</ph>.</source>
          <target state="translated">下面的类创建消息筛选器调用<ph id="ph1">`TestMessageFilter`</ph>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)">
          <source>This filter blocks all messages relating to the left mouse button.</source>
          <target state="translated">此筛选器会阻止与鼠标左键相关的所有消息。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>Gets a value specifying whether the current application is drawing controls with visual styles.</source>
          <target state="translated">获取指定当前应用程序是否使用可视样式绘制控件的值。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if visual styles are enabled for controls in the client area of application windows; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果在应用程序窗口的工作区为控件启用了可视样式，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>If you are drawing a custom control, use this property to decide whether to draw the control with or without visual styles, so that its appearance is consistent with other controls in the application.</source>
          <target state="translated">如果您正在绘制的自定义控件，则使用此属性来确定是否要绘制控件带或不带可视样式，以使其外观与应用程序中其他控件一致。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>The following table shows the four conditions that must exist for <ph id="ph1">&lt;xref:System.Windows.Forms.Application.RenderWithVisualStyles%2A&gt;</ph> to return <ph id="ph2">`true`</ph>.</source>
          <target state="translated">下表显示的四个条件必须存在的<ph id="ph1">&lt;xref:System.Windows.Forms.Application.RenderWithVisualStyles%2A&gt;</ph>返回<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>Condition</source>
          <target state="translated">条件</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>The operating system supports visual styles</source>
          <target state="translated">操作系统支持视觉样式</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>To verify this condition separately, use the <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsSupportedByOS%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation&gt;</ph> class.</source>
          <target state="translated">若要单独验证这种情况，请使用 <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsSupportedByOS%2A&gt;</ph> 类的 <ph id="ph2">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>The user has enabled visual styles in the operating system</source>
          <target state="translated">用户已启用在操作系统中的视觉样式</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>To verify this condition separately, use the <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsEnabledByUser%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation&gt;</ph> class.</source>
          <target state="translated">若要单独验证这种情况，请使用 <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsEnabledByUser%2A&gt;</ph> 类的 <ph id="ph2">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleInformation&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>Visual styles are enabled in the application</source>
          <target state="translated">应用程序中启用了可视样式</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>Visual styles can be enabled in an application by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph> method or by using an application manifest that specifies that ComCtl32.dll version 6 or later will be used to draw controls.</source>
          <target state="translated">可以通过调用 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles&gt;</ph> 方法或使用指定用 ComCtl32.dll 版本 6 或更高版本绘制控件的应用程序清单来启用应用程序中的视觉样式。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>Visual styles are being used to draw the client area of application windows</source>
          <target state="translated">正在使用可视样式绘制应用程序窗口的工作区</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.RenderWithVisualStyles">
          <source>To verify this condition separately, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.VisualStyleState%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.Application&gt;</ph> class and verify that it has the value <ph id="ph3">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAreaEnabled?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAndNonClientAreasEnabled?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">若要单独验证这种情况，请使用 <ph id="ph2">&lt;xref:System.Windows.Forms.Application&gt;</ph> 类的 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.VisualStyleState%2A&gt;</ph> 属性，验证它是否具有 <ph id="ph3">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAreaEnabled?displayProperty=nameWithType&gt;</ph> 或 <ph id="ph4">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAndNonClientAreasEnabled?displayProperty=nameWithType&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Restart">
          <source>Shuts down the application and starts a new instance immediately.</source>
          <target state="translated">关闭应用程序并立即启动一个新实例。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Restart">
          <source>The most common reason for calling <ph id="ph1">`Restart`</ph> is to start a new version of the application that you have downloaded through <ph id="ph2">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> using the <ph id="ph3">`Update`</ph> or <ph id="ph4">`UpdateAsync`</ph> method.</source>
          <target state="translated">调用的最常见原因<ph id="ph1">`Restart`</ph>是启动新版本的应用程序已通过下载<ph id="ph2">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>使用<ph id="ph3">`Update`</ph>或<ph id="ph4">`UpdateAsync`</ph>方法。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Restart">
          <source>Applications are restarted in the context in which they were initially run.</source>
          <target state="translated">应用程序将重新启动它们首次运行所在的上下文中。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Restart">
          <source>If your application was started using a URL pointing directly to the application's main executable file, it will be restarted using the same URL.</source>
          <target state="translated">如果你的应用程序已开始使用直接指向应用程序的主可执行文件的 URL，它将重新启动使用相同的 URL。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Restart">
          <source>If your application is a <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> application, it will be restarted using <ph id="ph2">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.</source>
          <target state="translated">如果你的应用程序<ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>应用程序中，它将重新启动使用<ph id="ph2">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Restart">
          <source>If your application was originally supplied command-line options when it first executed, <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Restart%2A&gt;</ph> will launch the application again with the same options.</source>
          <target state="translated">如果你的应用程序时它第一次执行了最初提供的命令行选项<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Restart%2A&gt;</ph>将启动应用程序再次使用相同的选项。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Restart">
          <source>Your code is not a Windows Forms application.</source>
          <target state="translated">您的代码不是 Windows 窗体应用程序。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Restart">
          <source>You cannot call this method in this context.</source>
          <target state="translated">不能在此上下文中调用此方法。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Restart">
          <source>Requires <ph id="ph1">&lt;see cref="M:System.Security.Permissions.SecurityPermission.IsUnrestricted" /&gt;</ph> permission.</source>
          <target state="translated">需要<ph id="ph1">&lt;see cref="M:System.Security.Permissions.SecurityPermission.IsUnrestricted" /&gt;</ph>权限。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Application">
          <source>Begins running a standard application message loop on the current thread.</source>
          <target state="translated">在当前线程上开始运行标准应用程序消息循环。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run">
          <source>Begins running a standard application message loop on the current thread, without a form.</source>
          <target state="translated">在没有窗体的情况下，在当前线程上开始运行标准应用程序消息循环。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run">
          <source>In a Win32-based or Windows Forms application, a message loop is a routine in code that processes user events, such as mouse clicks and keyboard strokes.</source>
          <target state="translated">在基于 Win32 的或 Windows 窗体应用程序消息循环是处理用户事件，如点击鼠标和键盘键击代码中的例程。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run">
          <source>Every running Windows-based application requires an active message loop, called the main message loop.</source>
          <target state="translated">每个正在运行的基于 Windows 的应用程序需要调用主消息循环活动的消息循环。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run">
          <source>When the main message loop is closed, the application exits.</source>
          <target state="translated">当关闭主消息循环时，应用程序退出。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run">
          <source>In Windows Forms, this loop is closed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method is called, or when the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph> method is called on the thread that is running the main message loop.</source>
          <target state="translated">在 Windows 窗体，将关闭此循环时<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>调用方法时，或当<ph id="ph2">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph>运行主消息循环的线程上调用方法。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run">
          <source>Most Windows Forms developers will not need to use this version of the method.</source>
          <target state="translated">大多数 Windows 窗体开发人员将不需要使用此版本的方法。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run">
          <source>You should use the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.Form%29&gt;</ph> overload to start an application with a main form, so that the application terminates when the main form is closed.</source>
          <target state="translated">应使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.Form%29&gt;</ph>重载，以使用主窗体中，启动应用程序，以便在应用程序终止时关闭主窗体。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run">
          <source>For all other situations, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.ApplicationContext%29&gt;</ph> overload, which supports supplying an <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> object for better control over the lifetime of the application.</source>
          <target state="translated">对于所有其他情况下，使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.ApplicationContext%29&gt;</ph>重载，该产品支持提供<ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>更好地控制应用程序的生存期的对象。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run">
          <source>A main message loop is already running on this thread.</source>
          <target state="translated">主消息循环已在此线程上运行。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph> in which the application is run.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph>，应用程序将在其中运行。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>Begins running a standard application message loop on the current thread, with an <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph>.</source>
          <target state="translated">在特定的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph> 中，在当前线程上开始运行标准应用程序消息循环。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>The message loop runs until <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph> is called or the <ph id="ph3">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph> event is raised on the context object.</source>
          <target state="translated">消息循环运行，直到<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph>称为或<ph id="ph3">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph>上下文对象上引发事件。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>The example displays two forms and exits the application when both forms are closed.</source>
          <target state="translated">此示例显示两个窗体，并退出应用程序，这两个窗体关闭时。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>When the application starts and exits, the position of each form is remembered.</source>
          <target state="translated">当应用程序启动和退出时，将记住每个窗体的位置。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>This example demonstrates how to use an <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>, along with the <ph id="ph2">`Application.Run(context)`</ph> method, to display multiple forms when the application starts.</source>
          <target state="translated">此示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>，连同<ph id="ph2">`Application.Run(context)`</ph>方法，以显示多个窗体应用程序启动时。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>The class <ph id="ph1">`MyApplicationContext`</ph> inherits from <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> and keeps track when each form is closed, and exits the current thread when they both are.</source>
          <target state="translated">类<ph id="ph1">`MyApplicationContext`</ph>继承自<ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>每个窗体已关闭，并在它们都时退出当前线程时保持跟踪。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>The class stores the positions of each form for the user.</source>
          <target state="translated">该类存储了用户的每个窗体的位置。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>The form position data is stored in a file titled <ph id="ph1">`Appdata.txt`</ph> that is created in the location determined by <ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>.</source>
          <target state="translated">窗体位置数据存储在文件标题为<ph id="ph1">`Appdata.txt`</ph>，它在由位置创建<ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>The <ph id="ph1">`Main`</ph> method calls <ph id="ph2">`Application.Run(context)`</ph> to start the application given the <ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Main`</ph>方法调用<ph id="ph2">`Application.Run(context)`</ph>启动应用程序提供<ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>The code for the <ph id="ph1">`AppForm1`</ph> and <ph id="ph2">`AppForm2`</ph> forms is not shown for the purpose of brevity.</source>
          <target state="translated">代码<ph id="ph1">`AppForm1`</ph>和<ph id="ph2">`AppForm2`</ph>起见不显示窗体。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> class overview for the whole code listing.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>类概述为完整的代码清单。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
          <source>A main message loop is already running on this thread.</source>
          <target state="translated">主消息循环已在此线程上运行。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that represents the form to make visible.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>，它代表要使之可见的窗体。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>Begins running a standard application message loop on the current thread, and makes the specified form visible.</source>
          <target state="translated">在当前线程上开始运行标准应用程序消息循环，并使指定窗体可见。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>Typically, the main function of an application calls this method and passes to it the main window of the application.</source>
          <target state="translated">通常情况下，应用程序的主函数调用此方法，并将应用程序的主窗口传递给它。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>This method adds an event handler to the <ph id="ph1">`mainForm`</ph> parameter for the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> event.</source>
          <target state="translated">此方法将添加到事件处理程序<ph id="ph1">`mainForm`</ph>参数<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>The event handler calls <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph> to clean up the application.</source>
          <target state="translated">事件处理程序调用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ExitThread%2A&gt;</ph>清理应用程序。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> class will be called prior to the return of this method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>类将在此方法返回之前调用。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>The following code example lists numbers in a list box on a form.</source>
          <target state="translated">下面的代码示例列出窗体上一个列表框中的数字。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>Each time you click <ph id="ph1">`button1`</ph>, the application adds another number to the list.</source>
          <target state="translated">每次你单击<ph id="ph1">`button1`</ph>，应用程序列表中添加另一个数。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>The <ph id="ph1">`Main`</ph> method calls <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> to start the application, which creates the form, <ph id="ph3">`listBox1`</ph>, and <ph id="ph4">`button1`</ph>.</source>
          <target state="translated"><ph id="ph1">`Main`</ph>方法调用<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph>启动该应用程序，这将创建窗体， <ph id="ph3">`listBox1`</ph>，和<ph id="ph4">`button1`</ph>。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>When the user clicks <ph id="ph1">`button1`</ph>, the <ph id="ph2">`button1_Click`</ph> method adds numbers one to three to the list box, and displays a <ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>.</source>
          <target state="translated">当用户单击<ph id="ph1">`button1`</ph>、<ph id="ph2">`button1_Click`</ph>方法添加到列表框中，一到三个数字并显示<ph id="ph3">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>If the user clicks <bpt id="p1">**</bpt>No<ept id="p1">**</ept> on the <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>, the <ph id="ph2">`button1_Click`</ph> method adds another number to the list.</source>
          <target state="translated">如果用户单击<bpt id="p1">**</bpt>否<ept id="p1">**</ept>上<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>、<ph id="ph2">`button1_Click`</ph>方法向列表添加另一个数。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>If the user clicks <bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>, the application calls <ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> to process all remaining messages in the queue and then to quit.</source>
          <target state="translated">如果用户单击<bpt id="p1">**</bpt>是<ept id="p1">**</ept>，应用程序调用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>来处理队列中的所有剩余消息，然后退出。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>The example requires that <ph id="ph1">`listBox1`</ph> and <ph id="ph2">`button1`</ph> have been created and placed on a form.</source>
          <target state="translated">该示例需要<ph id="ph1">`listBox1`</ph>和<ph id="ph2">`button1`</ph>已创建并已放置在窗体上。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
          <source>A main message loop is already running on the current thread.</source>
          <target state="translated">主消息循环已在当前线程上运行。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.SafeTopLevelCaptionFormat">
          <source>Gets or sets the format string to apply to top-level window captions when they are displayed with a warning banner.</source>
          <target state="translated">获取或设置当顶级窗口标题与版权警告标志一起显示时，要应用于顶级窗口标题的格式字符串。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.SafeTopLevelCaptionFormat">
          <source>The format string to apply to top-level window captions.</source>
          <target state="translated">要应用于顶级窗口标题的格式字符串。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.SafeTopLevelCaptionFormat">
          <source>for all windows to set this property.</source>
          <target state="translated">若要将此属性设置的所有窗口。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.SafeTopLevelCaptionFormat">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>The default value to use for new controls.</source>
          <target state="translated">用于新控件的默认值。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, new controls that support <bpt id="p1">&lt;c&gt;</bpt>UseCompatibleTextRendering<ept id="p1">&lt;/c&gt;</ept> use the <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> based <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> class for text rendering; if <ph id="ph4">&lt;see langword="false" /&gt;</ph>, new controls use the <ph id="ph5">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> based <ph id="ph6">&lt;see cref="T:System.Windows.Forms.TextRenderer" /&gt;</ph> class.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则支持 <bpt id="p1">&lt;c&gt;</bpt>UseCompatibleTextRendering<ept id="p1">&lt;/c&gt;</ept> 的新控件使用基于 <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> 的 <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 类进行文本呈现；如果为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>，则新控件使用基于 <ph id="ph5">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> 的 <ph id="ph6">&lt;see cref="T:System.Windows.Forms.TextRenderer" /&gt;</ph> 类。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>Sets the application-wide default for the <bpt id="p1">&lt;c&gt;</bpt>UseCompatibleTextRendering<ept id="p1">&lt;/c&gt;</ept> property defined on certain controls.</source>
          <target state="translated">将某些控件上定义的 <bpt id="p1">&lt;c&gt;</bpt>UseCompatibleTextRendering<ept id="p1">&lt;/c&gt;</ept> 属性设置为应用程序范围内的默认值。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>Certain Windows Forms controls can render their text using either the <ph id="ph1">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> class, which is based on the <ph id="ph2">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> graphics library, or the <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> class, which is based on the <ph id="ph4">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> graphics library.</source>
          <target state="translated">某些 Windows 窗体控件可以呈现使用其文本<ph id="ph1">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph>类，基于<ph id="ph2">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph>图形库或<ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph>类，基于<ph id="ph4">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph>图形库。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>This change was made in the <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> because of performance and localization issues with <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph>.</source>
          <target state="translated">此更改为了<ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>因性能和本地化问题<ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A&gt;</ph> to set the default value of the <ph id="ph2">`UseCompatibleTextRendering`</ph> property for controls that support it.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A&gt;</ph>设置的默认值<ph id="ph2">`UseCompatibleTextRendering`</ph>支持它的控件的属性。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>The <ph id="ph1">`UseCompatibleTextRendering`</ph> property is intended to provide visual compatibility between Windows Forms controls that render text using the <ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> class and <ph id="ph3">[!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)]</ph> and <ph id="ph4">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph> applications that perform custom text rendering using the <ph id="ph5">&lt;xref:System.Drawing.Graphics&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">`UseCompatibleTextRendering`</ph>属性旨在提供 visual Windows 窗体控件之间的兼容性，呈现文本使用<ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph>类和<ph id="ph3">[!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)]</ph>和<ph id="ph4">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph>应用程序执行自定义文本呈现使用<ph id="ph5">&lt;xref:System.Drawing.Graphics&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>In most cases, if your application is not being upgraded from <ph id="ph1">[!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)]</ph> or <ph id="ph2">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph>, it is recommended that you leave <ph id="ph3">`UseCompatibleTextRendering`</ph> set to the default value of <ph id="ph4">`false`</ph>.</source>
          <target state="translated">在大多数情况下，如果你的应用程序不正在升级从<ph id="ph1">[!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)]</ph>或<ph id="ph2">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph>，因此，建议你停<ph id="ph3">`UseCompatibleTextRendering`</ph>设置的默认值为<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>The <ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> based <ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> class was introduced in the <ph id="ph3">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> to improve performance, make text look better, and improve support for international fonts.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph>基于<ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph>类中引入了<ph id="ph3">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>为了提高性能，使文本效果更好，并提高的国际字体支持。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>In earlier versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, the <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> based <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> class was used to perform all text rendering.</source>
          <target state="translated">在早期版本的<ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>、<ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph>基于<ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph>类用于执行所有文本呈现。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source><ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> calculates character spacing and word wrapping differently from <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> 计算字符间距和自动换行从的不同<ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>In a Windows Forms application that uses the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> class to render text, this could cause the text for controls that use <ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> to appear different from the other text in the application.</source>
          <target state="translated">在 Windows 窗体应用程序中使用<ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>类呈现文本中，这可能会导致使用的控件的文本<ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph>显示不同于应用程序中的其他文本。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>To resolve this incompatibility, you can set the <ph id="ph1">`UseCompatibleTextRendering`</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要解决此不兼容性，你可以设置<ph id="ph1">`UseCompatibleTextRendering`</ph>属性<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>To set <ph id="ph1">`UseCompatibleTextRendering`</ph> to <ph id="ph2">`true`</ph> for all supported controls in the application, call the <ph id="ph3">&lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A&gt;</ph> method with a parameter of <ph id="ph4">`true`</ph>.</source>
          <target state="translated">若要设置<ph id="ph1">`UseCompatibleTextRendering`</ph>到<ph id="ph2">`true`</ph>应用程序中的所有受支持控件，调用<ph id="ph3">&lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A&gt;</ph>方法的参数替换<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>You should never call this method if your Windows Forms code is hosted in another application, such as Internet Explorer.</source>
          <target state="translated">如果在另一个应用程序，如 Internet Explorer 中承载 Windows 窗体代码，应永远不会调用此方法。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>Only call this method in stand-alone Windows Forms applications.</source>
          <target state="translated">只能在独立的 Windows 窗体应用程序中调用此方法。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>To set the default value for <ph id="ph1">`UseCompatibleTextRendering`</ph> in <ph id="ph2">[!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)]</ph> or later, see <ph id="ph3">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">若要设置的默认值为<ph id="ph1">`UseCompatibleTextRendering`</ph>中<ph id="ph2">[!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)]</ph>或更高版本，请参阅<ph id="ph3">&lt;xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>In <ph id="ph1">[!INCLUDE[csprcslong](~/includes/csprcslong-md.md)]</ph> or later, a call to <ph id="ph2">&lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A&gt;</ph> is automatically generated in the Program.cs file.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[csprcslong](~/includes/csprcslong-md.md)]</ph>或更高版本，对的调用<ph id="ph2">&lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A&gt;</ph>在 Program.cs 文件中自动生成。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>To change the text rendering default, modify the generated code.</source>
          <target state="translated">若要更改文本呈现默认值，请修改生成的代码。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
          <source>You can only call this method before the first window is created by your Windows Forms application.</source>
          <target state="translated">您只能在 Windows 窗体应用程序创建第一个窗口之前调用此方法。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PowerState" /&gt;</ph> indicating the power activity mode to which to transition.</source>
          <target state="translated">指示要转换到的目标电源活动模式的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PowerState" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to force the suspended mode immediately; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to cause Windows to send a suspend request to every application.</source>
          <target state="translated">若要立即强制挂起模式，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若要使 Windows 向每个应用程序发送挂起请求，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to disable restoring the system's power status to active on a wake event, <ph id="ph2">&lt;see langword="false" /&gt;</ph> to enable restoring the system's power status to active on a wake event.</source>
          <target state="translated">值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 时可在发生唤醒事件时禁止将系统的电源状态恢复为活动状态；值为 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 时可在发生唤醒事件时允许将系统的电源状态恢复为活动状态。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)">
          <source>Suspends or hibernates the system, or requests that the system be suspended or hibernated.</source>
          <target state="translated">挂起系统或使系统休眠，或者请求系统挂起或休眠。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the system is being suspended, otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果正在挂起该系统，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)">
          <source>If an application does not respond to a suspend request within 20 seconds, Windows determines that it is in a non-responsive state, and that the application can either be put to sleep or terminated.</source>
          <target state="translated">如果应用程序不响应的挂起请求在 20 秒内，Windows 将确定它处于非响应状态，并且，应用程序可以被置于休眠模式或终止。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)">
          <source>Once an application responds to a suspend request, however, it can take whatever time it needs to clean up resources and shut down active processes.</source>
          <target state="translated">一旦应用程序响应的挂起请求，但是，它可能需要它需要清理资源，并关闭活动进程的任意时间。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Application">
          <source>Instructs the application how to respond to unhandled exceptions.</source>
          <target state="translated">指示应用程序如何响应未经处理的异常。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>The following code example sets event handlers for exceptions that occur on Windows Forms threads and exceptions that occur on other threads.</source>
          <target state="translated">下面的代码示例设置 Windows 窗体线程和其他线程发生的异常的异常发生的事件处理程序。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>It sets <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> so that all exceptions are handled by the application, regardless of the settings in the application's user configuration file.</source>
          <target state="translated">它将设置<ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph>以便所有异常都处理应用程序，而不考虑应用程序的用户配置文件中的设置。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>It uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> event to handle UI thread exceptions, and the <ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event to handle non-UI thread exceptions.</source>
          <target state="translated">它使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph>事件来处理 UI 线程异常和<ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>事件来处理非 UI 线程异常。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>Since <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> cannot prevent an application from terminating, the example simply logs the error in the application event log before termination.</source>
          <target state="translated">由于<ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>无法防止应用程序终止，则只需将错误记录中在终止之前应用程序事件日志。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Application">
          <source>This example assumes that you have defined two <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls, <ph id="ph2">`button1`</ph> and <ph id="ph3">`button2`</ph>, on your <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.</source>
          <target state="translated">此示例假定你已经定义了两个<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>控件，<ph id="ph2">`button1`</ph>和<ph id="ph3">`button2`</ph>，在你<ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UnhandledExceptionMode" /&gt;</ph> value describing how the application should behave if an exception is thrown without being caught.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UnhandledExceptionMode" /&gt;</ph> 值，描述在引发未捕获的异常时应用程序的行为方式。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>Instructs the application how to respond to unhandled exceptions.</source>
          <target state="translated">指示应用程序如何响应未经处理的异常。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>It is often not feasible to catch all of the exceptions thrown by Windows Forms.</source>
          <target state="translated">它通常不是可行捕捉所有由 Windows 窗体引发的异常。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>Using this method, you can instruct your application whether it should catch all unhandled exceptions thrown by Windows Forms components and continue operating, or whether it should expose them to the user and halt execution.</source>
          <target state="translated">使用此方法，你可以指示是否应捕获所有未经处理由 Windows 窗体组件引发的异常并继续运行，或它是否应将它们公开给用户并暂停执行你的应用程序。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> before you instantiate the main form of your application using the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> method.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph>实例化你的应用程序使用的主窗体之前<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>To catch exceptions that occur in threads not created and owned by Windows Forms, use the <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event handler.</source>
          <target state="translated">若要捕获不创建的线程中出现的异常和由 Windows 窗体，拥有使用<ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>The following code example sets event handlers for exceptions that occur on Windows Forms threads and exceptions that occur on other threads.</source>
          <target state="translated">下面的代码示例设置 Windows 窗体线程和其他线程发生的异常的异常发生的事件处理程序。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>It sets <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> so that all exceptions are handled by the application, regardless of the settings in the application's user configuration file.</source>
          <target state="translated">它将设置<ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph>以便所有异常都处理应用程序，而不考虑应用程序的用户配置文件中的设置。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>It uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> event to handle UI thread exceptions, and the <ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event to handle non-UI thread exceptions.</source>
          <target state="translated">它使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph>事件来处理 UI 线程异常和<ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>事件来处理非 UI 线程异常。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>Since <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> cannot prevent an application from terminating, the example simply logs the error in the application event log before termination.</source>
          <target state="translated">由于<ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>无法防止应用程序终止，则只需将错误记录中在终止之前应用程序事件日志。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>This example assumes that you have defined two <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls, <ph id="ph2">`button1`</ph> and <ph id="ph3">`button2`</ph>, on your <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.</source>
          <target state="translated">此示例假定你已经定义了两个<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>控件，<ph id="ph2">`button1`</ph>和<ph id="ph3">`button2`</ph>，在你<ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
          <source>You cannot set the exception mode after the application has created its first window.</source>
          <target state="translated">在应用程序创建其第一个窗口后，您将无法设置异常模式。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UnhandledExceptionMode" /&gt;</ph> value describing how the application should behave if an exception is thrown without being caught.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.UnhandledExceptionMode" /&gt;</ph> 值，描述在引发未捕获的异常时应用程序的行为方式。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to set the thread exception mode; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果设置线程异常模式，为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>Instructs the application how to respond to unhandled exceptions, optionally applying thread-specific behavior.</source>
          <target state="translated">指示应用程序如何响应未经处理的异常，同时可选择应用特定于线程的行为。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>It is often not feasible to catch all of the exceptions thrown by Windows Forms.</source>
          <target state="translated">它通常不是可行捕捉所有由 Windows 窗体引发的异常。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>Using this method, you can instruct your application whether it should catch all unhandled exceptions thrown by Windows Forms components and continue operating, or whether it should expose them to the user and halt execution.</source>
          <target state="translated">使用此方法，你可以指示是否应捕获所有未经处理由 Windows 窗体组件引发的异常并继续运行，或它是否应将它们公开给用户并暂停执行你的应用程序。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> before you instantiate the main form of your application using the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph> method.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph>实例化你的应用程序使用的主窗体之前<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>When <ph id="ph1">`threadScope`</ph> is <ph id="ph2">`true`</ph>, the thread exception mode is set.</source>
          <target state="translated">当<ph id="ph1">`threadScope`</ph>是<ph id="ph2">`true`</ph>，设置线程异常模式。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>The thread exception mode overrides the application exception mode if <ph id="ph1">`mode`</ph> is not set to <ph id="ph2">&lt;xref:System.Windows.Forms.UnhandledExceptionMode.Automatic&gt;</ph>.</source>
          <target state="translated">如果此线程异常模式重写应用程序异常模式<ph id="ph1">`mode`</ph>未设置为<ph id="ph2">&lt;xref:System.Windows.Forms.UnhandledExceptionMode.Automatic&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>When <ph id="ph1">`threadScope`</ph> is <ph id="ph2">`false`</ph>, the application exception mode is set.</source>
          <target state="translated">当<ph id="ph1">`threadScope`</ph>是<ph id="ph2">`false`</ph>，应用程序异常模式设置。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>The application exception mode is used for all threads that have the <ph id="ph1">&lt;xref:System.Windows.Forms.UnhandledExceptionMode.Automatic&gt;</ph> mode.</source>
          <target state="translated">应用程序异常模式适用于具有的所有线程<ph id="ph1">&lt;xref:System.Windows.Forms.UnhandledExceptionMode.Automatic&gt;</ph>模式。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>Setting the application exception mode does not affect the setting of the current thread.</source>
          <target state="translated">设置应用程序异常模式不会影响当前线程的设置。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>To catch exceptions that occur in threads not created and owned by Windows Forms, use the <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event handler.</source>
          <target state="translated">若要捕获不创建的线程中出现的异常和由 Windows 窗体，拥有使用<ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>The following code example sets event handlers for exceptions that occur on Windows Forms threads and exceptions that occur on other threads.</source>
          <target state="translated">下面的代码示例设置 Windows 窗体线程和其他线程发生的异常的异常发生的事件处理程序。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>It sets <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> so that all exceptions are handled by the application, regardless of the settings in the application's user configuration file.</source>
          <target state="translated">它将设置<ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph>以便所有异常都处理应用程序，而不考虑应用程序的用户配置文件中的设置。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>It uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> event to handle UI thread exceptions, and the <ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event to handle non-UI thread exceptions.</source>
          <target state="translated">它使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph>事件来处理 UI 线程异常和<ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>事件来处理非 UI 线程异常。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>Since <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> cannot prevent an application from terminating, the example simply logs the error in the application event log before termination.</source>
          <target state="translated">由于<ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>无法防止应用程序终止，则只需将错误记录中在终止之前应用程序事件日志。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>This example assumes that you have defined two <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls, <ph id="ph2">`button1`</ph> and <ph id="ph3">`button2`</ph>, on your <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.</source>
          <target state="translated">此示例假定你已经定义了两个<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>控件，<ph id="ph2">`button1`</ph>和<ph id="ph3">`button2`</ph>，在你<ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
          <source>You cannot set the exception mode after the application has created its first window.</source>
          <target state="translated">在应用程序创建其第一个窗口后，您将无法设置异常模式。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>Gets the path for the executable file that started the application, not including the executable name.</source>
          <target state="translated">获取启动了应用程序的可执行文件的路径，不包括可执行文件的名称。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>The path for the executable file that started the application.</source>
          <target state="translated">启动了应用程序的可执行文件的路径。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>This path will be different depending on whether the Windows Forms application is deployed using <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.</source>
          <target state="translated">取决于是否使用 <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> 部署 Windows 窗体应用程序，此路径将会不同。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> applications are stored in a per-user application cache in the C:\Documents and Settings<ph id="ph2">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept> directory.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> 应用程序存储在每个用户应用程序缓存中 C:\Documents and Settings<ph id="ph2">\\</ph><bpt id="p1">*</bpt>用户名<ept id="p1">*</ept>目录。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>For more information, see <bpt id="p1">[</bpt>Accessing Local and Remote Data in ClickOnce Applications<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>访问本地数据和 ClickOnce 应用程序中的远程数据<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>The following code example gets this property and displays its value in a text box.</source>
          <target state="translated">下面的代码示例获取此属性，并在文本框中显示其值。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>The example requires that <ph id="ph1">`textBox1`</ph> has been placed on a form.</source>
          <target state="translated">该示例需要<ph id="ph1">`textBox1`</ph>已放在窗体上。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>for getting the path.</source>
          <target state="translated">用于获取路径。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.StartupPath">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>Occurs when an untrapped thread exception is thrown.</source>
          <target state="translated">在发生未捕获线程异常时发生。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>This event allows your Windows Forms application to handle otherwise unhandled exceptions that occur in Windows Forms threads.</source>
          <target state="translated">此事件允许 Windows 窗体应用程序与 Windows 窗体线程中发生的句柄否则为未经处理的异常。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>Attach your event handlers to the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> event to deal with these exceptions, which will leave your application in an unknown state.</source>
          <target state="translated">附加到事件处理程序<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph>事件来处理这些例外情况，这将使你的应用程序处于未知状态。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>Where possible, exceptions should be handled by a structured exception handling block.</source>
          <target state="translated">如果可能，应由结构化异常处理块处理异常。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>You can change whether this callback is used for unhandled Windows Forms thread exceptions by setting <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph>.</source>
          <target state="translated">你可以更改是否通过设置情况下，使用 Windows 窗体线程的未处理异常的此回调<ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>To catch exceptions that occur in threads not created and owned by Windows Forms, use the <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event handler.</source>
          <target state="translated">若要捕获不创建的线程中出现的异常和由 Windows 窗体，拥有使用<ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>To guarantee that no activations of this event are missed, you must attach a handler before you call <ph id="ph1">&lt;xref:System.Windows.Application.Run%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">若要确保此事件没有激活会丢失，必须附加处理程序，然后才能调用<ph id="ph1">&lt;xref:System.Windows.Application.Run%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
          <target state="translated">由于这是一个静态事件，则必须在你的应用程序将被释放，或会导致内存泄漏时分离事件处理程序。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>The following code example sets event handlers for exceptions that occur on Windows Forms threads and exceptions that occur on other threads.</source>
          <target state="translated">下面的代码示例设置 Windows 窗体线程和其他线程发生的异常的异常发生的事件处理程序。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>It sets <ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph> so that all exceptions are handled by the application, regardless of the settings in the application's user configuration file.</source>
          <target state="translated">它将设置<ph id="ph1">&lt;xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A&gt;</ph>以便所有异常都处理应用程序，而不考虑应用程序的用户配置文件中的设置。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>It uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph> event to handle UI thread exceptions, and the <ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event to handle non-UI thread exceptions.</source>
          <target state="translated">它使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadException&gt;</ph>事件来处理 UI 线程异常和<ph id="ph2">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>事件来处理非 UI 线程异常。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>Since <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> cannot prevent an application from terminating, the example simply logs the error in the application event log before termination.</source>
          <target state="translated">由于<ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph>无法防止应用程序终止，则只需将错误记录中在终止之前应用程序事件日志。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>This example assumes that you have defined two <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls, <ph id="ph2">`button1`</ph> and <ph id="ph3">`button2`</ph>, on your <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph> class.</source>
          <target state="translated">此示例假定你已经定义了两个<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>控件，<ph id="ph2">`button1`</ph>和<ph id="ph3">`button2`</ph>，在你<ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>for the immediate caller to call unmanaged code when adding a handler to this event.</source>
          <target state="translated">直接调用方调用非托管的代码时此事件添加处理程序。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadException">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>Occurs when a thread is about to shut down.</source>
          <target state="translated">在某线程即将关闭时发生。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>When the main thread for an application is about to be shut down, this event is raised first, followed by an <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Application.ApplicationExit" /&gt;</ph> event.</source>
          <target state="translated">当应用程序的主线程即将关闭时，首先引发该事件，随后是 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Application.ApplicationExit" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>You must attach the event handlers to the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph> event to perform any unhandled, required tasks before the thread stops running.</source>
          <target state="translated">必须将附加到的事件处理程序<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph>事件以执行任何未处理的、 所需任务的线程停止运行前。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>Close files opened by this thread, or dispose of objects that the garbage collector did not reclaim.</source>
          <target state="translated">关闭打开的此线程或释放的垃圾回收器未回收的对象文件。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</source>
          <target state="translated">由于这是一个静态事件，则必须在你的应用程序将被释放，或会导致内存泄漏时分离事件处理程序。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Application.ThreadExit">
          <source>To run the example code, paste it into a Windows Forms and ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph> event.</source>
          <target state="translated">要运行此代码示例，将其粘贴到 Windows 窗体，并确保与事件处理程序<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Application.UnregisterMessageLoop">
          <source>Unregisters the message loop callback made with <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)" /&gt;</ph>.</source>
          <target state="translated">注销使用 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)" /&gt;</ph> 发出的消息循环回调。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>Gets the path for the application data of a user.</source>
          <target state="translated">获取用户的应用程序数据的路径。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>The path for the application data of a user.</source>
          <target state="translated">用户的应用程序数据的路径。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>If a path does not exist, one is created in the following format:</source>
          <target state="translated">如果路径不存在，将创建一个采用以下格式：</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source><bpt id="p1">*</bpt>Base Path<ept id="p1">*</ept><ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></source>
          <target state="translated"><bpt id="p1">*</bpt>基路径<ept id="p1">*</ept><ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>Data stored in this path is part of user profile that is enabled for roaming.</source>
          <target state="translated">此路径中存储的数据是启用的漫游用户配置文件的一部分。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>A roaming user works on more than one computer in a network.</source>
          <target state="translated">漫游用户在网络中的多个计算机上工作。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>The user profile for a roaming user is kept on a server on the network and is loaded onto a system when the user logs on.</source>
          <target state="translated">漫游用户的用户配置文件保留在网络上的服务器上，并在用户登录时加载到系统。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>For a user profile to be considered for roaming, the operating system must support roaming profiles and it must be enabled.</source>
          <target state="translated">用户配置文件才会考虑让漫游时，操作系统必须支持漫游配置文件，并且必须启用。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>A typical base path is C:\Documents and Settings<ph id="ph1">\\</ph><bpt id="p1">*</bpt>username<ept id="p1">*</ept>\Application Data.</source>
          <target state="translated">典型的基路径是 C:\Documents and Settings<ph id="ph1">\\</ph><bpt id="p1">*</bpt>用户名<ept id="p1">*</ept>\Application 数据。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>This path will be different, however, if the Windows Forms application is deployed by using <ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>.</source>
          <target state="translated">此路径将会不同，但是，如果通过使用部署 Windows 窗体应用程序<ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> creates its own application data directory that is isolated from all other applications.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> 创建其自己独立于所有其他应用程序的应用程序数据目录。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>For more information, see <bpt id="p1">[</bpt>Accessing Local and Remote Data in ClickOnce Applications<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>访问本地数据和 ClickOnce 应用程序中的远程数据<ept id="p1">](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)</ept>。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>The following code example displays two forms and exits the application when both forms are closed.</source>
          <target state="translated">下面的代码示例显示两个窗体，并退出应用程序，这两个窗体关闭时。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>When the application starts and exits, the position of each form is remembered.</source>
          <target state="translated">当应用程序启动和退出时，将记住每个窗体的位置。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>This example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph> property to store application data for the user.</source>
          <target state="translated">此示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>属性来存储用户的应用程序数据。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>The class <ph id="ph1">`MyApplicationContext`</ph> inherits from <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> and keeps track when each form is closed, and exits the current thread when they both are.</source>
          <target state="translated">类<ph id="ph1">`MyApplicationContext`</ph>继承自<ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>每个窗体已关闭，并在它们都时退出当前线程时保持跟踪。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>The class stores the positions of each form for the user.</source>
          <target state="translated">该类存储了用户的每个窗体的位置。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>The form position data is stored in a file titled <ph id="ph1">`Appdata.txt`</ph> that is created in the location determined by <ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>.</source>
          <target state="translated">窗体位置数据存储在文件标题为<ph id="ph1">`Appdata.txt`</ph>，它在由位置创建<ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>The <ph id="ph1">`Main`</ph> method calls <ph id="ph2">`Application.Run(context)`</ph> to start the application given the <ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Main`</ph>方法调用<ph id="ph2">`Application.Run(context)`</ph>启动应用程序提供<ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>This code is an excerpt from the example shown in the <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> class overview.</source>
          <target state="translated">此代码摘自中所示的示例<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>类概述。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>Some code is not shown for the purpose of brevity.</source>
          <target state="translated">为了简洁起见，不显示某些代码。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataPath">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> for the whole code listing.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>为完整的代码清单。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>Gets the registry key for the application data of a user.</source>
          <target state="translated">获取用户的应用程序数据的注册表项。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>A <ph id="ph1">&lt;see cref="T:Microsoft.Win32.RegistryKey" /&gt;</ph> representing the registry key for the application data specific to the user.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:Microsoft.Win32.RegistryKey" /&gt;</ph>，它表示特定于用户的应用程序数据的注册表项。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>If the key does not exist, it is created in the following format:</source>
          <target state="translated">如果不存在该键，则将它创建采用以下格式：</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>CurrentUser\Software<ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></source>
          <target state="translated">CurrentUser\Software<ph id="ph1">\\</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Application.CompanyName%2A&gt;</ph><ph id="ph3">\\</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Application.ProductName%2A&gt;</ph><ph id="ph5">\\</ph><ph id="ph6">&lt;xref:System.Windows.Forms.Application.ProductVersion%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>Data stored in this key is part of user profile that is enabled for roaming.</source>
          <target state="translated">数据存储在此项是启用的漫游用户配置文件的一部分。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>A roaming user works on more than one computer in a network.</source>
          <target state="translated">漫游用户在网络中的多个计算机上工作。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>The user profile for a roaming user is kept on a server on the network and is loaded onto a system when the user logs on.</source>
          <target state="translated">漫游用户的用户配置文件保留在网络上的服务器上，并在用户登录时加载到系统。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UserAppDataRegistry">
          <source>For a user profile to be considered for roaming, the operating system must support roaming profiles and it must be enabled.</source>
          <target state="translated">用户配置文件才会考虑让漫游时，操作系统必须支持漫游配置文件，并且必须启用。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.UseWaitCursor">
          <source>Gets or sets whether the wait cursor is used for all open forms of the application.</source>
          <target state="translated">获取或设置是否对应用程序的所有打开窗体使用等待光标。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UseWaitCursor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> is the wait cursor is used for all open forms; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果等待光标用于所有打开的窗体，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UseWaitCursor">
          <source>When this property is set to <ph id="ph1">`true`</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.UseWaitCursor%2A&gt;</ph> property of all open forms in the application will be set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">当此属性设置为<ph id="ph1">`true`</ph>、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.UseWaitCursor%2A&gt;</ph>的应用程序中的所有打开窗体的属性将设置为<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UseWaitCursor">
          <source>This call will not return until this property has been set on all forms.</source>
          <target state="translated">此属性将设置在所有窗体上之前，不会返回此调用。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.UseWaitCursor">
          <source>Use this property when you have a long-running operation, and want to indicate in all application forms that the operation is still processing.</source>
          <target state="translated">当你有一个长时间运行的操作，并想要在所有应用程序窗体中指示该操作仍在处理时，请使用此属性。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Application.VisualStyleState">
          <source>Gets a value that specifies how visual styles are applied to application windows.</source>
          <target state="translated">获取指定可视样式如何应用于应用程序窗口的值。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.VisualStyleState">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.VisualStyles.VisualStyleState" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.VisualStyles.VisualStyleState" /&gt;</ph> 值的按位组合。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.VisualStyleState">
          <source>This <ph id="ph1">&lt;xref:System.Windows.Forms.Application.VisualStyleState%2A&gt;</ph> property determines whether visual styles are enabled in client areas or nonclient areas of application windows.</source>
          <target state="translated">这<ph id="ph1">&lt;xref:System.Windows.Forms.Application.VisualStyleState%2A&gt;</ph>属性确定在客户端区域或应用程序窗口非工作区中是否启用了可视样式。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.VisualStyleState">
          <source>Generally, this property should be set within the main form's constructor or <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event handler.</source>
          <target state="translated">通常情况下，应在主窗体的构造函数中设置此属性或<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.VisualStyleState">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.VisualStyleState%2A&gt;</ph> property to one of the <ph id="ph2">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=nameWithType&gt;</ph> values within the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handler for a <ph id="ph4">&lt;xref:System.Windows.Forms.Button&gt;</ph> control.</source>
          <target state="translated">下面的代码示例设置<ph id="ph1">&lt;xref:System.Windows.Forms.Application.VisualStyleState%2A&gt;</ph>属性之一<ph id="ph2">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=nameWithType&gt;</ph>值内<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>事件处理程序<ph id="ph4">&lt;xref:System.Windows.Forms.Button&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Application.VisualStyleState">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=nameWithType&gt;</ph> enumeration.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=nameWithType&gt;</ph>枚举。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>