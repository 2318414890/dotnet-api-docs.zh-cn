<Type Name="DataGridViewCell" FullName="System.Windows.Forms.DataGridViewCell">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f0967001138fb1d8578d7ebd3acfbd4fb661955a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30640941" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DataGridViewCell : System.Windows.Forms.DataGridViewElement, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataGridViewCell extends System.Windows.Forms.DataGridViewElement implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewCell" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataGridViewCell&#xA;Inherits DataGridViewElement&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewCell abstract : System::Windows::Forms::DataGridViewElement, ICloneable, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataGridViewCellConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Windows.Forms.DataGridView" /> 控件中的单个单元格。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell>类表示的单个单元格中<xref:System.Windows.Forms.DataGridView>控件。 你可以检索到的单元格<xref:System.Windows.Forms.DataGridViewRow.Cells%2A>集合<xref:System.Windows.Forms.DataGridViewRow>。  
  
 行和列<xref:System.Windows.Forms.DataGridViewCell>标识中的单元格的位置<xref:System.Windows.Forms.DataGridView>。 典型的单元格包含特定于的行和列包含它的数据。 在通过多种方式中，通过设置其属性和处理与它关联的事件可以自定义单元格。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此类型。 有关此示例的详细信息，请参阅[如何： 添加的 Windows 窗体 DataGridView 控件中的单个单元格的工具提示](~/docs/framework/winforms/controls/add-tooltips-to-individual-cells-in-a-wf-datagridview-control.md)。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/cpp/datagridviewcell.tooltiptext.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/CS/datagridviewcell.tooltiptext.cs#1)]
 [!code-vb[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/VB/datagridviewcell.tooltiptext.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>派生自<see cref="T:System.Windows.Forms.DataGridViewCell" />并将新属性添加到派生的类，请确保重写<see cref="M:System.Windows.Forms.DataGridViewCell.Clone" />方法以在克隆操作过程中复制新属性。 你还应调用基类的<see cref="M:System.Windows.Forms.DataGridViewCell.Clone" />方法，以便基类的属性复制到新的单元格。</para>
    </block>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.ICloneable" />
    <altmember cref="T:System.IDisposable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataGridViewCell ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataGridViewCell();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取分配给 <see cref="T:System.Windows.Forms.DataGridViewCell.DataGridViewCellAccessibleObject" /> 的 <see cref="T:System.Windows.Forms.DataGridViewCell" />。</summary>
        <value>分配给 <see cref="T:System.Windows.Forms.DataGridViewCell.DataGridViewCellAccessibleObject" /> 的 <see cref="T:System.Windows.Forms.DataGridViewCell" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要控制从此方法返回的实例，重写<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法。  
  
 如果当前没有给控件分配 <xref:System.Windows.Forms.AccessibleObject>，则会创建后者的一个新实例。  
  
> [!NOTE]
>  要获取或设置<xref:System.Windows.Forms.Control.AccessibilityObject%2A>属性，必须添加对引用`Accessibility`与安装程序集[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。  
  
 有关辅助性对象的详细信息，请参阅 MSDN 库在的"Active Accessibility"部分[ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="AdjustCellBorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustCellBorderStyle (System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustCellBorderStyle(class System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, class System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AdjustCellBorderStyle (dataGridViewAdvancedBorderStyleInput As DataGridViewAdvancedBorderStyle, dataGridViewAdvancedBorderStylePlaceholder As DataGridViewAdvancedBorderStyle, singleVerticalBorderAdded As Boolean, singleHorizontalBorderAdded As Boolean, isFirstDisplayedColumn As Boolean, isFirstDisplayedRow As Boolean) As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdjustCellBorderStyle(System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ dataGridViewAdvancedBorderStyleInput, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewAdvancedBorderStyleInput" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="dataGridViewAdvancedBorderStylePlaceholder" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="singleVerticalBorderAdded" Type="System.Boolean" />
        <Parameter Name="singleHorizontalBorderAdded" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedColumn" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataGridViewAdvancedBorderStyleInput">一个 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />，表示要修改的单元格边框样式。</param>
        <param name="dataGridViewAdvancedBorderStylePlaceholder">一个 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />，用于存储对单元格边框样式的中间更改。</param>
        <param name="singleVerticalBorderAdded">
          若要向单元格添加竖框线，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="singleHorizontalBorderAdded">
          若要向单元格添加横框线，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="isFirstDisplayedColumn">
          如果宿主单元格位于第一个可见列中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="isFirstDisplayedRow">
          如果宿主单元格位于第一个可见行中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>根据指定条件修改输入单元格的边框样式。</summary>
        <returns>已修改的 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>控件在内部调用<xref:System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle%2A>方法来确定的单元格边框外观。 <xref:System.Windows.Forms.DataGridView>控件通常使用的值<xref:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle%2A>属性`dataGridViewAdvancedBorderStyleInput`参数。  
  
 <xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle.OutsetPartial?displayProperty=nameWithType>值不支持作为输入的单元格样式。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle%2A>方法以自定义单元格的边框。 此代码示例摘自更大的示例为提供<xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle>类。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewAdvancedBorderStyle#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/CS/advancedborderstyle.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/VB/advancedborderstyle.vb#20)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>如果你想要自定义单元格边框的外观，重写此方法。</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetInheritedStyle(System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.HasStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Style" />
      </Docs>
    </Member>
    <Member MemberName="BorderWidths">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle BorderWidths (System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Rectangle BorderWidths(class System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.BorderWidths(System.Windows.Forms.DataGridViewAdvancedBorderStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BorderWidths (advancedBorderStyle As DataGridViewAdvancedBorderStyle) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Rectangle BorderWidths(System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ advancedBorderStyle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="advancedBorderStyle" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
      </Parameters>
      <Docs>
        <param name="advancedBorderStyle">将要计算其边距的 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />。</param>
        <summary>返回一个 <see cref="T:System.Drawing.Rectangle" />，它表示所有单元格的边距宽度。</summary>
        <returns>表示所有单元格边距宽度的 <see cref="T:System.Drawing.Rectangle" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 单元格边框的默认宽度为一个像素。 使用以下<xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle>值可修改边框的宽度：  
  
-   <xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle.None>值表示 0 像素的宽度。  
  
-   <xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle.OutsetDouble>或<xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle.InsetDouble>值增加 1 个像素的默认宽度。  
  
 此外，如果<xref:System.Windows.Forms.DataGridViewRow.DividerHeight%2A>属性设置为该单元格所属的行，矩形的高度将的值增加<xref:System.Windows.Forms.DataGridViewRow.DividerHeight%2A>。 如果<xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A>属性设置为单元格所属的列，则将的值增加与矩形宽度的<xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A>。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.DataGridViewCell.BorderWidths%2A>方法<xref:System.Windows.Forms.DataGridViewCell>类以确定在单元格中的可用绘图区域。 此代码示例摘自[如何： 在 Windows 窗体 DataGridView 控件中的按钮列禁用按钮](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridView.DisabledButtons#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellBorderStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="ClickUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool ClickUnsharesRow (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ClickUnsharesRow(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.ClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ClickUnsharesRow (e As DataGridViewCellEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ClickUnsharesRow(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">一个 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />，它包含传递给 <see cref="M:System.Windows.Forms.DataGridViewCell.OnClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> 方法的数据。</param>
        <summary>指示在单击单元格时，是否对单元格所在的行取消共享。</summary>
        <returns>
          如果不共享该行，则为 <see langword="true" />；否则为 <see langword="false" />。 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 基类总是返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.ClickUnsharesRow%2A>之前调用方法<xref:System.Windows.Forms.DataGridViewCell.OnClick%2A>方法。 它必须返回`true`如果调用<xref:System.Windows.Forms.DataGridViewCell.OnClick%2A>起的单元格的行取消共享状态。 否则，它应返回`false`。  
  
 有关行共享的详细信息，请参阅[缩放 Windows 窗体 DataGridView 控件的最佳做法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建此单元格的精确副本。</summary>
        <returns>一个 <see cref="T:System.Object" />，表示克隆的 <see cref="T:System.Windows.Forms.DataGridViewCell" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 重写<xref:System.Windows.Forms.DataGridViewCell.Clone%2A>方法每当派生自<xref:System.Windows.Forms.DataGridViewCell>类并将新属性添加到派生的类。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Windows.Forms.DataGridViewCell.Clone" />方法在派生类中，调用基类的<see cref="M:System.Windows.Forms.DataGridViewCell.Clone" />方法，以便基类的属性复制到新的单元格，并确保也将复制任何已添加到派生的类的属性的值。</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="ColumnIndex">
      <MemberSignature Language="C#" Value="public int ColumnIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此单元格的列索引。</summary>
        <value>包含该单元格的列的索引；如果该单元格未包含在列中，则为 -1。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 包含行标题的行的列索引的值为-1。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.DataGridViewCell.ColumnIndex%2A>属性来确定要检查整数值的列。 在此示例中中的单元格`Description`将汇总选定单元格的内容时，将忽略列。 此示例摘自更大的示例中提供<xref:System.Windows.Forms.DataGridView.SelectionChanged?displayProperty=nameWithType>事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" />
      </Docs>
    </Member>
    <Member MemberName="ContentBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ContentBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ContentBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ContentBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle ContentBounds { System::Drawing::Rectangle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取环绕单元格内容区域的边框。</summary>
        <value>限定单元格内容区域的 <see cref="T:System.Drawing.Rectangle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回的矩形报告客户端坐标，以像素为单位。  
  
 此属性调用<xref:System.Windows.Forms.DataGridViewCell.GetContentBounds%2A>方法以获取其值。 基<xref:System.Windows.Forms.DataGridViewCell>类型，此值是<xref:System.Drawing.Rectangle.Empty>。  
  
 若要获取该单元格而不是单元格内容的边界矩形，请使用<xref:System.Windows.Forms.DataGridView.GetCellDisplayRectangle%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">包含该单元格的行是共享行。  
  
 或  
  
 该单元格是列标题单元格。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> 属性的值小于 0，这表示该单元格为行标头单元格。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.GetCellDisplayRectangle(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetContentBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Size" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.PreferredSize" />
        <altmember cref="F:System.Drawing.Rectangle.Empty" />
      </Docs>
    </Member>
    <Member MemberName="ContentClickUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool ContentClickUnsharesRow (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ContentClickUnsharesRow(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.ContentClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ContentClickUnsharesRow (e As DataGridViewCellEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ContentClickUnsharesRow(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">一个 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />，它包含传递给 <see cref="M:System.Windows.Forms.DataGridViewCell.OnContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> 方法的数据。</param>
        <summary>指示在单击单元格的内容时，是否对该单元格所在的行取消共享。</summary>
        <returns>
          如果不共享该行，则为 <see langword="true" />；否则为 <see langword="false" />。 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 基类总是返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.ContentClickUnsharesRow%2A>之前调用方法<xref:System.Windows.Forms.DataGridViewCell.OnContentClick%2A>方法。 它必须返回`true`如果调用<xref:System.Windows.Forms.DataGridViewCell.OnContentClick%2A>起的单元格的行取消共享状态。 否则，它应返回`false`。  
  
 有关行共享的详细信息，请参阅[缩放 Windows 窗体 DataGridView 控件的最佳做法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ContentDoubleClickUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool ContentDoubleClickUnsharesRow (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ContentDoubleClickUnsharesRow(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.ContentDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ContentDoubleClickUnsharesRow (e As DataGridViewCellEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ContentDoubleClickUnsharesRow(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">一个 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />，它包含传递给 <see cref="M:System.Windows.Forms.DataGridViewCell.OnContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> 方法的数据。</param>
        <summary>指示在双击单元格的内容时，是否对该单元格所在的行取消共享。</summary>
        <returns>
          如果不共享该行，则为 <see langword="true" />；否则为 <see langword="false" />。 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 基类总是返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.ContentDoubleClickUnsharesRow%2A>之前调用方法<xref:System.Windows.Forms.DataGridViewCell.OnContentDoubleClick%2A>方法。 它必须返回`true`如果调用<xref:System.Windows.Forms.DataGridViewCell.OnContentDoubleClick%2A>起的单元格的行取消共享状态。 否则，它应返回`false`。  
  
 有关行共享的详细信息，请参阅[缩放 Windows 窗体 DataGridView 控件的最佳做法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStrip">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenuStrip ContextMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ContextMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenuStrip As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenuStrip ^ ContextMenuStrip { System::Windows::Forms::ContextMenuStrip ^ get(); void set(System::Windows::Forms::ContextMenuStrip ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与单元格关联的快捷菜单。</summary>
        <value>与单元格关联的 <see cref="T:System.Windows.Forms.ContextMenuStrip" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性指示在用户右键单击该单元格时通常会显示的快捷菜单。  
  
 时<xref:System.Windows.Forms.DataGridView>控件<xref:System.Windows.Forms.DataGridView.DataSource%2A>设置属性或其<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>属性是`true`，获取的值<xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A>属性引发<xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded>的控件的事件，并返回的值<xref:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=nameWithType>在事件处理程序指定的属性作为。 如果事件没有处理程序，获取的值<xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A>属性返回以前指定的值或它的默认值`null`。  
  
 处理<xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded>使用大量的数据，若要避免性能损失时设置单元格时，事件是主要有用<xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A>多个单元格的值。 有关详细信息，请参阅[缩放 Windows 窗体 DataGridView 控件的最佳做法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 更改此属性引发<xref:System.Windows.Forms.DataGridView.CellContextMenuStripChanged>上拥有事件<xref:System.Windows.Forms.DataGridView>，如果存在。  
  
 你还可以指定快捷菜单，为各个行而不是通过设置行的各个单元格<xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A>属性或处理<xref:System.Windows.Forms.DataGridView>控件的<xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded>事件。 单元格<xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A>属性设置重写行<xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A>属性设置和<xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded>事件替代同时<xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded>事件和行<xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A>属性设置。 你可以指定`null`为单元格快捷菜单，但是，若要禁止行的快捷菜单重写。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.ContextMenuStrip" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetInheritedContextMenuStrip(System.Int32)" />
        <altmember cref="T:System.Windows.Forms.ContextMenuStrip" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>为 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 创建一个新的可访问对象。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.DataGridViewCell.DataGridViewCellAccessibleObject" /> 的新 <see cref="T:System.Windows.Forms.DataGridViewCell" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果不显式调用 <xref:System.Windows.Forms.DataGridViewCell.CreateAccessibilityInstance%2A> 方法，则在引用 <xref:System.Windows.Forms.DataGridViewCell.AccessibilityObject%2A> 属性时将会调用此方法。  
  
> [!NOTE]
>  要获取或设置<xref:System.Windows.Forms.DataGridViewCell.AccessibilityObject%2A>，你必须添加对引用`Accessibility`与安装程序集[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell.DataGridViewCellAccessibleObject" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.AccessibilityObject" />
        <altmember cref="N:Accessibility" />
      </Docs>
    </Member>
    <Member MemberName="DefaultNewRowValue">
      <MemberSignature Language="C#" Value="public virtual object DefaultNewRowValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultNewRowValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.DefaultNewRowValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultNewRowValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DefaultNewRowValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取新记录所在行中单元格的默认值。</summary>
        <value>表示默认值的 <see cref="T:System.Object" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.DefaultNewRowValue%2A>基类中的属性<xref:System.Windows.Forms.DataGridViewCell>始终返回`null`。 但是，可以返回其他默认值派生的单元格类中重写此属性。  
  
 用于新纪录的行单元格是否显示此属性返回的值。 处理程序可以重写此值<xref:System.Windows.Forms.DataGridView.DefaultValuesNeeded?displayProperty=nameWithType>事件时焦点输入新记录的行。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Windows.Forms.DataGridViewCell.DefaultNewRowValue%2A>中的属性`CalendarCell`派生自的类<xref:System.Windows.Forms.DataGridViewTextBoxCell>。 此示例摘自中提供更大的代码示例[如何： 在 Windows 窗体 DataGridView 单元格的主机控件](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#200](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#200)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#200](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#200)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
      </Docs>
    </Member>
    <Member MemberName="DetachEditingControl">
      <MemberSignature Language="C#" Value="public virtual void DetachEditingControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DetachEditingControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.DetachEditingControl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DetachEditingControl ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DetachEditingControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从 <see cref="T:System.Windows.Forms.DataGridView" /> 中删除单元格的编辑控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>当前单元格承载的编辑控件和编辑模式结束时调用此方法。 此方法可以删除<xref:System.Windows.Forms.DataGridView.EditingControl%2A>从<xref:System.Windows.Forms.DataGridView.EditingPanel%2A>，并将删除<xref:System.Windows.Forms.DataGridView.EditingPanel%2A>从<xref:System.Windows.Forms.Control.Controls%2A>集合<xref:System.Windows.Forms.DataGridView>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">此单元格没有与 <see cref="T:System.Windows.Forms.DataGridView" /> 关联。  
  
 或  
  
 关联 <see cref="P:System.Windows.Forms.DataGridView.EditingControl" /> 的 <see cref="T:System.Windows.Forms.DataGridView" /> 属性的值为 <see langword="null" />。 例如，当控件不处于编辑模式时，就会出现这种情况。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EditingControl" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EditingPanel" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.PositionEditingControl(System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.EditType" />
      </Docs>
    </Member>
    <Member MemberName="Displayed">
      <MemberSignature Language="C#" Value="public virtual bool Displayed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Displayed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Displayed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Displayed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Displayed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示当前该单元格是否显示在屏幕上。</summary>
        <value>
          如果单元格显示在屏幕上或部分显示在屏幕上，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性来确定特定的单元格是否已被滚动到屏幕之外。  
  
 如果该单元格的<xref:System.Windows.Forms.DataGridViewCell.Visible%2A>属性值是`false`，此属性将返回`false`以及。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Visible" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>释放由 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 占用的资源。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>释放由 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 使用的所有资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在完成使用 <xref:System.Windows.Forms.DataGridViewCell.Dispose%2A> 后，应调用 <xref:System.Windows.Forms.DataGridViewCell>。 <xref:System.Windows.Forms.DataGridViewCell.Dispose%2A> 方法使 <xref:System.Windows.Forms.DataGridViewCell> 处于不可用状态。 在调用<xref:System.Windows.Forms.DataGridViewCell.Dispose%2A>，必须释放对所有引用<xref:System.Windows.Forms.DataGridViewCell>以便垃圾回收器才能回收的内存，<xref:System.Windows.Forms.DataGridViewCell>占用。 有关详细信息，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。  
  
> [!NOTE]
>  每次释放对 <xref:System.Windows.Forms.DataGridViewCell.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.Windows.Forms.DataGridViewCell>。 否则，在垃圾回收器调用 <xref:System.Windows.Forms.DataGridViewCell> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
        <summary>释放由 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法称为由公共`Dispose`方法和<xref:System.Object.Finalize%2A>方法。 `Dispose` 调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。 <xref:System.Object.Finalize%2A> 调用`Dispose`与`disposing`设置为`false`。  
  
 当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.Windows.Forms.DataGridViewCell> 引用的、由任何托管对象持有的全部资源。 此方法调用每个引用对象的 `Dispose` 方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> 可以由其他对象多次调用。 在重写<see langword="Dispose(Boolean)" />请注意不要引用已释放的以前调用中的对象<see langword="Dispose" />。 有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。  
  
 有关详细信息<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[重写 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="DoubleClickUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool DoubleClickUnsharesRow (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool DoubleClickUnsharesRow(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.DoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DoubleClickUnsharesRow (e As DataGridViewCellEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool DoubleClickUnsharesRow(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">一个 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />，它包含传递给 <see cref="M:System.Windows.Forms.DataGridViewCell.OnDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> 方法的数据。</param>
        <summary>指示在双击单元格时，是否对该单元格所在的行取消共享。</summary>
        <returns>
          如果不共享该行，则为 <see langword="true" />；否则为 <see langword="false" />。 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 基类总是返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.DoubleClickUnsharesRow%2A>之前调用方法<xref:System.Windows.Forms.DataGridViewCell.OnDoubleClick%2A>方法。 它必须返回`true`如果调用<xref:System.Windows.Forms.DataGridViewCell.OnDoubleClick%2A>起的单元格的行取消共享状态。 否则，它应返回`false`。  
  
 有关行共享的详细信息，请参阅[缩放 Windows 窗体 DataGridView 控件的最佳做法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="EditedFormattedValue">
      <MemberSignature Language="C#" Value="public object EditedFormattedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EditedFormattedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.EditedFormattedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditedFormattedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ EditedFormattedValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取该单元格的当前格式化值，而不考虑该单元格是否处于编辑模式，也不论是否尚未提交此值。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewCell" /> 的当前格式化值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性返回的单元格的当前值，或编辑控件，如果单元格处于编辑模式。 否则，获取此属性的值单元格将的值转换为等效的显示值的类型由指示<xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A>属性。 这就提高了<xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType>事件，你可以处理自定义值的转换。  
  
 如果格式设置不成功，<xref:System.Windows.Forms.DataGridView.DataError?displayProperty=nameWithType>事件发生。 如果没有为此事件或处理程序集的处理程序<xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=nameWithType>属性`true`，将引发异常。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.DataGridViewCell.EditedFormattedValue%2A>属性。 在此示例中，<xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A>属性用于确定是否已编辑但不会提交当前单元格的内容，如果已修改该单元格，则使用编辑的值。 此示例摘自更大的示例中提供<xref:System.Windows.Forms.DataGridView.SelectionChanged?displayProperty=nameWithType>事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">包含该单元格的行是共享行。  
  
 或  
  
 该单元格是列标题单元格。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> 小于 0，这表示该单元格为行标头单元格。</exception>
        <exception cref="T:System.Exception">格式化失败，这是由于 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 控件的 <see cref="T:System.Windows.Forms.DataGridView" /> 事件无处理程序或处理程序将 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 属性设置为 <see langword="true" /> 而引起的。 通常情况下，可将该异常对象强制转换为类型  <see cref="T:System.FormatException" />。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="EditType">
      <MemberSignature Language="C#" Value="public virtual Type EditType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EditType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.EditType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EditType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ EditType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取单元格的寄宿编辑控件的类型。</summary>
        <value>表示 <see cref="T:System.Type" /> 类型的 <see cref="T:System.Windows.Forms.DataGridViewTextBoxEditingControl" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生的单元格类型重写此属性以返回其托管的编辑控件的类型。 如果该单元格不具有编辑控件，与<xref:System.Windows.Forms.DataGridViewButtonCell>、<xref:System.Windows.Forms.DataGridViewCell.EditType%2A>属性返回`null`。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Windows.Forms.DataGridViewCell.EditType%2A>中的属性`CalendarCell`派生自的类<xref:System.Windows.Forms.DataGridViewTextBoxCell>。 此示例摘自中提供更大的代码示例[如何： 在 Windows 窗体 DataGridView 单元格的主机控件](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#200](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#200)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#200](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#200)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.IDataGridViewEditingControl" />
        <altmember cref="T:System.Windows.Forms.DataGridViewButtonCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.EditType" />
      </Docs>
    </Member>
    <Member MemberName="EnterUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool EnterUnsharesRow (int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool EnterUnsharesRow(int32 rowIndex, bool throughMouseClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.EnterUnsharesRow(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EnterUnsharesRow (rowIndex As Integer, throughMouseClick As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool EnterUnsharesRow(int rowIndex, bool throughMouseClick);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="throughMouseClick" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">该单元格的父行索引。</param>
        <param name="throughMouseClick">
          如果用户操作将焦点移至该单元格，则为 <see langword="true" />；如果编程操作将焦点移至该单元格，则为 <see langword="false" />。</param>
        <summary>指示在焦点移到某单元格时，是否对相应父行取消共享。</summary>
        <returns>
          如果不共享该行，则为 <see langword="true" />；否则为 <see langword="false" />。 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 基类总是返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.EnterUnsharesRow%2A>之前调用方法<xref:System.Windows.Forms.DataGridViewCell.OnEnter%2A>方法。 它必须返回`true`如果调用<xref:System.Windows.Forms.DataGridViewCell.OnEnter%2A>的取消共享已包含该单元格的行的效果。 否则，它应返回`false`。  
  
 有关行共享的详细信息，请参阅[缩放 Windows 窗体 DataGridView 控件的最佳做法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnEnter(System.Int32,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnLeave(System.Int32,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ErrorIconBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ErrorIconBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ErrorIconBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ErrorIconBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorIconBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle ErrorIconBounds { System::Drawing::Rectangle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取单元格的错误图标的界限。</summary>
        <value>
          <see cref="T:System.Drawing.Rectangle" />，它表示当前 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 的错误图标的界限。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回的矩形报告客户端坐标，以像素为单位。  
  
 当<xref:System.Windows.Forms.DataGridView.ShowCellErrors%2A?displayProperty=nameWithType>属性是`false`，此属性的值是<xref:System.Drawing.Rectangle.Empty>。  
  
 此属性调用<xref:System.Windows.Forms.DataGridViewCell.GetErrorIconBounds%2A>方法以获取其值。 基<xref:System.Windows.Forms.DataGridViewCell>类型，此值始终是<xref:System.Drawing.Rectangle.Empty>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">该单元格不属于 <see cref="T:System.Windows.Forms.DataGridView" /> 控件。  
  
 或  
  
 <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> 小于 0，这表示该单元格为行标头单元格。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">包含该单元格的行是共享行。  
  
 或  
  
 该单元格是列标题单元格。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="ErrorText">
      <MemberSignature Language="C#" Value="public string ErrorText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ErrorText" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置描述与该单元格关联的错误条件的文本。</summary>
        <value>描述与该单元格关联的错误条件的文本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常情况下，<xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A>处理时使用属性<xref:System.Windows.Forms.DataGridView.CellValidating>事件<xref:System.Windows.Forms.DataGridView>。 如果该单元格的值失败某些验证条件，设置<xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A>属性和取消提交操作通过设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性<xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs>到`true`。 然后显示你指定的文本<xref:System.Windows.Forms.DataGridView>，并且提示用户以在单元格的数据中修复的错误。  
  
 当<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>属性<xref:System.Windows.Forms.DataGridView>是`true`，你可以提供错误文本的行和单元格使用<xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>和<xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded>事件。  
  
 分配一个不同<xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A>字符串保存到一个单元格，<xref:System.Windows.Forms.DataGridView.CellErrorTextChanged>事件<xref:System.Windows.Forms.DataGridView>引发控件。  
  
 从.NET Framework 4.5.2 开始，错误图标的调整大小取决于系统 DPI 设置时 app.config 文件包含以下条目：  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
```  
  
   
  
## Examples  
 下面的代码示例演示如何使用此属性时处理错误条件中未绑定<xref:System.Windows.Forms.DataGridView>。 `AnnotateCell`方法将错误消息字符串设置为<xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A>属性。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#9)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValidatingEventArgs" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValidating" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellErrorTextChanged" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~DataGridViewCell ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!DataGridViewCell ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在使用“垃圾回收”回收 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 之前，释放非托管资源并执行其他清理操作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法调用<xref:System.Windows.Forms.DataGridViewCell.Dispose%2A>方法替换`false`作为参数。  
  
 此方法重写 <xref:System.Object.Finalize%2A>。 应用程序代码不应调用此方法。对象的`Finalize`方法过程中将自动调用垃圾回收，除非已通过调用禁用垃圾回收器的终止<xref:System.GC.SuppressFinalize%2A>方法。  
  
 有关详细信息，请参阅[Finalize 方法和析构函数](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)，[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)，和[重写 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="FormattedValue">
      <MemberSignature Language="C#" Value="public object FormattedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormattedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormattedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormattedValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取为显示进行格式化的单元格的值。</summary>
        <value>单元格的格式化值；如果该单元格不属于 <see cref="T:System.Windows.Forms.DataGridView" /> 控件，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.Value%2A>属性是由单元格，包含的实际数据对象，而<xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A>是此对象的格式的表示。 <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>和<xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A>属性分别对应于这些值的数据类型。  
  
 获取此属性的值调用<xref:System.Windows.Forms.DataGridViewCell.GetFormattedValue%2A>方法将单元格的值转换为等效的显示值的类型由指示<xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A>属性。 这就提高了<xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType>事件，你可以处理自定义值的转换。  
  
 如果格式设置不成功，<xref:System.Windows.Forms.DataGridView.DataError?displayProperty=nameWithType>事件发生。 如果没有为此事件或处理程序集的处理程序<xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=nameWithType>属性`true`，将引发异常。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A>属性。 在此示例中，<xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A>属性用于确定是否已编辑但不会提交当前单元格的内容，如果已修改该单元格，<xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A>使用。 此示例摘自更大的示例中提供<xref:System.Windows.Forms.DataGridView.SelectionChanged?displayProperty=nameWithType>事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> 小于 0，这表示该单元格为行标头单元格。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">包含该单元格的行是共享行。  
  
 或  
  
 该单元格是列标题单元格。</exception>
        <exception cref="T:System.Exception">格式化失败，这是由于 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 控件的 <see cref="T:System.Windows.Forms.DataGridView" /> 事件无处理程序或处理程序将 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 属性设置为 <see langword="true" /> 而引起的。 通常情况下，可将该异常对象强制转换为类型  <see cref="T:System.FormatException" />。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
        <altmember cref="T:System.Windows.Forms.IDataGridViewEditingControl" />
      </Docs>
    </Member>
    <Member MemberName="FormattedValueType">
      <MemberSignature Language="C#" Value="public virtual Type FormattedValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type FormattedValueType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FormattedValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ FormattedValueType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与单元格关联的格式化值的类型。</summary>
        <value>一个 <see cref="T:System.Type" />，它表示单元格格式化值的类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.Value%2A>属性是由单元格，包含的实际数据对象，而<xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A>属性是格式化的数据表示形式。 <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>和<xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A>属性分别对应于这些值的数据类型。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A>属性来确定在单元格内容的类型。 在此示例中，<xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A>属性用于确定该单元格是否包含<xref:System.String>尝试将该值转换前。 此示例摘自更大的示例中提供<xref:System.Windows.Forms.DataGridView.SelectionChanged?displayProperty=nameWithType>事件。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
      </Docs>
    </Member>
    <Member MemberName="Frozen">
      <MemberSignature Language="C#" Value="public virtual bool Frozen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Frozen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Frozen" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Frozen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Frozen { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取指示单元格是否已被冻结的值。</summary>
        <value>
          如果该单元格已被冻结，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Windows.Forms.DataGridViewCell.Frozen%2A>属性依赖于该单元格的父行和列的状态。 如果`Frozen`的行或列的属性设置为`true`，该单元格的<xref:System.Windows.Forms.DataGridViewCell.Frozen%2A>属性也将`true`。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Frozen" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.Frozen" />
      </Docs>
    </Member>
    <Member MemberName="GetClipboardContent">
      <MemberSignature Language="C#" Value="protected virtual object GetClipboardContent (int rowIndex, bool firstCell, bool lastCell, bool inFirstRow, bool inLastRow, string format);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetClipboardContent(int32 rowIndex, bool firstCell, bool lastCell, bool inFirstRow, bool inLastRow, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetClipboardContent(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetClipboardContent (rowIndex As Integer, firstCell As Boolean, lastCell As Boolean, inFirstRow As Boolean, inLastRow As Boolean, format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetClipboardContent(int rowIndex, bool firstCell, bool lastCell, bool inFirstRow, bool inLastRow, System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="firstCell" Type="System.Boolean" />
        <Parameter Name="lastCell" Type="System.Boolean" />
        <Parameter Name="inFirstRow" Type="System.Boolean" />
        <Parameter Name="inLastRow" Type="System.Boolean" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rowIndex">包含该单元格的行从零开始的索引。</param>
        <param name="firstCell">
          若单元格位于由选定单元格定义的区域的第一列，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="lastCell">
          若单元格位于由选定单元格定义的区域的最后一列，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="inFirstRow">
          若单元格位于由选定单元格定义的区域的第一行，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="inLastRow">
          如果该单元格位于选定单元格所定义区域内的最后一行中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="format">单元格的当前格式字符串。</param>
        <summary>检索要复制到 <see cref="T:System.Windows.Forms.Clipboard" /> 的单元格的已设置格式的值。</summary>
        <returns>
          <see cref="T:System.Object" />，它表示要复制到 <see cref="T:System.Windows.Forms.Clipboard" /> 的单元格的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法<xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A?displayProperty=nameWithType>方法来检索表示单元格的值的剪贴板格式的值。  
  
 单元格的值第一次检索中的显示格式<xref:System.Windows.Forms.DataGridViewCell.GetEditedFormattedValue%2A>方法。 这可能会引起<xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType>事件来设置值的格式和<xref:System.Windows.Forms.DataGridView.DataError?displayProperty=nameWithType>格式化失败时的事件。  
  
 此方法的位置相关参数指示此单元格表示定义中的所选单元格的区域的数据的表中的位置<xref:System.Windows.Forms.DataGridView>控件。 根据单元格的位置中，此方法的显示格式的单元值以及可能返回附加格式设置信息。 例如，某一行的第一列中的单元格的 HTML 格式将包括标记，该值指示行的开头。  
  
 支持的剪贴板格式包括<xref:System.Windows.Forms.DataFormats.Text?displayProperty=nameWithType>， <xref:System.Windows.Forms.DataFormats.UnicodeText?displayProperty=nameWithType>， <xref:System.Windows.Forms.DataFormats.Html?displayProperty=nameWithType>，和<xref:System.Windows.Forms.DataFormats.CommaSeparatedValue?displayProperty=nameWithType>。  
  
 有关更多信息，请参见 <xref:System.Windows.Forms.Clipboard> 类。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> 小于 0 或大于等于控件中的行数。</exception>
        <exception cref="T:System.InvalidOperationException">单元格的 <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> 属性的值是 <see langword="null" />。  
  
 或  
  
 <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> 小于 0，这表示该单元格为行标头单元格。</exception>
        <exception cref="T:System.Exception">格式化失败，这是由于 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 控件的 <see cref="T:System.Windows.Forms.DataGridView" /> 事件无处理程序或处理程序将 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 属性设置为 <see langword="true" /> 而引起的。 通常情况下，可将该异常对象强制转换为类型  <see cref="T:System.FormatException" />。</exception>
        <block subset="none" type="overrides">
          <para>重写此方法以提供自定义的剪贴板值。 例如，你无法重写此方法以支持从自定义单元格类型的复制值。</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ClipboardCopyMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetContentBounds">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>返回环绕单元格的内容区域的边框。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetContentBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetContentBounds (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetContentBounds(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetContentBounds(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContentBounds (rowIndex As Integer) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetContentBounds(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">该单元格的父行索引。</param>
        <summary>使用默认的 <see cref="T:System.Drawing.Graphics" /> 和单元格当前应用的单元格样式，返回围绕单元格内容区域的边框。</summary>
        <returns>限定单元格内容区域的 <see cref="T:System.Drawing.Rectangle" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在调用此方法时，将动态计算单元格的内容的大小。 基类实现始终返回<xref:System.Drawing.Rectangle.Empty?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的 <paramref name="rowIndex" /> 小于 0，或大于控件中的行数减 1。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> 小于 0，这表示该单元格为行标头单元格。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="GetContentBounds">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle GetContentBounds (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Rectangle GetContentBounds(class System.Drawing.Graphics graphics, class System.Windows.Forms.DataGridViewCellStyle cellStyle, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetContentBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Rectangle GetContentBounds(System::Drawing::Graphics ^ graphics, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics">单元格的图形上下文。</param>
        <param name="cellStyle">要对单元格应用的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</param>
        <param name="rowIndex">该单元格的父行索引。</param>
        <summary>返回围绕单元格内容区域的边框，该区域是使用指定的 <see cref="T:System.Drawing.Graphics" /> 和单元格样式计算的。</summary>
        <returns>限定单元格内容区域的 <see cref="T:System.Drawing.Rectangle" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在调用此方法时，将动态计算单元格的内容的大小。 基类实现始终返回<xref:System.Drawing.Rectangle.Empty?displayProperty=nameWithType>。  
  
 当在内部调用此方法<xref:System.Windows.Forms.DataGridViewCell.ContentBounds%2A>属性为只读。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ContentBounds" />
      </Docs>
    </Member>
    <Member MemberName="GetEditedFormattedValue">
      <MemberSignature Language="C#" Value="public object GetEditedFormattedValue (int rowIndex, System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetEditedFormattedValue(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetEditedFormattedValue(System.Int32,System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEditedFormattedValue (rowIndex As Integer, context As DataGridViewDataErrorContexts) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetEditedFormattedValue(int rowIndex, System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="rowIndex">单元格的行索引。</param>
        <param name="context">
          <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> 值的按位组合，用于指定数据错误上下文。</param>
        <summary>返回该单元格的当前格式化值，而不考虑该单元格是否处于编辑模式，也无论是否尚未提交此值。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.DataGridViewCell" /> 的当前格式化值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法返回编辑单元格的当前值，或编辑控件，如果单元格处于编辑模式。 否则，此方法将单元格的值转换为等效的显示值的类型由指示<xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A>属性。 这就提高了<xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType>事件，你可以处理自定义值的转换。  
  
 如果格式设置不成功，<xref:System.Windows.Forms.DataGridView.DataError?displayProperty=nameWithType>事件发生。 如果没有为此事件或处理程序集的处理程序<xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=nameWithType>属性`true`，将引发异常。  
  
 重写此方法的派生的类通常将返回的字符串表示形式单元格的值，如果`context`自变量包含<xref:System.Windows.Forms.DataGridViewDataErrorContexts.ClipboardContent>值。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的 <paramref name="rowIndex" /> 小于 0，或大于控件中的行数减 1。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> 小于 0，这表示该单元格为行标头单元格。</exception>
        <exception cref="T:System.Exception">格式化失败，这是由于 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 控件的 <see cref="T:System.Windows.Forms.DataGridView" /> 事件无处理程序或处理程序将 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 属性设置为 <see langword="true" /> 而引起的。 通常情况下，可将该异常对象强制转换为类型  <see cref="T:System.FormatException" />。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorIconBounds">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle GetErrorIconBounds (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Rectangle GetErrorIconBounds(class System.Drawing.Graphics graphics, class System.Windows.Forms.DataGridViewCellStyle cellStyle, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Rectangle GetErrorIconBounds(System::Drawing::Graphics ^ graphics, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics">单元格的图形上下文。</param>
        <param name="cellStyle">要对单元格应用的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</param>
        <param name="rowIndex">该单元格的父行索引。</param>
        <summary>如果显示了单元格的错误图标，则返回环绕该图标的边框。</summary>
        <returns>如果显示了单元格的错误图标，则为包围该图标的 <see cref="T:System.Drawing.Rectangle" />；否则为 <see cref="F:System.Drawing.Rectangle.Empty" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在调用此方法时，将动态计算单元格的错误图标区域的大小。 基类实现始终返回<xref:System.Drawing.Rectangle.Empty?displayProperty=nameWithType>。  
  
 当在内部调用此方法<xref:System.Windows.Forms.DataGridViewCell.ErrorIconBounds%2A>属性为只读。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ErrorIconBounds" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorText">
      <MemberSignature Language="C#" Value="protected internal virtual string GetErrorText (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetErrorText(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetErrorText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetErrorText (rowIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetErrorText(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">单元格的行索引。</param>
        <summary>返回表示单元格错误的字符串。</summary>
        <returns>描述当前 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 的错误的字符串。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="GetFormattedValue">
      <MemberSignature Language="C#" Value="protected virtual object GetFormattedValue (object value, int rowIndex, ref System.Windows.Forms.DataGridViewCellStyle cellStyle, System.ComponentModel.TypeConverter valueTypeConverter, System.ComponentModel.TypeConverter formattedValueTypeConverter, System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetFormattedValue(object value, int32 rowIndex, class System.Windows.Forms.DataGridViewCellStyle&amp; cellStyle, class System.ComponentModel.TypeConverter valueTypeConverter, class System.ComponentModel.TypeConverter formattedValueTypeConverter, valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetFormattedValue (value As Object, rowIndex As Integer, ByRef cellStyle As DataGridViewCellStyle, valueTypeConverter As TypeConverter, formattedValueTypeConverter As TypeConverter, context As DataGridViewDataErrorContexts) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetFormattedValue(System::Object ^ value, int rowIndex, System::Windows::Forms::DataGridViewCellStyle ^ % cellStyle, System::ComponentModel::TypeConverter ^ valueTypeConverter, System::ComponentModel::TypeConverter ^ formattedValueTypeConverter, System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle&amp;" RefType="ref" />
        <Parameter Name="valueTypeConverter" Type="System.ComponentModel.TypeConverter" />
        <Parameter Name="formattedValueTypeConverter" Type="System.ComponentModel.TypeConverter" />
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="value">要格式化的值。</param>
        <param name="rowIndex">该单元格的父行索引。</param>
        <param name="cellStyle">对单元格有效的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</param>
        <param name="valueTypeConverter">与值类型关联的 <see cref="T:System.ComponentModel.TypeConverter" />，它提供到格式化值类型的自定义转换；如果不需要此类自定义转换，则为 <see langword="null" />。</param>
        <param name="formattedValueTypeConverter">与格式化值类型相关联的 <see cref="T:System.ComponentModel.TypeConverter" />，它提供从该值类型进行的自定义转换；如果不需要这种自定义转换，则为 <see langword="null" />。</param>
        <param name="context">
          <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> 值的按位组合，用于描述需要格式化值的上下文。</param>
        <summary>获取为显示进行格式化的单元格的值。</summary>
        <returns>单元格的格式化值；如果该单元格不属于 <see cref="T:System.Windows.Forms.DataGridView" /> 控件，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>控件调用此方法将一个单元格值转换为等效的显示值的类型由指示<xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A>属性。 控件将单元格的值传递给此方法在`value`参数。  
  
 此方法将引发<xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType>事件。 此事件的处理程序可以同时修改`value`和`cellStyle`参数。 如果处理程序不会设置<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType>属性`true`，但是，此方法设置的格式`value`使用的格式设置属性`cellStyle`对象。  
  
> [!NOTE]
>  此方法不转换`value`到<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A?displayProperty=nameWithType>属性值的值等于<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A?displayProperty=nameWithType>属性值时<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>设置一个值为非<xref:System.DBNull.Value?displayProperty=nameWithType>或`null`。 在这种情况下，你可以处理<xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType>事件以显示<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>属性值。 有关详细信息，请参阅中的代码示例<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>。  
  
 如果格式设置不成功，<xref:System.Windows.Forms.DataGridView.DataError>事件发生。 如果没有为此事件或处理程序集的处理程序<xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=nameWithType>属性`true`，将引发异常。  
  
 重写此方法的派生的类通常将返回的字符串表示形式单元格的值，如果`context`自变量包含<xref:System.Windows.Forms.DataGridViewDataErrorContexts.ClipboardContent>值。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">格式化失败，这是由于 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 控件的 <see cref="T:System.Windows.Forms.DataGridView" /> 事件无处理程序或处理程序将 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 属性设置为 <see langword="true" /> 而引起的。 通常情况下，可将该异常对象强制转换为类型  <see cref="T:System.FormatException" />。</exception>
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
        <altmember cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)" />
      </Docs>
    </Member>
    <Member MemberName="GetInheritedContextMenuStrip">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenuStrip GetInheritedContextMenuStrip (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ContextMenuStrip GetInheritedContextMenuStrip(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetInheritedContextMenuStrip(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInheritedContextMenuStrip (rowIndex As Integer) As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ContextMenuStrip ^ GetInheritedContextMenuStrip(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">当前单元格的行索引。</param>
        <summary>获取当前单元格的继承快捷菜单。</summary>
        <returns>如果向父 <see cref="T:System.Windows.Forms.ContextMenuStrip" />、<see cref="T:System.Windows.Forms.DataGridView" /> 或 <see cref="T:System.Windows.Forms.DataGridViewRow" /> 分配了 <see cref="T:System.Windows.Forms.DataGridViewColumn" />，则为 <see cref="T:System.Windows.Forms.ContextMenuStrip" />；否则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果没有一个关联的单元格<xref:System.Windows.Forms.ContextMenuStrip>，它将继承其父项，使用以下优先顺序中的一个：  
  
1.  此单元格的 <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A>  
  
2.  所属行 <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A?displayProperty=nameWithType>  
  
3.  所属列 <xref:System.Windows.Forms.DataGridViewColumn.ContextMenuStrip%2A?displayProperty=nameWithType>  
  
4.  父表的 <xref:System.Windows.Forms.ContextMenuStrip?displayProperty=nameWithType>  
  
 快捷菜单是 Microsoft Windows 本机资源通常指示其生存期<xref:System.Windows.Forms.DataGridViewCell.Dispose%2A>方法或析构函数。  
  
 传递<xref:System.Windows.Forms.DataGridViewCell.GetInheritedContextMenuStrip%2A>方法用于检索的行索引<xref:System.Windows.Forms.DataGridViewCell>。 不要使用<xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A>属性`rowIndex`参数。 如果该行处于共享状态，<xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A>为-1，不是有效的值为`rowIndex`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">该单元格的 <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> 属性的值不为 <see langword="null" />，并且指定的 <paramref name="rowIndex" /> 小于 0 或大于控件中的行数减 1。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> 小于 0，这表示该单元格为行标头单元格。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ContextMenuStrip" />
        <altmember cref="P:System.Windows.Forms.Control.ContextMenuStrip" />
        <altmember cref="T:System.Windows.Forms.ContextMenuStrip" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
      </Docs>
    </Member>
    <Member MemberName="GetInheritedState">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewElementStates GetInheritedState (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Forms.DataGridViewElementStates GetInheritedState(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetInheritedState(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInheritedState (rowIndex As Integer) As DataGridViewElementStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewElementStates GetInheritedState(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewElementStates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">包含该单元格的行的索引。</param>
        <summary>返回一个值，该值指示此单元格从它的行和列的状态继承后的当前状态。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> 值的按位组合，表示单元格的当前状态。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法可用于确定一个共享行中的单元格的状态。 共享的行具有<xref:System.Windows.Forms.DataGridViewBand.Index%2A>值-1，使您无法使用<xref:System.Windows.Forms.DataGridViewCell.InheritedState%2A>具有共享行中的单元属性。 若要使用此方法，传递的实际包含此单元格的行的索引中。 您可以通过调用来检索一个共享行的实际索引<xref:System.Windows.Forms.DataGridViewRowCollection.IndexOf%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">该单元格不包含在 <see cref="T:System.Windows.Forms.DataGridView" /> 控件中，且 <paramref name="rowIndex" /> 不为 -1。  
  
 或  
  
 <paramref name="rowIndex" /> 不是包含此单元格的行的索引。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">该单元格包含在 <see cref="T:System.Windows.Forms.DataGridView" /> 控件中，且 <paramref name="rowIndex" /> 不在有效范围（从 0 至控件中的行数减 1）内。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="GetInheritedStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewCellStyle GetInheritedStyle (System.Windows.Forms.DataGridViewCellStyle inheritedCellStyle, int rowIndex, bool includeColors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.DataGridViewCellStyle GetInheritedStyle(class System.Windows.Forms.DataGridViewCellStyle inheritedCellStyle, int32 rowIndex, bool includeColors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetInheritedStyle(System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInheritedStyle (inheritedCellStyle As DataGridViewCellStyle, rowIndex As Integer, includeColors As Boolean) As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewCellStyle ^ GetInheritedStyle(System::Windows::Forms::DataGridViewCellStyle ^ inheritedCellStyle, int rowIndex, bool includeColors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inheritedCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="includeColors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inheritedCellStyle">将使用继承的单元格样式填充的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</param>
        <param name="rowIndex">该单元格的父行索引。</param>
        <param name="includeColors">
          如果在返回的单元格样式中包括继承的颜色，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>获取应用于单元格的样式。</summary>
        <returns>一个 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />，它包括从单元格的父行、父列和父 <see cref="T:System.Windows.Forms.DataGridView" /> 继承而来的单元格样式设置。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法返回<xref:System.Windows.Forms.DataGridViewCellStyle>继承从其设置<xref:System.Windows.Forms.DataGridViewCellStyle>对象的单元格的父行、 列和<xref:System.Windows.Forms.DataGridView>。 有关详细信息，请参阅[在 Windows 窗体 DataGridView 控件中的单元格样式](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">该单元格无关联的 <see cref="T:System.Windows.Forms.DataGridView" />。  
  
 或  
  
 <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> 小于 0，这表示该单元格为行标头单元格。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> 小于 0，或大于等于父 <see cref="T:System.Windows.Forms.DataGridView" /> 中的行数。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.HasStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Style" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size GetPreferredSize (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex, System.Drawing.Size constraintSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Size GetPreferredSize(class System.Drawing.Graphics graphics, class System.Windows.Forms.DataGridViewCellStyle cellStyle, int32 rowIndex, valuetype System.Drawing.Size constraintSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Size GetPreferredSize(System::Drawing::Graphics ^ graphics, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, int rowIndex, System::Drawing::Size constraintSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="constraintSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="graphics">用于绘制单元格的 <see cref="T:System.Drawing.Graphics" />。</param>
        <param name="cellStyle">表示单元格样式的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</param>
        <param name="rowIndex">单元格的从零开始的行索引。</param>
        <param name="constraintSize">单元格允许的最大大小。</param>
        <summary>计算单元格的首选大小（以像素为单位）。</summary>
        <returns>表示单元格的首选大小的 <see cref="T:System.Drawing.Size" />（以像素为单位）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.GetPreferredSize%2A>基类中的方法<xref:System.Windows.Forms.DataGridViewCell>始终返回<xref:System.Drawing.Size>，其宽度和高度为-1。 但是，重写此方法中派生的单元格类，来返回适当的值。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="GetSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size GetSize (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Size GetSize(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetSize(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSize (rowIndex As Integer) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Size GetSize(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">该单元格的父行索引。</param>
        <summary>获取单元格的大小。</summary>
        <returns>
          <see cref="T:System.Drawing.Size" />，它表示单元格的维数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法不能用于一个共享行中的单元格。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="rowIndex" /> 为 -1</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected virtual object GetValue (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetValue(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetValue (rowIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetValue(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">该单元格的父行索引。</param>
        <summary>获取单元格的值。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.DataGridViewCell" /> 中包含的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 传递<xref:System.Windows.Forms.DataGridViewCell.GetValue%2A>方法用于检索的行索引<xref:System.Windows.Forms.DataGridViewCell>。 不要使用<xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A>属性`rowIndex`参数。 如果该行处于共享状态，<xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A>为-1，不是有效的值为`rowIndex`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">单元格的 <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> 属性值不是 <see langword="null" />，而且 <paramref name="rowIndex" /> 小于 0 或者大于或等于父 <see cref="T:System.Windows.Forms.DataGridView" /> 中的行数。</exception>
        <exception cref="T:System.InvalidOperationException">该单元格的 <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> 属性的值不为 <see langword="null" />，并且<see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> 属性的值小于 0，这表示该单元格为行标头单元格。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="HasStyle">
      <MemberSignature Language="C#" Value="public bool HasStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.HasStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasStyle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasStyle { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取指示是否已设置 <see cref="P:System.Windows.Forms.DataGridViewCell.Style" /> 属性的值。</summary>
        <value>
          如果已设置 <see cref="P:System.Windows.Forms.DataGridViewCell.Style" /> 属性，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 获取的值<xref:System.Windows.Forms.DataGridViewCell.Style%2A>属性自动实例化一个新<xref:System.Windows.Forms.DataGridViewCellStyle>如果以前未访问属性。 因此，你必须使用<xref:System.Windows.Forms.DataGridViewCell.HasStyle%2A>属性来确定是否<xref:System.Windows.Forms.DataGridViewCell.Style%2A>属性当前设置为<xref:System.Windows.Forms.DataGridViewCellStyle>实例。 这可用于确定该对象的哪些属性由<xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A>属性表示专门设置单元格的样式。  
  
 有关单元格样式继承的详细信息，请参阅[在 Windows 窗体 DataGridView 控件中的单元格样式](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetInheritedStyle(System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Style" />
      </Docs>
    </Member>
    <Member MemberName="InheritedState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewElementStates InheritedState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewElementStates InheritedState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.InheritedState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InheritedState As DataGridViewElementStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewElementStates InheritedState { System::Windows::Forms::DataGridViewElementStates get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewElementStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取该单元格从它的行和列的状态继承后的当前状态。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> 值的按位组合，表示单元格的当前状态。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">该单元格不包含在 <see cref="T:System.Windows.Forms.DataGridView" /> 控件中，且它的 <see cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" /> 属性的值不为 -1。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">该单元格包含 <see cref="T:System.Windows.Forms.DataGridView" /> 控件中，且它的 <see cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" /> 属性的值为 -1。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="InheritedStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle InheritedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle InheritedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InheritedStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ InheritedStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前应用于单元格的样式。</summary>
        <value>当前应用于单元格的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>控件将显示其使用指示的单元格的样式的单元格<xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A>属性，该类继承自其他类型的属性的样式<xref:System.Windows.Forms.DataGridViewCellStyle>。 通过指定的样式<xref:System.Windows.Forms.DataGridViewCell.Style%2A>属性重写所有其他单元格样式属性，可以通过指定的样式，但不是一定表示单元格的外观做出贡献的所有样式。  
  
 有关详细信息，请参阅[在 Windows 窗体 DataGridView 控件中的单元格样式](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">该单元格不属于 <see cref="T:System.Windows.Forms.DataGridView" /> 控件。  
  
 或  
  
 <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> 小于 0，这表示该单元格为行标头单元格。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">包含该单元格的行是共享行。  
  
 或  
  
 该单元格是列标题单元格。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetInheritedStyle(System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.HasStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Style" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="InitializeEditingControl">
      <MemberSignature Language="C#" Value="public virtual void InitializeEditingControl (int rowIndex, object initialFormattedValue, System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeEditingControl(int32 rowIndex, object initialFormattedValue, class System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeEditingControl(int rowIndex, System::Object ^ initialFormattedValue, System::Windows::Forms::DataGridViewCellStyle ^ dataGridViewCellStyle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="initialFormattedValue" Type="System.Object" />
        <Parameter Name="dataGridViewCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="rowIndex">单元格所在位置的从零开始的行索引。</param>
        <param name="initialFormattedValue">
          <see cref="T:System.Object" />，它表示在开始编辑时单元格显示的值。</param>
        <param name="dataGridViewCellStyle">表示单元格样式的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</param>
        <summary>初始化用于编辑单元格的控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 作为一优化技术，通常的所有单元格的相同类型和相同<xref:System.Windows.Forms.DataGridView>共享单个托管编辑控件。 但是，由的单元格使用该控件之前，它需要由初始化<xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A>方法。 第一次调用时，则此方法会将控件添加到其父代中的控件的编辑列表<xref:System.Windows.Forms.DataGridView>。 它还会初始化某些单元格的视觉属性。 例如，<xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A>设置要与提供的单元格样式参数匹配的编辑区域的背景色。 后续调用<xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A>不执行任何操作。  
  
 派生的类使用此方法来托管的实例<xref:System.Windows.Forms.Control>与其类型相对应的类。 例如，包含一个或多个表<xref:System.Windows.Forms.DataGridViewTextBoxCell>对象调用此方法可添加单个<xref:System.Windows.Forms.TextBox>编辑控件具有所有权的<xref:System.Windows.Forms.DataGridView>。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Windows.Forms.DataGridViewTextBoxCell.InitializeEditingControl%2A>派生自的简单类方法<xref:System.Windows.Forms.DataGridViewTextBoxCell>类。 此示例摘自中提供更大的代码示例[如何： 在 Windows 窗体 DataGridView 单元格的主机控件](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#200](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#200)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#200](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#200)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">不存在关联的 <see cref="T:System.Windows.Forms.DataGridView" />；如果它存在，则它不具有任何关联的编辑控件。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.DetachEditingControl" />
      </Docs>
    </Member>
    <Member MemberName="IsInEditMode">
      <MemberSignature Language="C#" Value="public bool IsInEditMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.IsInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInEditMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示此单元格当前是否处于编辑状态。</summary>
        <value>
          如果该单元格行处于编辑模式，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当直接处理单元格实例，此属性很有用。 此外，还可以使用 <xref:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode%2A?displayProperty=nameWithType> 属性。 你还可以处理<xref:System.Windows.Forms.DataGridView.CellBeginEdit?displayProperty=nameWithType>事件，以确定用户在进入编辑模式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">包含该单元格的行是共享行。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellBeginEdit" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool KeyDownUnsharesRow (System.Windows.Forms.KeyEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool KeyDownUnsharesRow(class System.Windows.Forms.KeyEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.KeyDownUnsharesRow(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function KeyDownUnsharesRow (e As KeyEventArgs, rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool KeyDownUnsharesRow(System::Windows::Forms::KeyEventArgs ^ e, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
        <param name="rowIndex">该单元格的父行索引。</param>
        <summary>指示在焦点位于单元格上，同时用户按任意键时，是否对父行取消共享。</summary>
        <returns>
          如果不共享该行，则为 <see langword="true" />；否则为 <see langword="false" />。 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 基类总是返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.KeyDownUnsharesRow%2A>之前调用方法<xref:System.Windows.Forms.DataGridViewCell.OnKeyDown%2A>方法。 它必须返回`true`如果调用<xref:System.Windows.Forms.DataGridViewCell.OnKeyDown%2A>具有相同<xref:System.Windows.Forms.KeyEventArgs>自变量具有取消共享已包含该单元格的行的效果。 否则，它应返回`false`。  
  
 有关行共享的详细信息，请参阅[缩放 Windows 窗体 DataGridView 控件的最佳做法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyPress(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="KeyEntersEditMode">
      <MemberSignature Language="C#" Value="public virtual bool KeyEntersEditMode (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool KeyEntersEditMode(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.KeyEntersEditMode(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function KeyEntersEditMode (e As KeyEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool KeyEntersEditMode(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">一个 <see cref="T:System.Windows.Forms.KeyEventArgs" />，表示按下的键。</param>
        <summary>确定是否应基于给定键启动编辑模式。</summary>
        <returns>
          如果应启动编辑模式，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 重写此方法以创建的自定义单元格，对其进行编辑。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="KeyPressUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool KeyPressUnsharesRow (System.Windows.Forms.KeyPressEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool KeyPressUnsharesRow(class System.Windows.Forms.KeyPressEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function KeyPressUnsharesRow (e As KeyPressEventArgs, rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool KeyPressUnsharesRow(System::Windows::Forms::KeyPressEventArgs ^ e, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.KeyPressEventArgs" />。</param>
        <param name="rowIndex">该单元格的父行索引。</param>
        <summary>指示在焦点位于该行的单元格上并同时按任意键时，是否取消行的共享。</summary>
        <returns>
          如果不共享该行，则为 <see langword="true" />；否则为 <see langword="false" />。 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 基类总是返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow%2A>之前调用方法<xref:System.Windows.Forms.DataGridViewCell.OnKeyPress%2A>方法。 在派生类中，它必须返回`true`如果调用<xref:System.Windows.Forms.DataGridViewCell.OnKeyPress%2A>的取消共享已包含该单元格的行的效果。 否则，它应返回`false`。  
  
 有关行共享的详细信息，请参阅[缩放 Windows 窗体 DataGridView 控件的最佳做法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyPress(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool KeyUpUnsharesRow (System.Windows.Forms.KeyEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool KeyUpUnsharesRow(class System.Windows.Forms.KeyEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.KeyUpUnsharesRow(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function KeyUpUnsharesRow (e As KeyEventArgs, rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool KeyUpUnsharesRow(System::Windows::Forms::KeyEventArgs ^ e, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
        <param name="rowIndex">该单元格的父行索引。</param>
        <summary>指示当焦点位于单元格上，同时用户释放某个键时，是否对父行取消共享。</summary>
        <returns>
          如果不共享该行，则为 <see langword="true" />；否则为 <see langword="false" />。 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 基类总是返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.KeyUpUnsharesRow%2A>之前调用方法<xref:System.Windows.Forms.DataGridViewCell.OnKeyUp%2A>方法。 它必须返回`true`如果调用<xref:System.Windows.Forms.DataGridViewCell.OnKeyUp%2A>具有相同<xref:System.Windows.Forms.KeyEventArgs>自变量具有取消共享已包含该单元格的行的效果。 否则，它应返回`false`。  
  
 有关行共享的详细信息，请参阅[缩放 Windows 窗体 DataGridView 控件的最佳做法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyPress(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="LeaveUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool LeaveUnsharesRow (int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LeaveUnsharesRow(int32 rowIndex, bool throughMouseClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.LeaveUnsharesRow(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LeaveUnsharesRow (rowIndex As Integer, throughMouseClick As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LeaveUnsharesRow(int rowIndex, bool throughMouseClick);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="throughMouseClick" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">该单元格的父行索引。</param>
        <param name="throughMouseClick">
          如果用户操作将焦点移至该单元格，则为 <see langword="true" />；如果编程操作将焦点移至该单元格，则为 <see langword="false" />。</param>
        <summary>指示在焦点离开某行的单元格时，是否对该行取消共享。</summary>
        <returns>
          如果不共享该行，则为 <see langword="true" />；否则为 <see langword="false" />。 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 基类总是返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.LeaveUnsharesRow%2A>之前调用方法<xref:System.Windows.Forms.DataGridViewCell.OnLeave%2A>方法。 它必须返回`true`如果调用<xref:System.Windows.Forms.DataGridViewCell.OnLeave%2A>的取消共享已包含该单元格的行的效果。 否则，它应返回`false`。  
  
 有关行共享的详细信息，请参阅[缩放 Windows 窗体 DataGridView 控件的最佳做法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnLeave(System.Int32,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MeasureTextHeight">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取指定文本的高度（以像素为单位）。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MeasureTextHeight">
      <MemberSignature Language="C#" Value="public static int MeasureTextHeight (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, int maxWidth, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MeasureTextHeight(class System.Drawing.Graphics graphics, string text, class System.Drawing.Font font, int32 maxWidth, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MeasureTextHeight(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int MeasureTextHeight(System::Drawing::Graphics ^ graphics, System::String ^ text, System::Drawing::Font ^ font, int maxWidth, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="maxWidth" Type="System.Int32" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="graphics">用于呈现文本的 <see cref="T:System.Drawing.Graphics" />。</param>
        <param name="text">要测量的文本。</param>
        <param name="font">应用于文本的 <see cref="T:System.Drawing.Font" />。</param>
        <param name="maxWidth">文本的最大宽度。</param>
        <param name="flags">要应用于文本的 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 值的按位组合。</param>
        <summary>根据指定的特性，获取指定文本的高度（以像素为单位）。</summary>
        <returns>文本的高度（以像素为单位）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果需要多个行，但指定的格式允许它，则返回的高度是所有行的组合的高度。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="graphics" /> 为 <see langword="null" />。  
  
 或  
  
 <paramref name="font" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxWidth" /> 小于 1。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="flags" /> 不是 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 值的有效按位组合。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="MeasureTextHeight">
      <MemberSignature Language="C#" Value="public static int MeasureTextHeight (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, int maxWidth, System.Windows.Forms.TextFormatFlags flags, out bool widthTruncated);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MeasureTextHeight(class System.Drawing.Graphics graphics, string text, class System.Drawing.Font font, int32 maxWidth, valuetype System.Windows.Forms.TextFormatFlags flags, [out] bool&amp; widthTruncated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MeasureTextHeight(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Windows.Forms.TextFormatFlags,System.Boolean@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int MeasureTextHeight(System::Drawing::Graphics ^ graphics, System::String ^ text, System::Drawing::Font ^ font, int maxWidth, System::Windows::Forms::TextFormatFlags flags, [Runtime::InteropServices::Out] bool % widthTruncated);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="maxWidth" Type="System.Int32" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
        <Parameter Name="widthTruncated" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="graphics">用于呈现文本的 <see cref="T:System.Drawing.Graphics" />。</param>
        <param name="text">要测量的文本。</param>
        <param name="font">应用于文本的 <see cref="T:System.Drawing.Font" />。</param>
        <param name="maxWidth">文本的最大宽度。</param>
        <param name="flags">要应用于文本的 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 值的按位组合。</param>
        <param name="widthTruncated">如果文本的所需宽度大于 <c>maxWidth</c>，则设置为 <see langword="true" />。</param>
        <summary>根据指定的特性，获取指定文本的高度（以像素为单位）。 它还指示所需宽度是否大于指定的最大宽度。</summary>
        <returns>文本的高度（以像素为单位）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果需要多个行，但指定的格式允许它，则返回的高度是所有行的组合的高度。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="graphics" /> 为 <see langword="null" />。  
  
 或  
  
 <paramref name="font" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxWidth" /> 小于 1。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="flags" /> 不是 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 值的有效按位组合。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="MeasureTextPreferredSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureTextPreferredSize (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, float maxRatio, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureTextPreferredSize(class System.Drawing.Graphics graphics, string text, class System.Drawing.Font font, float32 maxRatio, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MeasureTextPreferredSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Single,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureTextPreferredSize(System::Drawing::Graphics ^ graphics, System::String ^ text, System::Drawing::Font ^ font, float maxRatio, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="maxRatio" Type="System.Single" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="graphics">用于呈现文本的 <see cref="T:System.Drawing.Graphics" />。</param>
        <param name="text">要测量的文本。</param>
        <param name="font">应用于文本的 <see cref="T:System.Drawing.Font" />。</param>
        <param name="maxRatio">文本块宽度和高度的最大比率。</param>
        <param name="flags">要应用于文本的 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 值的按位组合。</param>
        <summary>根据指定的特性，获取指定文本的理想高度和宽度。</summary>
        <returns>
          <see cref="T:System.Drawing.Size" />，它表示文本的首选高度和宽度。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果需要多个行，但指定的格式允许，则返回的大小包括所有行的组合的高度。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="graphics" /> 为 <see langword="null" />。  
  
 或  
  
 <paramref name="font" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxRatio" /> 小于或等于 0。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="flags" /> 不是 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 值的有效按位组合。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="MeasureTextSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureTextSize (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureTextSize(class System.Drawing.Graphics graphics, string text, class System.Drawing.Font font, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MeasureTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureTextSize(System::Drawing::Graphics ^ graphics, System::String ^ text, System::Drawing::Font ^ font, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="graphics">用于呈现文本的 <see cref="T:System.Drawing.Graphics" />。</param>
        <param name="text">要测量的文本。</param>
        <param name="font">应用于文本的 <see cref="T:System.Drawing.Font" />。</param>
        <param name="flags">要应用于文本的 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 值的按位组合。</param>
        <summary>根据指定的特性，获取指定文本的高度和宽度。</summary>
        <returns>
          <see cref="T:System.Drawing.Size" />，它表示文本的高度和宽度。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果需要多个行，但指定的格式允许，则返回的大小包括所有行的组合的高度。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="graphics" /> 为 <see langword="null" />。  
  
 或  
  
 <paramref name="font" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="flags" /> 不是 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 值的有效按位组合。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="MeasureTextWidth">
      <MemberSignature Language="C#" Value="public static int MeasureTextWidth (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, int maxHeight, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MeasureTextWidth(class System.Drawing.Graphics graphics, string text, class System.Drawing.Font font, int32 maxHeight, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MeasureTextWidth(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int MeasureTextWidth(System::Drawing::Graphics ^ graphics, System::String ^ text, System::Drawing::Font ^ font, int maxHeight, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="maxHeight" Type="System.Int32" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="graphics">用于呈现文本的 <see cref="T:System.Drawing.Graphics" />。</param>
        <param name="text">要测量的文本。</param>
        <param name="font">应用于文本的 <see cref="T:System.Drawing.Font" />。</param>
        <param name="maxHeight">文本的最大高度。</param>
        <param name="flags">要应用于文本的 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 值的按位组合。</param>
        <summary>根据指定的特性，获取指定文本的宽度（以像素为单位）。</summary>
        <returns>文本的宽度（以像素为单位）。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="graphics" /> 为 <see langword="null" />。  
  
 或  
  
 <paramref name="font" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxHeight" /> 小于 1。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="flags" /> 不是 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 值的有效按位组合。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="MouseClickUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool MouseClickUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MouseClickUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MouseClickUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool MouseClickUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />。</param>
        <summary>指示在鼠标指针位于某行的单元格上，同时用户单击鼠标按钮时，是否应对该行取消共享。</summary>
        <returns>
          如果不共享该行，则为 <see langword="true" />；否则为 <see langword="false" />。 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 基类总是返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow%2A>之前调用方法<xref:System.Windows.Forms.DataGridViewCell.OnMouseClick%2A>方法。 它必须返回`true`如果调用<xref:System.Windows.Forms.DataGridViewCell.OnMouseClick%2A>的取消共享已包含该单元格的行的效果。 否则，它应返回`false`。  
  
 有关行共享的详细信息，请参阅[缩放 Windows 窗体 DataGridView 控件的最佳做法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClickUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool MouseDoubleClickUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MouseDoubleClickUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MouseDoubleClickUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool MouseDoubleClickUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />。</param>
        <summary>指示当用户双击行中的单元格时，是否将对该行取消共享。</summary>
        <returns>
          如果不共享该行，则为 <see langword="true" />；否则为 <see langword="false" />。 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 基类总是返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow%2A>之前调用方法<xref:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick%2A>方法。 它必须返回`true`如果调用<xref:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick%2A>的取消共享已包含该单元格的行的效果。 否则，它应返回`false`。  
  
 有关行共享的详细信息，请参阅[缩放 Windows 窗体 DataGridView 控件的最佳做法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="MouseDownUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool MouseDownUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MouseDownUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MouseDownUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool MouseDownUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />。</param>
        <summary>指示在指针位于行中某个单元格上，同时用户按住鼠标按钮时，是否对该行取消共享。</summary>
        <returns>
          如果不共享该行，则为 <see langword="true" />；否则为 <see langword="false" />。 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 基类总是返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow%2A>之前调用方法<xref:System.Windows.Forms.DataGridViewCell.OnMouseDown%2A>方法。 在派生类中，它必须返回`true`如果调用<xref:System.Windows.Forms.DataGridViewCell.OnMouseDown%2A>的取消共享已包含该单元格的行的效果。 否则，它应返回`false`。  
  
 有关行共享的详细信息，请参阅[缩放 Windows 窗体 DataGridView 控件的最佳做法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseEnterUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool MouseEnterUnsharesRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MouseEnterUnsharesRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MouseEnterUnsharesRow (rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool MouseEnterUnsharesRow(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">该单元格的父行索引。</param>
        <summary>指示当鼠标指针移过行中某个单元格上时，该行是否取消共享状态。</summary>
        <returns>
          如果不共享该行，则为 <see langword="true" />；否则为 <see langword="false" />。 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 基类总是返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow%2A>之前调用方法<xref:System.Windows.Forms.DataGridViewCell.OnMouseEnter%2A>方法。 在派生类中，它必须返回`true`如果调用<xref:System.Windows.Forms.DataGridViewCell.OnMouseEnter%2A>的取消共享已包含该单元格的行的效果。 否则，它应返回`false`。  
  
 有关行共享的详细信息，请参阅[缩放 Windows 窗体 DataGridView 控件的最佳做法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool MouseLeaveUnsharesRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MouseLeaveUnsharesRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MouseLeaveUnsharesRow (rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool MouseLeaveUnsharesRow(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">该单元格的父行索引。</param>
        <summary>指示当鼠标指针离开某行时，该行是否取消共享状态。</summary>
        <returns>
          如果不共享该行，则为 <see langword="true" />；否则为 <see langword="false" />。 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 基类总是返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow%2A>之前调用方法<xref:System.Windows.Forms.DataGridViewCell.OnMouseLeave%2A>方法。 在派生类中，它必须返回`true`如果调用<xref:System.Windows.Forms.DataGridViewCell.OnMouseLeave%2A>的取消共享已包含该单元格的行的效果。 否则，它应返回`false`。  
  
 有关行共享的详细信息，请参阅[缩放 Windows 窗体 DataGridView 控件的最佳做法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MouseMoveUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool MouseMoveUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MouseMoveUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MouseMoveUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool MouseMoveUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />。</param>
        <summary>指示当鼠标指针移过行中某个单元格上时，该行是否取消共享状态。</summary>
        <returns>
          如果不共享该行，则为 <see langword="true" />；否则为 <see langword="false" />。 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 基类总是返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow%2A>之前调用方法<xref:System.Windows.Forms.DataGridViewCell.OnMouseMove%2A>方法。 在派生类中，它必须返回`true`如果调用<xref:System.Windows.Forms.DataGridViewCell.OnMouseMove%2A>的取消共享已包含该单元格的行的效果。 否则，它应返回`false`。  
  
 有关行共享的详细信息，请参阅[缩放 Windows 窗体 DataGridView 控件的最佳做法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseUpUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool MouseUpUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MouseUpUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MouseUpUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool MouseUpUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />。</param>
        <summary>指示在鼠标指针位于行中某个单元格上，同时用户释放鼠标按钮时，是否对该行取消共享。</summary>
        <returns>
          如果不共享该行，则为 <see langword="true" />；否则为 <see langword="false" />。 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 基类总是返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow%2A>之前调用方法<xref:System.Windows.Forms.DataGridViewCell.OnMouseUp%2A>方法。 在派生类中，它必须返回`true`如果调用<xref:System.Windows.Forms.DataGridViewCell.OnMouseUp%2A>的取消共享已包含该单元格的行的效果。 否则，它应返回`false`。  
  
 有关行共享的详细信息，请参阅[缩放 Windows 窗体 DataGridView 控件的最佳做法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />。</param>
        <summary>在单击单元格时进行调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法类似于是<xref:System.Windows.Forms.DataGridView.OnCellClick%2A?displayProperty=nameWithType>方法。 在相同情况下在其中调用<xref:System.Windows.Forms.DataGridView.CellClick?displayProperty=nameWithType>引发事件时，但它实际上不引发该事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellClick" />
      </Docs>
    </Member>
    <Member MemberName="OnContentClick">
      <MemberSignature Language="C#" Value="protected virtual void OnContentClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />。</param>
        <summary>在单击单元格的内容时进行调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法类似于是<xref:System.Windows.Forms.DataGridView.OnCellContentClick%2A?displayProperty=nameWithType>方法。 在相同情况下在其中调用<xref:System.Windows.Forms.DataGridView.CellContentClick?displayProperty=nameWithType>引发事件时，但它实际上不引发该事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellContentClick" />
      </Docs>
    </Member>
    <Member MemberName="OnContentDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnContentDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentDoubleClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentDoubleClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentDoubleClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />。</param>
        <summary>在双击单元格的内容时进行调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法类似于是<xref:System.Windows.Forms.DataGridView.OnCellContentDoubleClick%2A?displayProperty=nameWithType>方法。 在相同情况下在其中调用<xref:System.Windows.Forms.DataGridView.CellContentDoubleClick?displayProperty=nameWithType>引发事件时，但它实际上不引发该事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellContentDoubleClick" />
      </Docs>
    </Member>
    <Member MemberName="OnDataGridViewChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataGridViewChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataGridViewChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnDataGridViewChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataGridViewChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataGridViewChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在单元格的 <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> 属性更改时调用。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDoubleClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDoubleClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDoubleClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />。</param>
        <summary>在双击单元格时进行调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法类似于是<xref:System.Windows.Forms.DataGridView.OnCellDoubleClick%2A?displayProperty=nameWithType>方法。 在相同情况下在其中调用<xref:System.Windows.Forms.DataGridView.CellDoubleClick?displayProperty=nameWithType>引发事件时，但它实际上不引发该事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellDoubleClick" />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnEnter (int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEnter(int32 rowIndex, bool throughMouseClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnEnter(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEnter (rowIndex As Integer, throughMouseClick As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEnter(int rowIndex, bool throughMouseClick);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="throughMouseClick" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">该单元格的父行索引。</param>
        <param name="throughMouseClick">
          如果用户操作将焦点移至该单元格，则为 <see langword="true" />；如果编程操作将焦点移至该单元格，则为 <see langword="false" />。</param>
        <summary>在焦点移动到单元格时进行调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法类似于是<xref:System.Windows.Forms.DataGridView.OnCellEnter%2A?displayProperty=nameWithType>方法。 在相同情况下在其中调用<xref:System.Windows.Forms.DataGridView.CellEnter?displayProperty=nameWithType>引发事件时，但它实际上不引发该事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnLeave(System.Int32,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyDown (System.Windows.Forms.KeyEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyDown (e As KeyEventArgs, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
        <param name="rowIndex">该单元格的父行索引。</param>
        <summary>在焦点位于单元格上并同时按下字符键时进行调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法类似于是<xref:System.Windows.Forms.Control.OnKeyDown%2A?displayProperty=nameWithType>方法。 在相同情况下在其中调用<xref:System.Windows.Forms.Control.KeyDown>引发事件时，但它实际上不引发该事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyPress(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnKeyPress(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyPress (e As KeyPressEventArgs, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.KeyPressEventArgs" />。</param>
        <param name="rowIndex">该单元格的父行索引。</param>
        <summary>在焦点位于单元格上并同时按任意键时进行调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法类似于是<xref:System.Windows.Forms.Control.OnKeyPress%2A?displayProperty=nameWithType>方法。 在相同情况下在其中调用<xref:System.Windows.Forms.Control.KeyPress>引发事件时，但它实际上不引发该事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyUp (System.Windows.Forms.KeyEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyUp (e As KeyEventArgs, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
        <param name="rowIndex">该单元格的父行索引。</param>
        <summary>在焦点位于单元格上并同时释放字符键时进行调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法类似于是<xref:System.Windows.Forms.Control.OnKeyUp%2A?displayProperty=nameWithType>方法。 在相同情况下在其中调用<xref:System.Windows.Forms.Control.KeyUp>引发事件时，但它实际上不引发该事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyPress(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnLeave (int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLeave(int32 rowIndex, bool throughMouseClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnLeave(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLeave (rowIndex As Integer, throughMouseClick As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLeave(int rowIndex, bool throughMouseClick);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="throughMouseClick" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">该单元格的父行索引。</param>
        <param name="throughMouseClick">
          如果用户操作将焦点从单元格上移开，则为 <see langword="true" />；如果编程操作将焦点从单元格上移开，则为 <see langword="false" />。</param>
        <summary>当焦点从单元格上移开时调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法类似于是<xref:System.Windows.Forms.DataGridView.OnCellLeave%2A?displayProperty=nameWithType>方法。 在相同情况下在其中调用<xref:System.Windows.Forms.DataGridView.CellLeave?displayProperty=nameWithType>引发事件时，但它实际上不引发该事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnEnter(System.Int32,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />。</param>
        <summary>在指针位于单元格上且用户同时单击鼠标按钮时进行调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法类似于是<xref:System.Windows.Forms.DataGridView.OnCellMouseClick%2A?displayProperty=nameWithType>方法。 在相同情况下在其中调用<xref:System.Windows.Forms.DataGridView.CellMouseClick?displayProperty=nameWithType>引发事件时，但它实际上不引发该事件。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此方法。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDoubleClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDoubleClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDoubleClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />。</param>
        <summary>在指针位于单元格上，同时用户双击鼠标按钮时进行调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法类似于是<xref:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick%2A?displayProperty=nameWithType>方法。 在相同情况下在其中调用<xref:System.Windows.Forms.DataGridView.CellMouseDoubleClick?displayProperty=nameWithType>引发事件时，但它实际上不引发该事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDown (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDown (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDown(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />。</param>
        <summary>在指针位于单元格上，同时用户按住鼠标按钮时进行调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法类似于是<xref:System.Windows.Forms.DataGridView.OnCellMouseDown%2A?displayProperty=nameWithType>方法。 在相同情况下在其中调用<xref:System.Windows.Forms.DataGridView.CellMouseDown?displayProperty=nameWithType>引发事件时，但它实际上不引发该事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseDown" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">该单元格的父行索引。</param>
        <summary>当鼠标指针移到单元格上时调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法类似于是<xref:System.Windows.Forms.DataGridView.OnCellMouseEnter%2A?displayProperty=nameWithType>方法。 在相同情况下在其中调用<xref:System.Windows.Forms.DataGridView.CellMouseEnter?displayProperty=nameWithType>引发事件时，但它实际上不引发该事件。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此方法。 此示例摘自更大的示例中提供[如何： 自定义单元格和扩展他们行为和外观由 Windows 窗体 DataGridView 控件中的列](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/CS/rollovercell.cs#220)]
 [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/VB/rollovercell.vb#220)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseEnter" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">该单元格的父行索引。</param>
        <summary>在鼠标指针离开单元格时调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法类似于是<xref:System.Windows.Forms.DataGridView.OnCellMouseLeave%2A?displayProperty=nameWithType>方法。 在相同情况下在其中调用<xref:System.Windows.Forms.DataGridView.CellMouseLeave?displayProperty=nameWithType>引发事件时，但它实际上不引发该事件。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此方法。 此示例摘自更大的示例中提供[如何： 自定义单元格和扩展他们行为和外观由 Windows 窗体 DataGridView 控件中的列](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/CS/rollovercell.cs#220)]
 [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/VB/rollovercell.vb#220)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseLeave" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseMove (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseMove (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseMove(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />。</param>
        <summary>当鼠标指针在单元格内移动时调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法类似于是<xref:System.Windows.Forms.DataGridView.OnCellMouseMove%2A?displayProperty=nameWithType>方法。 在相同情况下在其中调用<xref:System.Windows.Forms.DataGridView.CellMouseMove?displayProperty=nameWithType>引发事件时，但它实际上不引发该事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseMove" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseUp (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseUp (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseUp(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />。</param>
        <summary>在指针位于单元格上，同时用户释放鼠标按钮时进行调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法类似于是<xref:System.Windows.Forms.DataGridView.OnCellMouseUp%2A?displayProperty=nameWithType>方法。 在相同情况下在其中调用<xref:System.Windows.Forms.DataGridView.CellMouseUp?displayProperty=nameWithType>引发事件时，但它实际上不引发该事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseUp" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OwningColumn">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumn OwningColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewColumn OwningColumn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.OwningColumn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwningColumn As DataGridViewColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewColumn ^ OwningColumn { System::Windows::Forms::DataGridViewColumn ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含此单元格的列。</summary>
        <value>包含该单元格的 <see cref="T:System.Windows.Forms.DataGridViewColumn" />；如果该单元格不在任何一列中，则为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.OwningRow" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />
      </Docs>
    </Member>
    <Member MemberName="OwningRow">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRow OwningRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewRow OwningRow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.OwningRow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwningRow As DataGridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRow ^ OwningRow { System::Windows::Forms::DataGridViewRow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含此单元格的行。</summary>
        <value>包含该单元格的 <see cref="T:System.Windows.Forms.DataGridViewRow" />；如果该单元格不在任何一行中，则为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.OwningColumn" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" />
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="protected virtual void Paint (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle cellBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates cellState, object value, object formattedValue, string errorText, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle, System.Windows.Forms.DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Paint(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle cellBounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates cellState, object value, object formattedValue, string errorText, class System.Windows.Forms.DataGridViewCellStyle cellStyle, class System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle, valuetype System.Windows.Forms.DataGridViewPaintParts paintParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Paint(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle cellBounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates cellState, System::Object ^ value, System::Object ^ formattedValue, System::String ^ errorText, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ advancedBorderStyle, System::Windows::Forms::DataGridViewPaintParts paintParts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="cellState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="formattedValue" Type="System.Object" />
        <Parameter Name="errorText" Type="System.String" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="advancedBorderStyle" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="paintParts" Type="System.Windows.Forms.DataGridViewPaintParts" />
      </Parameters>
      <Docs>
        <param name="graphics">用于绘制 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="T:System.Windows.Forms.DataGridViewCell" />。</param>
        <param name="clipBounds">
          <see cref="T:System.Drawing.Rectangle" />，它表示需要重新绘制的 <see cref="T:System.Windows.Forms.DataGridView" /> 区域。</param>
        <param name="cellBounds">包含要绘制的 <see cref="T:System.Drawing.Rectangle" /> 的边界的 <see cref="T:System.Windows.Forms.DataGridViewCell" />。</param>
        <param name="rowIndex">当前所绘制的单元格的行索引。</param>
        <param name="cellState">
          <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> 值的按位组合，用于指定单元格的状态。</param>
        <param name="value">当前所绘制的 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 的数据。</param>
        <param name="formattedValue">当前所绘制的 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 的格式化数据。</param>
        <param name="errorText">与单元格关联的错误消息。</param>
        <param name="cellStyle">
          <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />，它包含有关单元格的格式设置和样式的信息。</param>
        <param name="advancedBorderStyle">
          <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />，它包含当前所绘制的单元格的边框样式。</param>
        <param name="paintParts">
          <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> 值的按位组合，用于指定需要绘制的单元格部分。</param>
        <summary>绘制当前的 <see cref="T:System.Windows.Forms.DataGridViewCell" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Windows.Forms.DataGridViewCell.Paint%2A>方法<xref:System.Windows.Forms.DataGridViewButtonCell>。 此代码示例摘自[如何： 在 Windows 窗体 DataGridView 控件中的按钮列禁用按钮](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridView.DisabledButtons#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.Control.Paint" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.PaintBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle)" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="PaintBorder">
      <MemberSignature Language="C#" Value="protected virtual void PaintBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle bounds, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PaintBorder(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.DataGridViewCellStyle cellStyle, class System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.PaintBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PaintBorder(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle bounds, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ advancedBorderStyle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="advancedBorderStyle" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
      </Parameters>
      <Docs>
        <param name="graphics">用于绘制边框的 <see cref="T:System.Drawing.Graphics" />。</param>
        <param name="clipBounds">
          <see cref="T:System.Drawing.Rectangle" />，它表示需要重新绘制的 <see cref="T:System.Windows.Forms.DataGridView" /> 区域。</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" />，它包含当前所绘制的边框区域。</param>
        <param name="cellStyle">
          <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />，它包含有关当前单元格的格式设置和样式的信息。</param>
        <param name="advancedBorderStyle">
          <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />，它包含当前所绘制的边框的边框样式。</param>
        <summary>绘制当前 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 的边框。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用此方法。 此示例摘自更大的示例中提供[如何： 在 Windows 窗体 DataGridView 控件中的按钮列禁用按钮](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)。  
  
 [!code-csharp[System.Windows.Forms.DataGridView.DisabledButtons#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="PaintErrorIcon">
      <MemberSignature Language="C#" Value="protected virtual void PaintErrorIcon (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle cellValueBounds, string errorText);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PaintErrorIcon(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle cellValueBounds, string errorText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.PaintErrorIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PaintErrorIcon(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle cellValueBounds, System::String ^ errorText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellValueBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="errorText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="graphics">用于绘制边框的 <see cref="T:System.Drawing.Graphics" />。</param>
        <param name="clipBounds">
          <see cref="T:System.Drawing.Rectangle" />，它表示需要重新绘制的 <see cref="T:System.Windows.Forms.DataGridView" /> 区域。</param>
        <param name="cellValueBounds">环绕单元格的内容区域的边框 <see cref="T:System.Drawing.Rectangle" />。</param>
        <param name="errorText">与单元格关联的错误消息。</param>
        <summary>绘制当前 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 的错误图标。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `errorText`参数发出信号，是否存在错误。 如果`errorText`是`null`或<xref:System.String.Empty?displayProperty=nameWithType>、<xref:System.Windows.Forms.DataGridViewCell.PaintErrorIcon%2A>方法不执行任何操作。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.PaintBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle)" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="ParseFormattedValue">
      <MemberSignature Language="C#" Value="public virtual object ParseFormattedValue (object formattedValue, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.ComponentModel.TypeConverter formattedValueTypeConverter, System.ComponentModel.TypeConverter valueTypeConverter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseFormattedValue(object formattedValue, class System.Windows.Forms.DataGridViewCellStyle cellStyle, class System.ComponentModel.TypeConverter formattedValueTypeConverter, class System.ComponentModel.TypeConverter valueTypeConverter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ParseFormattedValue (formattedValue As Object, cellStyle As DataGridViewCellStyle, formattedValueTypeConverter As TypeConverter, valueTypeConverter As TypeConverter) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ParseFormattedValue(System::Object ^ formattedValue, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, System::ComponentModel::TypeConverter ^ formattedValueTypeConverter, System::ComponentModel::TypeConverter ^ valueTypeConverter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formattedValue" Type="System.Object" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="formattedValueTypeConverter" Type="System.ComponentModel.TypeConverter" />
        <Parameter Name="valueTypeConverter" Type="System.ComponentModel.TypeConverter" />
      </Parameters>
      <Docs>
        <param name="formattedValue">单元格的显示值。</param>
        <param name="cellStyle">对单元格有效的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</param>
        <param name="formattedValueTypeConverter">显示值类型的 <see cref="T:System.ComponentModel.TypeConverter" />；如果使用默认转换器，则为 <see langword="null" />。</param>
        <param name="valueTypeConverter">单元格值类型的 <see cref="T:System.ComponentModel.TypeConverter" />；若要使用默认转换器，则为 <see langword="null" />。</param>
        <summary>将为便于显示而进行了格式设置的值转换为实际的单元格值。</summary>
        <returns>单元格值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当用户编辑单元格值并提交更改，<xref:System.Windows.Forms.DataGridView>控件调用此方法将从显示的值转换<xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A>到<xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>。 控件然后将设置为转换后的值的基础单元格的值或数据源值。  
  
 此方法的默认实现分析`formattedValue`参数使用<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>， <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>，和<xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>的单元格样式属性由`cellStyle`参数。  
  
 如果`formattedValue`等同于<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>，此方法返回的值<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>属性或`null`如果<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>是<xref:System.DBNull.Value?displayProperty=nameWithType>和的单元格<xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>是引用类型。  
  
 如果`formattedValue`是否不等于<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>，此方法分析`formattedValue`使用<xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>属性和指定或默认的转换器。  
  
 如果该单元格<xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>是可以为 null，此方法会包装形式的返回值<xref:System.Nullable%601>类型。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cellStyle" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.FormatException">
          <see cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" /> 属性值为 <see langword="null" />。  
  
 或  
  
 <see cref="P:System.Windows.Forms.DataGridViewCell.ValueType" /> 属性值为 <see langword="null" />。  
  
 或  
  
 无法转换 <paramref name="formattedValue" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="formattedValue" /> 为 <see langword="null" />。  
  
 或  
  
 <paramref name="formattedValue" /> 的类型与 <see cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" /> 属性指示的类型不匹配。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="T:System.Nullable`1" />
      </Docs>
    </Member>
    <Member MemberName="PositionEditingControl">
      <MemberSignature Language="C#" Value="public virtual void PositionEditingControl (bool setLocation, bool setSize, System.Drawing.Rectangle cellBounds, System.Drawing.Rectangle cellClip, System.Windows.Forms.DataGridViewCellStyle cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PositionEditingControl(bool setLocation, bool setSize, valuetype System.Drawing.Rectangle cellBounds, valuetype System.Drawing.Rectangle cellClip, class System.Windows.Forms.DataGridViewCellStyle cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.PositionEditingControl(System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PositionEditingControl (setLocation As Boolean, setSize As Boolean, cellBounds As Rectangle, cellClip As Rectangle, cellStyle As DataGridViewCellStyle, singleVerticalBorderAdded As Boolean, singleHorizontalBorderAdded As Boolean, isFirstDisplayedColumn As Boolean, isFirstDisplayedRow As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PositionEditingControl(bool setLocation, bool setSize, System::Drawing::Rectangle cellBounds, System::Drawing::Rectangle cellClip, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setLocation" Type="System.Boolean" />
        <Parameter Name="setSize" Type="System.Boolean" />
        <Parameter Name="cellBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellClip" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="singleVerticalBorderAdded" Type="System.Boolean" />
        <Parameter Name="singleHorizontalBorderAdded" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedColumn" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="setLocation">
          如果将控件置于其他参数指定的位置，则为 <see langword="true" />；若要允许控件自行放置，则为 <see langword="false" />。</param>
        <param name="setSize">
          如果要指定大小，则为 <see langword="true" />；若要允许控件自行决定大小，则为 <see langword="false" />。</param>
        <param name="cellBounds">定义单元格界限的 <see cref="T:System.Drawing.Rectangle" />。</param>
        <param name="cellClip">将用于绘制编辑控件的区域。</param>
        <param name="cellStyle">
          <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />，它表示当前所编辑的单元格的样式。</param>
        <param name="singleVerticalBorderAdded">
          若要向单元格添加竖框线，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="singleHorizontalBorderAdded">
          若要向单元格添加横框线，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="isFirstDisplayedColumn">
          如果宿主单元格位于第一个可见列中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="isFirstDisplayedRow">
          如果宿主单元格位于第一个可见行中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>设置由 <see cref="T:System.Windows.Forms.DataGridView" /> 控件中的单元格承载的编辑控件的位置和大小。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一些类派生自<xref:System.Windows.Forms.DataGridViewCell>类，如<xref:System.Windows.Forms.DataGridViewComboBoxCell>，在所选单元格中承载控件。 <xref:System.Windows.Forms.DataGridViewCell.PositionEditingControl%2A>方法定位是承载单元格的编辑控件。 编辑控件可能需要占用比单个单元格的更多空间，因为它可能需要编辑中的第一个可见列或第一个可见行的单元格，因此它不外部进行绘制时以不同的方式定位<xref:System.Windows.Forms.DataGridView>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Windows.Forms.DataGridView" /> 控件中不包含该单元格。</exception>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxCell" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="PositionEditingPanel">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle PositionEditingPanel (System.Drawing.Rectangle cellBounds, System.Drawing.Rectangle cellClip, System.Windows.Forms.DataGridViewCellStyle cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Rectangle PositionEditingPanel(valuetype System.Drawing.Rectangle cellBounds, valuetype System.Drawing.Rectangle cellClip, class System.Windows.Forms.DataGridViewCellStyle cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.PositionEditingPanel(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PositionEditingPanel (cellBounds As Rectangle, cellClip As Rectangle, cellStyle As DataGridViewCellStyle, singleVerticalBorderAdded As Boolean, singleHorizontalBorderAdded As Boolean, isFirstDisplayedColumn As Boolean, isFirstDisplayedRow As Boolean) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Rectangle PositionEditingPanel(System::Drawing::Rectangle cellBounds, System::Drawing::Rectangle cellClip, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cellBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellClip" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="singleVerticalBorderAdded" Type="System.Boolean" />
        <Parameter Name="singleHorizontalBorderAdded" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedColumn" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cellBounds">定义单元格界限的 <see cref="T:System.Drawing.Rectangle" />。</param>
        <param name="cellClip">将用于绘制编辑面板的区域。</param>
        <param name="cellStyle">
          <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />，它表示当前所编辑的单元格的样式。</param>
        <param name="singleVerticalBorderAdded">
          若要向单元格添加竖框线，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="singleHorizontalBorderAdded">
          若要向单元格添加横框线，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="isFirstDisplayedColumn">
          如果该单元格位于控件中当前显示的第一列，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="isFirstDisplayedRow">
          如果该单元格位于控件中当前显示的第一行，则为<see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>设置单元格承载的编辑面板的位置和大小，并返回编辑面板内编辑控件的正常界限。</summary>
        <returns>
          <see cref="T:System.Drawing.Rectangle" />，它表示编辑面板内编辑控件的正常界限。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">尚未将此单元格添加到 <see cref="T:System.Windows.Forms.DataGridView" /> 控件中。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="PreferredSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size PreferredSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size PreferredSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.PreferredSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size PreferredSize { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取适合该单元格的矩形区域的大小（以像素为单位）。</summary>
        <value>包含高度和宽度的 <see cref="T:System.Drawing.Size" />（以像素为单位）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.PreferredSize%2A>属性返回计算单元格的单元格的自然大小所属行和列。 <xref:System.Windows.Forms.DataGridViewCell.PreferredSize%2A> 返回<xref:System.Drawing.Size>，其宽度和高度的表中不包含该单元格时为-1。  
  
 如果该单元格位于<xref:System.Windows.Forms.DataGridViewColumn>具有其<xref:System.Windows.Forms.DataGridViewColumn.Resizable%2A>属性设置为`false`，用作宽度，则返回-1。  
  
 此方法依赖于<xref:System.Windows.Forms.DataGridViewCell.GetFormattedValue%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> 小于 0，这表示该单元格为行标头单元格。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">包含该单元格的行是共享行。  
  
 或  
  
 该单元格是列标题单元格。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Size" />
        <altmember cref="T:System.Drawing.Size" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值表示是否可以编辑该单元格的数据。</summary>
        <value>
          如果无法编辑该单元格的数据，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A>属性指示是否可以编辑单元格所显示的数据。 你可以设置<xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A>的各个单元格，也可以为整个行或单元格的列只读通过设置<xref:System.Windows.Forms.DataGridViewRow.ReadOnly%2A?displayProperty=nameWithType>或<xref:System.Windows.Forms.DataGridViewColumn.ReadOnly%2A?displayProperty=nameWithType>属性。 默认情况下，如果单元格的父行或列设置为只读的则子单元格将采用相同的值。 可以通过设置重写此默认行为<xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A>为单个单元格。  
  
 您可以导航到只读的单元格，并且您可以设置只读的单元格以将当前单元格。  
  
 <xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A> 仅影响单元格是否可编辑;它不会影响是否用户可以删除行。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">设置此属性时不存在所属行。  
  
 或  
  
 设置此属性时共享所属行。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.ReadOnly" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.ReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Resizable">
      <MemberSignature Language="C#" Value="public virtual bool Resizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Resizable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Resizable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Resizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Resizable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否可以调整单元格的大小。</summary>
        <value>
          如果可以调整单元格的大小，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Windows.Forms.DataGridViewCell.Resizable%2A>属性由单元格的父行或列设置。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
      </Docs>
    </Member>
    <Member MemberName="RowIndex">
      <MemberSignature Language="C#" Value="public int RowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.RowIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取单元格父行的索引。</summary>
        <value>包含该单元格的行的索引；如果无所属行，则为 -1。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A>属性将返回-1，该单元格是否任一列标题，或共享单元格的行。  
  
 有关行共享的详细信息，请参阅[缩放 Windows 窗体 DataGridView 控件的最佳做法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此属性。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#080](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#080)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#080](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#080)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public virtual bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Selected { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否已选定该单元格。</summary>
        <value>
          如果已选定该单元格，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">设置此属性时，不存在关联的 <see cref="T:System.Windows.Forms.DataGridView" />。  
  
 或  
  
 设置此属性时共享所属行。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="protected virtual bool SetValue (int rowIndex, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool SetValue(int32 rowIndex, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.SetValue(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SetValue (rowIndex As Integer, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool SetValue(int rowIndex, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="rowIndex">该单元格的父行索引。</param>
        <param name="value">要设置的单元格值。</param>
        <summary>设置单元格的值。</summary>
        <returns>
          如果已设置该值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> 小于 0，或大于等于父 <see cref="T:System.Windows.Forms.DataGridView" /> 中的行数。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> 小于 0。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetValue(System.Int32)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取单元格的大小。</summary>
        <value>已设置为所属行高度和所属列宽度的 <see cref="T:System.Drawing.Size" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果该单元格不与关联<xref:System.Windows.Forms.DataGridView>控件，<xref:System.Windows.Forms.DataGridViewCell.Size%2A>属性返回<xref:System.Drawing.Size>，其宽度和高度为-1。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">包含该单元格的行是共享行。  
  
 或  
  
 该单元格是列标题单元格。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.PreferredSize" />
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle Style" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ Style { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置单元格的样式。</summary>
        <value>与单元格关联的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>控件将显示其使用指示的单元格的样式的单元格<xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A>属性，该类继承自其他类型的属性的样式<xref:System.Windows.Forms.DataGridViewCellStyle>。 通过指定的样式<xref:System.Windows.Forms.DataGridViewCell.Style%2A>属性重写所有其他单元格样式属性，可以通过指定的样式，但不是一定表示单元格的外观做出贡献的所有样式。  
  
 有关详细信息，请参阅[在 Windows 窗体 DataGridView 控件中的单元格样式](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.DataGridViewCell.Style%2A>属性来获取单元格的背景色。 此示例摘自为提供一个更大的代码示例<xref:System.Windows.Forms.DataGridViewColumn>类。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#120](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewColumnDemo.cpp#120)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#120](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewColumnDemo.cs#120)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#120](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewcolumndemo.vb#120)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellStyleChanged" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置包含有关单元格补充数据的对象。</summary>
        <value>包含有关单元格数据的 <see cref="T:System.Object" />。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 从派生的任何类型<xref:System.Object>类可以分配给此属性。 <xref:System.Windows.Forms.DataGridViewCell.Tag%2A>属性通常用于存储与单元格所显示的值紧密相关联的数据。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Windows.Forms.Control.Tag" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与此单元格关联的 ToolTip 文本。</summary>
        <value>与该单元格关联的工具提示文本。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当鼠标指针位于单元格和属性值不是，此属性的值显示为工具提示的单元格<xref:System.String.Empty>。 如果此属性的值是<xref:System.String.Empty>，该单元格将显示工具提示包含单元格的值，如果值为截断在单元格显示; 否则为该单元格将不会显示工具提示。 您还可以通过设置阻止的工具提示显示<xref:System.Windows.Forms.DataGridView.ShowCellToolTips%2A?displayProperty=nameWithType>属性`false`。  
  
 时<xref:System.Windows.Forms.DataGridView>控件<xref:System.Windows.Forms.DataGridView.DataSource%2A>设置属性或其<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>属性是`true`，获取的值<xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A>属性引发<xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded>的控件的事件，并返回的值<xref:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText%2A?displayProperty=nameWithType>在事件处理程序指定的属性作为。 如果事件没有处理程序，获取的值<xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A>属性返回以前指定的值或它的默认值<xref:System.String.Empty>。  
  
 处理<xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded>使用大量的数据，若要避免性能损失时设置单元格时，事件是主要有用<xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A>多个单元格的值。 有关详细信息，请参阅[缩放 Windows 窗体 DataGridView 控件的最佳做法](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)。  
  
 更改此属性引发<xref:System.Windows.Forms.DataGridView.CellToolTipTextChanged>上拥有事件<xref:System.Windows.Forms.DataGridView>，如果存在。  
  
   
  
## Examples  
 下面的代码示例演示如何设置<xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A>中的事件处理程序属性<xref:System.Windows.Forms.DataGridView.CellFormatting>事件。 此示例摘自中提供更大的代码示例[如何： 添加的 Windows 窗体 DataGridView 控件中的单个单元格的工具提示](~/docs/framework/winforms/controls/add-tooltips-to-individual-cells-in-a-wf-datagridview-control.md)。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/cpp/datagridviewcell.tooltiptext.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/CS/datagridviewcell.tooltiptext.cs#1)]
 [!code-vb[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/VB/datagridviewcell.tooltiptext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ShowCellToolTips" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回描述当前对象的字符串。</summary>
        <returns>表示当前对象的字符串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 除非另行说明，<xref:System.Windows.Forms.DataGridViewCell.ToString%2A>的所有各种的单元格类型的方法将返回下面的代码示例中所示格式的字符串：  
  
 `Classname {RowIndex = #, ColumnIndex = #}`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与此单元格关联的值。</summary>
        <value>获取或设置该单元格要显示的数据。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当将不同的值分配给一个单元格，<xref:System.Windows.Forms.DataGridView.CellValueChanged>事件<xref:System.Windows.Forms.DataGridView>引发控件。  
  
 <xref:System.Windows.Forms.DataGridViewCell.Value%2A>属性是由单元格，包含的实际数据对象，而<xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A>属性是格式化的数据表示形式。 <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>和<xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A>属性分别对应于这些值的数据类型。  
  
 当你将设置<xref:System.Windows.Forms.DataGridViewCell.Value%2A>属性，指定的值不是自动转换从一个格式化，显示为基础的单元格值的值。 例如，<xref:System.Windows.Forms.DataGridViewCellStyle>生效的单元格将被忽略，因此设置<xref:System.Windows.Forms.DataGridViewCell.Value%2A>到<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A?displayProperty=nameWithType>不会导致属性值<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下面的代码示例演示如何更新单元格的内容与<xref:System.Windows.Forms.DataGridViewCell.Value%2A>属性。 此示例摘自中提供更大的代码示例[如何： 操作 Windows 窗体 DataGridView 控件中的行](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md)。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#211)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#211)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#211)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" /> 不在有效范围（从 0 至控件中的行数减 1）内。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> 小于 0，这表示该单元格为行标头单元格。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Tag" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public virtual Type ValueType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ValueType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置单元格中值的数据类型。</summary>
        <value>表示单元格中值的数据类型的 <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>尚未设置单元格的属性，<xref:System.Windows.Forms.DataGridViewColumn.ValueType%2A?displayProperty=nameWithType>使用所属列的属性，如果它存在。  
  
 <xref:System.Windows.Forms.DataGridViewCell.Value%2A>属性是由单元格，包含的实际数据对象，而<xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A>属性是格式化的数据表示形式。 <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>和<xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A>属性分别对应于这些值的数据类型。  
  
   
  
## Examples  
 下面的代码示例演示如何将此属性。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.ValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public virtual bool Visible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示单元格是否位于已隐藏的行或列中。</summary>
        <value>
          如果该单元格可见，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性指示该单元格位于具有的列或行其<xref:System.Windows.Forms.DataGridViewBand.Visible%2A>属性设置为`false`。 它不指示该单元格是否已被滚动到屏幕之外。 若要确定是否在控件的显示区域内可见的单元格，请使用<xref:System.Windows.Forms.DataGridViewCell.Displayed%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.Visible" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Visible" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Displayed" />
      </Docs>
    </Member>
  </Members>
</Type>