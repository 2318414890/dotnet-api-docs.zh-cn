<Type Name="FolderBrowserDialog" FullName="System.Windows.Forms.FolderBrowserDialog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e423759085c8d2caa391ea39ab4c6166bfe6b0a6" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55311069" /></Metadata><TypeSignature Language="C#" Value="public sealed class FolderBrowserDialog : System.Windows.Forms.CommonDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FolderBrowserDialog extends System.Windows.Forms.CommonDialog" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.FolderBrowserDialog" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FolderBrowserDialog&#xA;Inherits CommonDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class FolderBrowserDialog sealed : System::Windows::Forms::CommonDialog" />
  <TypeSignature Language="F#" Value="type FolderBrowserDialog = class&#xA;    inherit CommonDialog" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.CommonDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("HelpRequest")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("SelectedPath")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.FolderBrowserDialogDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.FolderBrowserDialogDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.FolderBrowserDialogDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提示用户选择文件夹。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类提供一种方法来提示用户用于浏览、 创建，并最终选择的文件夹。 如果只想要允许用户选择文件夹而不是文件，请使用此类。 浏览的文件夹是通过一个树控件。 可以选择仅从文件系统文件夹;虚拟文件夹不能。  
  
 通常情况下，在创建一个新<xref:System.Windows.Forms.FolderBrowserDialog>，设置<xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A>从其开始浏览的位置。 或者，可以设置<xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A>到的子文件夹的绝对路径<xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A>最初选择。 可以选择性地设置<xref:System.Windows.Forms.FolderBrowserDialog.Description%2A>属性来向用户提供的其他说明。 最后，调用<xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>方法以向用户显示的对话框。 在对话框关闭时和产生的对话框<xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>是<xref:System.Windows.Forms.DialogResult.OK?displayProperty=nameWithType>，则<xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A>将包含所选文件夹的路径的字符串。  
  
 可以使用<xref:System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton%2A>属性可控制用户是否能够创建新的文件夹**新的文件夹**按钮。  
  
 <xref:System.Windows.Forms.FolderBrowserDialog> 是模式对话框;因此，显示时，它会阻止应用程序的其余部分直到用户已选择一个文件夹。 当有模式地显示一个对话框时，（键盘或鼠标单击） 能进行任何输入除对话框的上的对象。 该程序必须隐藏或关闭对话框 （通常在对一些用户执行任何操作响应） 输入到调用程序之前可以发生。  
  
   
  
## Examples  
 下面的代码示例创建的应用程序使用户能够打开中的多格式文本 (.rtf) 文件<xref:System.Windows.Forms.RichTextBox>控件。  
  
 [!code-cpp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Forms.FolderBrowserDialog.RootFolder" />
    <altmember cref="P:System.Windows.Forms.FolderBrowserDialog.SelectedPath" />
    <altmember cref="M:System.Windows.Forms.CommonDialog.ShowDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FolderBrowserDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FolderBrowserDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FolderBrowserDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.FolderBrowserDialog" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认构造函数初始化为其默认值的属性。  
  
 新建<xref:System.Windows.Forms.FolderBrowserDialog>创建后，<xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A>属性设置为<xref:System.Environment.SpecialFolder.Desktop?displayProperty=nameWithType>，则<xref:System.Windows.Forms.FolderBrowserDialog.Description%2A>属性设置为空字符串 ("")，则<xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A>属性设置为空字符串，并<xref:System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton%2A>属性设置为`true`.  
  
 通常情况下，在创建一个新<xref:System.Windows.Forms.FolderBrowserDialog>，设置<xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A>从其开始浏览的位置。 或者，可以设置<xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A>的子文件夹的路径<xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A>最初选择。 可以选择性地设置<xref:System.Windows.Forms.FolderBrowserDialog.Description%2A>属性来向用户提供的其他说明。 最后，调用<xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>方法以向用户显示的对话框。 在对话框关闭时，产生的对话框<xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>是<xref:System.Windows.Forms.DialogResult.OK?displayProperty=nameWithType>，则<xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A>将包含所选文件夹的路径的字符串。  
  
 <xref:System.Windows.Forms.FolderBrowserDialog> 是模式对话框;因此，显示时，它会阻止应用程序的其余部分直到用户已选择一个文件夹。 当有模式地显示一个对话框时，（键盘或鼠标单击） 能进行任何输入除对话框的上的对象。 该程序必须隐藏或关闭对话框 （通常在对一些用户执行任何操作响应） 输入到调用程序之前可以发生。  
  
   
  
## Examples  
 下面的代码示例创建的应用程序使用户能够打开中的多格式文本 (.rtf) 文件<xref:System.Windows.Forms.RichTextBox>控件。  
  
 [!code-cpp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FolderBrowserDialog.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Windows.Forms.FolderBrowserDialog.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置对话框中在树视图控件上显示的说明文本。</summary>
        <value>要显示的说明。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.FolderBrowserDialog.Description%2A>属性可用于指定给用户，如说明的其他信息。  
  
   
  
## Examples  
 下面的代码示例创建的应用程序使用户能够打开中的多格式文本 (.rtf) 文件<xref:System.Windows.Forms.RichTextBox>控件。  
  
 [!code-cpp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpRequest">
      <MemberSignature Language="C#" Value="public event EventHandler HelpRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HelpRequest" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.FolderBrowserDialog.HelpRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HelpRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HelpRequest;" />
      <MemberSignature Language="F#" Value="member this.HelpRequest : EventHandler " Usage="member this.HelpRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当用户单击对话框中的“帮助”按钮时发生。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FolderBrowserDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="folderBrowserDialog.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将属性重置为其默认值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 重置<xref:System.Windows.Forms.FolderBrowserDialog.Description%2A>， <xref:System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton%2A>，<xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A>和<xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A>为其默认值的属性。 默认值的列表，请参阅<xref:System.Windows.Forms.FolderBrowserDialog.%23ctor%2A>构造函数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootFolder">
      <MemberSignature Language="C#" Value="public Environment.SpecialFolder RootFolder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Environment/SpecialFolder RootFolder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FolderBrowserDialog.RootFolder" />
      <MemberSignature Language="VB.NET" Value="Public Property RootFolder As Environment.SpecialFolder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Environment::SpecialFolder RootFolder { Environment::SpecialFolder get(); void set(Environment::SpecialFolder value); };" />
      <MemberSignature Language="F#" Value="member this.RootFolder : Environment.SpecialFolder with get, set" Usage="System.Windows.Forms.FolderBrowserDialog.RootFolder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.SpecialFolderEnumConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Environment+SpecialFolder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置从其开始浏览的根文件夹。</summary>
        <value><see cref="T:System.Environment.SpecialFolder" /> 值之一。 默认值为 <see langword="Desktop" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定的文件夹和其下的任何子文件夹将出现在对话框中，并可选。 <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A>属性，连同<xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A>，确定所选的文件夹时对话框的将显示，只要将是什么<xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A>是为的子文件夹的绝对路径<xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A>（或更准确地说，它指向的子文件夹所表示的 shell 命名空间<xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A>)。  
  
   
  
## Examples  
 下面的代码示例创建的应用程序使用户能够打开中的多格式文本 (.rtf) 文件<xref:System.Windows.Forms.RichTextBox>控件。  
  
 [!code-cpp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">分配的值不是 <see cref="T:System.Environment.SpecialFolder" /> 值之一。</exception>
      </Docs>
    </Member>
    <Member MemberName="RunDialog">
      <MemberSignature Language="C#" Value="protected override bool RunDialog (IntPtr hWndOwner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool RunDialog(native int hWndOwner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FolderBrowserDialog.RunDialog(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RunDialog (hWndOwner As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool RunDialog(IntPtr hWndOwner);" />
      <MemberSignature Language="F#" Value="override this.RunDialog : nativeint -&gt; bool" Usage="folderBrowserDialog.RunDialog hWndOwner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWndOwner" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hWndOwner">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedPath">
      <MemberSignature Language="C#" Value="public string SelectedPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FolderBrowserDialog.SelectedPath" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedPath : string with get, set" Usage="System.Windows.Forms.FolderBrowserDialog.SelectedPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.SelectedPathEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.SelectedPathEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.SelectedPathEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用户选定的路径。</summary>
        <value>对话框中选定的第一个文件夹或用户选定的最后一个文件夹的路径。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A>属性设置在显示对话框之前，使用此路径文件夹将为所选的文件夹，只要<xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A>设置为的子文件夹的绝对路径为<xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A>（或更准确地说，它指向子文件夹的命令行程序命名空间由<xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A>)。  
  
 如果<xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>将返回<xref:System.Windows.Forms.DialogResult.OK>，这意味着用户单击**确定**按钮，<xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A>属性将返回包含所选文件夹的路径的字符串。 如果<xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>返回<xref:System.Windows.Forms.DialogResult.Cancel>，这意味着用户退出对话框中，此属性将具有相同的值在显示对话框之前已。 如果用户选择不具有物理路径 （例如，我的电脑，） 的文件夹**确定**对话框上的按钮将被禁用。  
  
   
  
## Examples  
 下面的代码示例创建的应用程序使用户能够打开中的多格式文本 (.rtf) 文件<xref:System.Windows.Forms.RichTextBox>控件。  
  
 [!code-cpp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">用于获取路径。 关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <altmember cref="P:System.Windows.Forms.FolderBrowserDialog.RootFolder" />
      </Docs>
    </Member>
    <Member MemberName="ShowNewFolderButton">
      <MemberSignature Language="C#" Value="public bool ShowNewFolderButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowNewFolderButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowNewFolderButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowNewFolderButton { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowNewFolderButton : bool with get, set" Usage="System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示“新建文件夹”按钮是否显示在文件夹浏览对话框中。</summary>
        <value><see langword="true" /> 如果**新文件夹**按钮是否显示在对话框中; 否则为<see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton%2A>是`true`，则**新文件夹**按钮是否可见，使用户有机会创建一个文件夹。 当用户单击**新文件夹**按钮，创建一个新文件夹，然后系统会提示用户指定的文件夹名称。 在树中所选的节点将成为新的文件夹的父级。 实际的标题**新文件夹**按钮可以改变取决于操作系统  
  
> [!IMPORTANT]
>  设置<xref:System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton%2A>到`false`不适用于 Windows 2000。  
  
   
  
## Examples  
 下面的代码示例创建的应用程序使用户能够打开中的多格式文本 (.rtf) 文件<xref:System.Windows.Forms.RichTextBox>控件。  
  
 [!code-cpp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>