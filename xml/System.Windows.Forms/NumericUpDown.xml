<Type Name="NumericUpDown" FullName="System.Windows.Forms.NumericUpDown">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="65315312ef940ead113d34456222868f98395a2d" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32694784" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NumericUpDown : System.Windows.Forms.UpDownBase, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NumericUpDown extends System.Windows.Forms.UpDownBase implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.NumericUpDown" />
  <TypeSignature Language="VB.NET" Value="Public Class NumericUpDown&#xA;Inherits UpDownBase&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class NumericUpDown : System::Windows::Forms::UpDownBase, System::ComponentModel::ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.UpDownBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Value")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ValueChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Value")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示显示数值的 Windows 数字显示框（也称作 up-down 控件）。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Forms.NumericUpDown>控件包含一个单个的数字值，可以通过单击向上或向下按钮的控件是递增还是递减。 除非用户也可以输入一个值，在<xref:System.Windows.Forms.UpDownBase.ReadOnly%2A>属性设置为`true`。  
  
 可以通过设置格式显示数字<xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>， <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>，或<xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>属性。 若要在控件中显示的十六进制值，设置<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>属性`true`。 若要显示千位分隔符在适当的十进制数字中设置<xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>属性`true`。 若要指定在小数点之后显示的数字个数，设置<xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>要显示的小数位数的数字的属性。  
  
 若要指定控件的值的允许范围，设置<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>和<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>属性。 设置<xref:System.Windows.Forms.NumericUpDown.Increment%2A>值，以指定的值是递增还是递减到<xref:System.Windows.Forms.NumericUpDown.Value%2A>属性当用户单击向上或向下箭头按钮。 你可以增加控件移动通过号时用户连续按向上或向下箭头，通过设置的速度<xref:System.Windows.Forms.NumericUpDown.Accelerations%2A>属性。  
  
 当<xref:System.Windows.Forms.NumericUpDown.UpButton%2A>或<xref:System.Windows.Forms.NumericUpDown.DownButton%2A>调用方法，在代码或通过单击向上或向下按钮，新值进行验证，并使用适当的格式中的新值更新控件。 具体而言，如果<xref:System.Windows.Forms.UpDownBase.UserEdit%2A>属性设置为`true`、<xref:System.Windows.Forms.NumericUpDown.ParseEditText%2A>在验证或更新的值之前调用方法。 值然后验证介于<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>和<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>值，与<xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>调用方法。  
  
 从.NET Framework 4.6，开始<xref:System.Windows.Forms.NumericUpDown>将基于时 app.config 文件包含以下条目系统 DPI 设置调整控件的大小：  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
   
  
## Examples  
 下面的代码示例创建并初始化<xref:System.Windows.Forms.NumericUpDown>控件，设置的一些其通用的属性，并允许用户在运行时更改其中一些属性。 此代码假定三个<xref:System.Windows.Forms.CheckBox>控件已被放在窗体和处理程序其<xref:System.Windows.Forms.Control.Click>已实例化事件。 <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>， <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>，和<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>上设置属性<xref:System.Windows.Forms.Control.Click>事件的每个复选框。  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.UpDownBase" />
    <altmember cref="T:System.ComponentModel.ISupportInitialize" />
    <altmember cref="T:System.Windows.Forms.DomainUpDown" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NumericUpDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NumericUpDown();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.NumericUpDown" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例创建并初始化<xref:System.Windows.Forms.NumericUpDown>控件，设置的一些其通用的属性，并允许用户在运行时更改其中一些属性。 此代码假定三个<xref:System.Windows.Forms.CheckBox>控件已被放在窗体和处理程序其<xref:System.Windows.Forms.Control.Click>已实例化事件。 <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>， <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>，和<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>上设置属性<xref:System.Windows.Forms.Control.Click>事件的每个复选框。  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.UpDownBase" />
      </Docs>
    </Member>
    <Member MemberName="Accelerations">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.NumericUpDownAccelerationCollection Accelerations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.NumericUpDownAccelerationCollection Accelerations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Accelerations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Accelerations As NumericUpDownAccelerationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::NumericUpDownAccelerationCollection ^ Accelerations { System::Windows::Forms::NumericUpDownAccelerationCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.NumericUpDownAccelerationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取存储的 <see cref="T:System.Windows.Forms.NumericUpDown" /> 控件的加速对象的集合。</summary>
        <value>
          <see cref="T:System.Windows.Forms.NumericUpDownAccelerationCollection" /> 包含存储的 <see cref="T:System.Windows.Forms.NumericUpDown" /> 控件的加速对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.NumericUpDown.Accelerations%2A>属性可以用于提高与其速度<xref:System.Windows.Forms.NumericUpDown>通过一大组的数字时用户保存向上或向下箭头，通过键盘或鼠标的移动。 设置此属性将减少数<xref:System.Windows.Forms.NumericUpDown.ValueChanged>具体取决于发生的事件<xref:System.Windows.Forms.NumericUpDownAcceleration.Increment%2A>和<xref:System.Windows.Forms.NumericUpDownAcceleration.Seconds%2A>为每个指定的属性值<xref:System.Windows.Forms.NumericUpDownAcceleration>集合中的对象。 <xref:System.Windows.Forms.NumericUpDownAcceleration>按集合中包含的对象进行排序其<xref:System.Windows.Forms.NumericUpDownAcceleration.Seconds%2A?displayProperty=nameWithType>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.NumericUpDown.Accelerations%2A>属性。 若要运行此示例，请将以下代码粘贴到窗体并调用`InitializeAcceleratedUpDown`从窗体的构造函数的方法或<xref:System.Windows.Forms.Form.Load>事件处理方法。 在运行代码时，按和保存向上或向下箭头可以看到出现加速。  
  
 [!code-csharp[System.Windows.Forms.MiscBugDriven#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MiscBugDriven/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.MiscBugDriven#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MiscBugDriven/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.NumericUpDownAcceleration" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>开始初始化在窗体上使用或由另一个组件使用的 <see cref="T:System.Windows.Forms.NumericUpDown" /> 控件。 初始化发生在运行时。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>为该控件创建一个新的辅助功能对象。</summary>
        <returns>控件的新 <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
      </Docs>
    </Member>
    <Member MemberName="DecimalPlaces">
      <MemberSignature Language="C#" Value="public int DecimalPlaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DecimalPlaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.DecimalPlaces" />
      <MemberSignature Language="VB.NET" Value="Public Property DecimalPlaces As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DecimalPlaces { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数字显示框（也称作 up-down 控件）中要显示的十进制位数。</summary>
        <value>数字显示框中要显示的十进制位数。 默认值为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>设置属性，<xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>调用方法来更新为新格式的数字显示框的显示。  
  
 由用户的操作系统的区域设置确定相应的小数点。  
  
   
  
## Examples  
 下面的代码示例创建并初始化<xref:System.Windows.Forms.NumericUpDown>控件，设置的一些其通用的属性，并允许用户在运行时更改其中一些属性。 此代码假定三个<xref:System.Windows.Forms.CheckBox>控件已被放在窗体和处理程序其<xref:System.Windows.Forms.Control.Click>已实例化事件。 <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>， <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>，和<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>上设置属性<xref:System.Windows.Forms.Control.Click>事件的每个复选框。  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">所分配的值小于 0。  
  
 或  
  
 所赋的值大于 99。</exception>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Hexadecimal" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.ThousandsSeparator" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="DownButton">
      <MemberSignature Language="C#" Value="public override void DownButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DownButton() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.DownButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DownButton ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DownButton();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>减小数字显示框（也称作 up-down 控件）中的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Windows.Forms.NumericUpDown.DownButton%2A>调用方法、 在代码或通过单击向下按钮，验证新值和控件更新中的相应格式的新值。 具体而言，如果<xref:System.Windows.Forms.UpDownBase.UserEdit%2A>属性设置为`true`、<xref:System.Windows.Forms.NumericUpDown.ParseEditText%2A>在验证或更新的值之前调用方法。 然后验证的值介于<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>和<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>值，与<xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>调用方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpButton" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.ParseEditText" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>结束在窗体上使用或由另一个组件使用的 <see cref="T:System.Windows.Forms.NumericUpDown" /> 控件的初始化。 初始化发生在运行时。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hexadecimal">
      <MemberSignature Language="C#" Value="public bool Hexadecimal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Hexadecimal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Hexadecimal" />
      <MemberSignature Language="VB.NET" Value="Public Property Hexadecimal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Hexadecimal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示数字显示框（也称作 up-down 控件）是否以十六进制格式显示所包含的值。</summary>
        <value>
          如果数字显示框应以十六进制格式显示它的值，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>设置属性，<xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>调用方法来更新为新格式的数字显示框的显示。  
  
 当<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>属性设置为`true`、<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>属性应设置为<xref:System.Int32.MaxValue?displayProperty=nameWithType>和<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>属性应设置为<xref:System.Int32.MinValue?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下面的代码示例创建并初始化<xref:System.Windows.Forms.NumericUpDown>控件，设置的一些其通用的属性，并允许用户在运行时更改其中一些属性。 此代码假定三个<xref:System.Windows.Forms.CheckBox>控件已被放在窗体和处理程序其<xref:System.Windows.Forms.Control.Click>已实例化事件。 <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>， <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>，和<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>上设置属性<xref:System.Windows.Forms.Control.Click>事件的每个复选框。  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.DecimalPlaces" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.ThousandsSeparator" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public decimal Increment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal Increment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Increment" />
      <MemberSignature Language="VB.NET" Value="Public Property Increment As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Decimal Increment { System::Decimal get(); void set(System::Decimal value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置单击向上或向下按钮时，数字显示框（也称作 up-down 控件）递增或递减的值。</summary>
        <value>单击数字显示框上的向上或向下按钮时 <see cref="P:System.Windows.Forms.NumericUpDown.Value" /> 属性要递增或递减的值。 默认值为 1。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 单击上移按钮会导致<xref:System.Windows.Forms.NumericUpDown.Value%2A>属性以指定的数量递增<xref:System.Windows.Forms.NumericUpDown.Increment%2A>属性和方法<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>属性。 单击向下按钮会导致<xref:System.Windows.Forms.NumericUpDown.Value%2A>属性要通过按指定的量递减<xref:System.Windows.Forms.NumericUpDown.Increment%2A>属性和方法<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>属性。  
  
   
  
## Examples  
 下面的代码示例创建并初始化<xref:System.Windows.Forms.NumericUpDown>控件，设置的一些其通用的属性，并允许用户在运行时更改其中一些属性。 此代码假定三个<xref:System.Windows.Forms.CheckBox>控件已被放在窗体和处理程序其<xref:System.Windows.Forms.Control.Click>已实例化事件。 <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>， <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>，和<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>上设置属性<xref:System.Windows.Forms.Control.Click>事件的每个复选框。  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">所赋的值不大于或等于零。</exception>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
      </Docs>
    </Member>
    <Member MemberName="Maximum">
      <MemberSignature Language="C#" Value="public decimal Maximum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal Maximum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Maximum" />
      <MemberSignature Language="VB.NET" Value="Public Property Maximum As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Decimal Maximum { System::Decimal get(); void set(System::Decimal value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数字显示框（也称作 up-down 控件）的最大值。</summary>
        <value>数字显示框的最大值。 默认值为 100。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>设置属性，<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>计算属性和<xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>调用方法。 如果<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>属性大于新<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>属性，<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>属性值设置为等于<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>值。 如果当前<xref:System.Windows.Forms.NumericUpDown.Value%2A>大于新<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>值。 <xref:System.Windows.Forms.NumericUpDown.Value%2A>属性值设置为等于<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>值。  
  
   
  
## Examples  
 下面的代码示例创建并初始化<xref:System.Windows.Forms.NumericUpDown>控件，设置的一些其通用的属性，并允许用户在运行时更改其中一些属性。 此代码假定三个<xref:System.Windows.Forms.CheckBox>控件已被放在窗体和处理程序其<xref:System.Windows.Forms.Control.Click>已实例化事件。 <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>， <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>，和<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>上设置属性<xref:System.Windows.Forms.Control.Click>事件的每个复选框。  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Increment" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="Minimum">
      <MemberSignature Language="C#" Value="public decimal Minimum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal Minimum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Minimum" />
      <MemberSignature Language="VB.NET" Value="Public Property Minimum As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Decimal Minimum { System::Decimal get(); void set(System::Decimal value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数字显示框（也称作 up-down 控件）的最小允许值。</summary>
        <value>数字显示框的最小允许值。 默认值为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>设置属性，<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>计算属性和<xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>调用方法。 如果新<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>属性值是否大于<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>属性值<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>值设置为等于<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>值。 如果<xref:System.Windows.Forms.NumericUpDown.Value%2A>小于新<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>值，<xref:System.Windows.Forms.NumericUpDown.Value%2A>属性也设置为等于<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>值。  
  
   
  
## Examples  
 下面的代码示例创建并初始化<xref:System.Windows.Forms.NumericUpDown>控件，设置的一些其通用的属性，并允许用户在运行时更改其中一些属性。 此代码假定三个<xref:System.Windows.Forms.CheckBox>控件已被放在窗体和处理程序其<xref:System.Windows.Forms.Control.Click>已实例化事件。 <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>， <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>，和<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>上设置属性<xref:System.Windows.Forms.Control.Click>事件的每个复选框。  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Increment" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.Control.KeyDown" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.NumericUpDown.OnKeyDown%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Windows.Forms.NumericUpDown.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.NumericUpDown.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.Control.KeyUp" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.NumericUpDown.OnKeyUp%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Windows.Forms.NumericUpDown.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.NumericUpDown.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.Control.LostFocus" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.NumericUpDown.OnLostFocus%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Windows.Forms.NumericUpDown.OnLostFocus(System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.NumericUpDown.OnLostFocus(System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnTextBoxKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnTextBoxKeyPress (object source, System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextBoxKeyPress(object source, class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextBoxKeyPress (source As Object, e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextBoxKeyPress(System::Object ^ source, System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="source">事件源。</param>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.KeyPressEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.Control.KeyPress" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.NumericUpDown>控件接受仅数字，负号、 小数点，和编辑键击，例如退格符。 如果<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>属性设置为`true`，<xref:System.Windows.Forms.NumericUpDown>接受十六进制数字。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnValueChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValueChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValueChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValueChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.NumericUpDown.ValueChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.NumericUpDown.OnValueChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Value" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Forms.NumericUpDown" /> 控件的边缘及其内容之间的间距。</summary>
        <value>
          在所有情况下均为 <see cref="F:System.Windows.Forms.Padding.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置<xref:System.Windows.Forms.NumericUpDown.Padding%2A>属性作为的外观没有影响<xref:System.Windows.Forms.NumericUpDown>控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NumericUpDown.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 <see cref="P:System.Windows.Forms.NumericUpDown.Padding" /> 属性的值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseEditText">
      <MemberSignature Language="C#" Value="protected void ParseEditText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ParseEditText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.ParseEditText" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ParseEditText ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ParseEditText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将数字显示框（也称作 up-down 控件）中显示的文本转换为数值，并计算该值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Forms.UpDownBase.UserEdit%2A>属性设置为`true`，显示的文本转换为数字值，因此它可以验证介于<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>和<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>属性值。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="P:System.Windows.Forms.UpDownBase.UserEdit" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在 <see cref="T:System.Windows.Forms.NumericUpDown" /> 控件中显示的文本。</summary>
        <value>
          <see langword="Null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.NumericUpDown.Text%2A>的外观产生任何影响<xref:System.Windows.Forms.NumericUpDown>控制; 因此，其处于隐藏状态在设计器以及从智能感知。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NumericUpDown.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 <see cref="P:System.Windows.Forms.NumericUpDown.Text" /> 属性的值更改时发生。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThousandsSeparator">
      <MemberSignature Language="C#" Value="public bool ThousandsSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThousandsSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.ThousandsSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property ThousandsSeparator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThousandsSeparator { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在适当的时候数字显示框（也称作 up-down 控件）中是否显示千位分隔符。</summary>
        <value>
          如果在适当的情况下在数字显示框中显示千位分隔符，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>设置属性，<xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>调用方法来更新为新格式的数字显示框的显示。  
  
 相应的千位分隔符由用户的操作系统的区域设置。  
  
   
  
## Examples  
 下面的代码示例创建并初始化<xref:System.Windows.Forms.NumericUpDown>控件，设置的一些其通用的属性，并允许用户在运行时更改其中一些属性。 此代码假定三个<xref:System.Windows.Forms.CheckBox>控件已被放在窗体和处理程序其<xref:System.Windows.Forms.Control.Click>已实例化事件。 <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>， <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>，和<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>上设置属性<xref:System.Windows.Forms.Control.Click>事件的每个复选框。  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.DecimalPlaces" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Hexadecimal" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回表示 <see cref="T:System.Windows.Forms.NumericUpDown" /> 控件的字符串。</summary>
        <returns>表示当前 <see cref="T:System.Windows.Forms.NumericUpDown" /> 的字符串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回字符串包括类型和值<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>和<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpButton">
      <MemberSignature Language="C#" Value="public override void UpButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpButton() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.UpButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpButton ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpButton();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>增加数字显示框（也称作 up-down 控件）中的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Windows.Forms.NumericUpDown.UpButton%2A>调用方法、 在代码或通过单击上移按钮，验证新值和控件更新中的相应格式的新值。 具体而言，如果<xref:System.Windows.Forms.UpDownBase.UserEdit%2A>设置为`true`，<xref:System.Windows.Forms.NumericUpDown.ParseEditText%2A>验证或更新的值之前调用。 然后验证的值介于<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>和<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>值和<xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>调用方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NumericUpDown.DownButton" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.ParseEditText" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="UpdateEditText">
      <MemberSignature Language="C#" Value="protected override void UpdateEditText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateEditText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateEditText ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateEditText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>以适当的格式显示数字显示框（也称作 up-down 控件）中的当前值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果未进行初始化的数字调整框，验证的当前值介于<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>和<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>值并转换为以在控件中显示正确的格式。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.DecimalPlaces" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Hexadecimal" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.ThousandsSeparator" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEditText">
      <MemberSignature Language="C#" Value="protected override void ValidateEditText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ValidateEditText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.ValidateEditText" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ValidateEditText ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ValidateEditText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>验证并更新数字显示框（也称作 up-down 控件）中显示的文本。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.NumericUpDown.ValidateEditText%2A>方法调用<xref:System.Windows.Forms.NumericUpDown.ParseEditText%2A>和<xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>方法来验证和更新数字显示框的显示。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NumericUpDown.ParseEditText" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public decimal Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Decimal Value { System::Decimal get(); void set(System::Decimal value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置赋给数字显示框（也称作 up-down 控件）的值。</summary>
        <value>
          <see cref="T:System.Windows.Forms.NumericUpDown" /> 控件的数值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Windows.Forms.NumericUpDown.Value%2A>属性设置，则新值验证介于<xref:System.Windows.Forms.NumericUpDown.Minimum%2A>和<xref:System.Windows.Forms.NumericUpDown.Maximum%2A>值。 此操作，请按照<xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>调用方法来使用适当的格式中的新值更新数字显示框的显示。  
  
   
  
## Examples  
 下面的代码示例创建并初始化<xref:System.Windows.Forms.NumericUpDown>控件，设置的一些其通用的属性，并允许用户在运行时更改其中一些属性。 此代码假定三个<xref:System.Windows.Forms.CheckBox>控件已被放在窗体和处理程序其<xref:System.Windows.Forms.Control.Click>已实例化事件。 <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>， <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>，和<xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>上设置属性<xref:System.Windows.Forms.Control.Click>事件的每个复选框。  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">所赋的值小于 <see cref="P:System.Windows.Forms.NumericUpDown.Minimum" /> 属性值。  
  
 或  
  
 所赋的值大于 <see cref="P:System.Windows.Forms.NumericUpDown.Maximum" /> 属性值。</exception>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="ValueChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ValueChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ValueChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NumericUpDown.ValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ValueChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ValueChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在以某种方式更改 <see cref="P:System.Windows.Forms.NumericUpDown.Value" /> 属性后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关<xref:System.Windows.Forms.NumericUpDown.ValueChanged>事件发生，<xref:System.Windows.Forms.NumericUpDown.Value%2A>可以在代码中，更改属性，通过单击向上或向下按钮，或由用户输入读取由控件的新值。 在用户点击 ENTER 键或后离开此控件时读取新值。 如果用户输入新值，然后单击向上或向下按钮，<xref:System.Windows.Forms.NumericUpDown.ValueChanged>事件会发生两次。  
  
 有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。 在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.NumericUpDown.ValueChanged>事件。 此报告可帮助您了解当发生事件，并可以帮助您进行调试。 若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。  
  
 若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.NumericUpDown>名为`NumericUpDown1`。 然后，确保与事件处理程序<xref:System.Windows.Forms.NumericUpDown.ValueChanged>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#515](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#515)]
 [!code-vb[System.Windows.Forms.EventExamples#515](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#515)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Value" />
      </Docs>
    </Member>
  </Members>
</Type>