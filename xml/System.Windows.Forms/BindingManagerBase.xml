<Type Name="BindingManagerBase" FullName="System.Windows.Forms.BindingManagerBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="97422e410637e0a264c153e7fff78db5be864179" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36348489" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BindingManagerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BindingManagerBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingManagerBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingManagerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingManagerBase abstract" />
  <TypeSignature Language="F#" Value="type BindingManagerBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="94060-101">管理绑定到相同数据源和数据成员的所有 <see cref="T:System.Windows.Forms.Binding" /> 对象。</span>
      <span class="sxs-lookup">
        <span data-stu-id="94060-101">Manages all <see cref="T:System.Windows.Forms.Binding" /> objects that are bound to the same data source and data member.</span>
      </span>
      <span data-ttu-id="94060-102">此类为抽象类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="94060-102">This class is abstract.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-103"><xref:System.Windows.Forms.BindingManagerBase>允许 Windows 窗体上绑定到同一数据源的数据绑定控件同步。</span><span class="sxs-lookup"><span data-stu-id="94060-103">The <xref:System.Windows.Forms.BindingManagerBase> enables the synchronization of data-bound controls on a Windows Form that are bound to the same data source.</span></span> <span data-ttu-id="94060-104">(有关将控件绑定到数据源的简单的详细信息，请参阅<xref:System.Windows.Forms.Binding>类。)例如，假设一个窗体包含两个<xref:System.Windows.Forms.TextBox>同一数据源但属于不同的列绑定的控件。</span><span class="sxs-lookup"><span data-stu-id="94060-104">(For more information about simple binding a control to a data source, see the <xref:System.Windows.Forms.Binding> class.) For example, suppose that a form contains two <xref:System.Windows.Forms.TextBox> controls that are bound to the same data source but to different columns.</span></span> <span data-ttu-id="94060-105">数据源可以是<xref:System.Data.DataTable>，包含客户名称，而这些列可能包含的第一个和最后一个名称。</span><span class="sxs-lookup"><span data-stu-id="94060-105">The data source might be a <xref:System.Data.DataTable> that contains customer names, while the columns might contain the first and last names.</span></span> <span data-ttu-id="94060-106">为了显示为相应的第一个和最后一个名称组合在一起以相同的客户，必须同步这两个控件。</span><span class="sxs-lookup"><span data-stu-id="94060-106">The two controls must be synchronized in order to display the correct first and last names together for the same customer.</span></span> <span data-ttu-id="94060-107"><xref:System.Windows.Forms.CurrencyManager>，它继承自<xref:System.Windows.Forms.BindingManagerBase>类中，通过维护指向数据源中的当前项的指针来完成此同步。</span><span class="sxs-lookup"><span data-stu-id="94060-107">The <xref:System.Windows.Forms.CurrencyManager>, which inherits from the <xref:System.Windows.Forms.BindingManagerBase> class, accomplishes this synchronization by maintaining a pointer to the current item in the data source.</span></span> <span data-ttu-id="94060-108"><xref:System.Windows.Forms.TextBox>控件将绑定到当前项，使其能够显示同一行的信息。</span><span class="sxs-lookup"><span data-stu-id="94060-108">The <xref:System.Windows.Forms.TextBox> controls are bound to the current item so they display the information for the same row.</span></span> <span data-ttu-id="94060-109">如果当前项更改，<xref:System.Windows.Forms.CurrencyManager>通知所有绑定控件，以便它们可以刷新其数据。</span><span class="sxs-lookup"><span data-stu-id="94060-109">When the current item changes, the <xref:System.Windows.Forms.CurrencyManager> notifies all the bound controls so that they can refresh their data.</span></span> <span data-ttu-id="94060-110">此外，你可以设置<xref:System.Windows.Forms.BindingManagerBase.Position%2A>属性来指定中的行<xref:System.Data.DataTable>控件所指向的。</span><span class="sxs-lookup"><span data-stu-id="94060-110">Furthermore, you can set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to specify the row in the <xref:System.Data.DataTable> that the controls point to.</span></span> <span data-ttu-id="94060-111">若要确定数据源中存在的行数，请使用<xref:System.Windows.Forms.BindingManagerBase.Count%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="94060-111">To determine how many rows exist in the data source, use the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property.</span></span>  
  
 <span data-ttu-id="94060-112"><xref:System.Windows.Forms.CurrencyManager>是必要的因为数据源不一定维护当前项的指针。</span><span class="sxs-lookup"><span data-stu-id="94060-112">The <xref:System.Windows.Forms.CurrencyManager> is necessary because data sources do not necessarily maintain a current-item pointer.</span></span> <span data-ttu-id="94060-113">例如，数组和<xref:System.Collections.ArrayList>对象可以是数据源，但它们不具有返回当前项的属性。</span><span class="sxs-lookup"><span data-stu-id="94060-113">For instance, arrays and <xref:System.Collections.ArrayList> objects can be data sources, but they do not have a property that returns the current item.</span></span> <span data-ttu-id="94060-114">若要获取当前项，请使用<xref:System.Windows.Forms.BindingManagerBase.Current%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="94060-114">To get the current item, use the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> property.</span></span>  
  
 <span data-ttu-id="94060-115"><xref:System.Windows.Forms.PropertyManager>也继承自<xref:System.Windows.Forms.BindingManagerBase>，并且它用于维护当前属性的对象，而不是数据源中的当前对象的属性。</span><span class="sxs-lookup"><span data-stu-id="94060-115">The <xref:System.Windows.Forms.PropertyManager> also inherits from the <xref:System.Windows.Forms.BindingManagerBase>, and it is used to maintain the current property of an object, rather than the property of a current object in a data source.</span></span> <span data-ttu-id="94060-116">因此，尝试设置<xref:System.Windows.Forms.BindingManagerBase.Position%2A>或<xref:System.Windows.Forms.BindingManagerBase.Count%2A>属性<xref:System.Windows.Forms.PropertyManager>不起作用。</span><span class="sxs-lookup"><span data-stu-id="94060-116">For this reason, trying to set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> or <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property for a <xref:System.Windows.Forms.PropertyManager> has no effect.</span></span>  
  
 <span data-ttu-id="94060-117">若要创建<xref:System.Windows.Forms.BindingManagerBase>，使用<xref:System.Windows.Forms.BindingContext>类，该类返回<xref:System.Windows.Forms.CurrencyManager>或<xref:System.Windows.Forms.PropertyManager>，取决于正在管理的数据源。</span><span class="sxs-lookup"><span data-stu-id="94060-117">To create a <xref:System.Windows.Forms.BindingManagerBase>, use the <xref:System.Windows.Forms.BindingContext> class, which returns either a <xref:System.Windows.Forms.CurrencyManager> or a <xref:System.Windows.Forms.PropertyManager>, depending on the data source being managed.</span></span>  
  
 <span data-ttu-id="94060-118">解决方案程序员人员最好控件直接绑定到<xref:System.Windows.Forms.BindingSource>组件，它将作为数据源和连接到实际目标数据源的数据连接器。</span><span class="sxs-lookup"><span data-stu-id="94060-118">Solutions programmers are encouraged to bind controls directly to a <xref:System.Windows.Forms.BindingSource> component, which acts as both a data source and data connector to the actual target data source.</span></span> <span data-ttu-id="94060-119"><xref:System.Windows.Forms.BindingSource> 极大地简化了这两个简单和复杂数据绑定，包括管理控件与其目标之间的货币。</span><span class="sxs-lookup"><span data-stu-id="94060-119"><xref:System.Windows.Forms.BindingSource> greatly simplifies both simple and complex data binding, including managing currency between the control and its target.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94060-120">下面的代码示例使用<xref:System.Windows.Forms.BindingContext>返回<xref:System.Windows.Forms.BindingManagerBase>特定数据源。</span><span class="sxs-lookup"><span data-stu-id="94060-120">The following code example uses the <xref:System.Windows.Forms.BindingContext> to return a <xref:System.Windows.Forms.BindingManagerBase> for a specific data source.</span></span> <span data-ttu-id="94060-121">(该示例假定您已声明`myBindingManagerBase`中模块的声明部分。)然后该示例添加的事件委托给<xref:System.Windows.Forms.BindingManagerBase.CurrentChanged>和<xref:System.Windows.Forms.BindingManagerBase.PositionChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="94060-121">(The example assumes you have declared `myBindingManagerBase` in the Declarations section of the module.) The example then adds event delegates to the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> and <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> events.</span></span> <span data-ttu-id="94060-122">最后，该示例包含四个方法 (`MoveNext`， `MovePrevious`， `MoveFirst`，和`MoveLast`) 的递增或递减<xref:System.Windows.Forms.BindingManagerBase.Position%2A>属性，同时设置<xref:System.Windows.Forms.BindingManagerBase.Position%2A>到列表中的第一个或最后一个行。</span><span class="sxs-lookup"><span data-stu-id="94060-122">Lastly, the example contains four methods (`MoveNext`, `MovePrevious`, `MoveFirst`, and `MoveLast`) that increment or decrement the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property, and set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> to the first or last row in the list.</span></span> <span data-ttu-id="94060-123">在列表中的最后一行确定使用<xref:System.Windows.Forms.BindingManagerBase.Count%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="94060-123">The last row in the list is determined by using the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="94060-124">
        <para>继承自<see cref="T:System.Windows.Forms.BindingManagerBase" />，你必须重写以下抽象成员： <see cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />， <see cref="P:System.Windows.Forms.BindingManagerBase.Count" />， <see cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />， <see cref="P:System.Windows.Forms.BindingManagerBase.Current" />， <see cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />， <see cref="M:System.Windows.Forms.BindingManagerBase.GetItemProperties" />， <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />， <see cref="P:System.Windows.Forms.BindingManagerBase.Position" />， <see cref="M:System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)" /><see cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />， <see cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />，和<see cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="94060-124">
          <para>When you inherit from <see cref="T:System.Windows.Forms.BindingManagerBase" />, you must override the following abstract members: <see cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Count" />, <see cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Current" />, <see cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />, <see cref="M:System.Windows.Forms.BindingManagerBase.GetItemProperties" />, <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Position" />, <see cref="M:System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)" />, <see cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />, <see cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />, and <see cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Windows.Forms.BindingSource" />
    <altmember cref="T:System.Windows.Forms.BindingContext" />
    <altmember cref="T:System.Windows.Forms.CurrencyManager" />
    <altmember cref="T:System.Windows.Forms.PropertyManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingManagerBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingManagerBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94060-125">初始化 <see cref="T:System.Windows.Forms.BindingManagerBase" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-125">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingManagerBase" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-126">默认构造函数集<xref:System.Windows.Forms.BindingManagerBase.Bindings%2A>属性`null`。</span><span class="sxs-lookup"><span data-stu-id="94060-126">The default constructor sets the <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public abstract void AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddNew();" />
      <MemberSignature Language="F#" Value="abstract member AddNew : unit -&gt; unit" Usage="bindingManagerBase.AddNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94060-127">当在派生类中被重写时，向基础列表添加一个新项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-127">When overridden in a derived class, adds a new item to the underlying list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-128"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A>方法对基础列表的项的类型使用默认构造函数添加一个新项。</span><span class="sxs-lookup"><span data-stu-id="94060-128">The <xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> method adds a new item to the underlying list by using the default constructor for that item's type.</span></span> <span data-ttu-id="94060-129"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> 主要用于将复杂数据绑定支持添加到其自定义组件的程序员使用。</span><span class="sxs-lookup"><span data-stu-id="94060-129"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> is intended primarily to be used by programmers adding complex data-binding support to their custom component.</span></span>  
  
 <span data-ttu-id="94060-130"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> 通常实现使用允许应用程序程序员可以插入自己的代码用于创建自定义的项目的以下模式：</span><span class="sxs-lookup"><span data-stu-id="94060-130"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> is commonly implemented using the following pattern that allows application programmers to inject their own code for creating customized items:</span></span>  
  
1.  <span data-ttu-id="94060-131"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> 引发 <xref:System.Windows.Forms.BindingSource.AddingNew> 事件。</span><span class="sxs-lookup"><span data-stu-id="94060-131"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> raises the <xref:System.Windows.Forms.BindingSource.AddingNew> event.</span></span>  
  
2.  <span data-ttu-id="94060-132">程序员可以通过处理提供的自定义项<xref:System.Windows.Forms.BindingSource.AddingNew>事件，并设置<xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A>属性<xref:System.ComponentModel.AddingNewEventArgs>到新的项的参数。</span><span class="sxs-lookup"><span data-stu-id="94060-132">The programmer can supply a custom item by handling the <xref:System.Windows.Forms.BindingSource.AddingNew> event and setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs> parameter to the new item.</span></span> <span data-ttu-id="94060-133">否则，该组件应创建使用默认构造函数的项。</span><span class="sxs-lookup"><span data-stu-id="94060-133">Otherwise, the component should create an item using the default constructor.</span></span>  
  
3.  <span data-ttu-id="94060-134">如果数据源不实现<xref:System.ComponentModel.IEditableObject>接口，项立即添加到的数据源和基础列表。</span><span class="sxs-lookup"><span data-stu-id="94060-134">If the data source does not implement the <xref:System.ComponentModel.IEditableObject> interface, the item is immediately added to the data source and underlying list.</span></span> <span data-ttu-id="94060-135">如果支持此接口，则添加事务性通过<xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A>和<xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="94060-135">If this interface is supported, then the addition is transacted by the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> and <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" />
        <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />
      </Docs>
    </Member>
    <Member MemberName="BindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingCompleteEventHandler BindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingComplete As BindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingCompleteEventHandler ^ BindingComplete;" />
      <MemberSignature Language="F#" Value="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " Usage="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94060-136">在数据绑定操作完成时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-136">Occurs at the completion of a data-binding operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-137"><xref:System.Windows.Forms.BindingManagerBase.BindingComplete>可包括以下内容的数据绑定操作完成后发生的事件：</span><span class="sxs-lookup"><span data-stu-id="94060-137">The <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event occurs after the completion of a data-binding operation, which may include the following:</span></span>  
  
-   <span data-ttu-id="94060-138">将信息从数据源推送到其绑定的控件的属性。</span><span class="sxs-lookup"><span data-stu-id="94060-138">Pushing information from the data source into the property of its bound control.</span></span>  
  
-   <span data-ttu-id="94060-139">拉取到其关联的数据源绑定控件中的信息。</span><span class="sxs-lookup"><span data-stu-id="94060-139">Pulling information from a bound control into its associated data source.</span></span>  
  
 <span data-ttu-id="94060-140">尽管可以通过检查来确定此状态，请注意，无论的完成状态的绑定操作中，将引发此事件<xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A>属性<xref:System.Windows.Forms.BindingCompleteEventArgs>与事件关联的参数。</span><span class="sxs-lookup"><span data-stu-id="94060-140">Note that this event is raised regardless of the completion status of the binding operation, although this status can be determined by examining the <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> property of the <xref:System.Windows.Forms.BindingCompleteEventArgs> parameter associated with the event.</span></span> <span data-ttu-id="94060-141"><xref:System.Windows.Forms.BindingCompleteEventArgs> 此外可能包含错误和异常信息。</span><span class="sxs-lookup"><span data-stu-id="94060-141"><xref:System.Windows.Forms.BindingCompleteEventArgs> may also contain error and exception information.</span></span> <span data-ttu-id="94060-142">例如，尝试从数据源到推送 null 值的绑定操作<xref:System.Windows.Forms.DateTimePicker>控件将产生异常，因为<xref:System.DateTime>不能为`null`。</span><span class="sxs-lookup"><span data-stu-id="94060-142">For example, a binding operation that attempts to push a null value from a data source into a <xref:System.Windows.Forms.DateTimePicker> control will generate an exception, since a <xref:System.DateTime> cannot be `null`.</span></span> <span data-ttu-id="94060-143">在这种情况下，绑定操作未成功完成，但<xref:System.Windows.Forms.BindingManagerBase.BindingComplete>将引发事件，并且该事件将包含失败的绑定尝试的信息。</span><span class="sxs-lookup"><span data-stu-id="94060-143">In this case, although the binding operation does not successfully complete, the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event will be raised, and the event will contain information on the failed binding attempt.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94060-144">下面的代码示例演示如何处理<xref:System.Windows.Forms.BindingManagerBase.BindingComplete>事件，并确保控件值之一更改时，绑定到同一数据源的多个控件保持同步。</span><span class="sxs-lookup"><span data-stu-id="94060-144">The following code example demonstrates how to handle the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event and ensure multiple controls bound to the same data source remain synchronized when one of the control values is changed.</span></span> <span data-ttu-id="94060-145">若要运行此示例，请将代码粘贴到 Windows 窗体和调用`InitializeControlsAndData`从窗体的构造函数的方法或<xref:System.Windows.Forms.Form.Load>事件处理方法。</span><span class="sxs-lookup"><span data-stu-id="94060-145">To run this example, paste the code into a Windows Form and call the `InitializeControlsAndData` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
        <altmember cref="T:System.Windows.Forms.BindingCompleteEventArgs" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
      </Docs>
    </Member>
    <Member MemberName="Bindings">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingsCollection Bindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingsCollection Bindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bindings As BindingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingsCollection ^ Bindings { System::Windows::Forms::BindingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Bindings : System.Windows.Forms.BindingsCollection" Usage="System.Windows.Forms.BindingManagerBase.Bindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94060-146">获取所管理绑定的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-146">Gets the collection of bindings being managed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94060-147">一个 <see cref="T:System.Windows.Forms.BindingsCollection" />，它包含该 <see cref="T:System.Windows.Forms.Binding" /> 所管理的 <see cref="T:System.Windows.Forms.BindingManagerBase" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-147">A <see cref="T:System.Windows.Forms.BindingsCollection" /> that contains the <see cref="T:System.Windows.Forms.Binding" /> objects managed by this <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94060-148">下面的代码示例获取<xref:System.Windows.Forms.BindingManagerBase>特定数据源。</span><span class="sxs-lookup"><span data-stu-id="94060-148">The following code example gets the <xref:System.Windows.Forms.BindingManagerBase> for a specific data source.</span></span> <span data-ttu-id="94060-149">然后该示例使用<xref:System.Windows.Forms.BindingManagerBase.Bindings%2A>以打印有关每个控件的信息的属性绑定到同一数据源。</span><span class="sxs-lookup"><span data-stu-id="94060-149">The example then uses the <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> property to print information about each control bound to the same data source.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Bindings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Bindings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Bindings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Bindings Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Bindings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Bindings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Binding" />
        <altmember cref="T:System.Windows.Forms.BindingContext" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
      </Docs>
    </Member>
    <Member MemberName="CancelCurrentEdit">
      <MemberSignature Language="C#" Value="public abstract void CancelCurrentEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelCurrentEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CancelCurrentEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CancelCurrentEdit();" />
      <MemberSignature Language="F#" Value="abstract member CancelCurrentEdit : unit -&gt; unit" Usage="bindingManagerBase.CancelCurrentEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94060-150">当在派生类中被重写时，取消当前编辑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-150">When overridden in a derived class, cancels the current edit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-151">仅当数据源实现时，才支持此方法<xref:System.ComponentModel.IEditableObject>接口。</span><span class="sxs-lookup"><span data-stu-id="94060-151">This method is supported only if the data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="94060-152">如果对象没有实现<xref:System.ComponentModel.IEditableObject>接口，对数据所做的更改将不会被放弃。</span><span class="sxs-lookup"><span data-stu-id="94060-152">If the object does not implement the <xref:System.ComponentModel.IEditableObject> interface, changes made to the data will not be discarded.</span></span>  
  
 <span data-ttu-id="94060-153">调用<xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A>方法使<xref:System.Windows.Forms.Binding.Format>事件发生。</span><span class="sxs-lookup"><span data-stu-id="94060-153">Calling the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> method causes the <xref:System.Windows.Forms.Binding.Format> event to occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94060-154">下面的代码示例演示<xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A>和<xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="94060-154">The following code example demonstrates both the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> and the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> methods.</span></span> <span data-ttu-id="94060-155">当调用<xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A>方法，对数据所做的更改将被丢弃。</span><span class="sxs-lookup"><span data-stu-id="94060-155">When you call the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> methods, changes made to the data are discarded.</span></span> <span data-ttu-id="94060-156">当调用<xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A>方法，更改将被保留。</span><span class="sxs-lookup"><span data-stu-id="94060-156">When you call the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> method, the changes are kept.</span></span>  
  
 [!code-cpp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CPP/canceledit.cpp#1)]
 [!code-csharp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CS/canceledit.cs#1)]
 [!code-vb[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/VB/canceledit.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public abstract int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.BindingManagerBase.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94060-157">在派生类中重写时，获取 <see cref="T:System.Windows.Forms.BindingManagerBase" /> 托管的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-157">When overridden in a derived class, gets the number of rows managed by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94060-158">
            <see cref="T:System.Windows.Forms.BindingManagerBase" /> 托管的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-158">The number of rows managed by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-159">使用<xref:System.Windows.Forms.BindingManagerBase.Count%2A>属性来确定在列表中的最后一项的行由维护<xref:System.Windows.Forms.BindingManagerBase>。</span><span class="sxs-lookup"><span data-stu-id="94060-159">Use the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property to determine the last item in the list of rows maintained by the <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="94060-160">若要转到最后一个项，设置<xref:System.Windows.Forms.BindingManagerBase.Position%2A>属性<xref:System.Windows.Forms.BindingManagerBase.Count%2A>减 1 的属性值。</span><span class="sxs-lookup"><span data-stu-id="94060-160">To go to the last item, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property value minus 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94060-161">下面的代码示例显示四个方法设置<xref:System.Windows.Forms.BindingManagerBase.Position%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="94060-161">The following code example shows four methods that set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property.</span></span> <span data-ttu-id="94060-162">`MoveNext`方法按 1 递增属性。</span><span class="sxs-lookup"><span data-stu-id="94060-162">The `MoveNext` method increments the property by 1.</span></span> <span data-ttu-id="94060-163">`MovePrevious`方法递减 1 的属性。</span><span class="sxs-lookup"><span data-stu-id="94060-163">The `MovePrevious` method decrements the property by 1.</span></span> <span data-ttu-id="94060-164">`MoveFirst`方法将属性设置为 0。</span><span class="sxs-lookup"><span data-stu-id="94060-164">The `MoveFirst` method sets the property to 0.</span></span> <span data-ttu-id="94060-165">`MoveLast`方法设置的属性的值<xref:System.Windows.Forms.BindingManagerBase.Count%2A>减 1 的属性。</span><span class="sxs-lookup"><span data-stu-id="94060-165">The `MoveLast` method sets the property to the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property minus 1.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public abstract object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Current" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Windows.Forms.BindingManagerBase.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94060-166">当在派生类中被重写时，获取当前对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-166">When overridden in a derived class, gets the current object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94060-167">代表当前对象的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-167">An <see cref="T:System.Object" /> that represents the current object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-168"><xref:System.Windows.Forms.BindingManagerBase.Current%2A>对象包含的数据源中的当前项的值。</span><span class="sxs-lookup"><span data-stu-id="94060-168">The <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object contains the value of the current item in the data source.</span></span> <span data-ttu-id="94060-169">若要使用的当前项的值，必须强制转换到的项<xref:System.Type>由包含的对象的<xref:System.Windows.Forms.Binding.DataSource%2A>。</span><span class="sxs-lookup"><span data-stu-id="94060-169">To use the value of the current item, you must cast the item to the <xref:System.Type> of the object contained by the <xref:System.Windows.Forms.Binding.DataSource%2A>.</span></span> <span data-ttu-id="94060-170">例如，<xref:System.Data.DataTable>包含<xref:System.Data.DataRowView>对象。</span><span class="sxs-lookup"><span data-stu-id="94060-170">For example, a <xref:System.Data.DataTable> contains <xref:System.Data.DataRowView> objects.</span></span> <span data-ttu-id="94060-171">若要确定当前对象的类型，请使用<xref:System.Object.GetType%2A>和<xref:System.Type.ToString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="94060-171">To determine the type of the current object, use the <xref:System.Object.GetType%2A> and <xref:System.Type.ToString%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94060-172">当<xref:System.Windows.Forms.Binding.DataSource%2A>是<xref:System.Data.DataSet>， <xref:System.Data.DataViewManager>，或<xref:System.Data.DataTable>，实际上绑定到<xref:System.Data.DataView>。</span><span class="sxs-lookup"><span data-stu-id="94060-172">When the <xref:System.Windows.Forms.Binding.DataSource%2A> is a <xref:System.Data.DataSet>, <xref:System.Data.DataViewManager>, or <xref:System.Data.DataTable>, you are actually binding to a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="94060-173">因此，每个<xref:System.Windows.Forms.BindingManagerBase.Current%2A>对象是<xref:System.Data.DataRowView>对象。</span><span class="sxs-lookup"><span data-stu-id="94060-173">Consequently, each <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object is a <xref:System.Data.DataRowView> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94060-174">下面的代码示例打印该值的<xref:System.Windows.Forms.BindingManagerBase.Current%2A>对象在<xref:System.Windows.Forms.BindingManagerBase>中<xref:System.Windows.Forms.BindingManagerBase.CurrentChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="94060-174">The following code example prints the value of the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object in a <xref:System.Windows.Forms.BindingManagerBase> in the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> event.</span></span> <span data-ttu-id="94060-175">该示例假定数据源是<xref:System.Data.DataTable>包含<xref:System.Data.DataColumn>名为`CustName`。</span><span class="sxs-lookup"><span data-stu-id="94060-175">The example assumes the data source is a <xref:System.Data.DataTable> containing a <xref:System.Data.DataColumn> named `CustName`.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Current Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
      </Docs>
    </Member>
    <Member MemberName="CurrentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentChanged : EventHandler " Usage="member this.CurrentChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94060-176">在当前绑定项更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-176">Occurs when the currently bound item changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-177"><xref:System.Windows.Forms.BindingManagerBase.CurrentChanged>引发事件时<xref:System.Windows.Forms.BindingManagerBase.Current%2A>属性更改或<xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged>事件发生。</span><span class="sxs-lookup"><span data-stu-id="94060-177">The <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> event is raised whenever the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> property changes or the <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event occurs.</span></span>  
  
 <span data-ttu-id="94060-178">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="94060-178">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94060-179">下面的代码示例打印该值的<xref:System.Windows.Forms.BindingManagerBase.Current%2A>对象在<xref:System.Windows.Forms.BindingManagerBase>中<xref:System.Windows.Forms.BindingManagerBase.CurrentChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="94060-179">The following code example prints the value of the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object in a <xref:System.Windows.Forms.BindingManagerBase> in the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> event.</span></span> <span data-ttu-id="94060-180">该示例假定数据源是<xref:System.Data.DataTable>包含<xref:System.Data.DataColumn>名为`CustName`。</span><span class="sxs-lookup"><span data-stu-id="94060-180">The example assumes the data source is a <xref:System.Data.DataTable> containing a <xref:System.Data.DataColumn> named `CustName`.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Current Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
      </Docs>
    </Member>
    <Member MemberName="CurrentItemChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentItemChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentItemChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentItemChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentItemChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentItemChanged : EventHandler " Usage="member this.CurrentItemChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94060-181">在当前绑定项的状态更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-181">Occurs when the state of the currently bound item changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-182"><xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged>事件发生在当前绑定项中的状态中的更改时。</span><span class="sxs-lookup"><span data-stu-id="94060-182">The <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event occurs whenever there is a change in the state in the currently bound item.</span></span> <span data-ttu-id="94060-183">如果更改此项目的属性之一，或者针对项本身被替换或移动，则可以发生此问题。</span><span class="sxs-lookup"><span data-stu-id="94060-183">This can occur if one of the properties of this item is changed or if the item itself is replaced or moved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94060-184">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="94060-184">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="94060-185">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="94060-185">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event.</span></span> <span data-ttu-id="94060-186">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="94060-186">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="94060-187">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="94060-187">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="94060-188">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<xref:System.Windows.Forms.BindingManagerBase>，如<xref:System.Windows.Forms.PropertyManager>或<xref:System.Windows.Forms.CurrencyManager>。</span><span class="sxs-lookup"><span data-stu-id="94060-188">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.BindingManagerBase>, such as a <xref:System.Windows.Forms.PropertyManager> or <xref:System.Windows.Forms.CurrencyManager>.</span></span> <span data-ttu-id="94060-189">然后将其命名实例`BindingManagerBase1`并确保与事件处理程序<xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="94060-189">Then name the instance `BindingManagerBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#82](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#82)]
 [!code-vb[System.Windows.Forms.EventExamples#82](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#82)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataError">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingManagerDataErrorEventHandler DataError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingManagerDataErrorEventHandler DataError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.DataError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataError As BindingManagerDataErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingManagerDataErrorEventHandler ^ DataError;" />
      <MemberSignature Language="F#" Value="member this.DataError : System.Windows.Forms.BindingManagerDataErrorEventHandler " Usage="member this.DataError : System.Windows.Forms.BindingManagerDataErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerDataErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94060-190">当 <see cref="T:System.Exception" /> 被 <see cref="T:System.Windows.Forms.BindingManagerBase" /> 处理而未给出任何提示时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-190">Occurs when an <see cref="T:System.Exception" /> is silently handled by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-191">此事件是信息性并报告公共语言规范 (CLS)-仅符合异常。</span><span class="sxs-lookup"><span data-stu-id="94060-191">This event is informational and reports Common Language Specification (CLS)-compliant exceptions only.</span></span> <span data-ttu-id="94060-192">若要确定哪种类型的异常发生，处理此事件，并检查<xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A>属性<xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="94060-192">To determine what type of exception occurred, handle this event and check the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> property of the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>.</span></span>  
  
 <span data-ttu-id="94060-193">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="94060-193">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94060-194">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="94060-194">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="94060-195">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.BindingManagerBase.DataError>事件。</span><span class="sxs-lookup"><span data-stu-id="94060-195">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.BindingManagerBase.DataError> event.</span></span> <span data-ttu-id="94060-196">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="94060-196">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="94060-197">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="94060-197">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="94060-198">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<xref:System.Windows.Forms.BindingManagerBase>，如<xref:System.Windows.Forms.PropertyManager>或<xref:System.Windows.Forms.CurrencyManager>。</span><span class="sxs-lookup"><span data-stu-id="94060-198">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.BindingManagerBase>, such as a <xref:System.Windows.Forms.PropertyManager> or <xref:System.Windows.Forms.CurrencyManager>.</span></span> <span data-ttu-id="94060-199">然后将其命名实例`BindingManagerBase1`并确保与事件处理程序<xref:System.Windows.Forms.BindingManagerBase.DataError>事件。</span><span class="sxs-lookup"><span data-stu-id="94060-199">Then name the instance `BindingManagerBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.BindingManagerBase.DataError> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#83](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#83)]
 [!code-vb[System.Windows.Forms.EventExamples#83](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#83)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCurrentEdit">
      <MemberSignature Language="C#" Value="public abstract void EndCurrentEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCurrentEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndCurrentEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndCurrentEdit();" />
      <MemberSignature Language="F#" Value="abstract member EndCurrentEdit : unit -&gt; unit" Usage="bindingManagerBase.EndCurrentEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94060-200">当在派生类中被重写时，结束当前编辑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-200">When overridden in a derived class, ends the current edit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-201">仅当数据源实现时，才支持此方法<xref:System.ComponentModel.IEditableObject>接口。</span><span class="sxs-lookup"><span data-stu-id="94060-201">This method is supported only if the data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="94060-202">在这种情况下，将保存更改。</span><span class="sxs-lookup"><span data-stu-id="94060-202">In that case, changes will be saved.</span></span> <span data-ttu-id="94060-203">如果对象没有实现<xref:System.ComponentModel.IEditableObject>接口，将不保存到数据所做的更改。</span><span class="sxs-lookup"><span data-stu-id="94060-203">If the object does not implement the <xref:System.ComponentModel.IEditableObject> interface, changes made to the data will not be saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94060-204">下面的代码示例演示<xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A>和<xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="94060-204">The following code example demonstrates both the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> and the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> methods.</span></span> <span data-ttu-id="94060-205">当调用<xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A>方法，对数据所做的更改将被丢弃。</span><span class="sxs-lookup"><span data-stu-id="94060-205">When you call the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> methods, changes made to the data are discarded.</span></span> <span data-ttu-id="94060-206">当调用<xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A>方法，更改将被保留。</span><span class="sxs-lookup"><span data-stu-id="94060-206">When you call the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> method, the changes are kept.</span></span>  
  
 [!code-cpp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CPP/canceledit.cpp#1)]
 [!code-csharp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CS/canceledit.cs#1)]
 [!code-vb[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/VB/canceledit.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItemProperties">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="94060-207">获取数据源的属性说明符列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-207">Gets the list of property descriptors for the data source.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetItemProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemProperties () As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties();" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingManagerBase.GetItemProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94060-208">当在派生类中被重写时，获取绑定的属性说明符集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-208">When overridden in a derived class, gets the collection of property descriptors for the binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94060-209">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，它代表绑定的属性说明符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-209">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94060-210">下面的代码示例使用<xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A>方法以返回<xref:System.ComponentModel.PropertyDescriptorCollection>。</span><span class="sxs-lookup"><span data-stu-id="94060-210">The following code example uses the <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> method to return a <xref:System.ComponentModel.PropertyDescriptorCollection>.</span></span> <span data-ttu-id="94060-211">示例输出<xref:System.ComponentModel.MemberDescriptor.Name%2A>和当前值<xref:System.Data.DataColumn>使用<xref:System.ComponentModel.PropertyDescriptor.GetValue%2A>方法<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="94060-211">The example prints the <xref:System.ComponentModel.MemberDescriptor.Name%2A> and value of the current <xref:System.Data.DataColumn> using the <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> method of the <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.GetItemProperties Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.GetItemProperties Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.GetItemProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.Collections.ArrayList dataSources, System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.Collections.ArrayList dataSources, class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Collections.ArrayList,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetItemProperties (dataSources As ArrayList, listAccessors As ArrayList) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(System::Collections::ArrayList ^ dataSources, System::Collections::ArrayList ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : System.Collections.ArrayList * System.Collections.ArrayList -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : System.Collections.ArrayList * System.Collections.ArrayList -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingManagerBase.GetItemProperties (dataSources, listAccessors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSources" Type="System.Collections.ArrayList" />
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="dataSources">
          <span data-ttu-id="94060-212">包含数据源的 <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-212">An <see cref="T:System.Collections.ArrayList" /> containing the data sources.</span>
          </span>
        </param>
        <param name="listAccessors">
          <span data-ttu-id="94060-213">包含表的绑定属性的 <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-213">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94060-214">使用指定的 <see cref="T:System.Collections.ArrayList" /> 获取绑定的属性说明符集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-214">Gets the collection of property descriptors for the binding using the specified <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94060-215">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，它代表绑定的属性说明符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-215">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-216">创建数据绑定控件的开发人员使用此方法。</span><span class="sxs-lookup"><span data-stu-id="94060-216">This method is used by developers creating data-bound controls.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (Type listType, int offset, System.Collections.ArrayList dataSources, System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.Type listType, int32 offset, class System.Collections.ArrayList dataSources, class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Type,System.Int32,System.Collections.ArrayList,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetItemProperties (listType As Type, offset As Integer, dataSources As ArrayList, listAccessors As ArrayList) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(Type ^ listType, int offset, System::Collections::ArrayList ^ dataSources, System::Collections::ArrayList ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : Type * int * System.Collections.ArrayList * System.Collections.ArrayList -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : Type * int * System.Collections.ArrayList * System.Collections.ArrayList -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingManagerBase.GetItemProperties (listType, offset, dataSources, listAccessors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listType" Type="System.Type" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="dataSources" Type="System.Collections.ArrayList" />
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="listType">
          <span data-ttu-id="94060-217">绑定列表的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-217">The <see cref="T:System.Type" /> of the bound list.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="94060-218">用于递归调用该方法的计数器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-218">A counter used to recursively call the method.</span>
          </span>
        </param>
        <param name="dataSources">
          <span data-ttu-id="94060-219">包含数据源的 <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-219">An <see cref="T:System.Collections.ArrayList" /> containing the data sources.</span>
          </span>
        </param>
        <param name="listAccessors">
          <span data-ttu-id="94060-220">包含表的绑定属性的 <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-220">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94060-221">获取由此 <see cref="T:System.Windows.Forms.BindingManagerBase" /> 管理的项的属性列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-221">Gets the list of properties of the items managed by this <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94060-222">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，它代表绑定的属性说明符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-222">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-223">开发人员使用此重载来创建数据绑定控件。</span><span class="sxs-lookup"><span data-stu-id="94060-223">This overload is used by developers to create data-bound controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94060-224">下面的代码示例使用<xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A>方法以返回<xref:System.ComponentModel.PropertyDescriptorCollection>为<xref:System.Windows.Forms.BindingManagerBase>。</span><span class="sxs-lookup"><span data-stu-id="94060-224">The following code example uses the <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> method to return a <xref:System.ComponentModel.PropertyDescriptorCollection> for a <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="94060-225">该示例然后打印出<xref:System.ComponentModel.MemberDescriptor.Name%2A>和<xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A>每个<xref:System.ComponentModel.PropertyDescriptor>集合中。</span><span class="sxs-lookup"><span data-stu-id="94060-225">The example then prints out the <xref:System.ComponentModel.MemberDescriptor.Name%2A> and <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of each <xref:System.ComponentModel.PropertyDescriptor> in the collection.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.GetItemProperties2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.GetItemProperties2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties2 Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.GetItemProperties2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="protected internal abstract string GetListName (System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetListName(class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetListName (listAccessors As ArrayList) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::String ^ GetListName(System::Collections::ArrayList ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetListName : System.Collections.ArrayList -&gt; string" Usage="bindingManagerBase.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="listAccessors">
          <span data-ttu-id="94060-226">包含表的绑定属性的 <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-226">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94060-227">当在派生类中被重写时，获取为绑定提供数据的列表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-227">When overridden in a derived class, gets the name of the list supplying the data for the binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94060-228">为绑定提供数据的列表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-228">The name of the list supplying the data for the binding.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBindingSuspended">
      <MemberSignature Language="C#" Value="public bool IsBindingSuspended { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBindingSuspended" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.IsBindingSuspended" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBindingSuspended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBindingSuspended { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBindingSuspended : bool" Usage="System.Windows.Forms.BindingManagerBase.IsBindingSuspended" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94060-229">获取一个值，该值指示绑定是否已挂起。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-229">Gets a value indicating whether binding is suspended.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94060-230">如果绑定已挂起，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-230">
              <see langword="true" /> if binding is suspended; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingComplete">
      <MemberSignature Language="C#" Value="protected internal void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnBindingComplete(class System.Windows.Forms.BindingCompleteEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnBindingComplete (args As BindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void OnBindingComplete(System::Windows::Forms::BindingCompleteEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="member this.OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit" Usage="bindingManagerBase.OnBindingComplete args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.Forms.BindingCompleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="94060-231">包含事件数据的 <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-231">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94060-232">引发 <see cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-232">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-233">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="94060-233">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="94060-234">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="94060-234">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="94060-235"><xref:System.Windows.Forms.BindingManagerBase.OnBindingComplete%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="94060-235">The <xref:System.Windows.Forms.BindingManagerBase.OnBindingComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="94060-236">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="94060-236">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="94060-237">
            <para>在重写<see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-237">
              <para>When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentChanged">
      <MemberSignature Language="C#" Value="protected internal abstract void OnCurrentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCurrentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnCurrentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnCurrentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentChanged : EventArgs -&gt; unit" Usage="bindingManagerBase.OnCurrentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="94060-238">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-238">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94060-239">引发 <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-239">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-240">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="94060-240">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="94060-241">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="94060-241">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="94060-242"><xref:System.Windows.Forms.BindingManagerBase.OnCurrentChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="94060-242">The <xref:System.Windows.Forms.BindingManagerBase.OnCurrentChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="94060-243">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="94060-243">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="94060-244">
            <para>在重写<see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-244">
              <para>When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
      </Docs>
    </Member>
    <Member MemberName="onCurrentChangedHandler">
      <MemberSignature Language="C#" Value="protected EventHandler onCurrentChangedHandler;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.EventHandler onCurrentChangedHandler" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler" />
      <MemberSignature Language="VB.NET" Value="Protected onCurrentChangedHandler As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="protected: EventHandler ^ onCurrentChangedHandler;" />
      <MemberSignature Language="F#" Value="val mutable onCurrentChangedHandler : EventHandler" Usage="System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94060-245">为 <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> 事件指定事件处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-245">Specifies the event handler for the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentItemChanged">
      <MemberSignature Language="C#" Value="protected internal abstract void OnCurrentItemChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCurrentItemChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnCurrentItemChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnCurrentItemChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentItemChanged : EventArgs -&gt; unit" Usage="bindingManagerBase.OnCurrentItemChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="94060-246">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-246">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94060-247">引发 <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-247">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-248">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="94060-248">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="94060-249">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="94060-249">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="94060-250"><xref:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="94060-250">The <xref:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="94060-251">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="94060-251">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="94060-252">
            <para>在重写<see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-252">
              <para>When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
      </Docs>
    </Member>
    <Member MemberName="OnDataError">
      <MemberSignature Language="C#" Value="protected internal void OnDataError (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnDataError(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnDataError (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void OnDataError(Exception ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnDataError : Exception -&gt; unit" Usage="bindingManagerBase.OnDataError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="94060-253">导致发生 <see cref="T:System.Exception" /> 事件的 <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-253">An <see cref="T:System.Exception" /> that caused the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event to occur.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94060-254">引发 <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-254">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-255">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="94060-255">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="94060-256">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="94060-256">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="94060-257"><xref:System.Windows.Forms.BindingManagerBase.OnDataError%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="94060-257">The <xref:System.Windows.Forms.BindingManagerBase.OnDataError%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="94060-258">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="94060-258">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="94060-259">
            <para>在重写<see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" />方法，以便已注册的委托对事件进行接收。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-259">
              <para>When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="onPositionChangedHandler">
      <MemberSignature Language="C#" Value="protected EventHandler onPositionChangedHandler;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.EventHandler onPositionChangedHandler" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.BindingManagerBase.onPositionChangedHandler" />
      <MemberSignature Language="VB.NET" Value="Protected onPositionChangedHandler As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="protected: EventHandler ^ onPositionChangedHandler;" />
      <MemberSignature Language="F#" Value="val mutable onPositionChangedHandler : EventHandler" Usage="System.Windows.Forms.BindingManagerBase.onPositionChangedHandler" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94060-260">为 <see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" /> 事件指定事件处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-260">Specifies the event handler for the <see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public abstract int Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Position" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Position { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int with get, set" Usage="System.Windows.Forms.BindingManagerBase.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94060-261">当在派生类中被重写时，获取或设置绑定到该数据源的控件所指向的基础列表中的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-261">When overridden in a derived class, gets or sets the position in the underlying list that controls bound to this data source point to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94060-262">指定基础列表中某个位置的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-262">A zero-based index that specifies a position in the underlying list.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-263">使用<xref:System.Windows.Forms.BindingManagerBase.Position%2A>属性来循环访问由维护的基础列表<xref:System.Windows.Forms.BindingManagerBase>。</span><span class="sxs-lookup"><span data-stu-id="94060-263">Use the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to iterate through the underlying list maintained by the <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="94060-264">若要转到第一个项，将设置<xref:System.Windows.Forms.BindingManagerBase.Position%2A>为 0。</span><span class="sxs-lookup"><span data-stu-id="94060-264">To go to the first item, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> to 0.</span></span> <span data-ttu-id="94060-265">若要转到列表的末尾，将设置<xref:System.Windows.Forms.BindingManagerBase.Position%2A>为的值<xref:System.Windows.Forms.BindingManagerBase.Count%2A>减 1 的属性。</span><span class="sxs-lookup"><span data-stu-id="94060-265">To go to the end of the list, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> to the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property minus 1.</span></span>  
  
 <span data-ttu-id="94060-266"><xref:System.Windows.Forms.BindingManagerBase.PositionChanged>事件发生时<xref:System.Windows.Forms.BindingManagerBase.Position%2A>属性值更改。</span><span class="sxs-lookup"><span data-stu-id="94060-266">The <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> event occurs when the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property value changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94060-267">下面的代码示例显示四个方法设置<xref:System.Windows.Forms.BindingManagerBase.Position%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="94060-267">The following code example shows four methods that set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property.</span></span> <span data-ttu-id="94060-268">`MoveNext`方法按 1 递增属性。</span><span class="sxs-lookup"><span data-stu-id="94060-268">The `MoveNext` method increments the property by 1.</span></span> <span data-ttu-id="94060-269">`MovePrevious`方法递减 1 的属性。</span><span class="sxs-lookup"><span data-stu-id="94060-269">The `MovePrevious` method decrements the property by 1.</span></span> <span data-ttu-id="94060-270">`MoveFirst`方法将属性设置为 0，和`MoveLast`方法设置的属性的值<xref:System.Windows.Forms.BindingManagerBase.Count%2A>减 1 的属性。</span><span class="sxs-lookup"><span data-stu-id="94060-270">The `MoveFirst` method sets the property to 0, and the `MoveLast` method sets the property to the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property minus 1.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Count" />
      </Docs>
    </Member>
    <Member MemberName="PositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PositionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PositionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PositionChanged;" />
      <MemberSignature Language="F#" Value="member this.PositionChanged : EventHandler " Usage="member this.PositionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94060-271">在 <see cref="P:System.Windows.Forms.BindingManagerBase.Position" /> 属性的值更改后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-271">Occurs after the value of the <see cref="P:System.Windows.Forms.BindingManagerBase.Position" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-272">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="94060-272">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94060-273">下面的代码示例创建<xref:System.Windows.Forms.Binding>，然后将它添加到的集合<xref:System.Windows.Forms.Binding>对象<xref:System.Windows.Forms.TextBox>控件。</span><span class="sxs-lookup"><span data-stu-id="94060-273">The following code example creates a <xref:System.Windows.Forms.Binding>, and then adds it to a collection of <xref:System.Windows.Forms.Binding> objects for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="94060-274">然后该示例获取<xref:System.Windows.Forms.BindingManagerBase>数据源，并将添加到委托<xref:System.Windows.Forms.BindingManagerBase.PositionChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="94060-274">The example then gets the <xref:System.Windows.Forms.BindingManagerBase> for the data source and adds a delegate to the <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> event.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.PositionChanged Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.PositionChanged Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.PositionChanged Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.PositionChanged Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.PositionChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.PositionChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PullData">
      <MemberSignature Language="C#" Value="protected void PullData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PullData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.PullData" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PullData ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PullData();" />
      <MemberSignature Language="F#" Value="member this.PullData : unit -&gt; unit" Usage="bindingManagerBase.PullData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94060-275">将数据从数据绑定控件拉入到数据源，不返回任何信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-275">Pulls data from the data-bound control into the data source, returning no information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-276"><xref:System.Windows.Forms.BindingManagerBase.PullData%2A>方法是以编程方式请求从数据绑定控件回数据源的信息。</span><span class="sxs-lookup"><span data-stu-id="94060-276">The <xref:System.Windows.Forms.BindingManagerBase.PullData%2A> method is a programmatic way to pull information from the data-bound control back into the data source.</span></span> <span data-ttu-id="94060-277">它不需要的控件的标准操作，因为通常控件自动更新其绑定的数据源在焦点离开它时。</span><span class="sxs-lookup"><span data-stu-id="94060-277">It is not required for standard operation of a control, since normally a control automatically updates its bound data source when focus leaves it.</span></span>  
  
 <span data-ttu-id="94060-278"><xref:System.Windows.Forms.BindingManagerBase.PullData%2A> 引发<xref:System.Windows.Forms.BindingManagerBase.BindingComplete>事件和更改事件的数据源视。</span><span class="sxs-lookup"><span data-stu-id="94060-278"><xref:System.Windows.Forms.BindingManagerBase.PullData%2A> raises the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event and change events on the data source as appropriate.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.PushData" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="PushData">
      <MemberSignature Language="C#" Value="protected void PushData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PushData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.PushData" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PushData ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PushData();" />
      <MemberSignature Language="F#" Value="member this.PushData : unit -&gt; unit" Usage="bindingManagerBase.PushData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94060-279">将数据从数据源推入到数据绑定控件，不返回任何信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-279">Pushes data from the data source into the data-bound control, returning no information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-280"><xref:System.Windows.Forms.BindingManagerBase.PushData%2A>方法是将信息从数据源推入数据绑定控件的编程方法。</span><span class="sxs-lookup"><span data-stu-id="94060-280">The <xref:System.Windows.Forms.BindingManagerBase.PushData%2A> method is a programmatic way to push information from the data source into the data-bound control.</span></span> <span data-ttu-id="94060-281">如果数据源实现，此方法不是必需<xref:System.ComponentModel.IBindingList?displayProperty=nameWithType>接口，因为<xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType>事件应自动导致该控件通过其流量管理器进行更新。</span><span class="sxs-lookup"><span data-stu-id="94060-281">This method is not required if the data source implements the <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType> interface, because the <xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType> event should automatically cause the control to be updated through its currency manager.</span></span>  
  
 <span data-ttu-id="94060-282">如果此方法发出时<xref:System.Windows.Forms.BindingManagerBase.PullData%2A>正在执行的操作，<xref:System.Windows.Forms.BindingManagerBase.PushData%2A>方法立即返回值为`true`。</span><span class="sxs-lookup"><span data-stu-id="94060-282">If this method is issued when a <xref:System.Windows.Forms.BindingManagerBase.PullData%2A> operation is being performed, the <xref:System.Windows.Forms.BindingManagerBase.PushData%2A> method returns immediately with a value of `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.PullData" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public abstract void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="bindingManagerBase.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="94060-283">要删除行的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-283">The index of the row to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94060-284">当在派生类中被重写时，从基础列表中删除指定索引处的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-284">When overridden in a derived class, deletes the row at the specified index from the underlying list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-285"><xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A>方法依赖于基础的数据源，以确定该方法的行为。</span><span class="sxs-lookup"><span data-stu-id="94060-285">The <xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> method relies on the underlying data source to determine how the method behaves.</span></span> <span data-ttu-id="94060-286">(请参阅<xref:System.Windows.Forms.Binding>列表类支持的数据源。)为类，该实现<xref:System.Collections.IList>， <xref:System.ComponentModel.IBindingList>，或<xref:System.ComponentModel.ITypedList>也作为强类型化的类，该实现<xref:System.Collections.IList>、<xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A>方法实际上删除而不是删除其内容的基础列表中的行。</span><span class="sxs-lookup"><span data-stu-id="94060-286">(See the <xref:System.Windows.Forms.Binding> class for a list of supported data sources.) For classes that implement <xref:System.Collections.IList>, <xref:System.ComponentModel.IBindingList>, or <xref:System.ComponentModel.ITypedList>, as well as strongly typed classes that implement <xref:System.Collections.IList>, the <xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> method actually deletes the row in the underlying list instead of removing its contents.</span></span>  
  
 <span data-ttu-id="94060-287">如果基础列表实现<xref:System.ComponentModel.IBindingList>接口，<xref:System.ComponentModel.IBindingList.AllowRemove%2A>属性必须返回`true`。</span><span class="sxs-lookup"><span data-stu-id="94060-287">If the underlying list implements the <xref:System.ComponentModel.IBindingList> interface, the <xref:System.ComponentModel.IBindingList.AllowRemove%2A> property must return `true`.</span></span> <span data-ttu-id="94060-288">如果基础列表实现<xref:System.Collections.IList>接口，<xref:System.Collections.IList.IsFixedSize%2A>属性必须返回`false`。</span><span class="sxs-lookup"><span data-stu-id="94060-288">If the underlying list implements the <xref:System.Collections.IList> interface, the <xref:System.Collections.IList.IsFixedSize%2A> property must return `false`.</span></span>  
  
   
  
## Examples  
 [!code-cpp[BindingManagerBase_RemoveAt#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_RemoveAt/CPP/bindingmanagerbase_removeat.cpp#1)]
 [!code-csharp[BindingManagerBase_RemoveAt#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_RemoveAt/CS/bindingmanagerbase_removeat.cs#1)]
 [!code-vb[BindingManagerBase_RemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_RemoveAt/VB/bindingmanagerbase_removeat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="94060-289">指定的 <paramref name="index" /> 处没有行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-289">There is no row at the specified <paramref name="index" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="ResumeBinding">
      <MemberSignature Language="C#" Value="public abstract void ResumeBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResumeBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResumeBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResumeBinding();" />
      <MemberSignature Language="F#" Value="abstract member ResumeBinding : unit -&gt; unit" Usage="bindingManagerBase.ResumeBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94060-290">当在派生类中被重写时，恢复数据绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-290">When overridden in a derived class, resumes data binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-291"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> 和<xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A>允许临时挂起和恢复的数据绑定的这两种方法。</span><span class="sxs-lookup"><span data-stu-id="94060-291"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding.</span></span> <span data-ttu-id="94060-292">如果必须允许用户编辑数据字段之前，将执行验证，则通常将挂起数据绑定。</span><span class="sxs-lookup"><span data-stu-id="94060-292">You would typically suspend data binding if the user must be allowed to edit data fields before validation occurs.</span></span> <span data-ttu-id="94060-293">例如，用户可能需要更改的字段将按照的第二个字段;否则，验证第一个字段将导致将在错误中的第二个字段。</span><span class="sxs-lookup"><span data-stu-id="94060-293">For example, the user might need to change a field to be in accordance with a second field; otherwise, validating the first field would cause the second field to be in error.</span></span>  
  
   
  
## Examples  
 [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CPP/bindingmanagerbase_suspend_resume_binding.cpp#2)]
 [!code-csharp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CS/bindingmanagerbase_suspend_resume_binding.cs#2)]
 [!code-vb[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/VB/bindingmanagerbase_suspend_resume_binding.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="SuspendBinding">
      <MemberSignature Language="C#" Value="public abstract void SuspendBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SuspendBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SuspendBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SuspendBinding();" />
      <MemberSignature Language="F#" Value="abstract member SuspendBinding : unit -&gt; unit" Usage="bindingManagerBase.SuspendBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94060-294">当在派生类中被重写时，挂起数据绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-294">When overridden in a derived class, suspends data binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-295"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> 和<xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A>允许临时挂起和恢复的数据绑定的这两种方法。</span><span class="sxs-lookup"><span data-stu-id="94060-295"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding.</span></span> <span data-ttu-id="94060-296">如果必须允许用户编辑数据字段之前，将执行验证，则通常将挂起数据绑定。</span><span class="sxs-lookup"><span data-stu-id="94060-296">You would typically suspend data binding if the user must be allowed to edit data fields before validation occurs.</span></span> <span data-ttu-id="94060-297">例如，用户可能需要更改的字段将按照的第二个字段;否则，验证第一个字段将导致将在错误中的第二个字段。</span><span class="sxs-lookup"><span data-stu-id="94060-297">For example, the user might need to change a field to be in accordance with a second field; otherwise, validating the first field would cause the second field to be in error.</span></span>  
  
   
  
## Examples  
 [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CPP/bindingmanagerbase_suspend_resume_binding.cpp#2)]
 [!code-csharp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CS/bindingmanagerbase_suspend_resume_binding.cs#2)]
 [!code-vb[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/VB/bindingmanagerbase_suspend_resume_binding.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="UpdateIsBinding">
      <MemberSignature Language="C#" Value="protected abstract void UpdateIsBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UpdateIsBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub UpdateIsBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void UpdateIsBinding();" />
      <MemberSignature Language="F#" Value="abstract member UpdateIsBinding : unit -&gt; unit" Usage="bindingManagerBase.UpdateIsBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94060-298">当在派生类中被重写时，更新绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94060-298">When overridden in a derived class, updates the binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94060-299"><xref:System.Windows.Forms.BindingManagerBase.UpdateIsBinding%2A>方法更新绑定的控件和其数据源之间的数据绑定。</span><span class="sxs-lookup"><span data-stu-id="94060-299">The <xref:System.Windows.Forms.BindingManagerBase.UpdateIsBinding%2A> method updates the data binding between the bound control and its data source.</span></span> <span data-ttu-id="94060-300">对于复杂数据绑定方案，它还将重置当前位置为基础列表的开头。</span><span class="sxs-lookup"><span data-stu-id="94060-300">For complex data-binding scenarios, it also resets the current position to the beginning of the underlying list.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
  </Members>
</Type>