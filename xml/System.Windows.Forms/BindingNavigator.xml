<Type Name="BindingNavigator" FullName="System.Windows.Forms.BindingNavigator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="91bc017c2f75f63979173a6dcfbeed24e72e982b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30640331" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BindingNavigator : System.Windows.Forms.ToolStrip, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingNavigator extends System.Windows.Forms.ToolStrip implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingNavigator" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingNavigator&#xA;Inherits ToolStrip&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingNavigator : System::Windows::Forms::ToolStrip, System::ComponentModel::ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ToolStrip</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RefreshItems")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("BindingSource")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.BindingNavigatorDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示窗体上绑定到数据的控件的导航和操作用户界面 (UI)。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.BindingNavigator>控件表示一种标准化的方法导航和处理窗体上的数据。 在大多数情况下，<xref:System.Windows.Forms.BindingNavigator>与成对<xref:System.Windows.Forms.BindingSource>控件在窗体上数据记录之间移动并与之交互。 在这些情况下，<xref:System.Windows.Forms.BindingNavigator.BindingSource%2A>属性设置到关联<xref:System.Windows.Forms.BindingSource?displayProperty=nameWithType>充当数据源的组件。  
  
 默认情况下，<xref:System.Windows.Forms.BindingNavigator>控件的用户界面 (UI) 组成的一系列<xref:System.Windows.Forms.ToolStrip>按钮、 文本框中，和最常见的与数据相关的操作，例如添加数据、 删除数据，以及在数据中导航的静态文本元素。 每个控件都可以检索或设置通过关联的成员的<xref:System.Windows.Forms.BindingNavigator>控件。 同样，此外还有一一对应关系中的成员<xref:System.Windows.Forms.BindingSource>以编程方式执行相同的功能下, 表中所示的类。  
  
|UI 控件|<xref:System.Windows.Forms.BindingNavigator> 成员|<xref:System.Windows.Forms.BindingSource> 成员|  
|----------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------|  
|**首先将移动**|<xref:System.Windows.Forms.BindingNavigator.MoveFirstItem%2A>|<xref:System.Windows.Forms.BindingSource.MoveFirst%2A>|  
|**前移一步**|<xref:System.Windows.Forms.BindingNavigator.MovePreviousItem%2A>|<xref:System.Windows.Forms.BindingSource.MovePrevious%2A>|  
|**当前的位置**|<xref:System.Windows.Forms.BindingNavigator.PositionItem%2A>|<xref:System.Windows.Forms.BindingSource.Current%2A>|  
|“计数”|<xref:System.Windows.Forms.BindingNavigator.CountItem%2A>|<xref:System.Windows.Forms.BindingSource.Count%2A>|  
|**移动下一步**|<xref:System.Windows.Forms.BindingNavigator.MoveNextItem%2A>|<xref:System.Windows.Forms.BindingSource.MoveNext%2A>|  
|**移动最后一个**|<xref:System.Windows.Forms.BindingNavigator.MoveLastItem%2A>|<xref:System.Windows.Forms.BindingSource.MoveLast%2A>|  
|**添加新项**|<xref:System.Windows.Forms.BindingNavigator.AddNewItem%2A>|<xref:System.Windows.Forms.BindingSource.AddNew%2A>|  
|**删除**|<xref:System.Windows.Forms.BindingNavigator.DeleteItem%2A>|<xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A>|  
  
 添加<xref:System.Windows.Forms.BindingNavigator>控件添加到窗体，如将它绑定到数据源， <xref:System.Windows.Forms.BindingSource>，自动将此表中建立关系。  
  
 你可以使用以下方法之一以自定义此工具栏：  
  
-   创建<xref:System.Windows.Forms.BindingNavigator>与<xref:System.Windows.Forms.BindingNavigator.%23ctor%28System.Boolean%29>构造函数，它接受一个布尔值`addStandardItems`参数，并将此参数设置为`false`。 然后添加所需<xref:System.Windows.Forms.ToolStripItem>对象添加到<xref:System.Windows.Forms.ToolStrip.Items%2A>集合。  
  
-   如果需要大量的自定义项，或将重复使用的自定义设计，派生的类从<xref:System.Windows.Forms.BindingNavigator>，并重写<xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A>方法用来定义其他或备用标准的项。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.BindingNavigator>控件来浏览数据集。 集合包含在 <xref:System.Data.DataView> 中，后者使用 <xref:System.Windows.Forms.BindingSource> 组件绑定到 <xref:System.Windows.Forms.TextBox> 控件。  
  
 [!code-csharp[System.Windows.Forms.DataNavigator#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataNavigator/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataNavigator/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.BindingSource" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.BindingNavigator" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingNavigator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.BindingNavigator" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认构造函数集<xref:System.Windows.Forms.BindingNavigator.BindingSource%2A>属性`null`。 此构造函数等效于调用<xref:System.Windows.Forms.BindingNavigator.%23ctor%28System.Boolean%29>构造函数参数值为`false`。 你可以通过在单独调用添加标准项<xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingNavigator.BindingSource" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingNavigator (bool addStandardItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool addStandardItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (addStandardItems As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingNavigator(bool addStandardItems);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="addStandardItems" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="addStandardItems">
          如果要显示标准的导航 UI，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.BindingNavigator" /> 类的新实例，指示是否显示标准的导航用户界面 (UI)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数设置<xref:System.Windows.Forms.BindingNavigator.BindingSource%2A>属性`null`。 如果<xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A>是`false`， <xref:System.Windows.Forms.BindingNavigator.AddNewItem%2A>， <xref:System.Windows.Forms.BindingNavigator.MoveFirstItem%2A>， <xref:System.Windows.Forms.BindingNavigator.MoveLastItem%2A>， <xref:System.Windows.Forms.BindingNavigator.MoveNextItem%2A>， <xref:System.Windows.Forms.BindingNavigator.MovePreviousItem%2A>， <xref:System.Windows.Forms.BindingNavigator.DeleteItem%2A>，<xref:System.Windows.Forms.BindingNavigator.CountItem%2A>和<xref:System.Windows.Forms.BindingNavigator.PositionItem%2A>也将`null`。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingNavigator.BindingSource" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingNavigator (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingNavigator(System::ComponentModel::IContainer ^ container);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container">新的 <see cref="T:System.ComponentModel.IContainer" /> 控件要添加到的 <see cref="T:System.Windows.Forms.BindingNavigator" />。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.BindingNavigator" /> 类的新实例，并将此新实例添加到指定容器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数提供为方便起见，组合创建一个新的各个步骤<xref:System.Windows.Forms.BindingNavigator>控件并将其添加到父<xref:System.ComponentModel.IContainer>。 像默认构造函数，它将设置<xref:System.Windows.Forms.BindingNavigator.BindingSource%2A>属性`null`，因而不显示标准用户界面。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingNavigator.BindingSource" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingNavigator (System.Windows.Forms.BindingSource bindingSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.BindingSource bindingSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.#ctor(System.Windows.Forms.BindingSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingNavigator(System::Windows::Forms::BindingSource ^ bindingSource);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bindingSource" Type="System.Windows.Forms.BindingSource" />
      </Parameters>
      <Docs>
        <param name="bindingSource">用作数据源的 <see cref="T:System.Windows.Forms.BindingSource" />。</param>
        <summary>用指定的 <see cref="T:System.Windows.Forms.BindingNavigator" /> 作为数据源来初始化 <see cref="T:System.Windows.Forms.BindingSource" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数使用`BindingSource`参数初始化<xref:System.Windows.Forms.BindingNavigator.BindingSource%2A>属性。 它还将添加一组标准的导航按钮并设置其对应的属性，如<xref:System.Windows.Forms.BindingNavigator.CountItem%2A>和<xref:System.Windows.Forms.BindingNavigator.MoveNextItem%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingNavigator.BindingSource" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="AddNewItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem AddNewItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem AddNewItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.AddNewItem" />
      <MemberSignature Language="VB.NET" Value="Public Property AddNewItem As ToolStripItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItem ^ AddNewItem { System::Windows::Forms::ToolStripItem ^ get(); void set(System::Windows::Forms::ToolStripItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置表示“新增”按钮的 <see cref="T:System.Windows.Forms.ToolStripItem" />。</summary>
        <value>A<see cref="T:System.Windows.Forms.ToolStripItem" />表示**添加新**按钮<see cref="T:System.Windows.Forms.BindingSource" />。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置时，<xref:System.Windows.Forms.BindingNavigator.AddNewItem%2A>属性生成<xref:System.Windows.Forms.Control.Click>事件处理程序**添加新**按钮。 此事件处理程序调用<xref:System.Windows.Forms.BindingSource.AddNew%2A>方法时**添加新**在运行时单击按钮。  
  
 此属性是`null`如果以前没有设置和访问之前<xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A>隐式或显式调用方法。  
  
 <xref:System.Windows.Forms.BindingNavigator>控件将禁用**添加新**按钮如果<xref:System.Windows.Forms.BindingNavigator.BindingSource%2A>属性是`null`或<xref:System.Windows.Forms.BindingSource.AllowNew%2A>属性是`false`。  
  
 在默认实现中，此属性表示的类型的控件<xref:System.Windows.Forms.ToolStripButton>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.DeleteItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.CountItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.PositionItem" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="AddStandardItems">
      <MemberSignature Language="C#" Value="public virtual void AddStandardItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStandardItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStandardItems ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStandardItems();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将一组标准导航项添加到 <see cref="T:System.Windows.Forms.BindingNavigator" /> 控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A>方法中添加一组标准的用户界面<xref:System.Windows.Forms.ToolStripItem>对象添加到<xref:System.Windows.Forms.BindingNavigator>工具条带对于基本导航操作，如**移动第一个**，**移动最后一个**，和**添加新**。  
  
 重写<xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A>在派生类中定义其他或替代工具条带项。 若要确保为您派生的类的最佳设计时支持，请确保每个项具有有意义的值其<xref:System.Windows.Forms.ToolStripItem.Name%2A>属性。 在设计时，这将用于生成相应的成员变量的唯一名称。 项的<xref:System.Windows.Forms.ToolStripItem.Name%2A>然后将更新属性以匹配提供给成员变量的名称。  
  
> [!NOTE]
>  此方法不会显式删除任何先前存在的项从<xref:System.Windows.Forms.BindingNavigator>，但未设置的新值<xref:System.Windows.Forms.BindingNavigator.MoveNextItem%2A>， <xref:System.Windows.Forms.BindingNavigator.MovePreviousItem%2A>， <xref:System.Windows.Forms.BindingNavigator.MoveFirstItem%2A>， <xref:System.Windows.Forms.BindingNavigator.MoveLastItem%2A>， <xref:System.Windows.Forms.BindingNavigator.PositionItem%2A>， <xref:System.Windows.Forms.BindingNavigator.CountItem%2A>，<xref:System.Windows.Forms.BindingNavigator.AddNewItem%2A>和<xref:System.Windows.Forms.BindingNavigator.DeleteItem%2A>属性。 此外<xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A>项在添加时，不会挂起布局。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolStripItem" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.Name" />
        <altmember cref="E:System.Windows.Forms.BindingNavigator.RefreshItems" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在初始化组件的过程中禁用对 <see cref="T:System.Windows.Forms.ToolStripItem" /> 的 <see cref="T:System.Windows.Forms.BindingNavigator" /> 控件的更新。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.BindingNavigator.BeginInit%2A>和<xref:System.Windows.Forms.BindingNavigator.EndInit%2A>方法允许<xref:System.Windows.Forms.BindingNavigator>控件来优化对多个属性的更改。 使用这两个方法，你可以初始化相互依赖的属性或批处理在设计时设置多个属性。 调用<xref:System.Windows.Forms.BindingNavigator.BeginInit%2A>方法用信号通知控件初始化即将开始; 调用<xref:System.Windows.Forms.BindingNavigator.EndInit%2A>方法来初始化已完成。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ISupportInitialize" />
        <altmember cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.EndInit" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
        <altmember cref="E:System.Windows.Forms.BindingNavigator.RefreshItems" />
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="BindingSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingSource BindingSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingSource BindingSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.BindingSource" />
      <MemberSignature Language="VB.NET" Value="Public Property BindingSource As BindingSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingSource ^ BindingSource { System::Windows::Forms::BindingSource ^ get(); void set(System::Windows::Forms::BindingSource ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Forms.BindingSource" /> 组件，它是数据的来源。</summary>
        <value>与此 <see cref="T:System.Windows.Forms.BindingSource" /> 关联的 <see cref="T:System.Windows.Forms.BindingNavigator" /> 组件。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A>属性表示数据源<xref:System.Windows.Forms.BindingNavigator>其中导航以便。 更具体地说，<xref:System.Windows.Forms.BindingSource.List%2A>属性<xref:System.Windows.Forms.BindingSource>表示实际数据列表。  
  
 这是默认属性<xref:System.Windows.Forms.BindingNavigator>类。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Windows.Forms.BindingNavigator>控件来浏览数据集。 集合包含在 <xref:System.Data.DataView> 中，后者使用 <xref:System.Windows.Forms.BindingSource> 组件绑定到 <xref:System.Windows.Forms.TextBox> 控件。 此代码示例摘自[如何： 移动通过数据集使用 Windows 窗体 BindingNavigator 控件](~/docs/framework/winforms/controls/move-through-a-dataset-with-wf-bindingnavigator-control.md)。  
  
 [!code-csharp[System.Windows.Forms.DataNavigator#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataNavigator/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataNavigator/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.BindingSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
      </Docs>
    </Member>
    <Member MemberName="CountItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem CountItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem CountItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.CountItem" />
      <MemberSignature Language="VB.NET" Value="Public Property CountItem As ToolStripItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItem ^ CountItem { System::Windows::Forms::ToolStripItem ^ get(); void set(System::Windows::Forms::ToolStripItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Forms.ToolStripItem" />，它显示关联的 <see cref="T:System.Windows.Forms.BindingSource" /> 中的总项数。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ToolStripItem" />，它显示关联的 <see cref="T:System.Windows.Forms.BindingSource" /> 中的项的总数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.BindingNavigator.CountItem%2A>属性是`null`如果以前没有设置和访问之前<xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A>隐式或显式调用方法。  
  
 通过访问的项的计数<xref:System.Windows.Forms.BindingSource.Count%2A>属性<xref:System.Windows.Forms.BindingSource>。  
  
 在默认实现中，此属性表示的类型的控件<xref:System.Windows.Forms.ToolStripLabel>。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.BindingSource" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.CountItemFormat" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.PositionItem" />
      </Docs>
    </Member>
    <Member MemberName="CountItemFormat">
      <MemberSignature Language="C#" Value="public string CountItemFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CountItemFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.CountItemFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property CountItemFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CountItemFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于设置在 <see cref="P:System.Windows.Forms.BindingNavigator.CountItem" /> 控件中显示的信息的格式的字符串。</summary>
        <value>格式 <see cref="T:System.String" />，用于设置项数的显示格式。 默认值为字符串“of {0}”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.BindingNavigator.CountItem%2A>控件是<xref:System.Windows.Forms.ToolStripLabel>显示中的项的总数目<xref:System.Windows.Forms.BindingNavigator.BindingSource%2A>。 <xref:System.Windows.Forms.BindingNavigator.CountItemFormat%2A>属性是用于格式化计数的格式字符串。  
  
 有关格式字符串的详细信息，请参阅<xref:System.String.Format%28System.String%2CSystem.Object%29?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.String.Format" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.CountItem" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem DeleteItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem DeleteItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.DeleteItem" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteItem As ToolStripItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItem ^ DeleteItem { System::Windows::Forms::ToolStripItem ^ get(); void set(System::Windows::Forms::ToolStripItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与“删除”功能关联的 <see cref="T:System.Windows.Forms.ToolStripItem" />。</summary>
        <value>A<see cref="T:System.Windows.Forms.ToolStripItem" />表示**删除**按钮<see cref="T:System.Windows.Forms.BindingSource" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置时，此属性生成<xref:System.Windows.Forms.Control.Click>事件处理程序**删除**按钮。 此事件处理程序调用<xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A>方法时**删除**在运行时单击按钮。  
  
 此属性是`null`如果以前没有设置和访问之前<xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A>隐式或显式调用方法。  
  
 <xref:System.Windows.Forms.BindingNavigator>控件将禁用**删除**在运行时出现以下情况下的按钮：<xref:System.Windows.Forms.BindingNavigator.BindingSource%2A>属性是`null`、<xref:System.Windows.Forms.BindingSource.Count%2A>属性为 0，或<xref:System.Windows.Forms.BindingSource.AllowRemove%2A>属性是`false`.  
  
 在默认实现中，此属性表示的类型的控件<xref:System.Windows.Forms.ToolStripButton>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.AddNewItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.CountItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.PositionItem" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
        <summary>释放由 <see cref="T:System.Windows.Forms.BindingNavigator" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法称为由公共`Dispose`方法和<xref:System.Object.Finalize%2A>方法。 `Dispose` 调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。 <xref:System.Object.Finalize%2A> 调用`Dispose`与`disposing`设置为`false`。  
  
 当`disposing`参数为 true 时，此方法释放由任何托管对象持有的全部资源此<xref:System.Windows.Forms.BindingNavigator>引用。 此方法调用每个引用对象的 `Dispose()` 方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> 可以由其他对象多次调用。 在重写<see langword="Dispose(Boolean)" />请注意不要引用已释放的以前调用中的对象<see langword="Dispose" />。 有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。  
  
 有关详细信息<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[重写 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在结束对组件的初始化后启用对 <see cref="T:System.Windows.Forms.ToolStripItem" /> 的 <see cref="T:System.Windows.Forms.BindingNavigator" /> 控件的更新。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.BindingNavigator.BeginInit%2A>和<xref:System.Windows.Forms.BindingNavigator.EndInit%2A>方法允许<xref:System.Windows.Forms.BindingNavigator>控件来优化对多个属性的更改。 使用这两个方法，你可以初始化相互依赖的属性或批处理在设计时设置多个属性。 调用<xref:System.Windows.Forms.BindingNavigator.BeginInit%2A>方法用信号通知控件初始化即将开始; 调用<xref:System.Windows.Forms.BindingNavigator.EndInit%2A>方法来初始化已完成。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ISupportInitialize" />
        <altmember cref="M:System.ComponentModel.ISupportInitialize.EndInit" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.BeginInit" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
        <altmember cref="E:System.Windows.Forms.BindingNavigator.RefreshItems" />
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="MoveFirstItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem MoveFirstItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem MoveFirstItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.MoveFirstItem" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveFirstItem As ToolStripItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItem ^ MoveFirstItem { System::Windows::Forms::ToolStripItem ^ get(); void set(System::Windows::Forms::ToolStripItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与“移到第一个”功能关联的 <see cref="T:System.Windows.Forms.ToolStripItem" />。</summary>
        <value>A<see cref="T:System.Windows.Forms.ToolStripItem" />表示**移动第一个**按钮<see cref="T:System.Windows.Forms.BindingSource" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置时，此属性生成<xref:System.Windows.Forms.Control.Click>事件处理程序**移动第一个**按钮。 此事件处理程序调用<xref:System.Windows.Forms.BindingSource.MoveFirst%2A>方法时**移动第一个**在运行时单击按钮。  
  
 此属性是`null`如果以前没有设置和访问之前<xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A>隐式或显式调用方法。  
  
 <xref:System.Windows.Forms.BindingNavigator>控件将禁用**移动第一个**在运行时出现以下情况下的按钮：<xref:System.Windows.Forms.BindingNavigator.BindingSource%2A>属性是`null`、<xref:System.Windows.Forms.BindingSource.Position%2A?displayProperty=nameWithType>属性为零，或<xref:System.Windows.Forms.BindingSource.AllowNew%2A>为相关<xref:System.Windows.Forms.BindingSource>是`false`。  
  
 在默认实现中，此属性表示的类型的控件<xref:System.Windows.Forms.ToolStripButton>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveLastItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveNextItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MovePreviousItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.PositionItem" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="MoveLastItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem MoveLastItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem MoveLastItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.MoveLastItem" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveLastItem As ToolStripItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItem ^ MoveLastItem { System::Windows::Forms::ToolStripItem ^ get(); void set(System::Windows::Forms::ToolStripItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与“移到最后一个”功能关联的 <see cref="T:System.Windows.Forms.ToolStripItem" />。</summary>
        <value>A<see cref="T:System.Windows.Forms.ToolStripItem" />表示**移动最后一个**按钮<see cref="T:System.Windows.Forms.BindingSource" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置时，此属性生成<xref:System.Windows.Forms.Control.Click>事件处理程序**移动最后一个**按钮。 此事件处理程序调用<xref:System.Windows.Forms.BindingSource.MoveLast%2A>方法时**移动最后一个**在运行时单击按钮。  
  
 此属性是`null`如果以前没有设置和访问之前<xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A>隐式或显式调用方法。  
  
 <xref:System.Windows.Forms.BindingNavigator>控件将禁用**移动最后一个**在运行时出现以下情况下的按钮：<xref:System.Windows.Forms.BindingNavigator.BindingSource%2A>属性是`null`或<xref:System.Windows.Forms.BindingSource.Position%2A>属性为大于或等于<xref:System.Windows.Forms.BindingSource.Count%2A>属性。  
  
 在默认实现中，此属性表示的类型的控件<xref:System.Windows.Forms.ToolStripButton>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveFirstItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveNextItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MovePreviousItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.PositionItem" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="MoveNextItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem MoveNextItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem MoveNextItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.MoveNextItem" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveNextItem As ToolStripItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItem ^ MoveNextItem { System::Windows::Forms::ToolStripItem ^ get(); void set(System::Windows::Forms::ToolStripItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与“移到下一个”功能关联的 <see cref="T:System.Windows.Forms.ToolStripItem" />。</summary>
        <value>A<see cref="T:System.Windows.Forms.ToolStripItem" />表示**移动到下一步**按钮<see cref="T:System.Windows.Forms.BindingSource" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置时，此属性生成<xref:System.Windows.Forms.Control.Click>事件处理程序**移动到下一步**按钮。 此事件处理程序调用<xref:System.Windows.Forms.BindingSource.MoveNext%2A>方法时**移动到下一步**在运行时单击按钮。  
  
 此属性是`null`如果以前没有设置和访问之前<xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A>隐式或显式调用方法。  
  
 <xref:System.Windows.Forms.BindingNavigator>控件将禁用**移动到下一步**在运行时出现以下情况下的按钮：<xref:System.Windows.Forms.BindingNavigator.BindingSource%2A>属性是`null`或<xref:System.Windows.Forms.BindingSource.Position%2A>属性为大于或等于<xref:System.Windows.Forms.BindingSource.Count%2A>属性。  
  
 在默认实现中，此属性表示的类型的控件<xref:System.Windows.Forms.ToolStripButton>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveFirstItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveLastItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MovePreviousItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.PositionItem" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="MovePreviousItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem MovePreviousItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem MovePreviousItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.MovePreviousItem" />
      <MemberSignature Language="VB.NET" Value="Public Property MovePreviousItem As ToolStripItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItem ^ MovePreviousItem { System::Windows::Forms::ToolStripItem ^ get(); void set(System::Windows::Forms::ToolStripItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与“移到上一个”功能关联的 <see cref="T:System.Windows.Forms.ToolStripItem" />。</summary>
        <value>A<see cref="T:System.Windows.Forms.ToolStripItem" />表示**移动上一个**按钮<see cref="T:System.Windows.Forms.BindingSource" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置时，<xref:System.Windows.Forms.BindingNavigator.MovePreviousItem%2A>属性生成<xref:System.Windows.Forms.Control.Click>事件处理程序**移动上一个**按钮。 此事件处理程序调用<xref:System.Windows.Forms.BindingSource.MovePrevious%2A>方法时**移动上一个**在运行时单击按钮。  
  
 此属性是`null`如果以前没有设置和访问之前<xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A>隐式或显式调用方法。  
  
 <xref:System.Windows.Forms.BindingNavigator>控件将禁用**移动上一个**在运行时出现以下情况下的按钮：<xref:System.Windows.Forms.BindingNavigator.BindingSource%2A>属性是`null`或<xref:System.Windows.Forms.BindingSource.Position%2A>属性小于或等于 0。  
  
 在默认实现中，此属性表示的类型的控件<xref:System.Windows.Forms.ToolStripButton>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveFirstItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveLastItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveNextItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.PositionItem" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="OnRefreshItems">
      <MemberSignature Language="C#" Value="protected virtual void OnRefreshItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRefreshItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.OnRefreshItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRefreshItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRefreshItems();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>引发 <see cref="E:System.Windows.Forms.BindingNavigator.RefreshItems" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 除了引发相应<xref:System.Windows.Forms.BindingNavigator.RefreshItems>事件，<xref:System.Windows.Forms.BindingNavigator.OnRefreshItems%2A>方法执行以下操作针对的关联状态<xref:System.Windows.Forms.BindingSource>。  
  
-   设置使用当前的内部成员<xref:System.Windows.Forms.BindingSource>状态。  
  
-   启用或禁用当前为适当的用户界面 (UI) 项目<xref:System.Windows.Forms.BindingSource>状态。  
  
-   更新<xref:System.Windows.Forms.BindingNavigator.CountItem%2A>和<xref:System.Windows.Forms.BindingNavigator.PositionItem%2A>控件。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Windows.Forms.BindingNavigator.OnRefreshItems%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在派生类中重写 <see cref="M:System.Windows.Forms.BindingNavigator.OnRefreshItems" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.BindingNavigator.OnRefreshItems" /> 方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingNavigator.RefreshItems" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="PositionItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem PositionItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem PositionItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.PositionItem" />
      <MemberSignature Language="VB.NET" Value="Public Property PositionItem As ToolStripItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItem ^ PositionItem { System::Windows::Forms::ToolStripItem ^ get(); void set(System::Windows::Forms::ToolStripItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Forms.ToolStripItem" />，它显示 <see cref="T:System.Windows.Forms.BindingSource" /> 中的当前位置。</summary>
        <value>显示当前位置的 <see cref="T:System.Windows.Forms.ToolStripItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在默认实现中，<xref:System.Windows.Forms.BindingNavigator.PositionItem%2A>属性属于类型<xref:System.Windows.Forms.ToolStripTextBox>。  
  
 此属性是`null`如果以前没有设置和访问之前<xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A>隐式或显式调用方法。  
  
 通过获取当前位置计算<xref:System.Windows.Forms.BindingSource.Position%2A>属性<xref:System.Windows.Forms.BindingSource>，并添加 1 转换到 1 基于计数的位置。  
  
 在默认实现中，此属性表示的类型的控件<xref:System.Windows.Forms.ToolStripTextBox>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolStripTextBox" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.CountItem" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
      </Docs>
    </Member>
    <Member MemberName="RefreshItems">
      <MemberSignature Language="C#" Value="public event EventHandler RefreshItems;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RefreshItems" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingNavigator.RefreshItems" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RefreshItems As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RefreshItems;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在需要刷新导航用户界面 (UI) 的状态以反映基础数据的当前状态时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.BindingNavigator.RefreshItems?displayProperty=nameWithType>事件发出信号表示导航的 UI<xref:System.Windows.Forms.BindingNavigator>需要更新以反映关联的当前状态<xref:System.Windows.Forms.BindingSource>。  
  
 这是 <xref:System.Windows.Forms.BindingNavigator> 类的默认事件。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。 在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.BindingNavigator.RefreshItems>事件。 此报告可帮助您了解当发生事件，并可以帮助您进行调试。 若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。  
  
 若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.BindingNavigator>名为`BindingNavigator1`。 然后，确保与事件处理程序<xref:System.Windows.Forms.BindingNavigator.RefreshItems>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#124](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#124)]
 [!code-vb[System.Windows.Forms.EventExamples#124](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#124)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingNavigator.OnRefreshItems" />
      </Docs>
    </Member>
    <Member MemberName="RefreshItemsCore">
      <MemberSignature Language="C#" Value="protected virtual void RefreshItemsCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RefreshItemsCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.RefreshItemsCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RefreshItemsCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RefreshItemsCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>刷新标准项的状态以反映数据的当前状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果你已重写<xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A>应在派生类中，你还重写<xref:System.Windows.Forms.BindingNavigator.RefreshItemsCore%2A>刷新已添加到任何自定义标准项<xref:System.Windows.Forms.BindingNavigator>控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public bool Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Function Validate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Validate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>导致进行窗体验证并返回指示验证是否成功的信息。</summary>
        <returns>
          如果验证成功并且焦点可移动到 <see cref="T:System.Windows.Forms.BindingNavigator" /> 上，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法以确认在执行上的项的单击操作之前可以上移焦点<xref:System.Windows.Forms.BindingNavigator>控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>