<Type Name="KeyEventArgs" FullName="System.Windows.Forms.KeyEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5034188cc4252d2600766ee8008fcaf5e7d70ab1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36519820" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeyEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type KeyEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="eca2e-101">为 <see cref="E:System.Windows.Forms.Control.KeyDown" /> 或 <see cref="E:System.Windows.Forms.Control.KeyUp" /> 事件提供数据。</span>
      <span class="sxs-lookup">
        <span data-stu-id="eca2e-101">Provides data for the <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eca2e-102">A <xref:System.Windows.Forms.KeyEventArgs>，它与每个指定用户按下并是否任何修改键 （CTRL、 ALT 和 SHIFT） 已按下一次传递密钥<xref:System.Windows.Forms.Control.KeyDown>或<xref:System.Windows.Forms.Control.KeyUp>事件。</span><span class="sxs-lookup"><span data-stu-id="eca2e-102">A <xref:System.Windows.Forms.KeyEventArgs>, which specifies the key the user pressed and whether any modifier keys (CTRL, ALT, and SHIFT) were pressed at the same time, is passed with each <xref:System.Windows.Forms.Control.KeyDown> or <xref:System.Windows.Forms.Control.KeyUp> event.</span></span>  
  
 <span data-ttu-id="eca2e-103"><xref:System.Windows.Forms.Control.KeyDown>事件发生在用户按任意键时。</span><span class="sxs-lookup"><span data-stu-id="eca2e-103">The <xref:System.Windows.Forms.Control.KeyDown> event occurs when the user presses any key.</span></span> <span data-ttu-id="eca2e-104"><xref:System.Windows.Forms.Control.KeyUp>当用户释放键时发生的事件。</span><span class="sxs-lookup"><span data-stu-id="eca2e-104">The <xref:System.Windows.Forms.Control.KeyUp> event occurs when the user releases the key.</span></span> <span data-ttu-id="eca2e-105">重复<xref:System.Windows.Forms.Control.KeyDown>事件发生密钥重复发生，每次，如果按住键，但只有一个<xref:System.Windows.Forms.Control.KeyUp>用户释放键时，生成事件。</span><span class="sxs-lookup"><span data-stu-id="eca2e-105">Duplicate <xref:System.Windows.Forms.Control.KeyDown> events occur each time the key repeats, if the key is held down, but only one <xref:System.Windows.Forms.Control.KeyUp> event is generated when the user releases the key.</span></span>  
  
 <span data-ttu-id="eca2e-106"><xref:System.Windows.Forms.Control.KeyPress>按下某个键时，也会发生事件。</span><span class="sxs-lookup"><span data-stu-id="eca2e-106">The <xref:System.Windows.Forms.Control.KeyPress> event also occurs when a key is pressed.</span></span> <span data-ttu-id="eca2e-107">A<xref:System.Windows.Forms.KeyPressEventArgs>传递与每个<xref:System.Windows.Forms.Control.KeyPress>事件，并指定由于每次按键组成的字符。</span><span class="sxs-lookup"><span data-stu-id="eca2e-107">A <xref:System.Windows.Forms.KeyPressEventArgs> is passed with each <xref:System.Windows.Forms.Control.KeyPress> event, and specifies the character that was composed as a result of each key press.</span></span>  
  
 <span data-ttu-id="eca2e-108">有关事件模型的信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="eca2e-108">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eca2e-109">下面的代码示例演示如何检测按键的状态。</span><span class="sxs-lookup"><span data-stu-id="eca2e-109">The following code examples demonstrate how to detect the state of a key press.</span></span>  
  
 <span data-ttu-id="eca2e-110">**示例 1**</span><span class="sxs-lookup"><span data-stu-id="eca2e-110">**Example 1**</span></span>  
  
 <span data-ttu-id="eca2e-111">下面的代码示例演示如何使用<xref:System.Windows.Forms.Control.KeyDown>事件和<xref:System.Windows.Forms.Help>类来显示弹出样式给用户的应用程序的帮助。</span><span class="sxs-lookup"><span data-stu-id="eca2e-111">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="eca2e-112">该示例使用<xref:System.Windows.Forms.KeyEventArgs>属性传递给要筛选的所有变体按 F1 键和修改键的事件处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="eca2e-112">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="eca2e-113">当用户按 F1，包括任何键盘修饰符，任何变体<xref:System.Windows.Forms.Help>类显示一个弹出窗口，类似于<xref:System.Windows.Forms.ToolTip>，在控件旁边。</span><span class="sxs-lookup"><span data-stu-id="eca2e-113">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="eca2e-114">如果用户按 ALT + F2，则会显示一个不同的帮助弹出窗口的其他信息。</span><span class="sxs-lookup"><span data-stu-id="eca2e-114">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="eca2e-115">**示例 2**</span><span class="sxs-lookup"><span data-stu-id="eca2e-115">**Example 2**</span></span>  
  
 <span data-ttu-id="eca2e-116">下面的示例确定是否由用户按 ALT + E，以及如果鼠标指针悬停于<xref:System.Windows.Forms.TreeNode>，允许用户编辑该<xref:System.Windows.Forms.TreeNode>。</span><span class="sxs-lookup"><span data-stu-id="eca2e-116">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 <span data-ttu-id="eca2e-117">**示例 3**</span><span class="sxs-lookup"><span data-stu-id="eca2e-117">**Example 3**</span></span>  
  
 <span data-ttu-id="eca2e-118">下面的示例确定用户是否按下一个非数字密钥，如果是这样，将取消<xref:System.Windows.Forms.Control.KeyPress>事件通过使用<xref:System.Windows.Forms.KeyEventArgs.Handled%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="eca2e-118">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
    <altmember cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
    <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
    <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyEventArgs (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeyEventArgs.#ctor(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyData As Keys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyEventArgs(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.KeyEventArgs : System.Windows.Forms.Keys -&gt; System.Windows.Forms.KeyEventArgs" Usage="new System.Windows.Forms.KeyEventArgs keyData" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="eca2e-119">一个 <see cref="T:System.Windows.Forms.Keys" />，表示按下的键以及任何修饰符标志（指示同时按下的 Ctrl、Shift 和 Alt 键）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca2e-119">A <see cref="T:System.Windows.Forms.Keys" /> representing the key that was pressed, combined with any modifier flags that indicate which CTRL, SHIFT, and ALT keys were pressed at the same time.</span>
          </span>
          <span data-ttu-id="eca2e-120">可通过将按位“或”(|) 运算符应用于 <see cref="T:System.Windows.Forms.Keys" /> 枚举中的常数，来获取可能的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca2e-120">Possible values are obtained be applying the bitwise OR (|) operator to constants from the <see cref="T:System.Windows.Forms.Keys" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eca2e-121">初始化 <see cref="T:System.Windows.Forms.KeyEventArgs" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca2e-121">Initializes a new instance of the <see cref="T:System.Windows.Forms.KeyEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Alt">
      <MemberSignature Language="C#" Value="public virtual bool Alt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Alt" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Alt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Alt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Alt { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Alt : bool" Usage="System.Windows.Forms.KeyEventArgs.Alt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eca2e-122">获取一个值，该值指示是否曾按下 Alt 键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca2e-122">Gets a value indicating whether the ALT key was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eca2e-123">如果曾按下 Alt 键，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca2e-123">
              <see langword="true" /> if the ALT key was pressed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eca2e-124">**示例 1**</span><span class="sxs-lookup"><span data-stu-id="eca2e-124">**Example 1**</span></span>  
  
 <span data-ttu-id="eca2e-125">下面的代码示例演示如何使用<xref:System.Windows.Forms.Control.KeyDown>事件和<xref:System.Windows.Forms.Help>类来显示弹出样式给用户的应用程序的帮助。</span><span class="sxs-lookup"><span data-stu-id="eca2e-125">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="eca2e-126">该示例使用<xref:System.Windows.Forms.KeyEventArgs>属性传递给要筛选的所有变体按 F1 键和修改键的事件处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="eca2e-126">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="eca2e-127">当用户按 F1，包括任何键盘修饰符，任何变体<xref:System.Windows.Forms.Help>类显示一个弹出窗口，类似于<xref:System.Windows.Forms.ToolTip>，在控件旁边。</span><span class="sxs-lookup"><span data-stu-id="eca2e-127">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="eca2e-128">如果用户按 ALT + F2，则会显示一个不同的帮助弹出窗口的其他信息。</span><span class="sxs-lookup"><span data-stu-id="eca2e-128">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="eca2e-129">**示例 2**</span><span class="sxs-lookup"><span data-stu-id="eca2e-129">**Example 2**</span></span>  
  
 <span data-ttu-id="eca2e-130">下面的示例确定是否由用户按 ALT + E，以及如果鼠标指针悬停于<xref:System.Windows.Forms.TreeNode>，允许用户编辑该<xref:System.Windows.Forms.TreeNode>。</span><span class="sxs-lookup"><span data-stu-id="eca2e-130">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public bool Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Control" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Control" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Control As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Control { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Control : bool" Usage="System.Windows.Forms.KeyEventArgs.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eca2e-131">获取一个值，该值指示是否曾按下 Ctrl 键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca2e-131">Gets a value indicating whether the CTRL key was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eca2e-132">如果曾按下 Ctrl 键，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca2e-132">
              <see langword="true" /> if the CTRL key was pressed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eca2e-133">下面的代码示例演示如何使用<xref:System.Windows.Forms.Control.KeyDown>事件和<xref:System.Windows.Forms.Help>类来显示弹出样式给用户的应用程序的帮助。</span><span class="sxs-lookup"><span data-stu-id="eca2e-133">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="eca2e-134">该示例使用<xref:System.Windows.Forms.KeyEventArgs>属性传递给要筛选的所有变体按 F1 键和修改键的事件处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="eca2e-134">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="eca2e-135">当用户按 F1，包括任何键盘修饰符，任何变体<xref:System.Windows.Forms.Help>类显示一个弹出窗口，类似于<xref:System.Windows.Forms.ToolTip>，在控件旁边。</span><span class="sxs-lookup"><span data-stu-id="eca2e-135">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="eca2e-136">如果用户按 ALT + F2，则会显示一个不同的帮助弹出窗口的其他信息。</span><span class="sxs-lookup"><span data-stu-id="eca2e-136">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Windows.Forms.KeyEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eca2e-137">获取或设置一个值，该值指示是否处理过此事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca2e-137">Gets or sets a value indicating whether the event was handled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eca2e-138">
            <see langword="true" /> 表示跳过控件的默认处理；<see langword="false" /> 表示还将该事件传递给默认控件处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca2e-138">
              <see langword="true" /> to bypass the control's default handling; otherwise, <see langword="false" /> to also pass the event along to the default control handler.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eca2e-139"><xref:System.Windows.Forms.KeyEventArgs.Handled%2A> 由 Windows 窗体中的不同控件以不同方式实现。</span><span class="sxs-lookup"><span data-stu-id="eca2e-139"><xref:System.Windows.Forms.KeyEventArgs.Handled%2A> is implemented differently by different controls within Windows Forms.</span></span> <span data-ttu-id="eca2e-140">等控件<xref:System.Windows.Forms.TextBox>哪些子类本机 Win32 控制，它被解释为表示不应将键的消息传递到基础本机控件。</span><span class="sxs-lookup"><span data-stu-id="eca2e-140">For controls like <xref:System.Windows.Forms.TextBox> which subclass native Win32 controls, it is interpreted to mean that the key message should not be passed to the underlying native control.</span></span> <span data-ttu-id="eca2e-141">如果你设置`Handled`为 true 的<xref:System.Windows.Forms.TextBox>，控件不会传递键按键`events`给基础 Win32 文本框控件，但它仍将显示用户输入的字符。</span><span class="sxs-lookup"><span data-stu-id="eca2e-141">If you set `Handled` to true on a <xref:System.Windows.Forms.TextBox>, that control will not pass the key press `events` to the underlying Win32 text box control, but it will still display the characters that the user typed.</span></span>  
  
 <span data-ttu-id="eca2e-142">如果你想要防止当前控件接收键按键，使用<xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="eca2e-142">If you want to prevent the current control from receiving a key press, use the <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eca2e-143">下面的示例确定用户是否按下一个非数字密钥，如果是这样，将取消<xref:System.Windows.Forms.Control.KeyPress>事件通过使用<xref:System.Windows.Forms.KeyEventArgs.Handled%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="eca2e-143">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyCode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys KeyCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys KeyCode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyCode As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys KeyCode { System::Windows::Forms::Keys get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyCode : System.Windows.Forms.Keys" Usage="System.Windows.Forms.KeyEventArgs.KeyCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eca2e-144">获取 <see cref="E:System.Windows.Forms.Control.KeyDown" /> 或 <see cref="E:System.Windows.Forms.Control.KeyUp" /> 事件的键盘代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca2e-144">Gets the keyboard code for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eca2e-145">作为事件的键代码的 <see cref="T:System.Windows.Forms.Keys" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca2e-145">A <see cref="T:System.Windows.Forms.Keys" /> value that is the key code for the event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eca2e-146">下面的代码示例演示如何使用<xref:System.Windows.Forms.KeyEventArgs.KeyCode%2A>属性来确定曾按下的键。</span><span class="sxs-lookup"><span data-stu-id="eca2e-146">The following code examples show how to use the <xref:System.Windows.Forms.KeyEventArgs.KeyCode%2A> property to determine which key was pressed.</span></span>  
  
 <span data-ttu-id="eca2e-147">**示例 1**</span><span class="sxs-lookup"><span data-stu-id="eca2e-147">**Example 1**</span></span>  
  
 <span data-ttu-id="eca2e-148">下面的代码示例演示如何使用<xref:System.Windows.Forms.Control.KeyDown>事件和<xref:System.Windows.Forms.Help>类来显示弹出样式给用户的应用程序的帮助。</span><span class="sxs-lookup"><span data-stu-id="eca2e-148">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="eca2e-149">该示例使用<xref:System.Windows.Forms.KeyEventArgs>属性传递给要筛选的所有变体按 F1 键和修改键的事件处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="eca2e-149">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="eca2e-150">当用户按 F1，包括任何键盘修饰符，任何变体<xref:System.Windows.Forms.Help>类显示一个弹出窗口，类似于<xref:System.Windows.Forms.ToolTip>，在控件旁边。</span><span class="sxs-lookup"><span data-stu-id="eca2e-150">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="eca2e-151">如果用户按 ALT + F2，则会显示一个不同的帮助弹出窗口的其他信息。</span><span class="sxs-lookup"><span data-stu-id="eca2e-151">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="eca2e-152">**示例 2**</span><span class="sxs-lookup"><span data-stu-id="eca2e-152">**Example 2**</span></span>  
  
 <span data-ttu-id="eca2e-153">下面的示例确定是否由用户按 ALT + E，以及如果鼠标指针悬停于<xref:System.Windows.Forms.TreeNode>，允许用户编辑该<xref:System.Windows.Forms.TreeNode>。</span><span class="sxs-lookup"><span data-stu-id="eca2e-153">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 <span data-ttu-id="eca2e-154">**示例 3**</span><span class="sxs-lookup"><span data-stu-id="eca2e-154">**Example 3**</span></span>  
  
 <span data-ttu-id="eca2e-155">下面的示例确定用户是否按下一个非数字密钥，如果是这样，将取消<xref:System.Windows.Forms.Control.KeyPress>事件通过使用<xref:System.Windows.Forms.KeyEventArgs.Handled%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="eca2e-155">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyData" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      </Docs>
    </Member>
    <Member MemberName="KeyData">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys KeyData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys KeyData" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyData As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys KeyData { System::Windows::Forms::Keys get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyData : System.Windows.Forms.Keys" Usage="System.Windows.Forms.KeyEventArgs.KeyData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eca2e-156">获取 <see cref="E:System.Windows.Forms.Control.KeyDown" /> 或 <see cref="E:System.Windows.Forms.Control.KeyUp" /> 事件的键数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca2e-156">Gets the key data for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eca2e-157">一个 <see cref="T:System.Windows.Forms.Keys" />，表示按下的键的键代码以及修饰符标志（指示同时按下的 Ctrl、Shift 和 Alt 键的组合）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca2e-157">A <see cref="T:System.Windows.Forms.Keys" /> representing the key code for the key that was pressed, combined with modifier flags that indicate which combination of CTRL, SHIFT, and ALT keys was pressed at the same time.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eca2e-158">你可以使用从常量<xref:System.Windows.Forms.Keys>提取信息从<xref:System.Windows.Forms.KeyEventArgs.KeyData%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="eca2e-158">You can use constants from <xref:System.Windows.Forms.Keys> to extract information from the <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> property.</span></span> <span data-ttu-id="eca2e-159">使用按位 AND 运算符来比较返回数据<xref:System.Windows.Forms.KeyEventArgs.KeyData%2A>含常量的<xref:System.Windows.Forms.Keys>以获取有关哪些密钥用户按下的信息。</span><span class="sxs-lookup"><span data-stu-id="eca2e-159">Use the bitwise AND operator to compare data returned by <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> with constants in <xref:System.Windows.Forms.Keys> to obtain information about which keys the user pressed.</span></span> <span data-ttu-id="eca2e-160">若要确定特定的修改键是否曾按下，使用<xref:System.Windows.Forms.KeyEventArgs.Control%2A>， <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>，和<xref:System.Windows.Forms.KeyEventArgs.Alt%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="eca2e-160">To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eca2e-161">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="eca2e-161">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="eca2e-162">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType>事件。</span><span class="sxs-lookup"><span data-stu-id="eca2e-162">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="eca2e-163">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="eca2e-163">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="eca2e-164">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="eca2e-164">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="eca2e-165">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<xref:System.Windows.Forms.Control>，如<xref:System.Windows.Forms.Button>或<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="eca2e-165">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="eca2e-166">然后将其命名实例`Control1`并确保与事件处理程序<xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType>事件。</span><span class="sxs-lookup"><span data-stu-id="eca2e-166">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#48](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#48)]
 [!code-vb[System.Windows.Forms.EventExamples#48](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      </Docs>
    </Member>
    <Member MemberName="KeyValue">
      <MemberSignature Language="C#" Value="public int KeyValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyValue { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyValue : int" Usage="System.Windows.Forms.KeyEventArgs.KeyValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eca2e-167">获取 <see cref="E:System.Windows.Forms.Control.KeyDown" /> 或 <see cref="E:System.Windows.Forms.Control.KeyUp" /> 事件的键盘值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca2e-167">Gets the keyboard value for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eca2e-168">
            <see cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" /> 属性的整数表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca2e-168">The integer representation of the <see cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eca2e-169">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="eca2e-169">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="eca2e-170">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType>事件。</span><span class="sxs-lookup"><span data-stu-id="eca2e-170">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="eca2e-171">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="eca2e-171">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="eca2e-172">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="eca2e-172">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="eca2e-173">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<xref:System.Windows.Forms.Control>，如<xref:System.Windows.Forms.Button>或<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="eca2e-173">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="eca2e-174">然后将其命名实例`Control1`并确保与事件处理程序<xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType>事件。</span><span class="sxs-lookup"><span data-stu-id="eca2e-174">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#48](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#48)]
 [!code-vb[System.Windows.Forms.EventExamples#48](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyData" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modifiers As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys Modifiers { System::Windows::Forms::Keys get(); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Forms.Keys" Usage="System.Windows.Forms.KeyEventArgs.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eca2e-175">获取 <see cref="E:System.Windows.Forms.Control.KeyDown" /> 或 <see cref="E:System.Windows.Forms.Control.KeyUp" /> 事件的修饰符标志。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca2e-175">Gets the modifier flags for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
          <span data-ttu-id="eca2e-176">这些标志指示按下的 Ctrl、Shift 和 Alt 键的组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca2e-176">The flags indicate which combination of CTRL, SHIFT, and ALT keys was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eca2e-177">
            <see cref="T:System.Windows.Forms.Keys" /> 值，该值表示一个或多个修饰符标志。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca2e-177">A <see cref="T:System.Windows.Forms.Keys" /> value representing one or more modifier flags.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eca2e-178">若要确定特定的修改键是否曾按下，使用<xref:System.Windows.Forms.KeyEventArgs.Control%2A>， <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>，和<xref:System.Windows.Forms.KeyEventArgs.Alt%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="eca2e-178">To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties.</span></span> <span data-ttu-id="eca2e-179">可以与组合修饰符标志位或。</span><span class="sxs-lookup"><span data-stu-id="eca2e-179">Modifier flags can be combined with bitwise OR.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eca2e-180">下面的代码示例演示如何使用<xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A>属性来确定哪个修改键已按下以及为主键。</span><span class="sxs-lookup"><span data-stu-id="eca2e-180">The following code example shows how to use the <xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A> property to determine which modifier keys were pressed along with the primary key.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
      </Docs>
    </Member>
    <Member MemberName="Shift">
      <MemberSignature Language="C#" Value="public virtual bool Shift { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shift" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Shift" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Shift As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Shift { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Shift : bool" Usage="System.Windows.Forms.KeyEventArgs.Shift" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eca2e-181">获取一个值，该值指示是否曾按下 Shift 键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca2e-181">Gets a value indicating whether the SHIFT key was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eca2e-182">如果曾按下 Shift 键，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca2e-182">
              <see langword="true" /> if the SHIFT key was pressed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eca2e-183">下面的示例确定用户是否按下 Shift 键具有 F1 键，并因此，显示的帮助。</span><span class="sxs-lookup"><span data-stu-id="eca2e-183">The following example determines whether the user pressed the Shift key with the F1 key, and if so, displays help.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="SuppressKeyPress">
      <MemberSignature Language="C#" Value="public bool SuppressKeyPress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressKeyPress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressKeyPress As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressKeyPress { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SuppressKeyPress : bool with get, set" Usage="System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eca2e-184">获取或设置一个值，该值指示键事件是否应传递到基础控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca2e-184">Gets or sets a value indicating whether the key event should be passed on to the underlying control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eca2e-185">如果键事件不应该发送到该控件，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eca2e-185">
              <see langword="true" /> if the key event should not be sent to the control; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eca2e-186">你可以分配`true`如事件处理程序中为此属性<xref:System.Windows.Forms.Control.KeyDown>为了防止用户输入。</span><span class="sxs-lookup"><span data-stu-id="eca2e-186">You can assign `true` to this property in an event handler such as <xref:System.Windows.Forms.Control.KeyDown> in order to prevent user input.</span></span>  
  
 <span data-ttu-id="eca2e-187">设置<xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A>到`true`还设置<xref:System.Windows.Forms.KeyEventArgs.Handled%2A>到`true`。</span><span class="sxs-lookup"><span data-stu-id="eca2e-187">Setting <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> to `true` also sets <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eca2e-188">下面的代码示例可防止数字键击到达<xref:System.Windows.Forms.TextBox>控件名为`textBox1`。</span><span class="sxs-lookup"><span data-stu-id="eca2e-188">The following code example prevents numeric keystrokes from reaching the <xref:System.Windows.Forms.TextBox> control named `textBox1`.</span></span>  
  
 [!code-csharp[KeyEventArgs.SuppressKeyPress#1](~/samples/snippets/csharp/VS_Snippets_Winforms/keyeventargs.suppresskeypress/cs/form1.cs#1)]
 [!code-vb[KeyEventArgs.SuppressKeyPress#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/keyeventargs.suppresskeypress/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Handled" />
      </Docs>
    </Member>
  </Members>
</Type>