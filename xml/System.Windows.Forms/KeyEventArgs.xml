<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="KeyEventArgs.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f7677a8abed6de6921dd7137d79eb3ed66213093.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f7677a8abed6de6921dd7137d79eb3ed66213093</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> event.</source>
          <target state="translated">为 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> 事件提供数据。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph>, which specifies the key the user pressed and whether any modifier keys (CTRL, ALT, and SHIFT) were pressed at the same time, is passed with each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> event.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph>，它与每个指定用户按下并是否任何修改键 （CTRL、 ALT 和 SHIFT） 已按下一次传递密钥<ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event occurs when the user presses any key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>事件发生在用户按任意键时。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> event occurs when the user releases the key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph>当用户释放键时发生的事件。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>Duplicate <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> events occur each time the key repeats, if the key is held down, but only one <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> event is generated when the user releases the key.</source>
          <target state="translated">重复<ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>事件发生密钥重复发生，每次，如果按住键，但只有一个<ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph>用户释放键时，生成事件。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event also occurs when a key is pressed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph>按下某个键时，也会发生事件。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs&gt;</ph> is passed with each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event, and specifies the character that was composed as a result of each key press.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs&gt;</ph>传递与每个<ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph>事件，并指定由于每次按键组成的字符。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>For information about the event model, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关事件模型的信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>The following code examples demonstrate how to detect the state of a key press.</source>
          <target state="translated">下面的代码示例演示如何检测按键的状态。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source><bpt id="p1">**</bpt>Example 1<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>示例 1<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event with the <ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph> class to display pop-up style Help to the user of the application.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>事件和<ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph>类来显示弹出样式给用户的应用程序的帮助。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</source>
          <target state="translated">该示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph>属性传递给要筛选的所有变体按 F1 键和修改键的事件处理程序方法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>When the user presses any variation of F1 that includes any keyboard modifier, the <ph id="ph1">&lt;xref:System.Windows.Forms.Help&gt;</ph> class displays a pop-up window, similar to a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, near the control.</source>
          <target state="translated">当用户按 F1，包括任何键盘修饰符，任何变体<ph id="ph1">&lt;xref:System.Windows.Forms.Help&gt;</ph>类显示一个弹出窗口，类似于<ph id="ph2">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>，在控件旁边。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</source>
          <target state="translated">如果用户按 ALT + F2，则会显示一个不同的帮助弹出窗口的其他信息。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source><bpt id="p1">**</bpt>Example 2<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>示例 2<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>, allows the user to edit that <ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>.</source>
          <target state="translated">下面的示例确定是否由用户按 ALT + E，以及如果鼠标指针悬停于<ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>，允许用户编辑该<ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source><bpt id="p1">**</bpt>Example 3<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>示例 3<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>The following example determines whether the user pressed a non-numeric key, and if so, cancels the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event by using the <ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph> property.</source>
          <target state="translated">下面的示例确定用户是否按下一个非数字密钥，如果是这样，将取消<ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph>事件通过使用<ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.KeyEventArgs.#ctor(System.Windows.Forms.Keys)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> representing the key that was pressed, combined with any modifier flags that indicate which CTRL, SHIFT, and ALT keys were pressed at the same time.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph>，表示按下的键以及任何修饰符标志（指示同时按下的 Ctrl、Shift 和 Alt 键）。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.KeyEventArgs.#ctor(System.Windows.Forms.Keys)">
          <source>Possible values are obtained be applying the bitwise OR (|) operator to constants from the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> enumeration.</source>
          <target state="translated">可通过将按位“或”(|) 运算符应用于 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 枚举中的常数，来获取可能的值。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.KeyEventArgs.#ctor(System.Windows.Forms.Keys)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.KeyEventArgs.Alt">
          <source>Gets a value indicating whether the ALT key was pressed.</source>
          <target state="translated">获取一个值，该值指示是否曾按下 Alt 键。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Alt">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the ALT key was pressed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果曾按下 Alt 键，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Alt">
          <source><bpt id="p1">**</bpt>Example 1<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>示例 1<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Alt">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event with the <ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph> class to display pop-up style Help to the user of the application.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>事件和<ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph>类来显示弹出样式给用户的应用程序的帮助。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Alt">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</source>
          <target state="translated">该示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph>属性传递给要筛选的所有变体按 F1 键和修改键的事件处理程序方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Alt">
          <source>When the user presses any variation of F1 that includes any keyboard modifier, the <ph id="ph1">&lt;xref:System.Windows.Forms.Help&gt;</ph> class displays a pop-up window, similar to a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, near the control.</source>
          <target state="translated">当用户按 F1，包括任何键盘修饰符，任何变体<ph id="ph1">&lt;xref:System.Windows.Forms.Help&gt;</ph>类显示一个弹出窗口，类似于<ph id="ph2">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>，在控件旁边。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Alt">
          <source>If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</source>
          <target state="translated">如果用户按 ALT + F2，则会显示一个不同的帮助弹出窗口的其他信息。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Alt">
          <source><bpt id="p1">**</bpt>Example 2<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>示例 2<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Alt">
          <source>The following example determines whether the user pressed ALT+E, and if the mouse pointer is over <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>, allows the user to edit that <ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>.</source>
          <target state="translated">下面的示例确定是否由用户按 ALT + E，以及如果鼠标指针悬停于<ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>，允许用户编辑该<ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.KeyEventArgs.Control">
          <source>Gets a value indicating whether the CTRL key was pressed.</source>
          <target state="translated">获取一个值，该值指示是否曾按下 Ctrl 键。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Control">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the CTRL key was pressed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果曾按下 Ctrl 键，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Control">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event with the <ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph> class to display pop-up style Help to the user of the application.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>事件和<ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph>类来显示弹出样式给用户的应用程序的帮助。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Control">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</source>
          <target state="translated">该示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph>属性传递给要筛选的所有变体按 F1 键和修改键的事件处理程序方法。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Control">
          <source>When the user presses any variation of F1 that includes any keyboard modifier, the <ph id="ph1">&lt;xref:System.Windows.Forms.Help&gt;</ph> class displays a pop-up window, similar to a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, near the control.</source>
          <target state="translated">当用户按 F1，包括任何键盘修饰符，任何变体<ph id="ph1">&lt;xref:System.Windows.Forms.Help&gt;</ph>类显示一个弹出窗口，类似于<ph id="ph2">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>，在控件旁边。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Control">
          <source>If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</source>
          <target state="translated">如果用户按 ALT + F2，则会显示一个不同的帮助弹出窗口的其他信息。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.KeyEventArgs.Handled">
          <source>Gets or sets a value indicating whether the event was handled.</source>
          <target state="translated">获取或设置一个值，该值指示是否处理过此事件。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Handled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to bypass the control's default handling; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph> to also pass the event along to the default control handler.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示跳过控件的默认处理；<ph id="ph2">&lt;see langword="false" /&gt;</ph> 表示还将该事件传递给默认控件处理程序。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Handled">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph> is implemented differently by different controls within Windows Forms.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph> 由 Windows 窗体中的不同控件以不同方式实现。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Handled">
          <source>For controls like <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> which subclass native Win32 controls, it is interpreted to mean that the key message should not be passed to the underlying native control.</source>
          <target state="translated">等控件<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>哪些子类本机 Win32 控制，它被解释为表示不应将键的消息传递到基础本机控件。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Handled">
          <source>If you set <ph id="ph1">`Handled`</ph> to true on a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, that control will not pass the key press <ph id="ph3">`events`</ph> to the underlying Win32 text box control, but it will still display the characters that the user typed.</source>
          <target state="translated">如果你设置<ph id="ph1">`Handled`</ph>为 true 的<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>，控件不会传递键按键<ph id="ph3">`events`</ph>给基础 Win32 文本框控件，但它仍将显示用户输入的字符。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Handled">
          <source>If you want to prevent the current control from receiving a key press, use the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A&gt;</ph> property.</source>
          <target state="translated">如果你想要防止当前控件接收键按键，使用<ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Handled">
          <source>The following example determines whether the user pressed a non-numeric key, and if so, cancels the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event by using the <ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph> property.</source>
          <target state="translated">下面的示例确定用户是否按下一个非数字密钥，如果是这样，将取消<ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph>事件通过使用<ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source>Gets the keyboard code for a <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> event.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> 事件的键盘代码。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> value that is the key code for the event.</source>
          <target state="translated">作为事件的键代码的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source>The following code examples show how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.KeyCode%2A&gt;</ph> property to determine which key was pressed.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.KeyCode%2A&gt;</ph>属性来确定曾按下的键。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source><bpt id="p1">**</bpt>Example 1<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>示例 1<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event with the <ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph> class to display pop-up style Help to the user of the application.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>事件和<ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph>类来显示弹出样式给用户的应用程序的帮助。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</source>
          <target state="translated">该示例使用<ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph>属性传递给要筛选的所有变体按 F1 键和修改键的事件处理程序方法。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source>When the user presses any variation of F1 that includes any keyboard modifier, the <ph id="ph1">&lt;xref:System.Windows.Forms.Help&gt;</ph> class displays a pop-up window, similar to a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, near the control.</source>
          <target state="translated">当用户按 F1，包括任何键盘修饰符，任何变体<ph id="ph1">&lt;xref:System.Windows.Forms.Help&gt;</ph>类显示一个弹出窗口，类似于<ph id="ph2">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>，在控件旁边。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source>If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</source>
          <target state="translated">如果用户按 ALT + F2，则会显示一个不同的帮助弹出窗口的其他信息。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source><bpt id="p1">**</bpt>Example 2<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>示例 2<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source>The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>, allows the user to edit that <ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>.</source>
          <target state="translated">下面的示例确定是否由用户按 ALT + E，以及如果鼠标指针悬停于<ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>，允许用户编辑该<ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source><bpt id="p1">**</bpt>Example 3<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>示例 3<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source>The following example determines whether the user pressed a non-numeric key, and if so, cancels the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event by using the <ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph> property.</source>
          <target state="translated">下面的示例确定用户是否按下一个非数字密钥，如果是这样，将取消<ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph>事件通过使用<ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.KeyEventArgs.KeyData">
          <source>Gets the key data for a <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> event.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> 事件的键数据。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyData">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> representing the key code for the key that was pressed, combined with modifier flags that indicate which combination of CTRL, SHIFT, and ALT keys was pressed at the same time.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph>，表示按下的键的键代码以及修饰符标志（指示同时按下的 Ctrl、Shift 和 Alt 键的组合）。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyData">
          <source>You can use constants from <ph id="ph1">&lt;xref:System.Windows.Forms.Keys&gt;</ph> to extract information from the <ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.KeyData%2A&gt;</ph> property.</source>
          <target state="translated">你可以使用从常量<ph id="ph1">&lt;xref:System.Windows.Forms.Keys&gt;</ph>提取信息从<ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.KeyData%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyData">
          <source>Use the bitwise AND operator to compare data returned by <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.KeyData%2A&gt;</ph> with constants in <ph id="ph2">&lt;xref:System.Windows.Forms.Keys&gt;</ph> to obtain information about which keys the user pressed.</source>
          <target state="translated">使用按位 AND 运算符来比较返回数据<ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.KeyData%2A&gt;</ph>含常量的<ph id="ph2">&lt;xref:System.Windows.Forms.Keys&gt;</ph>以获取有关哪些密钥用户按下的信息。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyData">
          <source>To determine whether a specific modifier key was pressed, use the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.Control%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.Shift%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.KeyEventArgs.Alt%2A&gt;</ph> properties.</source>
          <target state="translated">若要确定特定的修改键是否曾按下，使用<ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.Control%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.Shift%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Windows.Forms.KeyEventArgs.Alt%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyData">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyData">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyData">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyData">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyData">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyData">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">然后将其命名实例<ph id="ph1">`Control1`</ph>并确保与事件处理程序<ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.KeyEventArgs.KeyValue">
          <source>Gets the keyboard value for a <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> event.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> 事件的键盘值。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyValue">
          <source>The integer representation of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" /&gt;</ph> 属性的整数表示形式。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyValue">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下面的代码示例演示如何使用此成员。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyValue">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">在示例中，事件处理程序报告的匹配项<ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyValue">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyValue">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要报告或频繁发生的事件上多个事件，请考虑替换<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>与<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或追加到一个多行消息<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyValue">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">若要运行此代码示例，请将其粘贴到包含从继承的类型的实例的项目<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>，如<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyValue">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">然后将其命名实例<ph id="ph1">`Control1`</ph>并确保与事件处理程序<ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.KeyEventArgs.Modifiers">
          <source>Gets the modifier flags for a <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> event.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> 事件的修饰符标志。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.KeyEventArgs.Modifiers">
          <source>The flags indicate which combination of CTRL, SHIFT, and ALT keys was pressed.</source>
          <target state="translated">这些标志指示按下的 Ctrl、Shift 和 Alt 键的组合。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Modifiers">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> value representing one or more modifier flags.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 值，该值表示一个或多个修饰符标志。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Modifiers">
          <source>To determine whether a specific modifier key was pressed, use the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.Control%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.Shift%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.KeyEventArgs.Alt%2A&gt;</ph> properties.</source>
          <target state="translated">若要确定特定的修改键是否曾按下，使用<ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.Control%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.Shift%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Windows.Forms.KeyEventArgs.Alt%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Modifiers">
          <source>Modifier flags can be combined with bitwise OR.</source>
          <target state="translated">可以与组合修饰符标志位或。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Modifiers">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A&gt;</ph> property to determine which modifier keys were pressed along with the primary key.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A&gt;</ph>属性来确定哪个修改键已按下以及为主键。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.KeyEventArgs.Shift">
          <source>Gets a value indicating whether the SHIFT key was pressed.</source>
          <target state="translated">获取一个值，该值指示是否曾按下 Shift 键。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Shift">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the SHIFT key was pressed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果曾按下 Shift 键，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Shift">
          <source>The following example determines whether the user pressed the Shift key with the F1 key, and if so, displays help.</source>
          <target state="translated">下面的示例确定用户是否按下 Shift 键具有 F1 键，并因此，显示的帮助。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress">
          <source>Gets or sets a value indicating whether the key event should be passed on to the underlying control.</source>
          <target state="translated">获取或设置一个值，该值指示键事件是否应传递到基础控件。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key event should not be sent to the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果键事件不应该发送到该控件，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress">
          <source>You can assign <ph id="ph1">`true`</ph> to this property in an event handler such as <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> in order to prevent user input.</source>
          <target state="translated">你可以分配<ph id="ph1">`true`</ph>如事件处理程序中为此属性<ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>为了防止用户输入。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A&gt;</ph> to <ph id="ph2">`true`</ph> also sets <ph id="ph3">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph> to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">设置<ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A&gt;</ph>到<ph id="ph2">`true`</ph>还设置<ph id="ph3">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph>到<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress">
          <source>The following code example prevents numeric keystrokes from reaching the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`textBox1`</ph>.</source>
          <target state="translated">下面的代码示例可防止数字键击到达<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控件名为<ph id="ph2">`textBox1`</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>