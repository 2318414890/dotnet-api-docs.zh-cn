<Type Name="CheckBox" FullName="System.Windows.Forms.CheckBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf832358bd4f0c1a79f0c899654f166f9477fdf0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36347844" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CheckBox : System.Windows.Forms.ButtonBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CheckBox extends System.Windows.Forms.ButtonBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.CheckBox" />
  <TypeSignature Language="VB.NET" Value="Public Class CheckBox&#xA;Inherits ButtonBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CheckBox : System::Windows::Forms::ButtonBase" />
  <TypeSignature Language="F#" Value="type CheckBox = class&#xA;    inherit ButtonBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ButtonBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultBindingProperty("CheckState")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CheckedChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Checked")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem("System.Windows.Forms.Design.AutoSizeToolboxItem,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="66b0c-101">表示 Windows <see cref="T:System.Windows.Forms.CheckBox" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="66b0c-101">Represents a Windows <see cref="T:System.Windows.Forms.CheckBox" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66b0c-102">使用<xref:System.Windows.Forms.CheckBox>以向用户提供一个选项，如 true/false 或是/否。</span><span class="sxs-lookup"><span data-stu-id="66b0c-102">Use a <xref:System.Windows.Forms.CheckBox> to give the user an option, such as true/false or yes/no.</span></span> <span data-ttu-id="66b0c-103"><xref:System.Windows.Forms.CheckBox>控件可以显示映像和 / 或文本。</span><span class="sxs-lookup"><span data-stu-id="66b0c-103">The <xref:System.Windows.Forms.CheckBox> control can display an image or text or both.</span></span>  
  
 <span data-ttu-id="66b0c-104"><xref:System.Windows.Forms.CheckBox> 和<xref:System.Windows.Forms.RadioButton>控件具有类似的函数： 它们允许用户从选项列表中选择。</span><span class="sxs-lookup"><span data-stu-id="66b0c-104"><xref:System.Windows.Forms.CheckBox> and <xref:System.Windows.Forms.RadioButton> controls have a similar function: they allow the user to choose from a list of options.</span></span> <span data-ttu-id="66b0c-105"><xref:System.Windows.Forms.CheckBox> 控件允许用户选取选项的组合。</span><span class="sxs-lookup"><span data-stu-id="66b0c-105"><xref:System.Windows.Forms.CheckBox> controls let the user pick a combination of options.</span></span> <span data-ttu-id="66b0c-106">与此相反，<xref:System.Windows.Forms.RadioButton>控件允许用户从相互排斥的选项中进行选择。</span><span class="sxs-lookup"><span data-stu-id="66b0c-106">In contrast, <xref:System.Windows.Forms.RadioButton> controls allow a user to choose from mutually exclusive options.</span></span>  
  
 <span data-ttu-id="66b0c-107"><xref:System.Windows.Forms.CheckBox.Appearance%2A>属性确定是否<xref:System.Windows.Forms.CheckBox>显示为典型<xref:System.Windows.Forms.CheckBox>或作为一个按钮。</span><span class="sxs-lookup"><span data-stu-id="66b0c-107">The <xref:System.Windows.Forms.CheckBox.Appearance%2A> property determines whether the <xref:System.Windows.Forms.CheckBox> appears as a typical <xref:System.Windows.Forms.CheckBox> or as a button.</span></span>  
  
 <span data-ttu-id="66b0c-108"><xref:System.Windows.Forms.CheckBox.ThreeState%2A>属性确定控件是否支持两个或三个状态。</span><span class="sxs-lookup"><span data-stu-id="66b0c-108">The <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property determines whether the control supports two or three states.</span></span> <span data-ttu-id="66b0c-109">使用<xref:System.Windows.Forms.CheckBox.Checked%2A>属性来获取或设置两个状态的值<xref:System.Windows.Forms.CheckBox>控制和使用<xref:System.Windows.Forms.CheckBox.CheckState%2A>属性来获取或设置三种状态的值<xref:System.Windows.Forms.CheckBox>控件。</span><span class="sxs-lookup"><span data-stu-id="66b0c-109">Use the <xref:System.Windows.Forms.CheckBox.Checked%2A> property to get or set the value of a two-state <xref:System.Windows.Forms.CheckBox> control and use the <xref:System.Windows.Forms.CheckBox.CheckState%2A> property to get or set the value of a three-state <xref:System.Windows.Forms.CheckBox> control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66b0c-110">如果<xref:System.Windows.Forms.CheckBox.ThreeState%2A>属性设置为`true`、<xref:System.Windows.Forms.CheckBox.Checked%2A>属性将返回`true`选中或不确定状态。</span><span class="sxs-lookup"><span data-stu-id="66b0c-110">If the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property is set to `true`, the <xref:System.Windows.Forms.CheckBox.Checked%2A> property will return `true` for either a checked or indeterminate state.</span></span>  
  
 <span data-ttu-id="66b0c-111"><xref:System.Windows.Forms.ButtonBase.FlatStyle%2A>属性确定的样式和该控件的外观。</span><span class="sxs-lookup"><span data-stu-id="66b0c-111">The <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property determines the style and appearance of the control.</span></span> <span data-ttu-id="66b0c-112">如果<xref:System.Windows.Forms.ButtonBase.FlatStyle%2A>属性设置为<xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType>，用户的操作系统会确定控件的外观。</span><span class="sxs-lookup"><span data-stu-id="66b0c-112">If the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to <xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType>, the user's operating system determines the appearance of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66b0c-113">当<xref:System.Windows.Forms.ButtonBase.FlatStyle%2A>属性设置为<xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType>、<xref:System.Windows.Forms.CheckBox.CheckAlign%2A>属性将被忽略，并且控件将显示使用<xref:System.Drawing.ContentAlignment.MiddleLeft?displayProperty=nameWithType>或<xref:System.Drawing.ContentAlignment.MiddleRight?displayProperty=nameWithType>对齐方式。</span><span class="sxs-lookup"><span data-stu-id="66b0c-113">When the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to <xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType>, the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> property is ignored and the control is displayed using the <xref:System.Drawing.ContentAlignment.MiddleLeft?displayProperty=nameWithType> or <xref:System.Drawing.ContentAlignment.MiddleRight?displayProperty=nameWithType> alignment.</span></span> <span data-ttu-id="66b0c-114">如果<xref:System.Windows.Forms.CheckBox.CheckAlign%2A>属性设置为右对齐方式之一，该控件将显示使用<xref:System.Drawing.ContentAlignment.MiddleRight?displayProperty=nameWithType>对齐; 否则，它将显示使用<xref:System.Drawing.ContentAlignment.MiddleLeft?displayProperty=nameWithType>对齐方式。</span><span class="sxs-lookup"><span data-stu-id="66b0c-114">If the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> property is set to one of the right alignments, the control is displayed using the <xref:System.Drawing.ContentAlignment.MiddleRight?displayProperty=nameWithType> alignment; otherwise, it is displayed using the <xref:System.Drawing.ContentAlignment.MiddleLeft?displayProperty=nameWithType> alignment.</span></span>  
  
 <span data-ttu-id="66b0c-115">下面介绍了不确定状态： 必须<xref:System.Windows.Forms.CheckBox>，它确定如果中选定的文本<xref:System.Windows.Forms.RichTextBox>为粗体。</span><span class="sxs-lookup"><span data-stu-id="66b0c-115">The following describes an indeterminate state: You have a <xref:System.Windows.Forms.CheckBox> that determines if the selected text in a <xref:System.Windows.Forms.RichTextBox> is bold.</span></span> <span data-ttu-id="66b0c-116">当你选择的文本，你可以单击<xref:System.Windows.Forms.CheckBox>要用粗体显示所选内容。</span><span class="sxs-lookup"><span data-stu-id="66b0c-116">When you select text you can click the <xref:System.Windows.Forms.CheckBox> to bold the selection.</span></span> <span data-ttu-id="66b0c-117">同样，当选择一些文本，<xref:System.Windows.Forms.CheckBox>显示所选的文本是否加粗。</span><span class="sxs-lookup"><span data-stu-id="66b0c-117">Likewise, when you select some text, the <xref:System.Windows.Forms.CheckBox> displays whether the selected text is bold.</span></span> <span data-ttu-id="66b0c-118">如果您选定的文本包含文本加粗和正常，<xref:System.Windows.Forms.CheckBox>将具有不确定状态。</span><span class="sxs-lookup"><span data-stu-id="66b0c-118">If your selected text contains text that is bold and normal, the <xref:System.Windows.Forms.CheckBox> will have an indeterminate state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66b0c-119">下面的代码示例创建并初始化<xref:System.Windows.Forms.CheckBox>、 为它赋予一个切换按钮的外观，设置<xref:System.Windows.Forms.CheckBox.AutoCheck%2A>到`false`，并将其添加到<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="66b0c-119">The following code example creates and initializes a <xref:System.Windows.Forms.CheckBox>, gives it the appearance of a toggle button, sets <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> to `false`, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ButtonBase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CheckBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CheckBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66b0c-120">初始化 <see cref="T:System.Windows.Forms.CheckBox" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-120">Initializes a new instance of the <see cref="T:System.Windows.Forms.CheckBox" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66b0c-121">默认情况下，当新<xref:System.Windows.Forms.CheckBox>实例化时，<xref:System.Windows.Forms.CheckBox.AutoCheck%2A>设置为`true`，<xref:System.Windows.Forms.CheckBox.Checked%2A>设置为`false`，和<xref:System.Windows.Forms.CheckBox.Appearance%2A>设置为<xref:System.Windows.Forms.Appearance.Normal>。</span><span class="sxs-lookup"><span data-stu-id="66b0c-121">By default, when a new <xref:System.Windows.Forms.CheckBox> is instantiated, <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> is set to `true`, <xref:System.Windows.Forms.CheckBox.Checked%2A> is set to `false`, and <xref:System.Windows.Forms.CheckBox.Appearance%2A> is set to <xref:System.Windows.Forms.Appearance.Normal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66b0c-122">下面的代码示例创建并初始化<xref:System.Windows.Forms.CheckBox>、 为它赋予一个切换按钮的外观，设置<xref:System.Windows.Forms.CheckBox.AutoCheck%2A>到`false`，并将其添加到<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="66b0c-122">The following code example creates and initializes a <xref:System.Windows.Forms.CheckBox>, gives it the appearance of a toggle button, sets <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> to `false`, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CheckBox" />
      </Docs>
    </Member>
    <Member MemberName="Appearance">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Appearance Appearance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Appearance Appearance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.Appearance" />
      <MemberSignature Language="VB.NET" Value="Public Property Appearance As Appearance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Appearance Appearance { System::Windows::Forms::Appearance get(); void set(System::Windows::Forms::Appearance value); };" />
      <MemberSignature Language="F#" Value="member this.Appearance : System.Windows.Forms.Appearance with get, set" Usage="System.Windows.Forms.CheckBox.Appearance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Appearance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66b0c-123">获取或设置确定 <see cref="T:System.Windows.Forms.CheckBox" /> 控件外观的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-123">Gets or sets the value that determines the appearance of a <see cref="T:System.Windows.Forms.CheckBox" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66b0c-124">
            <see cref="T:System.Windows.Forms.Appearance" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-124">One of the <see cref="T:System.Windows.Forms.Appearance" /> values.</span>
          </span>
          <span data-ttu-id="66b0c-125">默认值为 <see cref="F:System.Windows.Forms.Appearance.Normal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-125">The default value is <see cref="F:System.Windows.Forms.Appearance.Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66b0c-126">如果<xref:System.Windows.Forms.CheckBox.Appearance%2A>值设置为<xref:System.Windows.Forms.Appearance.Normal>、<xref:System.Windows.Forms.CheckBox>具有典型的外观。</span><span class="sxs-lookup"><span data-stu-id="66b0c-126">If <xref:System.Windows.Forms.CheckBox.Appearance%2A> value is set to <xref:System.Windows.Forms.Appearance.Normal>, the <xref:System.Windows.Forms.CheckBox> has a typical appearance.</span></span> <span data-ttu-id="66b0c-127">如果值设置为`Button`、<xref:System.Windows.Forms.CheckBox>看上去像可切换为向上或向状态下的切换按钮。</span><span class="sxs-lookup"><span data-stu-id="66b0c-127">If the value is set to `Button`, the <xref:System.Windows.Forms.CheckBox> appears like a toggle button, which can be toggled to an up or down state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66b0c-128">下面的代码示例创建并初始化<xref:System.Windows.Forms.CheckBox>、 为它赋予一个切换按钮的外观，设置<xref:System.Windows.Forms.CheckBox.AutoCheck%2A>到`false`，并将其添加到<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="66b0c-128">The following code example creates and initializes a <xref:System.Windows.Forms.CheckBox>, gives it the appearance of a toggle button, sets <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> to `false`, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="66b0c-129">分配的值不是 <see cref="T:System.Windows.Forms.Appearance" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-129">The value assigned is not one of the <see cref="T:System.Windows.Forms.Appearance" /> values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.Appearance" />
      </Docs>
    </Member>
    <Member MemberName="AppearanceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AppearanceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AppearanceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckBox.AppearanceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AppearanceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AppearanceChanged;" />
      <MemberSignature Language="F#" Value="member this.AppearanceChanged : EventHandler " Usage="member this.AppearanceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66b0c-130">当 <see cref="P:System.Windows.Forms.CheckBox.Appearance" /> 属性的值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-130">Occurs when the value of the <see cref="P:System.Windows.Forms.CheckBox.Appearance" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66b0c-131">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="66b0c-131">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66b0c-132">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="66b0c-132">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="66b0c-133">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.CheckBox.AppearanceChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="66b0c-133">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.CheckBox.AppearanceChanged> event.</span></span> <span data-ttu-id="66b0c-134">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="66b0c-134">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="66b0c-135">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="66b0c-135">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="66b0c-136">若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.CheckBox>名为`CheckBox1`。</span><span class="sxs-lookup"><span data-stu-id="66b0c-136">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CheckBox> named `CheckBox1`.</span></span> <span data-ttu-id="66b0c-137">然后，确保与事件处理程序<xref:System.Windows.Forms.CheckBox.AppearanceChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="66b0c-137">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.CheckBox.AppearanceChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#139](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#139)]
 [!code-vb[System.Windows.Forms.EventExamples#139](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#139)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.Appearance" />
      </Docs>
    </Member>
    <Member MemberName="AutoCheck">
      <MemberSignature Language="C#" Value="public bool AutoCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoCheck" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.AutoCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCheck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoCheck { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoCheck : bool with get, set" Usage="System.Windows.Forms.CheckBox.AutoCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66b0c-138">获取或设置一个值，该值指示当单击某一 <see cref="P:System.Windows.Forms.CheckBox.Checked" /> 时，<see cref="P:System.Windows.Forms.CheckBox.CheckState" /> 或 <see cref="T:System.Windows.Forms.CheckBox" /> 的值以及该 <see cref="T:System.Windows.Forms.CheckBox" /> 的外观是否自动改变。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-138">Gets or set a value indicating whether the <see cref="P:System.Windows.Forms.CheckBox.Checked" /> or <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> values and the <see cref="T:System.Windows.Forms.CheckBox" />'s appearance are automatically changed when the <see cref="T:System.Windows.Forms.CheckBox" /> is clicked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66b0c-139">如果 <see cref="P:System.Windows.Forms.CheckBox.Checked" /> 值或 <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> 值及该控件的外观在发生 <see cref="E:System.Windows.Forms.Control.Click" /> 事件时自动更改，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-139">
              <see langword="true" /> if the <see cref="P:System.Windows.Forms.CheckBox.Checked" /> value or <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> value and the appearance of the control are automatically changed on the <see cref="E:System.Windows.Forms.Control.Click" /> event; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="66b0c-140">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-140">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66b0c-141">如果<xref:System.Windows.Forms.CheckBox.AutoCheck%2A>设置为 false，你将需要添加代码以更新<xref:System.Windows.Forms.CheckBox.Checked%2A>或<xref:System.Windows.Forms.CheckBox.CheckState%2A>中值<xref:System.Windows.Forms.Control.Click>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="66b0c-141">If <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> is set to false, you will need to add code to update the <xref:System.Windows.Forms.CheckBox.Checked%2A> or <xref:System.Windows.Forms.CheckBox.CheckState%2A> values in the <xref:System.Windows.Forms.Control.Click> event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66b0c-142">下面的代码示例创建并初始化<xref:System.Windows.Forms.CheckBox>、 为它赋予一个切换按钮的外观，设置<xref:System.Windows.Forms.CheckBox.AutoCheck%2A>到`false`，并将其添加到<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="66b0c-142">The following code example creates and initializes a <xref:System.Windows.Forms.CheckBox>, gives it the appearance of a toggle button, sets <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> to `false`, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAlign">
      <MemberSignature Language="C#" Value="public System.Drawing.ContentAlignment CheckAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment CheckAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.CheckAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::ContentAlignment CheckAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.CheckAlign : System.Drawing.ContentAlignment with get, set" Usage="System.Windows.Forms.CheckBox.CheckAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66b0c-143">获取或设置 <see cref="T:System.Windows.Forms.CheckBox" /> 控件上的复选框的水平和垂直对齐方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-143">Gets or sets the horizontal and vertical alignment of the check mark on a <see cref="T:System.Windows.Forms.CheckBox" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66b0c-144">
            <see cref="T:System.Drawing.ContentAlignment" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-144">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span>
          </span>
          <span data-ttu-id="66b0c-145">默认值为 <see langword="MiddleLeft" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-145">The default value is <see langword="MiddleLeft" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="66b0c-146">下面的代码示例的标签中显示三个属性的值。</span><span class="sxs-lookup"><span data-stu-id="66b0c-146">The following code example displays the values of three properties in a label.</span></span> <span data-ttu-id="66b0c-147"><xref:System.Windows.Forms.CheckBox.ThreeState%2A>属性之间交替`true`和`false`与交替单击该控件会和<xref:System.Windows.Forms.CheckBox.CheckAlign%2A>之间交替`MiddleRight`和`MiddleLeft`值<xref:System.Drawing.ContentAlignment>。</span><span class="sxs-lookup"><span data-stu-id="66b0c-147">The <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property alternates between `true` and `false` with alternating clicks of the control and the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> alternates between the `MiddleRight` and `MiddleLeft` values of <xref:System.Drawing.ContentAlignment>.</span></span> <span data-ttu-id="66b0c-148">此示例演示如何将属性值更改为<xref:System.Windows.Forms.CheckBox.ThreeState%2A>将检查属性更改和控件。</span><span class="sxs-lookup"><span data-stu-id="66b0c-148">This example shows how the property values change as the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property changes and the control is checked.</span></span> <span data-ttu-id="66b0c-149">此示例需要<xref:System.Windows.Forms.CheckBox>，<xref:System.Windows.Forms.Label>和<xref:System.Windows.Forms.Button>已所有窗体上实例化和标签是足够大，以显示三行文本，以及对引用<xref:System.Drawing?displayProperty=nameWithType>命名空间。</span><span class="sxs-lookup"><span data-stu-id="66b0c-149">This example requires that a <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.Label> and <xref:System.Windows.Forms.Button> have all been instantiated on a form and that the label is large enough to display three lines of text, as well as a reference to the <xref:System.Drawing?displayProperty=nameWithType> namespace.</span></span> <span data-ttu-id="66b0c-150">在中应该调用此代码<xref:System.Windows.Forms.Control.Click>的控件的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="66b0c-150">This code should be called in the <xref:System.Windows.Forms.Control.Click> event handler of the control.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="66b0c-151">所分配的值不是 <see cref="T:System.Drawing.ContentAlignment" /> 枚举值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-151">The value assigned is not one of the <see cref="T:System.Drawing.ContentAlignment" /> enumeration values.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.ButtonBase.TextAlign" />
        <altmember cref="T:System.Drawing.ContentAlignment" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Checked : bool with get, set" Usage="System.Windows.Forms.CheckBox.Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66b0c-152">获取或设置一个值，该值指示 <see cref="T:System.Windows.Forms.CheckBox" /> 是否处于选中状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-152">Gets or set a value indicating whether the <see cref="T:System.Windows.Forms.CheckBox" /> is in the checked state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66b0c-153">如果 <see cref="T:System.Windows.Forms.CheckBox" /> 处于选定状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-153">
              <see langword="true" /> if the <see cref="T:System.Windows.Forms.CheckBox" /> is in the checked state; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="66b0c-154">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-154">The default value is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="66b0c-155">
            <block subset="none" type="note">
              <para> 如果<see cref="P:System.Windows.Forms.CheckBox.ThreeState" />属性设置为<see langword="true" />、<see cref="P:System.Windows.Forms.CheckBox.Checked" />属性将返回<see langword="true" />为<see langword="Checked" />或<see langword="Indeterminate" /><see cref="P:System.Windows.Forms.CheckBox.CheckState" />。  </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-155">
              <block subset="none" type="note">
                <para> If the <see cref="P:System.Windows.Forms.CheckBox.ThreeState" /> property is set to <see langword="true" />, the <see cref="P:System.Windows.Forms.CheckBox.Checked" /> property will return <see langword="true" /> for either a <see langword="Checked" /> or <see langword="Indeterminate" /><see cref="P:System.Windows.Forms.CheckBox.CheckState" />.  </para>
              </block>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66b0c-156">当值是`true`、<xref:System.Windows.Forms.CheckBox>的控件部分显示一个复选标记。</span><span class="sxs-lookup"><span data-stu-id="66b0c-156">When the value is `true`, the <xref:System.Windows.Forms.CheckBox> portion of the control displays a check mark.</span></span> <span data-ttu-id="66b0c-157">如果<xref:System.Windows.Forms.CheckBox.Appearance%2A>属性设置为`Button`，控件将显示凹陷时<xref:System.Windows.Forms.CheckBox.Checked%2A>是`true`并引发一个标准类似按钮时`false`。</span><span class="sxs-lookup"><span data-stu-id="66b0c-157">If the <xref:System.Windows.Forms.CheckBox.Appearance%2A> property is set to `Button`, the control will appear sunken when <xref:System.Windows.Forms.CheckBox.Checked%2A> is `true` and raised like a standard button when `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66b0c-158">下面的代码示例的标签中显示三个属性的值。</span><span class="sxs-lookup"><span data-stu-id="66b0c-158">The following code example displays the values of three properties in a label.</span></span> <span data-ttu-id="66b0c-159"><xref:System.Windows.Forms.CheckBox.ThreeState%2A>属性之间交替`true`和`false`与交替单击该控件会和<xref:System.Windows.Forms.CheckBox.CheckAlign%2A>之间交替<xref:System.Drawing.ContentAlignment>值`MiddleRight`和`MiddleLeft`。</span><span class="sxs-lookup"><span data-stu-id="66b0c-159">The <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property alternates between `true` and `false` with alternating clicks of the control and the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> alternates between a <xref:System.Drawing.ContentAlignment> value of `MiddleRight` and `MiddleLeft`.</span></span> <span data-ttu-id="66b0c-160">此示例演示如何将属性值更改为<xref:System.Windows.Forms.CheckBox.ThreeState%2A>将检查属性更改和控件。</span><span class="sxs-lookup"><span data-stu-id="66b0c-160">This example shows how the property values change as the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property changes and the control is checked.</span></span> <span data-ttu-id="66b0c-161">此示例需要<xref:System.Windows.Forms.CheckBox>，<xref:System.Windows.Forms.Label>和<xref:System.Windows.Forms.Button>已所有窗体上实例化和标签是足够大，以显示三行文本，以及对引用<xref:System.Drawing?displayProperty=nameWithType>命名空间。</span><span class="sxs-lookup"><span data-stu-id="66b0c-161">This example requires that a <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.Label> and <xref:System.Windows.Forms.Button> have all been instantiated on a form and that the label is large enough to display three lines of text, as well as a reference to the <xref:System.Drawing?displayProperty=nameWithType> namespace.</span></span> <span data-ttu-id="66b0c-162">在中应该调用此代码<xref:System.Windows.Forms.Control.Click>的控件的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="66b0c-162">This code should be called in the <xref:System.Windows.Forms.Control.Click> event handler of the control.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.ThreeState" />
        <altmember cref="P:System.Windows.Forms.CheckBox.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="CheckedChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CheckedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CheckedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckBox.CheckedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckedChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CheckedChanged;" />
      <MemberSignature Language="F#" Value="member this.CheckedChanged : EventHandler " Usage="member this.CheckedChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66b0c-163">当 <see cref="P:System.Windows.Forms.CheckBox.Checked" /> 属性的值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-163">Occurs when the value of the <see cref="P:System.Windows.Forms.CheckBox.Checked" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66b0c-164">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="66b0c-164">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66b0c-165">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="66b0c-165">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="66b0c-166">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.CheckBox.CheckedChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="66b0c-166">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.CheckBox.CheckedChanged> event.</span></span> <span data-ttu-id="66b0c-167">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="66b0c-167">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="66b0c-168">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="66b0c-168">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="66b0c-169">若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.CheckBox>名为`CheckBox1`。</span><span class="sxs-lookup"><span data-stu-id="66b0c-169">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CheckBox> named `CheckBox1`.</span></span> <span data-ttu-id="66b0c-170">然后，确保与事件处理程序<xref:System.Windows.Forms.CheckBox.CheckedChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="66b0c-170">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.CheckBox.CheckedChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#140](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#140)]
 [!code-vb[System.Windows.Forms.EventExamples#140](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#140)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.Checked" />
      </Docs>
    </Member>
    <Member MemberName="CheckState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckState CheckState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CheckState CheckState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.CheckState" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckState As CheckState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckState CheckState { System::Windows::Forms::CheckState get(); void set(System::Windows::Forms::CheckState value); };" />
      <MemberSignature Language="F#" Value="member this.CheckState : System.Windows.Forms.CheckState with get, set" Usage="System.Windows.Forms.CheckBox.CheckState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66b0c-171">获取或设置 <see cref="T:System.Windows.Forms.CheckBox" /> 的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-171">Gets or sets the state of the <see cref="T:System.Windows.Forms.CheckBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66b0c-172">
            <see cref="T:System.Windows.Forms.CheckState" /> 枚举值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-172">One of the <see cref="T:System.Windows.Forms.CheckState" /> enumeration values.</span>
          </span>
          <span data-ttu-id="66b0c-173">默认值为 <see langword="Unchecked" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-173">The default value is <see langword="Unchecked" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66b0c-174">如果<xref:System.Windows.Forms.CheckBox.ThreeState%2A>属性设置为`false`、<xref:System.Windows.Forms.CheckBox.CheckState%2A>属性值只能设置为`CheckState.Indeterminate`在代码中并不由用户交互。</span><span class="sxs-lookup"><span data-stu-id="66b0c-174">If the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property is set to `false`, the <xref:System.Windows.Forms.CheckBox.CheckState%2A> property value can only be set to `CheckState.Indeterminate` in code and not by user interaction.</span></span>  
  
 <span data-ttu-id="66b0c-175">下表描述了<xref:System.Windows.Forms.Appearance?displayProperty=nameWithType>的<xref:System.Windows.Forms.CheckBox>中其不同的状态控件`Normal`和`Button`控件设置样式<xref:System.Windows.Forms.CheckBox.Appearance%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="66b0c-175">The following table describes the <xref:System.Windows.Forms.Appearance?displayProperty=nameWithType> of the <xref:System.Windows.Forms.CheckBox> control in its different states for the `Normal` and `Button` style control <xref:System.Windows.Forms.CheckBox.Appearance%2A?displayProperty=nameWithType>.</span></span>  
  
|<span data-ttu-id="66b0c-176">复选</span><span class="sxs-lookup"><span data-stu-id="66b0c-176">CheckState</span></span>|<span data-ttu-id="66b0c-177">Appearance.Normal</span><span class="sxs-lookup"><span data-stu-id="66b0c-177">Appearance.Normal</span></span>|<span data-ttu-id="66b0c-178">Appearance.Button</span><span class="sxs-lookup"><span data-stu-id="66b0c-178">Appearance.Button</span></span>|  
|----------------|-----------------------|-----------------------|  
|`Checked`|<span data-ttu-id="66b0c-179"><xref:System.Windows.Forms.CheckBox>显示一个复选标记。</span><span class="sxs-lookup"><span data-stu-id="66b0c-179">The <xref:System.Windows.Forms.CheckBox> displays a check mark.</span></span>|<span data-ttu-id="66b0c-180">该控件会出现凹陷。</span><span class="sxs-lookup"><span data-stu-id="66b0c-180">The control appears sunken.</span></span>|  
|`Unchecked`|<span data-ttu-id="66b0c-181"><xref:System.Windows.Forms.CheckBox> 为空。</span><span class="sxs-lookup"><span data-stu-id="66b0c-181">The <xref:System.Windows.Forms.CheckBox> is empty.</span></span>|<span data-ttu-id="66b0c-182">该控件显示引发。</span><span class="sxs-lookup"><span data-stu-id="66b0c-182">The control appears raised.</span></span>|  
|`Indeterminate`|<span data-ttu-id="66b0c-183"><xref:System.Windows.Forms.CheckBox>显示一个复选标记，并为灰色。</span><span class="sxs-lookup"><span data-stu-id="66b0c-183">The <xref:System.Windows.Forms.CheckBox> displays a check mark and is shaded.</span></span>|<span data-ttu-id="66b0c-184">该控件以平面显示。</span><span class="sxs-lookup"><span data-stu-id="66b0c-184">The control appears flat.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="66b0c-185">下面的代码示例的标签中显示三个属性的值。</span><span class="sxs-lookup"><span data-stu-id="66b0c-185">The following code example displays the values of three properties in a label.</span></span> <span data-ttu-id="66b0c-186"><xref:System.Windows.Forms.CheckBox.ThreeState%2A>属性之间交替`true`和`false`与交替单击该控件会和<xref:System.Windows.Forms.CheckBox.CheckAlign%2A>之间交替`MiddleRight`和`MiddleLeft`值<xref:System.Drawing.ContentAlignment?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="66b0c-186">The <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property alternates between `true` and `false` with alternating clicks of the control and the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> alternates between the `MiddleRight` and `MiddleLeft` values of <xref:System.Drawing.ContentAlignment?displayProperty=nameWithType>.</span></span> <span data-ttu-id="66b0c-187">此示例演示如何将属性值更改为<xref:System.Windows.Forms.CheckBox.ThreeState%2A>将检查属性更改和控件。</span><span class="sxs-lookup"><span data-stu-id="66b0c-187">This example shows how the property values change as the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property changes and the control is checked.</span></span> <span data-ttu-id="66b0c-188">此示例需要<xref:System.Windows.Forms.CheckBox>，<xref:System.Windows.Forms.Label>和<xref:System.Windows.Forms.Button>已所有窗体上实例化和标签是足够大，以显示三行文本，以及对引用<xref:System.Drawing?displayProperty=nameWithType>命名空间。</span><span class="sxs-lookup"><span data-stu-id="66b0c-188">This example requires that a <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.Label> and <xref:System.Windows.Forms.Button> have all been instantiated on a form and that the label is large enough to display three lines of text, as well as a reference to the <xref:System.Drawing?displayProperty=nameWithType> namespace.</span></span> <span data-ttu-id="66b0c-189">在中应该调用此代码<xref:System.Windows.Forms.Control.Click>的控件的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="66b0c-189">This code should be called in the <xref:System.Windows.Forms.Control.Click> event handler of the control.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="66b0c-190">所分配的值不是 <see cref="T:System.Windows.Forms.CheckState" /> 枚举值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-190">The value assigned is not one of the <see cref="T:System.Windows.Forms.CheckState" /> enumeration values.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.CheckBox.Checked" />
        <altmember cref="P:System.Windows.Forms.CheckBox.ThreeState" />
      </Docs>
    </Member>
    <Member MemberName="CheckStateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CheckStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CheckStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckBox.CheckStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckStateChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CheckStateChanged;" />
      <MemberSignature Language="F#" Value="member this.CheckStateChanged : EventHandler " Usage="member this.CheckStateChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66b0c-191">当 <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> 属性的值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-191">Occurs when the value of the <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66b0c-192">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="66b0c-192">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66b0c-193">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="66b0c-193">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="66b0c-194">在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.CheckBox.CheckStateChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="66b0c-194">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.CheckBox.CheckStateChanged> event.</span></span> <span data-ttu-id="66b0c-195">此报告可帮助您了解当发生事件，并可以帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="66b0c-195">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="66b0c-196">若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="66b0c-196">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="66b0c-197">若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.CheckBox>名为`CheckBox1`。</span><span class="sxs-lookup"><span data-stu-id="66b0c-197">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CheckBox> named `CheckBox1`.</span></span> <span data-ttu-id="66b0c-198">然后，确保与事件处理程序<xref:System.Windows.Forms.CheckBox.CheckStateChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="66b0c-198">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.CheckBox.CheckStateChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#141](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#141)]
 [!code-vb[System.Windows.Forms.EventExamples#141](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#141)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="checkBox.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66b0c-199">为 <see cref="T:System.Windows.Forms.CheckBox" /> 控件创建一个新的辅助功能对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-199">Creates a new accessibility object for the <see cref="T:System.Windows.Forms.CheckBox" /> control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66b0c-200">控件的新 <see cref="T:System.Windows.Forms.CheckBox.CheckBoxAccessibleObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-200">A new <see cref="T:System.Windows.Forms.CheckBox.CheckBoxAccessibleObject" /> for the control.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66b0c-201">如果不显式调用 <xref:System.Windows.Forms.CheckBox.CreateAccessibilityInstance%2A> 方法，则在引用 <xref:System.Windows.Forms.Control.AccessibilityObject%2A> 属性时将会调用此方法。</span><span class="sxs-lookup"><span data-stu-id="66b0c-201">If you do not explicitly call the <xref:System.Windows.Forms.CheckBox.CreateAccessibilityInstance%2A> method, it will be called when the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property is referenced.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="66b0c-202">要获取或设置<xref:System.Windows.Forms.Control.AccessibilityObject%2A>属性，必须添加对引用`Accessibility`随.NET Framework 一起安装的程序集。</span><span class="sxs-lookup"><span data-stu-id="66b0c-202">To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="66b0c-203">
            <para>在重写<see cref="M:System.Windows.Forms.CheckBox.CreateAccessibilityInstance" />在派生类中，不应调用基类的<see cref="M:System.Windows.Forms.CheckBox.CreateAccessibilityInstance" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-203">
              <para>When overriding <see cref="M:System.Windows.Forms.CheckBox.CreateAccessibilityInstance" /> in a derived class, you should not call the base class's <see cref="M:System.Windows.Forms.CheckBox.CreateAccessibilityInstance" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.CheckBox.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66b0c-204">获取创建控件句柄时所需要的创建参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-204">Gets the required creation parameters when the control handle is created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66b0c-205">
            <see cref="T:System.Windows.Forms.CreateParams" />，包含创建控件的句柄时所需的创建参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-205">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="66b0c-206">下面的代码示例扩展<xref:System.Windows.Forms.Control.CreateParams%2A>属性<xref:System.Windows.Forms.Button>派生类。</span><span class="sxs-lookup"><span data-stu-id="66b0c-206">The following code example extends the <xref:System.Windows.Forms.Control.CreateParams%2A> property of a <xref:System.Windows.Forms.Button> derived class.</span></span> <span data-ttu-id="66b0c-207"><xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=nameWithType>属性更改，这将导致按钮以显示<xref:System.Drawing.Icon>而非<xref:System.Drawing.Image>。</span><span class="sxs-lookup"><span data-stu-id="66b0c-207">The <xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=nameWithType> property is changed, which causes the button to display an <xref:System.Drawing.Icon> rather than an <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="66b0c-208">此示例要求你拥有从继承的类<xref:System.Windows.Forms.Button>类。</span><span class="sxs-lookup"><span data-stu-id="66b0c-208">This example requires that you have a class that inherits from the <xref:System.Windows.Forms.Button> class.</span></span>  
  
 [!code-cpp[CreateParams#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CreateParams/CPP/createparams.cpp#3)]
 [!code-csharp[CreateParams#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CreateParams/CS/createparams.cs#3)]
 [!code-vb[CreateParams#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CreateParams/VB/createparams.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="66b0c-209">用于操作与非托管代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-209">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="66b0c-210">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-210">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.CheckBox.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66b0c-211">获取控件的默认大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-211">Gets the default size of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66b0c-212">默认大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-212">The default size.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckBox.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberSignature Language="F#" Value="member this.DoubleClick : EventHandler " Usage="member this.DoubleClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66b0c-213">当用户双击 <see cref="T:System.Windows.Forms.CheckBox" /> 控件时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-213">Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.CheckBox" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66b0c-214">默认情况下，<xref:System.Windows.Forms.ControlStyles.StandardClick>和<xref:System.Windows.Forms.ControlStyles.StandardDoubleClick>枚举设置为 false<xref:System.Windows.Forms.CheckBox>控件，与<xref:System.Windows.Forms.CheckBox.DoubleClick>不会引发事件。</span><span class="sxs-lookup"><span data-stu-id="66b0c-214">By default, the <xref:System.Windows.Forms.ControlStyles.StandardClick> and <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick> enumerations are set to false for the <xref:System.Windows.Forms.CheckBox> control, and the <xref:System.Windows.Forms.CheckBox.DoubleClick> event is not raised.</span></span>  
  
 <span data-ttu-id="66b0c-215">此事件与此类无关。</span><span class="sxs-lookup"><span data-stu-id="66b0c-215">This event is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckBox.MouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDoubleClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.MouseDoubleClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseDoubleClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66b0c-216">当用户双击 <see cref="T:System.Windows.Forms.CheckBox" /> 控件时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-216">Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.CheckBox" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66b0c-217">默认情况下，<xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType>和<xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType>样式位将设置为`false`为<xref:System.Windows.Forms.CheckBox>控件，与<xref:System.Windows.Forms.CheckBox.MouseDoubleClick>不会引发事件。</span><span class="sxs-lookup"><span data-stu-id="66b0c-217">By default, the <xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType> and <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType> style bits are set to `false` for the <xref:System.Windows.Forms.CheckBox> control, and the <xref:System.Windows.Forms.CheckBox.MouseDoubleClick> event is not raised.</span></span>  
  
 <span data-ttu-id="66b0c-218">此事件与此类无关。</span><span class="sxs-lookup"><span data-stu-id="66b0c-218">This event is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAppearanceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAppearanceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAppearanceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnAppearanceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAppearanceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAppearanceChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAppearanceChanged : EventArgs -&gt; unit&#xA;override this.OnAppearanceChanged : EventArgs -&gt; unit" Usage="checkBox.OnAppearanceChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="66b0c-219">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-219">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66b0c-220">引发 <see cref="E:System.Windows.Forms.CheckBox.AppearanceChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-220">Raises the <see cref="E:System.Windows.Forms.CheckBox.AppearanceChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66b0c-221">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="66b0c-221">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="66b0c-222">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="66b0c-222">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="66b0c-223"><xref:System.Windows.Forms.CheckBox.OnAppearanceChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="66b0c-223">The <xref:System.Windows.Forms.CheckBox.OnAppearanceChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="66b0c-224">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="66b0c-224">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="66b0c-225">
            <para>在重写<see cref="M:System.Windows.Forms.CheckBox.OnAppearanceChanged(System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.CheckBox.OnAppearanceChanged(System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-225">
              <para>When overriding <see cref="M:System.Windows.Forms.CheckBox.OnAppearanceChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.CheckBox.OnAppearanceChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.CheckBox.AppearanceChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnCheckedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCheckedChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCheckedChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnCheckedChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCheckedChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCheckedChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCheckedChanged : EventArgs -&gt; unit&#xA;override this.OnCheckedChanged : EventArgs -&gt; unit" Usage="checkBox.OnCheckedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="66b0c-226">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-226">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66b0c-227">引发 <see cref="E:System.Windows.Forms.CheckBox.CheckedChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-227">Raises the <see cref="E:System.Windows.Forms.CheckBox.CheckedChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66b0c-228">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="66b0c-228">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="66b0c-229">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="66b0c-229">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="66b0c-230"><xref:System.Windows.Forms.CheckBox.OnCheckedChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="66b0c-230">The <xref:System.Windows.Forms.CheckBox.OnCheckedChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="66b0c-231">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="66b0c-231">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="66b0c-232">
            <para>在重写<see cref="M:System.Windows.Forms.CheckBox.OnCheckedChanged(System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.CheckBox.OnCheckedChanged(System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-232">
              <para>When overriding <see cref="M:System.Windows.Forms.CheckBox.OnCheckedChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.CheckBox.OnCheckedChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.CheckBox.CheckedChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnCheckStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCheckStateChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCheckStateChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnCheckStateChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCheckStateChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCheckStateChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCheckStateChanged : EventArgs -&gt; unit&#xA;override this.OnCheckStateChanged : EventArgs -&gt; unit" Usage="checkBox.OnCheckStateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="66b0c-233">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-233">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66b0c-234">引发 <see cref="E:System.Windows.Forms.CheckBox.CheckStateChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-234">Raises the <see cref="E:System.Windows.Forms.CheckBox.CheckStateChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66b0c-235">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="66b0c-235">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="66b0c-236">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="66b0c-236">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="66b0c-237"><xref:System.Windows.Forms.CheckBox.OnCheckStateChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="66b0c-237">The <xref:System.Windows.Forms.CheckBox.OnCheckStateChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="66b0c-238">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="66b0c-238">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="66b0c-239">
            <para>在重写<see cref="M:System.Windows.Forms.CheckBox.OnCheckStateChanged(System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.CheckBox.OnCheckStateChanged(System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-239">
              <para>When overriding <see cref="M:System.Windows.Forms.CheckBox.OnCheckStateChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.CheckBox.OnCheckStateChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.CheckBox.CheckStateChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected override void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnClick : EventArgs -&gt; unit" Usage="checkBox.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="66b0c-240">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-240">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66b0c-241">引发 <see cref="E:System.Windows.Forms.Control.Click" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-241">Raises the <see cref="E:System.Windows.Forms.Control.Click" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66b0c-242"><xref:System.Windows.Forms.CheckBox.OnClick%2A>方法更改<xref:System.Windows.Forms.CheckBox.CheckState%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="66b0c-242">The <xref:System.Windows.Forms.CheckBox.OnClick%2A> method changes the <xref:System.Windows.Forms.CheckBox.CheckState%2A> property.</span></span> <span data-ttu-id="66b0c-243">如果<xref:System.Windows.Forms.CheckBox.ThreeState%2A>属性设置为`true`，因为在后续的单击<xref:System.Windows.Forms.CheckBox>将导致<xref:System.Windows.Forms.CheckBox.OnClick%2A>循环运行的所有值<xref:System.Windows.Forms.CheckBox.CheckState%2A>枚举。</span><span class="sxs-lookup"><span data-stu-id="66b0c-243">If the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property is set to `true`, subsequent clicks of the <xref:System.Windows.Forms.CheckBox> will result in <xref:System.Windows.Forms.CheckBox.OnClick%2A> cycling through all the values of the <xref:System.Windows.Forms.CheckBox.CheckState%2A> enumeration.</span></span> <span data-ttu-id="66b0c-244">否则为<xref:System.Windows.Forms.CheckBox.OnClick%2A>之间切换<xref:System.Windows.Forms.CheckState.Checked>和<xref:System.Windows.Forms.CheckState.Unchecked>。</span><span class="sxs-lookup"><span data-stu-id="66b0c-244">Otherwise, <xref:System.Windows.Forms.CheckBox.OnClick%2A> switches between <xref:System.Windows.Forms.CheckState.Checked> and <xref:System.Windows.Forms.CheckState.Unchecked>.</span></span>  
  
 <span data-ttu-id="66b0c-245">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="66b0c-245">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="66b0c-246">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="66b0c-246">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="66b0c-247"><xref:System.Windows.Forms.CheckBox.OnClick%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="66b0c-247">The <xref:System.Windows.Forms.CheckBox.OnClick%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="66b0c-248">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="66b0c-248">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="66b0c-249">
            <para>在重写<see cref="M:System.Windows.Forms.CheckBox.OnClick(System.EventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Windows.Forms.CheckBox.OnClick(System.EventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-249">
              <para>When overriding <see cref="M:System.Windows.Forms.CheckBox.OnClick(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.CheckBox.OnClick(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="checkBox.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="66b0c-250">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-250">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66b0c-251">引发 <see cref="E:System.Windows.Forms.Control.HandleCreated" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-251">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="checkBox.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="66b0c-252">包含事件数据的 <see cref="T:System.Windows.Forms.KeyEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-252">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66b0c-253">引发 <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-253">Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="checkBox.OnMouseUp mevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent">
          <span data-ttu-id="66b0c-254">包含事件数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-254">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66b0c-255">引发 OnMouseUp 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-255">Raises the OnMouseUp event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessMnemonic(char charCode);" />
      <MemberSignature Language="F#" Value="override this.ProcessMnemonic : char -&gt; bool" Usage="checkBox.ProcessMnemonic charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">
          <span data-ttu-id="66b0c-256">要处理的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-256">The character to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66b0c-257">处理助记键字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-257">Processes a mnemonic character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66b0c-258">如果字符由控件作为助记键处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-258">
              <see langword="true" /> if the character was processed as a mnemonic by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66b0c-259">调用此方法以使控件有机会处理助记键字符。</span><span class="sxs-lookup"><span data-stu-id="66b0c-259">This method is called to give a control the opportunity to process a mnemonic character.</span></span> <span data-ttu-id="66b0c-260">方法应确定控件是否处于处理助记键的状态，以及是否给定的字符是否表示助记键。</span><span class="sxs-lookup"><span data-stu-id="66b0c-260">The method should determine whether the control is in a state to process mnemonics and if whether the given character represents a mnemonic.</span></span> <span data-ttu-id="66b0c-261">如果通过因此，此方法应执行与助记键并返回关联的操作`true`。</span><span class="sxs-lookup"><span data-stu-id="66b0c-261">If so, the method should perform the action associated with the mnemonic and return `true`.</span></span> <span data-ttu-id="66b0c-262">如果不是，该方法应返回`false`。</span><span class="sxs-lookup"><span data-stu-id="66b0c-262">If not, the method should return `false`.</span></span> <span data-ttu-id="66b0c-263">通常使用此方法的实现<xref:System.Windows.Forms.Control.IsMnemonic%2A>方法来确定给定的字符是否与助记键在控件的文本相匹配。</span><span class="sxs-lookup"><span data-stu-id="66b0c-263">Implementations of this method often use the <xref:System.Windows.Forms.Control.IsMnemonic%2A> method to determine whether the given character matches a mnemonic in the control's text.</span></span>  
  
 <span data-ttu-id="66b0c-264">例如:</span><span class="sxs-lookup"><span data-stu-id="66b0c-264">For example:</span></span>  
  
```csharp  
if (CanSelect && IsMnemonic(charCode, MyControl.Text) {  
    // Perform action associated with mnemonic.  
    }  
```  
  
 <span data-ttu-id="66b0c-265">这种默认实现<xref:System.Windows.Forms.Control.ProcessMnemonic%2A>方法只返回`false`以指示该控件具有没有助记键。</span><span class="sxs-lookup"><span data-stu-id="66b0c-265">This default implementation of the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method simply returns `false` to indicate that the control has no mnemonic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66b0c-266">下面的代码示例演示的按钮类，并重写扩展<xref:System.Windows.Forms.Control.ProcessMnemonic%2A>方法以显示自定义行为。</span><span class="sxs-lookup"><span data-stu-id="66b0c-266">The following code example demonstrates an extension of the button class that overrides the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method to exhibit custom behavior.</span></span> <span data-ttu-id="66b0c-267">该示例还演示了利用<xref:System.Windows.Forms.Control.CanSelect%2A>和<xref:System.Windows.Forms.Control.IsMnemonic%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="66b0c-267">The example also demonstrates the use of the <xref:System.Windows.Forms.Control.CanSelect%2A> and <xref:System.Windows.Forms.Control.IsMnemonic%2A> properties.</span></span> <span data-ttu-id="66b0c-268">若要运行此示例，将窗体类，在同一文件后面粘贴下面的代码。</span><span class="sxs-lookup"><span data-stu-id="66b0c-268">To run this example, paste the following code after a form class, in the same file.</span></span> <span data-ttu-id="66b0c-269">添加一个按钮类型`MnemonicButton`到窗体。</span><span class="sxs-lookup"><span data-stu-id="66b0c-269">Add a button of type `MnemonicButton` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public override System.Drawing.ContentAlignment TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment TextAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.TextAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TextAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::ContentAlignment TextAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlign : System.Drawing.ContentAlignment with get, set" Usage="System.Windows.Forms.CheckBox.TextAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66b0c-270">获取或设置 <see cref="T:System.Windows.Forms.CheckBox" /> 控件上的文本对齐方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-270">Gets or sets the alignment of the text on the <see cref="T:System.Windows.Forms.CheckBox" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66b0c-271">
            <see cref="T:System.Drawing.ContentAlignment" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-271">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span>
          </span>
          <span data-ttu-id="66b0c-272">默认值为 <see cref="F:System.Drawing.ContentAlignment.MiddleLeft" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-272">The default is <see cref="F:System.Drawing.ContentAlignment.MiddleLeft" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreeState">
      <MemberSignature Language="C#" Value="public bool ThreeState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThreeState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.ThreeState" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThreeState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ThreeState : bool with get, set" Usage="System.Windows.Forms.CheckBox.ThreeState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66b0c-273">获取或设置一个值，该值指示此 <see cref="T:System.Windows.Forms.CheckBox" /> 是否允许三种复选状态而不是两种。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-273">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.CheckBox" /> will allow three check states rather than two.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66b0c-274">如果 <see cref="T:System.Windows.Forms.CheckBox" /> 可以显示三种复选状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-274">
              <see langword="true" /> if the <see cref="T:System.Windows.Forms.CheckBox" /> is able to display three check states; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="66b0c-275">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-275">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66b0c-276">如果<xref:System.Windows.Forms.CheckBox.ThreeState%2A>属性设置为`false`、<xref:System.Windows.Forms.CheckBox.CheckState%2A>属性值只能设置为`Indeterminate`值<xref:System.Windows.Forms.CheckState?displayProperty=nameWithType>在代码中并不由用户交互。</span><span class="sxs-lookup"><span data-stu-id="66b0c-276">If the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property is set to `false`, the <xref:System.Windows.Forms.CheckBox.CheckState%2A> property value can only be set to the `Indeterminate` value of <xref:System.Windows.Forms.CheckState?displayProperty=nameWithType> in code and not by user interaction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66b0c-277">下面的代码示例的标签中显示三个属性的值。</span><span class="sxs-lookup"><span data-stu-id="66b0c-277">The following code example displays the values of three properties in a label.</span></span> <span data-ttu-id="66b0c-278"><xref:System.Windows.Forms.CheckBox.ThreeState%2A>属性之间交替`true`和`false`与交替单击该控件会和<xref:System.Windows.Forms.CheckBox.CheckAlign%2A>之间交替`MiddleRight`和`MiddleLeft`值<xref:System.Drawing.ContentAlignment?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="66b0c-278">The <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property alternates between `true` and `false` with alternating clicks of the control and the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> alternates between the `MiddleRight` and `MiddleLeft` values of <xref:System.Drawing.ContentAlignment?displayProperty=nameWithType>.</span></span> <span data-ttu-id="66b0c-279">此示例演示如何将属性值更改为<xref:System.Windows.Forms.CheckBox.ThreeState%2A>将检查属性更改和控件。</span><span class="sxs-lookup"><span data-stu-id="66b0c-279">This example shows how the property values change as the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property changes and the control is checked.</span></span> <span data-ttu-id="66b0c-280">此代码需要<xref:System.Windows.Forms.CheckBox>，<xref:System.Windows.Forms.Label>和<xref:System.Windows.Forms.Button>已所有窗体上实例化和标签是足够大，以显示三行文本，以及对引用<xref:System.Drawing?displayProperty=nameWithType>命名空间。</span><span class="sxs-lookup"><span data-stu-id="66b0c-280">This code requires that a <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.Label> and <xref:System.Windows.Forms.Button> have all been instantiated on a form and that the label is large enough to display three lines of text, as well as a reference to the <xref:System.Drawing?displayProperty=nameWithType> namespace.</span></span> <span data-ttu-id="66b0c-281">在中应该调用此代码<xref:System.Windows.Forms.Control.Click>的控件的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="66b0c-281">This code should be called in the <xref:System.Windows.Forms.Control.Click> event handler of the control.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="checkBox.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66b0c-282">返回表示当前 <see cref="T:System.Windows.Forms.CheckBox" /> 控件的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-282">Returns a string that represents the current <see cref="T:System.Windows.Forms.CheckBox" /> control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66b0c-283">规定控件类型和 <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> 属性的状态的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66b0c-283">A string that states the control type and the state of the <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> property.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>