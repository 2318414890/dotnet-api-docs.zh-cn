<Type Name="ItemCheckEventArgs" FullName="System.Windows.Forms.ItemCheckEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4e36065c019366bb0d8240203c76bc2b39c63243" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30647671" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ItemCheckEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ItemCheckEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ItemCheckEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ItemCheckEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ItemCheckEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>为 <see cref="E:System.Windows.Forms.CheckedListBox.ItemCheck" /> 和 <see cref="T:System.Windows.Forms.CheckedListBox" /> 控件的 <see cref="T:System.Windows.Forms.ListView" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CheckedListBox.ItemCheck>时选中的列表框中的项的选中的状态更改事件发生。 <xref:System.Windows.Forms.ItemCheckEventArgs>类指定项添加到更改，该项目，该复选框的当前值和要设置的复选框的新值的索引。  
  
 有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何检查<xref:System.Windows.Forms.ListView>处理控件<xref:System.Windows.Forms.ListView.ItemCheck?displayProperty=nameWithType>事件。 该方法使用<xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A>和<xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A>属性<xref:System.Windows.Forms.ItemCheckEventArgs>对象来检索并计算选定的菜单项的价格。 若要运行此示例，请粘贴下面的代码中一个窗体包含<xref:System.Windows.Forms.ListView>名为`ListView1`和<xref:System.Windows.Forms.TextBox>名为`Textbox1`。 调用`InititalizeListView`从窗体的构造函数的方法或`Load`方法。 确保所有事件都都使用其事件处理方法关联。  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.CheckedListBox" />
    <altmember cref="E:System.Windows.Forms.CheckedListBox.ItemCheck" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ItemCheckEventArgs (int index, System.Windows.Forms.CheckState newCheckValue, System.Windows.Forms.CheckState currentValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 index, valuetype System.Windows.Forms.CheckState newCheckValue, valuetype System.Windows.Forms.CheckState currentValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ItemCheckEventArgs.#ctor(System.Int32,System.Windows.Forms.CheckState,System.Windows.Forms.CheckState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (index As Integer, newCheckValue As CheckState, currentValue As CheckState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ItemCheckEventArgs(int index, System::Windows::Forms::CheckState newCheckValue, System::Windows::Forms::CheckState currentValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="newCheckValue" Type="System.Windows.Forms.CheckState" />
        <Parameter Name="currentValue" Type="System.Windows.Forms.CheckState" />
      </Parameters>
      <Docs>
        <param name="index">要更改的项的从零开始的索引。</param>
        <param name="newCheckValue">
          <see cref="T:System.Windows.Forms.CheckState" /> 值之一，该值指示是否将该项的复选框更改为选中、未选中或不确定。</param>
        <param name="currentValue">
          <see cref="T:System.Windows.Forms.CheckState" /> 值之一，该值指示当前该项的复选框是否为选中、未选中或不确定。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.ItemCheckEventArgs" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="CurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckState CurrentValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CheckState CurrentValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ItemCheckEventArgs.CurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentValue As CheckState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckState CurrentValue { System::Windows::Forms::CheckState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示该项的复选框的当前状态。</summary>
        <value>
          <see cref="T:System.Windows.Forms.CheckState" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性使您能够确定中的指定项的复选状态<xref:System.Windows.Forms.CheckedListBox>检查前状态将更改。  
  
   
  
## Examples  
 下面的代码示例演示如何检查<xref:System.Windows.Forms.ListView>处理控件<xref:System.Windows.Forms.ListView.ItemChecked?displayProperty=nameWithType>事件。 该方法使用<xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A>和<xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A>属性<xref:System.Windows.Forms.ItemCheckEventArgs>对象来检索并计算选定的菜单项的价格。 若要运行此示例，请粘贴下面的代码中一个窗体包含<xref:System.Windows.Forms.ListView>名为`ListView1`和<xref:System.Windows.Forms.TextBox>名为`Textbox1`。 调用`InititalizeListView`从窗体的构造函数的方法或`Load`方法。 确保所有事件都都使用其事件处理方法关联。  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ItemCheckEventArgs.NewValue" />
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ItemCheckEventArgs.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要更改的项的从零开始的索引。</summary>
        <value>要更改的项的从零开始的索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用此属性来确定在哪一项的复选框<xref:System.Windows.Forms.CheckedListBox>正在更改。  
  
   
  
## Examples  
 下面的代码示例演示如何检查<xref:System.Windows.Forms.ListView>处理控件<xref:System.Windows.Forms.ListView.ItemChecked?displayProperty=nameWithType>事件。 该方法使用<xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A>和<xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A>属性<xref:System.Windows.Forms.ItemCheckEventArgs>对象来检索并计算选定的菜单项的价格。 若要运行此示例，请粘贴下面的代码中一个窗体包含<xref:System.Windows.Forms.ListView>名为`ListView1`和<xref:System.Windows.Forms.TextBox>名为`Textbox1`。 调用`InititalizeListView`从窗体的构造函数的方法或`Load`方法。 确保所有事件都都使用其事件处理方法关联。  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckState NewValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CheckState NewValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ItemCheckEventArgs.NewValue" />
      <MemberSignature Language="VB.NET" Value="Public Property NewValue As CheckState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckState NewValue { System::Windows::Forms::CheckState get(); void set(System::Windows::Forms::CheckState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否将该项的复选框设置为选中、未选中或不确定。</summary>
        <value>
          <see cref="T:System.Windows.Forms.CheckState" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性使您能够确定指定的项的新检查状态更改的复选状态之前<xref:System.Windows.Forms.CheckedListBox>控件。 除了确定新的检查状态，你可以在事件处理程序中使用此属性<xref:System.Windows.Forms.CheckedListBox.ItemCheck>事件的状态更改为比指定不同的复选状态。 例如，如果用户位于中的项旁边的复选标记<xref:System.Windows.Forms.CheckedListBox>你确定不应检查基于你的应用程序的状态，您可以通过将此属性设置为其以前的设置或 t 覆盖处于选中状态更改o 不同检查状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。 在示例中，事件处理程序报告的匹配项<xref:System.Windows.Forms.CheckedListBox.ItemCheck?displayProperty=nameWithType>事件。 此报告可帮助您了解当发生事件，并可以帮助您进行调试。 若要报告或频繁发生的事件上多个事件，请考虑替换<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>与<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或追加到一个多行消息<xref:System.Windows.Forms.TextBox>。  
  
 若要运行此代码示例，请将其粘贴到包含类型的实例的项目<xref:System.Windows.Forms.CheckedListBox>名为`CheckedListBox1`。 然后，确保与事件处理程序<xref:System.Windows.Forms.CheckedListBox.ItemCheck?displayProperty=nameWithType>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#156](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#156)]
 [!code-vb[System.Windows.Forms.EventExamples#156](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#156)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ItemCheckEventArgs.CurrentValue" />
      </Docs>
    </Member>
  </Members>
</Type>